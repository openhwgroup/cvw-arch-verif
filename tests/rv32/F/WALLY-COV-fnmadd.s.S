///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/F//WALLY-COV-fnmadd.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.314155
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fnmadd.s f4, f13, f24, f30 # perform first operation
fnmadd.s f10, f4, f5, f11 # perform second operation

# Testcase cmp_gpr_hazard raw test
fnmadd.s f20, f23, f19, f18 # perform first operation
fnmadd.s f5, f15, f20, f21 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.s f21, f14, f7, f12 # perform first operation
fnmadd.s f21, f28, f3, f8 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.s f30, f9, f12, f19 # perform first operation
fnmadd.s f30, f27, f5, f26 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.s f1, f10, f8, f26 # perform first operation
fnmadd.s f10, f29, f8, f18 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.s f29, f26, f22, f8 # perform first operation
fnmadd.s f22, f13, f21, f15 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xb65f0655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bfb65bb # load x3 with value 0x9bfb65bb
sw x3, 0(x2) # store 0x9bfb65bb in memory
flw f0, 0(x2) # load 0x9bfb65bb from memory into f0
li x3, 0xdfc20940 # load x3 with value 0xdfc20940
sw x3, 0(x2) # store 0xdfc20940 in memory
flw f12, 0(x2) # load 0xdfc20940 from memory into f12
li x3, 0x06ac2517 # load x3 with value 0x06ac2517
sw x3, 0(x2) # store 0x06ac2517 in memory
flw f20, 0(x2) # load 0x06ac2517 from memory into f20
fnmadd.s f0, f0, f12, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0xf4567742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x84aa0a18 # load x3 with value 0x84aa0a18
sw x3, 0(x2) # store 0x84aa0a18 in memory
flw f1, 0(x2) # load 0x84aa0a18 from memory into f1
li x3, 0x0976bcea # load x3 with value 0x0976bcea
sw x3, 0(x2) # store 0x0976bcea in memory
flw f27, 0(x2) # load 0x0976bcea from memory into f27
li x3, 0x2a690d0d # load x3 with value 0x2a690d0d
sw x3, 0(x2) # store 0x2a690d0d in memory
flw f22, 0(x2) # load 0x2a690d0d from memory into f22
fnmadd.s f1, f1, f27, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x0198fcc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57e034e3 # load x3 with value 0x57e034e3
sw x3, 0(x2) # store 0x57e034e3 in memory
flw f2, 0(x2) # load 0x57e034e3 from memory into f2
li x3, 0xaab95733 # load x3 with value 0xaab95733
sw x3, 0(x2) # store 0xaab95733 in memory
flw f31, 0(x2) # load 0xaab95733 from memory into f31
li x3, 0xabb96cc3 # load x3 with value 0xabb96cc3
sw x3, 0(x2) # store 0xabb96cc3 in memory
flw f11, 0(x2) # load 0xabb96cc3 from memory into f11
fnmadd.s f2, f2, f31, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x40c01568 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x280f9b30 # load x3 with value 0x280f9b30
sw x3, 0(x2) # store 0x280f9b30 in memory
flw f3, 0(x2) # load 0x280f9b30 from memory into f3
li x3, 0xff1542b3 # load x3 with value 0xff1542b3
sw x3, 0(x2) # store 0xff1542b3 in memory
flw f29, 0(x2) # load 0xff1542b3 from memory into f29
li x3, 0x5e96c67e # load x3 with value 0x5e96c67e
sw x3, 0(x2) # store 0x5e96c67e in memory
flw f8, 0(x2) # load 0x5e96c67e from memory into f8
fnmadd.s f3, f3, f29, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xc0da4bde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x541e9181 # load x3 with value 0x541e9181
sw x3, 0(x2) # store 0x541e9181 in memory
flw f4, 0(x2) # load 0x541e9181 from memory into f4
li x3, 0x9b15f44f # load x3 with value 0x9b15f44f
sw x3, 0(x2) # store 0x9b15f44f in memory
flw f31, 0(x2) # load 0x9b15f44f from memory into f31
li x3, 0xc76fa3ac # load x3 with value 0xc76fa3ac
sw x3, 0(x2) # store 0xc76fa3ac in memory
flw f29, 0(x2) # load 0xc76fa3ac from memory into f29
fnmadd.s f4, f4, f31, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xeac90a73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x61bd590c # load x3 with value 0x61bd590c
sw x3, 0(x2) # store 0x61bd590c in memory
flw f5, 0(x2) # load 0x61bd590c from memory into f5
li x3, 0xeae76348 # load x3 with value 0xeae76348
sw x3, 0(x2) # store 0xeae76348 in memory
flw f2, 0(x2) # load 0xeae76348 from memory into f2
li x3, 0x7a294ce6 # load x3 with value 0x7a294ce6
sw x3, 0(x2) # store 0x7a294ce6 in memory
flw f13, 0(x2) # load 0x7a294ce6 from memory into f13
fnmadd.s f5, f5, f2, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xd2be47a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x01bdcc9b # load x3 with value 0x01bdcc9b
sw x3, 0(x2) # store 0x01bdcc9b in memory
flw f6, 0(x2) # load 0x01bdcc9b from memory into f6
li x3, 0x2497f2c0 # load x3 with value 0x2497f2c0
sw x3, 0(x2) # store 0x2497f2c0 in memory
flw f8, 0(x2) # load 0x2497f2c0 from memory into f8
li x3, 0x665de8fb # load x3 with value 0x665de8fb
sw x3, 0(x2) # store 0x665de8fb in memory
flw f30, 0(x2) # load 0x665de8fb from memory into f30
fnmadd.s f6, f6, f8, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x91b95c30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1aa5d2e # load x3 with value 0xa1aa5d2e
sw x3, 0(x2) # store 0xa1aa5d2e in memory
flw f7, 0(x2) # load 0xa1aa5d2e from memory into f7
li x3, 0x87b29f2d # load x3 with value 0x87b29f2d
sw x3, 0(x2) # store 0x87b29f2d in memory
flw f9, 0(x2) # load 0x87b29f2d from memory into f9
li x3, 0xdb0f3992 # load x3 with value 0xdb0f3992
sw x3, 0(x2) # store 0xdb0f3992 in memory
flw f11, 0(x2) # load 0xdb0f3992 from memory into f11
fnmadd.s f7, f7, f9, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0xa5355091 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa8365505 # load x3 with value 0xa8365505
sw x3, 0(x2) # store 0xa8365505 in memory
flw f8, 0(x2) # load 0xa8365505 from memory into f8
li x3, 0x16b6e070 # load x3 with value 0x16b6e070
sw x3, 0(x2) # store 0x16b6e070 in memory
flw f4, 0(x2) # load 0x16b6e070 from memory into f4
li x3, 0xae9ffba0 # load x3 with value 0xae9ffba0
sw x3, 0(x2) # store 0xae9ffba0 in memory
flw f9, 0(x2) # load 0xae9ffba0 from memory into f9
fnmadd.s f8, f8, f4, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x449118e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5960701e # load x3 with value 0x5960701e
sw x3, 0(x2) # store 0x5960701e in memory
flw f9, 0(x2) # load 0x5960701e from memory into f9
li x3, 0x45a25398 # load x3 with value 0x45a25398
sw x3, 0(x2) # store 0x45a25398 in memory
flw f1, 0(x2) # load 0x45a25398 from memory into f1
li x3, 0x797aee01 # load x3 with value 0x797aee01
sw x3, 0(x2) # store 0x797aee01 in memory
flw f6, 0(x2) # load 0x797aee01 from memory into f6
fnmadd.s f9, f9, f1, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xcae75b93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x04b6c019 # load x3 with value 0x04b6c019
sw x3, 0(x2) # store 0x04b6c019 in memory
flw f10, 0(x2) # load 0x04b6c019 from memory into f10
li x3, 0xe4759672 # load x3 with value 0xe4759672
sw x3, 0(x2) # store 0xe4759672 in memory
flw f19, 0(x2) # load 0xe4759672 from memory into f19
li x3, 0x95aababc # load x3 with value 0x95aababc
sw x3, 0(x2) # store 0x95aababc in memory
flw f4, 0(x2) # load 0x95aababc from memory into f4
fnmadd.s f10, f10, f19, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0xdd38d64f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x78c06fff # load x3 with value 0x78c06fff
sw x3, 0(x2) # store 0x78c06fff in memory
flw f11, 0(x2) # load 0x78c06fff from memory into f11
li x3, 0x9463feb6 # load x3 with value 0x9463feb6
sw x3, 0(x2) # store 0x9463feb6 in memory
flw f12, 0(x2) # load 0x9463feb6 from memory into f12
li x3, 0x5af4c057 # load x3 with value 0x5af4c057
sw x3, 0(x2) # store 0x5af4c057 in memory
flw f25, 0(x2) # load 0x5af4c057 from memory into f25
fnmadd.s f11, f11, f12, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x72637633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff8492d # load x3 with value 0xfff8492d
sw x3, 0(x2) # store 0xfff8492d in memory
flw f12, 0(x2) # load 0xfff8492d from memory into f12
li x3, 0x9df99c8d # load x3 with value 0x9df99c8d
sw x3, 0(x2) # store 0x9df99c8d in memory
flw f4, 0(x2) # load 0x9df99c8d from memory into f4
li x3, 0x787377aa # load x3 with value 0x787377aa
sw x3, 0(x2) # store 0x787377aa in memory
flw f15, 0(x2) # load 0x787377aa from memory into f15
fnmadd.s f12, f12, f4, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x8140c791 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc483a420 # load x3 with value 0xc483a420
sw x3, 0(x2) # store 0xc483a420 in memory
flw f13, 0(x2) # load 0xc483a420 from memory into f13
li x3, 0x639e29cf # load x3 with value 0x639e29cf
sw x3, 0(x2) # store 0x639e29cf in memory
flw f27, 0(x2) # load 0x639e29cf from memory into f27
li x3, 0x2f11f117 # load x3 with value 0x2f11f117
sw x3, 0(x2) # store 0x2f11f117 in memory
flw f3, 0(x2) # load 0x2f11f117 from memory into f3
fnmadd.s f13, f13, f27, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x5cb1ab4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15eba16f # load x3 with value 0x15eba16f
sw x3, 0(x2) # store 0x15eba16f in memory
flw f14, 0(x2) # load 0x15eba16f from memory into f14
li x3, 0x39f95c1a # load x3 with value 0x39f95c1a
sw x3, 0(x2) # store 0x39f95c1a in memory
flw f25, 0(x2) # load 0x39f95c1a from memory into f25
li x3, 0xc3faae1a # load x3 with value 0xc3faae1a
sw x3, 0(x2) # store 0xc3faae1a in memory
flw f16, 0(x2) # load 0xc3faae1a from memory into f16
fnmadd.s f14, f14, f25, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x96d0db0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3754589 # load x3 with value 0xa3754589
sw x3, 0(x2) # store 0xa3754589 in memory
flw f15, 0(x2) # load 0xa3754589 from memory into f15
li x3, 0x6459a4dd # load x3 with value 0x6459a4dd
sw x3, 0(x2) # store 0x6459a4dd in memory
flw f14, 0(x2) # load 0x6459a4dd from memory into f14
li x3, 0x63ab7b1c # load x3 with value 0x63ab7b1c
sw x3, 0(x2) # store 0x63ab7b1c in memory
flw f19, 0(x2) # load 0x63ab7b1c from memory into f19
fnmadd.s f15, f15, f14, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x0410017b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe9f96938 # load x3 with value 0xe9f96938
sw x3, 0(x2) # store 0xe9f96938 in memory
flw f16, 0(x2) # load 0xe9f96938 from memory into f16
li x3, 0xb262cac5 # load x3 with value 0xb262cac5
sw x3, 0(x2) # store 0xb262cac5 in memory
flw f22, 0(x2) # load 0xb262cac5 from memory into f22
li x3, 0xe9a26b4a # load x3 with value 0xe9a26b4a
sw x3, 0(x2) # store 0xe9a26b4a in memory
flw f24, 0(x2) # load 0xe9a26b4a from memory into f24
fnmadd.s f16, f16, f22, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x75728c25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2dd9cc7 # load x3 with value 0xa2dd9cc7
sw x3, 0(x2) # store 0xa2dd9cc7 in memory
flw f17, 0(x2) # load 0xa2dd9cc7 from memory into f17
li x3, 0xd68a082b # load x3 with value 0xd68a082b
sw x3, 0(x2) # store 0xd68a082b in memory
flw f13, 0(x2) # load 0xd68a082b from memory into f13
li x3, 0x64b94957 # load x3 with value 0x64b94957
sw x3, 0(x2) # store 0x64b94957 in memory
flw f12, 0(x2) # load 0x64b94957 from memory into f12
fnmadd.s f17, f17, f13, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x0f37ac63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5dff9f3d # load x3 with value 0x5dff9f3d
sw x3, 0(x2) # store 0x5dff9f3d in memory
flw f18, 0(x2) # load 0x5dff9f3d from memory into f18
li x3, 0xc729dd9c # load x3 with value 0xc729dd9c
sw x3, 0(x2) # store 0xc729dd9c in memory
flw f30, 0(x2) # load 0xc729dd9c from memory into f30
li x3, 0x4eff3d73 # load x3 with value 0x4eff3d73
sw x3, 0(x2) # store 0x4eff3d73 in memory
flw f22, 0(x2) # load 0x4eff3d73 from memory into f22
fnmadd.s f18, f18, f30, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x706d9a89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x229594a4 # load x3 with value 0x229594a4
sw x3, 0(x2) # store 0x229594a4 in memory
flw f19, 0(x2) # load 0x229594a4 from memory into f19
li x3, 0xd7db49da # load x3 with value 0xd7db49da
sw x3, 0(x2) # store 0xd7db49da in memory
flw f20, 0(x2) # load 0xd7db49da from memory into f20
li x3, 0x06c050de # load x3 with value 0x06c050de
sw x3, 0(x2) # store 0x06c050de in memory
flw f13, 0(x2) # load 0x06c050de from memory into f13
fnmadd.s f19, f19, f20, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x4cc041a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc7e52dd # load x3 with value 0xcc7e52dd
sw x3, 0(x2) # store 0xcc7e52dd in memory
flw f20, 0(x2) # load 0xcc7e52dd from memory into f20
li x3, 0xe5010af3 # load x3 with value 0xe5010af3
sw x3, 0(x2) # store 0xe5010af3 in memory
flw f25, 0(x2) # load 0xe5010af3 from memory into f25
li x3, 0xd2c870cd # load x3 with value 0xd2c870cd
sw x3, 0(x2) # store 0xd2c870cd in memory
flw f12, 0(x2) # load 0xd2c870cd from memory into f12
fnmadd.s f20, f20, f25, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x8ecd492f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc796ea7e # load x3 with value 0xc796ea7e
sw x3, 0(x2) # store 0xc796ea7e in memory
flw f21, 0(x2) # load 0xc796ea7e from memory into f21
li x3, 0xfcfaa0ef # load x3 with value 0xfcfaa0ef
sw x3, 0(x2) # store 0xfcfaa0ef in memory
flw f31, 0(x2) # load 0xfcfaa0ef from memory into f31
li x3, 0xfcd3de48 # load x3 with value 0xfcd3de48
sw x3, 0(x2) # store 0xfcd3de48 in memory
flw f29, 0(x2) # load 0xfcd3de48 from memory into f29
fnmadd.s f21, f21, f31, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0x3095bc02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf1eb66e1 # load x3 with value 0xf1eb66e1
sw x3, 0(x2) # store 0xf1eb66e1 in memory
flw f22, 0(x2) # load 0xf1eb66e1 from memory into f22
li x3, 0x1a32ac65 # load x3 with value 0x1a32ac65
sw x3, 0(x2) # store 0x1a32ac65 in memory
flw f29, 0(x2) # load 0x1a32ac65 from memory into f29
li x3, 0xf66e78f4 # load x3 with value 0xf66e78f4
sw x3, 0(x2) # store 0xf66e78f4 in memory
flw f18, 0(x2) # load 0xf66e78f4 from memory into f18
fnmadd.s f22, f22, f29, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x7f303b4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc2cf2f5 # load x3 with value 0xdc2cf2f5
sw x3, 0(x2) # store 0xdc2cf2f5 in memory
flw f23, 0(x2) # load 0xdc2cf2f5 from memory into f23
li x3, 0xd952e144 # load x3 with value 0xd952e144
sw x3, 0(x2) # store 0xd952e144 in memory
flw f7, 0(x2) # load 0xd952e144 from memory into f7
li x3, 0x80a3696f # load x3 with value 0x80a3696f
sw x3, 0(x2) # store 0x80a3696f in memory
flw f10, 0(x2) # load 0x80a3696f from memory into f10
fnmadd.s f23, f23, f7, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x8f3dc3a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3b0971f # load x3 with value 0xe3b0971f
sw x3, 0(x2) # store 0xe3b0971f in memory
flw f24, 0(x2) # load 0xe3b0971f from memory into f24
li x3, 0xc59e6b8a # load x3 with value 0xc59e6b8a
sw x3, 0(x2) # store 0xc59e6b8a in memory
flw f1, 0(x2) # load 0xc59e6b8a from memory into f1
li x3, 0xb9517146 # load x3 with value 0xb9517146
sw x3, 0(x2) # store 0xb9517146 in memory
flw f15, 0(x2) # load 0xb9517146 from memory into f15
fnmadd.s f24, f24, f1, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xd0599b94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5c88276f # load x3 with value 0x5c88276f
sw x3, 0(x2) # store 0x5c88276f in memory
flw f25, 0(x2) # load 0x5c88276f from memory into f25
li x3, 0x9d6f9a4c # load x3 with value 0x9d6f9a4c
sw x3, 0(x2) # store 0x9d6f9a4c in memory
flw f24, 0(x2) # load 0x9d6f9a4c from memory into f24
li x3, 0xfd34dd2d # load x3 with value 0xfd34dd2d
sw x3, 0(x2) # store 0xfd34dd2d in memory
flw f23, 0(x2) # load 0xfd34dd2d from memory into f23
fnmadd.s f25, f25, f24, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0xf7030dd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06be8c93 # load x3 with value 0x06be8c93
sw x3, 0(x2) # store 0x06be8c93 in memory
flw f26, 0(x2) # load 0x06be8c93 from memory into f26
li x3, 0x8df02315 # load x3 with value 0x8df02315
sw x3, 0(x2) # store 0x8df02315 in memory
flw f11, 0(x2) # load 0x8df02315 from memory into f11
li x3, 0xc02fae8b # load x3 with value 0xc02fae8b
sw x3, 0(x2) # store 0xc02fae8b in memory
flw f5, 0(x2) # load 0xc02fae8b from memory into f5
fnmadd.s f26, f26, f11, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x870d3eeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f9533a0 # load x3 with value 0x6f9533a0
sw x3, 0(x2) # store 0x6f9533a0 in memory
flw f27, 0(x2) # load 0x6f9533a0 from memory into f27
li x3, 0x4ff16dc2 # load x3 with value 0x4ff16dc2
sw x3, 0(x2) # store 0x4ff16dc2 in memory
flw f14, 0(x2) # load 0x4ff16dc2 from memory into f14
li x3, 0xd033a71f # load x3 with value 0xd033a71f
sw x3, 0(x2) # store 0xd033a71f in memory
flw f16, 0(x2) # load 0xd033a71f from memory into f16
fnmadd.s f27, f27, f14, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0x4cd530c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9dc4a863 # load x3 with value 0x9dc4a863
sw x3, 0(x2) # store 0x9dc4a863 in memory
flw f28, 0(x2) # load 0x9dc4a863 from memory into f28
li x3, 0x8b50d7d7 # load x3 with value 0x8b50d7d7
sw x3, 0(x2) # store 0x8b50d7d7 in memory
flw f26, 0(x2) # load 0x8b50d7d7 from memory into f26
li x3, 0xc461f2c9 # load x3 with value 0xc461f2c9
sw x3, 0(x2) # store 0xc461f2c9 in memory
flw f20, 0(x2) # load 0xc461f2c9 from memory into f20
fnmadd.s f28, f28, f26, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xaed87e52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3aaa0643 # load x3 with value 0x3aaa0643
sw x3, 0(x2) # store 0x3aaa0643 in memory
flw f29, 0(x2) # load 0x3aaa0643 from memory into f29
li x3, 0xa7a5f39f # load x3 with value 0xa7a5f39f
sw x3, 0(x2) # store 0xa7a5f39f in memory
flw f8, 0(x2) # load 0xa7a5f39f from memory into f8
li x3, 0xd2046c17 # load x3 with value 0xd2046c17
sw x3, 0(x2) # store 0xd2046c17 in memory
flw f23, 0(x2) # load 0xd2046c17 from memory into f23
fnmadd.s f29, f29, f8, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0xed541d26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd1b7c6d # load x3 with value 0xfd1b7c6d
sw x3, 0(x2) # store 0xfd1b7c6d in memory
flw f30, 0(x2) # load 0xfd1b7c6d from memory into f30
li x3, 0xdb41ae8d # load x3 with value 0xdb41ae8d
sw x3, 0(x2) # store 0xdb41ae8d in memory
flw f1, 0(x2) # load 0xdb41ae8d from memory into f1
li x3, 0x536f2ea0 # load x3 with value 0x536f2ea0
sw x3, 0(x2) # store 0x536f2ea0 in memory
flw f17, 0(x2) # load 0x536f2ea0 from memory into f17
fnmadd.s f30, f30, f1, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x89018b17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06c3f0e7 # load x3 with value 0x06c3f0e7
sw x3, 0(x2) # store 0x06c3f0e7 in memory
flw f31, 0(x2) # load 0x06c3f0e7 from memory into f31
li x3, 0x2b596a29 # load x3 with value 0x2b596a29
sw x3, 0(x2) # store 0x2b596a29 in memory
flw f3, 0(x2) # load 0x2b596a29 from memory into f3
li x3, 0x4a638222 # load x3 with value 0x4a638222
sw x3, 0(x2) # store 0x4a638222 in memory
flw f12, 0(x2) # load 0x4a638222 from memory into f12
fnmadd.s f31, f31, f3, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0xf9b029af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0146c847 # load x3 with value 0x0146c847
sw x3, 0(x2) # store 0x0146c847 in memory
flw f16, 0(x2) # load 0x0146c847 from memory into f16
li x3, 0xcf0d3ccf # load x3 with value 0xcf0d3ccf
sw x3, 0(x2) # store 0xcf0d3ccf in memory
flw f0, 0(x2) # load 0xcf0d3ccf from memory into f0
li x3, 0x510d289b # load x3 with value 0x510d289b
sw x3, 0(x2) # store 0x510d289b in memory
flw f20, 0(x2) # load 0x510d289b from memory into f20
fnmadd.s f0, f16, f0, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x4cd34307 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6dae2216 # load x3 with value 0x6dae2216
sw x3, 0(x2) # store 0x6dae2216 in memory
flw f5, 0(x2) # load 0x6dae2216 from memory into f5
li x3, 0x3aae2cdd # load x3 with value 0x3aae2cdd
sw x3, 0(x2) # store 0x3aae2cdd in memory
flw f1, 0(x2) # load 0x3aae2cdd from memory into f1
li x3, 0x93c01bc1 # load x3 with value 0x93c01bc1
sw x3, 0(x2) # store 0x93c01bc1 in memory
flw f12, 0(x2) # load 0x93c01bc1 from memory into f12
fnmadd.s f1, f5, f1, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x5eaa2d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc4edcfb # load x3 with value 0xbc4edcfb
sw x3, 0(x2) # store 0xbc4edcfb in memory
flw f5, 0(x2) # load 0xbc4edcfb from memory into f5
li x3, 0xc6de6158 # load x3 with value 0xc6de6158
sw x3, 0(x2) # store 0xc6de6158 in memory
flw f2, 0(x2) # load 0xc6de6158 from memory into f2
li x3, 0x66627daa # load x3 with value 0x66627daa
sw x3, 0(x2) # store 0x66627daa in memory
flw f24, 0(x2) # load 0x66627daa from memory into f24
fnmadd.s f2, f5, f2, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x78378d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x069776ff # load x3 with value 0x069776ff
sw x3, 0(x2) # store 0x069776ff in memory
flw f29, 0(x2) # load 0x069776ff from memory into f29
li x3, 0x09c12175 # load x3 with value 0x09c12175
sw x3, 0(x2) # store 0x09c12175 in memory
flw f3, 0(x2) # load 0x09c12175 from memory into f3
li x3, 0x60b689da # load x3 with value 0x60b689da
sw x3, 0(x2) # store 0x60b689da in memory
flw f6, 0(x2) # load 0x60b689da from memory into f6
fnmadd.s f3, f29, f3, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xc12b935e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d0a731c # load x3 with value 0x0d0a731c
sw x3, 0(x2) # store 0x0d0a731c in memory
flw f6, 0(x2) # load 0x0d0a731c from memory into f6
li x3, 0x4bd891cd # load x3 with value 0x4bd891cd
sw x3, 0(x2) # store 0x4bd891cd in memory
flw f4, 0(x2) # load 0x4bd891cd from memory into f4
li x3, 0xb039d6bf # load x3 with value 0xb039d6bf
sw x3, 0(x2) # store 0xb039d6bf in memory
flw f13, 0(x2) # load 0xb039d6bf from memory into f13
fnmadd.s f4, f6, f4, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0xb21c1f4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50f4f9bb # load x3 with value 0x50f4f9bb
sw x3, 0(x2) # store 0x50f4f9bb in memory
flw f20, 0(x2) # load 0x50f4f9bb from memory into f20
li x3, 0xb9625cf0 # load x3 with value 0xb9625cf0
sw x3, 0(x2) # store 0xb9625cf0 in memory
flw f5, 0(x2) # load 0xb9625cf0 from memory into f5
li x3, 0xc27cf791 # load x3 with value 0xc27cf791
sw x3, 0(x2) # store 0xc27cf791 in memory
flw f10, 0(x2) # load 0xc27cf791 from memory into f10
fnmadd.s f5, f20, f5, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x605a5861 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbabcd751 # load x3 with value 0xbabcd751
sw x3, 0(x2) # store 0xbabcd751 in memory
flw f31, 0(x2) # load 0xbabcd751 from memory into f31
li x3, 0xfe720a09 # load x3 with value 0xfe720a09
sw x3, 0(x2) # store 0xfe720a09 in memory
flw f6, 0(x2) # load 0xfe720a09 from memory into f6
li x3, 0x27a9856b # load x3 with value 0x27a9856b
sw x3, 0(x2) # store 0x27a9856b in memory
flw f10, 0(x2) # load 0x27a9856b from memory into f10
fnmadd.s f6, f31, f6, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x695fdeac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8bc7c583 # load x3 with value 0x8bc7c583
sw x3, 0(x2) # store 0x8bc7c583 in memory
flw f12, 0(x2) # load 0x8bc7c583 from memory into f12
li x3, 0xc1bc7b33 # load x3 with value 0xc1bc7b33
sw x3, 0(x2) # store 0xc1bc7b33 in memory
flw f7, 0(x2) # load 0xc1bc7b33 from memory into f7
li x3, 0x311774ea # load x3 with value 0x311774ea
sw x3, 0(x2) # store 0x311774ea in memory
flw f6, 0(x2) # load 0x311774ea from memory into f6
fnmadd.s f7, f12, f7, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x66efc6f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x38b05c3e # load x3 with value 0x38b05c3e
sw x3, 0(x2) # store 0x38b05c3e in memory
flw f23, 0(x2) # load 0x38b05c3e from memory into f23
li x3, 0xdc5edbca # load x3 with value 0xdc5edbca
sw x3, 0(x2) # store 0xdc5edbca in memory
flw f8, 0(x2) # load 0xdc5edbca from memory into f8
li x3, 0x92c0f9b9 # load x3 with value 0x92c0f9b9
sw x3, 0(x2) # store 0x92c0f9b9 in memory
flw f8, 0(x2) # load 0x92c0f9b9 from memory into f8
fnmadd.s f8, f23, f8, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x3131b0c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc700c7a5 # load x3 with value 0xc700c7a5
sw x3, 0(x2) # store 0xc700c7a5 in memory
flw f8, 0(x2) # load 0xc700c7a5 from memory into f8
li x3, 0x14bf8b8d # load x3 with value 0x14bf8b8d
sw x3, 0(x2) # store 0x14bf8b8d in memory
flw f9, 0(x2) # load 0x14bf8b8d from memory into f9
li x3, 0xea75786e # load x3 with value 0xea75786e
sw x3, 0(x2) # store 0xea75786e in memory
flw f4, 0(x2) # load 0xea75786e from memory into f4
fnmadd.s f9, f8, f9, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xc70f8ebf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4957ba4 # load x3 with value 0xd4957ba4
sw x3, 0(x2) # store 0xd4957ba4 in memory
flw f1, 0(x2) # load 0xd4957ba4 from memory into f1
li x3, 0xe5571d42 # load x3 with value 0xe5571d42
sw x3, 0(x2) # store 0xe5571d42 in memory
flw f10, 0(x2) # load 0xe5571d42 from memory into f10
li x3, 0xe29e9991 # load x3 with value 0xe29e9991
sw x3, 0(x2) # store 0xe29e9991 in memory
flw f13, 0(x2) # load 0xe29e9991 from memory into f13
fnmadd.s f10, f1, f10, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0xd4693ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8c6a6b6 # load x3 with value 0xb8c6a6b6
sw x3, 0(x2) # store 0xb8c6a6b6 in memory
flw f18, 0(x2) # load 0xb8c6a6b6 from memory into f18
li x3, 0x116efa30 # load x3 with value 0x116efa30
sw x3, 0(x2) # store 0x116efa30 in memory
flw f11, 0(x2) # load 0x116efa30 from memory into f11
li x3, 0xb15eedc9 # load x3 with value 0xb15eedc9
sw x3, 0(x2) # store 0xb15eedc9 in memory
flw f4, 0(x2) # load 0xb15eedc9 from memory into f4
fnmadd.s f11, f18, f11, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0xe9c87339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6f87116 # load x3 with value 0xa6f87116
sw x3, 0(x2) # store 0xa6f87116 in memory
flw f28, 0(x2) # load 0xa6f87116 from memory into f28
li x3, 0x0c23a288 # load x3 with value 0x0c23a288
sw x3, 0(x2) # store 0x0c23a288 in memory
flw f12, 0(x2) # load 0x0c23a288 from memory into f12
li x3, 0xf9339519 # load x3 with value 0xf9339519
sw x3, 0(x2) # store 0xf9339519 in memory
flw f29, 0(x2) # load 0xf9339519 from memory into f29
fnmadd.s f12, f28, f12, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x2fc5b5a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57256020 # load x3 with value 0x57256020
sw x3, 0(x2) # store 0x57256020 in memory
flw f16, 0(x2) # load 0x57256020 from memory into f16
li x3, 0xde1a2a99 # load x3 with value 0xde1a2a99
sw x3, 0(x2) # store 0xde1a2a99 in memory
flw f13, 0(x2) # load 0xde1a2a99 from memory into f13
li x3, 0xd906d20c # load x3 with value 0xd906d20c
sw x3, 0(x2) # store 0xd906d20c in memory
flw f26, 0(x2) # load 0xd906d20c from memory into f26
fnmadd.s f13, f16, f13, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x2d9e8e3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x831cf63a # load x3 with value 0x831cf63a
sw x3, 0(x2) # store 0x831cf63a in memory
flw f11, 0(x2) # load 0x831cf63a from memory into f11
li x3, 0x206a72ca # load x3 with value 0x206a72ca
sw x3, 0(x2) # store 0x206a72ca in memory
flw f14, 0(x2) # load 0x206a72ca from memory into f14
li x3, 0xc519a4e3 # load x3 with value 0xc519a4e3
sw x3, 0(x2) # store 0xc519a4e3 in memory
flw f3, 0(x2) # load 0xc519a4e3 from memory into f3
fnmadd.s f14, f11, f14, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x0d3f1317 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd46d65b2 # load x3 with value 0xd46d65b2
sw x3, 0(x2) # store 0xd46d65b2 in memory
flw f18, 0(x2) # load 0xd46d65b2 from memory into f18
li x3, 0x660ab851 # load x3 with value 0x660ab851
sw x3, 0(x2) # store 0x660ab851 in memory
flw f15, 0(x2) # load 0x660ab851 from memory into f15
li x3, 0x976c43eb # load x3 with value 0x976c43eb
sw x3, 0(x2) # store 0x976c43eb in memory
flw f29, 0(x2) # load 0x976c43eb from memory into f29
fnmadd.s f15, f18, f15, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0xac03af0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf12acc38 # load x3 with value 0xf12acc38
sw x3, 0(x2) # store 0xf12acc38 in memory
flw f22, 0(x2) # load 0xf12acc38 from memory into f22
li x3, 0x911bf54e # load x3 with value 0x911bf54e
sw x3, 0(x2) # store 0x911bf54e in memory
flw f16, 0(x2) # load 0x911bf54e from memory into f16
li x3, 0x5b315bae # load x3 with value 0x5b315bae
sw x3, 0(x2) # store 0x5b315bae in memory
flw f9, 0(x2) # load 0x5b315bae from memory into f9
fnmadd.s f16, f22, f16, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x94a3fad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x885d620f # load x3 with value 0x885d620f
sw x3, 0(x2) # store 0x885d620f in memory
flw f6, 0(x2) # load 0x885d620f from memory into f6
li x3, 0xdf63fc03 # load x3 with value 0xdf63fc03
sw x3, 0(x2) # store 0xdf63fc03 in memory
flw f17, 0(x2) # load 0xdf63fc03 from memory into f17
li x3, 0xa8f389b3 # load x3 with value 0xa8f389b3
sw x3, 0(x2) # store 0xa8f389b3 in memory
flw f24, 0(x2) # load 0xa8f389b3 from memory into f24
fnmadd.s f17, f6, f17, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x05023423 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x587e6def # load x3 with value 0x587e6def
sw x3, 0(x2) # store 0x587e6def in memory
flw f11, 0(x2) # load 0x587e6def from memory into f11
li x3, 0xf611b1a5 # load x3 with value 0xf611b1a5
sw x3, 0(x2) # store 0xf611b1a5 in memory
flw f18, 0(x2) # load 0xf611b1a5 from memory into f18
li x3, 0x1176f284 # load x3 with value 0x1176f284
sw x3, 0(x2) # store 0x1176f284 in memory
flw f20, 0(x2) # load 0x1176f284 from memory into f20
fnmadd.s f18, f11, f18, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0x9befa708 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x388984eb # load x3 with value 0x388984eb
sw x3, 0(x2) # store 0x388984eb in memory
flw f21, 0(x2) # load 0x388984eb from memory into f21
li x3, 0x1c977863 # load x3 with value 0x1c977863
sw x3, 0(x2) # store 0x1c977863 in memory
flw f19, 0(x2) # load 0x1c977863 from memory into f19
li x3, 0xf24861eb # load x3 with value 0xf24861eb
sw x3, 0(x2) # store 0xf24861eb in memory
flw f30, 0(x2) # load 0xf24861eb from memory into f30
fnmadd.s f19, f21, f19, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x16a6b5eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa04a1c50 # load x3 with value 0xa04a1c50
sw x3, 0(x2) # store 0xa04a1c50 in memory
flw f29, 0(x2) # load 0xa04a1c50 from memory into f29
li x3, 0xda866622 # load x3 with value 0xda866622
sw x3, 0(x2) # store 0xda866622 in memory
flw f20, 0(x2) # load 0xda866622 from memory into f20
li x3, 0x2478ee02 # load x3 with value 0x2478ee02
sw x3, 0(x2) # store 0x2478ee02 in memory
flw f26, 0(x2) # load 0x2478ee02 from memory into f26
fnmadd.s f20, f29, f20, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x3844fa01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5afe5f57 # load x3 with value 0x5afe5f57
sw x3, 0(x2) # store 0x5afe5f57 in memory
flw f3, 0(x2) # load 0x5afe5f57 from memory into f3
li x3, 0xbaae5a19 # load x3 with value 0xbaae5a19
sw x3, 0(x2) # store 0xbaae5a19 in memory
flw f21, 0(x2) # load 0xbaae5a19 from memory into f21
li x3, 0xf831ce44 # load x3 with value 0xf831ce44
sw x3, 0(x2) # store 0xf831ce44 in memory
flw f6, 0(x2) # load 0xf831ce44 from memory into f6
fnmadd.s f21, f3, f21, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x8936649b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde78bb34 # load x3 with value 0xde78bb34
sw x3, 0(x2) # store 0xde78bb34 in memory
flw f17, 0(x2) # load 0xde78bb34 from memory into f17
li x3, 0x92bfac7b # load x3 with value 0x92bfac7b
sw x3, 0(x2) # store 0x92bfac7b in memory
flw f22, 0(x2) # load 0x92bfac7b from memory into f22
li x3, 0xd4329033 # load x3 with value 0xd4329033
sw x3, 0(x2) # store 0xd4329033 in memory
flw f20, 0(x2) # load 0xd4329033 from memory into f20
fnmadd.s f22, f17, f22, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x9ecdd2cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd42eaf51 # load x3 with value 0xd42eaf51
sw x3, 0(x2) # store 0xd42eaf51 in memory
flw f21, 0(x2) # load 0xd42eaf51 from memory into f21
li x3, 0x49aa7af2 # load x3 with value 0x49aa7af2
sw x3, 0(x2) # store 0x49aa7af2 in memory
flw f23, 0(x2) # load 0x49aa7af2 from memory into f23
li x3, 0x6d14611b # load x3 with value 0x6d14611b
sw x3, 0(x2) # store 0x6d14611b in memory
flw f16, 0(x2) # load 0x6d14611b from memory into f16
fnmadd.s f23, f21, f23, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0xe0bbf479 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70bed4f4 # load x3 with value 0x70bed4f4
sw x3, 0(x2) # store 0x70bed4f4 in memory
flw f1, 0(x2) # load 0x70bed4f4 from memory into f1
li x3, 0x3e758a24 # load x3 with value 0x3e758a24
sw x3, 0(x2) # store 0x3e758a24 in memory
flw f24, 0(x2) # load 0x3e758a24 from memory into f24
li x3, 0x7beeb2ac # load x3 with value 0x7beeb2ac
sw x3, 0(x2) # store 0x7beeb2ac in memory
flw f4, 0(x2) # load 0x7beeb2ac from memory into f4
fnmadd.s f24, f1, f24, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x93a32bad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x499bb87d # load x3 with value 0x499bb87d
sw x3, 0(x2) # store 0x499bb87d in memory
flw f20, 0(x2) # load 0x499bb87d from memory into f20
li x3, 0x1b4e41d7 # load x3 with value 0x1b4e41d7
sw x3, 0(x2) # store 0x1b4e41d7 in memory
flw f25, 0(x2) # load 0x1b4e41d7 from memory into f25
li x3, 0x43d38df5 # load x3 with value 0x43d38df5
sw x3, 0(x2) # store 0x43d38df5 in memory
flw f16, 0(x2) # load 0x43d38df5 from memory into f16
fnmadd.s f25, f20, f25, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x0bce1099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x523748a8 # load x3 with value 0x523748a8
sw x3, 0(x2) # store 0x523748a8 in memory
flw f21, 0(x2) # load 0x523748a8 from memory into f21
li x3, 0x685a326f # load x3 with value 0x685a326f
sw x3, 0(x2) # store 0x685a326f in memory
flw f26, 0(x2) # load 0x685a326f from memory into f26
li x3, 0x2031e0a0 # load x3 with value 0x2031e0a0
sw x3, 0(x2) # store 0x2031e0a0 in memory
flw f28, 0(x2) # load 0x2031e0a0 from memory into f28
fnmadd.s f26, f21, f26, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xb31cef02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee430311 # load x3 with value 0xee430311
sw x3, 0(x2) # store 0xee430311 in memory
flw f17, 0(x2) # load 0xee430311 from memory into f17
li x3, 0xd386a1bc # load x3 with value 0xd386a1bc
sw x3, 0(x2) # store 0xd386a1bc in memory
flw f27, 0(x2) # load 0xd386a1bc from memory into f27
li x3, 0x4bbb940b # load x3 with value 0x4bbb940b
sw x3, 0(x2) # store 0x4bbb940b in memory
flw f9, 0(x2) # load 0x4bbb940b from memory into f9
fnmadd.s f27, f17, f27, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x32a3a077 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4566c155 # load x3 with value 0x4566c155
sw x3, 0(x2) # store 0x4566c155 in memory
flw f5, 0(x2) # load 0x4566c155 from memory into f5
li x3, 0xaa980e80 # load x3 with value 0xaa980e80
sw x3, 0(x2) # store 0xaa980e80 in memory
flw f28, 0(x2) # load 0xaa980e80 from memory into f28
li x3, 0xfa6f0d37 # load x3 with value 0xfa6f0d37
sw x3, 0(x2) # store 0xfa6f0d37 in memory
flw f12, 0(x2) # load 0xfa6f0d37 from memory into f12
fnmadd.s f28, f5, f28, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0x66f673c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbacde33 # load x3 with value 0xdbacde33
sw x3, 0(x2) # store 0xdbacde33 in memory
flw f27, 0(x2) # load 0xdbacde33 from memory into f27
li x3, 0x2f217dbf # load x3 with value 0x2f217dbf
sw x3, 0(x2) # store 0x2f217dbf in memory
flw f29, 0(x2) # load 0x2f217dbf from memory into f29
li x3, 0x327cb900 # load x3 with value 0x327cb900
sw x3, 0(x2) # store 0x327cb900 in memory
flw f1, 0(x2) # load 0x327cb900 from memory into f1
fnmadd.s f29, f27, f29, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0xf8388df6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfeb159ea # load x3 with value 0xfeb159ea
sw x3, 0(x2) # store 0xfeb159ea in memory
flw f2, 0(x2) # load 0xfeb159ea from memory into f2
li x3, 0x1b759a93 # load x3 with value 0x1b759a93
sw x3, 0(x2) # store 0x1b759a93 in memory
flw f30, 0(x2) # load 0x1b759a93 from memory into f30
li x3, 0x448e7611 # load x3 with value 0x448e7611
sw x3, 0(x2) # store 0x448e7611 in memory
flw f12, 0(x2) # load 0x448e7611 from memory into f12
fnmadd.s f30, f2, f30, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x40f47eea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa458ab7b # load x3 with value 0xa458ab7b
sw x3, 0(x2) # store 0xa458ab7b in memory
flw f4, 0(x2) # load 0xa458ab7b from memory into f4
li x3, 0x297749a2 # load x3 with value 0x297749a2
sw x3, 0(x2) # store 0x297749a2 in memory
flw f31, 0(x2) # load 0x297749a2 from memory into f31
li x3, 0x4f6d7057 # load x3 with value 0x4f6d7057
sw x3, 0(x2) # store 0x4f6d7057 in memory
flw f16, 0(x2) # load 0x4f6d7057 from memory into f16
fnmadd.s f31, f4, f31, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x1, 0x3e8c0ab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x562ab3fd # load x3 with value 0x562ab3fd
sw x3, 0(x2) # store 0x562ab3fd in memory
flw f12, 0(x2) # load 0x562ab3fd from memory into f12
li x3, 0x4553fe12 # load x3 with value 0x4553fe12
sw x3, 0(x2) # store 0x4553fe12 in memory
flw f10, 0(x2) # load 0x4553fe12 from memory into f10
fnmadd.s f1, f28, f12, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x25, 0x20535886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x99487189 # load x3 with value 0x99487189
sw x3, 0(x2) # store 0x99487189 in memory
flw f5, 0(x2) # load 0x99487189 from memory into f5
li x3, 0xc71d6020 # load x3 with value 0xc71d6020
sw x3, 0(x2) # store 0xc71d6020 in memory
flw f24, 0(x2) # load 0xc71d6020 from memory into f24
fnmadd.s f25, f7, f5, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x19, 0x9f18c5f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0xcb3b8fdf # load x3 with value 0xcb3b8fdf
sw x3, 0(x2) # store 0xcb3b8fdf in memory
flw f21, 0(x2) # load 0xcb3b8fdf from memory into f21
li x3, 0xa32777df # load x3 with value 0xa32777df
sw x3, 0(x2) # store 0xa32777df in memory
flw f9, 0(x2) # load 0xa32777df from memory into f9
fnmadd.s f19, f17, f21, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x3, 0x22e00a60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0xe7f2d3d7 # load x3 with value 0xe7f2d3d7
sw x3, 0(x2) # store 0xe7f2d3d7 in memory
flw f25, 0(x2) # load 0xe7f2d3d7 from memory into f25
li x3, 0x3530618d # load x3 with value 0x3530618d
sw x3, 0(x2) # store 0x3530618d in memory
flw f19, 0(x2) # load 0x3530618d from memory into f19
fnmadd.s f3, f18, f25, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x24, 0x4902b26c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x8139abf3 # load x3 with value 0x8139abf3
sw x3, 0(x2) # store 0x8139abf3 in memory
flw f4, 0(x2) # load 0x8139abf3 from memory into f4
li x3, 0x211796cc # load x3 with value 0x211796cc
sw x3, 0(x2) # store 0x211796cc in memory
flw f15, 0(x2) # load 0x211796cc from memory into f15
fnmadd.s f24, f30, f4, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x24, 0x19e45025 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x9f27f5d2 # load x3 with value 0x9f27f5d2
sw x3, 0(x2) # store 0x9f27f5d2 in memory
flw f6, 0(x2) # load 0x9f27f5d2 from memory into f6
li x3, 0xf1c23928 # load x3 with value 0xf1c23928
sw x3, 0(x2) # store 0xf1c23928 in memory
flw f9, 0(x2) # load 0xf1c23928 from memory into f9
fnmadd.s f24, f3, f6, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x15, 0x28624c6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x83147e13 # load x3 with value 0x83147e13
sw x3, 0(x2) # store 0x83147e13 in memory
flw f14, 0(x2) # load 0x83147e13 from memory into f14
li x3, 0xa31169de # load x3 with value 0xa31169de
sw x3, 0(x2) # store 0xa31169de in memory
flw f27, 0(x2) # load 0xa31169de from memory into f27
fnmadd.s f15, f13, f14, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x13, 0xb40d1840 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0xf47d9f71 # load x3 with value 0xf47d9f71
sw x3, 0(x2) # store 0xf47d9f71 in memory
flw f26, 0(x2) # load 0xf47d9f71 from memory into f26
li x3, 0x721b76d4 # load x3 with value 0x721b76d4
sw x3, 0(x2) # store 0x721b76d4 in memory
flw f22, 0(x2) # load 0x721b76d4 from memory into f22
fnmadd.s f13, f8, f26, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x5, 0xb5c90a79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0xcd4c8c56 # load x3 with value 0xcd4c8c56
sw x3, 0(x2) # store 0xcd4c8c56 in memory
flw f3, 0(x2) # load 0xcd4c8c56 from memory into f3
li x3, 0xf9604788 # load x3 with value 0xf9604788
sw x3, 0(x2) # store 0xf9604788 in memory
flw f24, 0(x2) # load 0xf9604788 from memory into f24
fnmadd.s f5, f29, f3, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x19, 0x29106037 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x60b04e32 # load x3 with value 0x60b04e32
sw x3, 0(x2) # store 0x60b04e32 in memory
flw f21, 0(x2) # load 0x60b04e32 from memory into f21
li x3, 0x414bde97 # load x3 with value 0x414bde97
sw x3, 0(x2) # store 0x414bde97 in memory
flw f20, 0(x2) # load 0x414bde97 from memory into f20
fnmadd.s f19, f4, f21, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x26, 0x3e6908c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xf0b53847 # load x3 with value 0xf0b53847
sw x3, 0(x2) # store 0xf0b53847 in memory
flw f25, 0(x2) # load 0xf0b53847 from memory into f25
li x3, 0x445b92d7 # load x3 with value 0x445b92d7
sw x3, 0(x2) # store 0x445b92d7 in memory
flw f11, 0(x2) # load 0x445b92d7 from memory into f11
fnmadd.s f26, f29, f25, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x3, 0x50d567df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x111bfb87 # load x3 with value 0x111bfb87
sw x3, 0(x2) # store 0x111bfb87 in memory
flw f29, 0(x2) # load 0x111bfb87 from memory into f29
li x3, 0xbab98e12 # load x3 with value 0xbab98e12
sw x3, 0(x2) # store 0xbab98e12 in memory
flw f12, 0(x2) # load 0xbab98e12 from memory into f12
fnmadd.s f3, f8, f29, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x27, 0x14942cce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0xbe6abde6 # load x3 with value 0xbe6abde6
sw x3, 0(x2) # store 0xbe6abde6 in memory
flw f23, 0(x2) # load 0xbe6abde6 from memory into f23
li x3, 0x19e8c1e3 # load x3 with value 0x19e8c1e3
sw x3, 0(x2) # store 0x19e8c1e3 in memory
flw f7, 0(x2) # load 0x19e8c1e3 from memory into f7
fnmadd.s f27, f21, f23, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x15, 0x31379063 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x8112ddfe # load x3 with value 0x8112ddfe
sw x3, 0(x2) # store 0x8112ddfe in memory
flw f20, 0(x2) # load 0x8112ddfe from memory into f20
li x3, 0x018a1913 # load x3 with value 0x018a1913
sw x3, 0(x2) # store 0x018a1913 in memory
flw f24, 0(x2) # load 0x018a1913 from memory into f24
fnmadd.s f15, f5, f20, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x19, 0x3f7d6c44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xe206dbe1 # load x3 with value 0xe206dbe1
sw x3, 0(x2) # store 0xe206dbe1 in memory
flw f16, 0(x2) # load 0xe206dbe1 from memory into f16
li x3, 0xfb2ebcbf # load x3 with value 0xfb2ebcbf
sw x3, 0(x2) # store 0xfb2ebcbf in memory
flw f11, 0(x2) # load 0xfb2ebcbf from memory into f11
fnmadd.s f19, f1, f16, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x11, 0x66809492 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0xbff3289f # load x3 with value 0xbff3289f
sw x3, 0(x2) # store 0xbff3289f in memory
flw f9, 0(x2) # load 0xbff3289f from memory into f9
li x3, 0xae62d7b4 # load x3 with value 0xae62d7b4
sw x3, 0(x2) # store 0xae62d7b4 in memory
flw f13, 0(x2) # load 0xae62d7b4 from memory into f13
fnmadd.s f11, f3, f9, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x1, 0x150b9a23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x67235766 # load x3 with value 0x67235766
sw x3, 0(x2) # store 0x67235766 in memory
flw f17, 0(x2) # load 0x67235766 from memory into f17
li x3, 0xe46500e7 # load x3 with value 0xe46500e7
sw x3, 0(x2) # store 0xe46500e7 in memory
flw f4, 0(x2) # load 0xe46500e7 from memory into f4
fnmadd.s f1, f10, f17, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x13, 0x565bfcfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x5d3551a9 # load x3 with value 0x5d3551a9
sw x3, 0(x2) # store 0x5d3551a9 in memory
flw f23, 0(x2) # load 0x5d3551a9 from memory into f23
li x3, 0x8dfa3893 # load x3 with value 0x8dfa3893
sw x3, 0(x2) # store 0x8dfa3893 in memory
flw f26, 0(x2) # load 0x8dfa3893 from memory into f26
fnmadd.s f13, f21, f23, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x31, 0xcc11ec70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x88ea642f # load x3 with value 0x88ea642f
sw x3, 0(x2) # store 0x88ea642f in memory
flw f14, 0(x2) # load 0x88ea642f from memory into f14
li x3, 0x44902099 # load x3 with value 0x44902099
sw x3, 0(x2) # store 0x44902099 in memory
flw f4, 0(x2) # load 0x44902099 from memory into f4
fnmadd.s f31, f9, f14, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x7, 0xea86dbe8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x541e0558 # load x3 with value 0x541e0558
sw x3, 0(x2) # store 0x541e0558 in memory
flw f14, 0(x2) # load 0x541e0558 from memory into f14
li x3, 0x33f6bc0a # load x3 with value 0x33f6bc0a
sw x3, 0(x2) # store 0x33f6bc0a in memory
flw f17, 0(x2) # load 0x33f6bc0a from memory into f17
fnmadd.s f7, f24, f14, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x31, 0xe8f37a15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xda13079a # load x3 with value 0xda13079a
sw x3, 0(x2) # store 0xda13079a in memory
flw f23, 0(x2) # load 0xda13079a from memory into f23
li x3, 0x012ad7ba # load x3 with value 0x012ad7ba
sw x3, 0(x2) # store 0x012ad7ba in memory
flw f9, 0(x2) # load 0x012ad7ba from memory into f9
fnmadd.s f31, f3, f23, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x31, 0xb7f603be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x3646b6d7 # load x3 with value 0x3646b6d7
sw x3, 0(x2) # store 0x3646b6d7 in memory
flw f24, 0(x2) # load 0x3646b6d7 from memory into f24
li x3, 0x31f86c38 # load x3 with value 0x31f86c38
sw x3, 0(x2) # store 0x31f86c38 in memory
flw f18, 0(x2) # load 0x31f86c38 from memory into f18
fnmadd.s f31, f16, f24, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x31, 0x5063f2e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x1dbb5e35 # load x3 with value 0x1dbb5e35
sw x3, 0(x2) # store 0x1dbb5e35 in memory
flw f15, 0(x2) # load 0x1dbb5e35 from memory into f15
li x3, 0xe7ac5d2b # load x3 with value 0xe7ac5d2b
sw x3, 0(x2) # store 0xe7ac5d2b in memory
flw f16, 0(x2) # load 0xe7ac5d2b from memory into f16
fnmadd.s f31, f10, f15, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x11, 0x2e52f3e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xd16326c8 # load x3 with value 0xd16326c8
sw x3, 0(x2) # store 0xd16326c8 in memory
flw f16, 0(x2) # load 0xd16326c8 from memory into f16
li x3, 0x241335e4 # load x3 with value 0x241335e4
sw x3, 0(x2) # store 0x241335e4 in memory
flw f6, 0(x2) # load 0x241335e4 from memory into f6
fnmadd.s f11, f23, f16, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x27, 0x4a4b8dae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x51651a76 # load x3 with value 0x51651a76
sw x3, 0(x2) # store 0x51651a76 in memory
flw f24, 0(x2) # load 0x51651a76 from memory into f24
li x3, 0x7dca55a6 # load x3 with value 0x7dca55a6
sw x3, 0(x2) # store 0x7dca55a6 in memory
flw f30, 0(x2) # load 0x7dca55a6 from memory into f30
fnmadd.s f27, f23, f24, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x31, 0x1ddef6d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x9c93f0d5 # load x3 with value 0x9c93f0d5
sw x3, 0(x2) # store 0x9c93f0d5 in memory
flw f4, 0(x2) # load 0x9c93f0d5 from memory into f4
li x3, 0xa8da2d35 # load x3 with value 0xa8da2d35
sw x3, 0(x2) # store 0xa8da2d35 in memory
flw f1, 0(x2) # load 0xa8da2d35 from memory into f1
fnmadd.s f31, f17, f4, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x13, 0x39483c8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc5713613 # load x3 with value 0xc5713613
sw x3, 0(x2) # store 0xc5713613 in memory
flw f15, 0(x2) # load 0xc5713613 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0xf3dc3c86 # load x3 with value 0xf3dc3c86
sw x3, 0(x2) # store 0xf3dc3c86 in memory
flw f24, 0(x2) # load 0xf3dc3c86 from memory into f24
fnmadd.s f13, f15, f1, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x3, 0x4dcdb47d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x94b6d9aa # load x3 with value 0x94b6d9aa
sw x3, 0(x2) # store 0x94b6d9aa in memory
flw f27, 0(x2) # load 0x94b6d9aa from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x647537af # load x3 with value 0x647537af
sw x3, 0(x2) # store 0x647537af in memory
flw f5, 0(x2) # load 0x647537af from memory into f5
fnmadd.s f3, f27, f6, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x7, 0x68e0179e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a1ac9c0 # load x3 with value 0x9a1ac9c0
sw x3, 0(x2) # store 0x9a1ac9c0 in memory
flw f13, 0(x2) # load 0x9a1ac9c0 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x03878ffb # load x3 with value 0x03878ffb
sw x3, 0(x2) # store 0x03878ffb in memory
flw f8, 0(x2) # load 0x03878ffb from memory into f8
fnmadd.s f7, f13, f9, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x28, 0x52c9ecb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77376ec1 # load x3 with value 0x77376ec1
sw x3, 0(x2) # store 0x77376ec1 in memory
flw f2, 0(x2) # load 0x77376ec1 from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x9824b5da # load x3 with value 0x9824b5da
sw x3, 0(x2) # store 0x9824b5da in memory
flw f11, 0(x2) # load 0x9824b5da from memory into f11
fnmadd.s f28, f2, f5, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x4, 0xd086482c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f57f64f # load x3 with value 0x1f57f64f
sw x3, 0(x2) # store 0x1f57f64f in memory
flw f15, 0(x2) # load 0x1f57f64f from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x8424f0d9 # load x3 with value 0x8424f0d9
sw x3, 0(x2) # store 0x8424f0d9 in memory
flw f30, 0(x2) # load 0x8424f0d9 from memory into f30
fnmadd.s f4, f15, f21, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x17, 0x7cc8ab7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d86c645 # load x3 with value 0x0d86c645
sw x3, 0(x2) # store 0x0d86c645 in memory
flw f1, 0(x2) # load 0x0d86c645 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x2f7c3343 # load x3 with value 0x2f7c3343
sw x3, 0(x2) # store 0x2f7c3343 in memory
flw f27, 0(x2) # load 0x2f7c3343 from memory into f27
fnmadd.s f17, f1, f19, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x29, 0xce738d8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d3b46b2 # load x3 with value 0x0d3b46b2
sw x3, 0(x2) # store 0x0d3b46b2 in memory
flw f1, 0(x2) # load 0x0d3b46b2 from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xb1c5f14f # load x3 with value 0xb1c5f14f
sw x3, 0(x2) # store 0xb1c5f14f in memory
flw f22, 0(x2) # load 0xb1c5f14f from memory into f22
fnmadd.s f29, f1, f2, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x16, 0x4ecd0ac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdf51d697 # load x3 with value 0xdf51d697
sw x3, 0(x2) # store 0xdf51d697 in memory
flw f23, 0(x2) # load 0xdf51d697 from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xdf0d29c3 # load x3 with value 0xdf0d29c3
sw x3, 0(x2) # store 0xdf0d29c3 in memory
flw f21, 0(x2) # load 0xdf0d29c3 from memory into f21
fnmadd.s f16, f23, f29, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x14, 0xfe394e70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6748a606 # load x3 with value 0x6748a606
sw x3, 0(x2) # store 0x6748a606 in memory
flw f12, 0(x2) # load 0x6748a606 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x40c774bc # load x3 with value 0x40c774bc
sw x3, 0(x2) # store 0x40c774bc in memory
flw f26, 0(x2) # load 0x40c774bc from memory into f26
fnmadd.s f14, f12, f29, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x4, 0x0c1cd873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbeee98dc # load x3 with value 0xbeee98dc
sw x3, 0(x2) # store 0xbeee98dc in memory
flw f28, 0(x2) # load 0xbeee98dc from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xe65698cc # load x3 with value 0xe65698cc
sw x3, 0(x2) # store 0xe65698cc in memory
flw f13, 0(x2) # load 0xe65698cc from memory into f13
fnmadd.s f4, f28, f12, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x24, 0x06d88827 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c5f6940 # load x3 with value 0x1c5f6940
sw x3, 0(x2) # store 0x1c5f6940 in memory
flw f2, 0(x2) # load 0x1c5f6940 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x225e46f0 # load x3 with value 0x225e46f0
sw x3, 0(x2) # store 0x225e46f0 in memory
flw f4, 0(x2) # load 0x225e46f0 from memory into f4
fnmadd.s f24, f2, f16, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x2, 0x5d819431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x267f8aae # load x3 with value 0x267f8aae
sw x3, 0(x2) # store 0x267f8aae in memory
flw f4, 0(x2) # load 0x267f8aae from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x6ade683c # load x3 with value 0x6ade683c
sw x3, 0(x2) # store 0x6ade683c in memory
flw f25, 0(x2) # load 0x6ade683c from memory into f25
fnmadd.s f2, f4, f26, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x25, 0x68b2fe81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c009bcd # load x3 with value 0x2c009bcd
sw x3, 0(x2) # store 0x2c009bcd in memory
flw f4, 0(x2) # load 0x2c009bcd from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xa60afc55 # load x3 with value 0xa60afc55
sw x3, 0(x2) # store 0xa60afc55 in memory
flw f27, 0(x2) # load 0xa60afc55 from memory into f27
fnmadd.s f25, f4, f20, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x18, 0x01aeadc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1706318e # load x3 with value 0x1706318e
sw x3, 0(x2) # store 0x1706318e in memory
flw f3, 0(x2) # load 0x1706318e from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x6fbceb93 # load x3 with value 0x6fbceb93
sw x3, 0(x2) # store 0x6fbceb93 in memory
flw f26, 0(x2) # load 0x6fbceb93 from memory into f26
fnmadd.s f18, f3, f6, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x31, 0xf9cac495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60ca7321 # load x3 with value 0x60ca7321
sw x3, 0(x2) # store 0x60ca7321 in memory
flw f9, 0(x2) # load 0x60ca7321 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0xf8ba4f49 # load x3 with value 0xf8ba4f49
sw x3, 0(x2) # store 0xf8ba4f49 in memory
flw f20, 0(x2) # load 0xf8ba4f49 from memory into f20
fnmadd.s f31, f9, f11, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x18, 0xce00745b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf45ec2db # load x3 with value 0xf45ec2db
sw x3, 0(x2) # store 0xf45ec2db in memory
flw f9, 0(x2) # load 0xf45ec2db from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0xec2c62a9 # load x3 with value 0xec2c62a9
sw x3, 0(x2) # store 0xec2c62a9 in memory
flw f13, 0(x2) # load 0xec2c62a9 from memory into f13
fnmadd.s f18, f9, f11, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x7, 0x94d1bb8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac79ebac # load x3 with value 0xac79ebac
sw x3, 0(x2) # store 0xac79ebac in memory
flw f27, 0(x2) # load 0xac79ebac from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xe12c50b0 # load x3 with value 0xe12c50b0
sw x3, 0(x2) # store 0xe12c50b0 in memory
flw f22, 0(x2) # load 0xe12c50b0 from memory into f22
fnmadd.s f7, f27, f6, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x10, 0xf14f020f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd360a066 # load x3 with value 0xd360a066
sw x3, 0(x2) # store 0xd360a066 in memory
flw f11, 0(x2) # load 0xd360a066 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xc5369c7f # load x3 with value 0xc5369c7f
sw x3, 0(x2) # store 0xc5369c7f in memory
flw f30, 0(x2) # load 0xc5369c7f from memory into f30
fnmadd.s f10, f11, f1, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x26, 0x184c0ab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x222c074f # load x3 with value 0x222c074f
sw x3, 0(x2) # store 0x222c074f in memory
flw f1, 0(x2) # load 0x222c074f from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0xddb38a0d # load x3 with value 0xddb38a0d
sw x3, 0(x2) # store 0xddb38a0d in memory
flw f31, 0(x2) # load 0xddb38a0d from memory into f31
fnmadd.s f26, f1, f18, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x25, 0xc5c8ad9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd6d18c9 # load x3 with value 0xbd6d18c9
sw x3, 0(x2) # store 0xbd6d18c9 in memory
flw f28, 0(x2) # load 0xbd6d18c9 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xaee4685e # load x3 with value 0xaee4685e
sw x3, 0(x2) # store 0xaee4685e in memory
flw f5, 0(x2) # load 0xaee4685e from memory into f5
fnmadd.s f25, f28, f9, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x29, 0x1c0a1152 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xccbde389 # load x3 with value 0xccbde389
sw x3, 0(x2) # store 0xccbde389 in memory
flw f27, 0(x2) # load 0xccbde389 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x6300757c # load x3 with value 0x6300757c
sw x3, 0(x2) # store 0x6300757c in memory
flw f13, 0(x2) # load 0x6300757c from memory into f13
fnmadd.s f29, f27, f25, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x27, 0xbc0af808 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8821d3ea # load x3 with value 0x8821d3ea
sw x3, 0(x2) # store 0x8821d3ea in memory
flw f26, 0(x2) # load 0x8821d3ea from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x379a07e9 # load x3 with value 0x379a07e9
sw x3, 0(x2) # store 0x379a07e9 in memory
flw f22, 0(x2) # load 0x379a07e9 from memory into f22
fnmadd.s f27, f26, f7, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x29, 0xf6b60fc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x249d1de5 # load x3 with value 0x249d1de5
sw x3, 0(x2) # store 0x249d1de5 in memory
flw f7, 0(x2) # load 0x249d1de5 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0xea3bd329 # load x3 with value 0xea3bd329
sw x3, 0(x2) # store 0xea3bd329 in memory
flw f15, 0(x2) # load 0xea3bd329 from memory into f15
fnmadd.s f29, f7, f23, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x24, 0x848d1193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe1cc9a8 # load x3 with value 0xbe1cc9a8
sw x3, 0(x2) # store 0xbe1cc9a8 in memory
flw f1, 0(x2) # load 0xbe1cc9a8 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0x2e55b4c3 # load x3 with value 0x2e55b4c3
sw x3, 0(x2) # store 0x2e55b4c3 in memory
flw f11, 0(x2) # load 0x2e55b4c3 from memory into f11
fnmadd.s f24, f1, f30, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x24, 0xaa1580fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a0ca039 # load x3 with value 0x1a0ca039
sw x3, 0(x2) # store 0x1a0ca039 in memory
flw f31, 0(x2) # load 0x1a0ca039 from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x71b5d095 # load x3 with value 0x71b5d095
sw x3, 0(x2) # store 0x71b5d095 in memory
flw f17, 0(x2) # load 0x71b5d095 from memory into f17
fnmadd.s f24, f31, f14, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x14, 0x95b7f1e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fba04b8 # load x3 with value 0x3fba04b8
sw x3, 0(x2) # store 0x3fba04b8 in memory
flw f12, 0(x2) # load 0x3fba04b8 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x675e8b1a # load x3 with value 0x675e8b1a
sw x3, 0(x2) # store 0x675e8b1a in memory
flw f18, 0(x2) # load 0x675e8b1a from memory into f18
fnmadd.s f14, f12, f25, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x20, 0x7c2be1a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x361a816b # load x3 with value 0x361a816b
sw x3, 0(x2) # store 0x361a816b in memory
flw f6, 0(x2) # load 0x361a816b from memory into f6
li x3, 0xabd305f1 # load x3 with value 0xabd305f1
sw x3, 0(x2) # store 0xabd305f1 in memory
flw f24, 0(x2) # load 0xabd305f1 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.s f20, f6, f24, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x3, 0xa780ea67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0306c43 # load x3 with value 0xd0306c43
sw x3, 0(x2) # store 0xd0306c43 in memory
flw f26, 0(x2) # load 0xd0306c43 from memory into f26
li x3, 0x4f2404d1 # load x3 with value 0x4f2404d1
sw x3, 0(x2) # store 0x4f2404d1 in memory
flw f30, 0(x2) # load 0x4f2404d1 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fnmadd.s f3, f26, f30, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x4, 0xec2cfeaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69b0aff4 # load x3 with value 0x69b0aff4
sw x3, 0(x2) # store 0x69b0aff4 in memory
flw f18, 0(x2) # load 0x69b0aff4 from memory into f18
li x3, 0xed334385 # load x3 with value 0xed334385
sw x3, 0(x2) # store 0xed334385 in memory
flw f27, 0(x2) # load 0xed334385 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmadd.s f4, f18, f27, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x8, 0xafba1aa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7134524 # load x3 with value 0xb7134524
sw x3, 0(x2) # store 0xb7134524 in memory
flw f6, 0(x2) # load 0xb7134524 from memory into f6
li x3, 0x8bd5dbd3 # load x3 with value 0x8bd5dbd3
sw x3, 0(x2) # store 0x8bd5dbd3 in memory
flw f12, 0(x2) # load 0x8bd5dbd3 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fnmadd.s f8, f6, f12, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x3, 0x50a1c59c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bd2a825 # load x3 with value 0x1bd2a825
sw x3, 0(x2) # store 0x1bd2a825 in memory
flw f22, 0(x2) # load 0x1bd2a825 from memory into f22
li x3, 0xb275fa13 # load x3 with value 0xb275fa13
sw x3, 0(x2) # store 0xb275fa13 in memory
flw f7, 0(x2) # load 0xb275fa13 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f3, f22, f7, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x19, 0x76547919 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6585e4b # load x3 with value 0xf6585e4b
sw x3, 0(x2) # store 0xf6585e4b in memory
flw f26, 0(x2) # load 0xf6585e4b from memory into f26
li x3, 0x49415fb1 # load x3 with value 0x49415fb1
sw x3, 0(x2) # store 0x49415fb1 in memory
flw f17, 0(x2) # load 0x49415fb1 from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fnmadd.s f19, f26, f17, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x25, 0xf78463b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x488914b5 # load x3 with value 0x488914b5
sw x3, 0(x2) # store 0x488914b5 in memory
flw f22, 0(x2) # load 0x488914b5 from memory into f22
li x3, 0x57bc9bd6 # load x3 with value 0x57bc9bd6
sw x3, 0(x2) # store 0x57bc9bd6 in memory
flw f17, 0(x2) # load 0x57bc9bd6 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fnmadd.s f25, f22, f17, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x24, 0x78f711ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a7262d4 # load x3 with value 0x4a7262d4
sw x3, 0(x2) # store 0x4a7262d4 in memory
flw f21, 0(x2) # load 0x4a7262d4 from memory into f21
li x3, 0xc6711f7a # load x3 with value 0xc6711f7a
sw x3, 0(x2) # store 0xc6711f7a in memory
flw f18, 0(x2) # load 0xc6711f7a from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmadd.s f24, f21, f18, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x31, 0xd9ea68e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd5d315e # load x3 with value 0xdd5d315e
sw x3, 0(x2) # store 0xdd5d315e in memory
flw f10, 0(x2) # load 0xdd5d315e from memory into f10
li x3, 0x6267b657 # load x3 with value 0x6267b657
sw x3, 0(x2) # store 0x6267b657 in memory
flw f23, 0(x2) # load 0x6267b657 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmadd.s f31, f10, f23, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x15, 0x5747aef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c7d385d # load x3 with value 0x7c7d385d
sw x3, 0(x2) # store 0x7c7d385d in memory
flw f12, 0(x2) # load 0x7c7d385d from memory into f12
li x3, 0xe6348bed # load x3 with value 0xe6348bed
sw x3, 0(x2) # store 0xe6348bed in memory
flw f18, 0(x2) # load 0xe6348bed from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f15, f12, f18, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x26, 0xa76e2a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4be8c99c # load x3 with value 0x4be8c99c
sw x3, 0(x2) # store 0x4be8c99c in memory
flw f24, 0(x2) # load 0x4be8c99c from memory into f24
li x3, 0x41f8d31e # load x3 with value 0x41f8d31e
sw x3, 0(x2) # store 0x41f8d31e in memory
flw f14, 0(x2) # load 0x41f8d31e from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmadd.s f26, f24, f14, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x17, 0xf65d3481 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8c5e4e7 # load x3 with value 0xe8c5e4e7
sw x3, 0(x2) # store 0xe8c5e4e7 in memory
flw f19, 0(x2) # load 0xe8c5e4e7 from memory into f19
li x3, 0xd9876d67 # load x3 with value 0xd9876d67
sw x3, 0(x2) # store 0xd9876d67 in memory
flw f28, 0(x2) # load 0xd9876d67 from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fnmadd.s f17, f19, f28, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x26, 0x8a8b884a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d343d7f # load x3 with value 0x5d343d7f
sw x3, 0(x2) # store 0x5d343d7f in memory
flw f11, 0(x2) # load 0x5d343d7f from memory into f11
li x3, 0xcfe9c0ec # load x3 with value 0xcfe9c0ec
sw x3, 0(x2) # store 0xcfe9c0ec in memory
flw f5, 0(x2) # load 0xcfe9c0ec from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmadd.s f26, f11, f5, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x30, 0x49f19e52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf32d1ee2 # load x3 with value 0xf32d1ee2
sw x3, 0(x2) # store 0xf32d1ee2 in memory
flw f25, 0(x2) # load 0xf32d1ee2 from memory into f25
li x3, 0x827f50a2 # load x3 with value 0x827f50a2
sw x3, 0(x2) # store 0x827f50a2 in memory
flw f28, 0(x2) # load 0x827f50a2 from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmadd.s f30, f25, f28, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x22, 0xa3188a80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf468c759 # load x3 with value 0xf468c759
sw x3, 0(x2) # store 0xf468c759 in memory
flw f28, 0(x2) # load 0xf468c759 from memory into f28
li x3, 0xf6d85389 # load x3 with value 0xf6d85389
sw x3, 0(x2) # store 0xf6d85389 in memory
flw f18, 0(x2) # load 0xf6d85389 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmadd.s f22, f28, f18, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x19, 0xd44256a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f318a84 # load x3 with value 0x2f318a84
sw x3, 0(x2) # store 0x2f318a84 in memory
flw f5, 0(x2) # load 0x2f318a84 from memory into f5
li x3, 0xe6c3db3c # load x3 with value 0xe6c3db3c
sw x3, 0(x2) # store 0xe6c3db3c in memory
flw f31, 0(x2) # load 0xe6c3db3c from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fnmadd.s f19, f5, f31, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x29, 0x8502ebb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x128b87fa # load x3 with value 0x128b87fa
sw x3, 0(x2) # store 0x128b87fa in memory
flw f3, 0(x2) # load 0x128b87fa from memory into f3
li x3, 0x8ab9ad7a # load x3 with value 0x8ab9ad7a
sw x3, 0(x2) # store 0x8ab9ad7a in memory
flw f31, 0(x2) # load 0x8ab9ad7a from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.s f29, f3, f31, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x6, 0xaaaae04d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7eea593d # load x3 with value 0x7eea593d
sw x3, 0(x2) # store 0x7eea593d in memory
flw f28, 0(x2) # load 0x7eea593d from memory into f28
li x3, 0xd0eb120c # load x3 with value 0xd0eb120c
sw x3, 0(x2) # store 0xd0eb120c in memory
flw f23, 0(x2) # load 0xd0eb120c from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
fnmadd.s f6, f28, f23, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x2, 0xfd610a45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x18e1bcea # load x3 with value 0x18e1bcea
sw x3, 0(x2) # store 0x18e1bcea in memory
flw f29, 0(x2) # load 0x18e1bcea from memory into f29
li x3, 0x03c654a3 # load x3 with value 0x03c654a3
sw x3, 0(x2) # store 0x03c654a3 in memory
flw f25, 0(x2) # load 0x03c654a3 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f2, f29, f25, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x6, 0x73eb5c6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa10dbb06 # load x3 with value 0xa10dbb06
sw x3, 0(x2) # store 0xa10dbb06 in memory
flw f27, 0(x2) # load 0xa10dbb06 from memory into f27
li x3, 0xd075c526 # load x3 with value 0xd075c526
sw x3, 0(x2) # store 0xd075c526 in memory
flw f20, 0(x2) # load 0xd075c526 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fnmadd.s f6, f27, f20, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x15, 0x8bdc4f07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d689ec6 # load x3 with value 0x9d689ec6
sw x3, 0(x2) # store 0x9d689ec6 in memory
flw f9, 0(x2) # load 0x9d689ec6 from memory into f9
li x3, 0x1db9c8a3 # load x3 with value 0x1db9c8a3
sw x3, 0(x2) # store 0x1db9c8a3 in memory
flw f24, 0(x2) # load 0x1db9c8a3 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
fnmadd.s f15, f9, f24, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x15, 0x12b823ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x080e06e8 # load x3 with value 0x080e06e8
sw x3, 0(x2) # store 0x080e06e8 in memory
flw f23, 0(x2) # load 0x080e06e8 from memory into f23
li x3, 0x417cb12d # load x3 with value 0x417cb12d
sw x3, 0(x2) # store 0x417cb12d in memory
flw f28, 0(x2) # load 0x417cb12d from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmadd.s f15, f23, f28, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x2, 0x77be6e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb63ccbb # load x3 with value 0xdb63ccbb
sw x3, 0(x2) # store 0xdb63ccbb in memory
flw f5, 0(x2) # load 0xdb63ccbb from memory into f5
li x3, 0xb0e14476 # load x3 with value 0xb0e14476
sw x3, 0(x2) # store 0xb0e14476 in memory
flw f1, 0(x2) # load 0xb0e14476 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fnmadd.s f2, f5, f1, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x17, 0x11cacbed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfe1958b2 # load x3 with value 0xfe1958b2
sw x3, 0(x2) # store 0xfe1958b2 in memory
flw f23, 0(x2) # load 0xfe1958b2 from memory into f23
li x3, 0xf73489ea # load x3 with value 0xf73489ea
sw x3, 0(x2) # store 0xf73489ea in memory
flw f26, 0(x2) # load 0xf73489ea from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmadd.s f17, f23, f26, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x3, 0xe92fd80f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa421d0c4 # load x3 with value 0xa421d0c4
sw x3, 0(x2) # store 0xa421d0c4 in memory
flw f9, 0(x2) # load 0xa421d0c4 from memory into f9
li x3, 0x37490e54 # load x3 with value 0x37490e54
sw x3, 0(x2) # store 0x37490e54 in memory
flw f20, 0(x2) # load 0x37490e54 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmadd.s f3, f9, f20, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x11, 0x06a2d749 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb10257eb # load x3 with value 0xb10257eb
sw x3, 0(x2) # store 0xb10257eb in memory
flw f27, 0(x2) # load 0xb10257eb from memory into f27
li x3, 0xa6712640 # load x3 with value 0xa6712640
sw x3, 0(x2) # store 0xa6712640 in memory
flw f1, 0(x2) # load 0xa6712640 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fnmadd.s f11, f27, f1, f22 # perform operation

# Testcase cp_frm
li x22, 0x75268155 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa85ead14 # load x3 with value 0xa85ead14
sw x3, 0(x2) # store 0xa85ead14 in memory
flw f29, 0(x2) # load 0xa85ead14 from memory into f29
li x3, 0x3ed7734e # load x3 with value 0x3ed7734e
sw x3, 0(x2) # store 0x3ed7734e in memory
flw f19, 0(x2) # load 0x3ed7734e from memory into f19
li x3, 0x00000018 # load x3 with value 0x00000018
sw x3, 0(x2) # store 0x00000018 in memory
flw f24, 0(x2) # load 0x00000018 from memory into f24
fnmadd.s f22, f29, f19, f24, dyn # perform operation
fnmadd.s f22, f29, f19, f24, rdn # perform operation
fnmadd.s f22, f29, f19, f24, rmm # perform operation
fnmadd.s f22, f29, f19, f24, rne # perform operation
fnmadd.s f22, f29, f19, f24, rtz # perform operation
fnmadd.s f22, f29, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x10, 0xa7965be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x7ef83f29 # load x3 with value 0x7ef83f29
sw x3, 0(x2) # store 0x7ef83f29 in memory
flw f9, 0(x2) # load 0x7ef83f29 from memory into f9
fnmadd.s f10, f7, f26, f9, dyn # perform operation
fnmadd.s f10, f7, f26, f9, rdn # perform operation
fnmadd.s f10, f7, f26, f9, rmm # perform operation
fnmadd.s f10, f7, f26, f9, rne # perform operation
fnmadd.s f10, f7, f26, f9, rtz # perform operation
fnmadd.s f10, f7, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f7, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x17, 0x33a8ed9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0xee6385c6 # load x3 with value 0xee6385c6
sw x3, 0(x2) # store 0xee6385c6 in memory
flw f4, 0(x2) # load 0xee6385c6 from memory into f4
fnmadd.s f17, f2, f30, f4, dyn # perform operation
fnmadd.s f17, f2, f30, f4, rdn # perform operation
fnmadd.s f17, f2, f30, f4, rmm # perform operation
fnmadd.s f17, f2, f30, f4, rne # perform operation
fnmadd.s f17, f2, f30, f4, rtz # perform operation
fnmadd.s f17, f2, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x21, 0x582b588e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xd6ab383a # load x3 with value 0xd6ab383a
sw x3, 0(x2) # store 0xd6ab383a in memory
flw f29, 0(x2) # load 0xd6ab383a from memory into f29
fnmadd.s f21, f5, f8, f29, dyn # perform operation
fnmadd.s f21, f5, f8, f29, rdn # perform operation
fnmadd.s f21, f5, f8, f29, rmm # perform operation
fnmadd.s f21, f5, f8, f29, rne # perform operation
fnmadd.s f21, f5, f8, f29, rtz # perform operation
fnmadd.s f21, f5, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x13, 0x050e0aa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x05d0a407 # load x3 with value 0x05d0a407
sw x3, 0(x2) # store 0x05d0a407 in memory
flw f17, 0(x2) # load 0x05d0a407 from memory into f17
fnmadd.s f13, f3, f1, f17, dyn # perform operation
fnmadd.s f13, f3, f1, f17, rdn # perform operation
fnmadd.s f13, f3, f1, f17, rmm # perform operation
fnmadd.s f13, f3, f1, f17, rne # perform operation
fnmadd.s f13, f3, f1, f17, rtz # perform operation
fnmadd.s f13, f3, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f3, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f3, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f3, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f3, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f3, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x27, 0x6f7d351a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0xa4da6d03 # load x3 with value 0xa4da6d03
sw x3, 0(x2) # store 0xa4da6d03 in memory
flw f29, 0(x2) # load 0xa4da6d03 from memory into f29
fnmadd.s f27, f31, f17, f29, dyn # perform operation
fnmadd.s f27, f31, f17, f29, rdn # perform operation
fnmadd.s f27, f31, f17, f29, rmm # perform operation
fnmadd.s f27, f31, f17, f29, rne # perform operation
fnmadd.s f27, f31, f17, f29, rtz # perform operation
fnmadd.s f27, f31, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x28, 0xf101acb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x9e033b2c # load x3 with value 0x9e033b2c
sw x3, 0(x2) # store 0x9e033b2c in memory
flw f20, 0(x2) # load 0x9e033b2c from memory into f20
fnmadd.s f28, f2, f6, f20, dyn # perform operation
fnmadd.s f28, f2, f6, f20, rdn # perform operation
fnmadd.s f28, f2, f6, f20, rmm # perform operation
fnmadd.s f28, f2, f6, f20, rne # perform operation
fnmadd.s f28, f2, f6, f20, rtz # perform operation
fnmadd.s f28, f2, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f2, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x16, 0xbd72472e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x93471dfb # load x3 with value 0x93471dfb
sw x3, 0(x2) # store 0x93471dfb in memory
flw f6, 0(x2) # load 0x93471dfb from memory into f6
fnmadd.s f16, f31, f21, f6, dyn # perform operation
fnmadd.s f16, f31, f21, f6, rdn # perform operation
fnmadd.s f16, f31, f21, f6, rmm # perform operation
fnmadd.s f16, f31, f21, f6, rne # perform operation
fnmadd.s f16, f31, f21, f6, rtz # perform operation
fnmadd.s f16, f31, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f31, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x19, 0x3aa00efe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x17315fe1 # load x3 with value 0x17315fe1
sw x3, 0(x2) # store 0x17315fe1 in memory
flw f11, 0(x2) # load 0x17315fe1 from memory into f11
fnmadd.s f19, f31, f17, f11, dyn # perform operation
fnmadd.s f19, f31, f17, f11, rdn # perform operation
fnmadd.s f19, f31, f17, f11, rmm # perform operation
fnmadd.s f19, f31, f17, f11, rne # perform operation
fnmadd.s f19, f31, f17, f11, rtz # perform operation
fnmadd.s f19, f31, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x14, 0x298713d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x14b73594 # load x3 with value 0x14b73594
sw x3, 0(x2) # store 0x14b73594 in memory
flw f3, 0(x2) # load 0x14b73594 from memory into f3
fnmadd.s f14, f27, f5, f3, dyn # perform operation
fnmadd.s f14, f27, f5, f3, rdn # perform operation
fnmadd.s f14, f27, f5, f3, rmm # perform operation
fnmadd.s f14, f27, f5, f3, rne # perform operation
fnmadd.s f14, f27, f5, f3, rtz # perform operation
fnmadd.s f14, f27, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f27, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f27, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f27, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f27, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f27, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x30, 0xf57a23ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0xc038ba6d # load x3 with value 0xc038ba6d
sw x3, 0(x2) # store 0xc038ba6d in memory
flw f22, 0(x2) # load 0xc038ba6d from memory into f22
fnmadd.s f30, f14, f1, f22, dyn # perform operation
fnmadd.s f30, f14, f1, f22, rdn # perform operation
fnmadd.s f30, f14, f1, f22, rmm # perform operation
fnmadd.s f30, f14, f1, f22, rne # perform operation
fnmadd.s f30, f14, f1, f22, rtz # perform operation
fnmadd.s f30, f14, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f14, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x14, 0x3d67d0bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0xd65fbf5a # load x3 with value 0xd65fbf5a
sw x3, 0(x2) # store 0xd65fbf5a in memory
flw f28, 0(x2) # load 0xd65fbf5a from memory into f28
fnmadd.s f14, f6, f12, f28, dyn # perform operation
fnmadd.s f14, f6, f12, f28, rdn # perform operation
fnmadd.s f14, f6, f12, f28, rmm # perform operation
fnmadd.s f14, f6, f12, f28, rne # perform operation
fnmadd.s f14, f6, f12, f28, rtz # perform operation
fnmadd.s f14, f6, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f6, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x30, 0xbeab8732 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x4f3b6b85 # load x3 with value 0x4f3b6b85
sw x3, 0(x2) # store 0x4f3b6b85 in memory
flw f22, 0(x2) # load 0x4f3b6b85 from memory into f22
fnmadd.s f30, f17, f6, f22, dyn # perform operation
fnmadd.s f30, f17, f6, f22, rdn # perform operation
fnmadd.s f30, f17, f6, f22, rmm # perform operation
fnmadd.s f30, f17, f6, f22, rne # perform operation
fnmadd.s f30, f17, f6, f22, rtz # perform operation
fnmadd.s f30, f17, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f17, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f17, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x31, 0x3d9a1a1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x60393ba0 # load x3 with value 0x60393ba0
sw x3, 0(x2) # store 0x60393ba0 in memory
flw f26, 0(x2) # load 0x60393ba0 from memory into f26
fnmadd.s f31, f12, f17, f26, dyn # perform operation
fnmadd.s f31, f12, f17, f26, rdn # perform operation
fnmadd.s f31, f12, f17, f26, rmm # perform operation
fnmadd.s f31, f12, f17, f26, rne # perform operation
fnmadd.s f31, f12, f17, f26, rtz # perform operation
fnmadd.s f31, f12, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x3, 0xecdf131a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x68415c67 # load x3 with value 0x68415c67
sw x3, 0(x2) # store 0x68415c67 in memory
flw f19, 0(x2) # load 0x68415c67 from memory into f19
fnmadd.s f3, f17, f2, f19, dyn # perform operation
fnmadd.s f3, f17, f2, f19, rdn # perform operation
fnmadd.s f3, f17, f2, f19, rmm # perform operation
fnmadd.s f3, f17, f2, f19, rne # perform operation
fnmadd.s f3, f17, f2, f19, rtz # perform operation
fnmadd.s f3, f17, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f17, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f17, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x5, 0x7316fa11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xf131bdc2 # load x3 with value 0xf131bdc2
sw x3, 0(x2) # store 0xf131bdc2 in memory
flw f25, 0(x2) # load 0xf131bdc2 from memory into f25
fnmadd.s f5, f9, f8, f25, dyn # perform operation
fnmadd.s f5, f9, f8, f25, rdn # perform operation
fnmadd.s f5, f9, f8, f25, rmm # perform operation
fnmadd.s f5, f9, f8, f25, rne # perform operation
fnmadd.s f5, f9, f8, f25, rtz # perform operation
fnmadd.s f5, f9, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x29, 0x0e6e7fc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x07439869 # load x3 with value 0x07439869
sw x3, 0(x2) # store 0x07439869 in memory
flw f5, 0(x2) # load 0x07439869 from memory into f5
fnmadd.s f29, f31, f6, f5, dyn # perform operation
fnmadd.s f29, f31, f6, f5, rdn # perform operation
fnmadd.s f29, f31, f6, f5, rmm # perform operation
fnmadd.s f29, f31, f6, f5, rne # perform operation
fnmadd.s f29, f31, f6, f5, rtz # perform operation
fnmadd.s f29, f31, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f31, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x15, 0x0a2f0fb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xfc22b1cd # load x3 with value 0xfc22b1cd
sw x3, 0(x2) # store 0xfc22b1cd in memory
flw f1, 0(x2) # load 0xfc22b1cd from memory into f1
fnmadd.s f15, f24, f4, f1, dyn # perform operation
fnmadd.s f15, f24, f4, f1, rdn # perform operation
fnmadd.s f15, f24, f4, f1, rmm # perform operation
fnmadd.s f15, f24, f4, f1, rne # perform operation
fnmadd.s f15, f24, f4, f1, rtz # perform operation
fnmadd.s f15, f24, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f24, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f24, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f24, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f24, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f24, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x20, 0x50263a91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x24a441a0 # load x3 with value 0x24a441a0
sw x3, 0(x2) # store 0x24a441a0 in memory
flw f24, 0(x2) # load 0x24a441a0 from memory into f24
fnmadd.s f20, f13, f16, f24, dyn # perform operation
fnmadd.s f20, f13, f16, f24, rdn # perform operation
fnmadd.s f20, f13, f16, f24, rmm # perform operation
fnmadd.s f20, f13, f16, f24, rne # perform operation
fnmadd.s f20, f13, f16, f24, rtz # perform operation
fnmadd.s f20, f13, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f13, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f13, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x16, 0xd4dc210c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x381572c5 # load x3 with value 0x381572c5
sw x3, 0(x2) # store 0x381572c5 in memory
flw f15, 0(x2) # load 0x381572c5 from memory into f15
fnmadd.s f16, f29, f5, f15, dyn # perform operation
fnmadd.s f16, f29, f5, f15, rdn # perform operation
fnmadd.s f16, f29, f5, f15, rmm # perform operation
fnmadd.s f16, f29, f5, f15, rne # perform operation
fnmadd.s f16, f29, f5, f15, rtz # perform operation
fnmadd.s f16, f29, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x24, 0x949c0797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x6ecb4d65 # load x3 with value 0x6ecb4d65
sw x3, 0(x2) # store 0x6ecb4d65 in memory
flw f22, 0(x2) # load 0x6ecb4d65 from memory into f22
fnmadd.s f24, f20, f23, f22, dyn # perform operation
fnmadd.s f24, f20, f23, f22, rdn # perform operation
fnmadd.s f24, f20, f23, f22, rmm # perform operation
fnmadd.s f24, f20, f23, f22, rne # perform operation
fnmadd.s f24, f20, f23, f22, rtz # perform operation
fnmadd.s f24, f20, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x14, 0x251e2ae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x448cd050 # load x3 with value 0x448cd050
sw x3, 0(x2) # store 0x448cd050 in memory
flw f22, 0(x2) # load 0x448cd050 from memory into f22
fnmadd.s f14, f4, f6, f22, dyn # perform operation
fnmadd.s f14, f4, f6, f22, rdn # perform operation
fnmadd.s f14, f4, f6, f22, rmm # perform operation
fnmadd.s f14, f4, f6, f22, rne # perform operation
fnmadd.s f14, f4, f6, f22, rtz # perform operation
fnmadd.s f14, f4, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f4, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f4, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x11, 0x1e8665c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x49ce3466 # load x3 with value 0x49ce3466
sw x3, 0(x2) # store 0x49ce3466 in memory
flw f20, 0(x2) # load 0x49ce3466 from memory into f20
fnmadd.s f11, f4, f14, f20, dyn # perform operation
fnmadd.s f11, f4, f14, f20, rdn # perform operation
fnmadd.s f11, f4, f14, f20, rmm # perform operation
fnmadd.s f11, f4, f14, f20, rne # perform operation
fnmadd.s f11, f4, f14, f20, rtz # perform operation
fnmadd.s f11, f4, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f4, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f4, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f4, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f4, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f4, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x25, 0xbf067c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x8ca6a7ab # load x3 with value 0x8ca6a7ab
sw x3, 0(x2) # store 0x8ca6a7ab in memory
flw f20, 0(x2) # load 0x8ca6a7ab from memory into f20
fnmadd.s f25, f2, f5, f20, dyn # perform operation
fnmadd.s f25, f2, f5, f20, rdn # perform operation
fnmadd.s f25, f2, f5, f20, rmm # perform operation
fnmadd.s f25, f2, f5, f20, rne # perform operation
fnmadd.s f25, f2, f5, f20, rtz # perform operation
fnmadd.s f25, f2, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f2, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f2, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x10, 0x22742664 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xa49c74f0 # load x3 with value 0xa49c74f0
sw x3, 0(x2) # store 0xa49c74f0 in memory
flw f26, 0(x2) # load 0xa49c74f0 from memory into f26
fnmadd.s f10, f11, f3, f26, dyn # perform operation
fnmadd.s f10, f11, f3, f26, rdn # perform operation
fnmadd.s f10, f11, f3, f26, rmm # perform operation
fnmadd.s f10, f11, f3, f26, rne # perform operation
fnmadd.s f10, f11, f3, f26, rtz # perform operation
fnmadd.s f10, f11, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f11, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x15, 0x33e57e95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xd53ea285 # load x3 with value 0xd53ea285
sw x3, 0(x2) # store 0xd53ea285 in memory
flw f5, 0(x2) # load 0xd53ea285 from memory into f5
fnmadd.s f15, f23, f30, f5, dyn # perform operation
fnmadd.s f15, f23, f30, f5, rdn # perform operation
fnmadd.s f15, f23, f30, f5, rmm # perform operation
fnmadd.s f15, f23, f30, f5, rne # perform operation
fnmadd.s f15, f23, f30, f5, rtz # perform operation
fnmadd.s f15, f23, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f23, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x30, 0xb3704530 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x25da98c4 # load x3 with value 0x25da98c4
sw x3, 0(x2) # store 0x25da98c4 in memory
flw f24, 0(x2) # load 0x25da98c4 from memory into f24
fnmadd.s f30, f19, f13, f24, dyn # perform operation
fnmadd.s f30, f19, f13, f24, rdn # perform operation
fnmadd.s f30, f19, f13, f24, rmm # perform operation
fnmadd.s f30, f19, f13, f24, rne # perform operation
fnmadd.s f30, f19, f13, f24, rtz # perform operation
fnmadd.s f30, f19, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f19, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x3, 0x2929f168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x885a13f6 # load x3 with value 0x885a13f6
sw x3, 0(x2) # store 0x885a13f6 in memory
flw f16, 0(x2) # load 0x885a13f6 from memory into f16
fnmadd.s f3, f20, f1, f16, dyn # perform operation
fnmadd.s f3, f20, f1, f16, rdn # perform operation
fnmadd.s f3, f20, f1, f16, rmm # perform operation
fnmadd.s f3, f20, f1, f16, rne # perform operation
fnmadd.s f3, f20, f1, f16, rtz # perform operation
fnmadd.s f3, f20, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f20, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x12, 0x71ab79b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x56167584 # load x3 with value 0x56167584
sw x3, 0(x2) # store 0x56167584 in memory
flw f15, 0(x2) # load 0x56167584 from memory into f15
fnmadd.s f12, f14, f23, f15, dyn # perform operation
fnmadd.s f12, f14, f23, f15, rdn # perform operation
fnmadd.s f12, f14, f23, f15, rmm # perform operation
fnmadd.s f12, f14, f23, f15, rne # perform operation
fnmadd.s f12, f14, f23, f15, rtz # perform operation
fnmadd.s f12, f14, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x5, 0x23896936 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x85ec84be # load x3 with value 0x85ec84be
sw x3, 0(x2) # store 0x85ec84be in memory
flw f3, 0(x2) # load 0x85ec84be from memory into f3
fnmadd.s f5, f13, f4, f3, dyn # perform operation
fnmadd.s f5, f13, f4, f3, rdn # perform operation
fnmadd.s f5, f13, f4, f3, rmm # perform operation
fnmadd.s f5, f13, f4, f3, rne # perform operation
fnmadd.s f5, f13, f4, f3, rtz # perform operation
fnmadd.s f5, f13, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f13, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f13, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x30, 0x61c274af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x1ba17a6f # load x3 with value 0x1ba17a6f
sw x3, 0(x2) # store 0x1ba17a6f in memory
flw f8, 0(x2) # load 0x1ba17a6f from memory into f8
fnmadd.s f30, f16, f14, f8, dyn # perform operation
fnmadd.s f30, f16, f14, f8, rdn # perform operation
fnmadd.s f30, f16, f14, f8, rmm # perform operation
fnmadd.s f30, f16, f14, f8, rne # perform operation
fnmadd.s f30, f16, f14, f8, rtz # perform operation
fnmadd.s f30, f16, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f16, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x22, 0x13d87777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xb43f533c # load x3 with value 0xb43f533c
sw x3, 0(x2) # store 0xb43f533c in memory
flw f10, 0(x2) # load 0xb43f533c from memory into f10
fnmadd.s f22, f6, f4, f10, dyn # perform operation
fnmadd.s f22, f6, f4, f10, rdn # perform operation
fnmadd.s f22, f6, f4, f10, rmm # perform operation
fnmadd.s f22, f6, f4, f10, rne # perform operation
fnmadd.s f22, f6, f4, f10, rtz # perform operation
fnmadd.s f22, f6, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f6, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f6, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f6, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f6, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f6, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x20, 0xf572ad1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xf12595e2 # load x3 with value 0xf12595e2
sw x3, 0(x2) # store 0xf12595e2 in memory
flw f15, 0(x2) # load 0xf12595e2 from memory into f15
fnmadd.s f20, f12, f7, f15, dyn # perform operation
fnmadd.s f20, f12, f7, f15, rdn # perform operation
fnmadd.s f20, f12, f7, f15, rmm # perform operation
fnmadd.s f20, f12, f7, f15, rne # perform operation
fnmadd.s f20, f12, f7, f15, rtz # perform operation
fnmadd.s f20, f12, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x7, 0xb4d4fcc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x082cff3e # load x3 with value 0x082cff3e
sw x3, 0(x2) # store 0x082cff3e in memory
flw f13, 0(x2) # load 0x082cff3e from memory into f13
fnmadd.s f7, f3, f26, f13, dyn # perform operation
fnmadd.s f7, f3, f26, f13, rdn # perform operation
fnmadd.s f7, f3, f26, f13, rmm # perform operation
fnmadd.s f7, f3, f26, f13, rne # perform operation
fnmadd.s f7, f3, f26, f13, rtz # perform operation
fnmadd.s f7, f3, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f3, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x30, 0x5f98ff5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x193a48af # load x3 with value 0x193a48af
sw x3, 0(x2) # store 0x193a48af in memory
flw f11, 0(x2) # load 0x193a48af from memory into f11
fnmadd.s f30, f17, f31, f11, dyn # perform operation
fnmadd.s f30, f17, f31, f11, rdn # perform operation
fnmadd.s f30, f17, f31, f11, rmm # perform operation
fnmadd.s f30, f17, f31, f11, rne # perform operation
fnmadd.s f30, f17, f31, f11, rtz # perform operation
fnmadd.s f30, f17, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f17, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f17, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x19, 0xf11c84da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x15387e44 # load x3 with value 0x15387e44
sw x3, 0(x2) # store 0x15387e44 in memory
flw f7, 0(x2) # load 0x15387e44 from memory into f7
fnmadd.s f19, f2, f1, f7, dyn # perform operation
fnmadd.s f19, f2, f1, f7, rdn # perform operation
fnmadd.s f19, f2, f1, f7, rmm # perform operation
fnmadd.s f19, f2, f1, f7, rne # perform operation
fnmadd.s f19, f2, f1, f7, rtz # perform operation
fnmadd.s f19, f2, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x20, 0x49235564 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xaf2f37f9 # load x3 with value 0xaf2f37f9
sw x3, 0(x2) # store 0xaf2f37f9 in memory
flw f28, 0(x2) # load 0xaf2f37f9 from memory into f28
fnmadd.s f20, f26, f5, f28, dyn # perform operation
fnmadd.s f20, f26, f5, f28, rdn # perform operation
fnmadd.s f20, f26, f5, f28, rmm # perform operation
fnmadd.s f20, f26, f5, f28, rne # perform operation
fnmadd.s f20, f26, f5, f28, rtz # perform operation
fnmadd.s f20, f26, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x14, 0x3efbfdfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xbd754838 # load x3 with value 0xbd754838
sw x3, 0(x2) # store 0xbd754838 in memory
flw f8, 0(x2) # load 0xbd754838 from memory into f8
fnmadd.s f14, f21, f23, f8, dyn # perform operation
fnmadd.s f14, f21, f23, f8, rdn # perform operation
fnmadd.s f14, f21, f23, f8, rmm # perform operation
fnmadd.s f14, f21, f23, f8, rne # perform operation
fnmadd.s f14, f21, f23, f8, rtz # perform operation
fnmadd.s f14, f21, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x24, 0x661ab6c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x05bd89b7 # load x3 with value 0x05bd89b7
sw x3, 0(x2) # store 0x05bd89b7 in memory
flw f12, 0(x2) # load 0x05bd89b7 from memory into f12
fnmadd.s f24, f19, f17, f12, dyn # perform operation
fnmadd.s f24, f19, f17, f12, rdn # perform operation
fnmadd.s f24, f19, f17, f12, rmm # perform operation
fnmadd.s f24, f19, f17, f12, rne # perform operation
fnmadd.s f24, f19, f17, f12, rtz # perform operation
fnmadd.s f24, f19, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f19, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x4, 0x767ce741 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x08a697c5 # load x3 with value 0x08a697c5
sw x3, 0(x2) # store 0x08a697c5 in memory
flw f18, 0(x2) # load 0x08a697c5 from memory into f18
fnmadd.s f4, f17, f26, f18, dyn # perform operation
fnmadd.s f4, f17, f26, f18, rdn # perform operation
fnmadd.s f4, f17, f26, f18, rmm # perform operation
fnmadd.s f4, f17, f26, f18, rne # perform operation
fnmadd.s f4, f17, f26, f18, rtz # perform operation
fnmadd.s f4, f17, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x24, 0x26527274 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x31be4517 # load x3 with value 0x31be4517
sw x3, 0(x2) # store 0x31be4517 in memory
flw f14, 0(x2) # load 0x31be4517 from memory into f14
fnmadd.s f24, f31, f11, f14, dyn # perform operation
fnmadd.s f24, f31, f11, f14, rdn # perform operation
fnmadd.s f24, f31, f11, f14, rmm # perform operation
fnmadd.s f24, f31, f11, f14, rne # perform operation
fnmadd.s f24, f31, f11, f14, rtz # perform operation
fnmadd.s f24, f31, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f11, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x12, 0x22b9e2b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xa826f40b # load x3 with value 0xa826f40b
sw x3, 0(x2) # store 0xa826f40b in memory
flw f6, 0(x2) # load 0xa826f40b from memory into f6
fnmadd.s f12, f31, f16, f6, dyn # perform operation
fnmadd.s f12, f31, f16, f6, rdn # perform operation
fnmadd.s f12, f31, f16, f6, rmm # perform operation
fnmadd.s f12, f31, f16, f6, rne # perform operation
fnmadd.s f12, f31, f16, f6, rtz # perform operation
fnmadd.s f12, f31, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f31, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x28, 0x36cf0b51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xe599dea0 # load x3 with value 0xe599dea0
sw x3, 0(x2) # store 0xe599dea0 in memory
flw f31, 0(x2) # load 0xe599dea0 from memory into f31
fnmadd.s f28, f27, f20, f31, dyn # perform operation
fnmadd.s f28, f27, f20, f31, rdn # perform operation
fnmadd.s f28, f27, f20, f31, rmm # perform operation
fnmadd.s f28, f27, f20, f31, rne # perform operation
fnmadd.s f28, f27, f20, f31, rtz # perform operation
fnmadd.s f28, f27, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x30, 0x3937054e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0xaba4ff50 # load x3 with value 0xaba4ff50
sw x3, 0(x2) # store 0xaba4ff50 in memory
flw f25, 0(x2) # load 0xaba4ff50 from memory into f25
fnmadd.s f30, f1, f20, f25, dyn # perform operation
fnmadd.s f30, f1, f20, f25, rdn # perform operation
fnmadd.s f30, f1, f20, f25, rmm # perform operation
fnmadd.s f30, f1, f20, f25, rne # perform operation
fnmadd.s f30, f1, f20, f25, rtz # perform operation
fnmadd.s f30, f1, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f1, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f1, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x8, 0x247e42e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x20d583cb # load x3 with value 0x20d583cb
sw x3, 0(x2) # store 0x20d583cb in memory
flw f6, 0(x2) # load 0x20d583cb from memory into f6
fnmadd.s f8, f27, f25, f6, dyn # perform operation
fnmadd.s f8, f27, f25, f6, rdn # perform operation
fnmadd.s f8, f27, f25, f6, rmm # perform operation
fnmadd.s f8, f27, f25, f6, rne # perform operation
fnmadd.s f8, f27, f25, f6, rtz # perform operation
fnmadd.s f8, f27, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x1, 0x8ed629a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x0be5a362 # load x3 with value 0x0be5a362
sw x3, 0(x2) # store 0x0be5a362 in memory
flw f5, 0(x2) # load 0x0be5a362 from memory into f5
fnmadd.s f1, f25, f9, f5, dyn # perform operation
fnmadd.s f1, f25, f9, f5, rdn # perform operation
fnmadd.s f1, f25, f9, f5, rmm # perform operation
fnmadd.s f1, f25, f9, f5, rne # perform operation
fnmadd.s f1, f25, f9, f5, rtz # perform operation
fnmadd.s f1, f25, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f25, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f25, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f25, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f25, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f25, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x4, 0x57e6c70b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x60b0e523 # load x3 with value 0x60b0e523
sw x3, 0(x2) # store 0x60b0e523 in memory
flw f29, 0(x2) # load 0x60b0e523 from memory into f29
fnmadd.s f4, f19, f5, f29, dyn # perform operation
fnmadd.s f4, f19, f5, f29, rdn # perform operation
fnmadd.s f4, f19, f5, f29, rmm # perform operation
fnmadd.s f4, f19, f5, f29, rne # perform operation
fnmadd.s f4, f19, f5, f29, rtz # perform operation
fnmadd.s f4, f19, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f19, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x23, 0xb83b6e80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x20696bdf # load x3 with value 0x20696bdf
sw x3, 0(x2) # store 0x20696bdf in memory
flw f13, 0(x2) # load 0x20696bdf from memory into f13
fnmadd.s f23, f3, f29, f13, dyn # perform operation
fnmadd.s f23, f3, f29, f13, rdn # perform operation
fnmadd.s f23, f3, f29, f13, rmm # perform operation
fnmadd.s f23, f3, f29, f13, rne # perform operation
fnmadd.s f23, f3, f29, f13, rtz # perform operation
fnmadd.s f23, f3, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x21, 0xb7b162b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x687d8d31 # load x3 with value 0x687d8d31
sw x3, 0(x2) # store 0x687d8d31 in memory
flw f6, 0(x2) # load 0x687d8d31 from memory into f6
fnmadd.s f21, f1, f15, f6, dyn # perform operation
fnmadd.s f21, f1, f15, f6, rdn # perform operation
fnmadd.s f21, f1, f15, f6, rmm # perform operation
fnmadd.s f21, f1, f15, f6, rne # perform operation
fnmadd.s f21, f1, f15, f6, rtz # perform operation
fnmadd.s f21, f1, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f1, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x13, 0x949f036c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x9c52a417 # load x3 with value 0x9c52a417
sw x3, 0(x2) # store 0x9c52a417 in memory
flw f4, 0(x2) # load 0x9c52a417 from memory into f4
fnmadd.s f13, f20, f26, f4, dyn # perform operation
fnmadd.s f13, f20, f26, f4, rdn # perform operation
fnmadd.s f13, f20, f26, f4, rmm # perform operation
fnmadd.s f13, f20, f26, f4, rne # perform operation
fnmadd.s f13, f20, f26, f4, rtz # perform operation
fnmadd.s f13, f20, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x1, 0xa24974d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x5c3f8d01 # load x3 with value 0x5c3f8d01
sw x3, 0(x2) # store 0x5c3f8d01 in memory
flw f21, 0(x2) # load 0x5c3f8d01 from memory into f21
fnmadd.s f1, f14, f19, f21, dyn # perform operation
fnmadd.s f1, f14, f19, f21, rdn # perform operation
fnmadd.s f1, f14, f19, f21, rmm # perform operation
fnmadd.s f1, f14, f19, f21, rne # perform operation
fnmadd.s f1, f14, f19, f21, rtz # perform operation
fnmadd.s f1, f14, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x24, 0x6358d06c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x2b48ee5b # load x3 with value 0x2b48ee5b
sw x3, 0(x2) # store 0x2b48ee5b in memory
flw f13, 0(x2) # load 0x2b48ee5b from memory into f13
fnmadd.s f24, f20, f25, f13, dyn # perform operation
fnmadd.s f24, f20, f25, f13, rdn # perform operation
fnmadd.s f24, f20, f25, f13, rmm # perform operation
fnmadd.s f24, f20, f25, f13, rne # perform operation
fnmadd.s f24, f20, f25, f13, rtz # perform operation
fnmadd.s f24, f20, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x16, 0xc1f4f15e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x40387bd6 # load x3 with value 0x40387bd6
sw x3, 0(x2) # store 0x40387bd6 in memory
flw f9, 0(x2) # load 0x40387bd6 from memory into f9
fnmadd.s f16, f18, f14, f9, dyn # perform operation
fnmadd.s f16, f18, f14, f9, rdn # perform operation
fnmadd.s f16, f18, f14, f9, rmm # perform operation
fnmadd.s f16, f18, f14, f9, rne # perform operation
fnmadd.s f16, f18, f14, f9, rtz # perform operation
fnmadd.s f16, f18, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f18, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f18, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f18, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f18, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f18, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x10, 0xc1e0e157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xcbbd1422 # load x3 with value 0xcbbd1422
sw x3, 0(x2) # store 0xcbbd1422 in memory
flw f11, 0(x2) # load 0xcbbd1422 from memory into f11
fnmadd.s f10, f12, f21, f11, dyn # perform operation
fnmadd.s f10, f12, f21, f11, rdn # perform operation
fnmadd.s f10, f12, f21, f11, rmm # perform operation
fnmadd.s f10, f12, f21, f11, rne # perform operation
fnmadd.s f10, f12, f21, f11, rtz # perform operation
fnmadd.s f10, f12, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f12, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x25, 0x2fc67477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x2ac7fe7a # load x3 with value 0x2ac7fe7a
sw x3, 0(x2) # store 0x2ac7fe7a in memory
flw f6, 0(x2) # load 0x2ac7fe7a from memory into f6
fnmadd.s f25, f26, f1, f6, dyn # perform operation
fnmadd.s f25, f26, f1, f6, rdn # perform operation
fnmadd.s f25, f26, f1, f6, rmm # perform operation
fnmadd.s f25, f26, f1, f6, rne # perform operation
fnmadd.s f25, f26, f1, f6, rtz # perform operation
fnmadd.s f25, f26, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x1, 0x74eb5622 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0xa890dd2b # load x3 with value 0xa890dd2b
sw x3, 0(x2) # store 0xa890dd2b in memory
flw f19, 0(x2) # load 0xa890dd2b from memory into f19
fnmadd.s f1, f23, f28, f19, dyn # perform operation
fnmadd.s f1, f23, f28, f19, rdn # perform operation
fnmadd.s f1, f23, f28, f19, rmm # perform operation
fnmadd.s f1, f23, f28, f19, rne # perform operation
fnmadd.s f1, f23, f28, f19, rtz # perform operation
fnmadd.s f1, f23, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x4, 0xf74a1d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xa5f2f745 # load x3 with value 0xa5f2f745
sw x3, 0(x2) # store 0xa5f2f745 in memory
flw f9, 0(x2) # load 0xa5f2f745 from memory into f9
fnmadd.s f4, f17, f5, f9, dyn # perform operation
fnmadd.s f4, f17, f5, f9, rdn # perform operation
fnmadd.s f4, f17, f5, f9, rmm # perform operation
fnmadd.s f4, f17, f5, f9, rne # perform operation
fnmadd.s f4, f17, f5, f9, rtz # perform operation
fnmadd.s f4, f17, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x16, 0xbfcfbbb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x644af28f # load x3 with value 0x644af28f
sw x3, 0(x2) # store 0x644af28f in memory
flw f1, 0(x2) # load 0x644af28f from memory into f1
fnmadd.s f16, f8, f18, f1, dyn # perform operation
fnmadd.s f16, f8, f18, f1, rdn # perform operation
fnmadd.s f16, f8, f18, f1, rmm # perform operation
fnmadd.s f16, f8, f18, f1, rne # perform operation
fnmadd.s f16, f8, f18, f1, rtz # perform operation
fnmadd.s f16, f8, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x6, 0x92c747bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x38828976 # load x3 with value 0x38828976
sw x3, 0(x2) # store 0x38828976 in memory
flw f15, 0(x2) # load 0x38828976 from memory into f15
fnmadd.s f6, f30, f5, f15, dyn # perform operation
fnmadd.s f6, f30, f5, f15, rdn # perform operation
fnmadd.s f6, f30, f5, f15, rmm # perform operation
fnmadd.s f6, f30, f5, f15, rne # perform operation
fnmadd.s f6, f30, f5, f15, rtz # perform operation
fnmadd.s f6, f30, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x7, 0x134d6269 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x2d637d08 # load x3 with value 0x2d637d08
sw x3, 0(x2) # store 0x2d637d08 in memory
flw f14, 0(x2) # load 0x2d637d08 from memory into f14
fnmadd.s f7, f23, f11, f14, dyn # perform operation
fnmadd.s f7, f23, f11, f14, rdn # perform operation
fnmadd.s f7, f23, f11, f14, rmm # perform operation
fnmadd.s f7, f23, f11, f14, rne # perform operation
fnmadd.s f7, f23, f11, f14, rtz # perform operation
fnmadd.s f7, f23, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f23, f11, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x21, 0xc0e62134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xdde5487a # load x3 with value 0xdde5487a
sw x3, 0(x2) # store 0xdde5487a in memory
flw f14, 0(x2) # load 0xdde5487a from memory into f14
fnmadd.s f21, f17, f24, f14, dyn # perform operation
fnmadd.s f21, f17, f24, f14, rdn # perform operation
fnmadd.s f21, f17, f24, f14, rmm # perform operation
fnmadd.s f21, f17, f24, f14, rne # perform operation
fnmadd.s f21, f17, f24, f14, rtz # perform operation
fnmadd.s f21, f17, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f17, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x17, 0x5896d4b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x8849d7bb # load x3 with value 0x8849d7bb
sw x3, 0(x2) # store 0x8849d7bb in memory
flw f10, 0(x2) # load 0x8849d7bb from memory into f10
fnmadd.s f17, f2, f3, f10, dyn # perform operation
fnmadd.s f17, f2, f3, f10, rdn # perform operation
fnmadd.s f17, f2, f3, f10, rmm # perform operation
fnmadd.s f17, f2, f3, f10, rne # perform operation
fnmadd.s f17, f2, f3, f10, rtz # perform operation
fnmadd.s f17, f2, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x26, 0xddc0db1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0x1f3ae690 # load x3 with value 0x1f3ae690
sw x3, 0(x2) # store 0x1f3ae690 in memory
flw f25, 0(x2) # load 0x1f3ae690 from memory into f25
fnmadd.s f26, f14, f29, f25, dyn # perform operation
fnmadd.s f26, f14, f29, f25, rdn # perform operation
fnmadd.s f26, f14, f29, f25, rmm # perform operation
fnmadd.s f26, f14, f29, f25, rne # perform operation
fnmadd.s f26, f14, f29, f25, rtz # perform operation
fnmadd.s f26, f14, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f14, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f14, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f14, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f14, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f14, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x11, 0x30105d2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x97496e3e # load x3 with value 0x97496e3e
sw x3, 0(x2) # store 0x97496e3e in memory
flw f14, 0(x2) # load 0x97496e3e from memory into f14
fnmadd.s f11, f12, f13, f14, dyn # perform operation
fnmadd.s f11, f12, f13, f14, rdn # perform operation
fnmadd.s f11, f12, f13, f14, rmm # perform operation
fnmadd.s f11, f12, f13, f14, rne # perform operation
fnmadd.s f11, f12, f13, f14, rtz # perform operation
fnmadd.s f11, f12, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f12, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x17, 0x748e3f2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x57796d22 # load x3 with value 0x57796d22
sw x3, 0(x2) # store 0x57796d22 in memory
flw f24, 0(x2) # load 0x57796d22 from memory into f24
fnmadd.s f17, f14, f20, f24, dyn # perform operation
fnmadd.s f17, f14, f20, f24, rdn # perform operation
fnmadd.s f17, f14, f20, f24, rmm # perform operation
fnmadd.s f17, f14, f20, f24, rne # perform operation
fnmadd.s f17, f14, f20, f24, rtz # perform operation
fnmadd.s f17, f14, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x27, 0x667ccc03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xe782dd58 # load x3 with value 0xe782dd58
sw x3, 0(x2) # store 0xe782dd58 in memory
flw f26, 0(x2) # load 0xe782dd58 from memory into f26
fnmadd.s f27, f5, f10, f26, dyn # perform operation
fnmadd.s f27, f5, f10, f26, rdn # perform operation
fnmadd.s f27, f5, f10, f26, rmm # perform operation
fnmadd.s f27, f5, f10, f26, rne # perform operation
fnmadd.s f27, f5, f10, f26, rtz # perform operation
fnmadd.s f27, f5, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x5, 0xd28a7d6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x2ca1d9f4 # load x3 with value 0x2ca1d9f4
sw x3, 0(x2) # store 0x2ca1d9f4 in memory
flw f24, 0(x2) # load 0x2ca1d9f4 from memory into f24
fnmadd.s f5, f17, f15, f24, dyn # perform operation
fnmadd.s f5, f17, f15, f24, rdn # perform operation
fnmadd.s f5, f17, f15, f24, rmm # perform operation
fnmadd.s f5, f17, f15, f24, rne # perform operation
fnmadd.s f5, f17, f15, f24, rtz # perform operation
fnmadd.s f5, f17, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x19, 0x48b683cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x2fb98075 # load x3 with value 0x2fb98075
sw x3, 0(x2) # store 0x2fb98075 in memory
flw f18, 0(x2) # load 0x2fb98075 from memory into f18
fnmadd.s f19, f30, f16, f18, dyn # perform operation
fnmadd.s f19, f30, f16, f18, rdn # perform operation
fnmadd.s f19, f30, f16, f18, rmm # perform operation
fnmadd.s f19, f30, f16, f18, rne # perform operation
fnmadd.s f19, f30, f16, f18, rtz # perform operation
fnmadd.s f19, f30, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x22, 0xe98aa56d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x5e662a96 # load x3 with value 0x5e662a96
sw x3, 0(x2) # store 0x5e662a96 in memory
flw f10, 0(x2) # load 0x5e662a96 from memory into f10
fnmadd.s f22, f16, f1, f10, dyn # perform operation
fnmadd.s f22, f16, f1, f10, rdn # perform operation
fnmadd.s f22, f16, f1, f10, rmm # perform operation
fnmadd.s f22, f16, f1, f10, rne # perform operation
fnmadd.s f22, f16, f1, f10, rtz # perform operation
fnmadd.s f22, f16, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f16, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f16, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x25, 0xd3a65349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xd274a048 # load x3 with value 0xd274a048
sw x3, 0(x2) # store 0xd274a048 in memory
flw f27, 0(x2) # load 0xd274a048 from memory into f27
fnmadd.s f25, f12, f26, f27, dyn # perform operation
fnmadd.s f25, f12, f26, f27, rdn # perform operation
fnmadd.s f25, f12, f26, f27, rmm # perform operation
fnmadd.s f25, f12, f26, f27, rne # perform operation
fnmadd.s f25, f12, f26, f27, rtz # perform operation
fnmadd.s f25, f12, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x27, 0xe35b7e21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xf454e702 # load x3 with value 0xf454e702
sw x3, 0(x2) # store 0xf454e702 in memory
flw f18, 0(x2) # load 0xf454e702 from memory into f18
fnmadd.s f27, f20, f5, f18, dyn # perform operation
fnmadd.s f27, f20, f5, f18, rdn # perform operation
fnmadd.s f27, f20, f5, f18, rmm # perform operation
fnmadd.s f27, f20, f5, f18, rne # perform operation
fnmadd.s f27, f20, f5, f18, rtz # perform operation
fnmadd.s f27, f20, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f20, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x23, 0x9354c39f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x2b243a95 # load x3 with value 0x2b243a95
sw x3, 0(x2) # store 0x2b243a95 in memory
flw f3, 0(x2) # load 0x2b243a95 from memory into f3
fnmadd.s f23, f22, f15, f3, dyn # perform operation
fnmadd.s f23, f22, f15, f3, rdn # perform operation
fnmadd.s f23, f22, f15, f3, rmm # perform operation
fnmadd.s f23, f22, f15, f3, rne # perform operation
fnmadd.s f23, f22, f15, f3, rtz # perform operation
fnmadd.s f23, f22, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f22, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x25, 0xb828032d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xfa2b75f3 # load x3 with value 0xfa2b75f3
sw x3, 0(x2) # store 0xfa2b75f3 in memory
flw f31, 0(x2) # load 0xfa2b75f3 from memory into f31
fnmadd.s f25, f12, f6, f31, dyn # perform operation
fnmadd.s f25, f12, f6, f31, rdn # perform operation
fnmadd.s f25, f12, f6, f31, rmm # perform operation
fnmadd.s f25, f12, f6, f31, rne # perform operation
fnmadd.s f25, f12, f6, f31, rtz # perform operation
fnmadd.s f25, f12, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x3, 0xc4e7d848 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xe18f09b1 # load x3 with value 0xe18f09b1
sw x3, 0(x2) # store 0xe18f09b1 in memory
flw f4, 0(x2) # load 0xe18f09b1 from memory into f4
fnmadd.s f3, f23, f30, f4, dyn # perform operation
fnmadd.s f3, f23, f30, f4, rdn # perform operation
fnmadd.s f3, f23, f30, f4, rmm # perform operation
fnmadd.s f3, f23, f30, f4, rne # perform operation
fnmadd.s f3, f23, f30, f4, rtz # perform operation
fnmadd.s f3, f23, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x19, 0xdd190d0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xc68b2bab # load x3 with value 0xc68b2bab
sw x3, 0(x2) # store 0xc68b2bab in memory
flw f1, 0(x2) # load 0xc68b2bab from memory into f1
fnmadd.s f19, f22, f30, f1, dyn # perform operation
fnmadd.s f19, f22, f30, f1, rdn # perform operation
fnmadd.s f19, f22, f30, f1, rmm # perform operation
fnmadd.s f19, f22, f30, f1, rne # perform operation
fnmadd.s f19, f22, f30, f1, rtz # perform operation
fnmadd.s f19, f22, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f22, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f22, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f22, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f22, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f22, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x18, 0xe2dbb36e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x014de9b3 # load x3 with value 0x014de9b3
sw x3, 0(x2) # store 0x014de9b3 in memory
flw f15, 0(x2) # load 0x014de9b3 from memory into f15
fnmadd.s f18, f13, f27, f15, dyn # perform operation
fnmadd.s f18, f13, f27, f15, rdn # perform operation
fnmadd.s f18, f13, f27, f15, rmm # perform operation
fnmadd.s f18, f13, f27, f15, rne # perform operation
fnmadd.s f18, f13, f27, f15, rtz # perform operation
fnmadd.s f18, f13, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x16, 0x8728a7c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x6e60dd46 # load x3 with value 0x6e60dd46
sw x3, 0(x2) # store 0x6e60dd46 in memory
flw f3, 0(x2) # load 0x6e60dd46 from memory into f3
fnmadd.s f16, f20, f28, f3, dyn # perform operation
fnmadd.s f16, f20, f28, f3, rdn # perform operation
fnmadd.s f16, f20, f28, f3, rmm # perform operation
fnmadd.s f16, f20, f28, f3, rne # perform operation
fnmadd.s f16, f20, f28, f3, rtz # perform operation
fnmadd.s f16, f20, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x17, 0xacd2768c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x371be387 # load x3 with value 0x371be387
sw x3, 0(x2) # store 0x371be387 in memory
flw f6, 0(x2) # load 0x371be387 from memory into f6
fnmadd.s f17, f24, f28, f6, dyn # perform operation
fnmadd.s f17, f24, f28, f6, rdn # perform operation
fnmadd.s f17, f24, f28, f6, rmm # perform operation
fnmadd.s f17, f24, f28, f6, rne # perform operation
fnmadd.s f17, f24, f28, f6, rtz # perform operation
fnmadd.s f17, f24, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f24, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x1, 0xa2448cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xb769baeb # load x3 with value 0xb769baeb
sw x3, 0(x2) # store 0xb769baeb in memory
flw f24, 0(x2) # load 0xb769baeb from memory into f24
fnmadd.s f1, f21, f25, f24, dyn # perform operation
fnmadd.s f1, f21, f25, f24, rdn # perform operation
fnmadd.s f1, f21, f25, f24, rmm # perform operation
fnmadd.s f1, f21, f25, f24, rne # perform operation
fnmadd.s f1, f21, f25, f24, rtz # perform operation
fnmadd.s f1, f21, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x26, 0x5437090b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x02801f06 # load x3 with value 0x02801f06
sw x3, 0(x2) # store 0x02801f06 in memory
flw f7, 0(x2) # load 0x02801f06 from memory into f7
fnmadd.s f26, f10, f30, f7, dyn # perform operation
fnmadd.s f26, f10, f30, f7, rdn # perform operation
fnmadd.s f26, f10, f30, f7, rmm # perform operation
fnmadd.s f26, f10, f30, f7, rne # perform operation
fnmadd.s f26, f10, f30, f7, rtz # perform operation
fnmadd.s f26, f10, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x15, 0x27ce2811 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x89064e81 # load x3 with value 0x89064e81
sw x3, 0(x2) # store 0x89064e81 in memory
flw f28, 0(x2) # load 0x89064e81 from memory into f28
fnmadd.s f15, f20, f14, f28, dyn # perform operation
fnmadd.s f15, f20, f14, f28, rdn # perform operation
fnmadd.s f15, f20, f14, f28, rmm # perform operation
fnmadd.s f15, f20, f14, f28, rne # perform operation
fnmadd.s f15, f20, f14, f28, rtz # perform operation
fnmadd.s f15, f20, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f20, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f20, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f20, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f20, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f20, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x19, 0x25391b72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xa43bb487 # load x3 with value 0xa43bb487
sw x3, 0(x2) # store 0xa43bb487 in memory
flw f1, 0(x2) # load 0xa43bb487 from memory into f1
fnmadd.s f19, f3, f24, f1, dyn # perform operation
fnmadd.s f19, f3, f24, f1, rdn # perform operation
fnmadd.s f19, f3, f24, f1, rmm # perform operation
fnmadd.s f19, f3, f24, f1, rne # perform operation
fnmadd.s f19, f3, f24, f1, rtz # perform operation
fnmadd.s f19, f3, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x20, 0x077e1017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x680e8867 # load x3 with value 0x680e8867
sw x3, 0(x2) # store 0x680e8867 in memory
flw f7, 0(x2) # load 0x680e8867 from memory into f7
fnmadd.s f20, f27, f18, f7, dyn # perform operation
fnmadd.s f20, f27, f18, f7, rdn # perform operation
fnmadd.s f20, f27, f18, f7, rmm # perform operation
fnmadd.s f20, f27, f18, f7, rne # perform operation
fnmadd.s f20, f27, f18, f7, rtz # perform operation
fnmadd.s f20, f27, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x1, 0x1fd1de9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0xbacec54a # load x3 with value 0xbacec54a
sw x3, 0(x2) # store 0xbacec54a in memory
flw f15, 0(x2) # load 0xbacec54a from memory into f15
fnmadd.s f1, f10, f16, f15, dyn # perform operation
fnmadd.s f1, f10, f16, f15, rdn # perform operation
fnmadd.s f1, f10, f16, f15, rmm # perform operation
fnmadd.s f1, f10, f16, f15, rne # perform operation
fnmadd.s f1, f10, f16, f15, rtz # perform operation
fnmadd.s f1, f10, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f10, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x19, 0xa2c23d7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0xb6b536f9 # load x3 with value 0xb6b536f9
sw x3, 0(x2) # store 0xb6b536f9 in memory
flw f31, 0(x2) # load 0xb6b536f9 from memory into f31
fnmadd.s f19, f22, f28, f31, dyn # perform operation
fnmadd.s f19, f22, f28, f31, rdn # perform operation
fnmadd.s f19, f22, f28, f31, rmm # perform operation
fnmadd.s f19, f22, f28, f31, rne # perform operation
fnmadd.s f19, f22, f28, f31, rtz # perform operation
fnmadd.s f19, f22, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f22, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x7, 0xecda389a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x0f9c4776 # load x3 with value 0x0f9c4776
sw x3, 0(x2) # store 0x0f9c4776 in memory
flw f2, 0(x2) # load 0x0f9c4776 from memory into f2
fnmadd.s f7, f25, f26, f2, dyn # perform operation
fnmadd.s f7, f25, f26, f2, rdn # perform operation
fnmadd.s f7, f25, f26, f2, rmm # perform operation
fnmadd.s f7, f25, f26, f2, rne # perform operation
fnmadd.s f7, f25, f26, f2, rtz # perform operation
fnmadd.s f7, f25, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f25, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x4, 0xde1d842d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x130bf1af # load x3 with value 0x130bf1af
sw x3, 0(x2) # store 0x130bf1af in memory
flw f15, 0(x2) # load 0x130bf1af from memory into f15
fnmadd.s f4, f3, f26, f15, dyn # perform operation
fnmadd.s f4, f3, f26, f15, rdn # perform operation
fnmadd.s f4, f3, f26, f15, rmm # perform operation
fnmadd.s f4, f3, f26, f15, rne # perform operation
fnmadd.s f4, f3, f26, f15, rtz # perform operation
fnmadd.s f4, f3, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f3, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x30, 0x85e005f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x9f46a625 # load x3 with value 0x9f46a625
sw x3, 0(x2) # store 0x9f46a625 in memory
flw f20, 0(x2) # load 0x9f46a625 from memory into f20
fnmadd.s f30, f22, f19, f20, dyn # perform operation
fnmadd.s f30, f22, f19, f20, rdn # perform operation
fnmadd.s f30, f22, f19, f20, rmm # perform operation
fnmadd.s f30, f22, f19, f20, rne # perform operation
fnmadd.s f30, f22, f19, f20, rtz # perform operation
fnmadd.s f30, f22, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f22, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x26, 0xcf527bc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x56117968 # load x3 with value 0x56117968
sw x3, 0(x2) # store 0x56117968 in memory
flw f16, 0(x2) # load 0x56117968 from memory into f16
fnmadd.s f26, f10, f6, f16, dyn # perform operation
fnmadd.s f26, f10, f6, f16, rdn # perform operation
fnmadd.s f26, f10, f6, f16, rmm # perform operation
fnmadd.s f26, f10, f6, f16, rne # perform operation
fnmadd.s f26, f10, f6, f16, rtz # perform operation
fnmadd.s f26, f10, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x19, 0xbfcd4300 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xb79465d7 # load x3 with value 0xb79465d7
sw x3, 0(x2) # store 0xb79465d7 in memory
flw f26, 0(x2) # load 0xb79465d7 from memory into f26
fnmadd.s f19, f20, f9, f26, dyn # perform operation
fnmadd.s f19, f20, f9, f26, rdn # perform operation
fnmadd.s f19, f20, f9, f26, rmm # perform operation
fnmadd.s f19, f20, f9, f26, rne # perform operation
fnmadd.s f19, f20, f9, f26, rtz # perform operation
fnmadd.s f19, f20, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x5, 0x1e3b5424 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x0f976669 # load x3 with value 0x0f976669
sw x3, 0(x2) # store 0x0f976669 in memory
flw f27, 0(x2) # load 0x0f976669 from memory into f27
fnmadd.s f5, f14, f26, f27, dyn # perform operation
fnmadd.s f5, f14, f26, f27, rdn # perform operation
fnmadd.s f5, f14, f26, f27, rmm # perform operation
fnmadd.s f5, f14, f26, f27, rne # perform operation
fnmadd.s f5, f14, f26, f27, rtz # perform operation
fnmadd.s f5, f14, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f14, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x28, 0x4f2147ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x81afb403 # load x3 with value 0x81afb403
sw x3, 0(x2) # store 0x81afb403 in memory
flw f2, 0(x2) # load 0x81afb403 from memory into f2
fnmadd.s f28, f1, f21, f2, dyn # perform operation
fnmadd.s f28, f1, f21, f2, rdn # perform operation
fnmadd.s f28, f1, f21, f2, rmm # perform operation
fnmadd.s f28, f1, f21, f2, rne # perform operation
fnmadd.s f28, f1, f21, f2, rtz # perform operation
fnmadd.s f28, f1, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f1, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f1, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f1, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f1, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f1, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x23, 0x06cfaffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x83ab3b6b # load x3 with value 0x83ab3b6b
sw x3, 0(x2) # store 0x83ab3b6b in memory
flw f10, 0(x2) # load 0x83ab3b6b from memory into f10
fnmadd.s f23, f4, f11, f10, dyn # perform operation
fnmadd.s f23, f4, f11, f10, rdn # perform operation
fnmadd.s f23, f4, f11, f10, rmm # perform operation
fnmadd.s f23, f4, f11, f10, rne # perform operation
fnmadd.s f23, f4, f11, f10, rtz # perform operation
fnmadd.s f23, f4, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f4, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f4, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f4, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f4, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f4, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x8, 0xd0cba8e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x682ced84 # load x3 with value 0x682ced84
sw x3, 0(x2) # store 0x682ced84 in memory
flw f14, 0(x2) # load 0x682ced84 from memory into f14
fnmadd.s f8, f15, f1, f14, dyn # perform operation
fnmadd.s f8, f15, f1, f14, rdn # perform operation
fnmadd.s f8, f15, f1, f14, rmm # perform operation
fnmadd.s f8, f15, f1, f14, rne # perform operation
fnmadd.s f8, f15, f1, f14, rtz # perform operation
fnmadd.s f8, f15, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x8, 0xe806163c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x5fbae0bd # load x3 with value 0x5fbae0bd
sw x3, 0(x2) # store 0x5fbae0bd in memory
flw f24, 0(x2) # load 0x5fbae0bd from memory into f24
fnmadd.s f8, f20, f2, f24, dyn # perform operation
fnmadd.s f8, f20, f2, f24, rdn # perform operation
fnmadd.s f8, f20, f2, f24, rmm # perform operation
fnmadd.s f8, f20, f2, f24, rne # perform operation
fnmadd.s f8, f20, f2, f24, rtz # perform operation
fnmadd.s f8, f20, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x20, 0x8c401f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x2110c716 # load x3 with value 0x2110c716
sw x3, 0(x2) # store 0x2110c716 in memory
flw f5, 0(x2) # load 0x2110c716 from memory into f5
fnmadd.s f20, f27, f15, f5, dyn # perform operation
fnmadd.s f20, f27, f15, f5, rdn # perform operation
fnmadd.s f20, f27, f15, f5, rmm # perform operation
fnmadd.s f20, f27, f15, f5, rne # perform operation
fnmadd.s f20, f27, f15, f5, rtz # perform operation
fnmadd.s f20, f27, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x15, 0xc7d22e4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x56b8c38a # load x3 with value 0x56b8c38a
sw x3, 0(x2) # store 0x56b8c38a in memory
flw f26, 0(x2) # load 0x56b8c38a from memory into f26
fnmadd.s f15, f31, f14, f26, dyn # perform operation
fnmadd.s f15, f31, f14, f26, rdn # perform operation
fnmadd.s f15, f31, f14, f26, rmm # perform operation
fnmadd.s f15, f31, f14, f26, rne # perform operation
fnmadd.s f15, f31, f14, f26, rtz # perform operation
fnmadd.s f15, f31, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f31, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f31, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f31, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f31, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f31, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x29, 0x1f1b2abc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x114291bf # load x3 with value 0x114291bf
sw x3, 0(x2) # store 0x114291bf in memory
flw f27, 0(x2) # load 0x114291bf from memory into f27
fnmadd.s f29, f8, f28, f27, dyn # perform operation
fnmadd.s f29, f8, f28, f27, rdn # perform operation
fnmadd.s f29, f8, f28, f27, rmm # perform operation
fnmadd.s f29, f8, f28, f27, rne # perform operation
fnmadd.s f29, f8, f28, f27, rtz # perform operation
fnmadd.s f29, f8, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x15, 0xd80915ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xaa14ee21 # load x3 with value 0xaa14ee21
sw x3, 0(x2) # store 0xaa14ee21 in memory
flw f11, 0(x2) # load 0xaa14ee21 from memory into f11
fnmadd.s f15, f1, f14, f11, dyn # perform operation
fnmadd.s f15, f1, f14, f11, rdn # perform operation
fnmadd.s f15, f1, f14, f11, rmm # perform operation
fnmadd.s f15, f1, f14, f11, rne # perform operation
fnmadd.s f15, f1, f14, f11, rtz # perform operation
fnmadd.s f15, f1, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x14, 0x58de6063 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x71fd095a # load x3 with value 0x71fd095a
sw x3, 0(x2) # store 0x71fd095a in memory
flw f18, 0(x2) # load 0x71fd095a from memory into f18
fnmadd.s f14, f17, f6, f18, dyn # perform operation
fnmadd.s f14, f17, f6, f18, rdn # perform operation
fnmadd.s f14, f17, f6, f18, rmm # perform operation
fnmadd.s f14, f17, f6, f18, rne # perform operation
fnmadd.s f14, f17, f6, f18, rtz # perform operation
fnmadd.s f14, f17, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f17, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x14, 0x30ca292a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0xd65c0740 # load x3 with value 0xd65c0740
sw x3, 0(x2) # store 0xd65c0740 in memory
flw f9, 0(x2) # load 0xd65c0740 from memory into f9
fnmadd.s f14, f15, f5, f9, dyn # perform operation
fnmadd.s f14, f15, f5, f9, rdn # perform operation
fnmadd.s f14, f15, f5, f9, rmm # perform operation
fnmadd.s f14, f15, f5, f9, rne # perform operation
fnmadd.s f14, f15, f5, f9, rtz # perform operation
fnmadd.s f14, f15, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x14, 0xe6665caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xd549ae49 # load x3 with value 0xd549ae49
sw x3, 0(x2) # store 0xd549ae49 in memory
flw f26, 0(x2) # load 0xd549ae49 from memory into f26
fnmadd.s f14, f20, f2, f26, dyn # perform operation
fnmadd.s f14, f20, f2, f26, rdn # perform operation
fnmadd.s f14, f20, f2, f26, rmm # perform operation
fnmadd.s f14, f20, f2, f26, rne # perform operation
fnmadd.s f14, f20, f2, f26, rtz # perform operation
fnmadd.s f14, f20, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f20, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f20, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x11, 0x6ce6a30c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x075446ca # load x3 with value 0x075446ca
sw x3, 0(x2) # store 0x075446ca in memory
flw f7, 0(x2) # load 0x075446ca from memory into f7
fnmadd.s f11, f18, f26, f7, dyn # perform operation
fnmadd.s f11, f18, f26, f7, rdn # perform operation
fnmadd.s f11, f18, f26, f7, rmm # perform operation
fnmadd.s f11, f18, f26, f7, rne # perform operation
fnmadd.s f11, f18, f26, f7, rtz # perform operation
fnmadd.s f11, f18, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x7, 0xb038986d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x443534d0 # load x3 with value 0x443534d0
sw x3, 0(x2) # store 0x443534d0 in memory
flw f10, 0(x2) # load 0x443534d0 from memory into f10
fnmadd.s f7, f12, f3, f10, dyn # perform operation
fnmadd.s f7, f12, f3, f10, rdn # perform operation
fnmadd.s f7, f12, f3, f10, rmm # perform operation
fnmadd.s f7, f12, f3, f10, rne # perform operation
fnmadd.s f7, f12, f3, f10, rtz # perform operation
fnmadd.s f7, f12, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x9, 0x596f1207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xf4f3469f # load x3 with value 0xf4f3469f
sw x3, 0(x2) # store 0xf4f3469f in memory
flw f4, 0(x2) # load 0xf4f3469f from memory into f4
fnmadd.s f9, f15, f6, f4, dyn # perform operation
fnmadd.s f9, f15, f6, f4, rdn # perform operation
fnmadd.s f9, f15, f6, f4, rmm # perform operation
fnmadd.s f9, f15, f6, f4, rne # perform operation
fnmadd.s f9, f15, f6, f4, rtz # perform operation
fnmadd.s f9, f15, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x16, 0x07048240 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x30f9ee80 # load x3 with value 0x30f9ee80
sw x3, 0(x2) # store 0x30f9ee80 in memory
flw f21, 0(x2) # load 0x30f9ee80 from memory into f21
fnmadd.s f16, f28, f18, f21, dyn # perform operation
fnmadd.s f16, f28, f18, f21, rdn # perform operation
fnmadd.s f16, f28, f18, f21, rmm # perform operation
fnmadd.s f16, f28, f18, f21, rne # perform operation
fnmadd.s f16, f28, f18, f21, rtz # perform operation
fnmadd.s f16, f28, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f28, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x8, 0x88eb3456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xdf2c08af # load x3 with value 0xdf2c08af
sw x3, 0(x2) # store 0xdf2c08af in memory
flw f10, 0(x2) # load 0xdf2c08af from memory into f10
fnmadd.s f8, f7, f25, f10, dyn # perform operation
fnmadd.s f8, f7, f25, f10, rdn # perform operation
fnmadd.s f8, f7, f25, f10, rmm # perform operation
fnmadd.s f8, f7, f25, f10, rne # perform operation
fnmadd.s f8, f7, f25, f10, rtz # perform operation
fnmadd.s f8, f7, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x26, 0xbb88db5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0xbe15b6ba # load x3 with value 0xbe15b6ba
sw x3, 0(x2) # store 0xbe15b6ba in memory
flw f8, 0(x2) # load 0xbe15b6ba from memory into f8
fnmadd.s f26, f12, f11, f8, dyn # perform operation
fnmadd.s f26, f12, f11, f8, rdn # perform operation
fnmadd.s f26, f12, f11, f8, rmm # perform operation
fnmadd.s f26, f12, f11, f8, rne # perform operation
fnmadd.s f26, f12, f11, f8, rtz # perform operation
fnmadd.s f26, f12, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x21, 0x4d3aebb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x116fc333 # load x3 with value 0x116fc333
sw x3, 0(x2) # store 0x116fc333 in memory
flw f26, 0(x2) # load 0x116fc333 from memory into f26
fnmadd.s f21, f29, f31, f26, dyn # perform operation
fnmadd.s f21, f29, f31, f26, rdn # perform operation
fnmadd.s f21, f29, f31, f26, rmm # perform operation
fnmadd.s f21, f29, f31, f26, rne # perform operation
fnmadd.s f21, f29, f31, f26, rtz # perform operation
fnmadd.s f21, f29, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x26, 0xf4410ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xcbbd569f # load x3 with value 0xcbbd569f
sw x3, 0(x2) # store 0xcbbd569f in memory
flw f12, 0(x2) # load 0xcbbd569f from memory into f12
fnmadd.s f26, f29, f28, f12, dyn # perform operation
fnmadd.s f26, f29, f28, f12, rdn # perform operation
fnmadd.s f26, f29, f28, f12, rmm # perform operation
fnmadd.s f26, f29, f28, f12, rne # perform operation
fnmadd.s f26, f29, f28, f12, rtz # perform operation
fnmadd.s f26, f29, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x20, 0xce2b4a6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x26cb562a # load x3 with value 0x26cb562a
sw x3, 0(x2) # store 0x26cb562a in memory
flw f5, 0(x2) # load 0x26cb562a from memory into f5
fnmadd.s f20, f2, f9, f5, dyn # perform operation
fnmadd.s f20, f2, f9, f5, rdn # perform operation
fnmadd.s f20, f2, f9, f5, rmm # perform operation
fnmadd.s f20, f2, f9, f5, rne # perform operation
fnmadd.s f20, f2, f9, f5, rtz # perform operation
fnmadd.s f20, f2, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x1, 0x87ef305b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x9bcb5fd9 # load x3 with value 0x9bcb5fd9
sw x3, 0(x2) # store 0x9bcb5fd9 in memory
flw f27, 0(x2) # load 0x9bcb5fd9 from memory into f27
fnmadd.s f1, f26, f29, f27, dyn # perform operation
fnmadd.s f1, f26, f29, f27, rdn # perform operation
fnmadd.s f1, f26, f29, f27, rmm # perform operation
fnmadd.s f1, f26, f29, f27, rne # perform operation
fnmadd.s f1, f26, f29, f27, rtz # perform operation
fnmadd.s f1, f26, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x26, 0xae647f71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x6f07e7f5 # load x3 with value 0x6f07e7f5
sw x3, 0(x2) # store 0x6f07e7f5 in memory
flw f12, 0(x2) # load 0x6f07e7f5 from memory into f12
fnmadd.s f26, f29, f30, f12, dyn # perform operation
fnmadd.s f26, f29, f30, f12, rdn # perform operation
fnmadd.s f26, f29, f30, f12, rmm # perform operation
fnmadd.s f26, f29, f30, f12, rne # perform operation
fnmadd.s f26, f29, f30, f12, rtz # perform operation
fnmadd.s f26, f29, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x22, 0x592d2c16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x39ed153e # load x3 with value 0x39ed153e
sw x3, 0(x2) # store 0x39ed153e in memory
flw f12, 0(x2) # load 0x39ed153e from memory into f12
fnmadd.s f22, f10, f31, f12, dyn # perform operation
fnmadd.s f22, f10, f31, f12, rdn # perform operation
fnmadd.s f22, f10, f31, f12, rmm # perform operation
fnmadd.s f22, f10, f31, f12, rne # perform operation
fnmadd.s f22, f10, f31, f12, rtz # perform operation
fnmadd.s f22, f10, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x28, 0x463096c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xb50e927f # load x3 with value 0xb50e927f
sw x3, 0(x2) # store 0xb50e927f in memory
flw f4, 0(x2) # load 0xb50e927f from memory into f4
fnmadd.s f28, f21, f14, f4, dyn # perform operation
fnmadd.s f28, f21, f14, f4, rdn # perform operation
fnmadd.s f28, f21, f14, f4, rmm # perform operation
fnmadd.s f28, f21, f14, f4, rne # perform operation
fnmadd.s f28, f21, f14, f4, rtz # perform operation
fnmadd.s f28, f21, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x25, 0x59826042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x6e9ceff1 # load x3 with value 0x6e9ceff1
sw x3, 0(x2) # store 0x6e9ceff1 in memory
flw f12, 0(x2) # load 0x6e9ceff1 from memory into f12
fnmadd.s f25, f15, f21, f12, dyn # perform operation
fnmadd.s f25, f15, f21, f12, rdn # perform operation
fnmadd.s f25, f15, f21, f12, rmm # perform operation
fnmadd.s f25, f15, f21, f12, rne # perform operation
fnmadd.s f25, f15, f21, f12, rtz # perform operation
fnmadd.s f25, f15, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x16, 0xa4a78825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x003efa1d # load x3 with value 0x003efa1d
sw x3, 0(x2) # store 0x003efa1d in memory
flw f4, 0(x2) # load 0x003efa1d from memory into f4
fnmadd.s f16, f1, f28, f4, dyn # perform operation
fnmadd.s f16, f1, f28, f4, rdn # perform operation
fnmadd.s f16, f1, f28, f4, rmm # perform operation
fnmadd.s f16, f1, f28, f4, rne # perform operation
fnmadd.s f16, f1, f28, f4, rtz # perform operation
fnmadd.s f16, f1, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x23, 0xd8f73793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0xb470266d # load x3 with value 0xb470266d
sw x3, 0(x2) # store 0xb470266d in memory
flw f15, 0(x2) # load 0xb470266d from memory into f15
fnmadd.s f23, f30, f4, f15, dyn # perform operation
fnmadd.s f23, f30, f4, f15, rdn # perform operation
fnmadd.s f23, f30, f4, f15, rmm # perform operation
fnmadd.s f23, f30, f4, f15, rne # perform operation
fnmadd.s f23, f30, f4, f15, rtz # perform operation
fnmadd.s f23, f30, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x31, 0x212436d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x001f4951 # load x3 with value 0x001f4951
sw x3, 0(x2) # store 0x001f4951 in memory
flw f23, 0(x2) # load 0x001f4951 from memory into f23
fnmadd.s f31, f12, f19, f23, dyn # perform operation
fnmadd.s f31, f12, f19, f23, rdn # perform operation
fnmadd.s f31, f12, f19, f23, rmm # perform operation
fnmadd.s f31, f12, f19, f23, rne # perform operation
fnmadd.s f31, f12, f19, f23, rtz # perform operation
fnmadd.s f31, f12, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x19, 0x8a3e0fbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x90edd788 # load x3 with value 0x90edd788
sw x3, 0(x2) # store 0x90edd788 in memory
flw f2, 0(x2) # load 0x90edd788 from memory into f2
fnmadd.s f19, f29, f10, f2, dyn # perform operation
fnmadd.s f19, f29, f10, f2, rdn # perform operation
fnmadd.s f19, f29, f10, f2, rmm # perform operation
fnmadd.s f19, f29, f10, f2, rne # perform operation
fnmadd.s f19, f29, f10, f2, rtz # perform operation
fnmadd.s f19, f29, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x29, 0x3a4921f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x90f90f29 # load x3 with value 0x90f90f29
sw x3, 0(x2) # store 0x90f90f29 in memory
flw f11, 0(x2) # load 0x90f90f29 from memory into f11
fnmadd.s f29, f5, f1, f11, dyn # perform operation
fnmadd.s f29, f5, f1, f11, rdn # perform operation
fnmadd.s f29, f5, f1, f11, rmm # perform operation
fnmadd.s f29, f5, f1, f11, rne # perform operation
fnmadd.s f29, f5, f1, f11, rtz # perform operation
fnmadd.s f29, f5, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x13, 0xab289770 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0xa36ee3b5 # load x3 with value 0xa36ee3b5
sw x3, 0(x2) # store 0xa36ee3b5 in memory
flw f24, 0(x2) # load 0xa36ee3b5 from memory into f24
fnmadd.s f13, f7, f2, f24, dyn # perform operation
fnmadd.s f13, f7, f2, f24, rdn # perform operation
fnmadd.s f13, f7, f2, f24, rmm # perform operation
fnmadd.s f13, f7, f2, f24, rne # perform operation
fnmadd.s f13, f7, f2, f24, rtz # perform operation
fnmadd.s f13, f7, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f7, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x4, 0x4bc89bdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x89e3573b # load x3 with value 0x89e3573b
sw x3, 0(x2) # store 0x89e3573b in memory
flw f10, 0(x2) # load 0x89e3573b from memory into f10
fnmadd.s f4, f23, f20, f10, dyn # perform operation
fnmadd.s f4, f23, f20, f10, rdn # perform operation
fnmadd.s f4, f23, f20, f10, rmm # perform operation
fnmadd.s f4, f23, f20, f10, rne # perform operation
fnmadd.s f4, f23, f20, f10, rtz # perform operation
fnmadd.s f4, f23, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x10, 0x09e58584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x7673bc45 # load x3 with value 0x7673bc45
sw x3, 0(x2) # store 0x7673bc45 in memory
flw f20, 0(x2) # load 0x7673bc45 from memory into f20
fnmadd.s f10, f5, f14, f20, dyn # perform operation
fnmadd.s f10, f5, f14, f20, rdn # perform operation
fnmadd.s f10, f5, f14, f20, rmm # perform operation
fnmadd.s f10, f5, f14, f20, rne # perform operation
fnmadd.s f10, f5, f14, f20, rtz # perform operation
fnmadd.s f10, f5, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x1, 0x313d7157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0xe038d4bf # load x3 with value 0xe038d4bf
sw x3, 0(x2) # store 0xe038d4bf in memory
flw f4, 0(x2) # load 0xe038d4bf from memory into f4
fnmadd.s f1, f5, f15, f4, dyn # perform operation
fnmadd.s f1, f5, f15, f4, rdn # perform operation
fnmadd.s f1, f5, f15, f4, rmm # perform operation
fnmadd.s f1, f5, f15, f4, rne # perform operation
fnmadd.s f1, f5, f15, f4, rtz # perform operation
fnmadd.s f1, f5, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x25, 0x90f01b96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x6439f105 # load x3 with value 0x6439f105
sw x3, 0(x2) # store 0x6439f105 in memory
flw f9, 0(x2) # load 0x6439f105 from memory into f9
fnmadd.s f25, f10, f20, f9, dyn # perform operation
fnmadd.s f25, f10, f20, f9, rdn # perform operation
fnmadd.s f25, f10, f20, f9, rmm # perform operation
fnmadd.s f25, f10, f20, f9, rne # perform operation
fnmadd.s f25, f10, f20, f9, rtz # perform operation
fnmadd.s f25, f10, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f10, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f10, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f10, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f10, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f10, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x19, 0x676de139 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x0014087f # load x3 with value 0x0014087f
sw x3, 0(x2) # store 0x0014087f in memory
flw f9, 0(x2) # load 0x0014087f from memory into f9
fnmadd.s f19, f30, f27, f9, dyn # perform operation
fnmadd.s f19, f30, f27, f9, rdn # perform operation
fnmadd.s f19, f30, f27, f9, rmm # perform operation
fnmadd.s f19, f30, f27, f9, rne # perform operation
fnmadd.s f19, f30, f27, f9, rtz # perform operation
fnmadd.s f19, f30, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x9, 0x60c845c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x370b312c # load x3 with value 0x370b312c
sw x3, 0(x2) # store 0x370b312c in memory
flw f14, 0(x2) # load 0x370b312c from memory into f14
fnmadd.s f9, f4, f3, f14, dyn # perform operation
fnmadd.s f9, f4, f3, f14, rdn # perform operation
fnmadd.s f9, f4, f3, f14, rmm # perform operation
fnmadd.s f9, f4, f3, f14, rne # perform operation
fnmadd.s f9, f4, f3, f14, rtz # perform operation
fnmadd.s f9, f4, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f4, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x12, 0x8b0decbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x33b55aed # load x3 with value 0x33b55aed
sw x3, 0(x2) # store 0x33b55aed in memory
flw f27, 0(x2) # load 0x33b55aed from memory into f27
fnmadd.s f12, f20, f3, f27, dyn # perform operation
fnmadd.s f12, f20, f3, f27, rdn # perform operation
fnmadd.s f12, f20, f3, f27, rmm # perform operation
fnmadd.s f12, f20, f3, f27, rne # perform operation
fnmadd.s f12, f20, f3, f27, rtz # perform operation
fnmadd.s f12, f20, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f20, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f20, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f20, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f20, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f20, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x31, 0x94bb4b10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0x7d8f74db # load x3 with value 0x7d8f74db
sw x3, 0(x2) # store 0x7d8f74db in memory
flw f15, 0(x2) # load 0x7d8f74db from memory into f15
fnmadd.s f31, f9, f8, f15, dyn # perform operation
fnmadd.s f31, f9, f8, f15, rdn # perform operation
fnmadd.s f31, f9, f8, f15, rmm # perform operation
fnmadd.s f31, f9, f8, f15, rne # perform operation
fnmadd.s f31, f9, f8, f15, rtz # perform operation
fnmadd.s f31, f9, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f9, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x16, 0x41dde119 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x028a6b2a # load x3 with value 0x028a6b2a
sw x3, 0(x2) # store 0x028a6b2a in memory
flw f15, 0(x2) # load 0x028a6b2a from memory into f15
fnmadd.s f16, f4, f24, f15, dyn # perform operation
fnmadd.s f16, f4, f24, f15, rdn # perform operation
fnmadd.s f16, f4, f24, f15, rmm # perform operation
fnmadd.s f16, f4, f24, f15, rne # perform operation
fnmadd.s f16, f4, f24, f15, rtz # perform operation
fnmadd.s f16, f4, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f4, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x18, 0x05b148ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x3bd52128 # load x3 with value 0x3bd52128
sw x3, 0(x2) # store 0x3bd52128 in memory
flw f27, 0(x2) # load 0x3bd52128 from memory into f27
fnmadd.s f18, f23, f25, f27, dyn # perform operation
fnmadd.s f18, f23, f25, f27, rdn # perform operation
fnmadd.s f18, f23, f25, f27, rmm # perform operation
fnmadd.s f18, f23, f25, f27, rne # perform operation
fnmadd.s f18, f23, f25, f27, rtz # perform operation
fnmadd.s f18, f23, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f23, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x7, 0xc1dca00e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0xfa7914ab # load x3 with value 0xfa7914ab
sw x3, 0(x2) # store 0xfa7914ab in memory
flw f27, 0(x2) # load 0xfa7914ab from memory into f27
fnmadd.s f7, f30, f23, f27, dyn # perform operation
fnmadd.s f7, f30, f23, f27, rdn # perform operation
fnmadd.s f7, f30, f23, f27, rmm # perform operation
fnmadd.s f7, f30, f23, f27, rne # perform operation
fnmadd.s f7, f30, f23, f27, rtz # perform operation
fnmadd.s f7, f30, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x20, 0x97d4edf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x7d91b3f8 # load x3 with value 0x7d91b3f8
sw x3, 0(x2) # store 0x7d91b3f8 in memory
flw f29, 0(x2) # load 0x7d91b3f8 from memory into f29
fnmadd.s f20, f5, f21, f29, dyn # perform operation
fnmadd.s f20, f5, f21, f29, rdn # perform operation
fnmadd.s f20, f5, f21, f29, rmm # perform operation
fnmadd.s f20, f5, f21, f29, rne # perform operation
fnmadd.s f20, f5, f21, f29, rtz # perform operation
fnmadd.s f20, f5, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x31, 0xec5f2e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x9a557024 # load x3 with value 0x9a557024
sw x3, 0(x2) # store 0x9a557024 in memory
flw f5, 0(x2) # load 0x9a557024 from memory into f5
fnmadd.s f31, f9, f13, f5, dyn # perform operation
fnmadd.s f31, f9, f13, f5, rdn # perform operation
fnmadd.s f31, f9, f13, f5, rmm # perform operation
fnmadd.s f31, f9, f13, f5, rne # perform operation
fnmadd.s f31, f9, f13, f5, rtz # perform operation
fnmadd.s f31, f9, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f9, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x18, 0x6c18e042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xdaacb8e7 # load x3 with value 0xdaacb8e7
sw x3, 0(x2) # store 0xdaacb8e7 in memory
flw f25, 0(x2) # load 0xdaacb8e7 from memory into f25
fnmadd.s f18, f26, f21, f25, dyn # perform operation
fnmadd.s f18, f26, f21, f25, rdn # perform operation
fnmadd.s f18, f26, f21, f25, rmm # perform operation
fnmadd.s f18, f26, f21, f25, rne # perform operation
fnmadd.s f18, f26, f21, f25, rtz # perform operation
fnmadd.s f18, f26, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x22, 0xf0212cf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x33c9f7bc # load x3 with value 0x33c9f7bc
sw x3, 0(x2) # store 0x33c9f7bc in memory
flw f17, 0(x2) # load 0x33c9f7bc from memory into f17
fnmadd.s f22, f2, f19, f17, dyn # perform operation
fnmadd.s f22, f2, f19, f17, rdn # perform operation
fnmadd.s f22, f2, f19, f17, rmm # perform operation
fnmadd.s f22, f2, f19, f17, rne # perform operation
fnmadd.s f22, f2, f19, f17, rtz # perform operation
fnmadd.s f22, f2, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f2, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f2, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f2, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f2, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f2, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x1, 0x04482131 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0xa631739a # load x3 with value 0xa631739a
sw x3, 0(x2) # store 0xa631739a in memory
flw f22, 0(x2) # load 0xa631739a from memory into f22
fnmadd.s f1, f30, f14, f22, dyn # perform operation
fnmadd.s f1, f30, f14, f22, rdn # perform operation
fnmadd.s f1, f30, f14, f22, rmm # perform operation
fnmadd.s f1, f30, f14, f22, rne # perform operation
fnmadd.s f1, f30, f14, f22, rtz # perform operation
fnmadd.s f1, f30, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f30, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x21, 0x4a6acf74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x56208adb # load x3 with value 0x56208adb
sw x3, 0(x2) # store 0x56208adb in memory
flw f1, 0(x2) # load 0x56208adb from memory into f1
fnmadd.s f21, f25, f14, f1, dyn # perform operation
fnmadd.s f21, f25, f14, f1, rdn # perform operation
fnmadd.s f21, f25, f14, f1, rmm # perform operation
fnmadd.s f21, f25, f14, f1, rne # perform operation
fnmadd.s f21, f25, f14, f1, rtz # perform operation
fnmadd.s f21, f25, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f25, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f25, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f25, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f25, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f25, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x31, 0xf2e7e990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x67afa53b # load x3 with value 0x67afa53b
sw x3, 0(x2) # store 0x67afa53b in memory
flw f10, 0(x2) # load 0x67afa53b from memory into f10
fnmadd.s f31, f2, f1, f10, dyn # perform operation
fnmadd.s f31, f2, f1, f10, rdn # perform operation
fnmadd.s f31, f2, f1, f10, rmm # perform operation
fnmadd.s f31, f2, f1, f10, rne # perform operation
fnmadd.s f31, f2, f1, f10, rtz # perform operation
fnmadd.s f31, f2, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f2, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x5, 0xea38db27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xff37bd7c # load x3 with value 0xff37bd7c
sw x3, 0(x2) # store 0xff37bd7c in memory
flw f25, 0(x2) # load 0xff37bd7c from memory into f25
fnmadd.s f5, f8, f12, f25, dyn # perform operation
fnmadd.s f5, f8, f12, f25, rdn # perform operation
fnmadd.s f5, f8, f12, f25, rmm # perform operation
fnmadd.s f5, f8, f12, f25, rne # perform operation
fnmadd.s f5, f8, f12, f25, rtz # perform operation
fnmadd.s f5, f8, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x5, 0xe9dbe536 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x688ab20f # load x3 with value 0x688ab20f
sw x3, 0(x2) # store 0x688ab20f in memory
flw f23, 0(x2) # load 0x688ab20f from memory into f23
fnmadd.s f5, f24, f28, f23, dyn # perform operation
fnmadd.s f5, f24, f28, f23, rdn # perform operation
fnmadd.s f5, f24, f28, f23, rmm # perform operation
fnmadd.s f5, f24, f28, f23, rne # perform operation
fnmadd.s f5, f24, f28, f23, rtz # perform operation
fnmadd.s f5, f24, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x25, 0x6c8829e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x7f9fe92f # load x3 with value 0x7f9fe92f
sw x3, 0(x2) # store 0x7f9fe92f in memory
flw f16, 0(x2) # load 0x7f9fe92f from memory into f16
fnmadd.s f25, f9, f28, f16, dyn # perform operation
fnmadd.s f25, f9, f28, f16, rdn # perform operation
fnmadd.s f25, f9, f28, f16, rmm # perform operation
fnmadd.s f25, f9, f28, f16, rne # perform operation
fnmadd.s f25, f9, f28, f16, rtz # perform operation
fnmadd.s f25, f9, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x30, 0x35437398 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0xf909e3b2 # load x3 with value 0xf909e3b2
sw x3, 0(x2) # store 0xf909e3b2 in memory
flw f20, 0(x2) # load 0xf909e3b2 from memory into f20
fnmadd.s f30, f24, f14, f20, dyn # perform operation
fnmadd.s f30, f24, f14, f20, rdn # perform operation
fnmadd.s f30, f24, f14, f20, rmm # perform operation
fnmadd.s f30, f24, f14, f20, rne # perform operation
fnmadd.s f30, f24, f14, f20, rtz # perform operation
fnmadd.s f30, f24, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f24, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x28, 0x4fb75871 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x7f2c237b # load x3 with value 0x7f2c237b
sw x3, 0(x2) # store 0x7f2c237b in memory
flw f24, 0(x2) # load 0x7f2c237b from memory into f24
fnmadd.s f28, f30, f11, f24, dyn # perform operation
fnmadd.s f28, f30, f11, f24, rdn # perform operation
fnmadd.s f28, f30, f11, f24, rmm # perform operation
fnmadd.s f28, f30, f11, f24, rne # perform operation
fnmadd.s f28, f30, f11, f24, rtz # perform operation
fnmadd.s f28, f30, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x12, 0xb834ad14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x262325cc # load x3 with value 0x262325cc
sw x3, 0(x2) # store 0x262325cc in memory
flw f26, 0(x2) # load 0x262325cc from memory into f26
fnmadd.s f12, f17, f24, f26, dyn # perform operation
fnmadd.s f12, f17, f24, f26, rdn # perform operation
fnmadd.s f12, f17, f24, f26, rmm # perform operation
fnmadd.s f12, f17, f24, f26, rne # perform operation
fnmadd.s f12, f17, f24, f26, rtz # perform operation
fnmadd.s f12, f17, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x22, 0x139ccfc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x22e073f1 # load x3 with value 0x22e073f1
sw x3, 0(x2) # store 0x22e073f1 in memory
flw f9, 0(x2) # load 0x22e073f1 from memory into f9
fnmadd.s f22, f18, f31, f9, dyn # perform operation
fnmadd.s f22, f18, f31, f9, rdn # perform operation
fnmadd.s f22, f18, f31, f9, rmm # perform operation
fnmadd.s f22, f18, f31, f9, rne # perform operation
fnmadd.s f22, f18, f31, f9, rtz # perform operation
fnmadd.s f22, f18, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x1, 0xa56e0dfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0xddc18c07 # load x3 with value 0xddc18c07
sw x3, 0(x2) # store 0xddc18c07 in memory
flw f18, 0(x2) # load 0xddc18c07 from memory into f18
fnmadd.s f1, f5, f20, f18, dyn # perform operation
fnmadd.s f1, f5, f20, f18, rdn # perform operation
fnmadd.s f1, f5, f20, f18, rmm # perform operation
fnmadd.s f1, f5, f20, f18, rne # perform operation
fnmadd.s f1, f5, f20, f18, rtz # perform operation
fnmadd.s f1, f5, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f20, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x2, 0x57d89cf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0xa1c39a97 # load x3 with value 0xa1c39a97
sw x3, 0(x2) # store 0xa1c39a97 in memory
flw f29, 0(x2) # load 0xa1c39a97 from memory into f29
fnmadd.s f2, f21, f16, f29, dyn # perform operation
fnmadd.s f2, f21, f16, f29, rdn # perform operation
fnmadd.s f2, f21, f16, f29, rmm # perform operation
fnmadd.s f2, f21, f16, f29, rne # perform operation
fnmadd.s f2, f21, f16, f29, rtz # perform operation
fnmadd.s f2, f21, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f21, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x29, 0x949fc288 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x5ec427a0 # load x3 with value 0x5ec427a0
sw x3, 0(x2) # store 0x5ec427a0 in memory
flw f20, 0(x2) # load 0x5ec427a0 from memory into f20
fnmadd.s f29, f5, f13, f20, dyn # perform operation
fnmadd.s f29, f5, f13, f20, rdn # perform operation
fnmadd.s f29, f5, f13, f20, rmm # perform operation
fnmadd.s f29, f5, f13, f20, rne # perform operation
fnmadd.s f29, f5, f13, f20, rtz # perform operation
fnmadd.s f29, f5, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x10, 0xda2c54ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x2ae4b048 # load x3 with value 0x2ae4b048
sw x3, 0(x2) # store 0x2ae4b048 in memory
flw f13, 0(x2) # load 0x2ae4b048 from memory into f13
fnmadd.s f10, f12, f2, f13, dyn # perform operation
fnmadd.s f10, f12, f2, f13, rdn # perform operation
fnmadd.s f10, f12, f2, f13, rmm # perform operation
fnmadd.s f10, f12, f2, f13, rne # perform operation
fnmadd.s f10, f12, f2, f13, rtz # perform operation
fnmadd.s f10, f12, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f12, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x3, 0xf9e12674 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x13075ec6 # load x3 with value 0x13075ec6
sw x3, 0(x2) # store 0x13075ec6 in memory
flw f4, 0(x2) # load 0x13075ec6 from memory into f4
fnmadd.s f3, f27, f14, f4, dyn # perform operation
fnmadd.s f3, f27, f14, f4, rdn # perform operation
fnmadd.s f3, f27, f14, f4, rmm # perform operation
fnmadd.s f3, f27, f14, f4, rne # perform operation
fnmadd.s f3, f27, f14, f4, rtz # perform operation
fnmadd.s f3, f27, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x3, 0xa09c3f7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x9cff6c4c # load x3 with value 0x9cff6c4c
sw x3, 0(x2) # store 0x9cff6c4c in memory
flw f7, 0(x2) # load 0x9cff6c4c from memory into f7
fnmadd.s f3, f29, f21, f7, dyn # perform operation
fnmadd.s f3, f29, f21, f7, rdn # perform operation
fnmadd.s f3, f29, f21, f7, rmm # perform operation
fnmadd.s f3, f29, f21, f7, rne # perform operation
fnmadd.s f3, f29, f21, f7, rtz # perform operation
fnmadd.s f3, f29, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f29, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f29, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x23, 0x740966ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x0d5c178b # load x3 with value 0x0d5c178b
sw x3, 0(x2) # store 0x0d5c178b in memory
flw f19, 0(x2) # load 0x0d5c178b from memory into f19
fnmadd.s f23, f6, f13, f19, dyn # perform operation
fnmadd.s f23, f6, f13, f19, rdn # perform operation
fnmadd.s f23, f6, f13, f19, rmm # perform operation
fnmadd.s f23, f6, f13, f19, rne # perform operation
fnmadd.s f23, f6, f13, f19, rtz # perform operation
fnmadd.s f23, f6, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x26, 0xc610c9ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x70409465 # load x3 with value 0x70409465
sw x3, 0(x2) # store 0x70409465 in memory
flw f15, 0(x2) # load 0x70409465 from memory into f15
fnmadd.s f26, f3, f12, f15, dyn # perform operation
fnmadd.s f26, f3, f12, f15, rdn # perform operation
fnmadd.s f26, f3, f12, f15, rmm # perform operation
fnmadd.s f26, f3, f12, f15, rne # perform operation
fnmadd.s f26, f3, f12, f15, rtz # perform operation
fnmadd.s f26, f3, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f3, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x4, 0x5a4c95f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x75d1c11a # load x3 with value 0x75d1c11a
sw x3, 0(x2) # store 0x75d1c11a in memory
flw f6, 0(x2) # load 0x75d1c11a from memory into f6
fnmadd.s f4, f1, f9, f6, dyn # perform operation
fnmadd.s f4, f1, f9, f6, rdn # perform operation
fnmadd.s f4, f1, f9, f6, rmm # perform operation
fnmadd.s f4, f1, f9, f6, rne # perform operation
fnmadd.s f4, f1, f9, f6, rtz # perform operation
fnmadd.s f4, f1, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f1, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x17, 0x69440d67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x94acb076 # load x3 with value 0x94acb076
sw x3, 0(x2) # store 0x94acb076 in memory
flw f19, 0(x2) # load 0x94acb076 from memory into f19
fnmadd.s f17, f13, f15, f19, dyn # perform operation
fnmadd.s f17, f13, f15, f19, rdn # perform operation
fnmadd.s f17, f13, f15, f19, rmm # perform operation
fnmadd.s f17, f13, f15, f19, rne # perform operation
fnmadd.s f17, f13, f15, f19, rtz # perform operation
fnmadd.s f17, f13, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f13, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x6, 0xdea12b4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x9a0241d2 # load x3 with value 0x9a0241d2
sw x3, 0(x2) # store 0x9a0241d2 in memory
flw f11, 0(x2) # load 0x9a0241d2 from memory into f11
fnmadd.s f6, f19, f20, f11, dyn # perform operation
fnmadd.s f6, f19, f20, f11, rdn # perform operation
fnmadd.s f6, f19, f20, f11, rmm # perform operation
fnmadd.s f6, f19, f20, f11, rne # perform operation
fnmadd.s f6, f19, f20, f11, rtz # perform operation
fnmadd.s f6, f19, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f19, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x11, 0xb644288c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x61810694 # load x3 with value 0x61810694
sw x3, 0(x2) # store 0x61810694 in memory
flw f20, 0(x2) # load 0x61810694 from memory into f20
fnmadd.s f11, f8, f29, f20, dyn # perform operation
fnmadd.s f11, f8, f29, f20, rdn # perform operation
fnmadd.s f11, f8, f29, f20, rmm # perform operation
fnmadd.s f11, f8, f29, f20, rne # perform operation
fnmadd.s f11, f8, f29, f20, rtz # perform operation
fnmadd.s f11, f8, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x22, 0x271852b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0xf41044dd # load x3 with value 0xf41044dd
sw x3, 0(x2) # store 0xf41044dd in memory
flw f4, 0(x2) # load 0xf41044dd from memory into f4
fnmadd.s f22, f16, f21, f4, dyn # perform operation
fnmadd.s f22, f16, f21, f4, rdn # perform operation
fnmadd.s f22, f16, f21, f4, rmm # perform operation
fnmadd.s f22, f16, f21, f4, rne # perform operation
fnmadd.s f22, f16, f21, f4, rtz # perform operation
fnmadd.s f22, f16, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f16, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x1, 0x0f804ae9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x43bf1f76 # load x3 with value 0x43bf1f76
sw x3, 0(x2) # store 0x43bf1f76 in memory
flw f20, 0(x2) # load 0x43bf1f76 from memory into f20
fnmadd.s f1, f12, f2, f20, dyn # perform operation
fnmadd.s f1, f12, f2, f20, rdn # perform operation
fnmadd.s f1, f12, f2, f20, rmm # perform operation
fnmadd.s f1, f12, f2, f20, rne # perform operation
fnmadd.s f1, f12, f2, f20, rtz # perform operation
fnmadd.s f1, f12, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f12, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f12, f2, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x5, 0xfcadb2d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x7b28da92 # load x3 with value 0x7b28da92
sw x3, 0(x2) # store 0x7b28da92 in memory
flw f13, 0(x2) # load 0x7b28da92 from memory into f13
fnmadd.s f5, f12, f14, f13, dyn # perform operation
fnmadd.s f5, f12, f14, f13, rdn # perform operation
fnmadd.s f5, f12, f14, f13, rmm # perform operation
fnmadd.s f5, f12, f14, f13, rne # perform operation
fnmadd.s f5, f12, f14, f13, rtz # perform operation
fnmadd.s f5, f12, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f12, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x9, 0x9ba54b71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0xa81d4ec9 # load x3 with value 0xa81d4ec9
sw x3, 0(x2) # store 0xa81d4ec9 in memory
flw f4, 0(x2) # load 0xa81d4ec9 from memory into f4
fnmadd.s f9, f20, f19, f4, dyn # perform operation
fnmadd.s f9, f20, f19, f4, rdn # perform operation
fnmadd.s f9, f20, f19, f4, rmm # perform operation
fnmadd.s f9, f20, f19, f4, rne # perform operation
fnmadd.s f9, f20, f19, f4, rtz # perform operation
fnmadd.s f9, f20, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f20, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f20, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f20, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f20, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f20, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x2, 0xf456ef74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x99c480c2 # load x3 with value 0x99c480c2
sw x3, 0(x2) # store 0x99c480c2 in memory
flw f30, 0(x2) # load 0x99c480c2 from memory into f30
fnmadd.s f2, f25, f27, f30, dyn # perform operation
fnmadd.s f2, f25, f27, f30, rdn # perform operation
fnmadd.s f2, f25, f27, f30, rmm # perform operation
fnmadd.s f2, f25, f27, f30, rne # perform operation
fnmadd.s f2, f25, f27, f30, rtz # perform operation
fnmadd.s f2, f25, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f25, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x19, 0x9920dad1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x838113db # load x3 with value 0x838113db
sw x3, 0(x2) # store 0x838113db in memory
flw f23, 0(x2) # load 0x838113db from memory into f23
fnmadd.s f19, f25, f27, f23, dyn # perform operation
fnmadd.s f19, f25, f27, f23, rdn # perform operation
fnmadd.s f19, f25, f27, f23, rmm # perform operation
fnmadd.s f19, f25, f27, f23, rne # perform operation
fnmadd.s f19, f25, f27, f23, rtz # perform operation
fnmadd.s f19, f25, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f25, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x6, 0xfbbd69fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xb24ffb16 # load x3 with value 0xb24ffb16
sw x3, 0(x2) # store 0xb24ffb16 in memory
flw f30, 0(x2) # load 0xb24ffb16 from memory into f30
fnmadd.s f6, f17, f1, f30, dyn # perform operation
fnmadd.s f6, f17, f1, f30, rdn # perform operation
fnmadd.s f6, f17, f1, f30, rmm # perform operation
fnmadd.s f6, f17, f1, f30, rne # perform operation
fnmadd.s f6, f17, f1, f30, rtz # perform operation
fnmadd.s f6, f17, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f17, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f17, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x20, 0xfdf5dd2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x0cc72383 # load x3 with value 0x0cc72383
sw x3, 0(x2) # store 0x0cc72383 in memory
flw f19, 0(x2) # load 0x0cc72383 from memory into f19
fnmadd.s f20, f22, f31, f19, dyn # perform operation
fnmadd.s f20, f22, f31, f19, rdn # perform operation
fnmadd.s f20, f22, f31, f19, rmm # perform operation
fnmadd.s f20, f22, f31, f19, rne # perform operation
fnmadd.s f20, f22, f31, f19, rtz # perform operation
fnmadd.s f20, f22, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x9, 0xebf13fc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x05016b19 # load x3 with value 0x05016b19
sw x3, 0(x2) # store 0x05016b19 in memory
flw f19, 0(x2) # load 0x05016b19 from memory into f19
fnmadd.s f9, f21, f25, f19, dyn # perform operation
fnmadd.s f9, f21, f25, f19, rdn # perform operation
fnmadd.s f9, f21, f25, f19, rmm # perform operation
fnmadd.s f9, f21, f25, f19, rne # perform operation
fnmadd.s f9, f21, f25, f19, rtz # perform operation
fnmadd.s f9, f21, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f21, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x26, 0xc2a1d9fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x52c28a0e # load x3 with value 0x52c28a0e
sw x3, 0(x2) # store 0x52c28a0e in memory
flw f29, 0(x2) # load 0x52c28a0e from memory into f29
fnmadd.s f26, f16, f4, f29, dyn # perform operation
fnmadd.s f26, f16, f4, f29, rdn # perform operation
fnmadd.s f26, f16, f4, f29, rmm # perform operation
fnmadd.s f26, f16, f4, f29, rne # perform operation
fnmadd.s f26, f16, f4, f29, rtz # perform operation
fnmadd.s f26, f16, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x5, 0x2a511580 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x06d80683 # load x3 with value 0x06d80683
sw x3, 0(x2) # store 0x06d80683 in memory
flw f23, 0(x2) # load 0x06d80683 from memory into f23
fnmadd.s f5, f21, f31, f23, dyn # perform operation
fnmadd.s f5, f21, f31, f23, rdn # perform operation
fnmadd.s f5, f21, f31, f23, rmm # perform operation
fnmadd.s f5, f21, f31, f23, rne # perform operation
fnmadd.s f5, f21, f31, f23, rtz # perform operation
fnmadd.s f5, f21, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x24, 0xcdcfde19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x572c4bb2 # load x3 with value 0x572c4bb2
sw x3, 0(x2) # store 0x572c4bb2 in memory
flw f3, 0(x2) # load 0x572c4bb2 from memory into f3
fnmadd.s f24, f23, f28, f3, dyn # perform operation
fnmadd.s f24, f23, f28, f3, rdn # perform operation
fnmadd.s f24, f23, f28, f3, rmm # perform operation
fnmadd.s f24, f23, f28, f3, rne # perform operation
fnmadd.s f24, f23, f28, f3, rtz # perform operation
fnmadd.s f24, f23, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f23, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x21, 0x08152cb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0x0aca835a # load x3 with value 0x0aca835a
sw x3, 0(x2) # store 0x0aca835a in memory
flw f28, 0(x2) # load 0x0aca835a from memory into f28
fnmadd.s f21, f30, f31, f28, dyn # perform operation
fnmadd.s f21, f30, f31, f28, rdn # perform operation
fnmadd.s f21, f30, f31, f28, rmm # perform operation
fnmadd.s f21, f30, f31, f28, rne # perform operation
fnmadd.s f21, f30, f31, f28, rtz # perform operation
fnmadd.s f21, f30, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f30, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f30, f31, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x22, 0xce07813c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x333d6791 # load x3 with value 0x333d6791
sw x3, 0(x2) # store 0x333d6791 in memory
flw f4, 0(x2) # load 0x333d6791 from memory into f4
fnmadd.s f22, f19, f8, f4, dyn # perform operation
fnmadd.s f22, f19, f8, f4, rdn # perform operation
fnmadd.s f22, f19, f8, f4, rmm # perform operation
fnmadd.s f22, f19, f8, f4, rne # perform operation
fnmadd.s f22, f19, f8, f4, rtz # perform operation
fnmadd.s f22, f19, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f19, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f19, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f19, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f19, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f19, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x23, 0xd2aeb6f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x4492e832 # load x3 with value 0x4492e832
sw x3, 0(x2) # store 0x4492e832 in memory
flw f21, 0(x2) # load 0x4492e832 from memory into f21
fnmadd.s f23, f9, f18, f21, dyn # perform operation
fnmadd.s f23, f9, f18, f21, rdn # perform operation
fnmadd.s f23, f9, f18, f21, rmm # perform operation
fnmadd.s f23, f9, f18, f21, rne # perform operation
fnmadd.s f23, f9, f18, f21, rtz # perform operation
fnmadd.s f23, f9, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f9, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x12, 0x9b52a185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x3871774f # load x3 with value 0x3871774f
sw x3, 0(x2) # store 0x3871774f in memory
flw f15, 0(x2) # load 0x3871774f from memory into f15
fnmadd.s f12, f17, f23, f15, dyn # perform operation
fnmadd.s f12, f17, f23, f15, rdn # perform operation
fnmadd.s f12, f17, f23, f15, rmm # perform operation
fnmadd.s f12, f17, f23, f15, rne # perform operation
fnmadd.s f12, f17, f23, f15, rtz # perform operation
fnmadd.s f12, f17, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x15, 0x7a904e3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x3d205615 # load x3 with value 0x3d205615
sw x3, 0(x2) # store 0x3d205615 in memory
flw f16, 0(x2) # load 0x3d205615 from memory into f16
fnmadd.s f15, f1, f17, f16, dyn # perform operation
fnmadd.s f15, f1, f17, f16, rdn # perform operation
fnmadd.s f15, f1, f17, f16, rmm # perform operation
fnmadd.s f15, f1, f17, f16, rne # perform operation
fnmadd.s f15, f1, f17, f16, rtz # perform operation
fnmadd.s f15, f1, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x8, 0xf10832b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x21d706a0 # load x3 with value 0x21d706a0
sw x3, 0(x2) # store 0x21d706a0 in memory
flw f10, 0(x2) # load 0x21d706a0 from memory into f10
fnmadd.s f8, f27, f22, f10, dyn # perform operation
fnmadd.s f8, f27, f22, f10, rdn # perform operation
fnmadd.s f8, f27, f22, f10, rmm # perform operation
fnmadd.s f8, f27, f22, f10, rne # perform operation
fnmadd.s f8, f27, f22, f10, rtz # perform operation
fnmadd.s f8, f27, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x28, 0x30f11255 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xbd8498ab # load x3 with value 0xbd8498ab
sw x3, 0(x2) # store 0xbd8498ab in memory
flw f17, 0(x2) # load 0xbd8498ab from memory into f17
fnmadd.s f28, f16, f1, f17, dyn # perform operation
fnmadd.s f28, f16, f1, f17, rdn # perform operation
fnmadd.s f28, f16, f1, f17, rmm # perform operation
fnmadd.s f28, f16, f1, f17, rne # perform operation
fnmadd.s f28, f16, f1, f17, rtz # perform operation
fnmadd.s f28, f16, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f16, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f16, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f16, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f16, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f16, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x26, 0x77321c1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x0e23e131 # load x3 with value 0x0e23e131
sw x3, 0(x2) # store 0x0e23e131 in memory
flw f18, 0(x2) # load 0x0e23e131 from memory into f18
fnmadd.s f26, f24, f9, f18, dyn # perform operation
fnmadd.s f26, f24, f9, f18, rdn # perform operation
fnmadd.s f26, f24, f9, f18, rmm # perform operation
fnmadd.s f26, f24, f9, f18, rne # perform operation
fnmadd.s f26, f24, f9, f18, rtz # perform operation
fnmadd.s f26, f24, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f24, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f24, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x30, 0x9eb5bb37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x345dd875 # load x3 with value 0x345dd875
sw x3, 0(x2) # store 0x345dd875 in memory
flw f2, 0(x2) # load 0x345dd875 from memory into f2
fnmadd.s f30, f1, f14, f2, dyn # perform operation
fnmadd.s f30, f1, f14, f2, rdn # perform operation
fnmadd.s f30, f1, f14, f2, rmm # perform operation
fnmadd.s f30, f1, f14, f2, rne # perform operation
fnmadd.s f30, f1, f14, f2, rtz # perform operation
fnmadd.s f30, f1, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f1, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x14, 0x3dda7d60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0xa1a98611 # load x3 with value 0xa1a98611
sw x3, 0(x2) # store 0xa1a98611 in memory
flw f25, 0(x2) # load 0xa1a98611 from memory into f25
fnmadd.s f14, f1, f16, f25, dyn # perform operation
fnmadd.s f14, f1, f16, f25, rdn # perform operation
fnmadd.s f14, f1, f16, f25, rmm # perform operation
fnmadd.s f14, f1, f16, f25, rne # perform operation
fnmadd.s f14, f1, f16, f25, rtz # perform operation
fnmadd.s f14, f1, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x8, 0xecd4a086 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x96ea267d # load x3 with value 0x96ea267d
sw x3, 0(x2) # store 0x96ea267d in memory
flw f10, 0(x2) # load 0x96ea267d from memory into f10
fnmadd.s f8, f7, f5, f10, dyn # perform operation
fnmadd.s f8, f7, f5, f10, rdn # perform operation
fnmadd.s f8, f7, f5, f10, rmm # perform operation
fnmadd.s f8, f7, f5, f10, rne # perform operation
fnmadd.s f8, f7, f5, f10, rtz # perform operation
fnmadd.s f8, f7, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x31, 0x274d62ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0xe5fbc338 # load x3 with value 0xe5fbc338
sw x3, 0(x2) # store 0xe5fbc338 in memory
flw f11, 0(x2) # load 0xe5fbc338 from memory into f11
fnmadd.s f31, f24, f21, f11, dyn # perform operation
fnmadd.s f31, f24, f21, f11, rdn # perform operation
fnmadd.s f31, f24, f21, f11, rmm # perform operation
fnmadd.s f31, f24, f21, f11, rne # perform operation
fnmadd.s f31, f24, f21, f11, rtz # perform operation
fnmadd.s f31, f24, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f24, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f24, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f24, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f24, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f24, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x22, 0x6b978c01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xaf558a7f # load x3 with value 0xaf558a7f
sw x3, 0(x2) # store 0xaf558a7f in memory
flw f13, 0(x2) # load 0xaf558a7f from memory into f13
fnmadd.s f22, f7, f25, f13, dyn # perform operation
fnmadd.s f22, f7, f25, f13, rdn # perform operation
fnmadd.s f22, f7, f25, f13, rmm # perform operation
fnmadd.s f22, f7, f25, f13, rne # perform operation
fnmadd.s f22, f7, f25, f13, rtz # perform operation
fnmadd.s f22, f7, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f7, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x8, 0x41a96084 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xdf82f6eb # load x3 with value 0xdf82f6eb
sw x3, 0(x2) # store 0xdf82f6eb in memory
flw f11, 0(x2) # load 0xdf82f6eb from memory into f11
fnmadd.s f8, f27, f15, f11, dyn # perform operation
fnmadd.s f8, f27, f15, f11, rdn # perform operation
fnmadd.s f8, f27, f15, f11, rmm # perform operation
fnmadd.s f8, f27, f15, f11, rne # perform operation
fnmadd.s f8, f27, f15, f11, rtz # perform operation
fnmadd.s f8, f27, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x8, 0x9789e17c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0xe82b0805 # load x3 with value 0xe82b0805
sw x3, 0(x2) # store 0xe82b0805 in memory
flw f7, 0(x2) # load 0xe82b0805 from memory into f7
fnmadd.s f8, f24, f20, f7, dyn # perform operation
fnmadd.s f8, f24, f20, f7, rdn # perform operation
fnmadd.s f8, f24, f20, f7, rmm # perform operation
fnmadd.s f8, f24, f20, f7, rne # perform operation
fnmadd.s f8, f24, f20, f7, rtz # perform operation
fnmadd.s f8, f24, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f24, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f24, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f24, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f24, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f24, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x19, 0x66dc6e5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x6ccdf91f # load x3 with value 0x6ccdf91f
sw x3, 0(x2) # store 0x6ccdf91f in memory
flw f21, 0(x2) # load 0x6ccdf91f from memory into f21
fnmadd.s f19, f5, f15, f21, dyn # perform operation
fnmadd.s f19, f5, f15, f21, rdn # perform operation
fnmadd.s f19, f5, f15, f21, rmm # perform operation
fnmadd.s f19, f5, f15, f21, rne # perform operation
fnmadd.s f19, f5, f15, f21, rtz # perform operation
fnmadd.s f19, f5, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x1, 0xdba857c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xf6dd5ea3 # load x3 with value 0xf6dd5ea3
sw x3, 0(x2) # store 0xf6dd5ea3 in memory
flw f15, 0(x2) # load 0xf6dd5ea3 from memory into f15
fnmadd.s f1, f13, f27, f15, dyn # perform operation
fnmadd.s f1, f13, f27, f15, rdn # perform operation
fnmadd.s f1, f13, f27, f15, rmm # perform operation
fnmadd.s f1, f13, f27, f15, rne # perform operation
fnmadd.s f1, f13, f27, f15, rtz # perform operation
fnmadd.s f1, f13, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x8, 0x4c004e3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x2752559c # load x3 with value 0x2752559c
sw x3, 0(x2) # store 0x2752559c in memory
flw f11, 0(x2) # load 0x2752559c from memory into f11
fnmadd.s f8, f27, f13, f11, dyn # perform operation
fnmadd.s f8, f27, f13, f11, rdn # perform operation
fnmadd.s f8, f27, f13, f11, rmm # perform operation
fnmadd.s f8, f27, f13, f11, rne # perform operation
fnmadd.s f8, f27, f13, f11, rtz # perform operation
fnmadd.s f8, f27, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x6, 0xba6c84e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xd179964e # load x3 with value 0xd179964e
sw x3, 0(x2) # store 0xd179964e in memory
flw f17, 0(x2) # load 0xd179964e from memory into f17
fnmadd.s f6, f28, f15, f17, dyn # perform operation
fnmadd.s f6, f28, f15, f17, rdn # perform operation
fnmadd.s f6, f28, f15, f17, rmm # perform operation
fnmadd.s f6, f28, f15, f17, rne # perform operation
fnmadd.s f6, f28, f15, f17, rtz # perform operation
fnmadd.s f6, f28, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x10, 0x2fdd653c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x5f22f696 # load x3 with value 0x5f22f696
sw x3, 0(x2) # store 0x5f22f696 in memory
flw f8, 0(x2) # load 0x5f22f696 from memory into f8
fnmadd.s f10, f29, f6, f8, dyn # perform operation
fnmadd.s f10, f29, f6, f8, rdn # perform operation
fnmadd.s f10, f29, f6, f8, rmm # perform operation
fnmadd.s f10, f29, f6, f8, rne # perform operation
fnmadd.s f10, f29, f6, f8, rtz # perform operation
fnmadd.s f10, f29, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f29, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f29, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f29, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f29, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f29, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x8, 0x7919165e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x85ae1530 # load x3 with value 0x85ae1530
sw x3, 0(x2) # store 0x85ae1530 in memory
flw f14, 0(x2) # load 0x85ae1530 from memory into f14
fnmadd.s f8, f30, f9, f14, dyn # perform operation
fnmadd.s f8, f30, f9, f14, rdn # perform operation
fnmadd.s f8, f30, f9, f14, rmm # perform operation
fnmadd.s f8, f30, f9, f14, rne # perform operation
fnmadd.s f8, f30, f9, f14, rtz # perform operation
fnmadd.s f8, f30, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f30, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x23, 0x7e7c5db0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xbe36b2a8 # load x3 with value 0xbe36b2a8
sw x3, 0(x2) # store 0xbe36b2a8 in memory
flw f17, 0(x2) # load 0xbe36b2a8 from memory into f17
fnmadd.s f23, f18, f14, f17, dyn # perform operation
fnmadd.s f23, f18, f14, f17, rdn # perform operation
fnmadd.s f23, f18, f14, f17, rmm # perform operation
fnmadd.s f23, f18, f14, f17, rne # perform operation
fnmadd.s f23, f18, f14, f17, rtz # perform operation
fnmadd.s f23, f18, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f18, f14, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x12, 0x05045bde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x253eb3f2 # load x3 with value 0x253eb3f2
sw x3, 0(x2) # store 0x253eb3f2 in memory
flw f17, 0(x2) # load 0x253eb3f2 from memory into f17
fnmadd.s f12, f15, f9, f17, dyn # perform operation
fnmadd.s f12, f15, f9, f17, rdn # perform operation
fnmadd.s f12, f15, f9, f17, rmm # perform operation
fnmadd.s f12, f15, f9, f17, rne # perform operation
fnmadd.s f12, f15, f9, f17, rtz # perform operation
fnmadd.s f12, f15, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x31, 0x1947e500 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x2ef8b8ad # load x3 with value 0x2ef8b8ad
sw x3, 0(x2) # store 0x2ef8b8ad in memory
flw f29, 0(x2) # load 0x2ef8b8ad from memory into f29
fnmadd.s f31, f5, f24, f29, dyn # perform operation
fnmadd.s f31, f5, f24, f29, rdn # perform operation
fnmadd.s f31, f5, f24, f29, rmm # perform operation
fnmadd.s f31, f5, f24, f29, rne # perform operation
fnmadd.s f31, f5, f24, f29, rtz # perform operation
fnmadd.s f31, f5, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x4, 0xe7f5b053 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0xff49ac1d # load x3 with value 0xff49ac1d
sw x3, 0(x2) # store 0xff49ac1d in memory
flw f6, 0(x2) # load 0xff49ac1d from memory into f6
fnmadd.s f4, f17, f22, f6, dyn # perform operation
fnmadd.s f4, f17, f22, f6, rdn # perform operation
fnmadd.s f4, f17, f22, f6, rmm # perform operation
fnmadd.s f4, f17, f22, f6, rne # perform operation
fnmadd.s f4, f17, f22, f6, rtz # perform operation
fnmadd.s f4, f17, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x15, 0xb91578e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x7d3ced24 # load x3 with value 0x7d3ced24
sw x3, 0(x2) # store 0x7d3ced24 in memory
flw f18, 0(x2) # load 0x7d3ced24 from memory into f18
fnmadd.s f15, f8, f31, f18, dyn # perform operation
fnmadd.s f15, f8, f31, f18, rdn # perform operation
fnmadd.s f15, f8, f31, f18, rmm # perform operation
fnmadd.s f15, f8, f31, f18, rne # perform operation
fnmadd.s f15, f8, f31, f18, rtz # perform operation
fnmadd.s f15, f8, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x17, 0xb52e0174 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0xb5f08a15 # load x3 with value 0xb5f08a15
sw x3, 0(x2) # store 0xb5f08a15 in memory
flw f19, 0(x2) # load 0xb5f08a15 from memory into f19
fnmadd.s f17, f25, f13, f19, dyn # perform operation
fnmadd.s f17, f25, f13, f19, rdn # perform operation
fnmadd.s f17, f25, f13, f19, rmm # perform operation
fnmadd.s f17, f25, f13, f19, rne # perform operation
fnmadd.s f17, f25, f13, f19, rtz # perform operation
fnmadd.s f17, f25, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x28, 0x57189e36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x1b905dcd # load x3 with value 0x1b905dcd
sw x3, 0(x2) # store 0x1b905dcd in memory
flw f9, 0(x2) # load 0x1b905dcd from memory into f9
fnmadd.s f28, f30, f2, f9, dyn # perform operation
fnmadd.s f28, f30, f2, f9, rdn # perform operation
fnmadd.s f28, f30, f2, f9, rmm # perform operation
fnmadd.s f28, f30, f2, f9, rne # perform operation
fnmadd.s f28, f30, f2, f9, rtz # perform operation
fnmadd.s f28, f30, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x26, 0x884f698e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x5c97a25f # load x3 with value 0x5c97a25f
sw x3, 0(x2) # store 0x5c97a25f in memory
flw f30, 0(x2) # load 0x5c97a25f from memory into f30
fnmadd.s f26, f20, f13, f30, dyn # perform operation
fnmadd.s f26, f20, f13, f30, rdn # perform operation
fnmadd.s f26, f20, f13, f30, rmm # perform operation
fnmadd.s f26, f20, f13, f30, rne # perform operation
fnmadd.s f26, f20, f13, f30, rtz # perform operation
fnmadd.s f26, f20, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f20, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x21, 0xd4e8c482 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x1317f42d # load x3 with value 0x1317f42d
sw x3, 0(x2) # store 0x1317f42d in memory
flw f24, 0(x2) # load 0x1317f42d from memory into f24
fnmadd.s f21, f3, f13, f24, dyn # perform operation
fnmadd.s f21, f3, f13, f24, rdn # perform operation
fnmadd.s f21, f3, f13, f24, rmm # perform operation
fnmadd.s f21, f3, f13, f24, rne # perform operation
fnmadd.s f21, f3, f13, f24, rtz # perform operation
fnmadd.s f21, f3, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x29, 0x65e47f2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0xf5a73ce9 # load x3 with value 0xf5a73ce9
sw x3, 0(x2) # store 0xf5a73ce9 in memory
flw f13, 0(x2) # load 0xf5a73ce9 from memory into f13
fnmadd.s f29, f17, f28, f13, dyn # perform operation
fnmadd.s f29, f17, f28, f13, rdn # perform operation
fnmadd.s f29, f17, f28, f13, rmm # perform operation
fnmadd.s f29, f17, f28, f13, rne # perform operation
fnmadd.s f29, f17, f28, f13, rtz # perform operation
fnmadd.s f29, f17, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f17, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x1, 0xea6fb64e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xceca0de2 # load x3 with value 0xceca0de2
sw x3, 0(x2) # store 0xceca0de2 in memory
flw f8, 0(x2) # load 0xceca0de2 from memory into f8
fnmadd.s f1, f14, f6, f8, dyn # perform operation
fnmadd.s f1, f14, f6, f8, rdn # perform operation
fnmadd.s f1, f14, f6, f8, rmm # perform operation
fnmadd.s f1, f14, f6, f8, rne # perform operation
fnmadd.s f1, f14, f6, f8, rtz # perform operation
fnmadd.s f1, f14, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x16, 0xac14e175 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x0b73a333 # load x3 with value 0x0b73a333
sw x3, 0(x2) # store 0x0b73a333 in memory
flw f9, 0(x2) # load 0x0b73a333 from memory into f9
fnmadd.s f16, f30, f2, f9, dyn # perform operation
fnmadd.s f16, f30, f2, f9, rdn # perform operation
fnmadd.s f16, f30, f2, f9, rmm # perform operation
fnmadd.s f16, f30, f2, f9, rne # perform operation
fnmadd.s f16, f30, f2, f9, rtz # perform operation
fnmadd.s f16, f30, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f30, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x31, 0x64112a78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x7f566136 # load x3 with value 0x7f566136
sw x3, 0(x2) # store 0x7f566136 in memory
flw f28, 0(x2) # load 0x7f566136 from memory into f28
fnmadd.s f31, f2, f20, f28, dyn # perform operation
fnmadd.s f31, f2, f20, f28, rdn # perform operation
fnmadd.s f31, f2, f20, f28, rmm # perform operation
fnmadd.s f31, f2, f20, f28, rne # perform operation
fnmadd.s f31, f2, f20, f28, rtz # perform operation
fnmadd.s f31, f2, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f2, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f2, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f2, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f2, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f2, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x23, 0xb8d51268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x159e7918 # load x3 with value 0x159e7918
sw x3, 0(x2) # store 0x159e7918 in memory
flw f14, 0(x2) # load 0x159e7918 from memory into f14
fnmadd.s f23, f8, f21, f14, dyn # perform operation
fnmadd.s f23, f8, f21, f14, rdn # perform operation
fnmadd.s f23, f8, f21, f14, rmm # perform operation
fnmadd.s f23, f8, f21, f14, rne # perform operation
fnmadd.s f23, f8, f21, f14, rtz # perform operation
fnmadd.s f23, f8, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f8, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x15, 0xecc47b6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xb5d28a94 # load x3 with value 0xb5d28a94
sw x3, 0(x2) # store 0xb5d28a94 in memory
flw f1, 0(x2) # load 0xb5d28a94 from memory into f1
fnmadd.s f15, f27, f30, f1, dyn # perform operation
fnmadd.s f15, f27, f30, f1, rdn # perform operation
fnmadd.s f15, f27, f30, f1, rmm # perform operation
fnmadd.s f15, f27, f30, f1, rne # perform operation
fnmadd.s f15, f27, f30, f1, rtz # perform operation
fnmadd.s f15, f27, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x5, 0xd3686d9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x9afe3b90 # load x3 with value 0x9afe3b90
sw x3, 0(x2) # store 0x9afe3b90 in memory
flw f25, 0(x2) # load 0x9afe3b90 from memory into f25
fnmadd.s f5, f8, f11, f25, dyn # perform operation
fnmadd.s f5, f8, f11, f25, rdn # perform operation
fnmadd.s f5, f8, f11, f25, rmm # perform operation
fnmadd.s f5, f8, f11, f25, rne # perform operation
fnmadd.s f5, f8, f11, f25, rtz # perform operation
fnmadd.s f5, f8, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x29, 0x88774d1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0xf169c6fc # load x3 with value 0xf169c6fc
sw x3, 0(x2) # store 0xf169c6fc in memory
flw f30, 0(x2) # load 0xf169c6fc from memory into f30
fnmadd.s f29, f31, f24, f30, dyn # perform operation
fnmadd.s f29, f31, f24, f30, rdn # perform operation
fnmadd.s f29, f31, f24, f30, rmm # perform operation
fnmadd.s f29, f31, f24, f30, rne # perform operation
fnmadd.s f29, f31, f24, f30, rtz # perform operation
fnmadd.s f29, f31, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f31, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x14, 0x61bc4397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x83773320 # load x3 with value 0x83773320
sw x3, 0(x2) # store 0x83773320 in memory
flw f16, 0(x2) # load 0x83773320 from memory into f16
fnmadd.s f14, f8, f17, f16, dyn # perform operation
fnmadd.s f14, f8, f17, f16, rdn # perform operation
fnmadd.s f14, f8, f17, f16, rmm # perform operation
fnmadd.s f14, f8, f17, f16, rne # perform operation
fnmadd.s f14, f8, f17, f16, rtz # perform operation
fnmadd.s f14, f8, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f8, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x18, 0xd98f03a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xdbea7f2c # load x3 with value 0xdbea7f2c
sw x3, 0(x2) # store 0xdbea7f2c in memory
flw f9, 0(x2) # load 0xdbea7f2c from memory into f9
fnmadd.s f18, f26, f28, f9, dyn # perform operation
fnmadd.s f18, f26, f28, f9, rdn # perform operation
fnmadd.s f18, f26, f28, f9, rmm # perform operation
fnmadd.s f18, f26, f28, f9, rne # perform operation
fnmadd.s f18, f26, f28, f9, rtz # perform operation
fnmadd.s f18, f26, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x11, 0x84da8991 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x74bd4423 # load x3 with value 0x74bd4423
sw x3, 0(x2) # store 0x74bd4423 in memory
flw f30, 0(x2) # load 0x74bd4423 from memory into f30
fnmadd.s f11, f8, f22, f30, dyn # perform operation
fnmadd.s f11, f8, f22, f30, rdn # perform operation
fnmadd.s f11, f8, f22, f30, rmm # perform operation
fnmadd.s f11, f8, f22, f30, rne # perform operation
fnmadd.s f11, f8, f22, f30, rtz # perform operation
fnmadd.s f11, f8, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x31, 0x1dc0ab11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0xe1ec40c7 # load x3 with value 0xe1ec40c7
sw x3, 0(x2) # store 0xe1ec40c7 in memory
flw f22, 0(x2) # load 0xe1ec40c7 from memory into f22
fnmadd.s f31, f26, f30, f22, dyn # perform operation
fnmadd.s f31, f26, f30, f22, rdn # perform operation
fnmadd.s f31, f26, f30, f22, rmm # perform operation
fnmadd.s f31, f26, f30, f22, rne # perform operation
fnmadd.s f31, f26, f30, f22, rtz # perform operation
fnmadd.s f31, f26, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f26, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f26, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f26, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f26, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f26, f30, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x3, 0xadd19ae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x096a967e # load x3 with value 0x096a967e
sw x3, 0(x2) # store 0x096a967e in memory
flw f25, 0(x2) # load 0x096a967e from memory into f25
fnmadd.s f3, f31, f12, f25, dyn # perform operation
fnmadd.s f3, f31, f12, f25, rdn # perform operation
fnmadd.s f3, f31, f12, f25, rmm # perform operation
fnmadd.s f3, f31, f12, f25, rne # perform operation
fnmadd.s f3, f31, f12, f25, rtz # perform operation
fnmadd.s f3, f31, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x10, 0x39d23670 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x9162e1bb # load x3 with value 0x9162e1bb
sw x3, 0(x2) # store 0x9162e1bb in memory
flw f6, 0(x2) # load 0x9162e1bb from memory into f6
fnmadd.s f10, f1, f24, f6, dyn # perform operation
fnmadd.s f10, f1, f24, f6, rdn # perform operation
fnmadd.s f10, f1, f24, f6, rmm # perform operation
fnmadd.s f10, f1, f24, f6, rne # perform operation
fnmadd.s f10, f1, f24, f6, rtz # perform operation
fnmadd.s f10, f1, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f1, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x4, 0x3b28f883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x53b0b8d9 # load x3 with value 0x53b0b8d9
sw x3, 0(x2) # store 0x53b0b8d9 in memory
flw f18, 0(x2) # load 0x53b0b8d9 from memory into f18
fnmadd.s f4, f25, f27, f18, dyn # perform operation
fnmadd.s f4, f25, f27, f18, rdn # perform operation
fnmadd.s f4, f25, f27, f18, rmm # perform operation
fnmadd.s f4, f25, f27, f18, rne # perform operation
fnmadd.s f4, f25, f27, f18, rtz # perform operation
fnmadd.s f4, f25, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f25, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f25, f27, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x30, 0x31c9eeb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0xf3842166 # load x3 with value 0xf3842166
sw x3, 0(x2) # store 0xf3842166 in memory
flw f19, 0(x2) # load 0xf3842166 from memory into f19
fnmadd.s f30, f18, f6, f19, dyn # perform operation
fnmadd.s f30, f18, f6, f19, rdn # perform operation
fnmadd.s f30, f18, f6, f19, rmm # perform operation
fnmadd.s f30, f18, f6, f19, rne # perform operation
fnmadd.s f30, f18, f6, f19, rtz # perform operation
fnmadd.s f30, f18, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x21, 0xe647ae6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xe72e37e3 # load x3 with value 0xe72e37e3
sw x3, 0(x2) # store 0xe72e37e3 in memory
flw f27, 0(x2) # load 0xe72e37e3 from memory into f27
fnmadd.s f21, f6, f16, f27, dyn # perform operation
fnmadd.s f21, f6, f16, f27, rdn # perform operation
fnmadd.s f21, f6, f16, f27, rmm # perform operation
fnmadd.s f21, f6, f16, f27, rne # perform operation
fnmadd.s f21, f6, f16, f27, rtz # perform operation
fnmadd.s f21, f6, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x5, 0xdcb828fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xbc482171 # load x3 with value 0xbc482171
sw x3, 0(x2) # store 0xbc482171 in memory
flw f22, 0(x2) # load 0xbc482171 from memory into f22
fnmadd.s f5, f11, f26, f22, dyn # perform operation
fnmadd.s f5, f11, f26, f22, rdn # perform operation
fnmadd.s f5, f11, f26, f22, rmm # perform operation
fnmadd.s f5, f11, f26, f22, rne # perform operation
fnmadd.s f5, f11, f26, f22, rtz # perform operation
fnmadd.s f5, f11, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f11, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x3, 0x8a157163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x7c0109b5 # load x3 with value 0x7c0109b5
sw x3, 0(x2) # store 0x7c0109b5 in memory
flw f16, 0(x2) # load 0x7c0109b5 from memory into f16
fnmadd.s f3, f1, f7, f16, dyn # perform operation
fnmadd.s f3, f1, f7, f16, rdn # perform operation
fnmadd.s f3, f1, f7, f16, rmm # perform operation
fnmadd.s f3, f1, f7, f16, rne # perform operation
fnmadd.s f3, f1, f7, f16, rtz # perform operation
fnmadd.s f3, f1, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x1, 0xb5d8b989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x4f973141 # load x3 with value 0x4f973141
sw x3, 0(x2) # store 0x4f973141 in memory
flw f5, 0(x2) # load 0x4f973141 from memory into f5
fnmadd.s f1, f3, f22, f5, dyn # perform operation
fnmadd.s f1, f3, f22, f5, rdn # perform operation
fnmadd.s f1, f3, f22, f5, rmm # perform operation
fnmadd.s f1, f3, f22, f5, rne # perform operation
fnmadd.s f1, f3, f22, f5, rtz # perform operation
fnmadd.s f1, f3, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f3, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x24, 0x5979c110 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x5dfc6d3e # load x3 with value 0x5dfc6d3e
sw x3, 0(x2) # store 0x5dfc6d3e in memory
flw f2, 0(x2) # load 0x5dfc6d3e from memory into f2
fnmadd.s f24, f27, f31, f2, dyn # perform operation
fnmadd.s f24, f27, f31, f2, rdn # perform operation
fnmadd.s f24, f27, f31, f2, rmm # perform operation
fnmadd.s f24, f27, f31, f2, rne # perform operation
fnmadd.s f24, f27, f31, f2, rtz # perform operation
fnmadd.s f24, f27, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f27, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x6, 0xf422a62b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x5c0e92c1 # load x3 with value 0x5c0e92c1
sw x3, 0(x2) # store 0x5c0e92c1 in memory
flw f5, 0(x2) # load 0x5c0e92c1 from memory into f5
fnmadd.s f6, f2, f19, f5, dyn # perform operation
fnmadd.s f6, f2, f19, f5, rdn # perform operation
fnmadd.s f6, f2, f19, f5, rmm # perform operation
fnmadd.s f6, f2, f19, f5, rne # perform operation
fnmadd.s f6, f2, f19, f5, rtz # perform operation
fnmadd.s f6, f2, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f2, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x11, 0x108a7c4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x0453f03c # load x3 with value 0x0453f03c
sw x3, 0(x2) # store 0x0453f03c in memory
flw f10, 0(x2) # load 0x0453f03c from memory into f10
fnmadd.s f11, f13, f25, f10, dyn # perform operation
fnmadd.s f11, f13, f25, f10, rdn # perform operation
fnmadd.s f11, f13, f25, f10, rmm # perform operation
fnmadd.s f11, f13, f25, f10, rne # perform operation
fnmadd.s f11, f13, f25, f10, rtz # perform operation
fnmadd.s f11, f13, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f13, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x7, 0xb156d97f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x6505b660 # load x3 with value 0x6505b660
sw x3, 0(x2) # store 0x6505b660 in memory
flw f26, 0(x2) # load 0x6505b660 from memory into f26
fnmadd.s f7, f4, f24, f26, dyn # perform operation
fnmadd.s f7, f4, f24, f26, rdn # perform operation
fnmadd.s f7, f4, f24, f26, rmm # perform operation
fnmadd.s f7, f4, f24, f26, rne # perform operation
fnmadd.s f7, f4, f24, f26, rtz # perform operation
fnmadd.s f7, f4, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f4, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x18, 0xe8af216c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0xcf8abdf8 # load x3 with value 0xcf8abdf8
sw x3, 0(x2) # store 0xcf8abdf8 in memory
flw f6, 0(x2) # load 0xcf8abdf8 from memory into f6
fnmadd.s f18, f13, f12, f6, dyn # perform operation
fnmadd.s f18, f13, f12, f6, rdn # perform operation
fnmadd.s f18, f13, f12, f6, rmm # perform operation
fnmadd.s f18, f13, f12, f6, rne # perform operation
fnmadd.s f18, f13, f12, f6, rtz # perform operation
fnmadd.s f18, f13, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x4, 0x267cbe16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x70bb5230 # load x3 with value 0x70bb5230
sw x3, 0(x2) # store 0x70bb5230 in memory
flw f25, 0(x2) # load 0x70bb5230 from memory into f25
fnmadd.s f4, f24, f5, f25, dyn # perform operation
fnmadd.s f4, f24, f5, f25, rdn # perform operation
fnmadd.s f4, f24, f5, f25, rmm # perform operation
fnmadd.s f4, f24, f5, f25, rne # perform operation
fnmadd.s f4, f24, f5, f25, rtz # perform operation
fnmadd.s f4, f24, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f24, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x23, 0xb2a62f71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x2d1ae854 # load x3 with value 0x2d1ae854
sw x3, 0(x2) # store 0x2d1ae854 in memory
flw f1, 0(x2) # load 0x2d1ae854 from memory into f1
fnmadd.s f23, f30, f18, f1, dyn # perform operation
fnmadd.s f23, f30, f18, f1, rdn # perform operation
fnmadd.s f23, f30, f18, f1, rmm # perform operation
fnmadd.s f23, f30, f18, f1, rne # perform operation
fnmadd.s f23, f30, f18, f1, rtz # perform operation
fnmadd.s f23, f30, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x30, 0xadd9593c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x054607db # load x3 with value 0x054607db
sw x3, 0(x2) # store 0x054607db in memory
flw f14, 0(x2) # load 0x054607db from memory into f14
fnmadd.s f30, f25, f24, f14, dyn # perform operation
fnmadd.s f30, f25, f24, f14, rdn # perform operation
fnmadd.s f30, f25, f24, f14, rmm # perform operation
fnmadd.s f30, f25, f24, f14, rne # perform operation
fnmadd.s f30, f25, f24, f14, rtz # perform operation
fnmadd.s f30, f25, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f25, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x25, 0x8961ed6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x73c142d9 # load x3 with value 0x73c142d9
sw x3, 0(x2) # store 0x73c142d9 in memory
flw f14, 0(x2) # load 0x73c142d9 from memory into f14
fnmadd.s f25, f8, f29, f14, dyn # perform operation
fnmadd.s f25, f8, f29, f14, rdn # perform operation
fnmadd.s f25, f8, f29, f14, rmm # perform operation
fnmadd.s f25, f8, f29, f14, rne # perform operation
fnmadd.s f25, f8, f29, f14, rtz # perform operation
fnmadd.s f25, f8, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f8, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f8, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x9, 0x0cd128a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x0cd1820f # load x3 with value 0x0cd1820f
sw x3, 0(x2) # store 0x0cd1820f in memory
flw f10, 0(x2) # load 0x0cd1820f from memory into f10
fnmadd.s f9, f5, f29, f10, dyn # perform operation
fnmadd.s f9, f5, f29, f10, rdn # perform operation
fnmadd.s f9, f5, f29, f10, rmm # perform operation
fnmadd.s f9, f5, f29, f10, rne # perform operation
fnmadd.s f9, f5, f29, f10, rtz # perform operation
fnmadd.s f9, f5, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f5, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x3, 0x6ba032cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0xee6d21d1 # load x3 with value 0xee6d21d1
sw x3, 0(x2) # store 0xee6d21d1 in memory
flw f30, 0(x2) # load 0xee6d21d1 from memory into f30
fnmadd.s f3, f14, f27, f30, dyn # perform operation
fnmadd.s f3, f14, f27, f30, rdn # perform operation
fnmadd.s f3, f14, f27, f30, rmm # perform operation
fnmadd.s f3, f14, f27, f30, rne # perform operation
fnmadd.s f3, f14, f27, f30, rtz # perform operation
fnmadd.s f3, f14, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f14, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f14, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x12, 0x23ebe21d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0xc7ce3151 # load x3 with value 0xc7ce3151
sw x3, 0(x2) # store 0xc7ce3151 in memory
flw f6, 0(x2) # load 0xc7ce3151 from memory into f6
fnmadd.s f12, f7, f26, f6, dyn # perform operation
fnmadd.s f12, f7, f26, f6, rdn # perform operation
fnmadd.s f12, f7, f26, f6, rmm # perform operation
fnmadd.s f12, f7, f26, f6, rne # perform operation
fnmadd.s f12, f7, f26, f6, rtz # perform operation
fnmadd.s f12, f7, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f7, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x29, 0x5f5ab25d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0xd20b98e6 # load x3 with value 0xd20b98e6
sw x3, 0(x2) # store 0xd20b98e6 in memory
flw f20, 0(x2) # load 0xd20b98e6 from memory into f20
fnmadd.s f29, f1, f18, f20, dyn # perform operation
fnmadd.s f29, f1, f18, f20, rdn # perform operation
fnmadd.s f29, f1, f18, f20, rmm # perform operation
fnmadd.s f29, f1, f18, f20, rne # perform operation
fnmadd.s f29, f1, f18, f20, rtz # perform operation
fnmadd.s f29, f1, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f1, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f1, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f1, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f1, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f1, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x23, 0x33aafc36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xadc16e8d # load x3 with value 0xadc16e8d
sw x3, 0(x2) # store 0xadc16e8d in memory
flw f14, 0(x2) # load 0xadc16e8d from memory into f14
fnmadd.s f23, f10, f15, f14, dyn # perform operation
fnmadd.s f23, f10, f15, f14, rdn # perform operation
fnmadd.s f23, f10, f15, f14, rmm # perform operation
fnmadd.s f23, f10, f15, f14, rne # perform operation
fnmadd.s f23, f10, f15, f14, rtz # perform operation
fnmadd.s f23, f10, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x19, 0x6ea62874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x8877a0fb # load x3 with value 0x8877a0fb
sw x3, 0(x2) # store 0x8877a0fb in memory
flw f6, 0(x2) # load 0x8877a0fb from memory into f6
fnmadd.s f19, f2, f13, f6, dyn # perform operation
fnmadd.s f19, f2, f13, f6, rdn # perform operation
fnmadd.s f19, f2, f13, f6, rmm # perform operation
fnmadd.s f19, f2, f13, f6, rne # perform operation
fnmadd.s f19, f2, f13, f6, rtz # perform operation
fnmadd.s f19, f2, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x27, 0xbdfc6a55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0xfddefa28 # load x3 with value 0xfddefa28
sw x3, 0(x2) # store 0xfddefa28 in memory
flw f15, 0(x2) # load 0xfddefa28 from memory into f15
fnmadd.s f27, f31, f24, f15, dyn # perform operation
fnmadd.s f27, f31, f24, f15, rdn # perform operation
fnmadd.s f27, f31, f24, f15, rmm # perform operation
fnmadd.s f27, f31, f24, f15, rne # perform operation
fnmadd.s f27, f31, f24, f15, rtz # perform operation
fnmadd.s f27, f31, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x17, 0xd9d43ddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x79ccdc33 # load x3 with value 0x79ccdc33
sw x3, 0(x2) # store 0x79ccdc33 in memory
flw f10, 0(x2) # load 0x79ccdc33 from memory into f10
fnmadd.s f17, f28, f18, f10, dyn # perform operation
fnmadd.s f17, f28, f18, f10, rdn # perform operation
fnmadd.s f17, f28, f18, f10, rmm # perform operation
fnmadd.s f17, f28, f18, f10, rne # perform operation
fnmadd.s f17, f28, f18, f10, rtz # perform operation
fnmadd.s f17, f28, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f28, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f28, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f28, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f28, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f28, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x17, 0x36ee55df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xf875a95d # load x3 with value 0xf875a95d
sw x3, 0(x2) # store 0xf875a95d in memory
flw f3, 0(x2) # load 0xf875a95d from memory into f3
fnmadd.s f17, f18, f7, f3, dyn # perform operation
fnmadd.s f17, f18, f7, f3, rdn # perform operation
fnmadd.s f17, f18, f7, f3, rmm # perform operation
fnmadd.s f17, f18, f7, f3, rne # perform operation
fnmadd.s f17, f18, f7, f3, rtz # perform operation
fnmadd.s f17, f18, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x2, 0xd7134e97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x169c9512 # load x3 with value 0x169c9512
sw x3, 0(x2) # store 0x169c9512 in memory
flw f24, 0(x2) # load 0x169c9512 from memory into f24
fnmadd.s f2, f23, f16, f24, dyn # perform operation
fnmadd.s f2, f23, f16, f24, rdn # perform operation
fnmadd.s f2, f23, f16, f24, rmm # perform operation
fnmadd.s f2, f23, f16, f24, rne # perform operation
fnmadd.s f2, f23, f16, f24, rtz # perform operation
fnmadd.s f2, f23, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x22, 0x47eb8de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x7db062d0 # load x3 with value 0x7db062d0
sw x3, 0(x2) # store 0x7db062d0 in memory
flw f31, 0(x2) # load 0x7db062d0 from memory into f31
fnmadd.s f22, f8, f4, f31, dyn # perform operation
fnmadd.s f22, f8, f4, f31, rdn # perform operation
fnmadd.s f22, f8, f4, f31, rmm # perform operation
fnmadd.s f22, f8, f4, f31, rne # perform operation
fnmadd.s f22, f8, f4, f31, rtz # perform operation
fnmadd.s f22, f8, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x9, 0xa65a6d08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xbbd749dc # load x3 with value 0xbbd749dc
sw x3, 0(x2) # store 0xbbd749dc in memory
flw f30, 0(x2) # load 0xbbd749dc from memory into f30
fnmadd.s f9, f18, f2, f30, dyn # perform operation
fnmadd.s f9, f18, f2, f30, rdn # perform operation
fnmadd.s f9, f18, f2, f30, rmm # perform operation
fnmadd.s f9, f18, f2, f30, rne # perform operation
fnmadd.s f9, f18, f2, f30, rtz # perform operation
fnmadd.s f9, f18, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x15, 0x687384d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0x5953b39a # load x3 with value 0x5953b39a
sw x3, 0(x2) # store 0x5953b39a in memory
flw f19, 0(x2) # load 0x5953b39a from memory into f19
fnmadd.s f15, f27, f5, f19, dyn # perform operation
fnmadd.s f15, f27, f5, f19, rdn # perform operation
fnmadd.s f15, f27, f5, f19, rmm # perform operation
fnmadd.s f15, f27, f5, f19, rne # perform operation
fnmadd.s f15, f27, f5, f19, rtz # perform operation
fnmadd.s f15, f27, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x24, 0xecd24c48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x03f8f329 # load x3 with value 0x03f8f329
sw x3, 0(x2) # store 0x03f8f329 in memory
flw f31, 0(x2) # load 0x03f8f329 from memory into f31
fnmadd.s f24, f18, f12, f31, dyn # perform operation
fnmadd.s f24, f18, f12, f31, rdn # perform operation
fnmadd.s f24, f18, f12, f31, rmm # perform operation
fnmadd.s f24, f18, f12, f31, rne # perform operation
fnmadd.s f24, f18, f12, f31, rtz # perform operation
fnmadd.s f24, f18, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x19, 0x2befb86e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xc3e81e40 # load x3 with value 0xc3e81e40
sw x3, 0(x2) # store 0xc3e81e40 in memory
flw f1, 0(x2) # load 0xc3e81e40 from memory into f1
fnmadd.s f19, f16, f12, f1, dyn # perform operation
fnmadd.s f19, f16, f12, f1, rdn # perform operation
fnmadd.s f19, f16, f12, f1, rmm # perform operation
fnmadd.s f19, f16, f12, f1, rne # perform operation
fnmadd.s f19, f16, f12, f1, rtz # perform operation
fnmadd.s f19, f16, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x26, 0xbc48d3c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x5a6930d9 # load x3 with value 0x5a6930d9
sw x3, 0(x2) # store 0x5a6930d9 in memory
flw f27, 0(x2) # load 0x5a6930d9 from memory into f27
fnmadd.s f26, f17, f15, f27, dyn # perform operation
fnmadd.s f26, f17, f15, f27, rdn # perform operation
fnmadd.s f26, f17, f15, f27, rmm # perform operation
fnmadd.s f26, f17, f15, f27, rne # perform operation
fnmadd.s f26, f17, f15, f27, rtz # perform operation
fnmadd.s f26, f17, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f17, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x6, 0x6293c8ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x429806d2 # load x3 with value 0x429806d2
sw x3, 0(x2) # store 0x429806d2 in memory
flw f31, 0(x2) # load 0x429806d2 from memory into f31
fnmadd.s f6, f23, f18, f31, dyn # perform operation
fnmadd.s f6, f23, f18, f31, rdn # perform operation
fnmadd.s f6, f23, f18, f31, rmm # perform operation
fnmadd.s f6, f23, f18, f31, rne # perform operation
fnmadd.s f6, f23, f18, f31, rtz # perform operation
fnmadd.s f6, f23, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x28, 0x40d2cca1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xd5be4cb4 # load x3 with value 0xd5be4cb4
sw x3, 0(x2) # store 0xd5be4cb4 in memory
flw f11, 0(x2) # load 0xd5be4cb4 from memory into f11
fnmadd.s f28, f18, f9, f11, dyn # perform operation
fnmadd.s f28, f18, f9, f11, rdn # perform operation
fnmadd.s f28, f18, f9, f11, rmm # perform operation
fnmadd.s f28, f18, f9, f11, rne # perform operation
fnmadd.s f28, f18, f9, f11, rtz # perform operation
fnmadd.s f28, f18, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x19, 0xd8b147fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x345c3c41 # load x3 with value 0x345c3c41
sw x3, 0(x2) # store 0x345c3c41 in memory
flw f31, 0(x2) # load 0x345c3c41 from memory into f31
fnmadd.s f19, f28, f5, f31, dyn # perform operation
fnmadd.s f19, f28, f5, f31, rdn # perform operation
fnmadd.s f19, f28, f5, f31, rmm # perform operation
fnmadd.s f19, f28, f5, f31, rne # perform operation
fnmadd.s f19, f28, f5, f31, rtz # perform operation
fnmadd.s f19, f28, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f28, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f28, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f28, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f28, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f28, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x17, 0x45f5a46b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x3bcb983d # load x3 with value 0x3bcb983d
sw x3, 0(x2) # store 0x3bcb983d in memory
flw f11, 0(x2) # load 0x3bcb983d from memory into f11
fnmadd.s f17, f26, f4, f11, dyn # perform operation
fnmadd.s f17, f26, f4, f11, rdn # perform operation
fnmadd.s f17, f26, f4, f11, rmm # perform operation
fnmadd.s f17, f26, f4, f11, rne # perform operation
fnmadd.s f17, f26, f4, f11, rtz # perform operation
fnmadd.s f17, f26, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x13, 0x629120ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x7cdf5cb1 # load x3 with value 0x7cdf5cb1
sw x3, 0(x2) # store 0x7cdf5cb1 in memory
flw f10, 0(x2) # load 0x7cdf5cb1 from memory into f10
fnmadd.s f13, f15, f24, f10, dyn # perform operation
fnmadd.s f13, f15, f24, f10, rdn # perform operation
fnmadd.s f13, f15, f24, f10, rmm # perform operation
fnmadd.s f13, f15, f24, f10, rne # perform operation
fnmadd.s f13, f15, f24, f10, rtz # perform operation
fnmadd.s f13, f15, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f15, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f15, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f15, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f15, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f15, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x14, 0x394043ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x432a8055 # load x3 with value 0x432a8055
sw x3, 0(x2) # store 0x432a8055 in memory
flw f16, 0(x2) # load 0x432a8055 from memory into f16
fnmadd.s f14, f21, f11, f16, dyn # perform operation
fnmadd.s f14, f21, f11, f16, rdn # perform operation
fnmadd.s f14, f21, f11, f16, rmm # perform operation
fnmadd.s f14, f21, f11, f16, rne # perform operation
fnmadd.s f14, f21, f11, f16, rtz # perform operation
fnmadd.s f14, f21, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x16, 0x5ac7e031 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x42e38034 # load x3 with value 0x42e38034
sw x3, 0(x2) # store 0x42e38034 in memory
flw f15, 0(x2) # load 0x42e38034 from memory into f15
fnmadd.s f16, f8, f12, f15, dyn # perform operation
fnmadd.s f16, f8, f12, f15, rdn # perform operation
fnmadd.s f16, f8, f12, f15, rmm # perform operation
fnmadd.s f16, f8, f12, f15, rne # perform operation
fnmadd.s f16, f8, f12, f15, rtz # perform operation
fnmadd.s f16, f8, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x26, 0x4d0a50c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xbe578532 # load x3 with value 0xbe578532
sw x3, 0(x2) # store 0xbe578532 in memory
flw f8, 0(x2) # load 0xbe578532 from memory into f8
fnmadd.s f26, f16, f23, f8, dyn # perform operation
fnmadd.s f26, f16, f23, f8, rdn # perform operation
fnmadd.s f26, f16, f23, f8, rmm # perform operation
fnmadd.s f26, f16, f23, f8, rne # perform operation
fnmadd.s f26, f16, f23, f8, rtz # perform operation
fnmadd.s f26, f16, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x28, 0xcb4fb595 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x687db43d # load x3 with value 0x687db43d
sw x3, 0(x2) # store 0x687db43d in memory
flw f10, 0(x2) # load 0x687db43d from memory into f10
fnmadd.s f28, f19, f13, f10, dyn # perform operation
fnmadd.s f28, f19, f13, f10, rdn # perform operation
fnmadd.s f28, f19, f13, f10, rmm # perform operation
fnmadd.s f28, f19, f13, f10, rne # perform operation
fnmadd.s f28, f19, f13, f10, rtz # perform operation
fnmadd.s f28, f19, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x29, 0x29cc8a2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xf4ef0797 # load x3 with value 0xf4ef0797
sw x3, 0(x2) # store 0xf4ef0797 in memory
flw f1, 0(x2) # load 0xf4ef0797 from memory into f1
fnmadd.s f29, f21, f16, f1, dyn # perform operation
fnmadd.s f29, f21, f16, f1, rdn # perform operation
fnmadd.s f29, f21, f16, f1, rmm # perform operation
fnmadd.s f29, f21, f16, f1, rne # perform operation
fnmadd.s f29, f21, f16, f1, rtz # perform operation
fnmadd.s f29, f21, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f21, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f21, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f21, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f21, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f21, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x4, 0xe5fcfc37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x5f8e3910 # load x3 with value 0x5f8e3910
sw x3, 0(x2) # store 0x5f8e3910 in memory
flw f20, 0(x2) # load 0x5f8e3910 from memory into f20
fnmadd.s f4, f24, f7, f20, dyn # perform operation
fnmadd.s f4, f24, f7, f20, rdn # perform operation
fnmadd.s f4, f24, f7, f20, rmm # perform operation
fnmadd.s f4, f24, f7, f20, rne # perform operation
fnmadd.s f4, f24, f7, f20, rtz # perform operation
fnmadd.s f4, f24, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f24, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x7, 0x959555b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x492db787 # load x3 with value 0x492db787
sw x3, 0(x2) # store 0x492db787 in memory
flw f11, 0(x2) # load 0x492db787 from memory into f11
fnmadd.s f7, f8, f21, f11, dyn # perform operation
fnmadd.s f7, f8, f21, f11, rdn # perform operation
fnmadd.s f7, f8, f21, f11, rmm # perform operation
fnmadd.s f7, f8, f21, f11, rne # perform operation
fnmadd.s f7, f8, f21, f11, rtz # perform operation
fnmadd.s f7, f8, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f8, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f8, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x31, 0x53a0c199 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0xaef6e1fe # load x3 with value 0xaef6e1fe
sw x3, 0(x2) # store 0xaef6e1fe in memory
flw f29, 0(x2) # load 0xaef6e1fe from memory into f29
fnmadd.s f31, f15, f24, f29, dyn # perform operation
fnmadd.s f31, f15, f24, f29, rdn # perform operation
fnmadd.s f31, f15, f24, f29, rmm # perform operation
fnmadd.s f31, f15, f24, f29, rne # perform operation
fnmadd.s f31, f15, f24, f29, rtz # perform operation
fnmadd.s f31, f15, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f15, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x31, 0x759e7ca7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x0e74e16f # load x3 with value 0x0e74e16f
sw x3, 0(x2) # store 0x0e74e16f in memory
flw f6, 0(x2) # load 0x0e74e16f from memory into f6
fnmadd.s f31, f1, f22, f6, dyn # perform operation
fnmadd.s f31, f1, f22, f6, rdn # perform operation
fnmadd.s f31, f1, f22, f6, rmm # perform operation
fnmadd.s f31, f1, f22, f6, rne # perform operation
fnmadd.s f31, f1, f22, f6, rtz # perform operation
fnmadd.s f31, f1, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x20, 0xa00c934f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x2c8b45ae # load x3 with value 0x2c8b45ae
sw x3, 0(x2) # store 0x2c8b45ae in memory
flw f25, 0(x2) # load 0x2c8b45ae from memory into f25
fnmadd.s f20, f17, f29, f25, dyn # perform operation
fnmadd.s f20, f17, f29, f25, rdn # perform operation
fnmadd.s f20, f17, f29, f25, rmm # perform operation
fnmadd.s f20, f17, f29, f25, rne # perform operation
fnmadd.s f20, f17, f29, f25, rtz # perform operation
fnmadd.s f20, f17, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f17, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f17, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f17, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f17, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f17, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x15, 0x9a7b571d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x9b0f1c5f # load x3 with value 0x9b0f1c5f
sw x3, 0(x2) # store 0x9b0f1c5f in memory
flw f8, 0(x2) # load 0x9b0f1c5f from memory into f8
fnmadd.s f15, f12, f5, f8, dyn # perform operation
fnmadd.s f15, f12, f5, f8, rdn # perform operation
fnmadd.s f15, f12, f5, f8, rmm # perform operation
fnmadd.s f15, f12, f5, f8, rne # perform operation
fnmadd.s f15, f12, f5, f8, rtz # perform operation
fnmadd.s f15, f12, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f12, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f12, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x5, 0x9684007c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x11bda0e4 # load x3 with value 0x11bda0e4
sw x3, 0(x2) # store 0x11bda0e4 in memory
flw f10, 0(x2) # load 0x11bda0e4 from memory into f10
fnmadd.s f5, f6, f11, f10, dyn # perform operation
fnmadd.s f5, f6, f11, f10, rdn # perform operation
fnmadd.s f5, f6, f11, f10, rmm # perform operation
fnmadd.s f5, f6, f11, f10, rne # perform operation
fnmadd.s f5, f6, f11, f10, rtz # perform operation
fnmadd.s f5, f6, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f6, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f6, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f6, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f6, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f6, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x6, 0x493a7641 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0xf41141b9 # load x3 with value 0xf41141b9
sw x3, 0(x2) # store 0xf41141b9 in memory
flw f19, 0(x2) # load 0xf41141b9 from memory into f19
fnmadd.s f6, f4, f5, f19, dyn # perform operation
fnmadd.s f6, f4, f5, f19, rdn # perform operation
fnmadd.s f6, f4, f5, f19, rmm # perform operation
fnmadd.s f6, f4, f5, f19, rne # perform operation
fnmadd.s f6, f4, f5, f19, rtz # perform operation
fnmadd.s f6, f4, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f4, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f4, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f4, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f4, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f4, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x12, 0x3bbbcf66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x105423dd # load x3 with value 0x105423dd
sw x3, 0(x2) # store 0x105423dd in memory
flw f2, 0(x2) # load 0x105423dd from memory into f2
fnmadd.s f12, f28, f31, f2, dyn # perform operation
fnmadd.s f12, f28, f31, f2, rdn # perform operation
fnmadd.s f12, f28, f31, f2, rmm # perform operation
fnmadd.s f12, f28, f31, f2, rne # perform operation
fnmadd.s f12, f28, f31, f2, rtz # perform operation
fnmadd.s f12, f28, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x3, 0x006bacc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x16f73d27 # load x3 with value 0x16f73d27
sw x3, 0(x2) # store 0x16f73d27 in memory
flw f23, 0(x2) # load 0x16f73d27 from memory into f23
fnmadd.s f3, f28, f18, f23, dyn # perform operation
fnmadd.s f3, f28, f18, f23, rdn # perform operation
fnmadd.s f3, f28, f18, f23, rmm # perform operation
fnmadd.s f3, f28, f18, f23, rne # perform operation
fnmadd.s f3, f28, f18, f23, rtz # perform operation
fnmadd.s f3, f28, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f28, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f28, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f28, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f28, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f28, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x13, 0x99bb51a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x2f2922a3 # load x3 with value 0x2f2922a3
sw x3, 0(x2) # store 0x2f2922a3 in memory
flw f5, 0(x2) # load 0x2f2922a3 from memory into f5
fnmadd.s f13, f9, f11, f5, dyn # perform operation
fnmadd.s f13, f9, f11, f5, rdn # perform operation
fnmadd.s f13, f9, f11, f5, rmm # perform operation
fnmadd.s f13, f9, f11, f5, rne # perform operation
fnmadd.s f13, f9, f11, f5, rtz # perform operation
fnmadd.s f13, f9, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x6, 0x4a8a565b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x86188045 # load x3 with value 0x86188045
sw x3, 0(x2) # store 0x86188045 in memory
flw f8, 0(x2) # load 0x86188045 from memory into f8
fnmadd.s f6, f14, f21, f8, dyn # perform operation
fnmadd.s f6, f14, f21, f8, rdn # perform operation
fnmadd.s f6, f14, f21, f8, rmm # perform operation
fnmadd.s f6, f14, f21, f8, rne # perform operation
fnmadd.s f6, f14, f21, f8, rtz # perform operation
fnmadd.s f6, f14, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f14, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x31, 0x4305986a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x5246d7b8 # load x3 with value 0x5246d7b8
sw x3, 0(x2) # store 0x5246d7b8 in memory
flw f13, 0(x2) # load 0x5246d7b8 from memory into f13
fnmadd.s f31, f15, f7, f13, dyn # perform operation
fnmadd.s f31, f15, f7, f13, rdn # perform operation
fnmadd.s f31, f15, f7, f13, rmm # perform operation
fnmadd.s f31, f15, f7, f13, rne # perform operation
fnmadd.s f31, f15, f7, f13, rtz # perform operation
fnmadd.s f31, f15, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f15, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x3, 0x8234ee8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0xfd35bd5a # load x3 with value 0xfd35bd5a
sw x3, 0(x2) # store 0xfd35bd5a in memory
flw f4, 0(x2) # load 0xfd35bd5a from memory into f4
fnmadd.s f3, f11, f10, f4, dyn # perform operation
fnmadd.s f3, f11, f10, f4, rdn # perform operation
fnmadd.s f3, f11, f10, f4, rmm # perform operation
fnmadd.s f3, f11, f10, f4, rne # perform operation
fnmadd.s f3, f11, f10, f4, rtz # perform operation
fnmadd.s f3, f11, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f11, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f11, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f11, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f11, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f11, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x22, 0x057c1e56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xecae1a1a # load x3 with value 0xecae1a1a
sw x3, 0(x2) # store 0xecae1a1a in memory
flw f4, 0(x2) # load 0xecae1a1a from memory into f4
fnmadd.s f22, f12, f2, f4, dyn # perform operation
fnmadd.s f22, f12, f2, f4, rdn # perform operation
fnmadd.s f22, f12, f2, f4, rmm # perform operation
fnmadd.s f22, f12, f2, f4, rne # perform operation
fnmadd.s f22, f12, f2, f4, rtz # perform operation
fnmadd.s f22, f12, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f12, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f12, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f12, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f12, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f12, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x18, 0xc8786391 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xac2d30bc # load x3 with value 0xac2d30bc
sw x3, 0(x2) # store 0xac2d30bc in memory
flw f4, 0(x2) # load 0xac2d30bc from memory into f4
fnmadd.s f18, f11, f28, f4, dyn # perform operation
fnmadd.s f18, f11, f28, f4, rdn # perform operation
fnmadd.s f18, f11, f28, f4, rmm # perform operation
fnmadd.s f18, f11, f28, f4, rne # perform operation
fnmadd.s f18, f11, f28, f4, rtz # perform operation
fnmadd.s f18, f11, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x24, 0x4ac2c25f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x734d9034 # load x3 with value 0x734d9034
sw x3, 0(x2) # store 0x734d9034 in memory
flw f5, 0(x2) # load 0x734d9034 from memory into f5
fnmadd.s f24, f30, f11, f5, dyn # perform operation
fnmadd.s f24, f30, f11, f5, rdn # perform operation
fnmadd.s f24, f30, f11, f5, rmm # perform operation
fnmadd.s f24, f30, f11, f5, rne # perform operation
fnmadd.s f24, f30, f11, f5, rtz # perform operation
fnmadd.s f24, f30, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x3, 0x31e6f33d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xf6dc741e # load x3 with value 0xf6dc741e
sw x3, 0(x2) # store 0xf6dc741e in memory
flw f26, 0(x2) # load 0xf6dc741e from memory into f26
fnmadd.s f3, f31, f28, f26, dyn # perform operation
fnmadd.s f3, f31, f28, f26, rdn # perform operation
fnmadd.s f3, f31, f28, f26, rmm # perform operation
fnmadd.s f3, f31, f28, f26, rne # perform operation
fnmadd.s f3, f31, f28, f26, rtz # perform operation
fnmadd.s f3, f31, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f28, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x19, 0x57ca844a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0xbc49d59a # load x3 with value 0xbc49d59a
sw x3, 0(x2) # store 0xbc49d59a in memory
flw f3, 0(x2) # load 0xbc49d59a from memory into f3
fnmadd.s f19, f5, f9, f3, dyn # perform operation
fnmadd.s f19, f5, f9, f3, rdn # perform operation
fnmadd.s f19, f5, f9, f3, rmm # perform operation
fnmadd.s f19, f5, f9, f3, rne # perform operation
fnmadd.s f19, f5, f9, f3, rtz # perform operation
fnmadd.s f19, f5, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x10, 0xc17fbdbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x6b7c3711 # load x3 with value 0x6b7c3711
sw x3, 0(x2) # store 0x6b7c3711 in memory
flw f25, 0(x2) # load 0x6b7c3711 from memory into f25
fnmadd.s f10, f29, f15, f25, dyn # perform operation
fnmadd.s f10, f29, f15, f25, rdn # perform operation
fnmadd.s f10, f29, f15, f25, rmm # perform operation
fnmadd.s f10, f29, f15, f25, rne # perform operation
fnmadd.s f10, f29, f15, f25, rtz # perform operation
fnmadd.s f10, f29, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f29, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x18, 0xc349c7e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0xc42fcd58 # load x3 with value 0xc42fcd58
sw x3, 0(x2) # store 0xc42fcd58 in memory
flw f6, 0(x2) # load 0xc42fcd58 from memory into f6
fnmadd.s f18, f23, f2, f6, dyn # perform operation
fnmadd.s f18, f23, f2, f6, rdn # perform operation
fnmadd.s f18, f23, f2, f6, rmm # perform operation
fnmadd.s f18, f23, f2, f6, rne # perform operation
fnmadd.s f18, f23, f2, f6, rtz # perform operation
fnmadd.s f18, f23, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f23, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f23, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f23, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f23, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f23, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x15, 0x94bc2ad7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0xb6660377 # load x3 with value 0xb6660377
sw x3, 0(x2) # store 0xb6660377 in memory
flw f25, 0(x2) # load 0xb6660377 from memory into f25
fnmadd.s f15, f11, f31, f25, dyn # perform operation
fnmadd.s f15, f11, f31, f25, rdn # perform operation
fnmadd.s f15, f11, f31, f25, rmm # perform operation
fnmadd.s f15, f11, f31, f25, rne # perform operation
fnmadd.s f15, f11, f31, f25, rtz # perform operation
fnmadd.s f15, f11, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x22, 0x2e681a0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xc205e2bd # load x3 with value 0xc205e2bd
sw x3, 0(x2) # store 0xc205e2bd in memory
flw f15, 0(x2) # load 0xc205e2bd from memory into f15
fnmadd.s f22, f14, f1, f15, dyn # perform operation
fnmadd.s f22, f14, f1, f15, rdn # perform operation
fnmadd.s f22, f14, f1, f15, rmm # perform operation
fnmadd.s f22, f14, f1, f15, rne # perform operation
fnmadd.s f22, f14, f1, f15, rtz # perform operation
fnmadd.s f22, f14, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f14, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x26, 0xaa931784 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x41ce8a49 # load x3 with value 0x41ce8a49
sw x3, 0(x2) # store 0x41ce8a49 in memory
flw f27, 0(x2) # load 0x41ce8a49 from memory into f27
fnmadd.s f26, f2, f9, f27, dyn # perform operation
fnmadd.s f26, f2, f9, f27, rdn # perform operation
fnmadd.s f26, f2, f9, f27, rmm # perform operation
fnmadd.s f26, f2, f9, f27, rne # perform operation
fnmadd.s f26, f2, f9, f27, rtz # perform operation
fnmadd.s f26, f2, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f2, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f2, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f2, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f2, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f2, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x20, 0x030fb679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xa18b0f74 # load x3 with value 0xa18b0f74
sw x3, 0(x2) # store 0xa18b0f74 in memory
flw f12, 0(x2) # load 0xa18b0f74 from memory into f12
fnmadd.s f20, f10, f25, f12, dyn # perform operation
fnmadd.s f20, f10, f25, f12, rdn # perform operation
fnmadd.s f20, f10, f25, f12, rmm # perform operation
fnmadd.s f20, f10, f25, f12, rne # perform operation
fnmadd.s f20, f10, f25, f12, rtz # perform operation
fnmadd.s f20, f10, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f10, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x27, 0xdf97fac7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0xa5744177 # load x3 with value 0xa5744177
sw x3, 0(x2) # store 0xa5744177 in memory
flw f17, 0(x2) # load 0xa5744177 from memory into f17
fnmadd.s f27, f19, f6, f17, dyn # perform operation
fnmadd.s f27, f19, f6, f17, rdn # perform operation
fnmadd.s f27, f19, f6, f17, rmm # perform operation
fnmadd.s f27, f19, f6, f17, rne # perform operation
fnmadd.s f27, f19, f6, f17, rtz # perform operation
fnmadd.s f27, f19, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x30, 0x89b10ee1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0xb53fc81b # load x3 with value 0xb53fc81b
sw x3, 0(x2) # store 0xb53fc81b in memory
flw f8, 0(x2) # load 0xb53fc81b from memory into f8
fnmadd.s f30, f16, f5, f8, dyn # perform operation
fnmadd.s f30, f16, f5, f8, rdn # perform operation
fnmadd.s f30, f16, f5, f8, rmm # perform operation
fnmadd.s f30, f16, f5, f8, rne # perform operation
fnmadd.s f30, f16, f5, f8, rtz # perform operation
fnmadd.s f30, f16, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f16, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x5, 0xdf3092cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x91b90737 # load x3 with value 0x91b90737
sw x3, 0(x2) # store 0x91b90737 in memory
flw f23, 0(x2) # load 0x91b90737 from memory into f23
fnmadd.s f5, f20, f25, f23, dyn # perform operation
fnmadd.s f5, f20, f25, f23, rdn # perform operation
fnmadd.s f5, f20, f25, f23, rmm # perform operation
fnmadd.s f5, f20, f25, f23, rne # perform operation
fnmadd.s f5, f20, f25, f23, rtz # perform operation
fnmadd.s f5, f20, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f20, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f20, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f20, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f20, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f20, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x2, 0xf2b9f128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x457a8068 # load x3 with value 0x457a8068
sw x3, 0(x2) # store 0x457a8068 in memory
flw f1, 0(x2) # load 0x457a8068 from memory into f1
fnmadd.s f2, f28, f7, f1, dyn # perform operation
fnmadd.s f2, f28, f7, f1, rdn # perform operation
fnmadd.s f2, f28, f7, f1, rmm # perform operation
fnmadd.s f2, f28, f7, f1, rne # perform operation
fnmadd.s f2, f28, f7, f1, rtz # perform operation
fnmadd.s f2, f28, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x18, 0xb4839916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0xb02e9fae # load x3 with value 0xb02e9fae
sw x3, 0(x2) # store 0xb02e9fae in memory
flw f25, 0(x2) # load 0xb02e9fae from memory into f25
fnmadd.s f18, f24, f19, f25, dyn # perform operation
fnmadd.s f18, f24, f19, f25, rdn # perform operation
fnmadd.s f18, f24, f19, f25, rmm # perform operation
fnmadd.s f18, f24, f19, f25, rne # perform operation
fnmadd.s f18, f24, f19, f25, rtz # perform operation
fnmadd.s f18, f24, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x10, 0xaa543ad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x2e074456 # load x3 with value 0x2e074456
sw x3, 0(x2) # store 0x2e074456 in memory
flw f6, 0(x2) # load 0x2e074456 from memory into f6
fnmadd.s f10, f2, f11, f6, dyn # perform operation
fnmadd.s f10, f2, f11, f6, rdn # perform operation
fnmadd.s f10, f2, f11, f6, rmm # perform operation
fnmadd.s f10, f2, f11, f6, rne # perform operation
fnmadd.s f10, f2, f11, f6, rtz # perform operation
fnmadd.s f10, f2, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f2, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x29, 0x63dce694 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x9bfa51db # load x3 with value 0x9bfa51db
sw x3, 0(x2) # store 0x9bfa51db in memory
flw f3, 0(x2) # load 0x9bfa51db from memory into f3
fnmadd.s f29, f26, f21, f3, dyn # perform operation
fnmadd.s f29, f26, f21, f3, rdn # perform operation
fnmadd.s f29, f26, f21, f3, rmm # perform operation
fnmadd.s f29, f26, f21, f3, rne # perform operation
fnmadd.s f29, f26, f21, f3, rtz # perform operation
fnmadd.s f29, f26, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x9, 0xebb6314b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0xa297dc12 # load x3 with value 0xa297dc12
sw x3, 0(x2) # store 0xa297dc12 in memory
flw f2, 0(x2) # load 0xa297dc12 from memory into f2
fnmadd.s f9, f12, f18, f2, dyn # perform operation
fnmadd.s f9, f12, f18, f2, rdn # perform operation
fnmadd.s f9, f12, f18, f2, rmm # perform operation
fnmadd.s f9, f12, f18, f2, rne # perform operation
fnmadd.s f9, f12, f18, f2, rtz # perform operation
fnmadd.s f9, f12, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f12, f18, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x3, 0xded038d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x3a903323 # load x3 with value 0x3a903323
sw x3, 0(x2) # store 0x3a903323 in memory
flw f20, 0(x2) # load 0x3a903323 from memory into f20
fnmadd.s f3, f11, f27, f20, dyn # perform operation
fnmadd.s f3, f11, f27, f20, rdn # perform operation
fnmadd.s f3, f11, f27, f20, rmm # perform operation
fnmadd.s f3, f11, f27, f20, rne # perform operation
fnmadd.s f3, f11, f27, f20, rtz # perform operation
fnmadd.s f3, f11, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f11, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x30, 0x0131eca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0x9131b1f7 # load x3 with value 0x9131b1f7
sw x3, 0(x2) # store 0x9131b1f7 in memory
flw f13, 0(x2) # load 0x9131b1f7 from memory into f13
fnmadd.s f30, f8, f29, f13, dyn # perform operation
fnmadd.s f30, f8, f29, f13, rdn # perform operation
fnmadd.s f30, f8, f29, f13, rmm # perform operation
fnmadd.s f30, f8, f29, f13, rne # perform operation
fnmadd.s f30, f8, f29, f13, rtz # perform operation
fnmadd.s f30, f8, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f8, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f8, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f8, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f8, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f8, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x17, 0x23f0e93c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0xe5eca894 # load x3 with value 0xe5eca894
sw x3, 0(x2) # store 0xe5eca894 in memory
flw f13, 0(x2) # load 0xe5eca894 from memory into f13
fnmadd.s f17, f11, f25, f13, dyn # perform operation
fnmadd.s f17, f11, f25, f13, rdn # perform operation
fnmadd.s f17, f11, f25, f13, rmm # perform operation
fnmadd.s f17, f11, f25, f13, rne # perform operation
fnmadd.s f17, f11, f25, f13, rtz # perform operation
fnmadd.s f17, f11, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x22, 0x0dbdca3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0xc50d1ead # load x3 with value 0xc50d1ead
sw x3, 0(x2) # store 0xc50d1ead in memory
flw f30, 0(x2) # load 0xc50d1ead from memory into f30
fnmadd.s f22, f11, f5, f30, dyn # perform operation
fnmadd.s f22, f11, f5, f30, rdn # perform operation
fnmadd.s f22, f11, f5, f30, rmm # perform operation
fnmadd.s f22, f11, f5, f30, rne # perform operation
fnmadd.s f22, f11, f5, f30, rtz # perform operation
fnmadd.s f22, f11, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f11, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x20, 0x18635f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x1c4c1cb6 # load x3 with value 0x1c4c1cb6
sw x3, 0(x2) # store 0x1c4c1cb6 in memory
flw f22, 0(x2) # load 0x1c4c1cb6 from memory into f22
fnmadd.s f20, f27, f21, f22, dyn # perform operation
fnmadd.s f20, f27, f21, f22, rdn # perform operation
fnmadd.s f20, f27, f21, f22, rmm # perform operation
fnmadd.s f20, f27, f21, f22, rne # perform operation
fnmadd.s f20, f27, f21, f22, rtz # perform operation
fnmadd.s f20, f27, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x1, 0x66706847 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0xef173a43 # load x3 with value 0xef173a43
sw x3, 0(x2) # store 0xef173a43 in memory
flw f28, 0(x2) # load 0xef173a43 from memory into f28
fnmadd.s f1, f27, f25, f28, dyn # perform operation
fnmadd.s f1, f27, f25, f28, rdn # perform operation
fnmadd.s f1, f27, f25, f28, rmm # perform operation
fnmadd.s f1, f27, f25, f28, rne # perform operation
fnmadd.s f1, f27, f25, f28, rtz # perform operation
fnmadd.s f1, f27, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x5, 0xeb632c64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x7dccac66 # load x3 with value 0x7dccac66
sw x3, 0(x2) # store 0x7dccac66 in memory
flw f14, 0(x2) # load 0x7dccac66 from memory into f14
fnmadd.s f5, f23, f15, f14, dyn # perform operation
fnmadd.s f5, f23, f15, f14, rdn # perform operation
fnmadd.s f5, f23, f15, f14, rmm # perform operation
fnmadd.s f5, f23, f15, f14, rne # perform operation
fnmadd.s f5, f23, f15, f14, rtz # perform operation
fnmadd.s f5, f23, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f23, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x5, 0x989ce846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x97833fc1 # load x3 with value 0x97833fc1
sw x3, 0(x2) # store 0x97833fc1 in memory
flw f30, 0(x2) # load 0x97833fc1 from memory into f30
fnmadd.s f5, f16, f19, f30, dyn # perform operation
fnmadd.s f5, f16, f19, f30, rdn # perform operation
fnmadd.s f5, f16, f19, f30, rmm # perform operation
fnmadd.s f5, f16, f19, f30, rne # perform operation
fnmadd.s f5, f16, f19, f30, rtz # perform operation
fnmadd.s f5, f16, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f16, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f16, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f16, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f16, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f16, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x3, 0x58c031d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x03cf23d1 # load x3 with value 0x03cf23d1
sw x3, 0(x2) # store 0x03cf23d1 in memory
flw f28, 0(x2) # load 0x03cf23d1 from memory into f28
fnmadd.s f3, f9, f11, f28, dyn # perform operation
fnmadd.s f3, f9, f11, f28, rdn # perform operation
fnmadd.s f3, f9, f11, f28, rmm # perform operation
fnmadd.s f3, f9, f11, f28, rne # perform operation
fnmadd.s f3, f9, f11, f28, rtz # perform operation
fnmadd.s f3, f9, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x3, 0x3086d444 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xf06ad08b # load x3 with value 0xf06ad08b
sw x3, 0(x2) # store 0xf06ad08b in memory
flw f1, 0(x2) # load 0xf06ad08b from memory into f1
fnmadd.s f3, f23, f8, f1, dyn # perform operation
fnmadd.s f3, f23, f8, f1, rdn # perform operation
fnmadd.s f3, f23, f8, f1, rmm # perform operation
fnmadd.s f3, f23, f8, f1, rne # perform operation
fnmadd.s f3, f23, f8, f1, rtz # perform operation
fnmadd.s f3, f23, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x1, 0xe8a0f98f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0xbc004d9c # load x3 with value 0xbc004d9c
sw x3, 0(x2) # store 0xbc004d9c in memory
flw f16, 0(x2) # load 0xbc004d9c from memory into f16
fnmadd.s f1, f20, f8, f16, dyn # perform operation
fnmadd.s f1, f20, f8, f16, rdn # perform operation
fnmadd.s f1, f20, f8, f16, rmm # perform operation
fnmadd.s f1, f20, f8, f16, rne # perform operation
fnmadd.s f1, f20, f8, f16, rtz # perform operation
fnmadd.s f1, f20, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f20, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x15, 0x296dfc47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x494f456c # load x3 with value 0x494f456c
sw x3, 0(x2) # store 0x494f456c in memory
flw f14, 0(x2) # load 0x494f456c from memory into f14
fnmadd.s f15, f11, f13, f14, dyn # perform operation
fnmadd.s f15, f11, f13, f14, rdn # perform operation
fnmadd.s f15, f11, f13, f14, rmm # perform operation
fnmadd.s f15, f11, f13, f14, rne # perform operation
fnmadd.s f15, f11, f13, f14, rtz # perform operation
fnmadd.s f15, f11, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x3, 0xf0a96a7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x04c18579 # load x3 with value 0x04c18579
sw x3, 0(x2) # store 0x04c18579 in memory
flw f1, 0(x2) # load 0x04c18579 from memory into f1
fnmadd.s f3, f30, f11, f1, dyn # perform operation
fnmadd.s f3, f30, f11, f1, rdn # perform operation
fnmadd.s f3, f30, f11, f1, rmm # perform operation
fnmadd.s f3, f30, f11, f1, rne # perform operation
fnmadd.s f3, f30, f11, f1, rtz # perform operation
fnmadd.s f3, f30, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x6, 0x66d75f4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x61a019c1 # load x3 with value 0x61a019c1
sw x3, 0(x2) # store 0x61a019c1 in memory
flw f8, 0(x2) # load 0x61a019c1 from memory into f8
fnmadd.s f6, f23, f12, f8, dyn # perform operation
fnmadd.s f6, f23, f12, f8, rdn # perform operation
fnmadd.s f6, f23, f12, f8, rmm # perform operation
fnmadd.s f6, f23, f12, f8, rne # perform operation
fnmadd.s f6, f23, f12, f8, rtz # perform operation
fnmadd.s f6, f23, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x16, 0x9639e666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x5558ef8f # load x3 with value 0x5558ef8f
sw x3, 0(x2) # store 0x5558ef8f in memory
flw f17, 0(x2) # load 0x5558ef8f from memory into f17
fnmadd.s f16, f15, f18, f17, dyn # perform operation
fnmadd.s f16, f15, f18, f17, rdn # perform operation
fnmadd.s f16, f15, f18, f17, rmm # perform operation
fnmadd.s f16, f15, f18, f17, rne # perform operation
fnmadd.s f16, f15, f18, f17, rtz # perform operation
fnmadd.s f16, f15, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x29, 0x353a373b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x0f92f689 # load x3 with value 0x0f92f689
sw x3, 0(x2) # store 0x0f92f689 in memory
flw f19, 0(x2) # load 0x0f92f689 from memory into f19
fnmadd.s f29, f26, f28, f19, dyn # perform operation
fnmadd.s f29, f26, f28, f19, rdn # perform operation
fnmadd.s f29, f26, f28, f19, rmm # perform operation
fnmadd.s f29, f26, f28, f19, rne # perform operation
fnmadd.s f29, f26, f28, f19, rtz # perform operation
fnmadd.s f29, f26, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x21, 0xf502f29a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x05c249a3 # load x3 with value 0x05c249a3
sw x3, 0(x2) # store 0x05c249a3 in memory
flw f6, 0(x2) # load 0x05c249a3 from memory into f6
fnmadd.s f21, f3, f27, f6, dyn # perform operation
fnmadd.s f21, f3, f27, f6, rdn # perform operation
fnmadd.s f21, f3, f27, f6, rmm # perform operation
fnmadd.s f21, f3, f27, f6, rne # perform operation
fnmadd.s f21, f3, f27, f6, rtz # perform operation
fnmadd.s f21, f3, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x24, 0x6d51e7e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x829a2ad1 # load x3 with value 0x829a2ad1
sw x3, 0(x2) # store 0x829a2ad1 in memory
flw f31, 0(x2) # load 0x829a2ad1 from memory into f31
fnmadd.s f24, f29, f11, f31, dyn # perform operation
fnmadd.s f24, f29, f11, f31, rdn # perform operation
fnmadd.s f24, f29, f11, f31, rmm # perform operation
fnmadd.s f24, f29, f11, f31, rne # perform operation
fnmadd.s f24, f29, f11, f31, rtz # perform operation
fnmadd.s f24, f29, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f29, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f29, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x27, 0x63f367a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x344478cc # load x3 with value 0x344478cc
sw x3, 0(x2) # store 0x344478cc in memory
flw f23, 0(x2) # load 0x344478cc from memory into f23
fnmadd.s f27, f12, f26, f23, dyn # perform operation
fnmadd.s f27, f12, f26, f23, rdn # perform operation
fnmadd.s f27, f12, f26, f23, rmm # perform operation
fnmadd.s f27, f12, f26, f23, rne # perform operation
fnmadd.s f27, f12, f26, f23, rtz # perform operation
fnmadd.s f27, f12, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x27, 0x967dcb16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0xf782af90 # load x3 with value 0xf782af90
sw x3, 0(x2) # store 0xf782af90 in memory
flw f5, 0(x2) # load 0xf782af90 from memory into f5
fnmadd.s f27, f19, f28, f5, dyn # perform operation
fnmadd.s f27, f19, f28, f5, rdn # perform operation
fnmadd.s f27, f19, f28, f5, rmm # perform operation
fnmadd.s f27, f19, f28, f5, rne # perform operation
fnmadd.s f27, f19, f28, f5, rtz # perform operation
fnmadd.s f27, f19, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x17, 0xabde6e58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x2a5f4df4 # load x3 with value 0x2a5f4df4
sw x3, 0(x2) # store 0x2a5f4df4 in memory
flw f6, 0(x2) # load 0x2a5f4df4 from memory into f6
fnmadd.s f17, f23, f7, f6, dyn # perform operation
fnmadd.s f17, f23, f7, f6, rdn # perform operation
fnmadd.s f17, f23, f7, f6, rmm # perform operation
fnmadd.s f17, f23, f7, f6, rne # perform operation
fnmadd.s f17, f23, f7, f6, rtz # perform operation
fnmadd.s f17, f23, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x6, 0x829b8c50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0xe7c0a841 # load x3 with value 0xe7c0a841
sw x3, 0(x2) # store 0xe7c0a841 in memory
flw f19, 0(x2) # load 0xe7c0a841 from memory into f19
fnmadd.s f6, f11, f7, f19, dyn # perform operation
fnmadd.s f6, f11, f7, f19, rdn # perform operation
fnmadd.s f6, f11, f7, f19, rmm # perform operation
fnmadd.s f6, f11, f7, f19, rne # perform operation
fnmadd.s f6, f11, f7, f19, rtz # perform operation
fnmadd.s f6, f11, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f11, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x10, 0x9bfe8d2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x18f37bb4 # load x3 with value 0x18f37bb4
sw x3, 0(x2) # store 0x18f37bb4 in memory
flw f16, 0(x2) # load 0x18f37bb4 from memory into f16
fnmadd.s f10, f29, f31, f16, dyn # perform operation
fnmadd.s f10, f29, f31, f16, rdn # perform operation
fnmadd.s f10, f29, f31, f16, rmm # perform operation
fnmadd.s f10, f29, f31, f16, rne # perform operation
fnmadd.s f10, f29, f31, f16, rtz # perform operation
fnmadd.s f10, f29, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f29, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f29, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f29, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f29, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f29, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x2, 0xf345217c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x7f4b0e79 # load x3 with value 0x7f4b0e79
sw x3, 0(x2) # store 0x7f4b0e79 in memory
flw f30, 0(x2) # load 0x7f4b0e79 from memory into f30
fnmadd.s f2, f31, f6, f30, dyn # perform operation
fnmadd.s f2, f31, f6, f30, rdn # perform operation
fnmadd.s f2, f31, f6, f30, rmm # perform operation
fnmadd.s f2, f31, f6, f30, rne # perform operation
fnmadd.s f2, f31, f6, f30, rtz # perform operation
fnmadd.s f2, f31, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f31, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f31, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f31, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f31, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f31, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x20, 0x7d524ef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x1f5649a2 # load x3 with value 0x1f5649a2
sw x3, 0(x2) # store 0x1f5649a2 in memory
flw f21, 0(x2) # load 0x1f5649a2 from memory into f21
fnmadd.s f20, f10, f13, f21, dyn # perform operation
fnmadd.s f20, f10, f13, f21, rdn # perform operation
fnmadd.s f20, f10, f13, f21, rmm # perform operation
fnmadd.s f20, f10, f13, f21, rne # perform operation
fnmadd.s f20, f10, f13, f21, rtz # perform operation
fnmadd.s f20, f10, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f10, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x9, 0xe9676d32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x4fbec55e # load x3 with value 0x4fbec55e
sw x3, 0(x2) # store 0x4fbec55e in memory
flw f11, 0(x2) # load 0x4fbec55e from memory into f11
fnmadd.s f9, f3, f12, f11, dyn # perform operation
fnmadd.s f9, f3, f12, f11, rdn # perform operation
fnmadd.s f9, f3, f12, f11, rmm # perform operation
fnmadd.s f9, f3, f12, f11, rne # perform operation
fnmadd.s f9, f3, f12, f11, rtz # perform operation
fnmadd.s f9, f3, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x15, 0x4245952f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xd926f852 # load x3 with value 0xd926f852
sw x3, 0(x2) # store 0xd926f852 in memory
flw f20, 0(x2) # load 0xd926f852 from memory into f20
fnmadd.s f15, f2, f6, f20, dyn # perform operation
fnmadd.s f15, f2, f6, f20, rdn # perform operation
fnmadd.s f15, f2, f6, f20, rmm # perform operation
fnmadd.s f15, f2, f6, f20, rne # perform operation
fnmadd.s f15, f2, f6, f20, rtz # perform operation
fnmadd.s f15, f2, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x13, 0x0d1df042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0xe376c65d # load x3 with value 0xe376c65d
sw x3, 0(x2) # store 0xe376c65d in memory
flw f24, 0(x2) # load 0xe376c65d from memory into f24
fnmadd.s f13, f18, f30, f24, dyn # perform operation
fnmadd.s f13, f18, f30, f24, rdn # perform operation
fnmadd.s f13, f18, f30, f24, rmm # perform operation
fnmadd.s f13, f18, f30, f24, rne # perform operation
fnmadd.s f13, f18, f30, f24, rtz # perform operation
fnmadd.s f13, f18, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x6, 0xa059c005 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x04276e94 # load x3 with value 0x04276e94
sw x3, 0(x2) # store 0x04276e94 in memory
flw f13, 0(x2) # load 0x04276e94 from memory into f13
fnmadd.s f6, f8, f19, f13, dyn # perform operation
fnmadd.s f6, f8, f19, f13, rdn # perform operation
fnmadd.s f6, f8, f19, f13, rmm # perform operation
fnmadd.s f6, f8, f19, f13, rne # perform operation
fnmadd.s f6, f8, f19, f13, rtz # perform operation
fnmadd.s f6, f8, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f8, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x5, 0xa2a98dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0xf9c6dfa2 # load x3 with value 0xf9c6dfa2
sw x3, 0(x2) # store 0xf9c6dfa2 in memory
flw f23, 0(x2) # load 0xf9c6dfa2 from memory into f23
fnmadd.s f5, f9, f19, f23, dyn # perform operation
fnmadd.s f5, f9, f19, f23, rdn # perform operation
fnmadd.s f5, f9, f19, f23, rmm # perform operation
fnmadd.s f5, f9, f19, f23, rne # perform operation
fnmadd.s f5, f9, f19, f23, rtz # perform operation
fnmadd.s f5, f9, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x24, 0xada3497b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x5bfb4a34 # load x3 with value 0x5bfb4a34
sw x3, 0(x2) # store 0x5bfb4a34 in memory
flw f20, 0(x2) # load 0x5bfb4a34 from memory into f20
fnmadd.s f24, f9, f31, f20, dyn # perform operation
fnmadd.s f24, f9, f31, f20, rdn # perform operation
fnmadd.s f24, f9, f31, f20, rmm # perform operation
fnmadd.s f24, f9, f31, f20, rne # perform operation
fnmadd.s f24, f9, f31, f20, rtz # perform operation
fnmadd.s f24, f9, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x6, 0x3f17aed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xc88f6a62 # load x3 with value 0xc88f6a62
sw x3, 0(x2) # store 0xc88f6a62 in memory
flw f21, 0(x2) # load 0xc88f6a62 from memory into f21
fnmadd.s f6, f27, f10, f21, dyn # perform operation
fnmadd.s f6, f27, f10, f21, rdn # perform operation
fnmadd.s f6, f27, f10, f21, rmm # perform operation
fnmadd.s f6, f27, f10, f21, rne # perform operation
fnmadd.s f6, f27, f10, f21, rtz # perform operation
fnmadd.s f6, f27, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f27, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x28, 0xe326a4d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x9bdac322 # load x3 with value 0x9bdac322
sw x3, 0(x2) # store 0x9bdac322 in memory
flw f11, 0(x2) # load 0x9bdac322 from memory into f11
fnmadd.s f28, f15, f5, f11, dyn # perform operation
fnmadd.s f28, f15, f5, f11, rdn # perform operation
fnmadd.s f28, f15, f5, f11, rmm # perform operation
fnmadd.s f28, f15, f5, f11, rne # perform operation
fnmadd.s f28, f15, f5, f11, rtz # perform operation
fnmadd.s f28, f15, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f15, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x12, 0xfb4d99d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x4497449c # load x3 with value 0x4497449c
sw x3, 0(x2) # store 0x4497449c in memory
flw f5, 0(x2) # load 0x4497449c from memory into f5
fnmadd.s f12, f3, f26, f5, dyn # perform operation
fnmadd.s f12, f3, f26, f5, rdn # perform operation
fnmadd.s f12, f3, f26, f5, rmm # perform operation
fnmadd.s f12, f3, f26, f5, rne # perform operation
fnmadd.s f12, f3, f26, f5, rtz # perform operation
fnmadd.s f12, f3, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x5, 0x9bf8539b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x9274be28 # load x3 with value 0x9274be28
sw x3, 0(x2) # store 0x9274be28 in memory
flw f26, 0(x2) # load 0x9274be28 from memory into f26
fnmadd.s f5, f29, f18, f26, dyn # perform operation
fnmadd.s f5, f29, f18, f26, rdn # perform operation
fnmadd.s f5, f29, f18, f26, rmm # perform operation
fnmadd.s f5, f29, f18, f26, rne # perform operation
fnmadd.s f5, f29, f18, f26, rtz # perform operation
fnmadd.s f5, f29, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f29, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x16, 0x4bda95b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0xf8d6a23a # load x3 with value 0xf8d6a23a
sw x3, 0(x2) # store 0xf8d6a23a in memory
flw f14, 0(x2) # load 0xf8d6a23a from memory into f14
fnmadd.s f16, f17, f12, f14, dyn # perform operation
fnmadd.s f16, f17, f12, f14, rdn # perform operation
fnmadd.s f16, f17, f12, f14, rmm # perform operation
fnmadd.s f16, f17, f12, f14, rne # perform operation
fnmadd.s f16, f17, f12, f14, rtz # perform operation
fnmadd.s f16, f17, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x12, 0x3132dc09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x3b155ebc # load x3 with value 0x3b155ebc
sw x3, 0(x2) # store 0x3b155ebc in memory
flw f13, 0(x2) # load 0x3b155ebc from memory into f13
fnmadd.s f12, f2, f31, f13, dyn # perform operation
fnmadd.s f12, f2, f31, f13, rdn # perform operation
fnmadd.s f12, f2, f31, f13, rmm # perform operation
fnmadd.s f12, f2, f31, f13, rne # perform operation
fnmadd.s f12, f2, f31, f13, rtz # perform operation
fnmadd.s f12, f2, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x1, 0x5f4cef6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x75519c91 # load x3 with value 0x75519c91
sw x3, 0(x2) # store 0x75519c91 in memory
flw f3, 0(x2) # load 0x75519c91 from memory into f3
fnmadd.s f1, f25, f31, f3, dyn # perform operation
fnmadd.s f1, f25, f31, f3, rdn # perform operation
fnmadd.s f1, f25, f31, f3, rmm # perform operation
fnmadd.s f1, f25, f31, f3, rne # perform operation
fnmadd.s f1, f25, f31, f3, rtz # perform operation
fnmadd.s f1, f25, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f25, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f25, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f25, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f25, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f25, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x13, 0xf6a2c1e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x0aad24de # load x3 with value 0x0aad24de
sw x3, 0(x2) # store 0x0aad24de in memory
flw f28, 0(x2) # load 0x0aad24de from memory into f28
fnmadd.s f13, f30, f12, f28, dyn # perform operation
fnmadd.s f13, f30, f12, f28, rdn # perform operation
fnmadd.s f13, f30, f12, f28, rmm # perform operation
fnmadd.s f13, f30, f12, f28, rne # perform operation
fnmadd.s f13, f30, f12, f28, rtz # perform operation
fnmadd.s f13, f30, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f30, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f30, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f30, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f30, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f30, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x16, 0xecc8b378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x0df18a75 # load x3 with value 0x0df18a75
sw x3, 0(x2) # store 0x0df18a75 in memory
flw f14, 0(x2) # load 0x0df18a75 from memory into f14
fnmadd.s f16, f7, f26, f14, dyn # perform operation
fnmadd.s f16, f7, f26, f14, rdn # perform operation
fnmadd.s f16, f7, f26, f14, rmm # perform operation
fnmadd.s f16, f7, f26, f14, rne # perform operation
fnmadd.s f16, f7, f26, f14, rtz # perform operation
fnmadd.s f16, f7, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f7, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x13, 0xe7b25293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xb41c193d # load x3 with value 0xb41c193d
sw x3, 0(x2) # store 0xb41c193d in memory
flw f22, 0(x2) # load 0xb41c193d from memory into f22
fnmadd.s f13, f1, f7, f22, dyn # perform operation
fnmadd.s f13, f1, f7, f22, rdn # perform operation
fnmadd.s f13, f1, f7, f22, rmm # perform operation
fnmadd.s f13, f1, f7, f22, rne # perform operation
fnmadd.s f13, f1, f7, f22, rtz # perform operation
fnmadd.s f13, f1, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f1, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f1, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x4, 0xecbff39d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x704f9940 # load x3 with value 0x704f9940
sw x3, 0(x2) # store 0x704f9940 in memory
flw f15, 0(x2) # load 0x704f9940 from memory into f15
fnmadd.s f4, f9, f8, f15, dyn # perform operation
fnmadd.s f4, f9, f8, f15, rdn # perform operation
fnmadd.s f4, f9, f8, f15, rmm # perform operation
fnmadd.s f4, f9, f8, f15, rne # perform operation
fnmadd.s f4, f9, f8, f15, rtz # perform operation
fnmadd.s f4, f9, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f9, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f9, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x14, 0xa29abecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0xd42a1ce0 # load x3 with value 0xd42a1ce0
sw x3, 0(x2) # store 0xd42a1ce0 in memory
flw f16, 0(x2) # load 0xd42a1ce0 from memory into f16
fnmadd.s f14, f31, f2, f16, dyn # perform operation
fnmadd.s f14, f31, f2, f16, rdn # perform operation
fnmadd.s f14, f31, f2, f16, rmm # perform operation
fnmadd.s f14, f31, f2, f16, rne # perform operation
fnmadd.s f14, f31, f2, f16, rtz # perform operation
fnmadd.s f14, f31, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f31, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x24, 0xcd47808f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x3f978502 # load x3 with value 0x3f978502
sw x3, 0(x2) # store 0x3f978502 in memory
flw f16, 0(x2) # load 0x3f978502 from memory into f16
fnmadd.s f24, f21, f31, f16, dyn # perform operation
fnmadd.s f24, f21, f31, f16, rdn # perform operation
fnmadd.s f24, f21, f31, f16, rmm # perform operation
fnmadd.s f24, f21, f31, f16, rne # perform operation
fnmadd.s f24, f21, f31, f16, rtz # perform operation
fnmadd.s f24, f21, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f21, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x19, 0xb61f3e1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0xb81f0f0e # load x3 with value 0xb81f0f0e
sw x3, 0(x2) # store 0xb81f0f0e in memory
flw f4, 0(x2) # load 0xb81f0f0e from memory into f4
fnmadd.s f19, f29, f23, f4, dyn # perform operation
fnmadd.s f19, f29, f23, f4, rdn # perform operation
fnmadd.s f19, f29, f23, f4, rmm # perform operation
fnmadd.s f19, f29, f23, f4, rne # perform operation
fnmadd.s f19, f29, f23, f4, rtz # perform operation
fnmadd.s f19, f29, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f23, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x25, 0xc42bff14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x032ac786 # load x3 with value 0x032ac786
sw x3, 0(x2) # store 0x032ac786 in memory
flw f19, 0(x2) # load 0x032ac786 from memory into f19
fnmadd.s f25, f20, f6, f19, dyn # perform operation
fnmadd.s f25, f20, f6, f19, rdn # perform operation
fnmadd.s f25, f20, f6, f19, rmm # perform operation
fnmadd.s f25, f20, f6, f19, rne # perform operation
fnmadd.s f25, f20, f6, f19, rtz # perform operation
fnmadd.s f25, f20, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f20, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x19, 0x992e1e3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0xbcb67560 # load x3 with value 0xbcb67560
sw x3, 0(x2) # store 0xbcb67560 in memory
flw f31, 0(x2) # load 0xbcb67560 from memory into f31
fnmadd.s f19, f16, f15, f31, dyn # perform operation
fnmadd.s f19, f16, f15, f31, rdn # perform operation
fnmadd.s f19, f16, f15, f31, rmm # perform operation
fnmadd.s f19, f16, f15, f31, rne # perform operation
fnmadd.s f19, f16, f15, f31, rtz # perform operation
fnmadd.s f19, f16, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x11, 0x6265fb09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x370e2974 # load x3 with value 0x370e2974
sw x3, 0(x2) # store 0x370e2974 in memory
flw f6, 0(x2) # load 0x370e2974 from memory into f6
fnmadd.s f11, f24, f18, f6, dyn # perform operation
fnmadd.s f11, f24, f18, f6, rdn # perform operation
fnmadd.s f11, f24, f18, f6, rmm # perform operation
fnmadd.s f11, f24, f18, f6, rne # perform operation
fnmadd.s f11, f24, f18, f6, rtz # perform operation
fnmadd.s f11, f24, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f24, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f24, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f24, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f24, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f24, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x13, 0x1f76cac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x66096647 # load x3 with value 0x66096647
sw x3, 0(x2) # store 0x66096647 in memory
flw f19, 0(x2) # load 0x66096647 from memory into f19
fnmadd.s f13, f3, f4, f19, dyn # perform operation
fnmadd.s f13, f3, f4, f19, rdn # perform operation
fnmadd.s f13, f3, f4, f19, rmm # perform operation
fnmadd.s f13, f3, f4, f19, rne # perform operation
fnmadd.s f13, f3, f4, f19, rtz # perform operation
fnmadd.s f13, f3, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f3, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x19, 0xb39fb53d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x602be1a1 # load x3 with value 0x602be1a1
sw x3, 0(x2) # store 0x602be1a1 in memory
flw f30, 0(x2) # load 0x602be1a1 from memory into f30
fnmadd.s f19, f1, f15, f30, dyn # perform operation
fnmadd.s f19, f1, f15, f30, rdn # perform operation
fnmadd.s f19, f1, f15, f30, rmm # perform operation
fnmadd.s f19, f1, f15, f30, rne # perform operation
fnmadd.s f19, f1, f15, f30, rtz # perform operation
fnmadd.s f19, f1, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x9, 0x46a7bbe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0xa359f1b0 # load x3 with value 0xa359f1b0
sw x3, 0(x2) # store 0xa359f1b0 in memory
flw f19, 0(x2) # load 0xa359f1b0 from memory into f19
fnmadd.s f9, f17, f7, f19, dyn # perform operation
fnmadd.s f9, f17, f7, f19, rdn # perform operation
fnmadd.s f9, f17, f7, f19, rmm # perform operation
fnmadd.s f9, f17, f7, f19, rne # perform operation
fnmadd.s f9, f17, f7, f19, rtz # perform operation
fnmadd.s f9, f17, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f17, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x4, 0x45ac6d95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0xe5a9c333 # load x3 with value 0xe5a9c333
sw x3, 0(x2) # store 0xe5a9c333 in memory
flw f24, 0(x2) # load 0xe5a9c333 from memory into f24
fnmadd.s f4, f13, f1, f24, dyn # perform operation
fnmadd.s f4, f13, f1, f24, rdn # perform operation
fnmadd.s f4, f13, f1, f24, rmm # perform operation
fnmadd.s f4, f13, f1, f24, rne # perform operation
fnmadd.s f4, f13, f1, f24, rtz # perform operation
fnmadd.s f4, f13, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f13, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f13, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f13, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f13, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f13, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x30, 0xf7eca0ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x6b2b8858 # load x3 with value 0x6b2b8858
sw x3, 0(x2) # store 0x6b2b8858 in memory
flw f25, 0(x2) # load 0x6b2b8858 from memory into f25
fnmadd.s f30, f13, f7, f25, dyn # perform operation
fnmadd.s f30, f13, f7, f25, rdn # perform operation
fnmadd.s f30, f13, f7, f25, rmm # perform operation
fnmadd.s f30, f13, f7, f25, rne # perform operation
fnmadd.s f30, f13, f7, f25, rtz # perform operation
fnmadd.s f30, f13, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f13, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x19, 0xfc6f08c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x37285dcd # load x3 with value 0x37285dcd
sw x3, 0(x2) # store 0x37285dcd in memory
flw f28, 0(x2) # load 0x37285dcd from memory into f28
fnmadd.s f19, f7, f13, f28, dyn # perform operation
fnmadd.s f19, f7, f13, f28, rdn # perform operation
fnmadd.s f19, f7, f13, f28, rmm # perform operation
fnmadd.s f19, f7, f13, f28, rne # perform operation
fnmadd.s f19, f7, f13, f28, rtz # perform operation
fnmadd.s f19, f7, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f7, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x28, 0x390eff26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0xd63c534d # load x3 with value 0xd63c534d
sw x3, 0(x2) # store 0xd63c534d in memory
flw f25, 0(x2) # load 0xd63c534d from memory into f25
fnmadd.s f28, f21, f6, f25, dyn # perform operation
fnmadd.s f28, f21, f6, f25, rdn # perform operation
fnmadd.s f28, f21, f6, f25, rmm # perform operation
fnmadd.s f28, f21, f6, f25, rne # perform operation
fnmadd.s f28, f21, f6, f25, rtz # perform operation
fnmadd.s f28, f21, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x5, 0x5eb909b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x20323915 # load x3 with value 0x20323915
sw x3, 0(x2) # store 0x20323915 in memory
flw f17, 0(x2) # load 0x20323915 from memory into f17
fnmadd.s f5, f19, f11, f17, dyn # perform operation
fnmadd.s f5, f19, f11, f17, rdn # perform operation
fnmadd.s f5, f19, f11, f17, rmm # perform operation
fnmadd.s f5, f19, f11, f17, rne # perform operation
fnmadd.s f5, f19, f11, f17, rtz # perform operation
fnmadd.s f5, f19, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f19, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x31, 0xbaddac28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x7d510ab0 # load x3 with value 0x7d510ab0
sw x3, 0(x2) # store 0x7d510ab0 in memory
flw f29, 0(x2) # load 0x7d510ab0 from memory into f29
fnmadd.s f31, f19, f24, f29, dyn # perform operation
fnmadd.s f31, f19, f24, f29, rdn # perform operation
fnmadd.s f31, f19, f24, f29, rmm # perform operation
fnmadd.s f31, f19, f24, f29, rne # perform operation
fnmadd.s f31, f19, f24, f29, rtz # perform operation
fnmadd.s f31, f19, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f19, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f19, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x25, 0x5c080db6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xfb7b42a8 # load x3 with value 0xfb7b42a8
sw x3, 0(x2) # store 0xfb7b42a8 in memory
flw f26, 0(x2) # load 0xfb7b42a8 from memory into f26
fnmadd.s f25, f3, f9, f26, dyn # perform operation
fnmadd.s f25, f3, f9, f26, rdn # perform operation
fnmadd.s f25, f3, f9, f26, rmm # perform operation
fnmadd.s f25, f3, f9, f26, rne # perform operation
fnmadd.s f25, f3, f9, f26, rtz # perform operation
fnmadd.s f25, f3, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f3, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x29, 0x1f772be3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x87f6374d # load x3 with value 0x87f6374d
sw x3, 0(x2) # store 0x87f6374d in memory
flw f30, 0(x2) # load 0x87f6374d from memory into f30
fnmadd.s f29, f9, f14, f30, dyn # perform operation
fnmadd.s f29, f9, f14, f30, rdn # perform operation
fnmadd.s f29, f9, f14, f30, rmm # perform operation
fnmadd.s f29, f9, f14, f30, rne # perform operation
fnmadd.s f29, f9, f14, f30, rtz # perform operation
fnmadd.s f29, f9, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f9, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f9, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f9, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f9, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f9, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x24, 0x6cdf3b7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x0c581333 # load x3 with value 0x0c581333
sw x3, 0(x2) # store 0x0c581333 in memory
flw f17, 0(x2) # load 0x0c581333 from memory into f17
fnmadd.s f24, f26, f18, f17, dyn # perform operation
fnmadd.s f24, f26, f18, f17, rdn # perform operation
fnmadd.s f24, f26, f18, f17, rmm # perform operation
fnmadd.s f24, f26, f18, f17, rne # perform operation
fnmadd.s f24, f26, f18, f17, rtz # perform operation
fnmadd.s f24, f26, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f26, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f26, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x13, 0x19f33339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x8dbcbbbb # load x3 with value 0x8dbcbbbb
sw x3, 0(x2) # store 0x8dbcbbbb in memory
flw f31, 0(x2) # load 0x8dbcbbbb from memory into f31
fnmadd.s f13, f16, f27, f31, dyn # perform operation
fnmadd.s f13, f16, f27, f31, rdn # perform operation
fnmadd.s f13, f16, f27, f31, rmm # perform operation
fnmadd.s f13, f16, f27, f31, rne # perform operation
fnmadd.s f13, f16, f27, f31, rtz # perform operation
fnmadd.s f13, f16, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f16, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f16, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f16, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f16, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f16, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x23, 0x575ff823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x3b512686 # load x3 with value 0x3b512686
sw x3, 0(x2) # store 0x3b512686 in memory
flw f16, 0(x2) # load 0x3b512686 from memory into f16
fnmadd.s f23, f7, f3, f16, dyn # perform operation
fnmadd.s f23, f7, f3, f16, rdn # perform operation
fnmadd.s f23, f7, f3, f16, rmm # perform operation
fnmadd.s f23, f7, f3, f16, rne # perform operation
fnmadd.s f23, f7, f3, f16, rtz # perform operation
fnmadd.s f23, f7, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x1, 0x56de0983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x2876fac4 # load x3 with value 0x2876fac4
sw x3, 0(x2) # store 0x2876fac4 in memory
flw f22, 0(x2) # load 0x2876fac4 from memory into f22
fnmadd.s f1, f27, f7, f22, dyn # perform operation
fnmadd.s f1, f27, f7, f22, rdn # perform operation
fnmadd.s f1, f27, f7, f22, rmm # perform operation
fnmadd.s f1, f27, f7, f22, rne # perform operation
fnmadd.s f1, f27, f7, f22, rtz # perform operation
fnmadd.s f1, f27, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x14, 0x27c18a8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0xcb3a71d3 # load x3 with value 0xcb3a71d3
sw x3, 0(x2) # store 0xcb3a71d3 in memory
flw f15, 0(x2) # load 0xcb3a71d3 from memory into f15
fnmadd.s f14, f9, f26, f15, dyn # perform operation
fnmadd.s f14, f9, f26, f15, rdn # perform operation
fnmadd.s f14, f9, f26, f15, rmm # perform operation
fnmadd.s f14, f9, f26, f15, rne # perform operation
fnmadd.s f14, f9, f26, f15, rtz # perform operation
fnmadd.s f14, f9, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x22, 0x5a86ab2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x82f487ba # load x3 with value 0x82f487ba
sw x3, 0(x2) # store 0x82f487ba in memory
flw f9, 0(x2) # load 0x82f487ba from memory into f9
fnmadd.s f22, f5, f19, f9, dyn # perform operation
fnmadd.s f22, f5, f19, f9, rdn # perform operation
fnmadd.s f22, f5, f19, f9, rmm # perform operation
fnmadd.s f22, f5, f19, f9, rne # perform operation
fnmadd.s f22, f5, f19, f9, rtz # perform operation
fnmadd.s f22, f5, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f5, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f5, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x21, 0x78d63612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x764b3094 # load x3 with value 0x764b3094
sw x3, 0(x2) # store 0x764b3094 in memory
flw f6, 0(x2) # load 0x764b3094 from memory into f6
fnmadd.s f21, f31, f7, f6, dyn # perform operation
fnmadd.s f21, f31, f7, f6, rdn # perform operation
fnmadd.s f21, f31, f7, f6, rmm # perform operation
fnmadd.s f21, f31, f7, f6, rne # perform operation
fnmadd.s f21, f31, f7, f6, rtz # perform operation
fnmadd.s f21, f31, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x10, 0xba1d478a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x35968eee # load x3 with value 0x35968eee
sw x3, 0(x2) # store 0x35968eee in memory
flw f19, 0(x2) # load 0x35968eee from memory into f19
fnmadd.s f10, f30, f15, f19, dyn # perform operation
fnmadd.s f10, f30, f15, f19, rdn # perform operation
fnmadd.s f10, f30, f15, f19, rmm # perform operation
fnmadd.s f10, f30, f15, f19, rne # perform operation
fnmadd.s f10, f30, f15, f19, rtz # perform operation
fnmadd.s f10, f30, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x26, 0x7bd71035 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x7fedc011 # load x3 with value 0x7fedc011
sw x3, 0(x2) # store 0x7fedc011 in memory
flw f1, 0(x2) # load 0x7fedc011 from memory into f1
fnmadd.s f26, f23, f27, f1, dyn # perform operation
fnmadd.s f26, f23, f27, f1, rdn # perform operation
fnmadd.s f26, f23, f27, f1, rmm # perform operation
fnmadd.s f26, f23, f27, f1, rne # perform operation
fnmadd.s f26, f23, f27, f1, rtz # perform operation
fnmadd.s f26, f23, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f27, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x13, 0xd3985c80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xe3ae1ff8 # load x3 with value 0xe3ae1ff8
sw x3, 0(x2) # store 0xe3ae1ff8 in memory
flw f15, 0(x2) # load 0xe3ae1ff8 from memory into f15
fnmadd.s f13, f12, f4, f15, dyn # perform operation
fnmadd.s f13, f12, f4, f15, rdn # perform operation
fnmadd.s f13, f12, f4, f15, rmm # perform operation
fnmadd.s f13, f12, f4, f15, rne # perform operation
fnmadd.s f13, f12, f4, f15, rtz # perform operation
fnmadd.s f13, f12, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x19, 0x99e89b24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x3a21421b # load x3 with value 0x3a21421b
sw x3, 0(x2) # store 0x3a21421b in memory
flw f7, 0(x2) # load 0x3a21421b from memory into f7
fnmadd.s f19, f4, f5, f7, dyn # perform operation
fnmadd.s f19, f4, f5, f7, rdn # perform operation
fnmadd.s f19, f4, f5, f7, rmm # perform operation
fnmadd.s f19, f4, f5, f7, rne # perform operation
fnmadd.s f19, f4, f5, f7, rtz # perform operation
fnmadd.s f19, f4, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f4, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f4, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f4, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f4, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f4, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x29, 0xe6260f84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x750937be # load x3 with value 0x750937be
sw x3, 0(x2) # store 0x750937be in memory
flw f25, 0(x2) # load 0x750937be from memory into f25
fnmadd.s f29, f4, f7, f25, dyn # perform operation
fnmadd.s f29, f4, f7, f25, rdn # perform operation
fnmadd.s f29, f4, f7, f25, rmm # perform operation
fnmadd.s f29, f4, f7, f25, rne # perform operation
fnmadd.s f29, f4, f7, f25, rtz # perform operation
fnmadd.s f29, f4, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f4, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x23, 0xfb7df485 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x847177f3 # load x3 with value 0x847177f3
sw x3, 0(x2) # store 0x847177f3 in memory
flw f20, 0(x2) # load 0x847177f3 from memory into f20
fnmadd.s f23, f26, f31, f20, dyn # perform operation
fnmadd.s f23, f26, f31, f20, rdn # perform operation
fnmadd.s f23, f26, f31, f20, rmm # perform operation
fnmadd.s f23, f26, f31, f20, rne # perform operation
fnmadd.s f23, f26, f31, f20, rtz # perform operation
fnmadd.s f23, f26, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x17, 0x8d761d39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x87dc95ff # load x3 with value 0x87dc95ff
sw x3, 0(x2) # store 0x87dc95ff in memory
flw f6, 0(x2) # load 0x87dc95ff from memory into f6
fnmadd.s f17, f9, f23, f6, dyn # perform operation
fnmadd.s f17, f9, f23, f6, rdn # perform operation
fnmadd.s f17, f9, f23, f6, rmm # perform operation
fnmadd.s f17, f9, f23, f6, rne # perform operation
fnmadd.s f17, f9, f23, f6, rtz # perform operation
fnmadd.s f17, f9, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x31, 0x13873f07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x563d6c4f # load x3 with value 0x563d6c4f
sw x3, 0(x2) # store 0x563d6c4f in memory
flw f30, 0(x2) # load 0x563d6c4f from memory into f30
fnmadd.s f31, f14, f7, f30, dyn # perform operation
fnmadd.s f31, f14, f7, f30, rdn # perform operation
fnmadd.s f31, f14, f7, f30, rmm # perform operation
fnmadd.s f31, f14, f7, f30, rne # perform operation
fnmadd.s f31, f14, f7, f30, rtz # perform operation
fnmadd.s f31, f14, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x30, 0xc8954ff5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x6ffde023 # load x3 with value 0x6ffde023
sw x3, 0(x2) # store 0x6ffde023 in memory
flw f10, 0(x2) # load 0x6ffde023 from memory into f10
fnmadd.s f30, f1, f31, f10, dyn # perform operation
fnmadd.s f30, f1, f31, f10, rdn # perform operation
fnmadd.s f30, f1, f31, f10, rmm # perform operation
fnmadd.s f30, f1, f31, f10, rne # perform operation
fnmadd.s f30, f1, f31, f10, rtz # perform operation
fnmadd.s f30, f1, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f1, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f1, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f1, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f1, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f1, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x27, 0xfbf775e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0xbc381ff7 # load x3 with value 0xbc381ff7
sw x3, 0(x2) # store 0xbc381ff7 in memory
flw f31, 0(x2) # load 0xbc381ff7 from memory into f31
fnmadd.s f27, f5, f7, f31, dyn # perform operation
fnmadd.s f27, f5, f7, f31, rdn # perform operation
fnmadd.s f27, f5, f7, f31, rmm # perform operation
fnmadd.s f27, f5, f7, f31, rne # perform operation
fnmadd.s f27, f5, f7, f31, rtz # perform operation
fnmadd.s f27, f5, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x21, 0x98450f33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xf8da7830 # load x3 with value 0xf8da7830
sw x3, 0(x2) # store 0xf8da7830 in memory
flw f29, 0(x2) # load 0xf8da7830 from memory into f29
fnmadd.s f21, f25, f19, f29, dyn # perform operation
fnmadd.s f21, f25, f19, f29, rdn # perform operation
fnmadd.s f21, f25, f19, f29, rmm # perform operation
fnmadd.s f21, f25, f19, f29, rne # perform operation
fnmadd.s f21, f25, f19, f29, rtz # perform operation
fnmadd.s f21, f25, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f25, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x16, 0xbaab7294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xdc98c4ff # load x3 with value 0xdc98c4ff
sw x3, 0(x2) # store 0xdc98c4ff in memory
flw f4, 0(x2) # load 0xdc98c4ff from memory into f4
fnmadd.s f16, f13, f29, f4, dyn # perform operation
fnmadd.s f16, f13, f29, f4, rdn # perform operation
fnmadd.s f16, f13, f29, f4, rmm # perform operation
fnmadd.s f16, f13, f29, f4, rne # perform operation
fnmadd.s f16, f13, f29, f4, rtz # perform operation
fnmadd.s f16, f13, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x13, 0x01e451cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0xcdf322a8 # load x3 with value 0xcdf322a8
sw x3, 0(x2) # store 0xcdf322a8 in memory
flw f4, 0(x2) # load 0xcdf322a8 from memory into f4
fnmadd.s f13, f16, f17, f4, dyn # perform operation
fnmadd.s f13, f16, f17, f4, rdn # perform operation
fnmadd.s f13, f16, f17, f4, rmm # perform operation
fnmadd.s f13, f16, f17, f4, rne # perform operation
fnmadd.s f13, f16, f17, f4, rtz # perform operation
fnmadd.s f13, f16, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f16, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x8, 0x196f7662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x27719d6c # load x3 with value 0x27719d6c
sw x3, 0(x2) # store 0x27719d6c in memory
flw f3, 0(x2) # load 0x27719d6c from memory into f3
fnmadd.s f8, f16, f18, f3, dyn # perform operation
fnmadd.s f8, f16, f18, f3, rdn # perform operation
fnmadd.s f8, f16, f18, f3, rmm # perform operation
fnmadd.s f8, f16, f18, f3, rne # perform operation
fnmadd.s f8, f16, f18, f3, rtz # perform operation
fnmadd.s f8, f16, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f16, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x29, 0x86c582fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0xf0f65c93 # load x3 with value 0xf0f65c93
sw x3, 0(x2) # store 0xf0f65c93 in memory
flw f11, 0(x2) # load 0xf0f65c93 from memory into f11
fnmadd.s f29, f10, f9, f11, dyn # perform operation
fnmadd.s f29, f10, f9, f11, rdn # perform operation
fnmadd.s f29, f10, f9, f11, rmm # perform operation
fnmadd.s f29, f10, f9, f11, rne # perform operation
fnmadd.s f29, f10, f9, f11, rtz # perform operation
fnmadd.s f29, f10, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f10, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x28, 0x8ed4e88f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x2ce061f0 # load x3 with value 0x2ce061f0
sw x3, 0(x2) # store 0x2ce061f0 in memory
flw f6, 0(x2) # load 0x2ce061f0 from memory into f6
fnmadd.s f28, f18, f7, f6, dyn # perform operation
fnmadd.s f28, f18, f7, f6, rdn # perform operation
fnmadd.s f28, f18, f7, f6, rmm # perform operation
fnmadd.s f28, f18, f7, f6, rne # perform operation
fnmadd.s f28, f18, f7, f6, rtz # perform operation
fnmadd.s f28, f18, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x1, 0xfc3afe11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x1da284be # load x3 with value 0x1da284be
sw x3, 0(x2) # store 0x1da284be in memory
flw f20, 0(x2) # load 0x1da284be from memory into f20
fnmadd.s f1, f8, f11, f20, dyn # perform operation
fnmadd.s f1, f8, f11, f20, rdn # perform operation
fnmadd.s f1, f8, f11, f20, rmm # perform operation
fnmadd.s f1, f8, f11, f20, rne # perform operation
fnmadd.s f1, f8, f11, f20, rtz # perform operation
fnmadd.s f1, f8, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f8, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f8, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f8, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f8, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f8, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x18, 0x263ff374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xde9a1da5 # load x3 with value 0xde9a1da5
sw x3, 0(x2) # store 0xde9a1da5 in memory
flw f15, 0(x2) # load 0xde9a1da5 from memory into f15
fnmadd.s f18, f4, f1, f15, dyn # perform operation
fnmadd.s f18, f4, f1, f15, rdn # perform operation
fnmadd.s f18, f4, f1, f15, rmm # perform operation
fnmadd.s f18, f4, f1, f15, rne # perform operation
fnmadd.s f18, f4, f1, f15, rtz # perform operation
fnmadd.s f18, f4, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f4, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f4, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f4, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f4, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f4, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x2, 0xd5d0ded2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x7b4657d8 # load x3 with value 0x7b4657d8
sw x3, 0(x2) # store 0x7b4657d8 in memory
flw f17, 0(x2) # load 0x7b4657d8 from memory into f17
fnmadd.s f2, f14, f25, f17, dyn # perform operation
fnmadd.s f2, f14, f25, f17, rdn # perform operation
fnmadd.s f2, f14, f25, f17, rmm # perform operation
fnmadd.s f2, f14, f25, f17, rne # perform operation
fnmadd.s f2, f14, f25, f17, rtz # perform operation
fnmadd.s f2, f14, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f14, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f14, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f14, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f14, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f14, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x18, 0xe08b0180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x0f445c11 # load x3 with value 0x0f445c11
sw x3, 0(x2) # store 0x0f445c11 in memory
flw f14, 0(x2) # load 0x0f445c11 from memory into f14
fnmadd.s f18, f26, f4, f14, dyn # perform operation
fnmadd.s f18, f26, f4, f14, rdn # perform operation
fnmadd.s f18, f26, f4, f14, rmm # perform operation
fnmadd.s f18, f26, f4, f14, rne # perform operation
fnmadd.s f18, f26, f4, f14, rtz # perform operation
fnmadd.s f18, f26, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x2, 0x6437e658 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x43a19b77 # load x3 with value 0x43a19b77
sw x3, 0(x2) # store 0x43a19b77 in memory
flw f10, 0(x2) # load 0x43a19b77 from memory into f10
fnmadd.s f2, f24, f6, f10, dyn # perform operation
fnmadd.s f2, f24, f6, f10, rdn # perform operation
fnmadd.s f2, f24, f6, f10, rmm # perform operation
fnmadd.s f2, f24, f6, f10, rne # perform operation
fnmadd.s f2, f24, f6, f10, rtz # perform operation
fnmadd.s f2, f24, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f24, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f24, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f24, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f24, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f24, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x22, 0x0e16208f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x4e85dc75 # load x3 with value 0x4e85dc75
sw x3, 0(x2) # store 0x4e85dc75 in memory
flw f21, 0(x2) # load 0x4e85dc75 from memory into f21
fnmadd.s f22, f26, f10, f21, dyn # perform operation
fnmadd.s f22, f26, f10, f21, rdn # perform operation
fnmadd.s f22, f26, f10, f21, rmm # perform operation
fnmadd.s f22, f26, f10, f21, rne # perform operation
fnmadd.s f22, f26, f10, f21, rtz # perform operation
fnmadd.s f22, f26, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f26, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x7, 0x1e6b7a5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x649774cc # load x3 with value 0x649774cc
sw x3, 0(x2) # store 0x649774cc in memory
flw f25, 0(x2) # load 0x649774cc from memory into f25
fnmadd.s f7, f16, f1, f25, dyn # perform operation
fnmadd.s f7, f16, f1, f25, rdn # perform operation
fnmadd.s f7, f16, f1, f25, rmm # perform operation
fnmadd.s f7, f16, f1, f25, rne # perform operation
fnmadd.s f7, f16, f1, f25, rtz # perform operation
fnmadd.s f7, f16, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f16, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x22, 0x3efe0332 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x624e29a9 # load x3 with value 0x624e29a9
sw x3, 0(x2) # store 0x624e29a9 in memory
flw f28, 0(x2) # load 0x624e29a9 from memory into f28
fnmadd.s f22, f6, f3, f28, dyn # perform operation
fnmadd.s f22, f6, f3, f28, rdn # perform operation
fnmadd.s f22, f6, f3, f28, rmm # perform operation
fnmadd.s f22, f6, f3, f28, rne # perform operation
fnmadd.s f22, f6, f3, f28, rtz # perform operation
fnmadd.s f22, f6, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f6, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f6, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f6, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f6, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f6, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x13, 0x5faf117c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0xcbc4a04a # load x3 with value 0xcbc4a04a
sw x3, 0(x2) # store 0xcbc4a04a in memory
flw f20, 0(x2) # load 0xcbc4a04a from memory into f20
fnmadd.s f13, f25, f24, f20, dyn # perform operation
fnmadd.s f13, f25, f24, f20, rdn # perform operation
fnmadd.s f13, f25, f24, f20, rmm # perform operation
fnmadd.s f13, f25, f24, f20, rne # perform operation
fnmadd.s f13, f25, f24, f20, rtz # perform operation
fnmadd.s f13, f25, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f25, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x4, 0x267e7930 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x952ac675 # load x3 with value 0x952ac675
sw x3, 0(x2) # store 0x952ac675 in memory
flw f26, 0(x2) # load 0x952ac675 from memory into f26
fnmadd.s f4, f21, f6, f26, dyn # perform operation
fnmadd.s f4, f21, f6, f26, rdn # perform operation
fnmadd.s f4, f21, f6, f26, rmm # perform operation
fnmadd.s f4, f21, f6, f26, rne # perform operation
fnmadd.s f4, f21, f6, f26, rtz # perform operation
fnmadd.s f4, f21, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f21, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f21, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f21, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f21, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f21, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x4, 0x401bebd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x33a7c3af # load x3 with value 0x33a7c3af
sw x3, 0(x2) # store 0x33a7c3af in memory
flw f23, 0(x2) # load 0x33a7c3af from memory into f23
fnmadd.s f4, f11, f21, f23, dyn # perform operation
fnmadd.s f4, f11, f21, f23, rdn # perform operation
fnmadd.s f4, f11, f21, f23, rmm # perform operation
fnmadd.s f4, f11, f21, f23, rne # perform operation
fnmadd.s f4, f11, f21, f23, rtz # perform operation
fnmadd.s f4, f11, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f11, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x21, 0xa50e5213 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x3a71cbc3 # load x3 with value 0x3a71cbc3
sw x3, 0(x2) # store 0x3a71cbc3 in memory
flw f2, 0(x2) # load 0x3a71cbc3 from memory into f2
fnmadd.s f21, f14, f24, f2, dyn # perform operation
fnmadd.s f21, f14, f24, f2, rdn # perform operation
fnmadd.s f21, f14, f24, f2, rmm # perform operation
fnmadd.s f21, f14, f24, f2, rne # perform operation
fnmadd.s f21, f14, f24, f2, rtz # perform operation
fnmadd.s f21, f14, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x28, 0x7116d8be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xfa4e30f4 # load x3 with value 0xfa4e30f4
sw x3, 0(x2) # store 0xfa4e30f4 in memory
flw f14, 0(x2) # load 0xfa4e30f4 from memory into f14
fnmadd.s f28, f2, f25, f14, dyn # perform operation
fnmadd.s f28, f2, f25, f14, rdn # perform operation
fnmadd.s f28, f2, f25, f14, rmm # perform operation
fnmadd.s f28, f2, f25, f14, rne # perform operation
fnmadd.s f28, f2, f25, f14, rtz # perform operation
fnmadd.s f28, f2, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f2, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f2, f25, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x1, 0x01fe4298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0xdaf9672c # load x3 with value 0xdaf9672c
sw x3, 0(x2) # store 0xdaf9672c in memory
flw f6, 0(x2) # load 0xdaf9672c from memory into f6
fnmadd.s f1, f29, f30, f6, dyn # perform operation
fnmadd.s f1, f29, f30, f6, rdn # perform operation
fnmadd.s f1, f29, f30, f6, rmm # perform operation
fnmadd.s f1, f29, f30, f6, rne # perform operation
fnmadd.s f1, f29, f30, f6, rtz # perform operation
fnmadd.s f1, f29, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f29, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x3, 0x318cacca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x8b5350cd # load x3 with value 0x8b5350cd
sw x3, 0(x2) # store 0x8b5350cd in memory
flw f23, 0(x2) # load 0x8b5350cd from memory into f23
fnmadd.s f3, f24, f8, f23, dyn # perform operation
fnmadd.s f3, f24, f8, f23, rdn # perform operation
fnmadd.s f3, f24, f8, f23, rmm # perform operation
fnmadd.s f3, f24, f8, f23, rne # perform operation
fnmadd.s f3, f24, f8, f23, rtz # perform operation
fnmadd.s f3, f24, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f24, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f24, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x4, 0x3c892784 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0xb1025006 # load x3 with value 0xb1025006
sw x3, 0(x2) # store 0xb1025006 in memory
flw f5, 0(x2) # load 0xb1025006 from memory into f5
fnmadd.s f4, f2, f21, f5, dyn # perform operation
fnmadd.s f4, f2, f21, f5, rdn # perform operation
fnmadd.s f4, f2, f21, f5, rmm # perform operation
fnmadd.s f4, f2, f21, f5, rne # perform operation
fnmadd.s f4, f2, f21, f5, rtz # perform operation
fnmadd.s f4, f2, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f2, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f2, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x4, 0x7752edc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x3deb4c40 # load x3 with value 0x3deb4c40
sw x3, 0(x2) # store 0x3deb4c40 in memory
flw f24, 0(x2) # load 0x3deb4c40 from memory into f24
fnmadd.s f4, f23, f25, f24, dyn # perform operation
fnmadd.s f4, f23, f25, f24, rdn # perform operation
fnmadd.s f4, f23, f25, f24, rmm # perform operation
fnmadd.s f4, f23, f25, f24, rne # perform operation
fnmadd.s f4, f23, f25, f24, rtz # perform operation
fnmadd.s f4, f23, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x20, 0x523e381c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x63755853 # load x3 with value 0x63755853
sw x3, 0(x2) # store 0x63755853 in memory
flw f17, 0(x2) # load 0x63755853 from memory into f17
fnmadd.s f20, f19, f16, f17, dyn # perform operation
fnmadd.s f20, f19, f16, f17, rdn # perform operation
fnmadd.s f20, f19, f16, f17, rmm # perform operation
fnmadd.s f20, f19, f16, f17, rne # perform operation
fnmadd.s f20, f19, f16, f17, rtz # perform operation
fnmadd.s f20, f19, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x6, 0xe9e51b4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xd08795e9 # load x3 with value 0xd08795e9
sw x3, 0(x2) # store 0xd08795e9 in memory
flw f8, 0(x2) # load 0xd08795e9 from memory into f8
fnmadd.s f6, f19, f9, f8, dyn # perform operation
fnmadd.s f6, f19, f9, f8, rdn # perform operation
fnmadd.s f6, f19, f9, f8, rmm # perform operation
fnmadd.s f6, f19, f9, f8, rne # perform operation
fnmadd.s f6, f19, f9, f8, rtz # perform operation
fnmadd.s f6, f19, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f19, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x22, 0x9504b0fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x2de7f696 # load x3 with value 0x2de7f696
sw x3, 0(x2) # store 0x2de7f696 in memory
flw f23, 0(x2) # load 0x2de7f696 from memory into f23
fnmadd.s f22, f4, f14, f23, dyn # perform operation
fnmadd.s f22, f4, f14, f23, rdn # perform operation
fnmadd.s f22, f4, f14, f23, rmm # perform operation
fnmadd.s f22, f4, f14, f23, rne # perform operation
fnmadd.s f22, f4, f14, f23, rtz # perform operation
fnmadd.s f22, f4, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f4, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f4, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f4, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f4, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f4, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x25, 0x7c64acaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x0058c815 # load x3 with value 0x0058c815
sw x3, 0(x2) # store 0x0058c815 in memory
flw f14, 0(x2) # load 0x0058c815 from memory into f14
fnmadd.s f25, f24, f28, f14, dyn # perform operation
fnmadd.s f25, f24, f28, f14, rdn # perform operation
fnmadd.s f25, f24, f28, f14, rmm # perform operation
fnmadd.s f25, f24, f28, f14, rne # perform operation
fnmadd.s f25, f24, f28, f14, rtz # perform operation
fnmadd.s f25, f24, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f24, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x15, 0x9bf560a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0xe6ca7cf8 # load x3 with value 0xe6ca7cf8
sw x3, 0(x2) # store 0xe6ca7cf8 in memory
flw f7, 0(x2) # load 0xe6ca7cf8 from memory into f7
fnmadd.s f15, f18, f23, f7, dyn # perform operation
fnmadd.s f15, f18, f23, f7, rdn # perform operation
fnmadd.s f15, f18, f23, f7, rmm # perform operation
fnmadd.s f15, f18, f23, f7, rne # perform operation
fnmadd.s f15, f18, f23, f7, rtz # perform operation
fnmadd.s f15, f18, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x4, 0x5ce25cc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x0456d99e # load x3 with value 0x0456d99e
sw x3, 0(x2) # store 0x0456d99e in memory
flw f15, 0(x2) # load 0x0456d99e from memory into f15
fnmadd.s f4, f27, f18, f15, dyn # perform operation
fnmadd.s f4, f27, f18, f15, rdn # perform operation
fnmadd.s f4, f27, f18, f15, rmm # perform operation
fnmadd.s f4, f27, f18, f15, rne # perform operation
fnmadd.s f4, f27, f18, f15, rtz # perform operation
fnmadd.s f4, f27, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f27, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f27, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x26, 0xf7e06a72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x9b09c45e # load x3 with value 0x9b09c45e
sw x3, 0(x2) # store 0x9b09c45e in memory
flw f21, 0(x2) # load 0x9b09c45e from memory into f21
fnmadd.s f26, f20, f2, f21, dyn # perform operation
fnmadd.s f26, f20, f2, f21, rdn # perform operation
fnmadd.s f26, f20, f2, f21, rmm # perform operation
fnmadd.s f26, f20, f2, f21, rne # perform operation
fnmadd.s f26, f20, f2, f21, rtz # perform operation
fnmadd.s f26, f20, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f20, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x2, 0x960f5fd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xddc1616b # load x3 with value 0xddc1616b
sw x3, 0(x2) # store 0xddc1616b in memory
flw f11, 0(x2) # load 0xddc1616b from memory into f11
fnmadd.s f2, f16, f13, f11, dyn # perform operation
fnmadd.s f2, f16, f13, f11, rdn # perform operation
fnmadd.s f2, f16, f13, f11, rmm # perform operation
fnmadd.s f2, f16, f13, f11, rne # perform operation
fnmadd.s f2, f16, f13, f11, rtz # perform operation
fnmadd.s f2, f16, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f16, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x6, 0x9d3671d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x8c10f3da # load x3 with value 0x8c10f3da
sw x3, 0(x2) # store 0x8c10f3da in memory
flw f8, 0(x2) # load 0x8c10f3da from memory into f8
fnmadd.s f6, f16, f14, f8, dyn # perform operation
fnmadd.s f6, f16, f14, f8, rdn # perform operation
fnmadd.s f6, f16, f14, f8, rmm # perform operation
fnmadd.s f6, f16, f14, f8, rne # perform operation
fnmadd.s f6, f16, f14, f8, rtz # perform operation
fnmadd.s f6, f16, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f16, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x19, 0xccd07589 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x3c380d3b # load x3 with value 0x3c380d3b
sw x3, 0(x2) # store 0x3c380d3b in memory
flw f7, 0(x2) # load 0x3c380d3b from memory into f7
fnmadd.s f19, f1, f4, f7, dyn # perform operation
fnmadd.s f19, f1, f4, f7, rdn # perform operation
fnmadd.s f19, f1, f4, f7, rmm # perform operation
fnmadd.s f19, f1, f4, f7, rne # perform operation
fnmadd.s f19, f1, f4, f7, rtz # perform operation
fnmadd.s f19, f1, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x17, 0xd126672c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x473fb270 # load x3 with value 0x473fb270
sw x3, 0(x2) # store 0x473fb270 in memory
flw f3, 0(x2) # load 0x473fb270 from memory into f3
fnmadd.s f17, f18, f23, f3, dyn # perform operation
fnmadd.s f17, f18, f23, f3, rdn # perform operation
fnmadd.s f17, f18, f23, f3, rmm # perform operation
fnmadd.s f17, f18, f23, f3, rne # perform operation
fnmadd.s f17, f18, f23, f3, rtz # perform operation
fnmadd.s f17, f18, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x26, 0x9f503f11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xc54c1cc4 # load x3 with value 0xc54c1cc4
sw x3, 0(x2) # store 0xc54c1cc4 in memory
flw f28, 0(x2) # load 0xc54c1cc4 from memory into f28
fnmadd.s f26, f25, f1, f28, dyn # perform operation
fnmadd.s f26, f25, f1, f28, rdn # perform operation
fnmadd.s f26, f25, f1, f28, rmm # perform operation
fnmadd.s f26, f25, f1, f28, rne # perform operation
fnmadd.s f26, f25, f1, f28, rtz # perform operation
fnmadd.s f26, f25, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f25, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f25, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f25, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f25, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f25, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x4, 0x1ecccfe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x77022af5 # load x3 with value 0x77022af5
sw x3, 0(x2) # store 0x77022af5 in memory
flw f25, 0(x2) # load 0x77022af5 from memory into f25
fnmadd.s f4, f17, f26, f25, dyn # perform operation
fnmadd.s f4, f17, f26, f25, rdn # perform operation
fnmadd.s f4, f17, f26, f25, rmm # perform operation
fnmadd.s f4, f17, f26, f25, rne # perform operation
fnmadd.s f4, f17, f26, f25, rtz # perform operation
fnmadd.s f4, f17, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x29, 0x6519a2cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x43d63739 # load x3 with value 0x43d63739
sw x3, 0(x2) # store 0x43d63739 in memory
flw f14, 0(x2) # load 0x43d63739 from memory into f14
fnmadd.s f29, f24, f4, f14, dyn # perform operation
fnmadd.s f29, f24, f4, f14, rdn # perform operation
fnmadd.s f29, f24, f4, f14, rmm # perform operation
fnmadd.s f29, f24, f4, f14, rne # perform operation
fnmadd.s f29, f24, f4, f14, rtz # perform operation
fnmadd.s f29, f24, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f24, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x26, 0x6623d9e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x003dc547 # load x3 with value 0x003dc547
sw x3, 0(x2) # store 0x003dc547 in memory
flw f3, 0(x2) # load 0x003dc547 from memory into f3
fnmadd.s f26, f29, f15, f3, dyn # perform operation
fnmadd.s f26, f29, f15, f3, rdn # perform operation
fnmadd.s f26, f29, f15, f3, rmm # perform operation
fnmadd.s f26, f29, f15, f3, rne # perform operation
fnmadd.s f26, f29, f15, f3, rtz # perform operation
fnmadd.s f26, f29, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x15, 0x2c6a2f15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x770f7a75 # load x3 with value 0x770f7a75
sw x3, 0(x2) # store 0x770f7a75 in memory
flw f22, 0(x2) # load 0x770f7a75 from memory into f22
fnmadd.s f15, f2, f10, f22, dyn # perform operation
fnmadd.s f15, f2, f10, f22, rdn # perform operation
fnmadd.s f15, f2, f10, f22, rmm # perform operation
fnmadd.s f15, f2, f10, f22, rne # perform operation
fnmadd.s f15, f2, f10, f22, rtz # perform operation
fnmadd.s f15, f2, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x11, 0xb0149ac7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x9b409a4a # load x3 with value 0x9b409a4a
sw x3, 0(x2) # store 0x9b409a4a in memory
flw f10, 0(x2) # load 0x9b409a4a from memory into f10
fnmadd.s f11, f22, f31, f10, dyn # perform operation
fnmadd.s f11, f22, f31, f10, rdn # perform operation
fnmadd.s f11, f22, f31, f10, rmm # perform operation
fnmadd.s f11, f22, f31, f10, rne # perform operation
fnmadd.s f11, f22, f31, f10, rtz # perform operation
fnmadd.s f11, f22, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x13, 0x0fcf82f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x4aa0d890 # load x3 with value 0x4aa0d890
sw x3, 0(x2) # store 0x4aa0d890 in memory
flw f4, 0(x2) # load 0x4aa0d890 from memory into f4
fnmadd.s f13, f9, f18, f4, dyn # perform operation
fnmadd.s f13, f9, f18, f4, rdn # perform operation
fnmadd.s f13, f9, f18, f4, rmm # perform operation
fnmadd.s f13, f9, f18, f4, rne # perform operation
fnmadd.s f13, f9, f18, f4, rtz # perform operation
fnmadd.s f13, f9, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x1, 0x15a37dfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x386425d9 # load x3 with value 0x386425d9
sw x3, 0(x2) # store 0x386425d9 in memory
flw f30, 0(x2) # load 0x386425d9 from memory into f30
fnmadd.s f1, f28, f6, f30, dyn # perform operation
fnmadd.s f1, f28, f6, f30, rdn # perform operation
fnmadd.s f1, f28, f6, f30, rmm # perform operation
fnmadd.s f1, f28, f6, f30, rne # perform operation
fnmadd.s f1, f28, f6, f30, rtz # perform operation
fnmadd.s f1, f28, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x12, 0xd0d9e52e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x93920706 # load x3 with value 0x93920706
sw x3, 0(x2) # store 0x93920706 in memory
flw f19, 0(x2) # load 0x93920706 from memory into f19
fnmadd.s f12, f15, f11, f19, dyn # perform operation
fnmadd.s f12, f15, f11, f19, rdn # perform operation
fnmadd.s f12, f15, f11, f19, rmm # perform operation
fnmadd.s f12, f15, f11, f19, rne # perform operation
fnmadd.s f12, f15, f11, f19, rtz # perform operation
fnmadd.s f12, f15, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x21, 0x34107e70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x11b9b544 # load x3 with value 0x11b9b544
sw x3, 0(x2) # store 0x11b9b544 in memory
flw f5, 0(x2) # load 0x11b9b544 from memory into f5
fnmadd.s f21, f11, f18, f5, dyn # perform operation
fnmadd.s f21, f11, f18, f5, rdn # perform operation
fnmadd.s f21, f11, f18, f5, rmm # perform operation
fnmadd.s f21, f11, f18, f5, rne # perform operation
fnmadd.s f21, f11, f18, f5, rtz # perform operation
fnmadd.s f21, f11, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f11, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f11, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f11, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f11, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f11, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x13, 0xc557910f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0x136d92f3 # load x3 with value 0x136d92f3
sw x3, 0(x2) # store 0x136d92f3 in memory
flw f14, 0(x2) # load 0x136d92f3 from memory into f14
fnmadd.s f13, f22, f24, f14, dyn # perform operation
fnmadd.s f13, f22, f24, f14, rdn # perform operation
fnmadd.s f13, f22, f24, f14, rmm # perform operation
fnmadd.s f13, f22, f24, f14, rne # perform operation
fnmadd.s f13, f22, f24, f14, rtz # perform operation
fnmadd.s f13, f22, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f22, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f22, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f22, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f22, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f22, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x23, 0x7050be36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0xcea8d923 # load x3 with value 0xcea8d923
sw x3, 0(x2) # store 0xcea8d923 in memory
flw f10, 0(x2) # load 0xcea8d923 from memory into f10
fnmadd.s f23, f1, f11, f10, dyn # perform operation
fnmadd.s f23, f1, f11, f10, rdn # perform operation
fnmadd.s f23, f1, f11, f10, rmm # perform operation
fnmadd.s f23, f1, f11, f10, rne # perform operation
fnmadd.s f23, f1, f11, f10, rtz # perform operation
fnmadd.s f23, f1, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x31, 0x8199b51e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x42b2cd70 # load x3 with value 0x42b2cd70
sw x3, 0(x2) # store 0x42b2cd70 in memory
flw f16, 0(x2) # load 0x42b2cd70 from memory into f16
fnmadd.s f31, f14, f30, f16, dyn # perform operation
fnmadd.s f31, f14, f30, f16, rdn # perform operation
fnmadd.s f31, f14, f30, f16, rmm # perform operation
fnmadd.s f31, f14, f30, f16, rne # perform operation
fnmadd.s f31, f14, f30, f16, rtz # perform operation
fnmadd.s f31, f14, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x11, 0xe3d99cff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x3dc3575f # load x3 with value 0x3dc3575f
sw x3, 0(x2) # store 0x3dc3575f in memory
flw f15, 0(x2) # load 0x3dc3575f from memory into f15
fnmadd.s f11, f25, f7, f15, dyn # perform operation
fnmadd.s f11, f25, f7, f15, rdn # perform operation
fnmadd.s f11, f25, f7, f15, rmm # perform operation
fnmadd.s f11, f25, f7, f15, rne # perform operation
fnmadd.s f11, f25, f7, f15, rtz # perform operation
fnmadd.s f11, f25, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f25, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x4, 0x0a5ac8a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x6f82dc64 # load x3 with value 0x6f82dc64
sw x3, 0(x2) # store 0x6f82dc64 in memory
flw f18, 0(x2) # load 0x6f82dc64 from memory into f18
fnmadd.s f4, f26, f30, f18, dyn # perform operation
fnmadd.s f4, f26, f30, f18, rdn # perform operation
fnmadd.s f4, f26, f30, f18, rmm # perform operation
fnmadd.s f4, f26, f30, f18, rne # perform operation
fnmadd.s f4, f26, f30, f18, rtz # perform operation
fnmadd.s f4, f26, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f26, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x10, 0xe508a8f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x412bc8c5 # load x3 with value 0x412bc8c5
sw x3, 0(x2) # store 0x412bc8c5 in memory
flw f25, 0(x2) # load 0x412bc8c5 from memory into f25
fnmadd.s f10, f21, f15, f25, dyn # perform operation
fnmadd.s f10, f21, f15, f25, rdn # perform operation
fnmadd.s f10, f21, f15, f25, rmm # perform operation
fnmadd.s f10, f21, f15, f25, rne # perform operation
fnmadd.s f10, f21, f15, f25, rtz # perform operation
fnmadd.s f10, f21, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x23, 0x10233f44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x5a1f59fd # load x3 with value 0x5a1f59fd
sw x3, 0(x2) # store 0x5a1f59fd in memory
flw f8, 0(x2) # load 0x5a1f59fd from memory into f8
fnmadd.s f23, f28, f27, f8, dyn # perform operation
fnmadd.s f23, f28, f27, f8, rdn # perform operation
fnmadd.s f23, f28, f27, f8, rmm # perform operation
fnmadd.s f23, f28, f27, f8, rne # perform operation
fnmadd.s f23, f28, f27, f8, rtz # perform operation
fnmadd.s f23, f28, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f28, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x24, 0x068f0bfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x191b64fb # load x3 with value 0x191b64fb
sw x3, 0(x2) # store 0x191b64fb in memory
flw f11, 0(x2) # load 0x191b64fb from memory into f11
fnmadd.s f24, f15, f14, f11, dyn # perform operation
fnmadd.s f24, f15, f14, f11, rdn # perform operation
fnmadd.s f24, f15, f14, f11, rmm # perform operation
fnmadd.s f24, f15, f14, f11, rne # perform operation
fnmadd.s f24, f15, f14, f11, rtz # perform operation
fnmadd.s f24, f15, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x23, 0x19762a1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x3becbcd6 # load x3 with value 0x3becbcd6
sw x3, 0(x2) # store 0x3becbcd6 in memory
flw f5, 0(x2) # load 0x3becbcd6 from memory into f5
fnmadd.s f23, f13, f9, f5, dyn # perform operation
fnmadd.s f23, f13, f9, f5, rdn # perform operation
fnmadd.s f23, f13, f9, f5, rmm # perform operation
fnmadd.s f23, f13, f9, f5, rne # perform operation
fnmadd.s f23, f13, f9, f5, rtz # perform operation
fnmadd.s f23, f13, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f13, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x17, 0x1b474f6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x1d19aa6f # load x3 with value 0x1d19aa6f
sw x3, 0(x2) # store 0x1d19aa6f in memory
flw f23, 0(x2) # load 0x1d19aa6f from memory into f23
fnmadd.s f17, f30, f21, f23, dyn # perform operation
fnmadd.s f17, f30, f21, f23, rdn # perform operation
fnmadd.s f17, f30, f21, f23, rmm # perform operation
fnmadd.s f17, f30, f21, f23, rne # perform operation
fnmadd.s f17, f30, f21, f23, rtz # perform operation
fnmadd.s f17, f30, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f30, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x8, 0x591982f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0xcaea03dc # load x3 with value 0xcaea03dc
sw x3, 0(x2) # store 0xcaea03dc in memory
flw f15, 0(x2) # load 0xcaea03dc from memory into f15
fnmadd.s f8, f4, f11, f15, dyn # perform operation
fnmadd.s f8, f4, f11, f15, rdn # perform operation
fnmadd.s f8, f4, f11, f15, rmm # perform operation
fnmadd.s f8, f4, f11, f15, rne # perform operation
fnmadd.s f8, f4, f11, f15, rtz # perform operation
fnmadd.s f8, f4, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f4, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f4, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f4, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f4, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f4, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x11, 0x5f2aa1fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x56d463ae # load x3 with value 0x56d463ae
sw x3, 0(x2) # store 0x56d463ae in memory
flw f10, 0(x2) # load 0x56d463ae from memory into f10
fnmadd.s f11, f6, f18, f10, dyn # perform operation
fnmadd.s f11, f6, f18, f10, rdn # perform operation
fnmadd.s f11, f6, f18, f10, rmm # perform operation
fnmadd.s f11, f6, f18, f10, rne # perform operation
fnmadd.s f11, f6, f18, f10, rtz # perform operation
fnmadd.s f11, f6, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f6, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x26, 0x3c5f7cff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xf20b4188 # load x3 with value 0xf20b4188
sw x3, 0(x2) # store 0xf20b4188 in memory
flw f29, 0(x2) # load 0xf20b4188 from memory into f29
fnmadd.s f26, f13, f31, f29, dyn # perform operation
fnmadd.s f26, f13, f31, f29, rdn # perform operation
fnmadd.s f26, f13, f31, f29, rmm # perform operation
fnmadd.s f26, f13, f31, f29, rne # perform operation
fnmadd.s f26, f13, f31, f29, rtz # perform operation
fnmadd.s f26, f13, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x1, 0xc8571233 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x8389c0f0 # load x3 with value 0x8389c0f0
sw x3, 0(x2) # store 0x8389c0f0 in memory
flw f22, 0(x2) # load 0x8389c0f0 from memory into f22
fnmadd.s f1, f18, f31, f22, dyn # perform operation
fnmadd.s f1, f18, f31, f22, rdn # perform operation
fnmadd.s f1, f18, f31, f22, rmm # perform operation
fnmadd.s f1, f18, f31, f22, rne # perform operation
fnmadd.s f1, f18, f31, f22, rtz # perform operation
fnmadd.s f1, f18, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f18, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x4, 0x1e3d4381 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xa72c8dbe # load x3 with value 0xa72c8dbe
sw x3, 0(x2) # store 0xa72c8dbe in memory
flw f12, 0(x2) # load 0xa72c8dbe from memory into f12
fnmadd.s f4, f23, f18, f12, dyn # perform operation
fnmadd.s f4, f23, f18, f12, rdn # perform operation
fnmadd.s f4, f23, f18, f12, rmm # perform operation
fnmadd.s f4, f23, f18, f12, rne # perform operation
fnmadd.s f4, f23, f18, f12, rtz # perform operation
fnmadd.s f4, f23, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x2, 0x5fd480f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x9a9bf7e2 # load x3 with value 0x9a9bf7e2
sw x3, 0(x2) # store 0x9a9bf7e2 in memory
flw f4, 0(x2) # load 0x9a9bf7e2 from memory into f4
fnmadd.s f2, f23, f18, f4, dyn # perform operation
fnmadd.s f2, f23, f18, f4, rdn # perform operation
fnmadd.s f2, f23, f18, f4, rmm # perform operation
fnmadd.s f2, f23, f18, f4, rne # perform operation
fnmadd.s f2, f23, f18, f4, rtz # perform operation
fnmadd.s f2, f23, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x13, 0x830101cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xb828a8a1 # load x3 with value 0xb828a8a1
sw x3, 0(x2) # store 0xb828a8a1 in memory
flw f1, 0(x2) # load 0xb828a8a1 from memory into f1
fnmadd.s f13, f30, f26, f1, dyn # perform operation
fnmadd.s f13, f30, f26, f1, rdn # perform operation
fnmadd.s f13, f30, f26, f1, rmm # perform operation
fnmadd.s f13, f30, f26, f1, rne # perform operation
fnmadd.s f13, f30, f26, f1, rtz # perform operation
fnmadd.s f13, f30, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f30, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x14, 0xe96bfa78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x8e36ce76 # load x3 with value 0x8e36ce76
sw x3, 0(x2) # store 0x8e36ce76 in memory
flw f16, 0(x2) # load 0x8e36ce76 from memory into f16
fnmadd.s f14, f23, f17, f16, dyn # perform operation
fnmadd.s f14, f23, f17, f16, rdn # perform operation
fnmadd.s f14, f23, f17, f16, rmm # perform operation
fnmadd.s f14, f23, f17, f16, rne # perform operation
fnmadd.s f14, f23, f17, f16, rtz # perform operation
fnmadd.s f14, f23, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x18, 0xd3ed8f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x43fe2b41 # load x3 with value 0x43fe2b41
sw x3, 0(x2) # store 0x43fe2b41 in memory
flw f28, 0(x2) # load 0x43fe2b41 from memory into f28
fnmadd.s f18, f16, f29, f28, dyn # perform operation
fnmadd.s f18, f16, f29, f28, rdn # perform operation
fnmadd.s f18, f16, f29, f28, rmm # perform operation
fnmadd.s f18, f16, f29, f28, rne # perform operation
fnmadd.s f18, f16, f29, f28, rtz # perform operation
fnmadd.s f18, f16, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x20, 0x79d10cf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x14046c9e # load x3 with value 0x14046c9e
sw x3, 0(x2) # store 0x14046c9e in memory
flw f2, 0(x2) # load 0x14046c9e from memory into f2
fnmadd.s f20, f21, f16, f2, dyn # perform operation
fnmadd.s f20, f21, f16, f2, rdn # perform operation
fnmadd.s f20, f21, f16, f2, rmm # perform operation
fnmadd.s f20, f21, f16, f2, rne # perform operation
fnmadd.s f20, f21, f16, f2, rtz # perform operation
fnmadd.s f20, f21, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f21, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f21, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x19, 0x4f634488 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xc53b47b7 # load x3 with value 0xc53b47b7
sw x3, 0(x2) # store 0xc53b47b7 in memory
flw f9, 0(x2) # load 0xc53b47b7 from memory into f9
fnmadd.s f19, f24, f2, f9, dyn # perform operation
fnmadd.s f19, f24, f2, f9, rdn # perform operation
fnmadd.s f19, f24, f2, f9, rmm # perform operation
fnmadd.s f19, f24, f2, f9, rne # perform operation
fnmadd.s f19, f24, f2, f9, rtz # perform operation
fnmadd.s f19, f24, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x22, 0x53d2cb54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x7a79ad78 # load x3 with value 0x7a79ad78
sw x3, 0(x2) # store 0x7a79ad78 in memory
flw f9, 0(x2) # load 0x7a79ad78 from memory into f9
fnmadd.s f22, f26, f1, f9, dyn # perform operation
fnmadd.s f22, f26, f1, f9, rdn # perform operation
fnmadd.s f22, f26, f1, f9, rmm # perform operation
fnmadd.s f22, f26, f1, f9, rne # perform operation
fnmadd.s f22, f26, f1, f9, rtz # perform operation
fnmadd.s f22, f26, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f26, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f26, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f26, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f26, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f26, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x23, 0x29399657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xddde577c # load x3 with value 0xddde577c
sw x3, 0(x2) # store 0xddde577c in memory
flw f22, 0(x2) # load 0xddde577c from memory into f22
fnmadd.s f23, f28, f5, f22, dyn # perform operation
fnmadd.s f23, f28, f5, f22, rdn # perform operation
fnmadd.s f23, f28, f5, f22, rmm # perform operation
fnmadd.s f23, f28, f5, f22, rne # perform operation
fnmadd.s f23, f28, f5, f22, rtz # perform operation
fnmadd.s f23, f28, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f28, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f28, f5, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x20, 0x16e77e7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0xf73185dc # load x3 with value 0xf73185dc
sw x3, 0(x2) # store 0xf73185dc in memory
flw f9, 0(x2) # load 0xf73185dc from memory into f9
fnmadd.s f20, f28, f2, f9, dyn # perform operation
fnmadd.s f20, f28, f2, f9, rdn # perform operation
fnmadd.s f20, f28, f2, f9, rmm # perform operation
fnmadd.s f20, f28, f2, f9, rne # perform operation
fnmadd.s f20, f28, f2, f9, rtz # perform operation
fnmadd.s f20, f28, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x18, 0x284a914f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x7c5a6e94 # load x3 with value 0x7c5a6e94
sw x3, 0(x2) # store 0x7c5a6e94 in memory
flw f8, 0(x2) # load 0x7c5a6e94 from memory into f8
fnmadd.s f18, f5, f24, f8, dyn # perform operation
fnmadd.s f18, f5, f24, f8, rdn # perform operation
fnmadd.s f18, f5, f24, f8, rmm # perform operation
fnmadd.s f18, f5, f24, f8, rne # perform operation
fnmadd.s f18, f5, f24, f8, rtz # perform operation
fnmadd.s f18, f5, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f5, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f5, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f5, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f5, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f5, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x7, 0x739d3d71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0xbbf177a9 # load x3 with value 0xbbf177a9
sw x3, 0(x2) # store 0xbbf177a9 in memory
flw f30, 0(x2) # load 0xbbf177a9 from memory into f30
fnmadd.s f7, f27, f10, f30, dyn # perform operation
fnmadd.s f7, f27, f10, f30, rdn # perform operation
fnmadd.s f7, f27, f10, f30, rmm # perform operation
fnmadd.s f7, f27, f10, f30, rne # perform operation
fnmadd.s f7, f27, f10, f30, rtz # perform operation
fnmadd.s f7, f27, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f10, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x7, 0x936c4574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x13505747 # load x3 with value 0x13505747
sw x3, 0(x2) # store 0x13505747 in memory
flw f22, 0(x2) # load 0x13505747 from memory into f22
fnmadd.s f7, f19, f1, f22, dyn # perform operation
fnmadd.s f7, f19, f1, f22, rdn # perform operation
fnmadd.s f7, f19, f1, f22, rmm # perform operation
fnmadd.s f7, f19, f1, f22, rne # perform operation
fnmadd.s f7, f19, f1, f22, rtz # perform operation
fnmadd.s f7, f19, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x19, 0xc14cc56e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x422e5fed # load x3 with value 0x422e5fed
sw x3, 0(x2) # store 0x422e5fed in memory
flw f25, 0(x2) # load 0x422e5fed from memory into f25
fnmadd.s f19, f17, f11, f25, dyn # perform operation
fnmadd.s f19, f17, f11, f25, rdn # perform operation
fnmadd.s f19, f17, f11, f25, rmm # perform operation
fnmadd.s f19, f17, f11, f25, rne # perform operation
fnmadd.s f19, f17, f11, f25, rtz # perform operation
fnmadd.s f19, f17, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f17, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x28, 0x82e0ce8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x1ce9a5e5 # load x3 with value 0x1ce9a5e5
sw x3, 0(x2) # store 0x1ce9a5e5 in memory
flw f27, 0(x2) # load 0x1ce9a5e5 from memory into f27
fnmadd.s f28, f2, f11, f27, dyn # perform operation
fnmadd.s f28, f2, f11, f27, rdn # perform operation
fnmadd.s f28, f2, f11, f27, rmm # perform operation
fnmadd.s f28, f2, f11, f27, rne # perform operation
fnmadd.s f28, f2, f11, f27, rtz # perform operation
fnmadd.s f28, f2, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f2, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x11, 0x6999567c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x86b1b267 # load x3 with value 0x86b1b267
sw x3, 0(x2) # store 0x86b1b267 in memory
flw f24, 0(x2) # load 0x86b1b267 from memory into f24
fnmadd.s f11, f8, f12, f24, dyn # perform operation
fnmadd.s f11, f8, f12, f24, rdn # perform operation
fnmadd.s f11, f8, f12, f24, rmm # perform operation
fnmadd.s f11, f8, f12, f24, rne # perform operation
fnmadd.s f11, f8, f12, f24, rtz # perform operation
fnmadd.s f11, f8, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x14, 0x81a3ff93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x7f9edab3 # load x3 with value 0x7f9edab3
sw x3, 0(x2) # store 0x7f9edab3 in memory
flw f27, 0(x2) # load 0x7f9edab3 from memory into f27
fnmadd.s f14, f18, f16, f27, dyn # perform operation
fnmadd.s f14, f18, f16, f27, rdn # perform operation
fnmadd.s f14, f18, f16, f27, rmm # perform operation
fnmadd.s f14, f18, f16, f27, rne # perform operation
fnmadd.s f14, f18, f16, f27, rtz # perform operation
fnmadd.s f14, f18, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x9, 0x9d3ef49f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x8c1bcef2 # load x3 with value 0x8c1bcef2
sw x3, 0(x2) # store 0x8c1bcef2 in memory
flw f24, 0(x2) # load 0x8c1bcef2 from memory into f24
fnmadd.s f9, f12, f7, f24, dyn # perform operation
fnmadd.s f9, f12, f7, f24, rdn # perform operation
fnmadd.s f9, f12, f7, f24, rmm # perform operation
fnmadd.s f9, f12, f7, f24, rne # perform operation
fnmadd.s f9, f12, f7, f24, rtz # perform operation
fnmadd.s f9, f12, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f12, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x12, 0x773ac7a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x9fa60cb7 # load x3 with value 0x9fa60cb7
sw x3, 0(x2) # store 0x9fa60cb7 in memory
flw f5, 0(x2) # load 0x9fa60cb7 from memory into f5
fnmadd.s f12, f2, f25, f5, dyn # perform operation
fnmadd.s f12, f2, f25, f5, rdn # perform operation
fnmadd.s f12, f2, f25, f5, rmm # perform operation
fnmadd.s f12, f2, f25, f5, rne # perform operation
fnmadd.s f12, f2, f25, f5, rtz # perform operation
fnmadd.s f12, f2, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x10, 0xd7f325c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x53dc3774 # load x3 with value 0x53dc3774
sw x3, 0(x2) # store 0x53dc3774 in memory
flw f9, 0(x2) # load 0x53dc3774 from memory into f9
fnmadd.s f10, f19, f21, f9, dyn # perform operation
fnmadd.s f10, f19, f21, f9, rdn # perform operation
fnmadd.s f10, f19, f21, f9, rmm # perform operation
fnmadd.s f10, f19, f21, f9, rne # perform operation
fnmadd.s f10, f19, f21, f9, rtz # perform operation
fnmadd.s f10, f19, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f19, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f19, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x18, 0xc9a8dfb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x8188a053 # load x3 with value 0x8188a053
sw x3, 0(x2) # store 0x8188a053 in memory
flw f28, 0(x2) # load 0x8188a053 from memory into f28
fnmadd.s f18, f22, f5, f28, dyn # perform operation
fnmadd.s f18, f22, f5, f28, rdn # perform operation
fnmadd.s f18, f22, f5, f28, rmm # perform operation
fnmadd.s f18, f22, f5, f28, rne # perform operation
fnmadd.s f18, f22, f5, f28, rtz # perform operation
fnmadd.s f18, f22, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f22, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x19, 0x3ccec5fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x0f0e5908 # load x3 with value 0x0f0e5908
sw x3, 0(x2) # store 0x0f0e5908 in memory
flw f24, 0(x2) # load 0x0f0e5908 from memory into f24
fnmadd.s f19, f6, f9, f24, dyn # perform operation
fnmadd.s f19, f6, f9, f24, rdn # perform operation
fnmadd.s f19, f6, f9, f24, rmm # perform operation
fnmadd.s f19, f6, f9, f24, rne # perform operation
fnmadd.s f19, f6, f9, f24, rtz # perform operation
fnmadd.s f19, f6, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x20, 0x777956af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xf916fafa # load x3 with value 0xf916fafa
sw x3, 0(x2) # store 0xf916fafa in memory
flw f3, 0(x2) # load 0xf916fafa from memory into f3
fnmadd.s f20, f17, f4, f3, dyn # perform operation
fnmadd.s f20, f17, f4, f3, rdn # perform operation
fnmadd.s f20, f17, f4, f3, rmm # perform operation
fnmadd.s f20, f17, f4, f3, rne # perform operation
fnmadd.s f20, f17, f4, f3, rtz # perform operation
fnmadd.s f20, f17, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f17, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x16, 0x365c090c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x6bb05387 # load x3 with value 0x6bb05387
sw x3, 0(x2) # store 0x6bb05387 in memory
flw f25, 0(x2) # load 0x6bb05387 from memory into f25
fnmadd.s f16, f19, f5, f25, dyn # perform operation
fnmadd.s f16, f19, f5, f25, rdn # perform operation
fnmadd.s f16, f19, f5, f25, rmm # perform operation
fnmadd.s f16, f19, f5, f25, rne # perform operation
fnmadd.s f16, f19, f5, f25, rtz # perform operation
fnmadd.s f16, f19, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x1, 0x292eb244 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xfa83be4f # load x3 with value 0xfa83be4f
sw x3, 0(x2) # store 0xfa83be4f in memory
flw f7, 0(x2) # load 0xfa83be4f from memory into f7
fnmadd.s f1, f6, f10, f7, dyn # perform operation
fnmadd.s f1, f6, f10, f7, rdn # perform operation
fnmadd.s f1, f6, f10, f7, rmm # perform operation
fnmadd.s f1, f6, f10, f7, rne # perform operation
fnmadd.s f1, f6, f10, f7, rtz # perform operation
fnmadd.s f1, f6, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x12, 0xc3c9315a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x520b40fd # load x3 with value 0x520b40fd
sw x3, 0(x2) # store 0x520b40fd in memory
flw f26, 0(x2) # load 0x520b40fd from memory into f26
fnmadd.s f12, f6, f15, f26, dyn # perform operation
fnmadd.s f12, f6, f15, f26, rdn # perform operation
fnmadd.s f12, f6, f15, f26, rmm # perform operation
fnmadd.s f12, f6, f15, f26, rne # perform operation
fnmadd.s f12, f6, f15, f26, rtz # perform operation
fnmadd.s f12, f6, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f6, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x1, 0xbd857954 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0xb43e7e70 # load x3 with value 0xb43e7e70
sw x3, 0(x2) # store 0xb43e7e70 in memory
flw f26, 0(x2) # load 0xb43e7e70 from memory into f26
fnmadd.s f1, f13, f3, f26, dyn # perform operation
fnmadd.s f1, f13, f3, f26, rdn # perform operation
fnmadd.s f1, f13, f3, f26, rmm # perform operation
fnmadd.s f1, f13, f3, f26, rne # perform operation
fnmadd.s f1, f13, f3, f26, rtz # perform operation
fnmadd.s f1, f13, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x3, 0xe02bf63d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0xead56c01 # load x3 with value 0xead56c01
sw x3, 0(x2) # store 0xead56c01 in memory
flw f1, 0(x2) # load 0xead56c01 from memory into f1
fnmadd.s f3, f30, f21, f1, dyn # perform operation
fnmadd.s f3, f30, f21, f1, rdn # perform operation
fnmadd.s f3, f30, f21, f1, rmm # perform operation
fnmadd.s f3, f30, f21, f1, rne # perform operation
fnmadd.s f3, f30, f21, f1, rtz # perform operation
fnmadd.s f3, f30, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f21, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x2, 0xba122305 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xfb4929a3 # load x3 with value 0xfb4929a3
sw x3, 0(x2) # store 0xfb4929a3 in memory
flw f14, 0(x2) # load 0xfb4929a3 from memory into f14
fnmadd.s f2, f25, f31, f14, dyn # perform operation
fnmadd.s f2, f25, f31, f14, rdn # perform operation
fnmadd.s f2, f25, f31, f14, rmm # perform operation
fnmadd.s f2, f25, f31, f14, rne # perform operation
fnmadd.s f2, f25, f31, f14, rtz # perform operation
fnmadd.s f2, f25, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f25, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x9, 0x1a1f8821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0xe9ff52e2 # load x3 with value 0xe9ff52e2
sw x3, 0(x2) # store 0xe9ff52e2 in memory
flw f29, 0(x2) # load 0xe9ff52e2 from memory into f29
fnmadd.s f9, f5, f18, f29, dyn # perform operation
fnmadd.s f9, f5, f18, f29, rdn # perform operation
fnmadd.s f9, f5, f18, f29, rmm # perform operation
fnmadd.s f9, f5, f18, f29, rne # perform operation
fnmadd.s f9, f5, f18, f29, rtz # perform operation
fnmadd.s f9, f5, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f5, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x28, 0x4c9aef43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x3ec22aca # load x3 with value 0x3ec22aca
sw x3, 0(x2) # store 0x3ec22aca in memory
flw f1, 0(x2) # load 0x3ec22aca from memory into f1
fnmadd.s f28, f25, f7, f1, dyn # perform operation
fnmadd.s f28, f25, f7, f1, rdn # perform operation
fnmadd.s f28, f25, f7, f1, rmm # perform operation
fnmadd.s f28, f25, f7, f1, rne # perform operation
fnmadd.s f28, f25, f7, f1, rtz # perform operation
fnmadd.s f28, f25, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f25, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x28, 0xe70ab7f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xb3259fcf # load x3 with value 0xb3259fcf
sw x3, 0(x2) # store 0xb3259fcf in memory
flw f8, 0(x2) # load 0xb3259fcf from memory into f8
fnmadd.s f28, f15, f18, f8, dyn # perform operation
fnmadd.s f28, f15, f18, f8, rdn # perform operation
fnmadd.s f28, f15, f18, f8, rmm # perform operation
fnmadd.s f28, f15, f18, f8, rne # perform operation
fnmadd.s f28, f15, f18, f8, rtz # perform operation
fnmadd.s f28, f15, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f15, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f15, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f15, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f15, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f15, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x21, 0x0629f61d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0xe70a3f81 # load x3 with value 0xe70a3f81
sw x3, 0(x2) # store 0xe70a3f81 in memory
flw f14, 0(x2) # load 0xe70a3f81 from memory into f14
fnmadd.s f21, f20, f27, f14, dyn # perform operation
fnmadd.s f21, f20, f27, f14, rdn # perform operation
fnmadd.s f21, f20, f27, f14, rmm # perform operation
fnmadd.s f21, f20, f27, f14, rne # perform operation
fnmadd.s f21, f20, f27, f14, rtz # perform operation
fnmadd.s f21, f20, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x29, 0x1190b54b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xd227300a # load x3 with value 0xd227300a
sw x3, 0(x2) # store 0xd227300a in memory
flw f30, 0(x2) # load 0xd227300a from memory into f30
fnmadd.s f29, f15, f5, f30, dyn # perform operation
fnmadd.s f29, f15, f5, f30, rdn # perform operation
fnmadd.s f29, f15, f5, f30, rmm # perform operation
fnmadd.s f29, f15, f5, f30, rne # perform operation
fnmadd.s f29, f15, f5, f30, rtz # perform operation
fnmadd.s f29, f15, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x5, 0xb2e81221 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0xdcc1457f # load x3 with value 0xdcc1457f
sw x3, 0(x2) # store 0xdcc1457f in memory
flw f31, 0(x2) # load 0xdcc1457f from memory into f31
fnmadd.s f5, f17, f7, f31, dyn # perform operation
fnmadd.s f5, f17, f7, f31, rdn # perform operation
fnmadd.s f5, f17, f7, f31, rmm # perform operation
fnmadd.s f5, f17, f7, f31, rne # perform operation
fnmadd.s f5, f17, f7, f31, rtz # perform operation
fnmadd.s f5, f17, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x14, 0x04ae53f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0xd417f7b5 # load x3 with value 0xd417f7b5
sw x3, 0(x2) # store 0xd417f7b5 in memory
flw f29, 0(x2) # load 0xd417f7b5 from memory into f29
fnmadd.s f14, f30, f11, f29, dyn # perform operation
fnmadd.s f14, f30, f11, f29, rdn # perform operation
fnmadd.s f14, f30, f11, f29, rmm # perform operation
fnmadd.s f14, f30, f11, f29, rne # perform operation
fnmadd.s f14, f30, f11, f29, rtz # perform operation
fnmadd.s f14, f30, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f30, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f30, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f30, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f30, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f30, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x20, 0x30a49259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xf0609487 # load x3 with value 0xf0609487
sw x3, 0(x2) # store 0xf0609487 in memory
flw f17, 0(x2) # load 0xf0609487 from memory into f17
fnmadd.s f20, f7, f18, f17, dyn # perform operation
fnmadd.s f20, f7, f18, f17, rdn # perform operation
fnmadd.s f20, f7, f18, f17, rmm # perform operation
fnmadd.s f20, f7, f18, f17, rne # perform operation
fnmadd.s f20, f7, f18, f17, rtz # perform operation
fnmadd.s f20, f7, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f7, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x7, 0xdd147754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x4430ac45 # load x3 with value 0x4430ac45
sw x3, 0(x2) # store 0x4430ac45 in memory
flw f22, 0(x2) # load 0x4430ac45 from memory into f22
fnmadd.s f7, f19, f8, f22, dyn # perform operation
fnmadd.s f7, f19, f8, f22, rdn # perform operation
fnmadd.s f7, f19, f8, f22, rmm # perform operation
fnmadd.s f7, f19, f8, f22, rne # perform operation
fnmadd.s f7, f19, f8, f22, rtz # perform operation
fnmadd.s f7, f19, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x28, 0xd5e8862a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xd3189a0d # load x3 with value 0xd3189a0d
sw x3, 0(x2) # store 0xd3189a0d in memory
flw f2, 0(x2) # load 0xd3189a0d from memory into f2
fnmadd.s f28, f7, f20, f2, dyn # perform operation
fnmadd.s f28, f7, f20, f2, rdn # perform operation
fnmadd.s f28, f7, f20, f2, rmm # perform operation
fnmadd.s f28, f7, f20, f2, rne # perform operation
fnmadd.s f28, f7, f20, f2, rtz # perform operation
fnmadd.s f28, f7, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f7, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x27, 0x6d7b9dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x030a77e7 # load x3 with value 0x030a77e7
sw x3, 0(x2) # store 0x030a77e7 in memory
flw f24, 0(x2) # load 0x030a77e7 from memory into f24
fnmadd.s f27, f21, f7, f24, dyn # perform operation
fnmadd.s f27, f21, f7, f24, rdn # perform operation
fnmadd.s f27, f21, f7, f24, rmm # perform operation
fnmadd.s f27, f21, f7, f24, rne # perform operation
fnmadd.s f27, f21, f7, f24, rtz # perform operation
fnmadd.s f27, f21, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f21, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f21, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x30, 0x332f9554 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x35c238a3 # load x3 with value 0x35c238a3
sw x3, 0(x2) # store 0x35c238a3 in memory
flw f4, 0(x2) # load 0x35c238a3 from memory into f4
fnmadd.s f30, f6, f7, f4, dyn # perform operation
fnmadd.s f30, f6, f7, f4, rdn # perform operation
fnmadd.s f30, f6, f7, f4, rmm # perform operation
fnmadd.s f30, f6, f7, f4, rne # perform operation
fnmadd.s f30, f6, f7, f4, rtz # perform operation
fnmadd.s f30, f6, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x10, 0x1c24875a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0xc3264f97 # load x3 with value 0xc3264f97
sw x3, 0(x2) # store 0xc3264f97 in memory
flw f18, 0(x2) # load 0xc3264f97 from memory into f18
fnmadd.s f10, f27, f19, f18, dyn # perform operation
fnmadd.s f10, f27, f19, f18, rdn # perform operation
fnmadd.s f10, f27, f19, f18, rmm # perform operation
fnmadd.s f10, f27, f19, f18, rne # perform operation
fnmadd.s f10, f27, f19, f18, rtz # perform operation
fnmadd.s f10, f27, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f27, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x4, 0xdbb77759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0xf23fb581 # load x3 with value 0xf23fb581
sw x3, 0(x2) # store 0xf23fb581 in memory
flw f3, 0(x2) # load 0xf23fb581 from memory into f3
fnmadd.s f4, f11, f26, f3, dyn # perform operation
fnmadd.s f4, f11, f26, f3, rdn # perform operation
fnmadd.s f4, f11, f26, f3, rmm # perform operation
fnmadd.s f4, f11, f26, f3, rne # perform operation
fnmadd.s f4, f11, f26, f3, rtz # perform operation
fnmadd.s f4, f11, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f11, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x5, 0x5f63bba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0xe82cf1fc # load x3 with value 0xe82cf1fc
sw x3, 0(x2) # store 0xe82cf1fc in memory
flw f3, 0(x2) # load 0xe82cf1fc from memory into f3
fnmadd.s f5, f23, f19, f3, dyn # perform operation
fnmadd.s f5, f23, f19, f3, rdn # perform operation
fnmadd.s f5, f23, f19, f3, rmm # perform operation
fnmadd.s f5, f23, f19, f3, rne # perform operation
fnmadd.s f5, f23, f19, f3, rtz # perform operation
fnmadd.s f5, f23, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f23, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f23, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f23, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f23, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f23, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x12, 0x58898dd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x4c26a108 # load x3 with value 0x4c26a108
sw x3, 0(x2) # store 0x4c26a108 in memory
flw f9, 0(x2) # load 0x4c26a108 from memory into f9
fnmadd.s f12, f31, f20, f9, dyn # perform operation
fnmadd.s f12, f31, f20, f9, rdn # perform operation
fnmadd.s f12, f31, f20, f9, rmm # perform operation
fnmadd.s f12, f31, f20, f9, rne # perform operation
fnmadd.s f12, f31, f20, f9, rtz # perform operation
fnmadd.s f12, f31, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f31, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x25, 0x74ff094f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x2e08b0f2 # load x3 with value 0x2e08b0f2
sw x3, 0(x2) # store 0x2e08b0f2 in memory
flw f10, 0(x2) # load 0x2e08b0f2 from memory into f10
fnmadd.s f25, f6, f30, f10, dyn # perform operation
fnmadd.s f25, f6, f30, f10, rdn # perform operation
fnmadd.s f25, f6, f30, f10, rmm # perform operation
fnmadd.s f25, f6, f30, f10, rne # perform operation
fnmadd.s f25, f6, f30, f10, rtz # perform operation
fnmadd.s f25, f6, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x2, 0xdf7a3bd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xd42033f3 # load x3 with value 0xd42033f3
sw x3, 0(x2) # store 0xd42033f3 in memory
flw f14, 0(x2) # load 0xd42033f3 from memory into f14
fnmadd.s f2, f4, f9, f14, dyn # perform operation
fnmadd.s f2, f4, f9, f14, rdn # perform operation
fnmadd.s f2, f4, f9, f14, rmm # perform operation
fnmadd.s f2, f4, f9, f14, rne # perform operation
fnmadd.s f2, f4, f9, f14, rtz # perform operation
fnmadd.s f2, f4, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f4, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x20, 0xc600be77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x32e7e3f2 # load x3 with value 0x32e7e3f2
sw x3, 0(x2) # store 0x32e7e3f2 in memory
flw f8, 0(x2) # load 0x32e7e3f2 from memory into f8
fnmadd.s f20, f6, f24, f8, dyn # perform operation
fnmadd.s f20, f6, f24, f8, rdn # perform operation
fnmadd.s f20, f6, f24, f8, rmm # perform operation
fnmadd.s f20, f6, f24, f8, rne # perform operation
fnmadd.s f20, f6, f24, f8, rtz # perform operation
fnmadd.s f20, f6, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x23, 0xb1e75428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0xf55346ab # load x3 with value 0xf55346ab
sw x3, 0(x2) # store 0xf55346ab in memory
flw f15, 0(x2) # load 0xf55346ab from memory into f15
fnmadd.s f23, f11, f20, f15, dyn # perform operation
fnmadd.s f23, f11, f20, f15, rdn # perform operation
fnmadd.s f23, f11, f20, f15, rmm # perform operation
fnmadd.s f23, f11, f20, f15, rne # perform operation
fnmadd.s f23, f11, f20, f15, rtz # perform operation
fnmadd.s f23, f11, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f11, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f11, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f11, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f11, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f11, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x7, 0xf355bcdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0xe57f2271 # load x3 with value 0xe57f2271
sw x3, 0(x2) # store 0xe57f2271 in memory
flw f20, 0(x2) # load 0xe57f2271 from memory into f20
fnmadd.s f7, f19, f1, f20, dyn # perform operation
fnmadd.s f7, f19, f1, f20, rdn # perform operation
fnmadd.s f7, f19, f1, f20, rmm # perform operation
fnmadd.s f7, f19, f1, f20, rne # perform operation
fnmadd.s f7, f19, f1, f20, rtz # perform operation
fnmadd.s f7, f19, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x7, 0xfd1a539a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x33a93cf2 # load x3 with value 0x33a93cf2
sw x3, 0(x2) # store 0x33a93cf2 in memory
flw f1, 0(x2) # load 0x33a93cf2 from memory into f1
fnmadd.s f7, f30, f18, f1, dyn # perform operation
fnmadd.s f7, f30, f18, f1, rdn # perform operation
fnmadd.s f7, f30, f18, f1, rmm # perform operation
fnmadd.s f7, f30, f18, f1, rne # perform operation
fnmadd.s f7, f30, f18, f1, rtz # perform operation
fnmadd.s f7, f30, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x2, 0x46de1520 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x2d9c15cd # load x3 with value 0x2d9c15cd
sw x3, 0(x2) # store 0x2d9c15cd in memory
flw f23, 0(x2) # load 0x2d9c15cd from memory into f23
fnmadd.s f2, f8, f13, f23, dyn # perform operation
fnmadd.s f2, f8, f13, f23, rdn # perform operation
fnmadd.s f2, f8, f13, f23, rmm # perform operation
fnmadd.s f2, f8, f13, f23, rne # perform operation
fnmadd.s f2, f8, f13, f23, rtz # perform operation
fnmadd.s f2, f8, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x11, 0x81b531eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x479f71f9 # load x3 with value 0x479f71f9
sw x3, 0(x2) # store 0x479f71f9 in memory
flw f8, 0(x2) # load 0x479f71f9 from memory into f8
fnmadd.s f11, f21, f22, f8, dyn # perform operation
fnmadd.s f11, f21, f22, f8, rdn # perform operation
fnmadd.s f11, f21, f22, f8, rmm # perform operation
fnmadd.s f11, f21, f22, f8, rne # perform operation
fnmadd.s f11, f21, f22, f8, rtz # perform operation
fnmadd.s f11, f21, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f21, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x15, 0x763ece28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0x96d264c1 # load x3 with value 0x96d264c1
sw x3, 0(x2) # store 0x96d264c1 in memory
flw f4, 0(x2) # load 0x96d264c1 from memory into f4
fnmadd.s f15, f10, f2, f4, dyn # perform operation
fnmadd.s f15, f10, f2, f4, rdn # perform operation
fnmadd.s f15, f10, f2, f4, rmm # perform operation
fnmadd.s f15, f10, f2, f4, rne # perform operation
fnmadd.s f15, f10, f2, f4, rtz # perform operation
fnmadd.s f15, f10, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f10, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x3, 0x601703cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xaf004595 # load x3 with value 0xaf004595
sw x3, 0(x2) # store 0xaf004595 in memory
flw f16, 0(x2) # load 0xaf004595 from memory into f16
fnmadd.s f3, f2, f27, f16, dyn # perform operation
fnmadd.s f3, f2, f27, f16, rdn # perform operation
fnmadd.s f3, f2, f27, f16, rmm # perform operation
fnmadd.s f3, f2, f27, f16, rne # perform operation
fnmadd.s f3, f2, f27, f16, rtz # perform operation
fnmadd.s f3, f2, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f2, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x2, 0x8c57849d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0xf8f642a9 # load x3 with value 0xf8f642a9
sw x3, 0(x2) # store 0xf8f642a9 in memory
flw f8, 0(x2) # load 0xf8f642a9 from memory into f8
fnmadd.s f2, f6, f3, f8, dyn # perform operation
fnmadd.s f2, f6, f3, f8, rdn # perform operation
fnmadd.s f2, f6, f3, f8, rmm # perform operation
fnmadd.s f2, f6, f3, f8, rne # perform operation
fnmadd.s f2, f6, f3, f8, rtz # perform operation
fnmadd.s f2, f6, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x12, 0x0dd30bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0xea2bc51d # load x3 with value 0xea2bc51d
sw x3, 0(x2) # store 0xea2bc51d in memory
flw f3, 0(x2) # load 0xea2bc51d from memory into f3
fnmadd.s f12, f27, f22, f3, dyn # perform operation
fnmadd.s f12, f27, f22, f3, rdn # perform operation
fnmadd.s f12, f27, f22, f3, rmm # perform operation
fnmadd.s f12, f27, f22, f3, rne # perform operation
fnmadd.s f12, f27, f22, f3, rtz # perform operation
fnmadd.s f12, f27, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f27, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x21, 0xeccfd7a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x46618b4b # load x3 with value 0x46618b4b
sw x3, 0(x2) # store 0x46618b4b in memory
flw f13, 0(x2) # load 0x46618b4b from memory into f13
fnmadd.s f21, f14, f3, f13, dyn # perform operation
fnmadd.s f21, f14, f3, f13, rdn # perform operation
fnmadd.s f21, f14, f3, f13, rmm # perform operation
fnmadd.s f21, f14, f3, f13, rne # perform operation
fnmadd.s f21, f14, f3, f13, rtz # perform operation
fnmadd.s f21, f14, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x17, 0xc42f5c27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x4ebe9ee5 # load x3 with value 0x4ebe9ee5
sw x3, 0(x2) # store 0x4ebe9ee5 in memory
flw f24, 0(x2) # load 0x4ebe9ee5 from memory into f24
fnmadd.s f17, f20, f23, f24, dyn # perform operation
fnmadd.s f17, f20, f23, f24, rdn # perform operation
fnmadd.s f17, f20, f23, f24, rmm # perform operation
fnmadd.s f17, f20, f23, f24, rne # perform operation
fnmadd.s f17, f20, f23, f24, rtz # perform operation
fnmadd.s f17, f20, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x15, 0xd2af929c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x992fb545 # load x3 with value 0x992fb545
sw x3, 0(x2) # store 0x992fb545 in memory
flw f23, 0(x2) # load 0x992fb545 from memory into f23
fnmadd.s f15, f14, f18, f23, dyn # perform operation
fnmadd.s f15, f14, f18, f23, rdn # perform operation
fnmadd.s f15, f14, f18, f23, rmm # perform operation
fnmadd.s f15, f14, f18, f23, rne # perform operation
fnmadd.s f15, f14, f18, f23, rtz # perform operation
fnmadd.s f15, f14, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f14, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x18, 0xea4e0542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x9c981127 # load x3 with value 0x9c981127
sw x3, 0(x2) # store 0x9c981127 in memory
flw f10, 0(x2) # load 0x9c981127 from memory into f10
fnmadd.s f18, f14, f23, f10, dyn # perform operation
fnmadd.s f18, f14, f23, f10, rdn # perform operation
fnmadd.s f18, f14, f23, f10, rmm # perform operation
fnmadd.s f18, f14, f23, f10, rne # perform operation
fnmadd.s f18, f14, f23, f10, rtz # perform operation
fnmadd.s f18, f14, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x14, 0x70805140 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0xc64b2132 # load x3 with value 0xc64b2132
sw x3, 0(x2) # store 0xc64b2132 in memory
flw f18, 0(x2) # load 0xc64b2132 from memory into f18
fnmadd.s f14, f1, f6, f18, dyn # perform operation
fnmadd.s f14, f1, f6, f18, rdn # perform operation
fnmadd.s f14, f1, f6, f18, rmm # perform operation
fnmadd.s f14, f1, f6, f18, rne # perform operation
fnmadd.s f14, f1, f6, f18, rtz # perform operation
fnmadd.s f14, f1, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x21, 0xc0388058 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x750d6339 # load x3 with value 0x750d6339
sw x3, 0(x2) # store 0x750d6339 in memory
flw f15, 0(x2) # load 0x750d6339 from memory into f15
fnmadd.s f21, f7, f13, f15, dyn # perform operation
fnmadd.s f21, f7, f13, f15, rdn # perform operation
fnmadd.s f21, f7, f13, f15, rmm # perform operation
fnmadd.s f21, f7, f13, f15, rne # perform operation
fnmadd.s f21, f7, f13, f15, rtz # perform operation
fnmadd.s f21, f7, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f7, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x29, 0x0ef611a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x92ddd79e # load x3 with value 0x92ddd79e
sw x3, 0(x2) # store 0x92ddd79e in memory
flw f1, 0(x2) # load 0x92ddd79e from memory into f1
fnmadd.s f29, f4, f15, f1, dyn # perform operation
fnmadd.s f29, f4, f15, f1, rdn # perform operation
fnmadd.s f29, f4, f15, f1, rmm # perform operation
fnmadd.s f29, f4, f15, f1, rne # perform operation
fnmadd.s f29, f4, f15, f1, rtz # perform operation
fnmadd.s f29, f4, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f4, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f4, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f4, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f4, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f4, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x24, 0xa61b039e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xdce807a6 # load x3 with value 0xdce807a6
sw x3, 0(x2) # store 0xdce807a6 in memory
flw f8, 0(x2) # load 0xdce807a6 from memory into f8
fnmadd.s f24, f3, f17, f8, dyn # perform operation
fnmadd.s f24, f3, f17, f8, rdn # perform operation
fnmadd.s f24, f3, f17, f8, rmm # perform operation
fnmadd.s f24, f3, f17, f8, rne # perform operation
fnmadd.s f24, f3, f17, f8, rtz # perform operation
fnmadd.s f24, f3, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f3, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f3, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x15, 0x651ebc72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x6696c879 # load x3 with value 0x6696c879
sw x3, 0(x2) # store 0x6696c879 in memory
flw f4, 0(x2) # load 0x6696c879 from memory into f4
fnmadd.s f15, f26, f20, f4, dyn # perform operation
fnmadd.s f15, f26, f20, f4, rdn # perform operation
fnmadd.s f15, f26, f20, f4, rmm # perform operation
fnmadd.s f15, f26, f20, f4, rne # perform operation
fnmadd.s f15, f26, f20, f4, rtz # perform operation
fnmadd.s f15, f26, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x20, 0x10ec2159 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x174cc8e0 # load x3 with value 0x174cc8e0
sw x3, 0(x2) # store 0x174cc8e0 in memory
flw f3, 0(x2) # load 0x174cc8e0 from memory into f3
fnmadd.s f20, f28, f6, f3, dyn # perform operation
fnmadd.s f20, f28, f6, f3, rdn # perform operation
fnmadd.s f20, f28, f6, f3, rmm # perform operation
fnmadd.s f20, f28, f6, f3, rne # perform operation
fnmadd.s f20, f28, f6, f3, rtz # perform operation
fnmadd.s f20, f28, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x17, 0x1f7826d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x8389cb0a # load x3 with value 0x8389cb0a
sw x3, 0(x2) # store 0x8389cb0a in memory
flw f26, 0(x2) # load 0x8389cb0a from memory into f26
fnmadd.s f17, f21, f12, f26, dyn # perform operation
fnmadd.s f17, f21, f12, f26, rdn # perform operation
fnmadd.s f17, f21, f12, f26, rmm # perform operation
fnmadd.s f17, f21, f12, f26, rne # perform operation
fnmadd.s f17, f21, f12, f26, rtz # perform operation
fnmadd.s f17, f21, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f21, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x7, 0x5e9331db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xfae27edb # load x3 with value 0xfae27edb
sw x3, 0(x2) # store 0xfae27edb in memory
flw f16, 0(x2) # load 0xfae27edb from memory into f16
fnmadd.s f7, f29, f13, f16, dyn # perform operation
fnmadd.s f7, f29, f13, f16, rdn # perform operation
fnmadd.s f7, f29, f13, f16, rmm # perform operation
fnmadd.s f7, f29, f13, f16, rne # perform operation
fnmadd.s f7, f29, f13, f16, rtz # perform operation
fnmadd.s f7, f29, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f29, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x6, 0x071cfb11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x60687d1d # load x3 with value 0x60687d1d
sw x3, 0(x2) # store 0x60687d1d in memory
flw f22, 0(x2) # load 0x60687d1d from memory into f22
fnmadd.s f6, f15, f14, f22, dyn # perform operation
fnmadd.s f6, f15, f14, f22, rdn # perform operation
fnmadd.s f6, f15, f14, f22, rmm # perform operation
fnmadd.s f6, f15, f14, f22, rne # perform operation
fnmadd.s f6, f15, f14, f22, rtz # perform operation
fnmadd.s f6, f15, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x23, 0xd7552232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0xc7379f10 # load x3 with value 0xc7379f10
sw x3, 0(x2) # store 0xc7379f10 in memory
flw f2, 0(x2) # load 0xc7379f10 from memory into f2
fnmadd.s f23, f8, f12, f2, dyn # perform operation
fnmadd.s f23, f8, f12, f2, rdn # perform operation
fnmadd.s f23, f8, f12, f2, rmm # perform operation
fnmadd.s f23, f8, f12, f2, rne # perform operation
fnmadd.s f23, f8, f12, f2, rtz # perform operation
fnmadd.s f23, f8, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f8, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x15, 0xf3186590 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xa4032aa6 # load x3 with value 0xa4032aa6
sw x3, 0(x2) # store 0xa4032aa6 in memory
flw f22, 0(x2) # load 0xa4032aa6 from memory into f22
fnmadd.s f15, f13, f1, f22, dyn # perform operation
fnmadd.s f15, f13, f1, f22, rdn # perform operation
fnmadd.s f15, f13, f1, f22, rmm # perform operation
fnmadd.s f15, f13, f1, f22, rne # perform operation
fnmadd.s f15, f13, f1, f22, rtz # perform operation
fnmadd.s f15, f13, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f13, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x22, 0x634e78c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x0916f68a # load x3 with value 0x0916f68a
sw x3, 0(x2) # store 0x0916f68a in memory
flw f29, 0(x2) # load 0x0916f68a from memory into f29
fnmadd.s f22, f6, f10, f29, dyn # perform operation
fnmadd.s f22, f6, f10, f29, rdn # perform operation
fnmadd.s f22, f6, f10, f29, rmm # perform operation
fnmadd.s f22, f6, f10, f29, rne # perform operation
fnmadd.s f22, f6, f10, f29, rtz # perform operation
fnmadd.s f22, f6, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f6, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f6, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f6, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f6, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f6, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x2, 0xfd204e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x41f138b0 # load x3 with value 0x41f138b0
sw x3, 0(x2) # store 0x41f138b0 in memory
flw f20, 0(x2) # load 0x41f138b0 from memory into f20
fnmadd.s f2, f14, f29, f20, dyn # perform operation
fnmadd.s f2, f14, f29, f20, rdn # perform operation
fnmadd.s f2, f14, f29, f20, rmm # perform operation
fnmadd.s f2, f14, f29, f20, rne # perform operation
fnmadd.s f2, f14, f29, f20, rtz # perform operation
fnmadd.s f2, f14, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f14, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x21, 0x589b6c15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x46a2138a # load x3 with value 0x46a2138a
sw x3, 0(x2) # store 0x46a2138a in memory
flw f1, 0(x2) # load 0x46a2138a from memory into f1
fnmadd.s f21, f20, f6, f1, dyn # perform operation
fnmadd.s f21, f20, f6, f1, rdn # perform operation
fnmadd.s f21, f20, f6, f1, rmm # perform operation
fnmadd.s f21, f20, f6, f1, rne # perform operation
fnmadd.s f21, f20, f6, f1, rtz # perform operation
fnmadd.s f21, f20, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x13, 0xf669b431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xde805df0 # load x3 with value 0xde805df0
sw x3, 0(x2) # store 0xde805df0 in memory
flw f9, 0(x2) # load 0xde805df0 from memory into f9
fnmadd.s f13, f6, f14, f9, dyn # perform operation
fnmadd.s f13, f6, f14, f9, rdn # perform operation
fnmadd.s f13, f6, f14, f9, rmm # perform operation
fnmadd.s f13, f6, f14, f9, rne # perform operation
fnmadd.s f13, f6, f14, f9, rtz # perform operation
fnmadd.s f13, f6, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x15, 0x50db1ef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xfcbd6280 # load x3 with value 0xfcbd6280
sw x3, 0(x2) # store 0xfcbd6280 in memory
flw f27, 0(x2) # load 0xfcbd6280 from memory into f27
fnmadd.s f15, f4, f13, f27, dyn # perform operation
fnmadd.s f15, f4, f13, f27, rdn # perform operation
fnmadd.s f15, f4, f13, f27, rmm # perform operation
fnmadd.s f15, f4, f13, f27, rne # perform operation
fnmadd.s f15, f4, f13, f27, rtz # perform operation
fnmadd.s f15, f4, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f4, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x22, 0xabc81e17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x06b2c1cd # load x3 with value 0x06b2c1cd
sw x3, 0(x2) # store 0x06b2c1cd in memory
flw f7, 0(x2) # load 0x06b2c1cd from memory into f7
fnmadd.s f22, f18, f15, f7, dyn # perform operation
fnmadd.s f22, f18, f15, f7, rdn # perform operation
fnmadd.s f22, f18, f15, f7, rmm # perform operation
fnmadd.s f22, f18, f15, f7, rne # perform operation
fnmadd.s f22, f18, f15, f7, rtz # perform operation
fnmadd.s f22, f18, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x7, 0x90dfab14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x431a1940 # load x3 with value 0x431a1940
sw x3, 0(x2) # store 0x431a1940 in memory
flw f28, 0(x2) # load 0x431a1940 from memory into f28
fnmadd.s f7, f11, f30, f28, dyn # perform operation
fnmadd.s f7, f11, f30, f28, rdn # perform operation
fnmadd.s f7, f11, f30, f28, rmm # perform operation
fnmadd.s f7, f11, f30, f28, rne # perform operation
fnmadd.s f7, f11, f30, f28, rtz # perform operation
fnmadd.s f7, f11, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x27, 0x3b4ed5e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x2733fa23 # load x3 with value 0x2733fa23
sw x3, 0(x2) # store 0x2733fa23 in memory
flw f17, 0(x2) # load 0x2733fa23 from memory into f17
fnmadd.s f27, f4, f21, f17, dyn # perform operation
fnmadd.s f27, f4, f21, f17, rdn # perform operation
fnmadd.s f27, f4, f21, f17, rmm # perform operation
fnmadd.s f27, f4, f21, f17, rne # perform operation
fnmadd.s f27, f4, f21, f17, rtz # perform operation
fnmadd.s f27, f4, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f4, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x4, 0x5e4ca1c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x8132560b # load x3 with value 0x8132560b
sw x3, 0(x2) # store 0x8132560b in memory
flw f14, 0(x2) # load 0x8132560b from memory into f14
fnmadd.s f4, f30, f17, f14, dyn # perform operation
fnmadd.s f4, f30, f17, f14, rdn # perform operation
fnmadd.s f4, f30, f17, f14, rmm # perform operation
fnmadd.s f4, f30, f17, f14, rne # perform operation
fnmadd.s f4, f30, f17, f14, rtz # perform operation
fnmadd.s f4, f30, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f30, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f30, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f30, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f30, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f30, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x23, 0xdbc2cf27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0xf2349dbe # load x3 with value 0xf2349dbe
sw x3, 0(x2) # store 0xf2349dbe in memory
flw f26, 0(x2) # load 0xf2349dbe from memory into f26
fnmadd.s f23, f3, f9, f26, dyn # perform operation
fnmadd.s f23, f3, f9, f26, rdn # perform operation
fnmadd.s f23, f3, f9, f26, rmm # perform operation
fnmadd.s f23, f3, f9, f26, rne # perform operation
fnmadd.s f23, f3, f9, f26, rtz # perform operation
fnmadd.s f23, f3, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x14, 0xccc27e2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x45ef846d # load x3 with value 0x45ef846d
sw x3, 0(x2) # store 0x45ef846d in memory
flw f26, 0(x2) # load 0x45ef846d from memory into f26
fnmadd.s f14, f4, f8, f26, dyn # perform operation
fnmadd.s f14, f4, f8, f26, rdn # perform operation
fnmadd.s f14, f4, f8, f26, rmm # perform operation
fnmadd.s f14, f4, f8, f26, rne # perform operation
fnmadd.s f14, f4, f8, f26, rtz # perform operation
fnmadd.s f14, f4, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f4, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f4, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f4, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f4, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f4, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x4, 0xbe0bd418 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x4ceab7bc # load x3 with value 0x4ceab7bc
sw x3, 0(x2) # store 0x4ceab7bc in memory
flw f22, 0(x2) # load 0x4ceab7bc from memory into f22
fnmadd.s f4, f9, f7, f22, dyn # perform operation
fnmadd.s f4, f9, f7, f22, rdn # perform operation
fnmadd.s f4, f9, f7, f22, rmm # perform operation
fnmadd.s f4, f9, f7, f22, rne # perform operation
fnmadd.s f4, f9, f7, f22, rtz # perform operation
fnmadd.s f4, f9, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f9, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f9, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f9, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f9, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f9, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x21, 0x7b424f9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x4608a3c1 # load x3 with value 0x4608a3c1
sw x3, 0(x2) # store 0x4608a3c1 in memory
flw f23, 0(x2) # load 0x4608a3c1 from memory into f23
fnmadd.s f21, f28, f30, f23, dyn # perform operation
fnmadd.s f21, f28, f30, f23, rdn # perform operation
fnmadd.s f21, f28, f30, f23, rmm # perform operation
fnmadd.s f21, f28, f30, f23, rne # perform operation
fnmadd.s f21, f28, f30, f23, rtz # perform operation
fnmadd.s f21, f28, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f28, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f28, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f28, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f28, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f28, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x17, 0x22efc07f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0xc74cc7ba # load x3 with value 0xc74cc7ba
sw x3, 0(x2) # store 0xc74cc7ba in memory
flw f6, 0(x2) # load 0xc74cc7ba from memory into f6
fnmadd.s f17, f20, f9, f6, dyn # perform operation
fnmadd.s f17, f20, f9, f6, rdn # perform operation
fnmadd.s f17, f20, f9, f6, rmm # perform operation
fnmadd.s f17, f20, f9, f6, rne # perform operation
fnmadd.s f17, f20, f9, f6, rtz # perform operation
fnmadd.s f17, f20, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x19, 0x2c6ba252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
li x3, 0x4662ad96 # load x3 with value 0x4662ad96
sw x3, 0(x2) # store 0x4662ad96 in memory
flw f30, 0(x2) # load 0x4662ad96 from memory into f30
fnmadd.s f19, f4, f29, f30, dyn # perform operation
fnmadd.s f19, f4, f29, f30, rdn # perform operation
fnmadd.s f19, f4, f29, f30, rmm # perform operation
fnmadd.s f19, f4, f29, f30, rne # perform operation
fnmadd.s f19, f4, f29, f30, rtz # perform operation
fnmadd.s f19, f4, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f4, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x20, 0x554eba85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x801cad58 # load x3 with value 0x801cad58
sw x3, 0(x2) # store 0x801cad58 in memory
flw f18, 0(x2) # load 0x801cad58 from memory into f18
fnmadd.s f20, f2, f15, f18, dyn # perform operation
fnmadd.s f20, f2, f15, f18, rdn # perform operation
fnmadd.s f20, f2, f15, f18, rmm # perform operation
fnmadd.s f20, f2, f15, f18, rne # perform operation
fnmadd.s f20, f2, f15, f18, rtz # perform operation
fnmadd.s f20, f2, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x13, 0x6c36d682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xd1e5e730 # load x3 with value 0xd1e5e730
sw x3, 0(x2) # store 0xd1e5e730 in memory
flw f11, 0(x2) # load 0xd1e5e730 from memory into f11
fnmadd.s f13, f14, f6, f11, dyn # perform operation
fnmadd.s f13, f14, f6, f11, rdn # perform operation
fnmadd.s f13, f14, f6, f11, rmm # perform operation
fnmadd.s f13, f14, f6, f11, rne # perform operation
fnmadd.s f13, f14, f6, f11, rtz # perform operation
fnmadd.s f13, f14, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f14, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f14, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x13, 0x62f5420f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x8f71e851 # load x3 with value 0x8f71e851
sw x3, 0(x2) # store 0x8f71e851 in memory
flw f27, 0(x2) # load 0x8f71e851 from memory into f27
fnmadd.s f13, f5, f21, f27, dyn # perform operation
fnmadd.s f13, f5, f21, f27, rdn # perform operation
fnmadd.s f13, f5, f21, f27, rmm # perform operation
fnmadd.s f13, f5, f21, f27, rne # perform operation
fnmadd.s f13, f5, f21, f27, rtz # perform operation
fnmadd.s f13, f5, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f5, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x10, 0x14759144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x949fb3e9 # load x3 with value 0x949fb3e9
sw x3, 0(x2) # store 0x949fb3e9 in memory
flw f16, 0(x2) # load 0x949fb3e9 from memory into f16
fnmadd.s f10, f15, f3, f16, dyn # perform operation
fnmadd.s f10, f15, f3, f16, rdn # perform operation
fnmadd.s f10, f15, f3, f16, rmm # perform operation
fnmadd.s f10, f15, f3, f16, rne # perform operation
fnmadd.s f10, f15, f3, f16, rtz # perform operation
fnmadd.s f10, f15, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x5, 0x692ddb04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x3fa5e9aa # load x3 with value 0x3fa5e9aa
sw x3, 0(x2) # store 0x3fa5e9aa in memory
flw f27, 0(x2) # load 0x3fa5e9aa from memory into f27
fnmadd.s f5, f24, f11, f27, dyn # perform operation
fnmadd.s f5, f24, f11, f27, rdn # perform operation
fnmadd.s f5, f24, f11, f27, rmm # perform operation
fnmadd.s f5, f24, f11, f27, rne # perform operation
fnmadd.s f5, f24, f11, f27, rtz # perform operation
fnmadd.s f5, f24, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x16, 0xd26779ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xd86be628 # load x3 with value 0xd86be628
sw x3, 0(x2) # store 0xd86be628 in memory
flw f27, 0(x2) # load 0xd86be628 from memory into f27
fnmadd.s f16, f11, f17, f27, dyn # perform operation
fnmadd.s f16, f11, f17, f27, rdn # perform operation
fnmadd.s f16, f11, f17, f27, rmm # perform operation
fnmadd.s f16, f11, f17, f27, rne # perform operation
fnmadd.s f16, f11, f17, f27, rtz # perform operation
fnmadd.s f16, f11, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f11, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x12, 0x422d5f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x42b67e06 # load x3 with value 0x42b67e06
sw x3, 0(x2) # store 0x42b67e06 in memory
flw f6, 0(x2) # load 0x42b67e06 from memory into f6
fnmadd.s f12, f22, f14, f6, dyn # perform operation
fnmadd.s f12, f22, f14, f6, rdn # perform operation
fnmadd.s f12, f22, f14, f6, rmm # perform operation
fnmadd.s f12, f22, f14, f6, rne # perform operation
fnmadd.s f12, f22, f14, f6, rtz # perform operation
fnmadd.s f12, f22, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x27, 0x70d0fbf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xdaf8d136 # load x3 with value 0xdaf8d136
sw x3, 0(x2) # store 0xdaf8d136 in memory
flw f15, 0(x2) # load 0xdaf8d136 from memory into f15
fnmadd.s f27, f7, f20, f15, dyn # perform operation
fnmadd.s f27, f7, f20, f15, rdn # perform operation
fnmadd.s f27, f7, f20, f15, rmm # perform operation
fnmadd.s f27, f7, f20, f15, rne # perform operation
fnmadd.s f27, f7, f20, f15, rtz # perform operation
fnmadd.s f27, f7, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f7, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x28, 0x6ae69a73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x281ff5bd # load x3 with value 0x281ff5bd
sw x3, 0(x2) # store 0x281ff5bd in memory
flw f2, 0(x2) # load 0x281ff5bd from memory into f2
fnmadd.s f28, f30, f10, f2, dyn # perform operation
fnmadd.s f28, f30, f10, f2, rdn # perform operation
fnmadd.s f28, f30, f10, f2, rmm # perform operation
fnmadd.s f28, f30, f10, f2, rne # perform operation
fnmadd.s f28, f30, f10, f2, rtz # perform operation
fnmadd.s f28, f30, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x28, 0xee6e6595 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0xc3d0b866 # load x3 with value 0xc3d0b866
sw x3, 0(x2) # store 0xc3d0b866 in memory
flw f18, 0(x2) # load 0xc3d0b866 from memory into f18
fnmadd.s f28, f1, f29, f18, dyn # perform operation
fnmadd.s f28, f1, f29, f18, rdn # perform operation
fnmadd.s f28, f1, f29, f18, rmm # perform operation
fnmadd.s f28, f1, f29, f18, rne # perform operation
fnmadd.s f28, f1, f29, f18, rtz # perform operation
fnmadd.s f28, f1, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f1, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x8, 0x152da4d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0xd0cd257a # load x3 with value 0xd0cd257a
sw x3, 0(x2) # store 0xd0cd257a in memory
flw f6, 0(x2) # load 0xd0cd257a from memory into f6
fnmadd.s f8, f17, f11, f6, dyn # perform operation
fnmadd.s f8, f17, f11, f6, rdn # perform operation
fnmadd.s f8, f17, f11, f6, rmm # perform operation
fnmadd.s f8, f17, f11, f6, rne # perform operation
fnmadd.s f8, f17, f11, f6, rtz # perform operation
fnmadd.s f8, f17, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f17, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x28, 0x38d3f763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xf709e806 # load x3 with value 0xf709e806
sw x3, 0(x2) # store 0xf709e806 in memory
flw f25, 0(x2) # load 0xf709e806 from memory into f25
fnmadd.s f28, f9, f5, f25, dyn # perform operation
fnmadd.s f28, f9, f5, f25, rdn # perform operation
fnmadd.s f28, f9, f5, f25, rmm # perform operation
fnmadd.s f28, f9, f5, f25, rne # perform operation
fnmadd.s f28, f9, f5, f25, rtz # perform operation
fnmadd.s f28, f9, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f9, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f9, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f9, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f9, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f9, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x4, 0xc225e2a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x365e942f # load x3 with value 0x365e942f
sw x3, 0(x2) # store 0x365e942f in memory
flw f18, 0(x2) # load 0x365e942f from memory into f18
fnmadd.s f4, f23, f28, f18, dyn # perform operation
fnmadd.s f4, f23, f28, f18, rdn # perform operation
fnmadd.s f4, f23, f28, f18, rmm # perform operation
fnmadd.s f4, f23, f28, f18, rne # perform operation
fnmadd.s f4, f23, f28, f18, rtz # perform operation
fnmadd.s f4, f23, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x21, 0x3a74a1be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x8ae3fee2 # load x3 with value 0x8ae3fee2
sw x3, 0(x2) # store 0x8ae3fee2 in memory
flw f18, 0(x2) # load 0x8ae3fee2 from memory into f18
fnmadd.s f21, f31, f17, f18, dyn # perform operation
fnmadd.s f21, f31, f17, f18, rdn # perform operation
fnmadd.s f21, f31, f17, f18, rmm # perform operation
fnmadd.s f21, f31, f17, f18, rne # perform operation
fnmadd.s f21, f31, f17, f18, rtz # perform operation
fnmadd.s f21, f31, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x17, 0x99872717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x6477778b # load x3 with value 0x6477778b
sw x3, 0(x2) # store 0x6477778b in memory
flw f22, 0(x2) # load 0x6477778b from memory into f22
fnmadd.s f17, f26, f1, f22, dyn # perform operation
fnmadd.s f17, f26, f1, f22, rdn # perform operation
fnmadd.s f17, f26, f1, f22, rmm # perform operation
fnmadd.s f17, f26, f1, f22, rne # perform operation
fnmadd.s f17, f26, f1, f22, rtz # perform operation
fnmadd.s f17, f26, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x11, 0x44057f15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0xcdccac6b # load x3 with value 0xcdccac6b
sw x3, 0(x2) # store 0xcdccac6b in memory
flw f9, 0(x2) # load 0xcdccac6b from memory into f9
fnmadd.s f11, f30, f5, f9, dyn # perform operation
fnmadd.s f11, f30, f5, f9, rdn # perform operation
fnmadd.s f11, f30, f5, f9, rmm # perform operation
fnmadd.s f11, f30, f5, f9, rne # perform operation
fnmadd.s f11, f30, f5, f9, rtz # perform operation
fnmadd.s f11, f30, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x18, 0x4c947b0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xbc01e429 # load x3 with value 0xbc01e429
sw x3, 0(x2) # store 0xbc01e429 in memory
flw f30, 0(x2) # load 0xbc01e429 from memory into f30
fnmadd.s f18, f1, f9, f30, dyn # perform operation
fnmadd.s f18, f1, f9, f30, rdn # perform operation
fnmadd.s f18, f1, f9, f30, rmm # perform operation
fnmadd.s f18, f1, f9, f30, rne # perform operation
fnmadd.s f18, f1, f9, f30, rtz # perform operation
fnmadd.s f18, f1, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x9, 0xecb7df8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0xdde05e76 # load x3 with value 0xdde05e76
sw x3, 0(x2) # store 0xdde05e76 in memory
flw f4, 0(x2) # load 0xdde05e76 from memory into f4
fnmadd.s f9, f8, f7, f4, dyn # perform operation
fnmadd.s f9, f8, f7, f4, rdn # perform operation
fnmadd.s f9, f8, f7, f4, rmm # perform operation
fnmadd.s f9, f8, f7, f4, rne # perform operation
fnmadd.s f9, f8, f7, f4, rtz # perform operation
fnmadd.s f9, f8, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x6, 0xbc0e4ea7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x6b296855 # load x3 with value 0x6b296855
sw x3, 0(x2) # store 0x6b296855 in memory
flw f2, 0(x2) # load 0x6b296855 from memory into f2
fnmadd.s f6, f12, f30, f2, dyn # perform operation
fnmadd.s f6, f12, f30, f2, rdn # perform operation
fnmadd.s f6, f12, f30, f2, rmm # perform operation
fnmadd.s f6, f12, f30, f2, rne # perform operation
fnmadd.s f6, f12, f30, f2, rtz # perform operation
fnmadd.s f6, f12, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f30, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x7, 0x6a1bd1fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x3284d8df # load x3 with value 0x3284d8df
sw x3, 0(x2) # store 0x3284d8df in memory
flw f3, 0(x2) # load 0x3284d8df from memory into f3
fnmadd.s f7, f5, f22, f3, dyn # perform operation
fnmadd.s f7, f5, f22, f3, rdn # perform operation
fnmadd.s f7, f5, f22, f3, rmm # perform operation
fnmadd.s f7, f5, f22, f3, rne # perform operation
fnmadd.s f7, f5, f22, f3, rtz # perform operation
fnmadd.s f7, f5, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x13, 0x7a0a3fcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xe17ba5e0 # load x3 with value 0xe17ba5e0
sw x3, 0(x2) # store 0xe17ba5e0 in memory
flw f9, 0(x2) # load 0xe17ba5e0 from memory into f9
fnmadd.s f13, f7, f27, f9, dyn # perform operation
fnmadd.s f13, f7, f27, f9, rdn # perform operation
fnmadd.s f13, f7, f27, f9, rmm # perform operation
fnmadd.s f13, f7, f27, f9, rne # perform operation
fnmadd.s f13, f7, f27, f9, rtz # perform operation
fnmadd.s f13, f7, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f7, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f7, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f7, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f7, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f7, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x14, 0x1fb1bc8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x32d3b86f # load x3 with value 0x32d3b86f
sw x3, 0(x2) # store 0x32d3b86f in memory
flw f2, 0(x2) # load 0x32d3b86f from memory into f2
fnmadd.s f14, f24, f31, f2, dyn # perform operation
fnmadd.s f14, f24, f31, f2, rdn # perform operation
fnmadd.s f14, f24, f31, f2, rmm # perform operation
fnmadd.s f14, f24, f31, f2, rne # perform operation
fnmadd.s f14, f24, f31, f2, rtz # perform operation
fnmadd.s f14, f24, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x10, 0x5a2b8ae7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xe121dca9 # load x3 with value 0xe121dca9
sw x3, 0(x2) # store 0xe121dca9 in memory
flw f20, 0(x2) # load 0xe121dca9 from memory into f20
fnmadd.s f10, f22, f28, f20, dyn # perform operation
fnmadd.s f10, f22, f28, f20, rdn # perform operation
fnmadd.s f10, f22, f28, f20, rmm # perform operation
fnmadd.s f10, f22, f28, f20, rne # perform operation
fnmadd.s f10, f22, f28, f20, rtz # perform operation
fnmadd.s f10, f22, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x7, 0x8c8b20ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0xcd3692bf # load x3 with value 0xcd3692bf
sw x3, 0(x2) # store 0xcd3692bf in memory
flw f17, 0(x2) # load 0xcd3692bf from memory into f17
fnmadd.s f7, f19, f11, f17, dyn # perform operation
fnmadd.s f7, f19, f11, f17, rdn # perform operation
fnmadd.s f7, f19, f11, f17, rmm # perform operation
fnmadd.s f7, f19, f11, f17, rne # perform operation
fnmadd.s f7, f19, f11, f17, rtz # perform operation
fnmadd.s f7, f19, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x3, 0x8fbbe8a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xc7295282 # load x3 with value 0xc7295282
sw x3, 0(x2) # store 0xc7295282 in memory
flw f11, 0(x2) # load 0xc7295282 from memory into f11
fnmadd.s f3, f28, f5, f11, dyn # perform operation
fnmadd.s f3, f28, f5, f11, rdn # perform operation
fnmadd.s f3, f28, f5, f11, rmm # perform operation
fnmadd.s f3, f28, f5, f11, rne # perform operation
fnmadd.s f3, f28, f5, f11, rtz # perform operation
fnmadd.s f3, f28, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f28, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f28, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f28, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f28, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f28, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x12, 0xd1a1d80d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x6ea7b208 # load x3 with value 0x6ea7b208
sw x3, 0(x2) # store 0x6ea7b208 in memory
flw f31, 0(x2) # load 0x6ea7b208 from memory into f31
fnmadd.s f12, f14, f18, f31, dyn # perform operation
fnmadd.s f12, f14, f18, f31, rdn # perform operation
fnmadd.s f12, f14, f18, f31, rmm # perform operation
fnmadd.s f12, f14, f18, f31, rne # perform operation
fnmadd.s f12, f14, f18, f31, rtz # perform operation
fnmadd.s f12, f14, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x17, 0xcf2f3e06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x51f76bd4 # load x3 with value 0x51f76bd4
sw x3, 0(x2) # store 0x51f76bd4 in memory
flw f26, 0(x2) # load 0x51f76bd4 from memory into f26
fnmadd.s f17, f1, f7, f26, dyn # perform operation
fnmadd.s f17, f1, f7, f26, rdn # perform operation
fnmadd.s f17, f1, f7, f26, rmm # perform operation
fnmadd.s f17, f1, f7, f26, rne # perform operation
fnmadd.s f17, f1, f7, f26, rtz # perform operation
fnmadd.s f17, f1, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f1, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f1, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x4, 0xe4156764 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x71d6e8f4 # load x3 with value 0x71d6e8f4
sw x3, 0(x2) # store 0x71d6e8f4 in memory
flw f16, 0(x2) # load 0x71d6e8f4 from memory into f16
fnmadd.s f4, f20, f14, f16, dyn # perform operation
fnmadd.s f4, f20, f14, f16, rdn # perform operation
fnmadd.s f4, f20, f14, f16, rmm # perform operation
fnmadd.s f4, f20, f14, f16, rne # perform operation
fnmadd.s f4, f20, f14, f16, rtz # perform operation
fnmadd.s f4, f20, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f20, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x8, 0xaf8e835a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x45063b4a # load x3 with value 0x45063b4a
sw x3, 0(x2) # store 0x45063b4a in memory
flw f20, 0(x2) # load 0x45063b4a from memory into f20
fnmadd.s f8, f31, f29, f20, dyn # perform operation
fnmadd.s f8, f31, f29, f20, rdn # perform operation
fnmadd.s f8, f31, f29, f20, rmm # perform operation
fnmadd.s f8, f31, f29, f20, rne # perform operation
fnmadd.s f8, f31, f29, f20, rtz # perform operation
fnmadd.s f8, f31, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x11, 0x68c3f4aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0xf89a379c # load x3 with value 0xf89a379c
sw x3, 0(x2) # store 0xf89a379c in memory
flw f23, 0(x2) # load 0xf89a379c from memory into f23
fnmadd.s f11, f18, f3, f23, dyn # perform operation
fnmadd.s f11, f18, f3, f23, rdn # perform operation
fnmadd.s f11, f18, f3, f23, rmm # perform operation
fnmadd.s f11, f18, f3, f23, rne # perform operation
fnmadd.s f11, f18, f3, f23, rtz # perform operation
fnmadd.s f11, f18, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x26, 0x6afca6b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x10430bd0 # load x3 with value 0x10430bd0
sw x3, 0(x2) # store 0x10430bd0 in memory
flw f16, 0(x2) # load 0x10430bd0 from memory into f16
fnmadd.s f26, f12, f15, f16, dyn # perform operation
fnmadd.s f26, f12, f15, f16, rdn # perform operation
fnmadd.s f26, f12, f15, f16, rmm # perform operation
fnmadd.s f26, f12, f15, f16, rne # perform operation
fnmadd.s f26, f12, f15, f16, rtz # perform operation
fnmadd.s f26, f12, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x21, 0x159e2559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x3324ca7c # load x3 with value 0x3324ca7c
sw x3, 0(x2) # store 0x3324ca7c in memory
flw f13, 0(x2) # load 0x3324ca7c from memory into f13
fnmadd.s f21, f29, f30, f13, dyn # perform operation
fnmadd.s f21, f29, f30, f13, rdn # perform operation
fnmadd.s f21, f29, f30, f13, rmm # perform operation
fnmadd.s f21, f29, f30, f13, rne # perform operation
fnmadd.s f21, f29, f30, f13, rtz # perform operation
fnmadd.s f21, f29, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x31, 0xa4d76bae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0xa1d4984e # load x3 with value 0xa1d4984e
sw x3, 0(x2) # store 0xa1d4984e in memory
flw f24, 0(x2) # load 0xa1d4984e from memory into f24
fnmadd.s f31, f22, f3, f24, dyn # perform operation
fnmadd.s f31, f22, f3, f24, rdn # perform operation
fnmadd.s f31, f22, f3, f24, rmm # perform operation
fnmadd.s f31, f22, f3, f24, rne # perform operation
fnmadd.s f31, f22, f3, f24, rtz # perform operation
fnmadd.s f31, f22, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f22, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f22, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f22, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f22, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f22, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x27, 0x621359d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0xb1d59e29 # load x3 with value 0xb1d59e29
sw x3, 0(x2) # store 0xb1d59e29 in memory
flw f6, 0(x2) # load 0xb1d59e29 from memory into f6
fnmadd.s f27, f5, f7, f6, dyn # perform operation
fnmadd.s f27, f5, f7, f6, rdn # perform operation
fnmadd.s f27, f5, f7, f6, rmm # perform operation
fnmadd.s f27, f5, f7, f6, rne # perform operation
fnmadd.s f27, f5, f7, f6, rtz # perform operation
fnmadd.s f27, f5, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x19, 0x100d2534 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0xbe2be92f # load x3 with value 0xbe2be92f
sw x3, 0(x2) # store 0xbe2be92f in memory
flw f21, 0(x2) # load 0xbe2be92f from memory into f21
fnmadd.s f19, f10, f11, f21, dyn # perform operation
fnmadd.s f19, f10, f11, f21, rdn # perform operation
fnmadd.s f19, f10, f11, f21, rmm # perform operation
fnmadd.s f19, f10, f11, f21, rne # perform operation
fnmadd.s f19, f10, f11, f21, rtz # perform operation
fnmadd.s f19, f10, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f10, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f10, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f10, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f10, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f10, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x26, 0x6e1f773b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0xf7c8adb4 # load x3 with value 0xf7c8adb4
sw x3, 0(x2) # store 0xf7c8adb4 in memory
flw f27, 0(x2) # load 0xf7c8adb4 from memory into f27
fnmadd.s f26, f28, f13, f27, dyn # perform operation
fnmadd.s f26, f28, f13, f27, rdn # perform operation
fnmadd.s f26, f28, f13, f27, rmm # perform operation
fnmadd.s f26, f28, f13, f27, rne # perform operation
fnmadd.s f26, f28, f13, f27, rtz # perform operation
fnmadd.s f26, f28, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x29, 0x76f747cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x9a6c836f # load x3 with value 0x9a6c836f
sw x3, 0(x2) # store 0x9a6c836f in memory
flw f25, 0(x2) # load 0x9a6c836f from memory into f25
fnmadd.s f29, f11, f5, f25, dyn # perform operation
fnmadd.s f29, f11, f5, f25, rdn # perform operation
fnmadd.s f29, f11, f5, f25, rmm # perform operation
fnmadd.s f29, f11, f5, f25, rne # perform operation
fnmadd.s f29, f11, f5, f25, rtz # perform operation
fnmadd.s f29, f11, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x4, 0x53b0fa11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xec732ce7 # load x3 with value 0xec732ce7
sw x3, 0(x2) # store 0xec732ce7 in memory
flw f29, 0(x2) # load 0xec732ce7 from memory into f29
fnmadd.s f4, f16, f14, f29, dyn # perform operation
fnmadd.s f4, f16, f14, f29, rdn # perform operation
fnmadd.s f4, f16, f14, f29, rmm # perform operation
fnmadd.s f4, f16, f14, f29, rne # perform operation
fnmadd.s f4, f16, f14, f29, rtz # perform operation
fnmadd.s f4, f16, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f16, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x20, 0x0ec5d643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x4f021df5 # load x3 with value 0x4f021df5
sw x3, 0(x2) # store 0x4f021df5 in memory
flw f14, 0(x2) # load 0x4f021df5 from memory into f14
fnmadd.s f20, f19, f11, f14, dyn # perform operation
fnmadd.s f20, f19, f11, f14, rdn # perform operation
fnmadd.s f20, f19, f11, f14, rmm # perform operation
fnmadd.s f20, f19, f11, f14, rne # perform operation
fnmadd.s f20, f19, f11, f14, rtz # perform operation
fnmadd.s f20, f19, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f11, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x15, 0x64b09222 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x7af9f162 # load x3 with value 0x7af9f162
sw x3, 0(x2) # store 0x7af9f162 in memory
flw f16, 0(x2) # load 0x7af9f162 from memory into f16
fnmadd.s f15, f18, f2, f16, dyn # perform operation
fnmadd.s f15, f18, f2, f16, rdn # perform operation
fnmadd.s f15, f18, f2, f16, rmm # perform operation
fnmadd.s f15, f18, f2, f16, rne # perform operation
fnmadd.s f15, f18, f2, f16, rtz # perform operation
fnmadd.s f15, f18, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x10, 0x4b0aa321 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x54cbff31 # load x3 with value 0x54cbff31
sw x3, 0(x2) # store 0x54cbff31 in memory
flw f18, 0(x2) # load 0x54cbff31 from memory into f18
fnmadd.s f10, f22, f28, f18, dyn # perform operation
fnmadd.s f10, f22, f28, f18, rdn # perform operation
fnmadd.s f10, f22, f28, f18, rmm # perform operation
fnmadd.s f10, f22, f28, f18, rne # perform operation
fnmadd.s f10, f22, f28, f18, rtz # perform operation
fnmadd.s f10, f22, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x5, 0xa017d4d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x94741448 # load x3 with value 0x94741448
sw x3, 0(x2) # store 0x94741448 in memory
flw f26, 0(x2) # load 0x94741448 from memory into f26
fnmadd.s f5, f4, f20, f26, dyn # perform operation
fnmadd.s f5, f4, f20, f26, rdn # perform operation
fnmadd.s f5, f4, f20, f26, rmm # perform operation
fnmadd.s f5, f4, f20, f26, rne # perform operation
fnmadd.s f5, f4, f20, f26, rtz # perform operation
fnmadd.s f5, f4, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f4, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f4, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f4, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f4, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f4, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x31, 0x0fbb5746 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x40940820 # load x3 with value 0x40940820
sw x3, 0(x2) # store 0x40940820 in memory
flw f7, 0(x2) # load 0x40940820 from memory into f7
fnmadd.s f31, f11, f14, f7, dyn # perform operation
fnmadd.s f31, f11, f14, f7, rdn # perform operation
fnmadd.s f31, f11, f14, f7, rmm # perform operation
fnmadd.s f31, f11, f14, f7, rne # perform operation
fnmadd.s f31, f11, f14, f7, rtz # perform operation
fnmadd.s f31, f11, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x10, 0xe038b7d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x576d9b86 # load x3 with value 0x576d9b86
sw x3, 0(x2) # store 0x576d9b86 in memory
flw f9, 0(x2) # load 0x576d9b86 from memory into f9
fnmadd.s f10, f21, f23, f9, dyn # perform operation
fnmadd.s f10, f21, f23, f9, rdn # perform operation
fnmadd.s f10, f21, f23, f9, rmm # perform operation
fnmadd.s f10, f21, f23, f9, rne # perform operation
fnmadd.s f10, f21, f23, f9, rtz # perform operation
fnmadd.s f10, f21, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x12, 0xe7ff1437 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x68bcf3a3 # load x3 with value 0x68bcf3a3
sw x3, 0(x2) # store 0x68bcf3a3 in memory
flw f24, 0(x2) # load 0x68bcf3a3 from memory into f24
fnmadd.s f12, f8, f30, f24, dyn # perform operation
fnmadd.s f12, f8, f30, f24, rdn # perform operation
fnmadd.s f12, f8, f30, f24, rmm # perform operation
fnmadd.s f12, f8, f30, f24, rne # perform operation
fnmadd.s f12, f8, f30, f24, rtz # perform operation
fnmadd.s f12, f8, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x10, 0x9e10ea88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x4cb43f6a # load x3 with value 0x4cb43f6a
sw x3, 0(x2) # store 0x4cb43f6a in memory
flw f9, 0(x2) # load 0x4cb43f6a from memory into f9
fnmadd.s f10, f6, f1, f9, dyn # perform operation
fnmadd.s f10, f6, f1, f9, rdn # perform operation
fnmadd.s f10, f6, f1, f9, rmm # perform operation
fnmadd.s f10, f6, f1, f9, rne # perform operation
fnmadd.s f10, f6, f1, f9, rtz # perform operation
fnmadd.s f10, f6, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f6, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f6, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x19, 0x12ddd888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xb01daf6d # load x3 with value 0xb01daf6d
sw x3, 0(x2) # store 0xb01daf6d in memory
flw f11, 0(x2) # load 0xb01daf6d from memory into f11
fnmadd.s f19, f6, f12, f11, dyn # perform operation
fnmadd.s f19, f6, f12, f11, rdn # perform operation
fnmadd.s f19, f6, f12, f11, rmm # perform operation
fnmadd.s f19, f6, f12, f11, rne # perform operation
fnmadd.s f19, f6, f12, f11, rtz # perform operation
fnmadd.s f19, f6, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x18, 0x504efdcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x21dc1b67 # load x3 with value 0x21dc1b67
sw x3, 0(x2) # store 0x21dc1b67 in memory
flw f31, 0(x2) # load 0x21dc1b67 from memory into f31
fnmadd.s f18, f20, f21, f31, dyn # perform operation
fnmadd.s f18, f20, f21, f31, rdn # perform operation
fnmadd.s f18, f20, f21, f31, rmm # perform operation
fnmadd.s f18, f20, f21, f31, rne # perform operation
fnmadd.s f18, f20, f21, f31, rtz # perform operation
fnmadd.s f18, f20, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f20, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x15, 0x2dd257f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x92732891 # load x3 with value 0x92732891
sw x3, 0(x2) # store 0x92732891 in memory
flw f18, 0(x2) # load 0x92732891 from memory into f18
fnmadd.s f15, f6, f31, f18, dyn # perform operation
fnmadd.s f15, f6, f31, f18, rdn # perform operation
fnmadd.s f15, f6, f31, f18, rmm # perform operation
fnmadd.s f15, f6, f31, f18, rne # perform operation
fnmadd.s f15, f6, f31, f18, rtz # perform operation
fnmadd.s f15, f6, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f6, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x10, 0x9805c7bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x8da78f8e # load x3 with value 0x8da78f8e
sw x3, 0(x2) # store 0x8da78f8e in memory
flw f1, 0(x2) # load 0x8da78f8e from memory into f1
fnmadd.s f10, f20, f5, f1, dyn # perform operation
fnmadd.s f10, f20, f5, f1, rdn # perform operation
fnmadd.s f10, f20, f5, f1, rmm # perform operation
fnmadd.s f10, f20, f5, f1, rne # perform operation
fnmadd.s f10, f20, f5, f1, rtz # perform operation
fnmadd.s f10, f20, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f20, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f20, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f20, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f20, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f20, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x5, 0xba330359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x0b7209c7 # load x3 with value 0x0b7209c7
sw x3, 0(x2) # store 0x0b7209c7 in memory
flw f2, 0(x2) # load 0x0b7209c7 from memory into f2
fnmadd.s f5, f30, f13, f2, dyn # perform operation
fnmadd.s f5, f30, f13, f2, rdn # perform operation
fnmadd.s f5, f30, f13, f2, rmm # perform operation
fnmadd.s f5, f30, f13, f2, rne # perform operation
fnmadd.s f5, f30, f13, f2, rtz # perform operation
fnmadd.s f5, f30, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x3, 0x1a5c6902 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x2f082136 # load x3 with value 0x2f082136
sw x3, 0(x2) # store 0x2f082136 in memory
flw f24, 0(x2) # load 0x2f082136 from memory into f24
fnmadd.s f3, f17, f12, f24, dyn # perform operation
fnmadd.s f3, f17, f12, f24, rdn # perform operation
fnmadd.s f3, f17, f12, f24, rmm # perform operation
fnmadd.s f3, f17, f12, f24, rne # perform operation
fnmadd.s f3, f17, f12, f24, rtz # perform operation
fnmadd.s f3, f17, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f17, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x20, 0x7d42c9ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x382d3b5b # load x3 with value 0x382d3b5b
sw x3, 0(x2) # store 0x382d3b5b in memory
flw f12, 0(x2) # load 0x382d3b5b from memory into f12
fnmadd.s f20, f15, f30, f12, dyn # perform operation
fnmadd.s f20, f15, f30, f12, rdn # perform operation
fnmadd.s f20, f15, f30, f12, rmm # perform operation
fnmadd.s f20, f15, f30, f12, rne # perform operation
fnmadd.s f20, f15, f30, f12, rtz # perform operation
fnmadd.s f20, f15, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f15, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x1, 0x43650f07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x1237dd99 # load x3 with value 0x1237dd99
sw x3, 0(x2) # store 0x1237dd99 in memory
flw f24, 0(x2) # load 0x1237dd99 from memory into f24
fnmadd.s f1, f13, f25, f24, dyn # perform operation
fnmadd.s f1, f13, f25, f24, rdn # perform operation
fnmadd.s f1, f13, f25, f24, rmm # perform operation
fnmadd.s f1, f13, f25, f24, rne # perform operation
fnmadd.s f1, f13, f25, f24, rtz # perform operation
fnmadd.s f1, f13, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x1, 0x2f9af339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xc06f5b63 # load x3 with value 0xc06f5b63
sw x3, 0(x2) # store 0xc06f5b63 in memory
flw f22, 0(x2) # load 0xc06f5b63 from memory into f22
fnmadd.s f1, f28, f15, f22, dyn # perform operation
fnmadd.s f1, f28, f15, f22, rdn # perform operation
fnmadd.s f1, f28, f15, f22, rmm # perform operation
fnmadd.s f1, f28, f15, f22, rne # perform operation
fnmadd.s f1, f28, f15, f22, rtz # perform operation
fnmadd.s f1, f28, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x12, 0xf105d059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x4b4ad9df # load x3 with value 0x4b4ad9df
sw x3, 0(x2) # store 0x4b4ad9df in memory
flw f7, 0(x2) # load 0x4b4ad9df from memory into f7
fnmadd.s f12, f3, f10, f7, dyn # perform operation
fnmadd.s f12, f3, f10, f7, rdn # perform operation
fnmadd.s f12, f3, f10, f7, rmm # perform operation
fnmadd.s f12, f3, f10, f7, rne # perform operation
fnmadd.s f12, f3, f10, f7, rtz # perform operation
fnmadd.s f12, f3, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x13, 0x891a099f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x9d7b0924 # load x3 with value 0x9d7b0924
sw x3, 0(x2) # store 0x9d7b0924 in memory
flw f25, 0(x2) # load 0x9d7b0924 from memory into f25
fnmadd.s f13, f18, f20, f25, dyn # perform operation
fnmadd.s f13, f18, f20, f25, rdn # perform operation
fnmadd.s f13, f18, f20, f25, rmm # perform operation
fnmadd.s f13, f18, f20, f25, rne # perform operation
fnmadd.s f13, f18, f20, f25, rtz # perform operation
fnmadd.s f13, f18, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x25, 0xc67f7a32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x065ff953 # load x3 with value 0x065ff953
sw x3, 0(x2) # store 0x065ff953 in memory
flw f16, 0(x2) # load 0x065ff953 from memory into f16
fnmadd.s f25, f31, f4, f16, dyn # perform operation
fnmadd.s f25, f31, f4, f16, rdn # perform operation
fnmadd.s f25, f31, f4, f16, rmm # perform operation
fnmadd.s f25, f31, f4, f16, rne # perform operation
fnmadd.s f25, f31, f4, f16, rtz # perform operation
fnmadd.s f25, f31, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f31, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x30, 0x9357a5ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xd17b14a1 # load x3 with value 0xd17b14a1
sw x3, 0(x2) # store 0xd17b14a1 in memory
flw f8, 0(x2) # load 0xd17b14a1 from memory into f8
fnmadd.s f30, f21, f24, f8, dyn # perform operation
fnmadd.s f30, f21, f24, f8, rdn # perform operation
fnmadd.s f30, f21, f24, f8, rmm # perform operation
fnmadd.s f30, f21, f24, f8, rne # perform operation
fnmadd.s f30, f21, f24, f8, rtz # perform operation
fnmadd.s f30, f21, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f21, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x31, 0x4d7e4b7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xb323f9dd # load x3 with value 0xb323f9dd
sw x3, 0(x2) # store 0xb323f9dd in memory
flw f27, 0(x2) # load 0xb323f9dd from memory into f27
fnmadd.s f31, f24, f14, f27, dyn # perform operation
fnmadd.s f31, f24, f14, f27, rdn # perform operation
fnmadd.s f31, f24, f14, f27, rmm # perform operation
fnmadd.s f31, f24, f14, f27, rne # perform operation
fnmadd.s f31, f24, f14, f27, rtz # perform operation
fnmadd.s f31, f24, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f24, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f24, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f24, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f24, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f24, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x29, 0x808d2466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x5bf61eab # load x3 with value 0x5bf61eab
sw x3, 0(x2) # store 0x5bf61eab in memory
flw f8, 0(x2) # load 0x5bf61eab from memory into f8
fnmadd.s f29, f27, f21, f8, dyn # perform operation
fnmadd.s f29, f27, f21, f8, rdn # perform operation
fnmadd.s f29, f27, f21, f8, rmm # perform operation
fnmadd.s f29, f27, f21, f8, rne # perform operation
fnmadd.s f29, f27, f21, f8, rtz # perform operation
fnmadd.s f29, f27, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x22, 0x8620f22f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xa2a6433f # load x3 with value 0xa2a6433f
sw x3, 0(x2) # store 0xa2a6433f in memory
flw f12, 0(x2) # load 0xa2a6433f from memory into f12
fnmadd.s f22, f17, f30, f12, dyn # perform operation
fnmadd.s f22, f17, f30, f12, rdn # perform operation
fnmadd.s f22, f17, f30, f12, rmm # perform operation
fnmadd.s f22, f17, f30, f12, rne # perform operation
fnmadd.s f22, f17, f30, f12, rtz # perform operation
fnmadd.s f22, f17, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x2, 0xf4479a7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xd48cee2d # load x3 with value 0xd48cee2d
sw x3, 0(x2) # store 0xd48cee2d in memory
flw f12, 0(x2) # load 0xd48cee2d from memory into f12
fnmadd.s f2, f27, f28, f12, dyn # perform operation
fnmadd.s f2, f27, f28, f12, rdn # perform operation
fnmadd.s f2, f27, f28, f12, rmm # perform operation
fnmadd.s f2, f27, f28, f12, rne # perform operation
fnmadd.s f2, f27, f28, f12, rtz # perform operation
fnmadd.s f2, f27, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x30, 0xbfc78965 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x9de1761c # load x3 with value 0x9de1761c
sw x3, 0(x2) # store 0x9de1761c in memory
flw f17, 0(x2) # load 0x9de1761c from memory into f17
fnmadd.s f30, f28, f4, f17, dyn # perform operation
fnmadd.s f30, f28, f4, f17, rdn # perform operation
fnmadd.s f30, f28, f4, f17, rmm # perform operation
fnmadd.s f30, f28, f4, f17, rne # perform operation
fnmadd.s f30, f28, f4, f17, rtz # perform operation
fnmadd.s f30, f28, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f28, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f28, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f28, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f28, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f28, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x17, 0xd4b04fd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x9d9fe57c # load x3 with value 0x9d9fe57c
sw x3, 0(x2) # store 0x9d9fe57c in memory
flw f22, 0(x2) # load 0x9d9fe57c from memory into f22
fnmadd.s f17, f5, f27, f22, dyn # perform operation
fnmadd.s f17, f5, f27, f22, rdn # perform operation
fnmadd.s f17, f5, f27, f22, rmm # perform operation
fnmadd.s f17, f5, f27, f22, rne # perform operation
fnmadd.s f17, f5, f27, f22, rtz # perform operation
fnmadd.s f17, f5, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f5, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x25, 0x5be98456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x038a0b71 # load x3 with value 0x038a0b71
sw x3, 0(x2) # store 0x038a0b71 in memory
flw f8, 0(x2) # load 0x038a0b71 from memory into f8
fnmadd.s f25, f12, f15, f8, dyn # perform operation
fnmadd.s f25, f12, f15, f8, rdn # perform operation
fnmadd.s f25, f12, f15, f8, rmm # perform operation
fnmadd.s f25, f12, f15, f8, rne # perform operation
fnmadd.s f25, f12, f15, f8, rtz # perform operation
fnmadd.s f25, f12, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x16, 0xf84a3c4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0xc6283f4f # load x3 with value 0xc6283f4f
sw x3, 0(x2) # store 0xc6283f4f in memory
flw f26, 0(x2) # load 0xc6283f4f from memory into f26
fnmadd.s f16, f23, f24, f26, dyn # perform operation
fnmadd.s f16, f23, f24, f26, rdn # perform operation
fnmadd.s f16, f23, f24, f26, rmm # perform operation
fnmadd.s f16, f23, f24, f26, rne # perform operation
fnmadd.s f16, f23, f24, f26, rtz # perform operation
fnmadd.s f16, f23, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x29, 0x2fa526c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x65360f1a # load x3 with value 0x65360f1a
sw x3, 0(x2) # store 0x65360f1a in memory
flw f17, 0(x2) # load 0x65360f1a from memory into f17
fnmadd.s f29, f28, f18, f17, dyn # perform operation
fnmadd.s f29, f28, f18, f17, rdn # perform operation
fnmadd.s f29, f28, f18, f17, rmm # perform operation
fnmadd.s f29, f28, f18, f17, rne # perform operation
fnmadd.s f29, f28, f18, f17, rtz # perform operation
fnmadd.s f29, f28, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f28, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x31, 0xbf0d2fd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xc909c68c # load x3 with value 0xc909c68c
sw x3, 0(x2) # store 0xc909c68c in memory
flw f16, 0(x2) # load 0xc909c68c from memory into f16
fnmadd.s f31, f20, f7, f16, dyn # perform operation
fnmadd.s f31, f20, f7, f16, rdn # perform operation
fnmadd.s f31, f20, f7, f16, rmm # perform operation
fnmadd.s f31, f20, f7, f16, rne # perform operation
fnmadd.s f31, f20, f7, f16, rtz # perform operation
fnmadd.s f31, f20, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f20, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x8, 0x7f70e54f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xe04500d1 # load x3 with value 0xe04500d1
sw x3, 0(x2) # store 0xe04500d1 in memory
flw f21, 0(x2) # load 0xe04500d1 from memory into f21
fnmadd.s f8, f24, f11, f21, dyn # perform operation
fnmadd.s f8, f24, f11, f21, rdn # perform operation
fnmadd.s f8, f24, f11, f21, rmm # perform operation
fnmadd.s f8, f24, f11, f21, rne # perform operation
fnmadd.s f8, f24, f11, f21, rtz # perform operation
fnmadd.s f8, f24, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f24, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x1, 0xc819e522 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x66e9c0d6 # load x3 with value 0x66e9c0d6
sw x3, 0(x2) # store 0x66e9c0d6 in memory
flw f11, 0(x2) # load 0x66e9c0d6 from memory into f11
fnmadd.s f1, f31, f22, f11, dyn # perform operation
fnmadd.s f1, f31, f22, f11, rdn # perform operation
fnmadd.s f1, f31, f22, f11, rmm # perform operation
fnmadd.s f1, f31, f22, f11, rne # perform operation
fnmadd.s f1, f31, f22, f11, rtz # perform operation
fnmadd.s f1, f31, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x8, 0x2149bfba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x1a3ed622 # load x3 with value 0x1a3ed622
sw x3, 0(x2) # store 0x1a3ed622 in memory
flw f2, 0(x2) # load 0x1a3ed622 from memory into f2
fnmadd.s f8, f1, f16, f2, dyn # perform operation
fnmadd.s f8, f1, f16, f2, rdn # perform operation
fnmadd.s f8, f1, f16, f2, rmm # perform operation
fnmadd.s f8, f1, f16, f2, rne # perform operation
fnmadd.s f8, f1, f16, f2, rtz # perform operation
fnmadd.s f8, f1, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f1, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f1, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f1, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f1, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f1, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x29, 0x78561f1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x3b0a82c1 # load x3 with value 0x3b0a82c1
sw x3, 0(x2) # store 0x3b0a82c1 in memory
flw f4, 0(x2) # load 0x3b0a82c1 from memory into f4
fnmadd.s f29, f15, f28, f4, dyn # perform operation
fnmadd.s f29, f15, f28, f4, rdn # perform operation
fnmadd.s f29, f15, f28, f4, rmm # perform operation
fnmadd.s f29, f15, f28, f4, rne # perform operation
fnmadd.s f29, f15, f28, f4, rtz # perform operation
fnmadd.s f29, f15, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x17, 0x3c531126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xda3ff19b # load x3 with value 0xda3ff19b
sw x3, 0(x2) # store 0xda3ff19b in memory
flw f21, 0(x2) # load 0xda3ff19b from memory into f21
fnmadd.s f17, f9, f3, f21, dyn # perform operation
fnmadd.s f17, f9, f3, f21, rdn # perform operation
fnmadd.s f17, f9, f3, f21, rmm # perform operation
fnmadd.s f17, f9, f3, f21, rne # perform operation
fnmadd.s f17, f9, f3, f21, rtz # perform operation
fnmadd.s f17, f9, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x21, 0x01f1a45b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x32bb36f9 # load x3 with value 0x32bb36f9
sw x3, 0(x2) # store 0x32bb36f9 in memory
flw f11, 0(x2) # load 0x32bb36f9 from memory into f11
fnmadd.s f21, f5, f18, f11, dyn # perform operation
fnmadd.s f21, f5, f18, f11, rdn # perform operation
fnmadd.s f21, f5, f18, f11, rmm # perform operation
fnmadd.s f21, f5, f18, f11, rne # perform operation
fnmadd.s f21, f5, f18, f11, rtz # perform operation
fnmadd.s f21, f5, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x14, 0xecd55306 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0xacf4debb # load x3 with value 0xacf4debb
sw x3, 0(x2) # store 0xacf4debb in memory
flw f19, 0(x2) # load 0xacf4debb from memory into f19
fnmadd.s f14, f30, f4, f19, dyn # perform operation
fnmadd.s f14, f30, f4, f19, rdn # perform operation
fnmadd.s f14, f30, f4, f19, rmm # perform operation
fnmadd.s f14, f30, f4, f19, rne # perform operation
fnmadd.s f14, f30, f4, f19, rtz # perform operation
fnmadd.s f14, f30, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f30, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x31, 0x10960f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x3745e8dc # load x3 with value 0x3745e8dc
sw x3, 0(x2) # store 0x3745e8dc in memory
flw f22, 0(x2) # load 0x3745e8dc from memory into f22
fnmadd.s f31, f1, f23, f22, dyn # perform operation
fnmadd.s f31, f1, f23, f22, rdn # perform operation
fnmadd.s f31, f1, f23, f22, rmm # perform operation
fnmadd.s f31, f1, f23, f22, rne # perform operation
fnmadd.s f31, f1, f23, f22, rtz # perform operation
fnmadd.s f31, f1, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x15, 0x243616ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0x42fdc50c # load x3 with value 0x42fdc50c
sw x3, 0(x2) # store 0x42fdc50c in memory
flw f12, 0(x2) # load 0x42fdc50c from memory into f12
fnmadd.s f15, f1, f20, f12, dyn # perform operation
fnmadd.s f15, f1, f20, f12, rdn # perform operation
fnmadd.s f15, f1, f20, f12, rmm # perform operation
fnmadd.s f15, f1, f20, f12, rne # perform operation
fnmadd.s f15, f1, f20, f12, rtz # perform operation
fnmadd.s f15, f1, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x27, 0x22d95e1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x7dfd5513 # load x3 with value 0x7dfd5513
sw x3, 0(x2) # store 0x7dfd5513 in memory
flw f23, 0(x2) # load 0x7dfd5513 from memory into f23
fnmadd.s f27, f6, f17, f23, dyn # perform operation
fnmadd.s f27, f6, f17, f23, rdn # perform operation
fnmadd.s f27, f6, f17, f23, rmm # perform operation
fnmadd.s f27, f6, f17, f23, rne # perform operation
fnmadd.s f27, f6, f17, f23, rtz # perform operation
fnmadd.s f27, f6, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x1, 0xe7d8b235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x4f2d4b52 # load x3 with value 0x4f2d4b52
sw x3, 0(x2) # store 0x4f2d4b52 in memory
flw f10, 0(x2) # load 0x4f2d4b52 from memory into f10
fnmadd.s f1, f19, f13, f10, dyn # perform operation
fnmadd.s f1, f19, f13, f10, rdn # perform operation
fnmadd.s f1, f19, f13, f10, rmm # perform operation
fnmadd.s f1, f19, f13, f10, rne # perform operation
fnmadd.s f1, f19, f13, f10, rtz # perform operation
fnmadd.s f1, f19, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x9, 0x5e17a2ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0xaf1198ed # load x3 with value 0xaf1198ed
sw x3, 0(x2) # store 0xaf1198ed in memory
flw f26, 0(x2) # load 0xaf1198ed from memory into f26
fnmadd.s f9, f28, f13, f26, dyn # perform operation
fnmadd.s f9, f28, f13, f26, rdn # perform operation
fnmadd.s f9, f28, f13, f26, rmm # perform operation
fnmadd.s f9, f28, f13, f26, rne # perform operation
fnmadd.s f9, f28, f13, f26, rtz # perform operation
fnmadd.s f9, f28, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f28, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x11, 0xdf4b4644 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x16e28d38 # load x3 with value 0x16e28d38
sw x3, 0(x2) # store 0x16e28d38 in memory
flw f31, 0(x2) # load 0x16e28d38 from memory into f31
fnmadd.s f11, f27, f13, f31, dyn # perform operation
fnmadd.s f11, f27, f13, f31, rdn # perform operation
fnmadd.s f11, f27, f13, f31, rmm # perform operation
fnmadd.s f11, f27, f13, f31, rne # perform operation
fnmadd.s f11, f27, f13, f31, rtz # perform operation
fnmadd.s f11, f27, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f27, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f27, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f27, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f27, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f27, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x30, 0x2b963a4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xbdc35f1a # load x3 with value 0xbdc35f1a
sw x3, 0(x2) # store 0xbdc35f1a in memory
flw f7, 0(x2) # load 0xbdc35f1a from memory into f7
fnmadd.s f30, f11, f5, f7, dyn # perform operation
fnmadd.s f30, f11, f5, f7, rdn # perform operation
fnmadd.s f30, f11, f5, f7, rmm # perform operation
fnmadd.s f30, f11, f5, f7, rne # perform operation
fnmadd.s f30, f11, f5, f7, rtz # perform operation
fnmadd.s f30, f11, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f11, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f11, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f11, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f11, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f11, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x26, 0x13da2395 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x75e45a9d # load x3 with value 0x75e45a9d
sw x3, 0(x2) # store 0x75e45a9d in memory
flw f30, 0(x2) # load 0x75e45a9d from memory into f30
fnmadd.s f26, f17, f19, f30, dyn # perform operation
fnmadd.s f26, f17, f19, f30, rdn # perform operation
fnmadd.s f26, f17, f19, f30, rmm # perform operation
fnmadd.s f26, f17, f19, f30, rne # perform operation
fnmadd.s f26, f17, f19, f30, rtz # perform operation
fnmadd.s f26, f17, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f17, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f17, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x6, 0x3f7f75a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x7192d5db # load x3 with value 0x7192d5db
sw x3, 0(x2) # store 0x7192d5db in memory
flw f16, 0(x2) # load 0x7192d5db from memory into f16
fnmadd.s f6, f5, f14, f16, dyn # perform operation
fnmadd.s f6, f5, f14, f16, rdn # perform operation
fnmadd.s f6, f5, f14, f16, rmm # perform operation
fnmadd.s f6, f5, f14, f16, rne # perform operation
fnmadd.s f6, f5, f14, f16, rtz # perform operation
fnmadd.s f6, f5, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f5, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x28, 0x9c799266 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x6ef6a739 # load x3 with value 0x6ef6a739
sw x3, 0(x2) # store 0x6ef6a739 in memory
flw f27, 0(x2) # load 0x6ef6a739 from memory into f27
fnmadd.s f28, f14, f16, f27, dyn # perform operation
fnmadd.s f28, f14, f16, f27, rdn # perform operation
fnmadd.s f28, f14, f16, f27, rmm # perform operation
fnmadd.s f28, f14, f16, f27, rne # perform operation
fnmadd.s f28, f14, f16, f27, rtz # perform operation
fnmadd.s f28, f14, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f14, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f14, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f14, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f14, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f14, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x26, 0xd60206b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xb112c7cf # load x3 with value 0xb112c7cf
sw x3, 0(x2) # store 0xb112c7cf in memory
flw f3, 0(x2) # load 0xb112c7cf from memory into f3
fnmadd.s f26, f23, f20, f3, dyn # perform operation
fnmadd.s f26, f23, f20, f3, rdn # perform operation
fnmadd.s f26, f23, f20, f3, rmm # perform operation
fnmadd.s f26, f23, f20, f3, rne # perform operation
fnmadd.s f26, f23, f20, f3, rtz # perform operation
fnmadd.s f26, f23, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x3, 0x4f6c44c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x7dfb476c # load x3 with value 0x7dfb476c
sw x3, 0(x2) # store 0x7dfb476c in memory
flw f17, 0(x2) # load 0x7dfb476c from memory into f17
fnmadd.s f3, f22, f10, f17, dyn # perform operation
fnmadd.s f3, f22, f10, f17, rdn # perform operation
fnmadd.s f3, f22, f10, f17, rmm # perform operation
fnmadd.s f3, f22, f10, f17, rne # perform operation
fnmadd.s f3, f22, f10, f17, rtz # perform operation
fnmadd.s f3, f22, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x24, 0xacda4cda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x1f0513f9 # load x3 with value 0x1f0513f9
sw x3, 0(x2) # store 0x1f0513f9 in memory
flw f10, 0(x2) # load 0x1f0513f9 from memory into f10
fnmadd.s f24, f2, f22, f10, dyn # perform operation
fnmadd.s f24, f2, f22, f10, rdn # perform operation
fnmadd.s f24, f2, f22, f10, rmm # perform operation
fnmadd.s f24, f2, f22, f10, rne # perform operation
fnmadd.s f24, f2, f22, f10, rtz # perform operation
fnmadd.s f24, f2, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f2, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x16, 0xf046ee1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xf5c6ddb8 # load x3 with value 0xf5c6ddb8
sw x3, 0(x2) # store 0xf5c6ddb8 in memory
flw f7, 0(x2) # load 0xf5c6ddb8 from memory into f7
fnmadd.s f16, f19, f30, f7, dyn # perform operation
fnmadd.s f16, f19, f30, f7, rdn # perform operation
fnmadd.s f16, f19, f30, f7, rmm # perform operation
fnmadd.s f16, f19, f30, f7, rne # perform operation
fnmadd.s f16, f19, f30, f7, rtz # perform operation
fnmadd.s f16, f19, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x22, 0xdc5e2bd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x7994fa84 # load x3 with value 0x7994fa84
sw x3, 0(x2) # store 0x7994fa84 in memory
flw f9, 0(x2) # load 0x7994fa84 from memory into f9
fnmadd.s f22, f12, f18, f9, dyn # perform operation
fnmadd.s f22, f12, f18, f9, rdn # perform operation
fnmadd.s f22, f12, f18, f9, rmm # perform operation
fnmadd.s f22, f12, f18, f9, rne # perform operation
fnmadd.s f22, f12, f18, f9, rtz # perform operation
fnmadd.s f22, f12, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f12, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f12, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x18, 0x33367d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0xc4ab240d # load x3 with value 0xc4ab240d
sw x3, 0(x2) # store 0xc4ab240d in memory
flw f14, 0(x2) # load 0xc4ab240d from memory into f14
fnmadd.s f18, f1, f31, f14, dyn # perform operation
fnmadd.s f18, f1, f31, f14, rdn # perform operation
fnmadd.s f18, f1, f31, f14, rmm # perform operation
fnmadd.s f18, f1, f31, f14, rne # perform operation
fnmadd.s f18, f1, f31, f14, rtz # perform operation
fnmadd.s f18, f1, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x12, 0x0a0e1bdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x32d9cee3 # load x3 with value 0x32d9cee3
sw x3, 0(x2) # store 0x32d9cee3 in memory
flw f1, 0(x2) # load 0x32d9cee3 from memory into f1
fnmadd.s f12, f11, f22, f1, dyn # perform operation
fnmadd.s f12, f11, f22, f1, rdn # perform operation
fnmadd.s f12, f11, f22, f1, rmm # perform operation
fnmadd.s f12, f11, f22, f1, rne # perform operation
fnmadd.s f12, f11, f22, f1, rtz # perform operation
fnmadd.s f12, f11, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f11, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x31, 0x1c93b130 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x6a863a94 # load x3 with value 0x6a863a94
sw x3, 0(x2) # store 0x6a863a94 in memory
flw f7, 0(x2) # load 0x6a863a94 from memory into f7
fnmadd.s f31, f4, f10, f7, dyn # perform operation
fnmadd.s f31, f4, f10, f7, rdn # perform operation
fnmadd.s f31, f4, f10, f7, rmm # perform operation
fnmadd.s f31, f4, f10, f7, rne # perform operation
fnmadd.s f31, f4, f10, f7, rtz # perform operation
fnmadd.s f31, f4, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f4, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f4, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f4, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f4, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f4, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x10, 0xb18d2421 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0xe72d86e8 # load x3 with value 0xe72d86e8
sw x3, 0(x2) # store 0xe72d86e8 in memory
flw f13, 0(x2) # load 0xe72d86e8 from memory into f13
fnmadd.s f10, f25, f22, f13, dyn # perform operation
fnmadd.s f10, f25, f22, f13, rdn # perform operation
fnmadd.s f10, f25, f22, f13, rmm # perform operation
fnmadd.s f10, f25, f22, f13, rne # perform operation
fnmadd.s f10, f25, f22, f13, rtz # perform operation
fnmadd.s f10, f25, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f25, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f25, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x2, 0x1c461d1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0xfdf89a50 # load x3 with value 0xfdf89a50
sw x3, 0(x2) # store 0xfdf89a50 in memory
flw f25, 0(x2) # load 0xfdf89a50 from memory into f25
fnmadd.s f2, f10, f17, f25, dyn # perform operation
fnmadd.s f2, f10, f17, f25, rdn # perform operation
fnmadd.s f2, f10, f17, f25, rmm # perform operation
fnmadd.s f2, f10, f17, f25, rne # perform operation
fnmadd.s f2, f10, f17, f25, rtz # perform operation
fnmadd.s f2, f10, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f10, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f10, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f10, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f10, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f10, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x30, 0x9fdb3759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xc8b120bd # load x3 with value 0xc8b120bd
sw x3, 0(x2) # store 0xc8b120bd in memory
flw f7, 0(x2) # load 0xc8b120bd from memory into f7
fnmadd.s f30, f18, f9, f7, dyn # perform operation
fnmadd.s f30, f18, f9, f7, rdn # perform operation
fnmadd.s f30, f18, f9, f7, rmm # perform operation
fnmadd.s f30, f18, f9, f7, rne # perform operation
fnmadd.s f30, f18, f9, f7, rtz # perform operation
fnmadd.s f30, f18, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x23, 0x04cad99a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x7e6403b3 # load x3 with value 0x7e6403b3
sw x3, 0(x2) # store 0x7e6403b3 in memory
flw f29, 0(x2) # load 0x7e6403b3 from memory into f29
fnmadd.s f23, f31, f30, f29, dyn # perform operation
fnmadd.s f23, f31, f30, f29, rdn # perform operation
fnmadd.s f23, f31, f30, f29, rmm # perform operation
fnmadd.s f23, f31, f30, f29, rne # perform operation
fnmadd.s f23, f31, f30, f29, rtz # perform operation
fnmadd.s f23, f31, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x19, 0x05b12ee1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xef6e702d # load x3 with value 0xef6e702d
sw x3, 0(x2) # store 0xef6e702d in memory
flw f11, 0(x2) # load 0xef6e702d from memory into f11
fnmadd.s f19, f25, f12, f11, dyn # perform operation
fnmadd.s f19, f25, f12, f11, rdn # perform operation
fnmadd.s f19, f25, f12, f11, rmm # perform operation
fnmadd.s f19, f25, f12, f11, rne # perform operation
fnmadd.s f19, f25, f12, f11, rtz # perform operation
fnmadd.s f19, f25, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f25, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x12, 0xd9d75d95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x048336cd # load x3 with value 0x048336cd
sw x3, 0(x2) # store 0x048336cd in memory
flw f16, 0(x2) # load 0x048336cd from memory into f16
fnmadd.s f12, f21, f31, f16, dyn # perform operation
fnmadd.s f12, f21, f31, f16, rdn # perform operation
fnmadd.s f12, f21, f31, f16, rmm # perform operation
fnmadd.s f12, f21, f31, f16, rne # perform operation
fnmadd.s f12, f21, f31, f16, rtz # perform operation
fnmadd.s f12, f21, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f21, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x27, 0x23bcccd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x809426f8 # load x3 with value 0x809426f8
sw x3, 0(x2) # store 0x809426f8 in memory
flw f7, 0(x2) # load 0x809426f8 from memory into f7
fnmadd.s f27, f30, f22, f7, dyn # perform operation
fnmadd.s f27, f30, f22, f7, rdn # perform operation
fnmadd.s f27, f30, f22, f7, rmm # perform operation
fnmadd.s f27, f30, f22, f7, rne # perform operation
fnmadd.s f27, f30, f22, f7, rtz # perform operation
fnmadd.s f27, f30, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f30, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x18, 0xd1d85f58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x6393c3fa # load x3 with value 0x6393c3fa
sw x3, 0(x2) # store 0x6393c3fa in memory
flw f29, 0(x2) # load 0x6393c3fa from memory into f29
fnmadd.s f18, f12, f21, f29, dyn # perform operation
fnmadd.s f18, f12, f21, f29, rdn # perform operation
fnmadd.s f18, f12, f21, f29, rmm # perform operation
fnmadd.s f18, f12, f21, f29, rne # perform operation
fnmadd.s f18, f12, f21, f29, rtz # perform operation
fnmadd.s f18, f12, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f12, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x27, 0xbb3d3239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x77f1d1fd # load x3 with value 0x77f1d1fd
sw x3, 0(x2) # store 0x77f1d1fd in memory
flw f18, 0(x2) # load 0x77f1d1fd from memory into f18
fnmadd.s f27, f24, f13, f18, dyn # perform operation
fnmadd.s f27, f24, f13, f18, rdn # perform operation
fnmadd.s f27, f24, f13, f18, rmm # perform operation
fnmadd.s f27, f24, f13, f18, rne # perform operation
fnmadd.s f27, f24, f13, f18, rtz # perform operation
fnmadd.s f27, f24, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f24, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f24, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f24, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f24, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f24, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x7, 0x9fa522fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x4cd58467 # load x3 with value 0x4cd58467
sw x3, 0(x2) # store 0x4cd58467 in memory
flw f4, 0(x2) # load 0x4cd58467 from memory into f4
fnmadd.s f7, f16, f30, f4, dyn # perform operation
fnmadd.s f7, f16, f30, f4, rdn # perform operation
fnmadd.s f7, f16, f30, f4, rmm # perform operation
fnmadd.s f7, f16, f30, f4, rne # perform operation
fnmadd.s f7, f16, f30, f4, rtz # perform operation
fnmadd.s f7, f16, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f16, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f16, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x31, 0x3c103785 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0xa46b7352 # load x3 with value 0xa46b7352
sw x3, 0(x2) # store 0xa46b7352 in memory
flw f8, 0(x2) # load 0xa46b7352 from memory into f8
fnmadd.s f31, f11, f12, f8, dyn # perform operation
fnmadd.s f31, f11, f12, f8, rdn # perform operation
fnmadd.s f31, f11, f12, f8, rmm # perform operation
fnmadd.s f31, f11, f12, f8, rne # perform operation
fnmadd.s f31, f11, f12, f8, rtz # perform operation
fnmadd.s f31, f11, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x28, 0xded6447e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0xfd824069 # load x3 with value 0xfd824069
sw x3, 0(x2) # store 0xfd824069 in memory
flw f26, 0(x2) # load 0xfd824069 from memory into f26
fnmadd.s f28, f23, f2, f26, dyn # perform operation
fnmadd.s f28, f23, f2, f26, rdn # perform operation
fnmadd.s f28, f23, f2, f26, rmm # perform operation
fnmadd.s f28, f23, f2, f26, rne # perform operation
fnmadd.s f28, f23, f2, f26, rtz # perform operation
fnmadd.s f28, f23, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x9, 0x608007c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xb22e1dea # load x3 with value 0xb22e1dea
sw x3, 0(x2) # store 0xb22e1dea in memory
flw f11, 0(x2) # load 0xb22e1dea from memory into f11
fnmadd.s f9, f15, f3, f11, dyn # perform operation
fnmadd.s f9, f15, f3, f11, rdn # perform operation
fnmadd.s f9, f15, f3, f11, rmm # perform operation
fnmadd.s f9, f15, f3, f11, rne # perform operation
fnmadd.s f9, f15, f3, f11, rtz # perform operation
fnmadd.s f9, f15, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x28, 0xed27977b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0xdca265e8 # load x3 with value 0xdca265e8
sw x3, 0(x2) # store 0xdca265e8 in memory
flw f20, 0(x2) # load 0xdca265e8 from memory into f20
fnmadd.s f28, f18, f21, f20, dyn # perform operation
fnmadd.s f28, f18, f21, f20, rdn # perform operation
fnmadd.s f28, f18, f21, f20, rmm # perform operation
fnmadd.s f28, f18, f21, f20, rne # perform operation
fnmadd.s f28, f18, f21, f20, rtz # perform operation
fnmadd.s f28, f18, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x13, 0x8292b392 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x2e009a71 # load x3 with value 0x2e009a71
sw x3, 0(x2) # store 0x2e009a71 in memory
flw f10, 0(x2) # load 0x2e009a71 from memory into f10
fnmadd.s f13, f19, f24, f10, dyn # perform operation
fnmadd.s f13, f19, f24, f10, rdn # perform operation
fnmadd.s f13, f19, f24, f10, rmm # perform operation
fnmadd.s f13, f19, f24, f10, rne # perform operation
fnmadd.s f13, f19, f24, f10, rtz # perform operation
fnmadd.s f13, f19, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x4, 0xf6b75003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0xaa403b97 # load x3 with value 0xaa403b97
sw x3, 0(x2) # store 0xaa403b97 in memory
flw f19, 0(x2) # load 0xaa403b97 from memory into f19
fnmadd.s f4, f20, f22, f19, dyn # perform operation
fnmadd.s f4, f20, f22, f19, rdn # perform operation
fnmadd.s f4, f20, f22, f19, rmm # perform operation
fnmadd.s f4, f20, f22, f19, rne # perform operation
fnmadd.s f4, f20, f22, f19, rtz # perform operation
fnmadd.s f4, f20, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f20, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x26, 0x34053df0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0xde966edb # load x3 with value 0xde966edb
sw x3, 0(x2) # store 0xde966edb in memory
flw f3, 0(x2) # load 0xde966edb from memory into f3
fnmadd.s f26, f23, f5, f3, dyn # perform operation
fnmadd.s f26, f23, f5, f3, rdn # perform operation
fnmadd.s f26, f23, f5, f3, rmm # perform operation
fnmadd.s f26, f23, f5, f3, rne # perform operation
fnmadd.s f26, f23, f5, f3, rtz # perform operation
fnmadd.s f26, f23, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x8, 0xce4aaf38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x90409afc # load x3 with value 0x90409afc
sw x3, 0(x2) # store 0x90409afc in memory
flw f18, 0(x2) # load 0x90409afc from memory into f18
fnmadd.s f8, f24, f2, f18, dyn # perform operation
fnmadd.s f8, f24, f2, f18, rdn # perform operation
fnmadd.s f8, f24, f2, f18, rmm # perform operation
fnmadd.s f8, f24, f2, f18, rne # perform operation
fnmadd.s f8, f24, f2, f18, rtz # perform operation
fnmadd.s f8, f24, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f24, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f24, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f24, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f24, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f24, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x6, 0x52f5d01c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x72823389 # load x3 with value 0x72823389
sw x3, 0(x2) # store 0x72823389 in memory
flw f3, 0(x2) # load 0x72823389 from memory into f3
fnmadd.s f6, f22, f5, f3, dyn # perform operation
fnmadd.s f6, f22, f5, f3, rdn # perform operation
fnmadd.s f6, f22, f5, f3, rmm # perform operation
fnmadd.s f6, f22, f5, f3, rne # perform operation
fnmadd.s f6, f22, f5, f3, rtz # perform operation
fnmadd.s f6, f22, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f22, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x21, 0x1da8296f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0xdd349803 # load x3 with value 0xdd349803
sw x3, 0(x2) # store 0xdd349803 in memory
flw f10, 0(x2) # load 0xdd349803 from memory into f10
fnmadd.s f21, f27, f20, f10, dyn # perform operation
fnmadd.s f21, f27, f20, f10, rdn # perform operation
fnmadd.s f21, f27, f20, f10, rmm # perform operation
fnmadd.s f21, f27, f20, f10, rne # perform operation
fnmadd.s f21, f27, f20, f10, rtz # perform operation
fnmadd.s f21, f27, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f27, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x29, 0x970bce07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x9369d351 # load x3 with value 0x9369d351
sw x3, 0(x2) # store 0x9369d351 in memory
flw f19, 0(x2) # load 0x9369d351 from memory into f19
fnmadd.s f29, f3, f17, f19, dyn # perform operation
fnmadd.s f29, f3, f17, f19, rdn # perform operation
fnmadd.s f29, f3, f17, f19, rmm # perform operation
fnmadd.s f29, f3, f17, f19, rne # perform operation
fnmadd.s f29, f3, f17, f19, rtz # perform operation
fnmadd.s f29, f3, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f17, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x22, 0xba27117c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xc36e9882 # load x3 with value 0xc36e9882
sw x3, 0(x2) # store 0xc36e9882 in memory
flw f5, 0(x2) # load 0xc36e9882 from memory into f5
fnmadd.s f22, f1, f19, f5, dyn # perform operation
fnmadd.s f22, f1, f19, f5, rdn # perform operation
fnmadd.s f22, f1, f19, f5, rmm # perform operation
fnmadd.s f22, f1, f19, f5, rne # perform operation
fnmadd.s f22, f1, f19, f5, rtz # perform operation
fnmadd.s f22, f1, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f1, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x30, 0x758a1886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x306b4530 # load x3 with value 0x306b4530
sw x3, 0(x2) # store 0x306b4530 in memory
flw f1, 0(x2) # load 0x306b4530 from memory into f1
fnmadd.s f30, f15, f9, f1, dyn # perform operation
fnmadd.s f30, f15, f9, f1, rdn # perform operation
fnmadd.s f30, f15, f9, f1, rmm # perform operation
fnmadd.s f30, f15, f9, f1, rne # perform operation
fnmadd.s f30, f15, f9, f1, rtz # perform operation
fnmadd.s f30, f15, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x11, 0xa6c2a916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0xe492c0fd # load x3 with value 0xe492c0fd
sw x3, 0(x2) # store 0xe492c0fd in memory
flw f2, 0(x2) # load 0xe492c0fd from memory into f2
fnmadd.s f11, f27, f5, f2, dyn # perform operation
fnmadd.s f11, f27, f5, f2, rdn # perform operation
fnmadd.s f11, f27, f5, f2, rmm # perform operation
fnmadd.s f11, f27, f5, f2, rne # perform operation
fnmadd.s f11, f27, f5, f2, rtz # perform operation
fnmadd.s f11, f27, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f27, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x7, 0x262fb679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xe5450e10 # load x3 with value 0xe5450e10
sw x3, 0(x2) # store 0xe5450e10 in memory
flw f11, 0(x2) # load 0xe5450e10 from memory into f11
fnmadd.s f7, f2, f12, f11, dyn # perform operation
fnmadd.s f7, f2, f12, f11, rdn # perform operation
fnmadd.s f7, f2, f12, f11, rmm # perform operation
fnmadd.s f7, f2, f12, f11, rne # perform operation
fnmadd.s f7, f2, f12, f11, rtz # perform operation
fnmadd.s f7, f2, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f2, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x19, 0xa13da4c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x845d5a96 # load x3 with value 0x845d5a96
sw x3, 0(x2) # store 0x845d5a96 in memory
flw f16, 0(x2) # load 0x845d5a96 from memory into f16
fnmadd.s f19, f21, f28, f16, dyn # perform operation
fnmadd.s f19, f21, f28, f16, rdn # perform operation
fnmadd.s f19, f21, f28, f16, rmm # perform operation
fnmadd.s f19, f21, f28, f16, rne # perform operation
fnmadd.s f19, f21, f28, f16, rtz # perform operation
fnmadd.s f19, f21, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f21, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f21, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f21, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f21, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f21, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x16, 0x0d50adaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0xfc1bf262 # load x3 with value 0xfc1bf262
sw x3, 0(x2) # store 0xfc1bf262 in memory
flw f25, 0(x2) # load 0xfc1bf262 from memory into f25
fnmadd.s f16, f18, f15, f25, dyn # perform operation
fnmadd.s f16, f18, f15, f25, rdn # perform operation
fnmadd.s f16, f18, f15, f25, rmm # perform operation
fnmadd.s f16, f18, f15, f25, rne # perform operation
fnmadd.s f16, f18, f15, f25, rtz # perform operation
fnmadd.s f16, f18, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f18, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x20, 0x05274e04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x3856ed92 # load x3 with value 0x3856ed92
sw x3, 0(x2) # store 0x3856ed92 in memory
flw f22, 0(x2) # load 0x3856ed92 from memory into f22
fnmadd.s f20, f7, f14, f22, dyn # perform operation
fnmadd.s f20, f7, f14, f22, rdn # perform operation
fnmadd.s f20, f7, f14, f22, rmm # perform operation
fnmadd.s f20, f7, f14, f22, rne # perform operation
fnmadd.s f20, f7, f14, f22, rtz # perform operation
fnmadd.s f20, f7, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f7, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f7, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f7, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f7, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f7, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x10, 0x0620f788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x5130c4c3 # load x3 with value 0x5130c4c3
sw x3, 0(x2) # store 0x5130c4c3 in memory
flw f3, 0(x2) # load 0x5130c4c3 from memory into f3
fnmadd.s f10, f5, f20, f3, dyn # perform operation
fnmadd.s f10, f5, f20, f3, rdn # perform operation
fnmadd.s f10, f5, f20, f3, rmm # perform operation
fnmadd.s f10, f5, f20, f3, rne # perform operation
fnmadd.s f10, f5, f20, f3, rtz # perform operation
fnmadd.s f10, f5, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x6, 0x71dc2f95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0xfbae3f78 # load x3 with value 0xfbae3f78
sw x3, 0(x2) # store 0xfbae3f78 in memory
flw f1, 0(x2) # load 0xfbae3f78 from memory into f1
fnmadd.s f6, f30, f11, f1, dyn # perform operation
fnmadd.s f6, f30, f11, f1, rdn # perform operation
fnmadd.s f6, f30, f11, f1, rmm # perform operation
fnmadd.s f6, f30, f11, f1, rne # perform operation
fnmadd.s f6, f30, f11, f1, rtz # perform operation
fnmadd.s f6, f30, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x4, 0x9c5e65d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xc1e0abe9 # load x3 with value 0xc1e0abe9
sw x3, 0(x2) # store 0xc1e0abe9 in memory
flw f3, 0(x2) # load 0xc1e0abe9 from memory into f3
fnmadd.s f4, f17, f24, f3, dyn # perform operation
fnmadd.s f4, f17, f24, f3, rdn # perform operation
fnmadd.s f4, f17, f24, f3, rmm # perform operation
fnmadd.s f4, f17, f24, f3, rne # perform operation
fnmadd.s f4, f17, f24, f3, rtz # perform operation
fnmadd.s f4, f17, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x30, 0x1e6ffb3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x26880d91 # load x3 with value 0x26880d91
sw x3, 0(x2) # store 0x26880d91 in memory
flw f20, 0(x2) # load 0x26880d91 from memory into f20
fnmadd.s f30, f24, f10, f20, dyn # perform operation
fnmadd.s f30, f24, f10, f20, rdn # perform operation
fnmadd.s f30, f24, f10, f20, rmm # perform operation
fnmadd.s f30, f24, f10, f20, rne # perform operation
fnmadd.s f30, f24, f10, f20, rtz # perform operation
fnmadd.s f30, f24, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f24, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x5, 0xe33df684 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x63e9b05c # load x3 with value 0x63e9b05c
sw x3, 0(x2) # store 0x63e9b05c in memory
flw f31, 0(x2) # load 0x63e9b05c from memory into f31
fnmadd.s f5, f9, f17, f31, dyn # perform operation
fnmadd.s f5, f9, f17, f31, rdn # perform operation
fnmadd.s f5, f9, f17, f31, rmm # perform operation
fnmadd.s f5, f9, f17, f31, rne # perform operation
fnmadd.s f5, f9, f17, f31, rtz # perform operation
fnmadd.s f5, f9, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x19, 0x546f15c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xc31b87ea # load x3 with value 0xc31b87ea
sw x3, 0(x2) # store 0xc31b87ea in memory
flw f23, 0(x2) # load 0xc31b87ea from memory into f23
fnmadd.s f19, f18, f15, f23, dyn # perform operation
fnmadd.s f19, f18, f15, f23, rdn # perform operation
fnmadd.s f19, f18, f15, f23, rmm # perform operation
fnmadd.s f19, f18, f15, f23, rne # perform operation
fnmadd.s f19, f18, f15, f23, rtz # perform operation
fnmadd.s f19, f18, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f18, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x4, 0x76f1cb3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0xb118ce38 # load x3 with value 0xb118ce38
sw x3, 0(x2) # store 0xb118ce38 in memory
flw f12, 0(x2) # load 0xb118ce38 from memory into f12
fnmadd.s f4, f13, f20, f12, dyn # perform operation
fnmadd.s f4, f13, f20, f12, rdn # perform operation
fnmadd.s f4, f13, f20, f12, rmm # perform operation
fnmadd.s f4, f13, f20, f12, rne # perform operation
fnmadd.s f4, f13, f20, f12, rtz # perform operation
fnmadd.s f4, f13, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f13, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f13, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f13, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f13, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f13, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x24, 0x768f2fe0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xefef8085 # load x3 with value 0xefef8085
sw x3, 0(x2) # store 0xefef8085 in memory
flw f2, 0(x2) # load 0xefef8085 from memory into f2
fnmadd.s f24, f27, f4, f2, dyn # perform operation
fnmadd.s f24, f27, f4, f2, rdn # perform operation
fnmadd.s f24, f27, f4, f2, rmm # perform operation
fnmadd.s f24, f27, f4, f2, rne # perform operation
fnmadd.s f24, f27, f4, f2, rtz # perform operation
fnmadd.s f24, f27, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f27, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f27, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f27, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f27, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f27, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x10, 0x086a9449 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x604bcc5f # load x3 with value 0x604bcc5f
sw x3, 0(x2) # store 0x604bcc5f in memory
flw f19, 0(x2) # load 0x604bcc5f from memory into f19
fnmadd.s f10, f27, f23, f19, dyn # perform operation
fnmadd.s f10, f27, f23, f19, rdn # perform operation
fnmadd.s f10, f27, f23, f19, rmm # perform operation
fnmadd.s f10, f27, f23, f19, rne # perform operation
fnmadd.s f10, f27, f23, f19, rtz # perform operation
fnmadd.s f10, f27, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f27, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x10, 0xb88d122d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xb86e2777 # load x3 with value 0xb86e2777
sw x3, 0(x2) # store 0xb86e2777 in memory
flw f20, 0(x2) # load 0xb86e2777 from memory into f20
fnmadd.s f10, f15, f6, f20, dyn # perform operation
fnmadd.s f10, f15, f6, f20, rdn # perform operation
fnmadd.s f10, f15, f6, f20, rmm # perform operation
fnmadd.s f10, f15, f6, f20, rne # perform operation
fnmadd.s f10, f15, f6, f20, rtz # perform operation
fnmadd.s f10, f15, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x28, 0xe8e608dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0xb04d7ec6 # load x3 with value 0xb04d7ec6
sw x3, 0(x2) # store 0xb04d7ec6 in memory
flw f4, 0(x2) # load 0xb04d7ec6 from memory into f4
fnmadd.s f28, f26, f17, f4, dyn # perform operation
fnmadd.s f28, f26, f17, f4, rdn # perform operation
fnmadd.s f28, f26, f17, f4, rmm # perform operation
fnmadd.s f28, f26, f17, f4, rne # perform operation
fnmadd.s f28, f26, f17, f4, rtz # perform operation
fnmadd.s f28, f26, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x22, 0x3eebf28d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x485baa05 # load x3 with value 0x485baa05
sw x3, 0(x2) # store 0x485baa05 in memory
flw f17, 0(x2) # load 0x485baa05 from memory into f17
fnmadd.s f22, f28, f16, f17, dyn # perform operation
fnmadd.s f22, f28, f16, f17, rdn # perform operation
fnmadd.s f22, f28, f16, f17, rmm # perform operation
fnmadd.s f22, f28, f16, f17, rne # perform operation
fnmadd.s f22, f28, f16, f17, rtz # perform operation
fnmadd.s f22, f28, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x8, 0xf42ed3cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xb6b392ef # load x3 with value 0xb6b392ef
sw x3, 0(x2) # store 0xb6b392ef in memory
flw f22, 0(x2) # load 0xb6b392ef from memory into f22
fnmadd.s f8, f15, f7, f22, dyn # perform operation
fnmadd.s f8, f15, f7, f22, rdn # perform operation
fnmadd.s f8, f15, f7, f22, rmm # perform operation
fnmadd.s f8, f15, f7, f22, rne # perform operation
fnmadd.s f8, f15, f7, f22, rtz # perform operation
fnmadd.s f8, f15, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x4, 0x557256ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0xfd9fd9a1 # load x3 with value 0xfd9fd9a1
sw x3, 0(x2) # store 0xfd9fd9a1 in memory
flw f16, 0(x2) # load 0xfd9fd9a1 from memory into f16
fnmadd.s f4, f28, f23, f16, dyn # perform operation
fnmadd.s f4, f28, f23, f16, rdn # perform operation
fnmadd.s f4, f28, f23, f16, rmm # perform operation
fnmadd.s f4, f28, f23, f16, rne # perform operation
fnmadd.s f4, f28, f23, f16, rtz # perform operation
fnmadd.s f4, f28, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f28, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f28, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f28, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f28, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f28, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x18, 0xdd5f740d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xa11120b0 # load x3 with value 0xa11120b0
sw x3, 0(x2) # store 0xa11120b0 in memory
flw f6, 0(x2) # load 0xa11120b0 from memory into f6
fnmadd.s f18, f28, f23, f6, dyn # perform operation
fnmadd.s f18, f28, f23, f6, rdn # perform operation
fnmadd.s f18, f28, f23, f6, rmm # perform operation
fnmadd.s f18, f28, f23, f6, rne # perform operation
fnmadd.s f18, f28, f23, f6, rtz # perform operation
fnmadd.s f18, f28, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x22, 0x80649a59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x2abdaa16 # load x3 with value 0x2abdaa16
sw x3, 0(x2) # store 0x2abdaa16 in memory
flw f24, 0(x2) # load 0x2abdaa16 from memory into f24
fnmadd.s f22, f4, f30, f24, dyn # perform operation
fnmadd.s f22, f4, f30, f24, rdn # perform operation
fnmadd.s f22, f4, f30, f24, rmm # perform operation
fnmadd.s f22, f4, f30, f24, rne # perform operation
fnmadd.s f22, f4, f30, f24, rtz # perform operation
fnmadd.s f22, f4, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f4, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f4, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x31, 0x77100c78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x3656bf4d # load x3 with value 0x3656bf4d
sw x3, 0(x2) # store 0x3656bf4d in memory
flw f10, 0(x2) # load 0x3656bf4d from memory into f10
fnmadd.s f31, f5, f28, f10, dyn # perform operation
fnmadd.s f31, f5, f28, f10, rdn # perform operation
fnmadd.s f31, f5, f28, f10, rmm # perform operation
fnmadd.s f31, f5, f28, f10, rne # perform operation
fnmadd.s f31, f5, f28, f10, rtz # perform operation
fnmadd.s f31, f5, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x26, 0x59011cae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xa66aef8f # load x3 with value 0xa66aef8f
sw x3, 0(x2) # store 0xa66aef8f in memory
flw f22, 0(x2) # load 0xa66aef8f from memory into f22
fnmadd.s f26, f2, f11, f22, dyn # perform operation
fnmadd.s f26, f2, f11, f22, rdn # perform operation
fnmadd.s f26, f2, f11, f22, rmm # perform operation
fnmadd.s f26, f2, f11, f22, rne # perform operation
fnmadd.s f26, f2, f11, f22, rtz # perform operation
fnmadd.s f26, f2, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f2, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x5, 0xf44a5c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0xff2533a9 # load x3 with value 0xff2533a9
sw x3, 0(x2) # store 0xff2533a9 in memory
flw f8, 0(x2) # load 0xff2533a9 from memory into f8
fnmadd.s f5, f21, f16, f8, dyn # perform operation
fnmadd.s f5, f21, f16, f8, rdn # perform operation
fnmadd.s f5, f21, f16, f8, rmm # perform operation
fnmadd.s f5, f21, f16, f8, rne # perform operation
fnmadd.s f5, f21, f16, f8, rtz # perform operation
fnmadd.s f5, f21, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x16, 0x465eea39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x668f2f31 # load x3 with value 0x668f2f31
sw x3, 0(x2) # store 0x668f2f31 in memory
flw f30, 0(x2) # load 0x668f2f31 from memory into f30
fnmadd.s f16, f24, f29, f30, dyn # perform operation
fnmadd.s f16, f24, f29, f30, rdn # perform operation
fnmadd.s f16, f24, f29, f30, rmm # perform operation
fnmadd.s f16, f24, f29, f30, rne # perform operation
fnmadd.s f16, f24, f29, f30, rtz # perform operation
fnmadd.s f16, f24, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x11, 0x16e70788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xb5e2f5c3 # load x3 with value 0xb5e2f5c3
sw x3, 0(x2) # store 0xb5e2f5c3 in memory
flw f19, 0(x2) # load 0xb5e2f5c3 from memory into f19
fnmadd.s f11, f23, f9, f19, dyn # perform operation
fnmadd.s f11, f23, f9, f19, rdn # perform operation
fnmadd.s f11, f23, f9, f19, rmm # perform operation
fnmadd.s f11, f23, f9, f19, rne # perform operation
fnmadd.s f11, f23, f9, f19, rtz # perform operation
fnmadd.s f11, f23, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x28, 0x913ff4d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0xc710334c # load x3 with value 0xc710334c
sw x3, 0(x2) # store 0xc710334c in memory
flw f30, 0(x2) # load 0xc710334c from memory into f30
fnmadd.s f28, f27, f25, f30, dyn # perform operation
fnmadd.s f28, f27, f25, f30, rdn # perform operation
fnmadd.s f28, f27, f25, f30, rmm # perform operation
fnmadd.s f28, f27, f25, f30, rne # perform operation
fnmadd.s f28, f27, f25, f30, rtz # perform operation
fnmadd.s f28, f27, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f25, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x1, 0x5325396d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x3532bd3c # load x3 with value 0x3532bd3c
sw x3, 0(x2) # store 0x3532bd3c in memory
flw f31, 0(x2) # load 0x3532bd3c from memory into f31
fnmadd.s f1, f29, f10, f31, dyn # perform operation
fnmadd.s f1, f29, f10, f31, rdn # perform operation
fnmadd.s f1, f29, f10, f31, rmm # perform operation
fnmadd.s f1, f29, f10, f31, rne # perform operation
fnmadd.s f1, f29, f10, f31, rtz # perform operation
fnmadd.s f1, f29, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f29, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x12, 0xc71264b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x0f3fb9c8 # load x3 with value 0x0f3fb9c8
sw x3, 0(x2) # store 0x0f3fb9c8 in memory
flw f15, 0(x2) # load 0x0f3fb9c8 from memory into f15
fnmadd.s f12, f4, f30, f15, dyn # perform operation
fnmadd.s f12, f4, f30, f15, rdn # perform operation
fnmadd.s f12, f4, f30, f15, rmm # perform operation
fnmadd.s f12, f4, f30, f15, rne # perform operation
fnmadd.s f12, f4, f30, f15, rtz # perform operation
fnmadd.s f12, f4, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f4, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f4, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f4, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f4, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f4, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x12, 0xec49fb80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0xbe427938 # load x3 with value 0xbe427938
sw x3, 0(x2) # store 0xbe427938 in memory
flw f23, 0(x2) # load 0xbe427938 from memory into f23
fnmadd.s f12, f25, f18, f23, dyn # perform operation
fnmadd.s f12, f25, f18, f23, rdn # perform operation
fnmadd.s f12, f25, f18, f23, rmm # perform operation
fnmadd.s f12, f25, f18, f23, rne # perform operation
fnmadd.s f12, f25, f18, f23, rtz # perform operation
fnmadd.s f12, f25, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f25, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x22, 0x922747b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0xbe4ef1d0 # load x3 with value 0xbe4ef1d0
sw x3, 0(x2) # store 0xbe4ef1d0 in memory
flw f18, 0(x2) # load 0xbe4ef1d0 from memory into f18
fnmadd.s f22, f21, f1, f18, dyn # perform operation
fnmadd.s f22, f21, f1, f18, rdn # perform operation
fnmadd.s f22, f21, f1, f18, rmm # perform operation
fnmadd.s f22, f21, f1, f18, rne # perform operation
fnmadd.s f22, f21, f1, f18, rtz # perform operation
fnmadd.s f22, f21, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f21, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x30, 0xac939497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xe9ed88bc # load x3 with value 0xe9ed88bc
sw x3, 0(x2) # store 0xe9ed88bc in memory
flw f23, 0(x2) # load 0xe9ed88bc from memory into f23
fnmadd.s f30, f7, f19, f23, dyn # perform operation
fnmadd.s f30, f7, f19, f23, rdn # perform operation
fnmadd.s f30, f7, f19, f23, rmm # perform operation
fnmadd.s f30, f7, f19, f23, rne # perform operation
fnmadd.s f30, f7, f19, f23, rtz # perform operation
fnmadd.s f30, f7, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f7, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f7, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x19, 0x4c002c5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x2ea409fa # load x3 with value 0x2ea409fa
sw x3, 0(x2) # store 0x2ea409fa in memory
flw f17, 0(x2) # load 0x2ea409fa from memory into f17
fnmadd.s f19, f25, f5, f17, dyn # perform operation
fnmadd.s f19, f25, f5, f17, rdn # perform operation
fnmadd.s f19, f25, f5, f17, rmm # perform operation
fnmadd.s f19, f25, f5, f17, rne # perform operation
fnmadd.s f19, f25, f5, f17, rtz # perform operation
fnmadd.s f19, f25, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f25, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x23, 0xd58aa710 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x217e1859 # load x3 with value 0x217e1859
sw x3, 0(x2) # store 0x217e1859 in memory
flw f22, 0(x2) # load 0x217e1859 from memory into f22
fnmadd.s f23, f8, f19, f22, dyn # perform operation
fnmadd.s f23, f8, f19, f22, rdn # perform operation
fnmadd.s f23, f8, f19, f22, rmm # perform operation
fnmadd.s f23, f8, f19, f22, rne # perform operation
fnmadd.s f23, f8, f19, f22, rtz # perform operation
fnmadd.s f23, f8, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f8, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x14, 0xdccfc696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0xed54617c # load x3 with value 0xed54617c
sw x3, 0(x2) # store 0xed54617c in memory
flw f12, 0(x2) # load 0xed54617c from memory into f12
fnmadd.s f14, f19, f22, f12, dyn # perform operation
fnmadd.s f14, f19, f22, f12, rdn # perform operation
fnmadd.s f14, f19, f22, f12, rmm # perform operation
fnmadd.s f14, f19, f22, f12, rne # perform operation
fnmadd.s f14, f19, f22, f12, rtz # perform operation
fnmadd.s f14, f19, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x14, 0x8f2c5828 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0xb98a2537 # load x3 with value 0xb98a2537
sw x3, 0(x2) # store 0xb98a2537 in memory
flw f28, 0(x2) # load 0xb98a2537 from memory into f28
fnmadd.s f14, f15, f10, f28, dyn # perform operation
fnmadd.s f14, f15, f10, f28, rdn # perform operation
fnmadd.s f14, f15, f10, f28, rmm # perform operation
fnmadd.s f14, f15, f10, f28, rne # perform operation
fnmadd.s f14, f15, f10, f28, rtz # perform operation
fnmadd.s f14, f15, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x13, 0x8ed2eb8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0xdc8c44bf # load x3 with value 0xdc8c44bf
sw x3, 0(x2) # store 0xdc8c44bf in memory
flw f25, 0(x2) # load 0xdc8c44bf from memory into f25
fnmadd.s f13, f20, f8, f25, dyn # perform operation
fnmadd.s f13, f20, f8, f25, rdn # perform operation
fnmadd.s f13, f20, f8, f25, rmm # perform operation
fnmadd.s f13, f20, f8, f25, rne # perform operation
fnmadd.s f13, f20, f8, f25, rtz # perform operation
fnmadd.s f13, f20, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x6, 0x5056b02b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x711091f9 # load x3 with value 0x711091f9
sw x3, 0(x2) # store 0x711091f9 in memory
flw f20, 0(x2) # load 0x711091f9 from memory into f20
fnmadd.s f6, f12, f18, f20, dyn # perform operation
fnmadd.s f6, f12, f18, f20, rdn # perform operation
fnmadd.s f6, f12, f18, f20, rmm # perform operation
fnmadd.s f6, f12, f18, f20, rne # perform operation
fnmadd.s f6, f12, f18, f20, rtz # perform operation
fnmadd.s f6, f12, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x11, 0x9c9832d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xcbf26990 # load x3 with value 0xcbf26990
sw x3, 0(x2) # store 0xcbf26990 in memory
flw f26, 0(x2) # load 0xcbf26990 from memory into f26
fnmadd.s f11, f10, f8, f26, dyn # perform operation
fnmadd.s f11, f10, f8, f26, rdn # perform operation
fnmadd.s f11, f10, f8, f26, rmm # perform operation
fnmadd.s f11, f10, f8, f26, rne # perform operation
fnmadd.s f11, f10, f8, f26, rtz # perform operation
fnmadd.s f11, f10, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f10, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x2, 0x423d8257 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x59622831 # load x3 with value 0x59622831
sw x3, 0(x2) # store 0x59622831 in memory
flw f31, 0(x2) # load 0x59622831 from memory into f31
fnmadd.s f2, f27, f7, f31, dyn # perform operation
fnmadd.s f2, f27, f7, f31, rdn # perform operation
fnmadd.s f2, f27, f7, f31, rmm # perform operation
fnmadd.s f2, f27, f7, f31, rne # perform operation
fnmadd.s f2, f27, f7, f31, rtz # perform operation
fnmadd.s f2, f27, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x24, 0xb583b802 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x2bcb3f70 # load x3 with value 0x2bcb3f70
sw x3, 0(x2) # store 0x2bcb3f70 in memory
flw f29, 0(x2) # load 0x2bcb3f70 from memory into f29
fnmadd.s f24, f30, f16, f29, dyn # perform operation
fnmadd.s f24, f30, f16, f29, rdn # perform operation
fnmadd.s f24, f30, f16, f29, rmm # perform operation
fnmadd.s f24, f30, f16, f29, rne # perform operation
fnmadd.s f24, f30, f16, f29, rtz # perform operation
fnmadd.s f24, f30, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x1, 0x025a51ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x1094e33a # load x3 with value 0x1094e33a
sw x3, 0(x2) # store 0x1094e33a in memory
flw f12, 0(x2) # load 0x1094e33a from memory into f12
fnmadd.s f1, f23, f30, f12, dyn # perform operation
fnmadd.s f1, f23, f30, f12, rdn # perform operation
fnmadd.s f1, f23, f30, f12, rmm # perform operation
fnmadd.s f1, f23, f30, f12, rne # perform operation
fnmadd.s f1, f23, f30, f12, rtz # perform operation
fnmadd.s f1, f23, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x4, 0x069d3a57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0xc2615d60 # load x3 with value 0xc2615d60
sw x3, 0(x2) # store 0xc2615d60 in memory
flw f15, 0(x2) # load 0xc2615d60 from memory into f15
fnmadd.s f4, f8, f13, f15, dyn # perform operation
fnmadd.s f4, f8, f13, f15, rdn # perform operation
fnmadd.s f4, f8, f13, f15, rmm # perform operation
fnmadd.s f4, f8, f13, f15, rne # perform operation
fnmadd.s f4, f8, f13, f15, rtz # perform operation
fnmadd.s f4, f8, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f8, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x9, 0x114fb8d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0xcf686fde # load x3 with value 0xcf686fde
sw x3, 0(x2) # store 0xcf686fde in memory
flw f25, 0(x2) # load 0xcf686fde from memory into f25
fnmadd.s f9, f1, f29, f25, dyn # perform operation
fnmadd.s f9, f1, f29, f25, rdn # perform operation
fnmadd.s f9, f1, f29, f25, rmm # perform operation
fnmadd.s f9, f1, f29, f25, rne # perform operation
fnmadd.s f9, f1, f29, f25, rtz # perform operation
fnmadd.s f9, f1, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f1, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f1, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f1, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f1, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f1, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x29, 0x7169d8f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xf7bcbf53 # load x3 with value 0xf7bcbf53
sw x3, 0(x2) # store 0xf7bcbf53 in memory
flw f24, 0(x2) # load 0xf7bcbf53 from memory into f24
fnmadd.s f29, f27, f1, f24, dyn # perform operation
fnmadd.s f29, f27, f1, f24, rdn # perform operation
fnmadd.s f29, f27, f1, f24, rmm # perform operation
fnmadd.s f29, f27, f1, f24, rne # perform operation
fnmadd.s f29, f27, f1, f24, rtz # perform operation
fnmadd.s f29, f27, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x8, 0x34e0719d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x2f356323 # load x3 with value 0x2f356323
sw x3, 0(x2) # store 0x2f356323 in memory
flw f22, 0(x2) # load 0x2f356323 from memory into f22
fnmadd.s f8, f18, f15, f22, dyn # perform operation
fnmadd.s f8, f18, f15, f22, rdn # perform operation
fnmadd.s f8, f18, f15, f22, rmm # perform operation
fnmadd.s f8, f18, f15, f22, rne # perform operation
fnmadd.s f8, f18, f15, f22, rtz # perform operation
fnmadd.s f8, f18, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f18, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x7, 0x89b0e4c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x7c02e75e # load x3 with value 0x7c02e75e
sw x3, 0(x2) # store 0x7c02e75e in memory
flw f14, 0(x2) # load 0x7c02e75e from memory into f14
fnmadd.s f7, f26, f4, f14, dyn # perform operation
fnmadd.s f7, f26, f4, f14, rdn # perform operation
fnmadd.s f7, f26, f4, f14, rmm # perform operation
fnmadd.s f7, f26, f4, f14, rne # perform operation
fnmadd.s f7, f26, f4, f14, rtz # perform operation
fnmadd.s f7, f26, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f26, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x1, 0x11f2b90a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x583dd134 # load x3 with value 0x583dd134
sw x3, 0(x2) # store 0x583dd134 in memory
flw f18, 0(x2) # load 0x583dd134 from memory into f18
fnmadd.s f1, f9, f8, f18, dyn # perform operation
fnmadd.s f1, f9, f8, f18, rdn # perform operation
fnmadd.s f1, f9, f8, f18, rmm # perform operation
fnmadd.s f1, f9, f8, f18, rne # perform operation
fnmadd.s f1, f9, f8, f18, rtz # perform operation
fnmadd.s f1, f9, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f9, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x24, 0xa707b5b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0xaacf3b6d # load x3 with value 0xaacf3b6d
sw x3, 0(x2) # store 0xaacf3b6d in memory
flw f4, 0(x2) # load 0xaacf3b6d from memory into f4
fnmadd.s f24, f19, f13, f4, dyn # perform operation
fnmadd.s f24, f19, f13, f4, rdn # perform operation
fnmadd.s f24, f19, f13, f4, rmm # perform operation
fnmadd.s f24, f19, f13, f4, rne # perform operation
fnmadd.s f24, f19, f13, f4, rtz # perform operation
fnmadd.s f24, f19, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f19, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f19, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f19, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f19, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f19, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x26, 0x36ba34f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x61314631 # load x3 with value 0x61314631
sw x3, 0(x2) # store 0x61314631 in memory
flw f7, 0(x2) # load 0x61314631 from memory into f7
fnmadd.s f26, f10, f5, f7, dyn # perform operation
fnmadd.s f26, f10, f5, f7, rdn # perform operation
fnmadd.s f26, f10, f5, f7, rmm # perform operation
fnmadd.s f26, f10, f5, f7, rne # perform operation
fnmadd.s f26, f10, f5, f7, rtz # perform operation
fnmadd.s f26, f10, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x30, 0x9043e98d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x3eee600b # load x3 with value 0x3eee600b
sw x3, 0(x2) # store 0x3eee600b in memory
flw f7, 0(x2) # load 0x3eee600b from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.s f30, f14, f7, f5, dyn # perform operation
fnmadd.s f30, f14, f7, f5, rdn # perform operation
fnmadd.s f30, f14, f7, f5, rmm # perform operation
fnmadd.s f30, f14, f7, f5, rne # perform operation
fnmadd.s f30, f14, f7, f5, rtz # perform operation
fnmadd.s f30, f14, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f14, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f14, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f14, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f14, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f14, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x7, 0xa605dbab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xe2b82c8b # load x3 with value 0xe2b82c8b
sw x3, 0(x2) # store 0xe2b82c8b in memory
flw f25, 0(x2) # load 0xe2b82c8b from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fnmadd.s f7, f12, f25, f31, dyn # perform operation
fnmadd.s f7, f12, f25, f31, rdn # perform operation
fnmadd.s f7, f12, f25, f31, rmm # perform operation
fnmadd.s f7, f12, f25, f31, rne # perform operation
fnmadd.s f7, f12, f25, f31, rtz # perform operation
fnmadd.s f7, f12, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x23, 0x7ead8a8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x77aebe1a # load x3 with value 0x77aebe1a
sw x3, 0(x2) # store 0x77aebe1a in memory
flw f27, 0(x2) # load 0x77aebe1a from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmadd.s f23, f21, f27, f6, dyn # perform operation
fnmadd.s f23, f21, f27, f6, rdn # perform operation
fnmadd.s f23, f21, f27, f6, rmm # perform operation
fnmadd.s f23, f21, f27, f6, rne # perform operation
fnmadd.s f23, f21, f27, f6, rtz # perform operation
fnmadd.s f23, f21, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f21, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x3, 0x532ec842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x8307cc36 # load x3 with value 0x8307cc36
sw x3, 0(x2) # store 0x8307cc36 in memory
flw f5, 0(x2) # load 0x8307cc36 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fnmadd.s f3, f12, f5, f4, dyn # perform operation
fnmadd.s f3, f12, f5, f4, rdn # perform operation
fnmadd.s f3, f12, f5, f4, rmm # perform operation
fnmadd.s f3, f12, f5, f4, rne # perform operation
fnmadd.s f3, f12, f5, f4, rtz # perform operation
fnmadd.s f3, f12, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x15, 0xa3643069 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xedb31dd8 # load x3 with value 0xedb31dd8
sw x3, 0(x2) # store 0xedb31dd8 in memory
flw f12, 0(x2) # load 0xedb31dd8 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f15, f29, f12, f27, dyn # perform operation
fnmadd.s f15, f29, f12, f27, rdn # perform operation
fnmadd.s f15, f29, f12, f27, rmm # perform operation
fnmadd.s f15, f29, f12, f27, rne # perform operation
fnmadd.s f15, f29, f12, f27, rtz # perform operation
fnmadd.s f15, f29, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f12, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x21, 0xdc77769a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xdd4701d9 # load x3 with value 0xdd4701d9
sw x3, 0(x2) # store 0xdd4701d9 in memory
flw f13, 0(x2) # load 0xdd4701d9 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmadd.s f21, f18, f13, f3, dyn # perform operation
fnmadd.s f21, f18, f13, f3, rdn # perform operation
fnmadd.s f21, f18, f13, f3, rmm # perform operation
fnmadd.s f21, f18, f13, f3, rne # perform operation
fnmadd.s f21, f18, f13, f3, rtz # perform operation
fnmadd.s f21, f18, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f18, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f18, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x2, 0x7aab16a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0xa37d04cc # load x3 with value 0xa37d04cc
sw x3, 0(x2) # store 0xa37d04cc in memory
flw f29, 0(x2) # load 0xa37d04cc from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fnmadd.s f2, f24, f29, f19, dyn # perform operation
fnmadd.s f2, f24, f29, f19, rdn # perform operation
fnmadd.s f2, f24, f29, f19, rmm # perform operation
fnmadd.s f2, f24, f29, f19, rne # perform operation
fnmadd.s f2, f24, f29, f19, rtz # perform operation
fnmadd.s f2, f24, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f24, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f24, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f24, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f24, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f24, f29, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x26, 0xffe3162c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0xa40632b6 # load x3 with value 0xa40632b6
sw x3, 0(x2) # store 0xa40632b6 in memory
flw f7, 0(x2) # load 0xa40632b6 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmadd.s f26, f13, f7, f24, dyn # perform operation
fnmadd.s f26, f13, f7, f24, rdn # perform operation
fnmadd.s f26, f13, f7, f24, rmm # perform operation
fnmadd.s f26, f13, f7, f24, rne # perform operation
fnmadd.s f26, f13, f7, f24, rtz # perform operation
fnmadd.s f26, f13, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x26, 0x839a0c4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x0e859191 # load x3 with value 0x0e859191
sw x3, 0(x2) # store 0x0e859191 in memory
flw f17, 0(x2) # load 0x0e859191 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fnmadd.s f26, f1, f17, f14, dyn # perform operation
fnmadd.s f26, f1, f17, f14, rdn # perform operation
fnmadd.s f26, f1, f17, f14, rmm # perform operation
fnmadd.s f26, f1, f17, f14, rne # perform operation
fnmadd.s f26, f1, f17, f14, rtz # perform operation
fnmadd.s f26, f1, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f1, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f1, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f1, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f1, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f1, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x10, 0x140fc575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x86ccd5e2 # load x3 with value 0x86ccd5e2
sw x3, 0(x2) # store 0x86ccd5e2 in memory
flw f1, 0(x2) # load 0x86ccd5e2 from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmadd.s f10, f30, f1, f17, dyn # perform operation
fnmadd.s f10, f30, f1, f17, rdn # perform operation
fnmadd.s f10, f30, f1, f17, rmm # perform operation
fnmadd.s f10, f30, f1, f17, rne # perform operation
fnmadd.s f10, f30, f1, f17, rtz # perform operation
fnmadd.s f10, f30, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x1, 0x30f9be42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xfe23ed58 # load x3 with value 0xfe23ed58
sw x3, 0(x2) # store 0xfe23ed58 in memory
flw f30, 0(x2) # load 0xfe23ed58 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fnmadd.s f1, f21, f30, f31, dyn # perform operation
fnmadd.s f1, f21, f30, f31, rdn # perform operation
fnmadd.s f1, f21, f30, f31, rmm # perform operation
fnmadd.s f1, f21, f30, f31, rne # perform operation
fnmadd.s f1, f21, f30, f31, rtz # perform operation
fnmadd.s f1, f21, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x29, 0x176f64ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xd8b24316 # load x3 with value 0xd8b24316
sw x3, 0(x2) # store 0xd8b24316 in memory
flw f19, 0(x2) # load 0xd8b24316 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmadd.s f29, f6, f19, f16, dyn # perform operation
fnmadd.s f29, f6, f19, f16, rdn # perform operation
fnmadd.s f29, f6, f19, f16, rmm # perform operation
fnmadd.s f29, f6, f19, f16, rne # perform operation
fnmadd.s f29, f6, f19, f16, rtz # perform operation
fnmadd.s f29, f6, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f6, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f6, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f6, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f6, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f6, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x15, 0x0d30010d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x8274dd0d # load x3 with value 0x8274dd0d
sw x3, 0(x2) # store 0x8274dd0d in memory
flw f19, 0(x2) # load 0x8274dd0d from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmadd.s f15, f26, f19, f14, dyn # perform operation
fnmadd.s f15, f26, f19, f14, rdn # perform operation
fnmadd.s f15, f26, f19, f14, rmm # perform operation
fnmadd.s f15, f26, f19, f14, rne # perform operation
fnmadd.s f15, f26, f19, f14, rtz # perform operation
fnmadd.s f15, f26, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x2, 0x304c6e3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x2957cef7 # load x3 with value 0x2957cef7
sw x3, 0(x2) # store 0x2957cef7 in memory
flw f22, 0(x2) # load 0x2957cef7 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmadd.s f2, f12, f22, f23, dyn # perform operation
fnmadd.s f2, f12, f22, f23, rdn # perform operation
fnmadd.s f2, f12, f22, f23, rmm # perform operation
fnmadd.s f2, f12, f22, f23, rne # perform operation
fnmadd.s f2, f12, f22, f23, rtz # perform operation
fnmadd.s f2, f12, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f12, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f12, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f12, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f12, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f12, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x12, 0x129a9db4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x5adb7df7 # load x3 with value 0x5adb7df7
sw x3, 0(x2) # store 0x5adb7df7 in memory
flw f14, 0(x2) # load 0x5adb7df7 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fnmadd.s f12, f26, f14, f10, dyn # perform operation
fnmadd.s f12, f26, f14, f10, rdn # perform operation
fnmadd.s f12, f26, f14, f10, rmm # perform operation
fnmadd.s f12, f26, f14, f10, rne # perform operation
fnmadd.s f12, f26, f14, f10, rtz # perform operation
fnmadd.s f12, f26, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f26, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x9, 0x3df3619b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0xcb564d2c # load x3 with value 0xcb564d2c
sw x3, 0(x2) # store 0xcb564d2c in memory
flw f14, 0(x2) # load 0xcb564d2c from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmadd.s f9, f7, f14, f25, dyn # perform operation
fnmadd.s f9, f7, f14, f25, rdn # perform operation
fnmadd.s f9, f7, f14, f25, rmm # perform operation
fnmadd.s f9, f7, f14, f25, rne # perform operation
fnmadd.s f9, f7, f14, f25, rtz # perform operation
fnmadd.s f9, f7, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f7, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f7, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x24, 0xc0640e10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xff6035df # load x3 with value 0xff6035df
sw x3, 0(x2) # store 0xff6035df in memory
flw f31, 0(x2) # load 0xff6035df from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.s f24, f5, f31, f25, dyn # perform operation
fnmadd.s f24, f5, f31, f25, rdn # perform operation
fnmadd.s f24, f5, f31, f25, rmm # perform operation
fnmadd.s f24, f5, f31, f25, rne # perform operation
fnmadd.s f24, f5, f31, f25, rtz # perform operation
fnmadd.s f24, f5, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f5, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x25, 0x4a9c0ba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xd093bdc7 # load x3 with value 0xd093bdc7
sw x3, 0(x2) # store 0xd093bdc7 in memory
flw f7, 0(x2) # load 0xd093bdc7 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fnmadd.s f25, f30, f7, f12, dyn # perform operation
fnmadd.s f25, f30, f7, f12, rdn # perform operation
fnmadd.s f25, f30, f7, f12, rmm # perform operation
fnmadd.s f25, f30, f7, f12, rne # perform operation
fnmadd.s f25, f30, f7, f12, rtz # perform operation
fnmadd.s f25, f30, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x17, 0x3aceb6de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xbfb8c089 # load x3 with value 0xbfb8c089
sw x3, 0(x2) # store 0xbfb8c089 in memory
flw f2, 0(x2) # load 0xbfb8c089 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fnmadd.s f17, f5, f2, f31, dyn # perform operation
fnmadd.s f17, f5, f2, f31, rdn # perform operation
fnmadd.s f17, f5, f2, f31, rmm # perform operation
fnmadd.s f17, f5, f2, f31, rne # perform operation
fnmadd.s f17, f5, f2, f31, rtz # perform operation
fnmadd.s f17, f5, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f5, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x14, 0x155cf30f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xd26f013d # load x3 with value 0xd26f013d
sw x3, 0(x2) # store 0xd26f013d in memory
flw f26, 0(x2) # load 0xd26f013d from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fnmadd.s f14, f6, f26, f18, dyn # perform operation
fnmadd.s f14, f6, f26, f18, rdn # perform operation
fnmadd.s f14, f6, f26, f18, rmm # perform operation
fnmadd.s f14, f6, f26, f18, rne # perform operation
fnmadd.s f14, f6, f26, f18, rtz # perform operation
fnmadd.s f14, f6, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f6, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f6, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x6, 0xb3048102 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x50aee091 # load x3 with value 0x50aee091
sw x3, 0(x2) # store 0x50aee091 in memory
flw f11, 0(x2) # load 0x50aee091 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmadd.s f6, f2, f11, f24, dyn # perform operation
fnmadd.s f6, f2, f11, f24, rdn # perform operation
fnmadd.s f6, f2, f11, f24, rmm # perform operation
fnmadd.s f6, f2, f11, f24, rne # perform operation
fnmadd.s f6, f2, f11, f24, rtz # perform operation
fnmadd.s f6, f2, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f2, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f2, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f2, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f2, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f2, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x17, 0x88056415 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xc367155f # load x3 with value 0xc367155f
sw x3, 0(x2) # store 0xc367155f in memory
flw f1, 0(x2) # load 0xc367155f from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fnmadd.s f17, f14, f1, f4, dyn # perform operation
fnmadd.s f17, f14, f1, f4, rdn # perform operation
fnmadd.s f17, f14, f1, f4, rmm # perform operation
fnmadd.s f17, f14, f1, f4, rne # perform operation
fnmadd.s f17, f14, f1, f4, rtz # perform operation
fnmadd.s f17, f14, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x12, 0xe7041be6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x612b186e # load x3 with value 0x612b186e
sw x3, 0(x2) # store 0x612b186e in memory
flw f31, 0(x2) # load 0x612b186e from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fnmadd.s f12, f22, f31, f14, dyn # perform operation
fnmadd.s f12, f22, f31, f14, rdn # perform operation
fnmadd.s f12, f22, f31, f14, rmm # perform operation
fnmadd.s f12, f22, f31, f14, rne # perform operation
fnmadd.s f12, f22, f31, f14, rtz # perform operation
fnmadd.s f12, f22, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x14, 0x1ec1ac07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xe1f3032b # load x3 with value 0xe1f3032b
sw x3, 0(x2) # store 0xe1f3032b in memory
flw f30, 0(x2) # load 0xe1f3032b from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmadd.s f14, f3, f30, f1, dyn # perform operation
fnmadd.s f14, f3, f30, f1, rdn # perform operation
fnmadd.s f14, f3, f30, f1, rmm # perform operation
fnmadd.s f14, f3, f30, f1, rne # perform operation
fnmadd.s f14, f3, f30, f1, rtz # perform operation
fnmadd.s f14, f3, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f3, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x13, 0xf3e0af82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x6f5bd7c7 # load x3 with value 0x6f5bd7c7
sw x3, 0(x2) # store 0x6f5bd7c7 in memory
flw f20, 0(x2) # load 0x6f5bd7c7 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f13, f8, f20, f1, dyn # perform operation
fnmadd.s f13, f8, f20, f1, rdn # perform operation
fnmadd.s f13, f8, f20, f1, rmm # perform operation
fnmadd.s f13, f8, f20, f1, rne # perform operation
fnmadd.s f13, f8, f20, f1, rtz # perform operation
fnmadd.s f13, f8, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f8, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x1, 0x81e30d40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xcbf20d93 # load x3 with value 0xcbf20d93
sw x3, 0(x2) # store 0xcbf20d93 in memory
flw f25, 0(x2) # load 0xcbf20d93 from memory into f25
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmadd.s f1, f23, f25, f9, dyn # perform operation
fnmadd.s f1, f23, f25, f9, rdn # perform operation
fnmadd.s f1, f23, f25, f9, rmm # perform operation
fnmadd.s f1, f23, f25, f9, rne # perform operation
fnmadd.s f1, f23, f25, f9, rtz # perform operation
fnmadd.s f1, f23, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f25, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x1, 0x4b20d338 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xeaa9b963 # load x3 with value 0xeaa9b963
sw x3, 0(x2) # store 0xeaa9b963 in memory
flw f3, 0(x2) # load 0xeaa9b963 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.s f1, f7, f3, f4, dyn # perform operation
fnmadd.s f1, f7, f3, f4, rdn # perform operation
fnmadd.s f1, f7, f3, f4, rmm # perform operation
fnmadd.s f1, f7, f3, f4, rne # perform operation
fnmadd.s f1, f7, f3, f4, rtz # perform operation
fnmadd.s f1, f7, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x25, 0x7675c6c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x8f7e2aaf # load x3 with value 0x8f7e2aaf
sw x3, 0(x2) # store 0x8f7e2aaf in memory
flw f5, 0(x2) # load 0x8f7e2aaf from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fnmadd.s f25, f24, f5, f14, dyn # perform operation
fnmadd.s f25, f24, f5, f14, rdn # perform operation
fnmadd.s f25, f24, f5, f14, rmm # perform operation
fnmadd.s f25, f24, f5, f14, rne # perform operation
fnmadd.s f25, f24, f5, f14, rtz # perform operation
fnmadd.s f25, f24, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f24, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f24, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f24, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f24, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f24, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x1, 0x90c8a132 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x67fca5b1 # load x3 with value 0x67fca5b1
sw x3, 0(x2) # store 0x67fca5b1 in memory
flw f27, 0(x2) # load 0x67fca5b1 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fnmadd.s f1, f10, f27, f17, dyn # perform operation
fnmadd.s f1, f10, f27, f17, rdn # perform operation
fnmadd.s f1, f10, f27, f17, rmm # perform operation
fnmadd.s f1, f10, f27, f17, rne # perform operation
fnmadd.s f1, f10, f27, f17, rtz # perform operation
fnmadd.s f1, f10, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f10, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f10, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x10, 0xcbad9959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x494f311c # load x3 with value 0x494f311c
sw x3, 0(x2) # store 0x494f311c in memory
flw f1, 0(x2) # load 0x494f311c from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f10, f23, f1, f18, dyn # perform operation
fnmadd.s f10, f23, f1, f18, rdn # perform operation
fnmadd.s f10, f23, f1, f18, rmm # perform operation
fnmadd.s f10, f23, f1, f18, rne # perform operation
fnmadd.s f10, f23, f1, f18, rtz # perform operation
fnmadd.s f10, f23, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f23, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f23, f1, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x28, 0x91192868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x5e006a2d # load x3 with value 0x5e006a2d
sw x3, 0(x2) # store 0x5e006a2d in memory
flw f29, 0(x2) # load 0x5e006a2d from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f28, f24, f29, f9, dyn # perform operation
fnmadd.s f28, f24, f29, f9, rdn # perform operation
fnmadd.s f28, f24, f29, f9, rmm # perform operation
fnmadd.s f28, f24, f29, f9, rne # perform operation
fnmadd.s f28, f24, f29, f9, rtz # perform operation
fnmadd.s f28, f24, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f24, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x24, 0x09865992 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xcc82feba # load x3 with value 0xcc82feba
sw x3, 0(x2) # store 0xcc82feba in memory
flw f5, 0(x2) # load 0xcc82feba from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fnmadd.s f24, f29, f5, f15, dyn # perform operation
fnmadd.s f24, f29, f5, f15, rdn # perform operation
fnmadd.s f24, f29, f5, f15, rmm # perform operation
fnmadd.s f24, f29, f5, f15, rne # perform operation
fnmadd.s f24, f29, f5, f15, rtz # perform operation
fnmadd.s f24, f29, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f29, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x4, 0x8516df72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x2393d202 # load x3 with value 0x2393d202
sw x3, 0(x2) # store 0x2393d202 in memory
flw f10, 0(x2) # load 0x2393d202 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f4, f13, f10, f30, dyn # perform operation
fnmadd.s f4, f13, f10, f30, rdn # perform operation
fnmadd.s f4, f13, f10, f30, rmm # perform operation
fnmadd.s f4, f13, f10, f30, rne # perform operation
fnmadd.s f4, f13, f10, f30, rtz # perform operation
fnmadd.s f4, f13, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f13, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x9, 0x268d4c5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0xd9165043 # load x3 with value 0xd9165043
sw x3, 0(x2) # store 0xd9165043 in memory
flw f1, 0(x2) # load 0xd9165043 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmadd.s f9, f5, f1, f30, dyn # perform operation
fnmadd.s f9, f5, f1, f30, rdn # perform operation
fnmadd.s f9, f5, f1, f30, rmm # perform operation
fnmadd.s f9, f5, f1, f30, rne # perform operation
fnmadd.s f9, f5, f1, f30, rtz # perform operation
fnmadd.s f9, f5, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f5, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x21, 0xab9f4b70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x535d4310 # load x3 with value 0x535d4310
sw x3, 0(x2) # store 0x535d4310 in memory
flw f2, 0(x2) # load 0x535d4310 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fnmadd.s f21, f10, f2, f23, dyn # perform operation
fnmadd.s f21, f10, f2, f23, rdn # perform operation
fnmadd.s f21, f10, f2, f23, rmm # perform operation
fnmadd.s f21, f10, f2, f23, rne # perform operation
fnmadd.s f21, f10, f2, f23, rtz # perform operation
fnmadd.s f21, f10, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x2, 0x9b7e1224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0xae8b1f2d # load x3 with value 0xae8b1f2d
sw x3, 0(x2) # store 0xae8b1f2d in memory
flw f26, 0(x2) # load 0xae8b1f2d from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmadd.s f2, f6, f26, f5, dyn # perform operation
fnmadd.s f2, f6, f26, f5, rdn # perform operation
fnmadd.s f2, f6, f26, f5, rmm # perform operation
fnmadd.s f2, f6, f26, f5, rne # perform operation
fnmadd.s f2, f6, f26, f5, rtz # perform operation
fnmadd.s f2, f6, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x17, 0x042f0aee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xad777620 # load x3 with value 0xad777620
sw x3, 0(x2) # store 0xad777620 in memory
flw f21, 0(x2) # load 0xad777620 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmadd.s f17, f7, f21, f9, dyn # perform operation
fnmadd.s f17, f7, f21, f9, rdn # perform operation
fnmadd.s f17, f7, f21, f9, rmm # perform operation
fnmadd.s f17, f7, f21, f9, rne # perform operation
fnmadd.s f17, f7, f21, f9, rtz # perform operation
fnmadd.s f17, f7, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x30, 0xe05d9d5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x0db19e3c # load x3 with value 0x0db19e3c
sw x3, 0(x2) # store 0x0db19e3c in memory
flw f9, 0(x2) # load 0x0db19e3c from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmadd.s f30, f1, f9, f28, dyn # perform operation
fnmadd.s f30, f1, f9, f28, rdn # perform operation
fnmadd.s f30, f1, f9, f28, rmm # perform operation
fnmadd.s f30, f1, f9, f28, rne # perform operation
fnmadd.s f30, f1, f9, f28, rtz # perform operation
fnmadd.s f30, f1, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f1, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x13, 0xfb3bb6e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x2f790e0d # load x3 with value 0x2f790e0d
sw x3, 0(x2) # store 0x2f790e0d in memory
flw f2, 0(x2) # load 0x2f790e0d from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f13, f22, f2, f7, dyn # perform operation
fnmadd.s f13, f22, f2, f7, rdn # perform operation
fnmadd.s f13, f22, f2, f7, rmm # perform operation
fnmadd.s f13, f22, f2, f7, rne # perform operation
fnmadd.s f13, f22, f2, f7, rtz # perform operation
fnmadd.s f13, f22, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f22, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f22, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x20, 0xda57de01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xb0a4d5aa # load x3 with value 0xb0a4d5aa
sw x3, 0(x2) # store 0xb0a4d5aa in memory
flw f8, 0(x2) # load 0xb0a4d5aa from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmadd.s f20, f7, f8, f14, dyn # perform operation
fnmadd.s f20, f7, f8, f14, rdn # perform operation
fnmadd.s f20, f7, f8, f14, rmm # perform operation
fnmadd.s f20, f7, f8, f14, rne # perform operation
fnmadd.s f20, f7, f8, f14, rtz # perform operation
fnmadd.s f20, f7, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f7, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x13, 0x2c4d244f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x343f39a6 # load x3 with value 0x343f39a6
sw x3, 0(x2) # store 0x343f39a6 in memory
flw f30, 0(x2) # load 0x343f39a6 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmadd.s f13, f22, f30, f18, dyn # perform operation
fnmadd.s f13, f22, f30, f18, rdn # perform operation
fnmadd.s f13, f22, f30, f18, rmm # perform operation
fnmadd.s f13, f22, f30, f18, rne # perform operation
fnmadd.s f13, f22, f30, f18, rtz # perform operation
fnmadd.s f13, f22, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f22, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x31, 0x6f0e765e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x43f09001 # load x3 with value 0x43f09001
sw x3, 0(x2) # store 0x43f09001 in memory
flw f7, 0(x2) # load 0x43f09001 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmadd.s f31, f18, f7, f14, dyn # perform operation
fnmadd.s f31, f18, f7, f14, rdn # perform operation
fnmadd.s f31, f18, f7, f14, rmm # perform operation
fnmadd.s f31, f18, f7, f14, rne # perform operation
fnmadd.s f31, f18, f7, f14, rtz # perform operation
fnmadd.s f31, f18, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f18, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x6, 0x89da83c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x515f9ad3 # load x3 with value 0x515f9ad3
sw x3, 0(x2) # store 0x515f9ad3 in memory
flw f1, 0(x2) # load 0x515f9ad3 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.s f6, f11, f1, f7, dyn # perform operation
fnmadd.s f6, f11, f1, f7, rdn # perform operation
fnmadd.s f6, f11, f1, f7, rmm # perform operation
fnmadd.s f6, f11, f1, f7, rne # perform operation
fnmadd.s f6, f11, f1, f7, rtz # perform operation
fnmadd.s f6, f11, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f11, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x12, 0xe1490526 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x60810165 # load x3 with value 0x60810165
sw x3, 0(x2) # store 0x60810165 in memory
flw f25, 0(x2) # load 0x60810165 from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
fnmadd.s f12, f27, f25, f4, dyn # perform operation
fnmadd.s f12, f27, f25, f4, rdn # perform operation
fnmadd.s f12, f27, f25, f4, rmm # perform operation
fnmadd.s f12, f27, f25, f4, rne # perform operation
fnmadd.s f12, f27, f25, f4, rtz # perform operation
fnmadd.s f12, f27, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f27, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f27, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f27, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f27, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f27, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x12, 0x6d34d564 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x9891f3f8 # load x3 with value 0x9891f3f8
sw x3, 0(x2) # store 0x9891f3f8 in memory
flw f24, 0(x2) # load 0x9891f3f8 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fnmadd.s f12, f27, f24, f25, dyn # perform operation
fnmadd.s f12, f27, f24, f25, rdn # perform operation
fnmadd.s f12, f27, f24, f25, rmm # perform operation
fnmadd.s f12, f27, f24, f25, rne # perform operation
fnmadd.s f12, f27, f24, f25, rtz # perform operation
fnmadd.s f12, f27, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f27, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x17, 0xe90fbaff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x60281a3d # load x3 with value 0x60281a3d
sw x3, 0(x2) # store 0x60281a3d in memory
flw f23, 0(x2) # load 0x60281a3d from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmadd.s f17, f22, f23, f20, dyn # perform operation
fnmadd.s f17, f22, f23, f20, rdn # perform operation
fnmadd.s f17, f22, f23, f20, rmm # perform operation
fnmadd.s f17, f22, f23, f20, rne # perform operation
fnmadd.s f17, f22, f23, f20, rtz # perform operation
fnmadd.s f17, f22, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f22, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x9, 0x77f249ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x536ddad2 # load x3 with value 0x536ddad2
sw x3, 0(x2) # store 0x536ddad2 in memory
flw f16, 0(x2) # load 0x536ddad2 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fnmadd.s f9, f31, f16, f26, dyn # perform operation
fnmadd.s f9, f31, f16, f26, rdn # perform operation
fnmadd.s f9, f31, f16, f26, rmm # perform operation
fnmadd.s f9, f31, f16, f26, rne # perform operation
fnmadd.s f9, f31, f16, f26, rtz # perform operation
fnmadd.s f9, f31, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f31, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x13, 0x605ee322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xb76d6dc7 # load x3 with value 0xb76d6dc7
sw x3, 0(x2) # store 0xb76d6dc7 in memory
flw f29, 0(x2) # load 0xb76d6dc7 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fnmadd.s f13, f9, f29, f5, dyn # perform operation
fnmadd.s f13, f9, f29, f5, rdn # perform operation
fnmadd.s f13, f9, f29, f5, rmm # perform operation
fnmadd.s f13, f9, f29, f5, rne # perform operation
fnmadd.s f13, f9, f29, f5, rtz # perform operation
fnmadd.s f13, f9, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f29, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x21, 0x53bb4685 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0xc27ad184 # load x3 with value 0xc27ad184
sw x3, 0(x2) # store 0xc27ad184 in memory
flw f30, 0(x2) # load 0xc27ad184 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmadd.s f21, f6, f30, f26, dyn # perform operation
fnmadd.s f21, f6, f30, f26, rdn # perform operation
fnmadd.s f21, f6, f30, f26, rmm # perform operation
fnmadd.s f21, f6, f30, f26, rne # perform operation
fnmadd.s f21, f6, f30, f26, rtz # perform operation
fnmadd.s f21, f6, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x14, 0x5c038bc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x9438f1c9 # load x3 with value 0x9438f1c9
sw x3, 0(x2) # store 0x9438f1c9 in memory
flw f7, 0(x2) # load 0x9438f1c9 from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmadd.s f14, f15, f7, f30, dyn # perform operation
fnmadd.s f14, f15, f7, f30, rdn # perform operation
fnmadd.s f14, f15, f7, f30, rmm # perform operation
fnmadd.s f14, f15, f7, f30, rne # perform operation
fnmadd.s f14, f15, f7, f30, rtz # perform operation
fnmadd.s f14, f15, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x3, 0x739ff1bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0xa2801bcc # load x3 with value 0xa2801bcc
sw x3, 0(x2) # store 0xa2801bcc in memory
flw f29, 0(x2) # load 0xa2801bcc from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmadd.s f3, f24, f29, f20, dyn # perform operation
fnmadd.s f3, f24, f29, f20, rdn # perform operation
fnmadd.s f3, f24, f29, f20, rmm # perform operation
fnmadd.s f3, f24, f29, f20, rne # perform operation
fnmadd.s f3, f24, f29, f20, rtz # perform operation
fnmadd.s f3, f24, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f24, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x18, 0x943b6b5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x1e729c84 # load x3 with value 0x1e729c84
sw x3, 0(x2) # store 0x1e729c84 in memory
flw f10, 0(x2) # load 0x1e729c84 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fnmadd.s f18, f11, f10, f24, dyn # perform operation
fnmadd.s f18, f11, f10, f24, rdn # perform operation
fnmadd.s f18, f11, f10, f24, rmm # perform operation
fnmadd.s f18, f11, f10, f24, rne # perform operation
fnmadd.s f18, f11, f10, f24, rtz # perform operation
fnmadd.s f18, f11, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x13, 0xdd80ec7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x8e1c15c6 # load x3 with value 0x8e1c15c6
sw x3, 0(x2) # store 0x8e1c15c6 in memory
flw f11, 0(x2) # load 0x8e1c15c6 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmadd.s f13, f12, f11, f25, dyn # perform operation
fnmadd.s f13, f12, f11, f25, rdn # perform operation
fnmadd.s f13, f12, f11, f25, rmm # perform operation
fnmadd.s f13, f12, f11, f25, rne # perform operation
fnmadd.s f13, f12, f11, f25, rtz # perform operation
fnmadd.s f13, f12, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x13, 0xcf6e85ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x9e0fd753 # load x3 with value 0x9e0fd753
sw x3, 0(x2) # store 0x9e0fd753 in memory
flw f27, 0(x2) # load 0x9e0fd753 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fnmadd.s f13, f30, f27, f11, dyn # perform operation
fnmadd.s f13, f30, f27, f11, rdn # perform operation
fnmadd.s f13, f30, f27, f11, rmm # perform operation
fnmadd.s f13, f30, f27, f11, rne # perform operation
fnmadd.s f13, f30, f27, f11, rtz # perform operation
fnmadd.s f13, f30, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f30, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f30, f27, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x13, 0xa1318a38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x83d93bed # load x3 with value 0x83d93bed
sw x3, 0(x2) # store 0x83d93bed in memory
flw f16, 0(x2) # load 0x83d93bed from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fnmadd.s f13, f2, f16, f18, dyn # perform operation
fnmadd.s f13, f2, f16, f18, rdn # perform operation
fnmadd.s f13, f2, f16, f18, rmm # perform operation
fnmadd.s f13, f2, f16, f18, rne # perform operation
fnmadd.s f13, f2, f16, f18, rtz # perform operation
fnmadd.s f13, f2, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f2, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x30, 0xa9e3de4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x931574dd # load x3 with value 0x931574dd
sw x3, 0(x2) # store 0x931574dd in memory
flw f31, 0(x2) # load 0x931574dd from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fnmadd.s f30, f26, f31, f12, dyn # perform operation
fnmadd.s f30, f26, f31, f12, rdn # perform operation
fnmadd.s f30, f26, f31, f12, rmm # perform operation
fnmadd.s f30, f26, f31, f12, rne # perform operation
fnmadd.s f30, f26, f31, f12, rtz # perform operation
fnmadd.s f30, f26, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x21, 0x8532e696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x0643f84d # load x3 with value 0x0643f84d
sw x3, 0(x2) # store 0x0643f84d in memory
flw f15, 0(x2) # load 0x0643f84d from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmadd.s f21, f30, f15, f16, dyn # perform operation
fnmadd.s f21, f30, f15, f16, rdn # perform operation
fnmadd.s f21, f30, f15, f16, rmm # perform operation
fnmadd.s f21, f30, f15, f16, rne # perform operation
fnmadd.s f21, f30, f15, f16, rtz # perform operation
fnmadd.s f21, f30, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f30, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f30, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f30, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f30, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f30, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x30, 0xfb0083a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x1b3931ad # load x3 with value 0x1b3931ad
sw x3, 0(x2) # store 0x1b3931ad in memory
flw f9, 0(x2) # load 0x1b3931ad from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmadd.s f30, f25, f9, f22, dyn # perform operation
fnmadd.s f30, f25, f9, f22, rdn # perform operation
fnmadd.s f30, f25, f9, f22, rmm # perform operation
fnmadd.s f30, f25, f9, f22, rne # perform operation
fnmadd.s f30, f25, f9, f22, rtz # perform operation
fnmadd.s f30, f25, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f25, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f25, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x28, 0xd2c2268a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x1e5c7cb0 # load x3 with value 0x1e5c7cb0
sw x3, 0(x2) # store 0x1e5c7cb0 in memory
flw f25, 0(x2) # load 0x1e5c7cb0 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmadd.s f28, f17, f25, f29, dyn # perform operation
fnmadd.s f28, f17, f25, f29, rdn # perform operation
fnmadd.s f28, f17, f25, f29, rmm # perform operation
fnmadd.s f28, f17, f25, f29, rne # perform operation
fnmadd.s f28, f17, f25, f29, rtz # perform operation
fnmadd.s f28, f17, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f17, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f17, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x29, 0x434bf1d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x4983d6be # load x3 with value 0x4983d6be
sw x3, 0(x2) # store 0x4983d6be in memory
flw f11, 0(x2) # load 0x4983d6be from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmadd.s f29, f2, f11, f23, dyn # perform operation
fnmadd.s f29, f2, f11, f23, rdn # perform operation
fnmadd.s f29, f2, f11, f23, rmm # perform operation
fnmadd.s f29, f2, f11, f23, rne # perform operation
fnmadd.s f29, f2, f11, f23, rtz # perform operation
fnmadd.s f29, f2, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f2, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x13, 0x691f9deb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x1d74382f # load x3 with value 0x1d74382f
sw x3, 0(x2) # store 0x1d74382f in memory
flw f10, 0(x2) # load 0x1d74382f from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmadd.s f13, f30, f10, f31, dyn # perform operation
fnmadd.s f13, f30, f10, f31, rdn # perform operation
fnmadd.s f13, f30, f10, f31, rmm # perform operation
fnmadd.s f13, f30, f10, f31, rne # perform operation
fnmadd.s f13, f30, f10, f31, rtz # perform operation
fnmadd.s f13, f30, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f30, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x23, 0xd55581df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x52f83c1f # load x3 with value 0x52f83c1f
sw x3, 0(x2) # store 0x52f83c1f in memory
flw f18, 0(x2) # load 0x52f83c1f from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmadd.s f23, f2, f18, f16, dyn # perform operation
fnmadd.s f23, f2, f18, f16, rdn # perform operation
fnmadd.s f23, f2, f18, f16, rmm # perform operation
fnmadd.s f23, f2, f18, f16, rne # perform operation
fnmadd.s f23, f2, f18, f16, rtz # perform operation
fnmadd.s f23, f2, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f2, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f2, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x28, 0x7dc198b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x32259fe4 # load x3 with value 0x32259fe4
sw x3, 0(x2) # store 0x32259fe4 in memory
flw f31, 0(x2) # load 0x32259fe4 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fnmadd.s f28, f26, f31, f1, dyn # perform operation
fnmadd.s f28, f26, f31, f1, rdn # perform operation
fnmadd.s f28, f26, f31, f1, rmm # perform operation
fnmadd.s f28, f26, f31, f1, rne # perform operation
fnmadd.s f28, f26, f31, f1, rtz # perform operation
fnmadd.s f28, f26, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x25, 0x5e33e9fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x0a3b7bc2 # load x3 with value 0x0a3b7bc2
sw x3, 0(x2) # store 0x0a3b7bc2 in memory
flw f14, 0(x2) # load 0x0a3b7bc2 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmadd.s f25, f18, f14, f24, dyn # perform operation
fnmadd.s f25, f18, f14, f24, rdn # perform operation
fnmadd.s f25, f18, f14, f24, rmm # perform operation
fnmadd.s f25, f18, f14, f24, rne # perform operation
fnmadd.s f25, f18, f14, f24, rtz # perform operation
fnmadd.s f25, f18, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f18, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x12, 0x9b3f68a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x33a971bf # load x3 with value 0x33a971bf
sw x3, 0(x2) # store 0x33a971bf in memory
flw f16, 0(x2) # load 0x33a971bf from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmadd.s f12, f25, f16, f10, dyn # perform operation
fnmadd.s f12, f25, f16, f10, rdn # perform operation
fnmadd.s f12, f25, f16, f10, rmm # perform operation
fnmadd.s f12, f25, f16, f10, rne # perform operation
fnmadd.s f12, f25, f16, f10, rtz # perform operation
fnmadd.s f12, f25, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f25, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f25, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f25, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f25, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f25, f16, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x14, 0x93b0cf5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xcc94f549 # load x3 with value 0xcc94f549
sw x3, 0(x2) # store 0xcc94f549 in memory
flw f9, 0(x2) # load 0xcc94f549 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmadd.s f14, f18, f9, f19, dyn # perform operation
fnmadd.s f14, f18, f9, f19, rdn # perform operation
fnmadd.s f14, f18, f9, f19, rmm # perform operation
fnmadd.s f14, f18, f9, f19, rne # perform operation
fnmadd.s f14, f18, f9, f19, rtz # perform operation
fnmadd.s f14, f18, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x31, 0xa03cbeec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x3308cd82 # load x3 with value 0x3308cd82
sw x3, 0(x2) # store 0x3308cd82 in memory
flw f17, 0(x2) # load 0x3308cd82 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmadd.s f31, f15, f17, f4, dyn # perform operation
fnmadd.s f31, f15, f17, f4, rdn # perform operation
fnmadd.s f31, f15, f17, f4, rmm # perform operation
fnmadd.s f31, f15, f17, f4, rne # perform operation
fnmadd.s f31, f15, f17, f4, rtz # perform operation
fnmadd.s f31, f15, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f15, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x16, 0x35f4c4b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x0565153e # load x3 with value 0x0565153e
sw x3, 0(x2) # store 0x0565153e in memory
flw f28, 0(x2) # load 0x0565153e from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fnmadd.s f16, f21, f28, f17, dyn # perform operation
fnmadd.s f16, f21, f28, f17, rdn # perform operation
fnmadd.s f16, f21, f28, f17, rmm # perform operation
fnmadd.s f16, f21, f28, f17, rne # perform operation
fnmadd.s f16, f21, f28, f17, rtz # perform operation
fnmadd.s f16, f21, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f21, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f21, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f21, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f21, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f21, f28, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x28, 0x6d34341a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0xf1508493 # load x3 with value 0xf1508493
sw x3, 0(x2) # store 0xf1508493 in memory
flw f8, 0(x2) # load 0xf1508493 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.s f28, f3, f8, f7, dyn # perform operation
fnmadd.s f28, f3, f8, f7, rdn # perform operation
fnmadd.s f28, f3, f8, f7, rmm # perform operation
fnmadd.s f28, f3, f8, f7, rne # perform operation
fnmadd.s f28, f3, f8, f7, rtz # perform operation
fnmadd.s f28, f3, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x22, 0x0c3b006c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x2ec09177 # load x3 with value 0x2ec09177
sw x3, 0(x2) # store 0x2ec09177 in memory
flw f31, 0(x2) # load 0x2ec09177 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fnmadd.s f22, f12, f31, f8, dyn # perform operation
fnmadd.s f22, f12, f31, f8, rdn # perform operation
fnmadd.s f22, f12, f31, f8, rmm # perform operation
fnmadd.s f22, f12, f31, f8, rne # perform operation
fnmadd.s f22, f12, f31, f8, rtz # perform operation
fnmadd.s f22, f12, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f12, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f12, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x4, 0xd68c6311 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x16eac354 # load x3 with value 0x16eac354
sw x3, 0(x2) # store 0x16eac354 in memory
flw f3, 0(x2) # load 0x16eac354 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fnmadd.s f4, f8, f3, f10, dyn # perform operation
fnmadd.s f4, f8, f3, f10, rdn # perform operation
fnmadd.s f4, f8, f3, f10, rmm # perform operation
fnmadd.s f4, f8, f3, f10, rne # perform operation
fnmadd.s f4, f8, f3, f10, rtz # perform operation
fnmadd.s f4, f8, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f8, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f8, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f8, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f8, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f8, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x30, 0x91a1f8ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0xb23cc415 # load x3 with value 0xb23cc415
sw x3, 0(x2) # store 0xb23cc415 in memory
flw f27, 0(x2) # load 0xb23cc415 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fnmadd.s f30, f15, f27, f28, dyn # perform operation
fnmadd.s f30, f15, f27, f28, rdn # perform operation
fnmadd.s f30, f15, f27, f28, rmm # perform operation
fnmadd.s f30, f15, f27, f28, rne # perform operation
fnmadd.s f30, f15, f27, f28, rtz # perform operation
fnmadd.s f30, f15, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x14, 0x10cd0177 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x7485f73b # load x3 with value 0x7485f73b
sw x3, 0(x2) # store 0x7485f73b in memory
flw f26, 0(x2) # load 0x7485f73b from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fnmadd.s f14, f23, f26, f15, dyn # perform operation
fnmadd.s f14, f23, f26, f15, rdn # perform operation
fnmadd.s f14, f23, f26, f15, rmm # perform operation
fnmadd.s f14, f23, f26, f15, rne # perform operation
fnmadd.s f14, f23, f26, f15, rtz # perform operation
fnmadd.s f14, f23, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x9, 0x13b4a910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x33fa8c36 # load x3 with value 0x33fa8c36
sw x3, 0(x2) # store 0x33fa8c36 in memory
flw f28, 0(x2) # load 0x33fa8c36 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmadd.s f9, f3, f28, f10, dyn # perform operation
fnmadd.s f9, f3, f28, f10, rdn # perform operation
fnmadd.s f9, f3, f28, f10, rmm # perform operation
fnmadd.s f9, f3, f28, f10, rne # perform operation
fnmadd.s f9, f3, f28, f10, rtz # perform operation
fnmadd.s f9, f3, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x25, 0x3f0e2a1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0x35c58210 # load x3 with value 0x35c58210
sw x3, 0(x2) # store 0x35c58210 in memory
flw f15, 0(x2) # load 0x35c58210 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fnmadd.s f25, f11, f15, f9, dyn # perform operation
fnmadd.s f25, f11, f15, f9, rdn # perform operation
fnmadd.s f25, f11, f15, f9, rmm # perform operation
fnmadd.s f25, f11, f15, f9, rne # perform operation
fnmadd.s f25, f11, f15, f9, rtz # perform operation
fnmadd.s f25, f11, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f11, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x22, 0xf009bd4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0xb0b9b11d # load x3 with value 0xb0b9b11d
sw x3, 0(x2) # store 0xb0b9b11d in memory
flw f18, 0(x2) # load 0xb0b9b11d from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fnmadd.s f22, f16, f18, f7, dyn # perform operation
fnmadd.s f22, f16, f18, f7, rdn # perform operation
fnmadd.s f22, f16, f18, f7, rmm # perform operation
fnmadd.s f22, f16, f18, f7, rne # perform operation
fnmadd.s f22, f16, f18, f7, rtz # perform operation
fnmadd.s f22, f16, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f16, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x12, 0x82b55de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x71e035ed # load x3 with value 0x71e035ed
sw x3, 0(x2) # store 0x71e035ed in memory
flw f4, 0(x2) # load 0x71e035ed from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmadd.s f12, f19, f4, f26, dyn # perform operation
fnmadd.s f12, f19, f4, f26, rdn # perform operation
fnmadd.s f12, f19, f4, f26, rmm # perform operation
fnmadd.s f12, f19, f4, f26, rne # perform operation
fnmadd.s f12, f19, f4, f26, rtz # perform operation
fnmadd.s f12, f19, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f19, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f19, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f19, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f19, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f19, f4, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x17, 0x96dcb822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x5c6d1099 # load x3 with value 0x5c6d1099
sw x3, 0(x2) # store 0x5c6d1099 in memory
flw f15, 0(x2) # load 0x5c6d1099 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmadd.s f17, f19, f15, f21, dyn # perform operation
fnmadd.s f17, f19, f15, f21, rdn # perform operation
fnmadd.s f17, f19, f15, f21, rmm # perform operation
fnmadd.s f17, f19, f15, f21, rne # perform operation
fnmadd.s f17, f19, f15, f21, rtz # perform operation
fnmadd.s f17, f19, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x5, 0xd1427a76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xa56d73c4 # load x3 with value 0xa56d73c4
sw x3, 0(x2) # store 0xa56d73c4 in memory
flw f7, 0(x2) # load 0xa56d73c4 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmadd.s f5, f10, f7, f9, dyn # perform operation
fnmadd.s f5, f10, f7, f9, rdn # perform operation
fnmadd.s f5, f10, f7, f9, rmm # perform operation
fnmadd.s f5, f10, f7, f9, rne # perform operation
fnmadd.s f5, f10, f7, f9, rtz # perform operation
fnmadd.s f5, f10, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f10, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x24, 0x53d01f1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x5758d649 # load x3 with value 0x5758d649
sw x3, 0(x2) # store 0x5758d649 in memory
flw f8, 0(x2) # load 0x5758d649 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmadd.s f24, f18, f8, f7, dyn # perform operation
fnmadd.s f24, f18, f8, f7, rdn # perform operation
fnmadd.s f24, f18, f8, f7, rmm # perform operation
fnmadd.s f24, f18, f8, f7, rne # perform operation
fnmadd.s f24, f18, f8, f7, rtz # perform operation
fnmadd.s f24, f18, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x5, 0x1f5388f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x8cda5af1 # load x3 with value 0x8cda5af1
sw x3, 0(x2) # store 0x8cda5af1 in memory
flw f11, 0(x2) # load 0x8cda5af1 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmadd.s f5, f22, f11, f15, dyn # perform operation
fnmadd.s f5, f22, f11, f15, rdn # perform operation
fnmadd.s f5, f22, f11, f15, rmm # perform operation
fnmadd.s f5, f22, f11, f15, rne # perform operation
fnmadd.s f5, f22, f11, f15, rtz # perform operation
fnmadd.s f5, f22, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x27, 0x0009ea81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x987ed555 # load x3 with value 0x987ed555
sw x3, 0(x2) # store 0x987ed555 in memory
flw f12, 0(x2) # load 0x987ed555 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fnmadd.s f27, f14, f12, f4, dyn # perform operation
fnmadd.s f27, f14, f12, f4, rdn # perform operation
fnmadd.s f27, f14, f12, f4, rmm # perform operation
fnmadd.s f27, f14, f12, f4, rne # perform operation
fnmadd.s f27, f14, f12, f4, rtz # perform operation
fnmadd.s f27, f14, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x7, 0xaf993983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x0b237434 # load x3 with value 0x0b237434
sw x3, 0(x2) # store 0x0b237434 in memory
flw f23, 0(x2) # load 0x0b237434 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmadd.s f7, f4, f23, f22, dyn # perform operation
fnmadd.s f7, f4, f23, f22, rdn # perform operation
fnmadd.s f7, f4, f23, f22, rmm # perform operation
fnmadd.s f7, f4, f23, f22, rne # perform operation
fnmadd.s f7, f4, f23, f22, rtz # perform operation
fnmadd.s f7, f4, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f4, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f4, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f4, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f4, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f4, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x3, 0xc51122db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xf68c471b # load x3 with value 0xf68c471b
sw x3, 0(x2) # store 0xf68c471b in memory
flw f24, 0(x2) # load 0xf68c471b from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fnmadd.s f3, f22, f24, f25, dyn # perform operation
fnmadd.s f3, f22, f24, f25, rdn # perform operation
fnmadd.s f3, f22, f24, f25, rmm # perform operation
fnmadd.s f3, f22, f24, f25, rne # perform operation
fnmadd.s f3, f22, f24, f25, rtz # perform operation
fnmadd.s f3, f22, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x12, 0x37637564 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xd2a3b764 # load x3 with value 0xd2a3b764
sw x3, 0(x2) # store 0xd2a3b764 in memory
flw f10, 0(x2) # load 0xd2a3b764 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmadd.s f12, f20, f10, f6, dyn # perform operation
fnmadd.s f12, f20, f10, f6, rdn # perform operation
fnmadd.s f12, f20, f10, f6, rmm # perform operation
fnmadd.s f12, f20, f10, f6, rne # perform operation
fnmadd.s f12, f20, f10, f6, rtz # perform operation
fnmadd.s f12, f20, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f20, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f20, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f20, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f20, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f20, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x23, 0x999ad133 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x705a6a30 # load x3 with value 0x705a6a30
sw x3, 0(x2) # store 0x705a6a30 in memory
flw f17, 0(x2) # load 0x705a6a30 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmadd.s f23, f3, f17, f21, dyn # perform operation
fnmadd.s f23, f3, f17, f21, rdn # perform operation
fnmadd.s f23, f3, f17, f21, rmm # perform operation
fnmadd.s f23, f3, f17, f21, rne # perform operation
fnmadd.s f23, f3, f17, f21, rtz # perform operation
fnmadd.s f23, f3, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x15, 0x954c4ed4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x9f95e426 # load x3 with value 0x9f95e426
sw x3, 0(x2) # store 0x9f95e426 in memory
flw f31, 0(x2) # load 0x9f95e426 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmadd.s f15, f18, f31, f22, dyn # perform operation
fnmadd.s f15, f18, f31, f22, rdn # perform operation
fnmadd.s f15, f18, f31, f22, rmm # perform operation
fnmadd.s f15, f18, f31, f22, rne # perform operation
fnmadd.s f15, f18, f31, f22, rtz # perform operation
fnmadd.s f15, f18, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x24, 0x030d00c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xd0e926bc # load x3 with value 0xd0e926bc
sw x3, 0(x2) # store 0xd0e926bc in memory
flw f20, 0(x2) # load 0xd0e926bc from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fnmadd.s f24, f5, f20, f14, dyn # perform operation
fnmadd.s f24, f5, f20, f14, rdn # perform operation
fnmadd.s f24, f5, f20, f14, rmm # perform operation
fnmadd.s f24, f5, f20, f14, rne # perform operation
fnmadd.s f24, f5, f20, f14, rtz # perform operation
fnmadd.s f24, f5, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f5, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f5, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x5, 0xa6e320f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0xb53e2be3 # load x3 with value 0xb53e2be3
sw x3, 0(x2) # store 0xb53e2be3 in memory
flw f28, 0(x2) # load 0xb53e2be3 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f5, f13, f28, f24, dyn # perform operation
fnmadd.s f5, f13, f28, f24, rdn # perform operation
fnmadd.s f5, f13, f28, f24, rmm # perform operation
fnmadd.s f5, f13, f28, f24, rne # perform operation
fnmadd.s f5, f13, f28, f24, rtz # perform operation
fnmadd.s f5, f13, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f13, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x12, 0xd4841aab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x3e054162 # load x3 with value 0x3e054162
sw x3, 0(x2) # store 0x3e054162 in memory
flw f20, 0(x2) # load 0x3e054162 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fnmadd.s f12, f28, f20, f16, dyn # perform operation
fnmadd.s f12, f28, f20, f16, rdn # perform operation
fnmadd.s f12, f28, f20, f16, rmm # perform operation
fnmadd.s f12, f28, f20, f16, rne # perform operation
fnmadd.s f12, f28, f20, f16, rtz # perform operation
fnmadd.s f12, f28, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x6, 0xc9c19116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x3bc78922 # load x3 with value 0x3bc78922
sw x3, 0(x2) # store 0x3bc78922 in memory
flw f27, 0(x2) # load 0x3bc78922 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fnmadd.s f6, f28, f27, f18, dyn # perform operation
fnmadd.s f6, f28, f27, f18, rdn # perform operation
fnmadd.s f6, f28, f27, f18, rmm # perform operation
fnmadd.s f6, f28, f27, f18, rne # perform operation
fnmadd.s f6, f28, f27, f18, rtz # perform operation
fnmadd.s f6, f28, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x12, 0x96cd5264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x0827347a # load x3 with value 0x0827347a
sw x3, 0(x2) # store 0x0827347a in memory
flw f18, 0(x2) # load 0x0827347a from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmadd.s f12, f15, f18, f11, dyn # perform operation
fnmadd.s f12, f15, f18, f11, rdn # perform operation
fnmadd.s f12, f15, f18, f11, rmm # perform operation
fnmadd.s f12, f15, f18, f11, rne # perform operation
fnmadd.s f12, f15, f18, f11, rtz # perform operation
fnmadd.s f12, f15, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x19, 0xeacf4f8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x7377556f # load x3 with value 0x7377556f
sw x3, 0(x2) # store 0x7377556f in memory
flw f20, 0(x2) # load 0x7377556f from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmadd.s f19, f13, f20, f24, dyn # perform operation
fnmadd.s f19, f13, f20, f24, rdn # perform operation
fnmadd.s f19, f13, f20, f24, rmm # perform operation
fnmadd.s f19, f13, f20, f24, rne # perform operation
fnmadd.s f19, f13, f20, f24, rtz # perform operation
fnmadd.s f19, f13, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x30, 0xe4f7feac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xd8860236 # load x3 with value 0xd8860236
sw x3, 0(x2) # store 0xd8860236 in memory
flw f19, 0(x2) # load 0xd8860236 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fnmadd.s f30, f10, f19, f8, dyn # perform operation
fnmadd.s f30, f10, f19, f8, rdn # perform operation
fnmadd.s f30, f10, f19, f8, rmm # perform operation
fnmadd.s f30, f10, f19, f8, rne # perform operation
fnmadd.s f30, f10, f19, f8, rtz # perform operation
fnmadd.s f30, f10, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f10, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x1, 0x7d20ec9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x20a1a6f7 # load x3 with value 0x20a1a6f7
sw x3, 0(x2) # store 0x20a1a6f7 in memory
flw f24, 0(x2) # load 0x20a1a6f7 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fnmadd.s f1, f11, f24, f13, dyn # perform operation
fnmadd.s f1, f11, f24, f13, rdn # perform operation
fnmadd.s f1, f11, f24, f13, rmm # perform operation
fnmadd.s f1, f11, f24, f13, rne # perform operation
fnmadd.s f1, f11, f24, f13, rtz # perform operation
fnmadd.s f1, f11, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f11, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f11, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f11, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f11, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f11, f24, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x26, 0x02a6852b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x255238e6 # load x3 with value 0x255238e6
sw x3, 0(x2) # store 0x255238e6 in memory
flw f23, 0(x2) # load 0x255238e6 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmadd.s f26, f22, f23, f18, dyn # perform operation
fnmadd.s f26, f22, f23, f18, rdn # perform operation
fnmadd.s f26, f22, f23, f18, rmm # perform operation
fnmadd.s f26, f22, f23, f18, rne # perform operation
fnmadd.s f26, f22, f23, f18, rtz # perform operation
fnmadd.s f26, f22, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x20, 0x67174f50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x7452642b # load x3 with value 0x7452642b
sw x3, 0(x2) # store 0x7452642b in memory
flw f10, 0(x2) # load 0x7452642b from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fnmadd.s f20, f28, f10, f26, dyn # perform operation
fnmadd.s f20, f28, f10, f26, rdn # perform operation
fnmadd.s f20, f28, f10, f26, rmm # perform operation
fnmadd.s f20, f28, f10, f26, rne # perform operation
fnmadd.s f20, f28, f10, f26, rtz # perform operation
fnmadd.s f20, f28, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x20, 0x197f4353 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x3160157d # load x3 with value 0x3160157d
sw x3, 0(x2) # store 0x3160157d in memory
flw f28, 0(x2) # load 0x3160157d from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
fnmadd.s f20, f25, f28, f4, dyn # perform operation
fnmadd.s f20, f25, f28, f4, rdn # perform operation
fnmadd.s f20, f25, f28, f4, rmm # perform operation
fnmadd.s f20, f25, f28, f4, rne # perform operation
fnmadd.s f20, f25, f28, f4, rtz # perform operation
fnmadd.s f20, f25, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f25, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x2, 0x58324a8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0xcaeb01ee # load x3 with value 0xcaeb01ee
sw x3, 0(x2) # store 0xcaeb01ee in memory
flw f27, 0(x2) # load 0xcaeb01ee from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fnmadd.s f2, f4, f27, f6, dyn # perform operation
fnmadd.s f2, f4, f27, f6, rdn # perform operation
fnmadd.s f2, f4, f27, f6, rmm # perform operation
fnmadd.s f2, f4, f27, f6, rne # perform operation
fnmadd.s f2, f4, f27, f6, rtz # perform operation
fnmadd.s f2, f4, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f4, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x2, 0x790bd7b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x6785c483 # load x3 with value 0x6785c483
sw x3, 0(x2) # store 0x6785c483 in memory
flw f3, 0(x2) # load 0x6785c483 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmadd.s f2, f7, f3, f8, dyn # perform operation
fnmadd.s f2, f7, f3, f8, rdn # perform operation
fnmadd.s f2, f7, f3, f8, rmm # perform operation
fnmadd.s f2, f7, f3, f8, rne # perform operation
fnmadd.s f2, f7, f3, f8, rtz # perform operation
fnmadd.s f2, f7, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f7, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f7, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f7, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f7, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f7, f3, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x5, 0xaf0a0d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0xf86a92f8 # load x3 with value 0xf86a92f8
sw x3, 0(x2) # store 0xf86a92f8 in memory
flw f23, 0(x2) # load 0xf86a92f8 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmadd.s f5, f2, f23, f29, dyn # perform operation
fnmadd.s f5, f2, f23, f29, rdn # perform operation
fnmadd.s f5, f2, f23, f29, rmm # perform operation
fnmadd.s f5, f2, f23, f29, rne # perform operation
fnmadd.s f5, f2, f23, f29, rtz # perform operation
fnmadd.s f5, f2, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f2, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f2, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f2, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f2, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f2, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x20, 0x208e0a4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x13cdbae9 # load x3 with value 0x13cdbae9
sw x3, 0(x2) # store 0x13cdbae9 in memory
flw f26, 0(x2) # load 0x13cdbae9 from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fnmadd.s f20, f14, f26, f28, dyn # perform operation
fnmadd.s f20, f14, f26, f28, rdn # perform operation
fnmadd.s f20, f14, f26, f28, rmm # perform operation
fnmadd.s f20, f14, f26, f28, rne # perform operation
fnmadd.s f20, f14, f26, f28, rtz # perform operation
fnmadd.s f20, f14, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f14, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f14, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f14, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f14, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f14, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x3, 0x5b84018f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xb1c91c10 # load x3 with value 0xb1c91c10
sw x3, 0(x2) # store 0xb1c91c10 in memory
flw f21, 0(x2) # load 0xb1c91c10 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fnmadd.s f3, f12, f21, f15, dyn # perform operation
fnmadd.s f3, f12, f21, f15, rdn # perform operation
fnmadd.s f3, f12, f21, f15, rmm # perform operation
fnmadd.s f3, f12, f21, f15, rne # perform operation
fnmadd.s f3, f12, f21, f15, rtz # perform operation
fnmadd.s f3, f12, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x6, 0xfb821c44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x29988e9b # load x3 with value 0x29988e9b
sw x3, 0(x2) # store 0x29988e9b in memory
flw f10, 0(x2) # load 0x29988e9b from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fnmadd.s f6, f24, f10, f26, dyn # perform operation
fnmadd.s f6, f24, f10, f26, rdn # perform operation
fnmadd.s f6, f24, f10, f26, rmm # perform operation
fnmadd.s f6, f24, f10, f26, rne # perform operation
fnmadd.s f6, f24, f10, f26, rtz # perform operation
fnmadd.s f6, f24, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x26, 0x31366d6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x7ab89cfa # load x3 with value 0x7ab89cfa
sw x3, 0(x2) # store 0x7ab89cfa in memory
flw f27, 0(x2) # load 0x7ab89cfa from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.s f26, f14, f27, f29, dyn # perform operation
fnmadd.s f26, f14, f27, f29, rdn # perform operation
fnmadd.s f26, f14, f27, f29, rmm # perform operation
fnmadd.s f26, f14, f27, f29, rne # perform operation
fnmadd.s f26, f14, f27, f29, rtz # perform operation
fnmadd.s f26, f14, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f14, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x11, 0x03b035f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x03399728 # load x3 with value 0x03399728
sw x3, 0(x2) # store 0x03399728 in memory
flw f30, 0(x2) # load 0x03399728 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fnmadd.s f11, f25, f30, f31, dyn # perform operation
fnmadd.s f11, f25, f30, f31, rdn # perform operation
fnmadd.s f11, f25, f30, f31, rmm # perform operation
fnmadd.s f11, f25, f30, f31, rne # perform operation
fnmadd.s f11, f25, f30, f31, rtz # perform operation
fnmadd.s f11, f25, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f25, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f25, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f25, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f25, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f25, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x30, 0xe9cd7cb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x1e91da04 # load x3 with value 0x1e91da04
sw x3, 0(x2) # store 0x1e91da04 in memory
flw f27, 0(x2) # load 0x1e91da04 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmadd.s f30, f7, f27, f13, dyn # perform operation
fnmadd.s f30, f7, f27, f13, rdn # perform operation
fnmadd.s f30, f7, f27, f13, rmm # perform operation
fnmadd.s f30, f7, f27, f13, rne # perform operation
fnmadd.s f30, f7, f27, f13, rtz # perform operation
fnmadd.s f30, f7, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f7, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x28, 0x6211a903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x03ef6cd1 # load x3 with value 0x03ef6cd1
sw x3, 0(x2) # store 0x03ef6cd1 in memory
flw f18, 0(x2) # load 0x03ef6cd1 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmadd.s f28, f8, f18, f11, dyn # perform operation
fnmadd.s f28, f8, f18, f11, rdn # perform operation
fnmadd.s f28, f8, f18, f11, rmm # perform operation
fnmadd.s f28, f8, f18, f11, rne # perform operation
fnmadd.s f28, f8, f18, f11, rtz # perform operation
fnmadd.s f28, f8, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f8, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x2, 0x5dcbad56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xb4122091 # load x3 with value 0xb4122091
sw x3, 0(x2) # store 0xb4122091 in memory
flw f9, 0(x2) # load 0xb4122091 from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmadd.s f2, f10, f9, f20, dyn # perform operation
fnmadd.s f2, f10, f9, f20, rdn # perform operation
fnmadd.s f2, f10, f9, f20, rmm # perform operation
fnmadd.s f2, f10, f9, f20, rne # perform operation
fnmadd.s f2, f10, f9, f20, rtz # perform operation
fnmadd.s f2, f10, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f10, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f10, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f10, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f10, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f10, f9, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x30, 0x4593e17b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x69e4913d # load x3 with value 0x69e4913d
sw x3, 0(x2) # store 0x69e4913d in memory
flw f7, 0(x2) # load 0x69e4913d from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fnmadd.s f30, f15, f7, f18, dyn # perform operation
fnmadd.s f30, f15, f7, f18, rdn # perform operation
fnmadd.s f30, f15, f7, f18, rmm # perform operation
fnmadd.s f30, f15, f7, f18, rne # perform operation
fnmadd.s f30, f15, f7, f18, rtz # perform operation
fnmadd.s f30, f15, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x25, 0xe3914cc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xf33dde79 # load x3 with value 0xf33dde79
sw x3, 0(x2) # store 0xf33dde79 in memory
flw f6, 0(x2) # load 0xf33dde79 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmadd.s f25, f22, f6, f14, dyn # perform operation
fnmadd.s f25, f22, f6, f14, rdn # perform operation
fnmadd.s f25, f22, f6, f14, rmm # perform operation
fnmadd.s f25, f22, f6, f14, rne # perform operation
fnmadd.s f25, f22, f6, f14, rtz # perform operation
fnmadd.s f25, f22, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x12, 0x6c8babaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x7ac6b02e # load x3 with value 0x7ac6b02e
sw x3, 0(x2) # store 0x7ac6b02e in memory
flw f15, 0(x2) # load 0x7ac6b02e from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f12, f3, f15, f19, dyn # perform operation
fnmadd.s f12, f3, f15, f19, rdn # perform operation
fnmadd.s f12, f3, f15, f19, rmm # perform operation
fnmadd.s f12, f3, f15, f19, rne # perform operation
fnmadd.s f12, f3, f15, f19, rtz # perform operation
fnmadd.s f12, f3, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x5, 0xdc088ded # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x507781ca # load x3 with value 0x507781ca
sw x3, 0(x2) # store 0x507781ca in memory
flw f22, 0(x2) # load 0x507781ca from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fnmadd.s f5, f1, f22, f17, dyn # perform operation
fnmadd.s f5, f1, f22, f17, rdn # perform operation
fnmadd.s f5, f1, f22, f17, rmm # perform operation
fnmadd.s f5, f1, f22, f17, rne # perform operation
fnmadd.s f5, f1, f22, f17, rtz # perform operation
fnmadd.s f5, f1, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f1, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f1, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f1, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f1, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f1, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x1, 0x9c1218ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x408b4d1a # load x3 with value 0x408b4d1a
sw x3, 0(x2) # store 0x408b4d1a in memory
flw f17, 0(x2) # load 0x408b4d1a from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fnmadd.s f1, f9, f17, f24, dyn # perform operation
fnmadd.s f1, f9, f17, f24, rdn # perform operation
fnmadd.s f1, f9, f17, f24, rmm # perform operation
fnmadd.s f1, f9, f17, f24, rne # perform operation
fnmadd.s f1, f9, f17, f24, rtz # perform operation
fnmadd.s f1, f9, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f9, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f9, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f9, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f9, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f9, f17, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x1, 0x243c88a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xfce3d1a4 # load x3 with value 0xfce3d1a4
sw x3, 0(x2) # store 0xfce3d1a4 in memory
flw f22, 0(x2) # load 0xfce3d1a4 from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f1, f10, f22, f25, dyn # perform operation
fnmadd.s f1, f10, f22, f25, rdn # perform operation
fnmadd.s f1, f10, f22, f25, rmm # perform operation
fnmadd.s f1, f10, f22, f25, rne # perform operation
fnmadd.s f1, f10, f22, f25, rtz # perform operation
fnmadd.s f1, f10, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f10, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x28, 0x24c9b619 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xdbfcb171 # load x3 with value 0xdbfcb171
sw x3, 0(x2) # store 0xdbfcb171 in memory
flw f30, 0(x2) # load 0xdbfcb171 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f28, f21, f30, f29, dyn # perform operation
fnmadd.s f28, f21, f30, f29, rdn # perform operation
fnmadd.s f28, f21, f30, f29, rmm # perform operation
fnmadd.s f28, f21, f30, f29, rne # perform operation
fnmadd.s f28, f21, f30, f29, rtz # perform operation
fnmadd.s f28, f21, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x14, 0x857a9a32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x85e2c41c # load x3 with value 0x85e2c41c
sw x3, 0(x2) # store 0x85e2c41c in memory
flw f19, 0(x2) # load 0x85e2c41c from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f14, f22, f19, f7, dyn # perform operation
fnmadd.s f14, f22, f19, f7, rdn # perform operation
fnmadd.s f14, f22, f19, f7, rmm # perform operation
fnmadd.s f14, f22, f19, f7, rne # perform operation
fnmadd.s f14, f22, f19, f7, rtz # perform operation
fnmadd.s f14, f22, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x11, 0x3621295e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x8934b11a # load x3 with value 0x8934b11a
sw x3, 0(x2) # store 0x8934b11a in memory
flw f6, 0(x2) # load 0x8934b11a from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmadd.s f11, f5, f6, f18, dyn # perform operation
fnmadd.s f11, f5, f6, f18, rdn # perform operation
fnmadd.s f11, f5, f6, f18, rmm # perform operation
fnmadd.s f11, f5, f6, f18, rne # perform operation
fnmadd.s f11, f5, f6, f18, rtz # perform operation
fnmadd.s f11, f5, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x21, 0xeee3dbaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x625919cf # load x3 with value 0x625919cf
sw x3, 0(x2) # store 0x625919cf in memory
flw f15, 0(x2) # load 0x625919cf from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmadd.s f21, f1, f15, f2, dyn # perform operation
fnmadd.s f21, f1, f15, f2, rdn # perform operation
fnmadd.s f21, f1, f15, f2, rmm # perform operation
fnmadd.s f21, f1, f15, f2, rne # perform operation
fnmadd.s f21, f1, f15, f2, rtz # perform operation
fnmadd.s f21, f1, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f1, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f1, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f1, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f1, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f1, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x16, 0x4bda8c8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x0f1d7ef3 # load x3 with value 0x0f1d7ef3
sw x3, 0(x2) # store 0x0f1d7ef3 in memory
flw f30, 0(x2) # load 0x0f1d7ef3 from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmadd.s f16, f25, f30, f9, dyn # perform operation
fnmadd.s f16, f25, f30, f9, rdn # perform operation
fnmadd.s f16, f25, f30, f9, rmm # perform operation
fnmadd.s f16, f25, f30, f9, rne # perform operation
fnmadd.s f16, f25, f30, f9, rtz # perform operation
fnmadd.s f16, f25, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f25, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x23, 0x2196859c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x5f7707ce # load x3 with value 0x5f7707ce
sw x3, 0(x2) # store 0x5f7707ce in memory
flw f26, 0(x2) # load 0x5f7707ce from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fnmadd.s f23, f6, f26, f19, dyn # perform operation
fnmadd.s f23, f6, f26, f19, rdn # perform operation
fnmadd.s f23, f6, f26, f19, rmm # perform operation
fnmadd.s f23, f6, f26, f19, rne # perform operation
fnmadd.s f23, f6, f26, f19, rtz # perform operation
fnmadd.s f23, f6, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x25, 0x536102c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x00c824ab # load x3 with value 0x00c824ab
sw x3, 0(x2) # store 0x00c824ab in memory
flw f29, 0(x2) # load 0x00c824ab from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmadd.s f25, f8, f29, f6, dyn # perform operation
fnmadd.s f25, f8, f29, f6, rdn # perform operation
fnmadd.s f25, f8, f29, f6, rmm # perform operation
fnmadd.s f25, f8, f29, f6, rne # perform operation
fnmadd.s f25, f8, f29, f6, rtz # perform operation
fnmadd.s f25, f8, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f8, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x27, 0xe9560915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xc0ea4ecc # load x3 with value 0xc0ea4ecc
sw x3, 0(x2) # store 0xc0ea4ecc in memory
flw f19, 0(x2) # load 0xc0ea4ecc from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fnmadd.s f27, f31, f19, f16, dyn # perform operation
fnmadd.s f27, f31, f19, f16, rdn # perform operation
fnmadd.s f27, f31, f19, f16, rmm # perform operation
fnmadd.s f27, f31, f19, f16, rne # perform operation
fnmadd.s f27, f31, f19, f16, rtz # perform operation
fnmadd.s f27, f31, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x26, 0x87633334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x64b7d986 # load x3 with value 0x64b7d986
sw x3, 0(x2) # store 0x64b7d986 in memory
flw f18, 0(x2) # load 0x64b7d986 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmadd.s f26, f16, f18, f17, dyn # perform operation
fnmadd.s f26, f16, f18, f17, rdn # perform operation
fnmadd.s f26, f16, f18, f17, rmm # perform operation
fnmadd.s f26, f16, f18, f17, rne # perform operation
fnmadd.s f26, f16, f18, f17, rtz # perform operation
fnmadd.s f26, f16, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x5, 0x7e29ba34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x00da31a8 # load x3 with value 0x00da31a8
sw x3, 0(x2) # store 0x00da31a8 in memory
flw f20, 0(x2) # load 0x00da31a8 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmadd.s f5, f14, f20, f9, dyn # perform operation
fnmadd.s f5, f14, f20, f9, rdn # perform operation
fnmadd.s f5, f14, f20, f9, rmm # perform operation
fnmadd.s f5, f14, f20, f9, rne # perform operation
fnmadd.s f5, f14, f20, f9, rtz # perform operation
fnmadd.s f5, f14, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f14, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x14, 0xc3f5d973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x844df330 # load x3 with value 0x844df330
sw x3, 0(x2) # store 0x844df330 in memory
flw f30, 0(x2) # load 0x844df330 from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmadd.s f14, f18, f30, f9, dyn # perform operation
fnmadd.s f14, f18, f30, f9, rdn # perform operation
fnmadd.s f14, f18, f30, f9, rmm # perform operation
fnmadd.s f14, f18, f30, f9, rne # perform operation
fnmadd.s f14, f18, f30, f9, rtz # perform operation
fnmadd.s f14, f18, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x24, 0x5b1a2dad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xd8f1569c # load x3 with value 0xd8f1569c
sw x3, 0(x2) # store 0xd8f1569c in memory
flw f23, 0(x2) # load 0xd8f1569c from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmadd.s f24, f3, f23, f6, dyn # perform operation
fnmadd.s f24, f3, f23, f6, rdn # perform operation
fnmadd.s f24, f3, f23, f6, rmm # perform operation
fnmadd.s f24, f3, f23, f6, rne # perform operation
fnmadd.s f24, f3, f23, f6, rtz # perform operation
fnmadd.s f24, f3, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f3, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f3, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x16, 0xe2a5504f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x79a02d12 # load x3 with value 0x79a02d12
sw x3, 0(x2) # store 0x79a02d12 in memory
flw f6, 0(x2) # load 0x79a02d12 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmadd.s f16, f30, f6, f21, dyn # perform operation
fnmadd.s f16, f30, f6, f21, rdn # perform operation
fnmadd.s f16, f30, f6, f21, rmm # perform operation
fnmadd.s f16, f30, f6, f21, rne # perform operation
fnmadd.s f16, f30, f6, f21, rtz # perform operation
fnmadd.s f16, f30, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f30, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f30, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f30, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f30, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f30, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x27, 0xd685f82d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xbc6c1208 # load x3 with value 0xbc6c1208
sw x3, 0(x2) # store 0xbc6c1208 in memory
flw f24, 0(x2) # load 0xbc6c1208 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmadd.s f27, f22, f24, f23, dyn # perform operation
fnmadd.s f27, f22, f24, f23, rdn # perform operation
fnmadd.s f27, f22, f24, f23, rmm # perform operation
fnmadd.s f27, f22, f24, f23, rne # perform operation
fnmadd.s f27, f22, f24, f23, rtz # perform operation
fnmadd.s f27, f22, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f22, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x15, 0x43fd9dc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x9a258eb3 # load x3 with value 0x9a258eb3
sw x3, 0(x2) # store 0x9a258eb3 in memory
flw f19, 0(x2) # load 0x9a258eb3 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fnmadd.s f15, f17, f19, f20, dyn # perform operation
fnmadd.s f15, f17, f19, f20, rdn # perform operation
fnmadd.s f15, f17, f19, f20, rmm # perform operation
fnmadd.s f15, f17, f19, f20, rne # perform operation
fnmadd.s f15, f17, f19, f20, rtz # perform operation
fnmadd.s f15, f17, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f17, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f17, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f17, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f17, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f17, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x30, 0xc7f44794 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x794d7d93 # load x3 with value 0x794d7d93
sw x3, 0(x2) # store 0x794d7d93 in memory
flw f8, 0(x2) # load 0x794d7d93 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.s f30, f22, f8, f7, dyn # perform operation
fnmadd.s f30, f22, f8, f7, rdn # perform operation
fnmadd.s f30, f22, f8, f7, rmm # perform operation
fnmadd.s f30, f22, f8, f7, rne # perform operation
fnmadd.s f30, f22, f8, f7, rtz # perform operation
fnmadd.s f30, f22, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f22, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f22, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f22, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f22, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f22, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x6, 0x66b69b0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x5cf7bbd1 # load x3 with value 0x5cf7bbd1
sw x3, 0(x2) # store 0x5cf7bbd1 in memory
flw f16, 0(x2) # load 0x5cf7bbd1 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmadd.s f6, f30, f16, f5, dyn # perform operation
fnmadd.s f6, f30, f16, f5, rdn # perform operation
fnmadd.s f6, f30, f16, f5, rmm # perform operation
fnmadd.s f6, f30, f16, f5, rne # perform operation
fnmadd.s f6, f30, f16, f5, rtz # perform operation
fnmadd.s f6, f30, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x17, 0x86518cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x4b9a37c1 # load x3 with value 0x4b9a37c1
sw x3, 0(x2) # store 0x4b9a37c1 in memory
flw f1, 0(x2) # load 0x4b9a37c1 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fnmadd.s f17, f13, f1, f28, dyn # perform operation
fnmadd.s f17, f13, f1, f28, rdn # perform operation
fnmadd.s f17, f13, f1, f28, rmm # perform operation
fnmadd.s f17, f13, f1, f28, rne # perform operation
fnmadd.s f17, f13, f1, f28, rtz # perform operation
fnmadd.s f17, f13, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f13, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x16, 0xf68247fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xee2008c2 # load x3 with value 0xee2008c2
sw x3, 0(x2) # store 0xee2008c2 in memory
flw f6, 0(x2) # load 0xee2008c2 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fnmadd.s f16, f17, f6, f25, dyn # perform operation
fnmadd.s f16, f17, f6, f25, rdn # perform operation
fnmadd.s f16, f17, f6, f25, rmm # perform operation
fnmadd.s f16, f17, f6, f25, rne # perform operation
fnmadd.s f16, f17, f6, f25, rtz # perform operation
fnmadd.s f16, f17, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x13, 0x2469ccb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x2809e7f6 # load x3 with value 0x2809e7f6
sw x3, 0(x2) # store 0x2809e7f6 in memory
flw f25, 0(x2) # load 0x2809e7f6 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmadd.s f13, f4, f25, f11, dyn # perform operation
fnmadd.s f13, f4, f25, f11, rdn # perform operation
fnmadd.s f13, f4, f25, f11, rmm # perform operation
fnmadd.s f13, f4, f25, f11, rne # perform operation
fnmadd.s f13, f4, f25, f11, rtz # perform operation
fnmadd.s f13, f4, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f4, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x30, 0x29eada3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0xb45caefa # load x3 with value 0xb45caefa
sw x3, 0(x2) # store 0xb45caefa in memory
flw f31, 0(x2) # load 0xb45caefa from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fnmadd.s f30, f13, f31, f10, dyn # perform operation
fnmadd.s f30, f13, f31, f10, rdn # perform operation
fnmadd.s f30, f13, f31, f10, rmm # perform operation
fnmadd.s f30, f13, f31, f10, rne # perform operation
fnmadd.s f30, f13, f31, f10, rtz # perform operation
fnmadd.s f30, f13, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f13, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f13, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f13, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f13, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f13, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x23, 0x5f8d103e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xb4e178ef # load x3 with value 0xb4e178ef
sw x3, 0(x2) # store 0xb4e178ef in memory
flw f12, 0(x2) # load 0xb4e178ef from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f23, f27, f12, f30, dyn # perform operation
fnmadd.s f23, f27, f12, f30, rdn # perform operation
fnmadd.s f23, f27, f12, f30, rmm # perform operation
fnmadd.s f23, f27, f12, f30, rne # perform operation
fnmadd.s f23, f27, f12, f30, rtz # perform operation
fnmadd.s f23, f27, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f27, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f27, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x20, 0x2af372eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0xb4343a58 # load x3 with value 0xb4343a58
sw x3, 0(x2) # store 0xb4343a58 in memory
flw f14, 0(x2) # load 0xb4343a58 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fnmadd.s f20, f28, f14, f7, dyn # perform operation
fnmadd.s f20, f28, f14, f7, rdn # perform operation
fnmadd.s f20, f28, f14, f7, rmm # perform operation
fnmadd.s f20, f28, f14, f7, rne # perform operation
fnmadd.s f20, f28, f14, f7, rtz # perform operation
fnmadd.s f20, f28, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x25, 0xbcb48acb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x3fd48276 # load x3 with value 0x3fd48276
sw x3, 0(x2) # store 0x3fd48276 in memory
flw f26, 0(x2) # load 0x3fd48276 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmadd.s f25, f8, f26, f31, dyn # perform operation
fnmadd.s f25, f8, f26, f31, rdn # perform operation
fnmadd.s f25, f8, f26, f31, rmm # perform operation
fnmadd.s f25, f8, f26, f31, rne # perform operation
fnmadd.s f25, f8, f26, f31, rtz # perform operation
fnmadd.s f25, f8, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f8, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f8, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x24, 0xf1613b5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x0154f6a1 # load x3 with value 0x0154f6a1
sw x3, 0(x2) # store 0x0154f6a1 in memory
flw f4, 0(x2) # load 0x0154f6a1 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f24, f9, f4, f6, dyn # perform operation
fnmadd.s f24, f9, f4, f6, rdn # perform operation
fnmadd.s f24, f9, f4, f6, rmm # perform operation
fnmadd.s f24, f9, f4, f6, rne # perform operation
fnmadd.s f24, f9, f4, f6, rtz # perform operation
fnmadd.s f24, f9, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x31, 0xbe0feb4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x6c5c5a98 # load x3 with value 0x6c5c5a98
sw x3, 0(x2) # store 0x6c5c5a98 in memory
flw f5, 0(x2) # load 0x6c5c5a98 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f31, f8, f5, f24, dyn # perform operation
fnmadd.s f31, f8, f5, f24, rdn # perform operation
fnmadd.s f31, f8, f5, f24, rmm # perform operation
fnmadd.s f31, f8, f5, f24, rne # perform operation
fnmadd.s f31, f8, f5, f24, rtz # perform operation
fnmadd.s f31, f8, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f8, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x15, 0x1475eceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x03a3d152 # load x3 with value 0x03a3d152
sw x3, 0(x2) # store 0x03a3d152 in memory
flw f7, 0(x2) # load 0x03a3d152 from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f15, f9, f7, f29, dyn # perform operation
fnmadd.s f15, f9, f7, f29, rdn # perform operation
fnmadd.s f15, f9, f7, f29, rmm # perform operation
fnmadd.s f15, f9, f7, f29, rne # perform operation
fnmadd.s f15, f9, f7, f29, rtz # perform operation
fnmadd.s f15, f9, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f9, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x10, 0x0fcccf1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x516cf083 # load x3 with value 0x516cf083
sw x3, 0(x2) # store 0x516cf083 in memory
flw f11, 0(x2) # load 0x516cf083 from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmadd.s f10, f21, f11, f22, dyn # perform operation
fnmadd.s f10, f21, f11, f22, rdn # perform operation
fnmadd.s f10, f21, f11, f22, rmm # perform operation
fnmadd.s f10, f21, f11, f22, rne # perform operation
fnmadd.s f10, f21, f11, f22, rtz # perform operation
fnmadd.s f10, f21, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x8, 0x2a93ad00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xb1f90fb2 # load x3 with value 0xb1f90fb2
sw x3, 0(x2) # store 0xb1f90fb2 in memory
flw f18, 0(x2) # load 0xb1f90fb2 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmadd.s f8, f23, f18, f5, dyn # perform operation
fnmadd.s f8, f23, f18, f5, rdn # perform operation
fnmadd.s f8, f23, f18, f5, rmm # perform operation
fnmadd.s f8, f23, f18, f5, rne # perform operation
fnmadd.s f8, f23, f18, f5, rtz # perform operation
fnmadd.s f8, f23, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x31, 0xf94b4be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xa04fda57 # load x3 with value 0xa04fda57
sw x3, 0(x2) # store 0xa04fda57 in memory
flw f7, 0(x2) # load 0xa04fda57 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmadd.s f31, f21, f7, f6, dyn # perform operation
fnmadd.s f31, f21, f7, f6, rdn # perform operation
fnmadd.s f31, f21, f7, f6, rmm # perform operation
fnmadd.s f31, f21, f7, f6, rne # perform operation
fnmadd.s f31, f21, f7, f6, rtz # perform operation
fnmadd.s f31, f21, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f21, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x9, 0x5961a937 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0xee61169e # load x3 with value 0xee61169e
sw x3, 0(x2) # store 0xee61169e in memory
flw f29, 0(x2) # load 0xee61169e from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmadd.s f9, f6, f29, f20, dyn # perform operation
fnmadd.s f9, f6, f29, f20, rdn # perform operation
fnmadd.s f9, f6, f29, f20, rmm # perform operation
fnmadd.s f9, f6, f29, f20, rne # perform operation
fnmadd.s f9, f6, f29, f20, rtz # perform operation
fnmadd.s f9, f6, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f6, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f6, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f6, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f6, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f6, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x27, 0x4cd4c57a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xf6dc5b6b # load x3 with value 0xf6dc5b6b
sw x3, 0(x2) # store 0xf6dc5b6b in memory
flw f14, 0(x2) # load 0xf6dc5b6b from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.s f27, f3, f14, f15, dyn # perform operation
fnmadd.s f27, f3, f14, f15, rdn # perform operation
fnmadd.s f27, f3, f14, f15, rmm # perform operation
fnmadd.s f27, f3, f14, f15, rne # perform operation
fnmadd.s f27, f3, f14, f15, rtz # perform operation
fnmadd.s f27, f3, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f3, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x2, 0x7a97e106 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0xaed6826c # load x3 with value 0xaed6826c
sw x3, 0(x2) # store 0xaed6826c in memory
flw f16, 0(x2) # load 0xaed6826c from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmadd.s f2, f29, f16, f15, dyn # perform operation
fnmadd.s f2, f29, f16, f15, rdn # perform operation
fnmadd.s f2, f29, f16, f15, rmm # perform operation
fnmadd.s f2, f29, f16, f15, rne # perform operation
fnmadd.s f2, f29, f16, f15, rtz # perform operation
fnmadd.s f2, f29, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f29, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f29, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x29, 0x7eb5960c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xe7c1cffc # load x3 with value 0xe7c1cffc
sw x3, 0(x2) # store 0xe7c1cffc in memory
flw f12, 0(x2) # load 0xe7c1cffc from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmadd.s f29, f4, f12, f19, dyn # perform operation
fnmadd.s f29, f4, f12, f19, rdn # perform operation
fnmadd.s f29, f4, f12, f19, rmm # perform operation
fnmadd.s f29, f4, f12, f19, rne # perform operation
fnmadd.s f29, f4, f12, f19, rtz # perform operation
fnmadd.s f29, f4, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f4, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f4, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f4, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f4, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f4, f12, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x13, 0x97c1ebe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x2e86c546 # load x3 with value 0x2e86c546
sw x3, 0(x2) # store 0x2e86c546 in memory
flw f1, 0(x2) # load 0x2e86c546 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmadd.s f13, f26, f1, f31, dyn # perform operation
fnmadd.s f13, f26, f1, f31, rdn # perform operation
fnmadd.s f13, f26, f1, f31, rmm # perform operation
fnmadd.s f13, f26, f1, f31, rne # perform operation
fnmadd.s f13, f26, f1, f31, rtz # perform operation
fnmadd.s f13, f26, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x21, 0xa698be5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0xea1b0134 # load x3 with value 0xea1b0134
sw x3, 0(x2) # store 0xea1b0134 in memory
flw f26, 0(x2) # load 0xea1b0134 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmadd.s f21, f20, f26, f27, dyn # perform operation
fnmadd.s f21, f20, f26, f27, rdn # perform operation
fnmadd.s f21, f20, f26, f27, rmm # perform operation
fnmadd.s f21, f20, f26, f27, rne # perform operation
fnmadd.s f21, f20, f26, f27, rtz # perform operation
fnmadd.s f21, f20, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f26, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x25, 0x0e1232b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xfbd572ca # load x3 with value 0xfbd572ca
sw x3, 0(x2) # store 0xfbd572ca in memory
flw f6, 0(x2) # load 0xfbd572ca from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmadd.s f25, f21, f6, f8, dyn # perform operation
fnmadd.s f25, f21, f6, f8, rdn # perform operation
fnmadd.s f25, f21, f6, f8, rmm # perform operation
fnmadd.s f25, f21, f6, f8, rne # perform operation
fnmadd.s f25, f21, f6, f8, rtz # perform operation
fnmadd.s f25, f21, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f21, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f21, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f21, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f21, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f21, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x5, 0x7e2a8f8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0x43cf6632 # load x3 with value 0x43cf6632
sw x3, 0(x2) # store 0x43cf6632 in memory
flw f31, 0(x2) # load 0x43cf6632 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fnmadd.s f5, f18, f31, f11, dyn # perform operation
fnmadd.s f5, f18, f31, f11, rdn # perform operation
fnmadd.s f5, f18, f31, f11, rmm # perform operation
fnmadd.s f5, f18, f31, f11, rne # perform operation
fnmadd.s f5, f18, f31, f11, rtz # perform operation
fnmadd.s f5, f18, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x11, 0x6be6da91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x0eeffd01 # load x3 with value 0x0eeffd01
sw x3, 0(x2) # store 0x0eeffd01 in memory
flw f26, 0(x2) # load 0x0eeffd01 from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fnmadd.s f11, f5, f26, f7, dyn # perform operation
fnmadd.s f11, f5, f26, f7, rdn # perform operation
fnmadd.s f11, f5, f26, f7, rmm # perform operation
fnmadd.s f11, f5, f26, f7, rne # perform operation
fnmadd.s f11, f5, f26, f7, rtz # perform operation
fnmadd.s f11, f5, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f26, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x12, 0x9b232491 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x79c95967 # load x3 with value 0x79c95967
sw x3, 0(x2) # store 0x79c95967 in memory
flw f23, 0(x2) # load 0x79c95967 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fnmadd.s f12, f5, f23, f21, dyn # perform operation
fnmadd.s f12, f5, f23, f21, rdn # perform operation
fnmadd.s f12, f5, f23, f21, rmm # perform operation
fnmadd.s f12, f5, f23, f21, rne # perform operation
fnmadd.s f12, f5, f23, f21, rtz # perform operation
fnmadd.s f12, f5, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x9, 0xd34d1e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x621f6485 # load x3 with value 0x621f6485
sw x3, 0(x2) # store 0x621f6485 in memory
flw f25, 0(x2) # load 0x621f6485 from memory into f25
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmadd.s f9, f4, f25, f16, dyn # perform operation
fnmadd.s f9, f4, f25, f16, rdn # perform operation
fnmadd.s f9, f4, f25, f16, rmm # perform operation
fnmadd.s f9, f4, f25, f16, rne # perform operation
fnmadd.s f9, f4, f25, f16, rtz # perform operation
fnmadd.s f9, f4, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f4, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f4, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f4, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f4, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f4, f25, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x4, 0xd22d5945 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x21af92ef # load x3 with value 0x21af92ef
sw x3, 0(x2) # store 0x21af92ef in memory
flw f29, 0(x2) # load 0x21af92ef from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmadd.s f4, f22, f29, f14, dyn # perform operation
fnmadd.s f4, f22, f29, f14, rdn # perform operation
fnmadd.s f4, f22, f29, f14, rmm # perform operation
fnmadd.s f4, f22, f29, f14, rne # perform operation
fnmadd.s f4, f22, f29, f14, rtz # perform operation
fnmadd.s f4, f22, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f22, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x8, 0x23c152c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0xd68d0863 # load x3 with value 0xd68d0863
sw x3, 0(x2) # store 0xd68d0863 in memory
flw f16, 0(x2) # load 0xd68d0863 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fnmadd.s f8, f17, f16, f26, dyn # perform operation
fnmadd.s f8, f17, f16, f26, rdn # perform operation
fnmadd.s f8, f17, f16, f26, rmm # perform operation
fnmadd.s f8, f17, f16, f26, rne # perform operation
fnmadd.s f8, f17, f16, f26, rtz # perform operation
fnmadd.s f8, f17, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f17, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x24, 0x5e10c898 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0xb7096a24 # load x3 with value 0xb7096a24
sw x3, 0(x2) # store 0xb7096a24 in memory
flw f1, 0(x2) # load 0xb7096a24 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fnmadd.s f24, f3, f1, f31, dyn # perform operation
fnmadd.s f24, f3, f1, f31, rdn # perform operation
fnmadd.s f24, f3, f1, f31, rmm # perform operation
fnmadd.s f24, f3, f1, f31, rne # perform operation
fnmadd.s f24, f3, f1, f31, rtz # perform operation
fnmadd.s f24, f3, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f3, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f3, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x17, 0xcff82f6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x70ae36c7 # load x3 with value 0x70ae36c7
sw x3, 0(x2) # store 0x70ae36c7 in memory
flw f15, 0(x2) # load 0x70ae36c7 from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f17, f2, f15, f8, dyn # perform operation
fnmadd.s f17, f2, f15, f8, rdn # perform operation
fnmadd.s f17, f2, f15, f8, rmm # perform operation
fnmadd.s f17, f2, f15, f8, rne # perform operation
fnmadd.s f17, f2, f15, f8, rtz # perform operation
fnmadd.s f17, f2, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x26, 0x93c38acf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xeb77e93c # load x3 with value 0xeb77e93c
sw x3, 0(x2) # store 0xeb77e93c in memory
flw f20, 0(x2) # load 0xeb77e93c from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fnmadd.s f26, f15, f20, f31, dyn # perform operation
fnmadd.s f26, f15, f20, f31, rdn # perform operation
fnmadd.s f26, f15, f20, f31, rmm # perform operation
fnmadd.s f26, f15, f20, f31, rne # perform operation
fnmadd.s f26, f15, f20, f31, rtz # perform operation
fnmadd.s f26, f15, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f15, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f15, f20, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x9, 0x32afb826 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x3ec41f64 # load x3 with value 0x3ec41f64
sw x3, 0(x2) # store 0x3ec41f64 in memory
flw f27, 0(x2) # load 0x3ec41f64 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fnmadd.s f9, f25, f27, f29, dyn # perform operation
fnmadd.s f9, f25, f27, f29, rdn # perform operation
fnmadd.s f9, f25, f27, f29, rmm # perform operation
fnmadd.s f9, f25, f27, f29, rne # perform operation
fnmadd.s f9, f25, f27, f29, rtz # perform operation
fnmadd.s f9, f25, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x11, 0xc1189d25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0xae228cb0 # load x3 with value 0xae228cb0
sw x3, 0(x2) # store 0xae228cb0 in memory
flw f15, 0(x2) # load 0xae228cb0 from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmadd.s f11, f5, f15, f2, dyn # perform operation
fnmadd.s f11, f5, f15, f2, rdn # perform operation
fnmadd.s f11, f5, f15, f2, rmm # perform operation
fnmadd.s f11, f5, f15, f2, rne # perform operation
fnmadd.s f11, f5, f15, f2, rtz # perform operation
fnmadd.s f11, f5, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x10, 0xbcc7f0d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x10fd3cc8 # load x3 with value 0x10fd3cc8
sw x3, 0(x2) # store 0x10fd3cc8 in memory
flw f31, 0(x2) # load 0x10fd3cc8 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fnmadd.s f10, f6, f31, f18, dyn # perform operation
fnmadd.s f10, f6, f31, f18, rdn # perform operation
fnmadd.s f10, f6, f31, f18, rmm # perform operation
fnmadd.s f10, f6, f31, f18, rne # perform operation
fnmadd.s f10, f6, f31, f18, rtz # perform operation
fnmadd.s f10, f6, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f6, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f6, f31, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x8, 0xf56cce80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xb144d6c4 # load x3 with value 0xb144d6c4
sw x3, 0(x2) # store 0xb144d6c4 in memory
flw f6, 0(x2) # load 0xb144d6c4 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmadd.s f8, f2, f6, f22, dyn # perform operation
fnmadd.s f8, f2, f6, f22, rdn # perform operation
fnmadd.s f8, f2, f6, f22, rmm # perform operation
fnmadd.s f8, f2, f6, f22, rne # perform operation
fnmadd.s f8, f2, f6, f22, rtz # perform operation
fnmadd.s f8, f2, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f2, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x8, 0xee3c75a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x2b6e4ed3 # load x3 with value 0x2b6e4ed3
sw x3, 0(x2) # store 0x2b6e4ed3 in memory
flw f2, 0(x2) # load 0x2b6e4ed3 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fnmadd.s f8, f5, f2, f23, dyn # perform operation
fnmadd.s f8, f5, f2, f23, rdn # perform operation
fnmadd.s f8, f5, f2, f23, rmm # perform operation
fnmadd.s f8, f5, f2, f23, rne # perform operation
fnmadd.s f8, f5, f2, f23, rtz # perform operation
fnmadd.s f8, f5, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f5, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x8, 0x04c65553 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x61b7286a # load x3 with value 0x61b7286a
sw x3, 0(x2) # store 0x61b7286a in memory
flw f12, 0(x2) # load 0x61b7286a from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmadd.s f8, f4, f12, f28, dyn # perform operation
fnmadd.s f8, f4, f12, f28, rdn # perform operation
fnmadd.s f8, f4, f12, f28, rmm # perform operation
fnmadd.s f8, f4, f12, f28, rne # perform operation
fnmadd.s f8, f4, f12, f28, rtz # perform operation
fnmadd.s f8, f4, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f4, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x7, 0xf6ef0e4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xdf9f208f # load x3 with value 0xdf9f208f
sw x3, 0(x2) # store 0xdf9f208f in memory
flw f9, 0(x2) # load 0xdf9f208f from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fnmadd.s f7, f10, f9, f23, dyn # perform operation
fnmadd.s f7, f10, f9, f23, rdn # perform operation
fnmadd.s f7, f10, f9, f23, rmm # perform operation
fnmadd.s f7, f10, f9, f23, rne # perform operation
fnmadd.s f7, f10, f9, f23, rtz # perform operation
fnmadd.s f7, f10, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f10, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f10, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f10, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f10, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f10, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x21, 0x23b60aad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xdd599125 # load x3 with value 0xdd599125
sw x3, 0(x2) # store 0xdd599125 in memory
flw f6, 0(x2) # load 0xdd599125 from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmadd.s f21, f11, f6, f20, dyn # perform operation
fnmadd.s f21, f11, f6, f20, rdn # perform operation
fnmadd.s f21, f11, f6, f20, rmm # perform operation
fnmadd.s f21, f11, f6, f20, rne # perform operation
fnmadd.s f21, f11, f6, f20, rtz # perform operation
fnmadd.s f21, f11, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f11, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x9, 0xb93c1933 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xd2400a56 # load x3 with value 0xd2400a56
sw x3, 0(x2) # store 0xd2400a56 in memory
flw f2, 0(x2) # load 0xd2400a56 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmadd.s f9, f10, f2, f31, dyn # perform operation
fnmadd.s f9, f10, f2, f31, rdn # perform operation
fnmadd.s f9, f10, f2, f31, rmm # perform operation
fnmadd.s f9, f10, f2, f31, rne # perform operation
fnmadd.s f9, f10, f2, f31, rtz # perform operation
fnmadd.s f9, f10, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f10, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f10, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f10, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f10, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f10, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x6, 0x014924cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xd5ff7abb # load x3 with value 0xd5ff7abb
sw x3, 0(x2) # store 0xd5ff7abb in memory
flw f20, 0(x2) # load 0xd5ff7abb from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fnmadd.s f6, f15, f20, f7, dyn # perform operation
fnmadd.s f6, f15, f20, f7, rdn # perform operation
fnmadd.s f6, f15, f20, f7, rmm # perform operation
fnmadd.s f6, f15, f20, f7, rne # perform operation
fnmadd.s f6, f15, f20, f7, rtz # perform operation
fnmadd.s f6, f15, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x5, 0xa3ea440b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x70168fdd # load x3 with value 0x70168fdd
sw x3, 0(x2) # store 0x70168fdd in memory
flw f25, 0(x2) # load 0x70168fdd from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f5, f18, f25, f10, dyn # perform operation
fnmadd.s f5, f18, f25, f10, rdn # perform operation
fnmadd.s f5, f18, f25, f10, rmm # perform operation
fnmadd.s f5, f18, f25, f10, rne # perform operation
fnmadd.s f5, f18, f25, f10, rtz # perform operation
fnmadd.s f5, f18, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x11, 0x3cafa53d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x5c4e9653 # load x3 with value 0x5c4e9653
sw x3, 0(x2) # store 0x5c4e9653 in memory
flw f9, 0(x2) # load 0x5c4e9653 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.s f11, f25, f9, f31, dyn # perform operation
fnmadd.s f11, f25, f9, f31, rdn # perform operation
fnmadd.s f11, f25, f9, f31, rmm # perform operation
fnmadd.s f11, f25, f9, f31, rne # perform operation
fnmadd.s f11, f25, f9, f31, rtz # perform operation
fnmadd.s f11, f25, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f25, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x3, 0xc9ad884d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x572d1bb0 # load x3 with value 0x572d1bb0
sw x3, 0(x2) # store 0x572d1bb0 in memory
flw f24, 0(x2) # load 0x572d1bb0 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmadd.s f3, f1, f24, f23, dyn # perform operation
fnmadd.s f3, f1, f24, f23, rdn # perform operation
fnmadd.s f3, f1, f24, f23, rmm # perform operation
fnmadd.s f3, f1, f24, f23, rne # perform operation
fnmadd.s f3, f1, f24, f23, rtz # perform operation
fnmadd.s f3, f1, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x19, 0xbcc0a73f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x4f43b137 # load x3 with value 0x4f43b137
sw x3, 0(x2) # store 0x4f43b137 in memory
flw f26, 0(x2) # load 0x4f43b137 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmadd.s f19, f10, f26, f5, dyn # perform operation
fnmadd.s f19, f10, f26, f5, rdn # perform operation
fnmadd.s f19, f10, f26, f5, rmm # perform operation
fnmadd.s f19, f10, f26, f5, rne # perform operation
fnmadd.s f19, f10, f26, f5, rtz # perform operation
fnmadd.s f19, f10, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f10, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x3, 0x4f5bc303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0xbe632a90 # load x3 with value 0xbe632a90
sw x3, 0(x2) # store 0xbe632a90 in memory
flw f5, 0(x2) # load 0xbe632a90 from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fnmadd.s f3, f17, f5, f2, dyn # perform operation
fnmadd.s f3, f17, f5, f2, rdn # perform operation
fnmadd.s f3, f17, f5, f2, rmm # perform operation
fnmadd.s f3, f17, f5, f2, rne # perform operation
fnmadd.s f3, f17, f5, f2, rtz # perform operation
fnmadd.s f3, f17, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f17, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x14, 0xc160c07d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x1c551a76 # load x3 with value 0x1c551a76
sw x3, 0(x2) # store 0x1c551a76 in memory
flw f28, 0(x2) # load 0x1c551a76 from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fnmadd.s f14, f1, f28, f20, dyn # perform operation
fnmadd.s f14, f1, f28, f20, rdn # perform operation
fnmadd.s f14, f1, f28, f20, rmm # perform operation
fnmadd.s f14, f1, f28, f20, rne # perform operation
fnmadd.s f14, f1, f28, f20, rtz # perform operation
fnmadd.s f14, f1, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x23, 0x94bbed84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xf05a0d72 # load x3 with value 0xf05a0d72
sw x3, 0(x2) # store 0xf05a0d72 in memory
flw f25, 0(x2) # load 0xf05a0d72 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmadd.s f23, f20, f25, f14, dyn # perform operation
fnmadd.s f23, f20, f25, f14, rdn # perform operation
fnmadd.s f23, f20, f25, f14, rmm # perform operation
fnmadd.s f23, f20, f25, f14, rne # perform operation
fnmadd.s f23, f20, f25, f14, rtz # perform operation
fnmadd.s f23, f20, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x23, 0x3e50da86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xa65ab8fe # load x3 with value 0xa65ab8fe
sw x3, 0(x2) # store 0xa65ab8fe in memory
flw f24, 0(x2) # load 0xa65ab8fe from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmadd.s f23, f20, f24, f22, dyn # perform operation
fnmadd.s f23, f20, f24, f22, rdn # perform operation
fnmadd.s f23, f20, f24, f22, rmm # perform operation
fnmadd.s f23, f20, f24, f22, rne # perform operation
fnmadd.s f23, f20, f24, f22, rtz # perform operation
fnmadd.s f23, f20, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x16, 0x6a39165b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0xc067164c # load x3 with value 0xc067164c
sw x3, 0(x2) # store 0xc067164c in memory
flw f31, 0(x2) # load 0xc067164c from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fnmadd.s f16, f29, f31, f24, dyn # perform operation
fnmadd.s f16, f29, f31, f24, rdn # perform operation
fnmadd.s f16, f29, f31, f24, rmm # perform operation
fnmadd.s f16, f29, f31, f24, rne # perform operation
fnmadd.s f16, f29, f31, f24, rtz # perform operation
fnmadd.s f16, f29, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x26, 0x334f7cd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x5c8d2f1e # load x3 with value 0x5c8d2f1e
sw x3, 0(x2) # store 0x5c8d2f1e in memory
flw f20, 0(x2) # load 0x5c8d2f1e from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmadd.s f26, f12, f20, f9, dyn # perform operation
fnmadd.s f26, f12, f20, f9, rdn # perform operation
fnmadd.s f26, f12, f20, f9, rmm # perform operation
fnmadd.s f26, f12, f20, f9, rne # perform operation
fnmadd.s f26, f12, f20, f9, rtz # perform operation
fnmadd.s f26, f12, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x29, 0xd6e1302f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x53852f59 # load x3 with value 0x53852f59
sw x3, 0(x2) # store 0x53852f59 in memory
flw f18, 0(x2) # load 0x53852f59 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmadd.s f29, f21, f18, f3, dyn # perform operation
fnmadd.s f29, f21, f18, f3, rdn # perform operation
fnmadd.s f29, f21, f18, f3, rmm # perform operation
fnmadd.s f29, f21, f18, f3, rne # perform operation
fnmadd.s f29, f21, f18, f3, rtz # perform operation
fnmadd.s f29, f21, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f21, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x22, 0xdcef8392 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xa9dd751f # load x3 with value 0xa9dd751f
sw x3, 0(x2) # store 0xa9dd751f in memory
flw f14, 0(x2) # load 0xa9dd751f from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.s f22, f29, f14, f12, dyn # perform operation
fnmadd.s f22, f29, f14, f12, rdn # perform operation
fnmadd.s f22, f29, f14, f12, rmm # perform operation
fnmadd.s f22, f29, f14, f12, rne # perform operation
fnmadd.s f22, f29, f14, f12, rtz # perform operation
fnmadd.s f22, f29, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f14, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x7, 0xf6ab928e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xed144281 # load x3 with value 0xed144281
sw x3, 0(x2) # store 0xed144281 in memory
flw f16, 0(x2) # load 0xed144281 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmadd.s f7, f5, f16, f19, dyn # perform operation
fnmadd.s f7, f5, f16, f19, rdn # perform operation
fnmadd.s f7, f5, f16, f19, rmm # perform operation
fnmadd.s f7, f5, f16, f19, rne # perform operation
fnmadd.s f7, f5, f16, f19, rtz # perform operation
fnmadd.s f7, f5, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f16, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x8, 0x46c1d4ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xb2b35c21 # load x3 with value 0xb2b35c21
sw x3, 0(x2) # store 0xb2b35c21 in memory
flw f13, 0(x2) # load 0xb2b35c21 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f8, f10, f13, f30, dyn # perform operation
fnmadd.s f8, f10, f13, f30, rdn # perform operation
fnmadd.s f8, f10, f13, f30, rmm # perform operation
fnmadd.s f8, f10, f13, f30, rne # perform operation
fnmadd.s f8, f10, f13, f30, rtz # perform operation
fnmadd.s f8, f10, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x3, 0xb9ebb8b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0x887afda2 # load x3 with value 0x887afda2
sw x3, 0(x2) # store 0x887afda2 in memory
flw f19, 0(x2) # load 0x887afda2 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmadd.s f3, f24, f19, f21, dyn # perform operation
fnmadd.s f3, f24, f19, f21, rdn # perform operation
fnmadd.s f3, f24, f19, f21, rmm # perform operation
fnmadd.s f3, f24, f19, f21, rne # perform operation
fnmadd.s f3, f24, f19, f21, rtz # perform operation
fnmadd.s f3, f24, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f24, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f24, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f24, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f24, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f24, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x27, 0x507ef491 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0xe81a0016 # load x3 with value 0xe81a0016
sw x3, 0(x2) # store 0xe81a0016 in memory
flw f20, 0(x2) # load 0xe81a0016 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmadd.s f27, f4, f20, f7, dyn # perform operation
fnmadd.s f27, f4, f20, f7, rdn # perform operation
fnmadd.s f27, f4, f20, f7, rmm # perform operation
fnmadd.s f27, f4, f20, f7, rne # perform operation
fnmadd.s f27, f4, f20, f7, rtz # perform operation
fnmadd.s f27, f4, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f4, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x20, 0x3307c943 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x7f459b99 # load x3 with value 0x7f459b99
sw x3, 0(x2) # store 0x7f459b99 in memory
flw f14, 0(x2) # load 0x7f459b99 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmadd.s f20, f3, f14, f26, dyn # perform operation
fnmadd.s f20, f3, f14, f26, rdn # perform operation
fnmadd.s f20, f3, f14, f26, rmm # perform operation
fnmadd.s f20, f3, f14, f26, rne # perform operation
fnmadd.s f20, f3, f14, f26, rtz # perform operation
fnmadd.s f20, f3, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f3, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f3, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f3, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f3, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f3, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x21, 0x7f0bf54f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x285f1d46 # load x3 with value 0x285f1d46
sw x3, 0(x2) # store 0x285f1d46 in memory
flw f30, 0(x2) # load 0x285f1d46 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f21, f22, f30, f13, dyn # perform operation
fnmadd.s f21, f22, f30, f13, rdn # perform operation
fnmadd.s f21, f22, f30, f13, rmm # perform operation
fnmadd.s f21, f22, f30, f13, rne # perform operation
fnmadd.s f21, f22, f30, f13, rtz # perform operation
fnmadd.s f21, f22, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f22, f30, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x26, 0xc1da7c74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x040f8053 # load x3 with value 0x040f8053
sw x3, 0(x2) # store 0x040f8053 in memory
flw f9, 0(x2) # load 0x040f8053 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fnmadd.s f26, f27, f9, f1, dyn # perform operation
fnmadd.s f26, f27, f9, f1, rdn # perform operation
fnmadd.s f26, f27, f9, f1, rmm # perform operation
fnmadd.s f26, f27, f9, f1, rne # perform operation
fnmadd.s f26, f27, f9, f1, rtz # perform operation
fnmadd.s f26, f27, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f27, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f27, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f27, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f27, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f27, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x30, 0x2df5844c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0xb845b135 # load x3 with value 0xb845b135
sw x3, 0(x2) # store 0xb845b135 in memory
flw f26, 0(x2) # load 0xb845b135 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f30, f31, f26, f12, dyn # perform operation
fnmadd.s f30, f31, f26, f12, rdn # perform operation
fnmadd.s f30, f31, f26, f12, rmm # perform operation
fnmadd.s f30, f31, f26, f12, rne # perform operation
fnmadd.s f30, f31, f26, f12, rtz # perform operation
fnmadd.s f30, f31, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x25, 0xc9227860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xda7cf78c # load x3 with value 0xda7cf78c
sw x3, 0(x2) # store 0xda7cf78c in memory
flw f30, 0(x2) # load 0xda7cf78c from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmadd.s f25, f15, f30, f1, dyn # perform operation
fnmadd.s f25, f15, f30, f1, rdn # perform operation
fnmadd.s f25, f15, f30, f1, rmm # perform operation
fnmadd.s f25, f15, f30, f1, rne # perform operation
fnmadd.s f25, f15, f30, f1, rtz # perform operation
fnmadd.s f25, f15, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x20, 0xee6a797a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0xca9b1878 # load x3 with value 0xca9b1878
sw x3, 0(x2) # store 0xca9b1878 in memory
flw f25, 0(x2) # load 0xca9b1878 from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fnmadd.s f20, f31, f25, f15, dyn # perform operation
fnmadd.s f20, f31, f25, f15, rdn # perform operation
fnmadd.s f20, f31, f25, f15, rmm # perform operation
fnmadd.s f20, f31, f25, f15, rne # perform operation
fnmadd.s f20, f31, f25, f15, rtz # perform operation
fnmadd.s f20, f31, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f31, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x4, 0x7348dea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x1c3f409e # load x3 with value 0x1c3f409e
sw x3, 0(x2) # store 0x1c3f409e in memory
flw f7, 0(x2) # load 0x1c3f409e from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmadd.s f4, f10, f7, f9, dyn # perform operation
fnmadd.s f4, f10, f7, f9, rdn # perform operation
fnmadd.s f4, f10, f7, f9, rmm # perform operation
fnmadd.s f4, f10, f7, f9, rne # perform operation
fnmadd.s f4, f10, f7, f9, rtz # perform operation
fnmadd.s f4, f10, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f10, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f10, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x24, 0x0faab17b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xabf84f20 # load x3 with value 0xabf84f20
sw x3, 0(x2) # store 0xabf84f20 in memory
flw f15, 0(x2) # load 0xabf84f20 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fnmadd.s f24, f1, f15, f13, dyn # perform operation
fnmadd.s f24, f1, f15, f13, rdn # perform operation
fnmadd.s f24, f1, f15, f13, rmm # perform operation
fnmadd.s f24, f1, f15, f13, rne # perform operation
fnmadd.s f24, f1, f15, f13, rtz # perform operation
fnmadd.s f24, f1, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f1, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x16, 0x7b60c23b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xa57c1c4f # load x3 with value 0xa57c1c4f
sw x3, 0(x2) # store 0xa57c1c4f in memory
flw f21, 0(x2) # load 0xa57c1c4f from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmadd.s f16, f15, f21, f2, dyn # perform operation
fnmadd.s f16, f15, f21, f2, rdn # perform operation
fnmadd.s f16, f15, f21, f2, rmm # perform operation
fnmadd.s f16, f15, f21, f2, rne # perform operation
fnmadd.s f16, f15, f21, f2, rtz # perform operation
fnmadd.s f16, f15, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x2, 0x8df9b35e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x8af043b3 # load x3 with value 0x8af043b3
sw x3, 0(x2) # store 0x8af043b3 in memory
flw f25, 0(x2) # load 0x8af043b3 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmadd.s f2, f31, f25, f27, dyn # perform operation
fnmadd.s f2, f31, f25, f27, rdn # perform operation
fnmadd.s f2, f31, f25, f27, rmm # perform operation
fnmadd.s f2, f31, f25, f27, rne # perform operation
fnmadd.s f2, f31, f25, f27, rtz # perform operation
fnmadd.s f2, f31, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f31, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x24, 0xf31c4b87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x49500df7 # load x3 with value 0x49500df7
sw x3, 0(x2) # store 0x49500df7 in memory
flw f11, 0(x2) # load 0x49500df7 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f24, f9, f11, f10, dyn # perform operation
fnmadd.s f24, f9, f11, f10, rdn # perform operation
fnmadd.s f24, f9, f11, f10, rmm # perform operation
fnmadd.s f24, f9, f11, f10, rne # perform operation
fnmadd.s f24, f9, f11, f10, rtz # perform operation
fnmadd.s f24, f9, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x5, 0x144a15ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xa91b6752 # load x3 with value 0xa91b6752
sw x3, 0(x2) # store 0xa91b6752 in memory
flw f10, 0(x2) # load 0xa91b6752 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fnmadd.s f5, f1, f10, f19, dyn # perform operation
fnmadd.s f5, f1, f10, f19, rdn # perform operation
fnmadd.s f5, f1, f10, f19, rmm # perform operation
fnmadd.s f5, f1, f10, f19, rne # perform operation
fnmadd.s f5, f1, f10, f19, rtz # perform operation
fnmadd.s f5, f1, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f1, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f1, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f1, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f1, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f1, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x12, 0x4db80059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x1f3a6b4f # load x3 with value 0x1f3a6b4f
sw x3, 0(x2) # store 0x1f3a6b4f in memory
flw f16, 0(x2) # load 0x1f3a6b4f from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmadd.s f12, f11, f16, f18, dyn # perform operation
fnmadd.s f12, f11, f16, f18, rdn # perform operation
fnmadd.s f12, f11, f16, f18, rmm # perform operation
fnmadd.s f12, f11, f16, f18, rne # perform operation
fnmadd.s f12, f11, f16, f18, rtz # perform operation
fnmadd.s f12, f11, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f11, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x1, 0xfce996c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0xf304c4a6 # load x3 with value 0xf304c4a6
sw x3, 0(x2) # store 0xf304c4a6 in memory
flw f15, 0(x2) # load 0xf304c4a6 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmadd.s f1, f25, f15, f9, dyn # perform operation
fnmadd.s f1, f25, f15, f9, rdn # perform operation
fnmadd.s f1, f25, f15, f9, rmm # perform operation
fnmadd.s f1, f25, f15, f9, rne # perform operation
fnmadd.s f1, f25, f15, f9, rtz # perform operation
fnmadd.s f1, f25, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f25, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x8, 0xa4dc824b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x9bc739bf # load x3 with value 0x9bc739bf
sw x3, 0(x2) # store 0x9bc739bf in memory
flw f13, 0(x2) # load 0x9bc739bf from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
fnmadd.s f8, f23, f13, f4, dyn # perform operation
fnmadd.s f8, f23, f13, f4, rdn # perform operation
fnmadd.s f8, f23, f13, f4, rmm # perform operation
fnmadd.s f8, f23, f13, f4, rne # perform operation
fnmadd.s f8, f23, f13, f4, rtz # perform operation
fnmadd.s f8, f23, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x29, 0xd8c72e5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x2712aa66 # load x3 with value 0x2712aa66
sw x3, 0(x2) # store 0x2712aa66 in memory
flw f19, 0(x2) # load 0x2712aa66 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmadd.s f29, f9, f19, f1, dyn # perform operation
fnmadd.s f29, f9, f19, f1, rdn # perform operation
fnmadd.s f29, f9, f19, f1, rmm # perform operation
fnmadd.s f29, f9, f19, f1, rne # perform operation
fnmadd.s f29, f9, f19, f1, rtz # perform operation
fnmadd.s f29, f9, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f9, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x29, 0xc7aac886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x41899fc3 # load x3 with value 0x41899fc3
sw x3, 0(x2) # store 0x41899fc3 in memory
flw f11, 0(x2) # load 0x41899fc3 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmadd.s f29, f14, f11, f3, dyn # perform operation
fnmadd.s f29, f14, f11, f3, rdn # perform operation
fnmadd.s f29, f14, f11, f3, rmm # perform operation
fnmadd.s f29, f14, f11, f3, rne # perform operation
fnmadd.s f29, f14, f11, f3, rtz # perform operation
fnmadd.s f29, f14, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f14, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f14, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f14, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f14, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f14, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x12, 0x1182019c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0xa9bd77d8 # load x3 with value 0xa9bd77d8
sw x3, 0(x2) # store 0xa9bd77d8 in memory
flw f28, 0(x2) # load 0xa9bd77d8 from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fnmadd.s f12, f3, f28, f11, dyn # perform operation
fnmadd.s f12, f3, f28, f11, rdn # perform operation
fnmadd.s f12, f3, f28, f11, rmm # perform operation
fnmadd.s f12, f3, f28, f11, rne # perform operation
fnmadd.s f12, f3, f28, f11, rtz # perform operation
fnmadd.s f12, f3, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x1, 0xa7fe2bf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x996aa823 # load x3 with value 0x996aa823
sw x3, 0(x2) # store 0x996aa823 in memory
flw f24, 0(x2) # load 0x996aa823 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fnmadd.s f1, f6, f24, f5, dyn # perform operation
fnmadd.s f1, f6, f24, f5, rdn # perform operation
fnmadd.s f1, f6, f24, f5, rmm # perform operation
fnmadd.s f1, f6, f24, f5, rne # perform operation
fnmadd.s f1, f6, f24, f5, rtz # perform operation
fnmadd.s f1, f6, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x24, 0x2857eb35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0xe2d6380e # load x3 with value 0xe2d6380e
sw x3, 0(x2) # store 0xe2d6380e in memory
flw f20, 0(x2) # load 0xe2d6380e from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmadd.s f24, f18, f20, f30, dyn # perform operation
fnmadd.s f24, f18, f20, f30, rdn # perform operation
fnmadd.s f24, f18, f20, f30, rmm # perform operation
fnmadd.s f24, f18, f20, f30, rne # perform operation
fnmadd.s f24, f18, f20, f30, rtz # perform operation
fnmadd.s f24, f18, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x12, 0xaf653b5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x97218c50 # load x3 with value 0x97218c50
sw x3, 0(x2) # store 0x97218c50 in memory
flw f30, 0(x2) # load 0x97218c50 from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
fnmadd.s f12, f27, f30, f4, dyn # perform operation
fnmadd.s f12, f27, f30, f4, rdn # perform operation
fnmadd.s f12, f27, f30, f4, rmm # perform operation
fnmadd.s f12, f27, f30, f4, rne # perform operation
fnmadd.s f12, f27, f30, f4, rtz # perform operation
fnmadd.s f12, f27, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f27, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x21, 0x0ba430e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0xbacbe8b9 # load x3 with value 0xbacbe8b9
sw x3, 0(x2) # store 0xbacbe8b9 in memory
flw f25, 0(x2) # load 0xbacbe8b9 from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmadd.s f21, f10, f25, f30, dyn # perform operation
fnmadd.s f21, f10, f25, f30, rdn # perform operation
fnmadd.s f21, f10, f25, f30, rmm # perform operation
fnmadd.s f21, f10, f25, f30, rne # perform operation
fnmadd.s f21, f10, f25, f30, rtz # perform operation
fnmadd.s f21, f10, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x12, 0x826fea48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x6fdeed74 # load x3 with value 0x6fdeed74
sw x3, 0(x2) # store 0x6fdeed74 in memory
flw f24, 0(x2) # load 0x6fdeed74 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmadd.s f12, f22, f24, f23, dyn # perform operation
fnmadd.s f12, f22, f24, f23, rdn # perform operation
fnmadd.s f12, f22, f24, f23, rmm # perform operation
fnmadd.s f12, f22, f24, f23, rne # perform operation
fnmadd.s f12, f22, f24, f23, rtz # perform operation
fnmadd.s f12, f22, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x7, 0xf6412ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x192e3014 # load x3 with value 0x192e3014
sw x3, 0(x2) # store 0x192e3014 in memory
flw f24, 0(x2) # load 0x192e3014 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmadd.s f7, f20, f24, f9, dyn # perform operation
fnmadd.s f7, f20, f24, f9, rdn # perform operation
fnmadd.s f7, f20, f24, f9, rmm # perform operation
fnmadd.s f7, f20, f24, f9, rne # perform operation
fnmadd.s f7, f20, f24, f9, rtz # perform operation
fnmadd.s f7, f20, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f20, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x13, 0xeb5317ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x0984ce42 # load x3 with value 0x0984ce42
sw x3, 0(x2) # store 0x0984ce42 in memory
flw f27, 0(x2) # load 0x0984ce42 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f13, f28, f27, f18, dyn # perform operation
fnmadd.s f13, f28, f27, f18, rdn # perform operation
fnmadd.s f13, f28, f27, f18, rmm # perform operation
fnmadd.s f13, f28, f27, f18, rne # perform operation
fnmadd.s f13, f28, f27, f18, rtz # perform operation
fnmadd.s f13, f28, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x23, 0x3a601ef0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0xcef9afae # load x3 with value 0xcef9afae
sw x3, 0(x2) # store 0xcef9afae in memory
flw f8, 0(x2) # load 0xcef9afae from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fnmadd.s f23, f19, f8, f2, dyn # perform operation
fnmadd.s f23, f19, f8, f2, rdn # perform operation
fnmadd.s f23, f19, f8, f2, rmm # perform operation
fnmadd.s f23, f19, f8, f2, rne # perform operation
fnmadd.s f23, f19, f8, f2, rtz # perform operation
fnmadd.s f23, f19, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f8, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x10, 0x165e88fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x4ca94c22 # load x3 with value 0x4ca94c22
sw x3, 0(x2) # store 0x4ca94c22 in memory
flw f16, 0(x2) # load 0x4ca94c22 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmadd.s f10, f14, f16, f1, dyn # perform operation
fnmadd.s f10, f14, f16, f1, rdn # perform operation
fnmadd.s f10, f14, f16, f1, rmm # perform operation
fnmadd.s f10, f14, f16, f1, rne # perform operation
fnmadd.s f10, f14, f16, f1, rtz # perform operation
fnmadd.s f10, f14, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f14, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f14, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x23, 0xf04efa78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0xa115d80c # load x3 with value 0xa115d80c
sw x3, 0(x2) # store 0xa115d80c in memory
flw f12, 0(x2) # load 0xa115d80c from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmadd.s f23, f28, f12, f14, dyn # perform operation
fnmadd.s f23, f28, f12, f14, rdn # perform operation
fnmadd.s f23, f28, f12, f14, rmm # perform operation
fnmadd.s f23, f28, f12, f14, rne # perform operation
fnmadd.s f23, f28, f12, f14, rtz # perform operation
fnmadd.s f23, f28, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f28, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f28, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x20, 0xbb2a1f44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0xb2b67f87 # load x3 with value 0xb2b67f87
sw x3, 0(x2) # store 0xb2b67f87 in memory
flw f2, 0(x2) # load 0xb2b67f87 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmadd.s f20, f29, f2, f26, dyn # perform operation
fnmadd.s f20, f29, f2, f26, rdn # perform operation
fnmadd.s f20, f29, f2, f26, rmm # perform operation
fnmadd.s f20, f29, f2, f26, rne # perform operation
fnmadd.s f20, f29, f2, f26, rtz # perform operation
fnmadd.s f20, f29, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f29, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x1, 0xd660d29e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xa1c86735 # load x3 with value 0xa1c86735
sw x3, 0(x2) # store 0xa1c86735 in memory
flw f8, 0(x2) # load 0xa1c86735 from memory into f8
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmadd.s f1, f21, f8, f22, dyn # perform operation
fnmadd.s f1, f21, f8, f22, rdn # perform operation
fnmadd.s f1, f21, f8, f22, rmm # perform operation
fnmadd.s f1, f21, f8, f22, rne # perform operation
fnmadd.s f1, f21, f8, f22, rtz # perform operation
fnmadd.s f1, f21, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x29, 0x6a3809e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x4d46be60 # load x3 with value 0x4d46be60
sw x3, 0(x2) # store 0x4d46be60 in memory
flw f5, 0(x2) # load 0x4d46be60 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fnmadd.s f29, f25, f5, f26, dyn # perform operation
fnmadd.s f29, f25, f5, f26, rdn # perform operation
fnmadd.s f29, f25, f5, f26, rmm # perform operation
fnmadd.s f29, f25, f5, f26, rne # perform operation
fnmadd.s f29, f25, f5, f26, rtz # perform operation
fnmadd.s f29, f25, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x6, 0xa48dffb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0xd53dd4dc # load x3 with value 0xd53dd4dc
sw x3, 0(x2) # store 0xd53dd4dc in memory
flw f31, 0(x2) # load 0xd53dd4dc from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fnmadd.s f6, f23, f31, f2, dyn # perform operation
fnmadd.s f6, f23, f31, f2, rdn # perform operation
fnmadd.s f6, f23, f31, f2, rmm # perform operation
fnmadd.s f6, f23, f31, f2, rne # perform operation
fnmadd.s f6, f23, f31, f2, rtz # perform operation
fnmadd.s f6, f23, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x30, 0xf5ec6a4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xf9ec6e02 # load x3 with value 0xf9ec6e02
sw x3, 0(x2) # store 0xf9ec6e02 in memory
flw f31, 0(x2) # load 0xf9ec6e02 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmadd.s f30, f26, f31, f10, dyn # perform operation
fnmadd.s f30, f26, f31, f10, rdn # perform operation
fnmadd.s f30, f26, f31, f10, rmm # perform operation
fnmadd.s f30, f26, f31, f10, rne # perform operation
fnmadd.s f30, f26, f31, f10, rtz # perform operation
fnmadd.s f30, f26, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x14, 0x8cf6f216 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x215ce98f # load x3 with value 0x215ce98f
sw x3, 0(x2) # store 0x215ce98f in memory
flw f5, 0(x2) # load 0x215ce98f from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmadd.s f14, f19, f5, f9, dyn # perform operation
fnmadd.s f14, f19, f5, f9, rdn # perform operation
fnmadd.s f14, f19, f5, f9, rmm # perform operation
fnmadd.s f14, f19, f5, f9, rne # perform operation
fnmadd.s f14, f19, f5, f9, rtz # perform operation
fnmadd.s f14, f19, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x29, 0x58702f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x4b7ea8df # load x3 with value 0x4b7ea8df
sw x3, 0(x2) # store 0x4b7ea8df in memory
flw f13, 0(x2) # load 0x4b7ea8df from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmadd.s f29, f8, f13, f14, dyn # perform operation
fnmadd.s f29, f8, f13, f14, rdn # perform operation
fnmadd.s f29, f8, f13, f14, rmm # perform operation
fnmadd.s f29, f8, f13, f14, rne # perform operation
fnmadd.s f29, f8, f13, f14, rtz # perform operation
fnmadd.s f29, f8, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f13, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x8, 0x3229dafc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0xb45dfcc4 # load x3 with value 0xb45dfcc4
sw x3, 0(x2) # store 0xb45dfcc4 in memory
flw f9, 0(x2) # load 0xb45dfcc4 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmadd.s f8, f24, f9, f15, dyn # perform operation
fnmadd.s f8, f24, f9, f15, rdn # perform operation
fnmadd.s f8, f24, f9, f15, rmm # perform operation
fnmadd.s f8, f24, f9, f15, rne # perform operation
fnmadd.s f8, f24, f9, f15, rtz # perform operation
fnmadd.s f8, f24, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f24, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f24, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f24, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f24, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f24, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x28, 0x37996f1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xaf6ce6a6 # load x3 with value 0xaf6ce6a6
sw x3, 0(x2) # store 0xaf6ce6a6 in memory
flw f23, 0(x2) # load 0xaf6ce6a6 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f28, f30, f23, f10, dyn # perform operation
fnmadd.s f28, f30, f23, f10, rdn # perform operation
fnmadd.s f28, f30, f23, f10, rmm # perform operation
fnmadd.s f28, f30, f23, f10, rne # perform operation
fnmadd.s f28, f30, f23, f10, rtz # perform operation
fnmadd.s f28, f30, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x7, 0x6dc0d524 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x1d88906d # load x3 with value 0x1d88906d
sw x3, 0(x2) # store 0x1d88906d in memory
flw f6, 0(x2) # load 0x1d88906d from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmadd.s f7, f13, f6, f21, dyn # perform operation
fnmadd.s f7, f13, f6, f21, rdn # perform operation
fnmadd.s f7, f13, f6, f21, rmm # perform operation
fnmadd.s f7, f13, f6, f21, rne # perform operation
fnmadd.s f7, f13, f6, f21, rtz # perform operation
fnmadd.s f7, f13, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f13, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f13, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f13, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f13, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f13, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x2, 0x75ac853d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0xcd430004 # load x3 with value 0xcd430004
sw x3, 0(x2) # store 0xcd430004 in memory
flw f1, 0(x2) # load 0xcd430004 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmadd.s f2, f19, f1, f6, dyn # perform operation
fnmadd.s f2, f19, f1, f6, rdn # perform operation
fnmadd.s f2, f19, f1, f6, rmm # perform operation
fnmadd.s f2, f19, f1, f6, rne # perform operation
fnmadd.s f2, f19, f1, f6, rtz # perform operation
fnmadd.s f2, f19, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f19, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x14, 0x626eedf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0xa175f714 # load x3 with value 0xa175f714
sw x3, 0(x2) # store 0xa175f714 in memory
flw f2, 0(x2) # load 0xa175f714 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmadd.s f14, f7, f2, f6, dyn # perform operation
fnmadd.s f14, f7, f2, f6, rdn # perform operation
fnmadd.s f14, f7, f2, f6, rmm # perform operation
fnmadd.s f14, f7, f2, f6, rne # perform operation
fnmadd.s f14, f7, f2, f6, rtz # perform operation
fnmadd.s f14, f7, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f7, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x16, 0x73aa2c94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xf00425bd # load x3 with value 0xf00425bd
sw x3, 0(x2) # store 0xf00425bd in memory
flw f28, 0(x2) # load 0xf00425bd from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmadd.s f16, f31, f28, f14, dyn # perform operation
fnmadd.s f16, f31, f28, f14, rdn # perform operation
fnmadd.s f16, f31, f28, f14, rmm # perform operation
fnmadd.s f16, f31, f28, f14, rne # perform operation
fnmadd.s f16, f31, f28, f14, rtz # perform operation
fnmadd.s f16, f31, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f31, f28, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x11, 0x6876e9c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0xedd9644a # load x3 with value 0xedd9644a
sw x3, 0(x2) # store 0xedd9644a in memory
flw f17, 0(x2) # load 0xedd9644a from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmadd.s f11, f8, f17, f27, dyn # perform operation
fnmadd.s f11, f8, f17, f27, rdn # perform operation
fnmadd.s f11, f8, f17, f27, rmm # perform operation
fnmadd.s f11, f8, f17, f27, rne # perform operation
fnmadd.s f11, f8, f17, f27, rtz # perform operation
fnmadd.s f11, f8, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x15, 0xd2852214 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x0a52d359 # load x3 with value 0x0a52d359
sw x3, 0(x2) # store 0x0a52d359 in memory
flw f21, 0(x2) # load 0x0a52d359 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fnmadd.s f15, f27, f21, f4, dyn # perform operation
fnmadd.s f15, f27, f21, f4, rdn # perform operation
fnmadd.s f15, f27, f21, f4, rmm # perform operation
fnmadd.s f15, f27, f21, f4, rne # perform operation
fnmadd.s f15, f27, f21, f4, rtz # perform operation
fnmadd.s f15, f27, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x27, 0xb75f8a5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xfaf00f34 # load x3 with value 0xfaf00f34
sw x3, 0(x2) # store 0xfaf00f34 in memory
flw f29, 0(x2) # load 0xfaf00f34 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmadd.s f27, f13, f29, f7, dyn # perform operation
fnmadd.s f27, f13, f29, f7, rdn # perform operation
fnmadd.s f27, f13, f29, f7, rmm # perform operation
fnmadd.s f27, f13, f29, f7, rne # perform operation
fnmadd.s f27, f13, f29, f7, rtz # perform operation
fnmadd.s f27, f13, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f13, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x26, 0xacf7ae6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x05b452a5 # load x3 with value 0x05b452a5
sw x3, 0(x2) # store 0x05b452a5 in memory
flw f4, 0(x2) # load 0x05b452a5 from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fnmadd.s f26, f7, f4, f16, dyn # perform operation
fnmadd.s f26, f7, f4, f16, rdn # perform operation
fnmadd.s f26, f7, f4, f16, rmm # perform operation
fnmadd.s f26, f7, f4, f16, rne # perform operation
fnmadd.s f26, f7, f4, f16, rtz # perform operation
fnmadd.s f26, f7, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x1, 0xe0ae41bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0xe1da60b2 # load x3 with value 0xe1da60b2
sw x3, 0(x2) # store 0xe1da60b2 in memory
flw f28, 0(x2) # load 0xe1da60b2 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fnmadd.s f1, f23, f28, f19, dyn # perform operation
fnmadd.s f1, f23, f28, f19, rdn # perform operation
fnmadd.s f1, f23, f28, f19, rmm # perform operation
fnmadd.s f1, f23, f28, f19, rne # perform operation
fnmadd.s f1, f23, f28, f19, rtz # perform operation
fnmadd.s f1, f23, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x17, 0xc918c17c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0xb40a5086 # load x3 with value 0xb40a5086
sw x3, 0(x2) # store 0xb40a5086 in memory
flw f20, 0(x2) # load 0xb40a5086 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmadd.s f17, f19, f20, f18, dyn # perform operation
fnmadd.s f17, f19, f20, f18, rdn # perform operation
fnmadd.s f17, f19, f20, f18, rmm # perform operation
fnmadd.s f17, f19, f20, f18, rne # perform operation
fnmadd.s f17, f19, f20, f18, rtz # perform operation
fnmadd.s f17, f19, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x1, 0x52b8f740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x71937d4b # load x3 with value 0x71937d4b
sw x3, 0(x2) # store 0x71937d4b in memory
flw f26, 0(x2) # load 0x71937d4b from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f1, f11, f26, f24, dyn # perform operation
fnmadd.s f1, f11, f26, f24, rdn # perform operation
fnmadd.s f1, f11, f26, f24, rmm # perform operation
fnmadd.s f1, f11, f26, f24, rne # perform operation
fnmadd.s f1, f11, f26, f24, rtz # perform operation
fnmadd.s f1, f11, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f11, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x7, 0x61c39754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x67cfab3f # load x3 with value 0x67cfab3f
sw x3, 0(x2) # store 0x67cfab3f in memory
flw f3, 0(x2) # load 0x67cfab3f from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmadd.s f7, f20, f3, f30, dyn # perform operation
fnmadd.s f7, f20, f3, f30, rdn # perform operation
fnmadd.s f7, f20, f3, f30, rmm # perform operation
fnmadd.s f7, f20, f3, f30, rne # perform operation
fnmadd.s f7, f20, f3, f30, rtz # perform operation
fnmadd.s f7, f20, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f20, f3, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x2, 0x5ac321b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xc8b0e402 # load x3 with value 0xc8b0e402
sw x3, 0(x2) # store 0xc8b0e402 in memory
flw f18, 0(x2) # load 0xc8b0e402 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f2, f24, f18, f19, dyn # perform operation
fnmadd.s f2, f24, f18, f19, rdn # perform operation
fnmadd.s f2, f24, f18, f19, rmm # perform operation
fnmadd.s f2, f24, f18, f19, rne # perform operation
fnmadd.s f2, f24, f18, f19, rtz # perform operation
fnmadd.s f2, f24, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f24, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x24, 0x8f12ec68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xe38acbde # load x3 with value 0xe38acbde
sw x3, 0(x2) # store 0xe38acbde in memory
flw f23, 0(x2) # load 0xe38acbde from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmadd.s f24, f15, f23, f11, dyn # perform operation
fnmadd.s f24, f15, f23, f11, rdn # perform operation
fnmadd.s f24, f15, f23, f11, rmm # perform operation
fnmadd.s f24, f15, f23, f11, rne # perform operation
fnmadd.s f24, f15, f23, f11, rtz # perform operation
fnmadd.s f24, f15, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x20, 0x96312dbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x05429b87 # load x3 with value 0x05429b87
sw x3, 0(x2) # store 0x05429b87 in memory
flw f27, 0(x2) # load 0x05429b87 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmadd.s f20, f31, f27, f3, dyn # perform operation
fnmadd.s f20, f31, f27, f3, rdn # perform operation
fnmadd.s f20, f31, f27, f3, rmm # perform operation
fnmadd.s f20, f31, f27, f3, rne # perform operation
fnmadd.s f20, f31, f27, f3, rtz # perform operation
fnmadd.s f20, f31, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f31, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f31, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f31, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f31, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f31, f27, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x20, 0x25283dfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0xf1da3a35 # load x3 with value 0xf1da3a35
sw x3, 0(x2) # store 0xf1da3a35 in memory
flw f7, 0(x2) # load 0xf1da3a35 from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmadd.s f20, f10, f7, f6, dyn # perform operation
fnmadd.s f20, f10, f7, f6, rdn # perform operation
fnmadd.s f20, f10, f7, f6, rmm # perform operation
fnmadd.s f20, f10, f7, f6, rne # perform operation
fnmadd.s f20, f10, f7, f6, rtz # perform operation
fnmadd.s f20, f10, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f10, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f10, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x2, 0x065cc282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x097dcb8f # load x3 with value 0x097dcb8f
sw x3, 0(x2) # store 0x097dcb8f in memory
flw f22, 0(x2) # load 0x097dcb8f from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmadd.s f2, f12, f22, f20, dyn # perform operation
fnmadd.s f2, f12, f22, f20, rdn # perform operation
fnmadd.s f2, f12, f22, f20, rmm # perform operation
fnmadd.s f2, f12, f22, f20, rne # perform operation
fnmadd.s f2, f12, f22, f20, rtz # perform operation
fnmadd.s f2, f12, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f12, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x1, 0x79165b2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xf6101239 # load x3 with value 0xf6101239
sw x3, 0(x2) # store 0xf6101239 in memory
flw f10, 0(x2) # load 0xf6101239 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fnmadd.s f1, f28, f10, f6, dyn # perform operation
fnmadd.s f1, f28, f10, f6, rdn # perform operation
fnmadd.s f1, f28, f10, f6, rmm # perform operation
fnmadd.s f1, f28, f10, f6, rne # perform operation
fnmadd.s f1, f28, f10, f6, rtz # perform operation
fnmadd.s f1, f28, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x12, 0xdf23e53d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0xa7b45ec1 # load x3 with value 0xa7b45ec1
sw x3, 0(x2) # store 0xa7b45ec1 in memory
flw f29, 0(x2) # load 0xa7b45ec1 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmadd.s f12, f31, f29, f30, dyn # perform operation
fnmadd.s f12, f31, f29, f30, rdn # perform operation
fnmadd.s f12, f31, f29, f30, rmm # perform operation
fnmadd.s f12, f31, f29, f30, rne # perform operation
fnmadd.s f12, f31, f29, f30, rtz # perform operation
fnmadd.s f12, f31, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f31, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x1, 0xb2e1aaa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x42bc81f2 # load x3 with value 0x42bc81f2
sw x3, 0(x2) # store 0x42bc81f2 in memory
flw f29, 0(x2) # load 0x42bc81f2 from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmadd.s f1, f18, f29, f5, dyn # perform operation
fnmadd.s f1, f18, f29, f5, rdn # perform operation
fnmadd.s f1, f18, f29, f5, rmm # perform operation
fnmadd.s f1, f18, f29, f5, rne # perform operation
fnmadd.s f1, f18, f29, f5, rtz # perform operation
fnmadd.s f1, f18, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f18, f29, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x17, 0x5ac8f4d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xd69c2a9c # load x3 with value 0xd69c2a9c
sw x3, 0(x2) # store 0xd69c2a9c in memory
flw f6, 0(x2) # load 0xd69c2a9c from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmadd.s f17, f14, f6, f30, dyn # perform operation
fnmadd.s f17, f14, f6, f30, rdn # perform operation
fnmadd.s f17, f14, f6, f30, rmm # perform operation
fnmadd.s f17, f14, f6, f30, rne # perform operation
fnmadd.s f17, f14, f6, f30, rtz # perform operation
fnmadd.s f17, f14, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f6, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x15, 0xba8bda25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x53f5ab2b # load x3 with value 0x53f5ab2b
sw x3, 0(x2) # store 0x53f5ab2b in memory
flw f13, 0(x2) # load 0x53f5ab2b from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmadd.s f15, f20, f13, f19, dyn # perform operation
fnmadd.s f15, f20, f13, f19, rdn # perform operation
fnmadd.s f15, f20, f13, f19, rmm # perform operation
fnmadd.s f15, f20, f13, f19, rne # perform operation
fnmadd.s f15, f20, f13, f19, rtz # perform operation
fnmadd.s f15, f20, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f20, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x6, 0x69a54eb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x3f01f230 # load x3 with value 0x3f01f230
sw x3, 0(x2) # store 0x3f01f230 in memory
flw f2, 0(x2) # load 0x3f01f230 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmadd.s f6, f20, f2, f9, dyn # perform operation
fnmadd.s f6, f20, f2, f9, rdn # perform operation
fnmadd.s f6, f20, f2, f9, rmm # perform operation
fnmadd.s f6, f20, f2, f9, rne # perform operation
fnmadd.s f6, f20, f2, f9, rtz # perform operation
fnmadd.s f6, f20, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f20, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x5, 0x1e99e535 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x3fe8cb90 # load x3 with value 0x3fe8cb90
sw x3, 0(x2) # store 0x3fe8cb90 in memory
flw f3, 0(x2) # load 0x3fe8cb90 from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmadd.s f5, f7, f3, f29, dyn # perform operation
fnmadd.s f5, f7, f3, f29, rdn # perform operation
fnmadd.s f5, f7, f3, f29, rmm # perform operation
fnmadd.s f5, f7, f3, f29, rne # perform operation
fnmadd.s f5, f7, f3, f29, rtz # perform operation
fnmadd.s f5, f7, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f3, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x28, 0x367fefc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0xa7d9b374 # load x3 with value 0xa7d9b374
sw x3, 0(x2) # store 0xa7d9b374 in memory
flw f1, 0(x2) # load 0xa7d9b374 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmadd.s f28, f7, f1, f2, dyn # perform operation
fnmadd.s f28, f7, f1, f2, rdn # perform operation
fnmadd.s f28, f7, f1, f2, rmm # perform operation
fnmadd.s f28, f7, f1, f2, rne # perform operation
fnmadd.s f28, f7, f1, f2, rtz # perform operation
fnmadd.s f28, f7, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f7, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f7, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x19, 0x197eef2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xa6e70698 # load x3 with value 0xa6e70698
sw x3, 0(x2) # store 0xa6e70698 in memory
flw f17, 0(x2) # load 0xa6e70698 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmadd.s f19, f24, f17, f13, dyn # perform operation
fnmadd.s f19, f24, f17, f13, rdn # perform operation
fnmadd.s f19, f24, f17, f13, rmm # perform operation
fnmadd.s f19, f24, f17, f13, rne # perform operation
fnmadd.s f19, f24, f17, f13, rtz # perform operation
fnmadd.s f19, f24, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f17, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x11, 0x42c9d168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x7ba15824 # load x3 with value 0x7ba15824
sw x3, 0(x2) # store 0x7ba15824 in memory
flw f23, 0(x2) # load 0x7ba15824 from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fnmadd.s f11, f1, f23, f4, dyn # perform operation
fnmadd.s f11, f1, f23, f4, rdn # perform operation
fnmadd.s f11, f1, f23, f4, rmm # perform operation
fnmadd.s f11, f1, f23, f4, rne # perform operation
fnmadd.s f11, f1, f23, f4, rtz # perform operation
fnmadd.s f11, f1, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f1, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f1, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f1, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f1, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f1, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x31, 0x0922da48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x5bf6e7ba # load x3 with value 0x5bf6e7ba
sw x3, 0(x2) # store 0x5bf6e7ba in memory
flw f15, 0(x2) # load 0x5bf6e7ba from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fnmadd.s f31, f24, f15, f26, dyn # perform operation
fnmadd.s f31, f24, f15, f26, rdn # perform operation
fnmadd.s f31, f24, f15, f26, rmm # perform operation
fnmadd.s f31, f24, f15, f26, rne # perform operation
fnmadd.s f31, f24, f15, f26, rtz # perform operation
fnmadd.s f31, f24, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f24, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x16, 0x59b08f6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x6a9225da # load x3 with value 0x6a9225da
sw x3, 0(x2) # store 0x6a9225da in memory
flw f22, 0(x2) # load 0x6a9225da from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmadd.s f16, f12, f22, f20, dyn # perform operation
fnmadd.s f16, f12, f22, f20, rdn # perform operation
fnmadd.s f16, f12, f22, f20, rmm # perform operation
fnmadd.s f16, f12, f22, f20, rne # perform operation
fnmadd.s f16, f12, f22, f20, rtz # perform operation
fnmadd.s f16, f12, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f12, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f12, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x31, 0x915a7d32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0xc7de9338 # load x3 with value 0xc7de9338
sw x3, 0(x2) # store 0xc7de9338 in memory
flw f25, 0(x2) # load 0xc7de9338 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmadd.s f31, f3, f25, f26, dyn # perform operation
fnmadd.s f31, f3, f25, f26, rdn # perform operation
fnmadd.s f31, f3, f25, f26, rmm # perform operation
fnmadd.s f31, f3, f25, f26, rne # perform operation
fnmadd.s f31, f3, f25, f26, rtz # perform operation
fnmadd.s f31, f3, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f3, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x23, 0x732dbcbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xedca2354 # load x3 with value 0xedca2354
sw x3, 0(x2) # store 0xedca2354 in memory
flw f21, 0(x2) # load 0xedca2354 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fnmadd.s f23, f2, f21, f19, dyn # perform operation
fnmadd.s f23, f2, f21, f19, rdn # perform operation
fnmadd.s f23, f2, f21, f19, rmm # perform operation
fnmadd.s f23, f2, f21, f19, rne # perform operation
fnmadd.s f23, f2, f21, f19, rtz # perform operation
fnmadd.s f23, f2, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f2, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f2, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f2, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f2, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f2, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x3, 0x62734315 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0xcd0a62b9 # load x3 with value 0xcd0a62b9
sw x3, 0(x2) # store 0xcd0a62b9 in memory
flw f21, 0(x2) # load 0xcd0a62b9 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fnmadd.s f3, f13, f21, f2, dyn # perform operation
fnmadd.s f3, f13, f21, f2, rdn # perform operation
fnmadd.s f3, f13, f21, f2, rmm # perform operation
fnmadd.s f3, f13, f21, f2, rne # perform operation
fnmadd.s f3, f13, f21, f2, rtz # perform operation
fnmadd.s f3, f13, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f13, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f13, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x29, 0xe732fbc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0xfa9a85eb # load x3 with value 0xfa9a85eb
sw x3, 0(x2) # store 0xfa9a85eb in memory
flw f11, 0(x2) # load 0xfa9a85eb from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fnmadd.s f29, f31, f11, f23, dyn # perform operation
fnmadd.s f29, f31, f11, f23, rdn # perform operation
fnmadd.s f29, f31, f11, f23, rmm # perform operation
fnmadd.s f29, f31, f11, f23, rne # perform operation
fnmadd.s f29, f31, f11, f23, rtz # perform operation
fnmadd.s f29, f31, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f31, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x27, 0xb73e8671 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0xe93cf946 # load x3 with value 0xe93cf946
sw x3, 0(x2) # store 0xe93cf946 in memory
flw f15, 0(x2) # load 0xe93cf946 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fnmadd.s f27, f13, f15, f6, dyn # perform operation
fnmadd.s f27, f13, f15, f6, rdn # perform operation
fnmadd.s f27, f13, f15, f6, rmm # perform operation
fnmadd.s f27, f13, f15, f6, rne # perform operation
fnmadd.s f27, f13, f15, f6, rtz # perform operation
fnmadd.s f27, f13, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f13, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x8, 0xf1427453 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x0fae5f12 # load x3 with value 0x0fae5f12
sw x3, 0(x2) # store 0x0fae5f12 in memory
flw f12, 0(x2) # load 0x0fae5f12 from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f8, f24, f12, f1, dyn # perform operation
fnmadd.s f8, f24, f12, f1, rdn # perform operation
fnmadd.s f8, f24, f12, f1, rmm # perform operation
fnmadd.s f8, f24, f12, f1, rne # perform operation
fnmadd.s f8, f24, f12, f1, rtz # perform operation
fnmadd.s f8, f24, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f24, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f24, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f24, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f24, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f24, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x16, 0x611882ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x6d6972d9 # load x3 with value 0x6d6972d9
sw x3, 0(x2) # store 0x6d6972d9 in memory
flw f3, 0(x2) # load 0x6d6972d9 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmadd.s f16, f27, f3, f1, dyn # perform operation
fnmadd.s f16, f27, f3, f1, rdn # perform operation
fnmadd.s f16, f27, f3, f1, rmm # perform operation
fnmadd.s f16, f27, f3, f1, rne # perform operation
fnmadd.s f16, f27, f3, f1, rtz # perform operation
fnmadd.s f16, f27, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f27, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x31, 0xd8b066b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x350ec12c # load x3 with value 0x350ec12c
sw x3, 0(x2) # store 0x350ec12c in memory
flw f4, 0(x2) # load 0x350ec12c from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.s f31, f7, f4, f6, dyn # perform operation
fnmadd.s f31, f7, f4, f6, rdn # perform operation
fnmadd.s f31, f7, f4, f6, rmm # perform operation
fnmadd.s f31, f7, f4, f6, rne # perform operation
fnmadd.s f31, f7, f4, f6, rtz # perform operation
fnmadd.s f31, f7, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x30, 0x3e13031c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x48ef48e7 # load x3 with value 0x48ef48e7
sw x3, 0(x2) # store 0x48ef48e7 in memory
flw f25, 0(x2) # load 0x48ef48e7 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fnmadd.s f30, f6, f25, f4, dyn # perform operation
fnmadd.s f30, f6, f25, f4, rdn # perform operation
fnmadd.s f30, f6, f25, f4, rmm # perform operation
fnmadd.s f30, f6, f25, f4, rne # perform operation
fnmadd.s f30, f6, f25, f4, rtz # perform operation
fnmadd.s f30, f6, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x11, 0x47473dc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x796d2edc # load x3 with value 0x796d2edc
sw x3, 0(x2) # store 0x796d2edc in memory
flw f20, 0(x2) # load 0x796d2edc from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fnmadd.s f11, f25, f20, f26, dyn # perform operation
fnmadd.s f11, f25, f20, f26, rdn # perform operation
fnmadd.s f11, f25, f20, f26, rmm # perform operation
fnmadd.s f11, f25, f20, f26, rne # perform operation
fnmadd.s f11, f25, f20, f26, rtz # perform operation
fnmadd.s f11, f25, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f25, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x19, 0xbb72cddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x49bcfd37 # load x3 with value 0x49bcfd37
sw x3, 0(x2) # store 0x49bcfd37 in memory
flw f16, 0(x2) # load 0x49bcfd37 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fnmadd.s f19, f1, f16, f3, dyn # perform operation
fnmadd.s f19, f1, f16, f3, rdn # perform operation
fnmadd.s f19, f1, f16, f3, rmm # perform operation
fnmadd.s f19, f1, f16, f3, rne # perform operation
fnmadd.s f19, f1, f16, f3, rtz # perform operation
fnmadd.s f19, f1, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x31, 0x13bb8b5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x435e39b4 # load x3 with value 0x435e39b4
sw x3, 0(x2) # store 0x435e39b4 in memory
flw f6, 0(x2) # load 0x435e39b4 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmadd.s f31, f2, f6, f11, dyn # perform operation
fnmadd.s f31, f2, f6, f11, rdn # perform operation
fnmadd.s f31, f2, f6, f11, rmm # perform operation
fnmadd.s f31, f2, f6, f11, rne # perform operation
fnmadd.s f31, f2, f6, f11, rtz # perform operation
fnmadd.s f31, f2, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f2, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x25, 0xe7315959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x363baff1 # load x3 with value 0x363baff1
sw x3, 0(x2) # store 0x363baff1 in memory
flw f2, 0(x2) # load 0x363baff1 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fnmadd.s f25, f28, f2, f17, dyn # perform operation
fnmadd.s f25, f28, f2, f17, rdn # perform operation
fnmadd.s f25, f28, f2, f17, rmm # perform operation
fnmadd.s f25, f28, f2, f17, rne # perform operation
fnmadd.s f25, f28, f2, f17, rtz # perform operation
fnmadd.s f25, f28, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f2, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x5, 0x61d49ffc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x80ce77bd # load x3 with value 0x80ce77bd
sw x3, 0(x2) # store 0x80ce77bd in memory
flw f16, 0(x2) # load 0x80ce77bd from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmadd.s f5, f22, f16, f14, dyn # perform operation
fnmadd.s f5, f22, f16, f14, rdn # perform operation
fnmadd.s f5, f22, f16, f14, rmm # perform operation
fnmadd.s f5, f22, f16, f14, rne # perform operation
fnmadd.s f5, f22, f16, f14, rtz # perform operation
fnmadd.s f5, f22, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x23, 0x50ec4b5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x430e0f93 # load x3 with value 0x430e0f93
sw x3, 0(x2) # store 0x430e0f93 in memory
flw f16, 0(x2) # load 0x430e0f93 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmadd.s f23, f14, f16, f11, dyn # perform operation
fnmadd.s f23, f14, f16, f11, rdn # perform operation
fnmadd.s f23, f14, f16, f11, rmm # perform operation
fnmadd.s f23, f14, f16, f11, rne # perform operation
fnmadd.s f23, f14, f16, f11, rtz # perform operation
fnmadd.s f23, f14, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x22, 0xc0b282bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0xe9ecd4f4 # load x3 with value 0xe9ecd4f4
sw x3, 0(x2) # store 0xe9ecd4f4 in memory
flw f23, 0(x2) # load 0xe9ecd4f4 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fnmadd.s f22, f16, f23, f5, dyn # perform operation
fnmadd.s f22, f16, f23, f5, rdn # perform operation
fnmadd.s f22, f16, f23, f5, rmm # perform operation
fnmadd.s f22, f16, f23, f5, rne # perform operation
fnmadd.s f22, f16, f23, f5, rtz # perform operation
fnmadd.s f22, f16, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f16, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x9, 0xe6ea32c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x00f7803a # load x3 with value 0x00f7803a
sw x3, 0(x2) # store 0x00f7803a in memory
flw f29, 0(x2) # load 0x00f7803a from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmadd.s f9, f19, f29, f22, dyn # perform operation
fnmadd.s f9, f19, f29, f22, rdn # perform operation
fnmadd.s f9, f19, f29, f22, rmm # perform operation
fnmadd.s f9, f19, f29, f22, rne # perform operation
fnmadd.s f9, f19, f29, f22, rtz # perform operation
fnmadd.s f9, f19, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x1, 0xade01315 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x65c28bb8 # load x3 with value 0x65c28bb8
sw x3, 0(x2) # store 0x65c28bb8 in memory
flw f24, 0(x2) # load 0x65c28bb8 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmadd.s f1, f16, f24, f27, dyn # perform operation
fnmadd.s f1, f16, f24, f27, rdn # perform operation
fnmadd.s f1, f16, f24, f27, rmm # perform operation
fnmadd.s f1, f16, f24, f27, rne # perform operation
fnmadd.s f1, f16, f24, f27, rtz # perform operation
fnmadd.s f1, f16, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f16, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x12, 0x2c0aac38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0xd4832d92 # load x3 with value 0xd4832d92
sw x3, 0(x2) # store 0xd4832d92 in memory
flw f4, 0(x2) # load 0xd4832d92 from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmadd.s f12, f14, f4, f5, dyn # perform operation
fnmadd.s f12, f14, f4, f5, rdn # perform operation
fnmadd.s f12, f14, f4, f5, rmm # perform operation
fnmadd.s f12, f14, f4, f5, rne # perform operation
fnmadd.s f12, f14, f4, f5, rtz # perform operation
fnmadd.s f12, f14, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x9, 0x3a7ea492 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x34cd21ed # load x3 with value 0x34cd21ed
sw x3, 0(x2) # store 0x34cd21ed in memory
flw f20, 0(x2) # load 0x34cd21ed from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fnmadd.s f9, f24, f20, f19, dyn # perform operation
fnmadd.s f9, f24, f20, f19, rdn # perform operation
fnmadd.s f9, f24, f20, f19, rmm # perform operation
fnmadd.s f9, f24, f20, f19, rne # perform operation
fnmadd.s f9, f24, f20, f19, rtz # perform operation
fnmadd.s f9, f24, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x15, 0xb3eb3ca4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xcf393110 # load x3 with value 0xcf393110
sw x3, 0(x2) # store 0xcf393110 in memory
flw f17, 0(x2) # load 0xcf393110 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fnmadd.s f15, f1, f17, f3, dyn # perform operation
fnmadd.s f15, f1, f17, f3, rdn # perform operation
fnmadd.s f15, f1, f17, f3, rmm # perform operation
fnmadd.s f15, f1, f17, f3, rne # perform operation
fnmadd.s f15, f1, f17, f3, rtz # perform operation
fnmadd.s f15, f1, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x15, 0x4fda79ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xafb87f5c # load x3 with value 0xafb87f5c
sw x3, 0(x2) # store 0xafb87f5c in memory
flw f26, 0(x2) # load 0xafb87f5c from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmadd.s f15, f11, f26, f4, dyn # perform operation
fnmadd.s f15, f11, f26, f4, rdn # perform operation
fnmadd.s f15, f11, f26, f4, rmm # perform operation
fnmadd.s f15, f11, f26, f4, rne # perform operation
fnmadd.s f15, f11, f26, f4, rtz # perform operation
fnmadd.s f15, f11, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x7, 0x7c15cceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x165d20bf # load x3 with value 0x165d20bf
sw x3, 0(x2) # store 0x165d20bf in memory
flw f28, 0(x2) # load 0x165d20bf from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmadd.s f7, f30, f28, f29, dyn # perform operation
fnmadd.s f7, f30, f28, f29, rdn # perform operation
fnmadd.s f7, f30, f28, f29, rmm # perform operation
fnmadd.s f7, f30, f28, f29, rne # perform operation
fnmadd.s f7, f30, f28, f29, rtz # perform operation
fnmadd.s f7, f30, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x7, 0xc8bed3a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x45925da3 # load x3 with value 0x45925da3
sw x3, 0(x2) # store 0x45925da3 in memory
flw f28, 0(x2) # load 0x45925da3 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmadd.s f7, f8, f28, f17, dyn # perform operation
fnmadd.s f7, f8, f28, f17, rdn # perform operation
fnmadd.s f7, f8, f28, f17, rmm # perform operation
fnmadd.s f7, f8, f28, f17, rne # perform operation
fnmadd.s f7, f8, f28, f17, rtz # perform operation
fnmadd.s f7, f8, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f8, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f8, f28, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x23, 0x13f19626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xbd1f7961 # load x3 with value 0xbd1f7961
sw x3, 0(x2) # store 0xbd1f7961 in memory
flw f25, 0(x2) # load 0xbd1f7961 from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmadd.s f23, f30, f25, f11, dyn # perform operation
fnmadd.s f23, f30, f25, f11, rdn # perform operation
fnmadd.s f23, f30, f25, f11, rmm # perform operation
fnmadd.s f23, f30, f25, f11, rne # perform operation
fnmadd.s f23, f30, f25, f11, rtz # perform operation
fnmadd.s f23, f30, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x5, 0xe5f7160b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0xf5d62f33 # load x3 with value 0xf5d62f33
sw x3, 0(x2) # store 0xf5d62f33 in memory
flw f13, 0(x2) # load 0xf5d62f33 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmadd.s f5, f12, f13, f30, dyn # perform operation
fnmadd.s f5, f12, f13, f30, rdn # perform operation
fnmadd.s f5, f12, f13, f30, rmm # perform operation
fnmadd.s f5, f12, f13, f30, rne # perform operation
fnmadd.s f5, f12, f13, f30, rtz # perform operation
fnmadd.s f5, f12, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f12, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f12, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f12, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f12, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f12, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x25, 0x577dddcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x5da3d125 # load x3 with value 0x5da3d125
sw x3, 0(x2) # store 0x5da3d125 in memory
flw f28, 0(x2) # load 0x5da3d125 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmadd.s f25, f31, f28, f20, dyn # perform operation
fnmadd.s f25, f31, f28, f20, rdn # perform operation
fnmadd.s f25, f31, f28, f20, rmm # perform operation
fnmadd.s f25, f31, f28, f20, rne # perform operation
fnmadd.s f25, f31, f28, f20, rtz # perform operation
fnmadd.s f25, f31, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f31, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x30, 0xe8924134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x7ce5cbda # load x3 with value 0x7ce5cbda
sw x3, 0(x2) # store 0x7ce5cbda in memory
flw f23, 0(x2) # load 0x7ce5cbda from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
fnmadd.s f30, f21, f23, f4, dyn # perform operation
fnmadd.s f30, f21, f23, f4, rdn # perform operation
fnmadd.s f30, f21, f23, f4, rmm # perform operation
fnmadd.s f30, f21, f23, f4, rne # perform operation
fnmadd.s f30, f21, f23, f4, rtz # perform operation
fnmadd.s f30, f21, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f21, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f21, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f21, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f21, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f21, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x8, 0x559435e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x2fb97ca7 # load x3 with value 0x2fb97ca7
sw x3, 0(x2) # store 0x2fb97ca7 in memory
flw f5, 0(x2) # load 0x2fb97ca7 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmadd.s f8, f17, f5, f28, dyn # perform operation
fnmadd.s f8, f17, f5, f28, rdn # perform operation
fnmadd.s f8, f17, f5, f28, rmm # perform operation
fnmadd.s f8, f17, f5, f28, rne # perform operation
fnmadd.s f8, f17, f5, f28, rtz # perform operation
fnmadd.s f8, f17, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f17, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x21, 0x05466698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x0f8d75fc # load x3 with value 0x0f8d75fc
sw x3, 0(x2) # store 0x0f8d75fc in memory
flw f29, 0(x2) # load 0x0f8d75fc from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmadd.s f21, f10, f29, f7, dyn # perform operation
fnmadd.s f21, f10, f29, f7, rdn # perform operation
fnmadd.s f21, f10, f29, f7, rmm # perform operation
fnmadd.s f21, f10, f29, f7, rne # perform operation
fnmadd.s f21, f10, f29, f7, rtz # perform operation
fnmadd.s f21, f10, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x6, 0x42ecb4b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xfbad0931 # load x3 with value 0xfbad0931
sw x3, 0(x2) # store 0xfbad0931 in memory
flw f17, 0(x2) # load 0xfbad0931 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmadd.s f6, f29, f17, f9, dyn # perform operation
fnmadd.s f6, f29, f17, f9, rdn # perform operation
fnmadd.s f6, f29, f17, f9, rmm # perform operation
fnmadd.s f6, f29, f17, f9, rne # perform operation
fnmadd.s f6, f29, f17, f9, rtz # perform operation
fnmadd.s f6, f29, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f29, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x21, 0xe5cbd43f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0xcfc33789 # load x3 with value 0xcfc33789
sw x3, 0(x2) # store 0xcfc33789 in memory
flw f8, 0(x2) # load 0xcfc33789 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmadd.s f21, f4, f8, f6, dyn # perform operation
fnmadd.s f21, f4, f8, f6, rdn # perform operation
fnmadd.s f21, f4, f8, f6, rmm # perform operation
fnmadd.s f21, f4, f8, f6, rne # perform operation
fnmadd.s f21, f4, f8, f6, rtz # perform operation
fnmadd.s f21, f4, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f4, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f4, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f4, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f4, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f4, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x13, 0xebf17497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0xffcddcb8 # load x3 with value 0xffcddcb8
sw x3, 0(x2) # store 0xffcddcb8 in memory
flw f21, 0(x2) # load 0xffcddcb8 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fnmadd.s f13, f26, f21, f30, dyn # perform operation
fnmadd.s f13, f26, f21, f30, rdn # perform operation
fnmadd.s f13, f26, f21, f30, rmm # perform operation
fnmadd.s f13, f26, f21, f30, rne # perform operation
fnmadd.s f13, f26, f21, f30, rtz # perform operation
fnmadd.s f13, f26, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x10, 0xadfaf3a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x927f75d4 # load x3 with value 0x927f75d4
sw x3, 0(x2) # store 0x927f75d4 in memory
flw f25, 0(x2) # load 0x927f75d4 from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.s f10, f18, f25, f13, dyn # perform operation
fnmadd.s f10, f18, f25, f13, rdn # perform operation
fnmadd.s f10, f18, f25, f13, rmm # perform operation
fnmadd.s f10, f18, f25, f13, rne # perform operation
fnmadd.s f10, f18, f25, f13, rtz # perform operation
fnmadd.s f10, f18, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f18, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x31, 0xd1d0dcd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0xdddf2d4d # load x3 with value 0xdddf2d4d
sw x3, 0(x2) # store 0xdddf2d4d in memory
flw f8, 0(x2) # load 0xdddf2d4d from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmadd.s f31, f11, f8, f1, dyn # perform operation
fnmadd.s f31, f11, f8, f1, rdn # perform operation
fnmadd.s f31, f11, f8, f1, rmm # perform operation
fnmadd.s f31, f11, f8, f1, rne # perform operation
fnmadd.s f31, f11, f8, f1, rtz # perform operation
fnmadd.s f31, f11, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x5, 0xa8a96780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x6f4c44c4 # load x3 with value 0x6f4c44c4
sw x3, 0(x2) # store 0x6f4c44c4 in memory
flw f19, 0(x2) # load 0x6f4c44c4 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmadd.s f5, f27, f19, f15, dyn # perform operation
fnmadd.s f5, f27, f19, f15, rdn # perform operation
fnmadd.s f5, f27, f19, f15, rmm # perform operation
fnmadd.s f5, f27, f19, f15, rne # perform operation
fnmadd.s f5, f27, f19, f15, rtz # perform operation
fnmadd.s f5, f27, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f27, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x5, 0x419b3443 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0xb26c5548 # load x3 with value 0xb26c5548
sw x3, 0(x2) # store 0xb26c5548 in memory
flw f1, 0(x2) # load 0xb26c5548 from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fnmadd.s f5, f10, f1, f25, dyn # perform operation
fnmadd.s f5, f10, f1, f25, rdn # perform operation
fnmadd.s f5, f10, f1, f25, rmm # perform operation
fnmadd.s f5, f10, f1, f25, rne # perform operation
fnmadd.s f5, f10, f1, f25, rtz # perform operation
fnmadd.s f5, f10, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f10, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f10, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f10, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f10, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f10, f1, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x1, 0xf56efa15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x0a745eb0 # load x3 with value 0x0a745eb0
sw x3, 0(x2) # store 0x0a745eb0 in memory
flw f7, 0(x2) # load 0x0a745eb0 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fnmadd.s f1, f29, f7, f5, dyn # perform operation
fnmadd.s f1, f29, f7, f5, rdn # perform operation
fnmadd.s f1, f29, f7, f5, rmm # perform operation
fnmadd.s f1, f29, f7, f5, rne # perform operation
fnmadd.s f1, f29, f7, f5, rtz # perform operation
fnmadd.s f1, f29, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f29, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f29, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f29, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f29, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f29, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x31, 0x8705befe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xecf978cb # load x3 with value 0xecf978cb
sw x3, 0(x2) # store 0xecf978cb in memory
flw f4, 0(x2) # load 0xecf978cb from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmadd.s f31, f26, f4, f19, dyn # perform operation
fnmadd.s f31, f26, f4, f19, rdn # perform operation
fnmadd.s f31, f26, f4, f19, rmm # perform operation
fnmadd.s f31, f26, f4, f19, rne # perform operation
fnmadd.s f31, f26, f4, f19, rtz # perform operation
fnmadd.s f31, f26, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f26, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x15, 0x3b796093 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x4d220bfe # load x3 with value 0x4d220bfe
sw x3, 0(x2) # store 0x4d220bfe in memory
flw f5, 0(x2) # load 0x4d220bfe from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmadd.s f15, f21, f5, f28, dyn # perform operation
fnmadd.s f15, f21, f5, f28, rdn # perform operation
fnmadd.s f15, f21, f5, f28, rmm # perform operation
fnmadd.s f15, f21, f5, f28, rne # perform operation
fnmadd.s f15, f21, f5, f28, rtz # perform operation
fnmadd.s f15, f21, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x14, 0x9b07c842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x9d27abaa # load x3 with value 0x9d27abaa
sw x3, 0(x2) # store 0x9d27abaa in memory
flw f1, 0(x2) # load 0x9d27abaa from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmadd.s f14, f4, f1, f28, dyn # perform operation
fnmadd.s f14, f4, f1, f28, rdn # perform operation
fnmadd.s f14, f4, f1, f28, rmm # perform operation
fnmadd.s f14, f4, f1, f28, rne # perform operation
fnmadd.s f14, f4, f1, f28, rtz # perform operation
fnmadd.s f14, f4, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f4, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f4, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f4, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f4, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f4, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x14, 0xf07a16f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xacb5ed88 # load x3 with value 0xacb5ed88
sw x3, 0(x2) # store 0xacb5ed88 in memory
flw f18, 0(x2) # load 0xacb5ed88 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmadd.s f14, f25, f18, f8, dyn # perform operation
fnmadd.s f14, f25, f18, f8, rdn # perform operation
fnmadd.s f14, f25, f18, f8, rmm # perform operation
fnmadd.s f14, f25, f18, f8, rne # perform operation
fnmadd.s f14, f25, f18, f8, rtz # perform operation
fnmadd.s f14, f25, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f25, f18, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x23, 0x3aaadd2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x46e12360 # load x3 with value 0x46e12360
sw x3, 0(x2) # store 0x46e12360 in memory
flw f8, 0(x2) # load 0x46e12360 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmadd.s f23, f21, f8, f12, dyn # perform operation
fnmadd.s f23, f21, f8, f12, rdn # perform operation
fnmadd.s f23, f21, f8, f12, rmm # perform operation
fnmadd.s f23, f21, f8, f12, rne # perform operation
fnmadd.s f23, f21, f8, f12, rtz # perform operation
fnmadd.s f23, f21, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f21, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x19, 0x2a440da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x8d10b441 # load x3 with value 0x8d10b441
sw x3, 0(x2) # store 0x8d10b441 in memory
flw f7, 0(x2) # load 0x8d10b441 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f19, f23, f7, f24, dyn # perform operation
fnmadd.s f19, f23, f7, f24, rdn # perform operation
fnmadd.s f19, f23, f7, f24, rmm # perform operation
fnmadd.s f19, f23, f7, f24, rne # perform operation
fnmadd.s f19, f23, f7, f24, rtz # perform operation
fnmadd.s f19, f23, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f23, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x2, 0x84febead # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xe36172ac # load x3 with value 0xe36172ac
sw x3, 0(x2) # store 0xe36172ac in memory
flw f28, 0(x2) # load 0xe36172ac from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmadd.s f2, f7, f28, f24, dyn # perform operation
fnmadd.s f2, f7, f28, f24, rdn # perform operation
fnmadd.s f2, f7, f28, f24, rmm # perform operation
fnmadd.s f2, f7, f28, f24, rne # perform operation
fnmadd.s f2, f7, f28, f24, rtz # perform operation
fnmadd.s f2, f7, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f7, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x18, 0x33b0f29a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x59ef60a7 # load x3 with value 0x59ef60a7
sw x3, 0(x2) # store 0x59ef60a7 in memory
flw f14, 0(x2) # load 0x59ef60a7 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
fnmadd.s f18, f2, f14, f4, dyn # perform operation
fnmadd.s f18, f2, f14, f4, rdn # perform operation
fnmadd.s f18, f2, f14, f4, rmm # perform operation
fnmadd.s f18, f2, f14, f4, rne # perform operation
fnmadd.s f18, f2, f14, f4, rtz # perform operation
fnmadd.s f18, f2, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f2, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f2, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f2, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f2, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f2, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x2, 0x1fd60606 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0xfaffe6c3 # load x3 with value 0xfaffe6c3
sw x3, 0(x2) # store 0xfaffe6c3 in memory
flw f9, 0(x2) # load 0xfaffe6c3 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmadd.s f2, f27, f9, f23, dyn # perform operation
fnmadd.s f2, f27, f9, f23, rdn # perform operation
fnmadd.s f2, f27, f9, f23, rmm # perform operation
fnmadd.s f2, f27, f9, f23, rne # perform operation
fnmadd.s f2, f27, f9, f23, rtz # perform operation
fnmadd.s f2, f27, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x17, 0x2dfbc024 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x781b9f59 # load x3 with value 0x781b9f59
sw x3, 0(x2) # store 0x781b9f59 in memory
flw f24, 0(x2) # load 0x781b9f59 from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fnmadd.s f17, f27, f24, f20, dyn # perform operation
fnmadd.s f17, f27, f24, f20, rdn # perform operation
fnmadd.s f17, f27, f24, f20, rmm # perform operation
fnmadd.s f17, f27, f24, f20, rne # perform operation
fnmadd.s f17, f27, f24, f20, rtz # perform operation
fnmadd.s f17, f27, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f27, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f27, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f27, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f27, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f27, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x29, 0x82ea2916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xecbf9a9d # load x3 with value 0xecbf9a9d
sw x3, 0(x2) # store 0xecbf9a9d in memory
flw f16, 0(x2) # load 0xecbf9a9d from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
fnmadd.s f29, f28, f16, f24, dyn # perform operation
fnmadd.s f29, f28, f16, f24, rdn # perform operation
fnmadd.s f29, f28, f16, f24, rmm # perform operation
fnmadd.s f29, f28, f16, f24, rne # perform operation
fnmadd.s f29, f28, f16, f24, rtz # perform operation
fnmadd.s f29, f28, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f28, f16, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x23, 0xa83e262e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x0a74ee6c # load x3 with value 0x0a74ee6c
sw x3, 0(x2) # store 0x0a74ee6c in memory
flw f15, 0(x2) # load 0x0a74ee6c from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.s f23, f6, f15, f1, dyn # perform operation
fnmadd.s f23, f6, f15, f1, rdn # perform operation
fnmadd.s f23, f6, f15, f1, rmm # perform operation
fnmadd.s f23, f6, f15, f1, rne # perform operation
fnmadd.s f23, f6, f15, f1, rtz # perform operation
fnmadd.s f23, f6, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x25, 0x50f4ff24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x5fc0b396 # load x3 with value 0x5fc0b396
sw x3, 0(x2) # store 0x5fc0b396 in memory
flw f23, 0(x2) # load 0x5fc0b396 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmadd.s f25, f10, f23, f19, dyn # perform operation
fnmadd.s f25, f10, f23, f19, rdn # perform operation
fnmadd.s f25, f10, f23, f19, rmm # perform operation
fnmadd.s f25, f10, f23, f19, rne # perform operation
fnmadd.s f25, f10, f23, f19, rtz # perform operation
fnmadd.s f25, f10, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f10, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x12, 0x4b4389c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x254aa849 # load x3 with value 0x254aa849
sw x3, 0(x2) # store 0x254aa849 in memory
flw f7, 0(x2) # load 0x254aa849 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmadd.s f12, f28, f7, f30, dyn # perform operation
fnmadd.s f12, f28, f7, f30, rdn # perform operation
fnmadd.s f12, f28, f7, f30, rmm # perform operation
fnmadd.s f12, f28, f7, f30, rne # perform operation
fnmadd.s f12, f28, f7, f30, rtz # perform operation
fnmadd.s f12, f28, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x2, 0x27fedef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x8833bdd0 # load x3 with value 0x8833bdd0
sw x3, 0(x2) # store 0x8833bdd0 in memory
flw f10, 0(x2) # load 0x8833bdd0 from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmadd.s f2, f20, f10, f7, dyn # perform operation
fnmadd.s f2, f20, f10, f7, rdn # perform operation
fnmadd.s f2, f20, f10, f7, rmm # perform operation
fnmadd.s f2, f20, f10, f7, rne # perform operation
fnmadd.s f2, f20, f10, f7, rtz # perform operation
fnmadd.s f2, f20, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f10, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x30, 0xbce425fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x61626d6e # load x3 with value 0x61626d6e
sw x3, 0(x2) # store 0x61626d6e in memory
flw f13, 0(x2) # load 0x61626d6e from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fnmadd.s f30, f18, f13, f22, dyn # perform operation
fnmadd.s f30, f18, f13, f22, rdn # perform operation
fnmadd.s f30, f18, f13, f22, rmm # perform operation
fnmadd.s f30, f18, f13, f22, rne # perform operation
fnmadd.s f30, f18, f13, f22, rtz # perform operation
fnmadd.s f30, f18, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x9, 0xa85b7630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x50c79b74 # load x3 with value 0x50c79b74
sw x3, 0(x2) # store 0x50c79b74 in memory
flw f15, 0(x2) # load 0x50c79b74 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fnmadd.s f9, f28, f15, f4, dyn # perform operation
fnmadd.s f9, f28, f15, f4, rdn # perform operation
fnmadd.s f9, f28, f15, f4, rmm # perform operation
fnmadd.s f9, f28, f15, f4, rne # perform operation
fnmadd.s f9, f28, f15, f4, rtz # perform operation
fnmadd.s f9, f28, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f28, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x7, 0x1d84ded1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x1d212e5e # load x3 with value 0x1d212e5e
sw x3, 0(x2) # store 0x1d212e5e in memory
flw f12, 0(x2) # load 0x1d212e5e from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmadd.s f7, f24, f12, f28, dyn # perform operation
fnmadd.s f7, f24, f12, f28, rdn # perform operation
fnmadd.s f7, f24, f12, f28, rmm # perform operation
fnmadd.s f7, f24, f12, f28, rne # perform operation
fnmadd.s f7, f24, f12, f28, rtz # perform operation
fnmadd.s f7, f24, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x17, 0x6e5a71d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x092ba41b # load x3 with value 0x092ba41b
sw x3, 0(x2) # store 0x092ba41b in memory
flw f9, 0(x2) # load 0x092ba41b from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fnmadd.s f17, f1, f9, f25, dyn # perform operation
fnmadd.s f17, f1, f9, f25, rdn # perform operation
fnmadd.s f17, f1, f9, f25, rmm # perform operation
fnmadd.s f17, f1, f9, f25, rne # perform operation
fnmadd.s f17, f1, f9, f25, rtz # perform operation
fnmadd.s f17, f1, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f1, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f1, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f1, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f1, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f1, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x8, 0x24e4f1a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x3f176a16 # load x3 with value 0x3f176a16
sw x3, 0(x2) # store 0x3f176a16 in memory
flw f26, 0(x2) # load 0x3f176a16 from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmadd.s f8, f21, f26, f2, dyn # perform operation
fnmadd.s f8, f21, f26, f2, rdn # perform operation
fnmadd.s f8, f21, f26, f2, rmm # perform operation
fnmadd.s f8, f21, f26, f2, rne # perform operation
fnmadd.s f8, f21, f26, f2, rtz # perform operation
fnmadd.s f8, f21, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f21, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x15, 0x92aa1560 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0xbb2c9fda # load x3 with value 0xbb2c9fda
sw x3, 0(x2) # store 0xbb2c9fda in memory
flw f28, 0(x2) # load 0xbb2c9fda from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmadd.s f15, f10, f28, f11, dyn # perform operation
fnmadd.s f15, f10, f28, f11, rdn # perform operation
fnmadd.s f15, f10, f28, f11, rmm # perform operation
fnmadd.s f15, f10, f28, f11, rne # perform operation
fnmadd.s f15, f10, f28, f11, rtz # perform operation
fnmadd.s f15, f10, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f10, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f10, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f10, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f10, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f10, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x5, 0xda8e0f82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x30be374b # load x3 with value 0x30be374b
sw x3, 0(x2) # store 0x30be374b in memory
flw f1, 0(x2) # load 0x30be374b from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmadd.s f5, f28, f1, f9, dyn # perform operation
fnmadd.s f5, f28, f1, f9, rdn # perform operation
fnmadd.s f5, f28, f1, f9, rmm # perform operation
fnmadd.s f5, f28, f1, f9, rne # perform operation
fnmadd.s f5, f28, f1, f9, rtz # perform operation
fnmadd.s f5, f28, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f28, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f28, f1, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x20, 0xad72e25b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xf590e422 # load x3 with value 0xf590e422
sw x3, 0(x2) # store 0xf590e422 in memory
flw f25, 0(x2) # load 0xf590e422 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fnmadd.s f20, f13, f25, f14, dyn # perform operation
fnmadd.s f20, f13, f25, f14, rdn # perform operation
fnmadd.s f20, f13, f25, f14, rmm # perform operation
fnmadd.s f20, f13, f25, f14, rne # perform operation
fnmadd.s f20, f13, f25, f14, rtz # perform operation
fnmadd.s f20, f13, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f13, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x26, 0xc452da5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x303b1e84 # load x3 with value 0x303b1e84
sw x3, 0(x2) # store 0x303b1e84 in memory
flw f2, 0(x2) # load 0x303b1e84 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmadd.s f26, f16, f2, f9, dyn # perform operation
fnmadd.s f26, f16, f2, f9, rdn # perform operation
fnmadd.s f26, f16, f2, f9, rmm # perform operation
fnmadd.s f26, f16, f2, f9, rne # perform operation
fnmadd.s f26, f16, f2, f9, rtz # perform operation
fnmadd.s f26, f16, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x25, 0x7312185c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x5d581247 # load x3 with value 0x5d581247
sw x3, 0(x2) # store 0x5d581247 in memory
flw f3, 0(x2) # load 0x5d581247 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmadd.s f25, f29, f3, f14, dyn # perform operation
fnmadd.s f25, f29, f3, f14, rdn # perform operation
fnmadd.s f25, f29, f3, f14, rmm # perform operation
fnmadd.s f25, f29, f3, f14, rne # perform operation
fnmadd.s f25, f29, f3, f14, rtz # perform operation
fnmadd.s f25, f29, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f29, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f29, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x14, 0x8fcacf47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x8c245698 # load x3 with value 0x8c245698
sw x3, 0(x2) # store 0x8c245698 in memory
flw f17, 0(x2) # load 0x8c245698 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fnmadd.s f14, f12, f17, f8, dyn # perform operation
fnmadd.s f14, f12, f17, f8, rdn # perform operation
fnmadd.s f14, f12, f17, f8, rmm # perform operation
fnmadd.s f14, f12, f17, f8, rne # perform operation
fnmadd.s f14, f12, f17, f8, rtz # perform operation
fnmadd.s f14, f12, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f12, f17, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x28, 0x4e14c865 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x76f413dc # load x3 with value 0x76f413dc
sw x3, 0(x2) # store 0x76f413dc in memory
flw f26, 0(x2) # load 0x76f413dc from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fnmadd.s f28, f19, f26, f23, dyn # perform operation
fnmadd.s f28, f19, f26, f23, rdn # perform operation
fnmadd.s f28, f19, f26, f23, rmm # perform operation
fnmadd.s f28, f19, f26, f23, rne # perform operation
fnmadd.s f28, f19, f26, f23, rtz # perform operation
fnmadd.s f28, f19, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f26, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x5, 0xb619de9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x30b3d648 # load x3 with value 0x30b3d648
sw x3, 0(x2) # store 0x30b3d648 in memory
flw f17, 0(x2) # load 0x30b3d648 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmadd.s f5, f31, f17, f23, dyn # perform operation
fnmadd.s f5, f31, f17, f23, rdn # perform operation
fnmadd.s f5, f31, f17, f23, rmm # perform operation
fnmadd.s f5, f31, f17, f23, rne # perform operation
fnmadd.s f5, f31, f17, f23, rtz # perform operation
fnmadd.s f5, f31, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x23, 0xf1f523cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x23b955ed # load x3 with value 0x23b955ed
sw x3, 0(x2) # store 0x23b955ed in memory
flw f9, 0(x2) # load 0x23b955ed from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmadd.s f23, f12, f9, f22, dyn # perform operation
fnmadd.s f23, f12, f9, f22, rdn # perform operation
fnmadd.s f23, f12, f9, f22, rmm # perform operation
fnmadd.s f23, f12, f9, f22, rne # perform operation
fnmadd.s f23, f12, f9, f22, rtz # perform operation
fnmadd.s f23, f12, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f12, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x1, 0x261706c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x1f7eb789 # load x3 with value 0x1f7eb789
sw x3, 0(x2) # store 0x1f7eb789 in memory
flw f10, 0(x2) # load 0x1f7eb789 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmadd.s f1, f19, f10, f22, dyn # perform operation
fnmadd.s f1, f19, f10, f22, rdn # perform operation
fnmadd.s f1, f19, f10, f22, rmm # perform operation
fnmadd.s f1, f19, f10, f22, rne # perform operation
fnmadd.s f1, f19, f10, f22, rtz # perform operation
fnmadd.s f1, f19, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x8, 0x91875d64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0x39e2c8ad # load x3 with value 0x39e2c8ad
sw x3, 0(x2) # store 0x39e2c8ad in memory
flw f2, 0(x2) # load 0x39e2c8ad from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmadd.s f8, f6, f2, f19, dyn # perform operation
fnmadd.s f8, f6, f2, f19, rdn # perform operation
fnmadd.s f8, f6, f2, f19, rmm # perform operation
fnmadd.s f8, f6, f2, f19, rne # perform operation
fnmadd.s f8, f6, f2, f19, rtz # perform operation
fnmadd.s f8, f6, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f6, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x12, 0xea474f54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x538427c4 # load x3 with value 0x538427c4
sw x3, 0(x2) # store 0x538427c4 in memory
flw f7, 0(x2) # load 0x538427c4 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f12, f26, f7, f25, dyn # perform operation
fnmadd.s f12, f26, f7, f25, rdn # perform operation
fnmadd.s f12, f26, f7, f25, rmm # perform operation
fnmadd.s f12, f26, f7, f25, rne # perform operation
fnmadd.s f12, f26, f7, f25, rtz # perform operation
fnmadd.s f12, f26, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f26, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f26, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x2, 0xeead6e6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xf82bf4df # load x3 with value 0xf82bf4df
sw x3, 0(x2) # store 0xf82bf4df in memory
flw f25, 0(x2) # load 0xf82bf4df from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f2, f13, f25, f29, dyn # perform operation
fnmadd.s f2, f13, f25, f29, rdn # perform operation
fnmadd.s f2, f13, f25, f29, rmm # perform operation
fnmadd.s f2, f13, f25, f29, rne # perform operation
fnmadd.s f2, f13, f25, f29, rtz # perform operation
fnmadd.s f2, f13, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x27, 0xc751ecc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x7218d687 # load x3 with value 0x7218d687
sw x3, 0(x2) # store 0x7218d687 in memory
flw f10, 0(x2) # load 0x7218d687 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmadd.s f27, f15, f10, f11, dyn # perform operation
fnmadd.s f27, f15, f10, f11, rdn # perform operation
fnmadd.s f27, f15, f10, f11, rmm # perform operation
fnmadd.s f27, f15, f10, f11, rne # perform operation
fnmadd.s f27, f15, f10, f11, rtz # perform operation
fnmadd.s f27, f15, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f10, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x25, 0xa7bd2bff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0xeebdc8bc # load x3 with value 0xeebdc8bc
sw x3, 0(x2) # store 0xeebdc8bc in memory
flw f2, 0(x2) # load 0xeebdc8bc from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fnmadd.s f25, f6, f2, f13, dyn # perform operation
fnmadd.s f25, f6, f2, f13, rdn # perform operation
fnmadd.s f25, f6, f2, f13, rmm # perform operation
fnmadd.s f25, f6, f2, f13, rne # perform operation
fnmadd.s f25, f6, f2, f13, rtz # perform operation
fnmadd.s f25, f6, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x26, 0xe76ec2f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0xc650d1f9 # load x3 with value 0xc650d1f9
sw x3, 0(x2) # store 0xc650d1f9 in memory
flw f29, 0(x2) # load 0xc650d1f9 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fnmadd.s f26, f18, f29, f1, dyn # perform operation
fnmadd.s f26, f18, f29, f1, rdn # perform operation
fnmadd.s f26, f18, f29, f1, rmm # perform operation
fnmadd.s f26, f18, f29, f1, rne # perform operation
fnmadd.s f26, f18, f29, f1, rtz # perform operation
fnmadd.s f26, f18, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f18, f29, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x18, 0x65836f98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x9f2725c9 # load x3 with value 0x9f2725c9
sw x3, 0(x2) # store 0x9f2725c9 in memory
flw f7, 0(x2) # load 0x9f2725c9 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmadd.s f18, f24, f7, f16, dyn # perform operation
fnmadd.s f18, f24, f7, f16, rdn # perform operation
fnmadd.s f18, f24, f7, f16, rmm # perform operation
fnmadd.s f18, f24, f7, f16, rne # perform operation
fnmadd.s f18, f24, f7, f16, rtz # perform operation
fnmadd.s f18, f24, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x20, 0xf0dc65ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xacd1ea19 # load x3 with value 0xacd1ea19
sw x3, 0(x2) # store 0xacd1ea19 in memory
flw f16, 0(x2) # load 0xacd1ea19 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.s f20, f13, f16, f31, dyn # perform operation
fnmadd.s f20, f13, f16, f31, rdn # perform operation
fnmadd.s f20, f13, f16, f31, rmm # perform operation
fnmadd.s f20, f13, f16, f31, rne # perform operation
fnmadd.s f20, f13, f16, f31, rtz # perform operation
fnmadd.s f20, f13, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f13, f16, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x23, 0x73eaa478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x4f19e0a7 # load x3 with value 0x4f19e0a7
sw x3, 0(x2) # store 0x4f19e0a7 in memory
flw f8, 0(x2) # load 0x4f19e0a7 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmadd.s f23, f29, f8, f6, dyn # perform operation
fnmadd.s f23, f29, f8, f6, rdn # perform operation
fnmadd.s f23, f29, f8, f6, rmm # perform operation
fnmadd.s f23, f29, f8, f6, rne # perform operation
fnmadd.s f23, f29, f8, f6, rtz # perform operation
fnmadd.s f23, f29, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f29, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f29, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x5, 0x642697a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x3bb1c386 # load x3 with value 0x3bb1c386
sw x3, 0(x2) # store 0x3bb1c386 in memory
flw f31, 0(x2) # load 0x3bb1c386 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmadd.s f5, f8, f31, f17, dyn # perform operation
fnmadd.s f5, f8, f31, f17, rdn # perform operation
fnmadd.s f5, f8, f31, f17, rmm # perform operation
fnmadd.s f5, f8, f31, f17, rne # perform operation
fnmadd.s f5, f8, f31, f17, rtz # perform operation
fnmadd.s f5, f8, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x16, 0xebd8de3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x54dd339b # load x3 with value 0x54dd339b
sw x3, 0(x2) # store 0x54dd339b in memory
flw f30, 0(x2) # load 0x54dd339b from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmadd.s f16, f9, f30, f26, dyn # perform operation
fnmadd.s f16, f9, f30, f26, rdn # perform operation
fnmadd.s f16, f9, f30, f26, rmm # perform operation
fnmadd.s f16, f9, f30, f26, rne # perform operation
fnmadd.s f16, f9, f30, f26, rtz # perform operation
fnmadd.s f16, f9, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x26, 0x41aa64a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xf9d571ca # load x3 with value 0xf9d571ca
sw x3, 0(x2) # store 0xf9d571ca in memory
flw f30, 0(x2) # load 0xf9d571ca from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmadd.s f26, f9, f30, f29, dyn # perform operation
fnmadd.s f26, f9, f30, f29, rdn # perform operation
fnmadd.s f26, f9, f30, f29, rmm # perform operation
fnmadd.s f26, f9, f30, f29, rne # perform operation
fnmadd.s f26, f9, f30, f29, rtz # perform operation
fnmadd.s f26, f9, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f9, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f9, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x28, 0x2b3ef9f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0xb6028a9f # load x3 with value 0xb6028a9f
sw x3, 0(x2) # store 0xb6028a9f in memory
flw f22, 0(x2) # load 0xb6028a9f from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fnmadd.s f28, f11, f22, f30, dyn # perform operation
fnmadd.s f28, f11, f22, f30, rdn # perform operation
fnmadd.s f28, f11, f22, f30, rmm # perform operation
fnmadd.s f28, f11, f22, f30, rne # perform operation
fnmadd.s f28, f11, f22, f30, rtz # perform operation
fnmadd.s f28, f11, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f11, f22, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x8, 0xd7908459 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x0465ece6 # load x3 with value 0x0465ece6
sw x3, 0(x2) # store 0x0465ece6 in memory
flw f14, 0(x2) # load 0x0465ece6 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmadd.s f8, f29, f14, f20, dyn # perform operation
fnmadd.s f8, f29, f14, f20, rdn # perform operation
fnmadd.s f8, f29, f14, f20, rmm # perform operation
fnmadd.s f8, f29, f14, f20, rne # perform operation
fnmadd.s f8, f29, f14, f20, rtz # perform operation
fnmadd.s f8, f29, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f29, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f29, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f29, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f29, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f29, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x28, 0xe9a78cdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x1ada9272 # load x3 with value 0x1ada9272
sw x3, 0(x2) # store 0x1ada9272 in memory
flw f15, 0(x2) # load 0x1ada9272 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fnmadd.s f28, f19, f15, f5, dyn # perform operation
fnmadd.s f28, f19, f15, f5, rdn # perform operation
fnmadd.s f28, f19, f15, f5, rmm # perform operation
fnmadd.s f28, f19, f15, f5, rne # perform operation
fnmadd.s f28, f19, f15, f5, rtz # perform operation
fnmadd.s f28, f19, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x8, 0x57cf852d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x46c56b09 # load x3 with value 0x46c56b09
sw x3, 0(x2) # store 0x46c56b09 in memory
flw f31, 0(x2) # load 0x46c56b09 from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fnmadd.s f8, f12, f31, f16, dyn # perform operation
fnmadd.s f8, f12, f31, f16, rdn # perform operation
fnmadd.s f8, f12, f31, f16, rmm # perform operation
fnmadd.s f8, f12, f31, f16, rne # perform operation
fnmadd.s f8, f12, f31, f16, rtz # perform operation
fnmadd.s f8, f12, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x31, 0xd65b77c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x8cd7ceb9 # load x3 with value 0x8cd7ceb9
sw x3, 0(x2) # store 0x8cd7ceb9 in memory
flw f7, 0(x2) # load 0x8cd7ceb9 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fnmadd.s f31, f2, f7, f15, dyn # perform operation
fnmadd.s f31, f2, f7, f15, rdn # perform operation
fnmadd.s f31, f2, f7, f15, rmm # perform operation
fnmadd.s f31, f2, f7, f15, rne # perform operation
fnmadd.s f31, f2, f7, f15, rtz # perform operation
fnmadd.s f31, f2, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f2, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f2, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f2, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f2, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f2, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x19, 0xffa88cbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x16137379 # load x3 with value 0x16137379
sw x3, 0(x2) # store 0x16137379 in memory
flw f23, 0(x2) # load 0x16137379 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fnmadd.s f19, f15, f23, f2, dyn # perform operation
fnmadd.s f19, f15, f23, f2, rdn # perform operation
fnmadd.s f19, f15, f23, f2, rmm # perform operation
fnmadd.s f19, f15, f23, f2, rne # perform operation
fnmadd.s f19, f15, f23, f2, rtz # perform operation
fnmadd.s f19, f15, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f15, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x25, 0xc28ffe06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x595650d2 # load x3 with value 0x595650d2
sw x3, 0(x2) # store 0x595650d2 in memory
flw f8, 0(x2) # load 0x595650d2 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmadd.s f25, f7, f8, f16, dyn # perform operation
fnmadd.s f25, f7, f8, f16, rdn # perform operation
fnmadd.s f25, f7, f8, f16, rmm # perform operation
fnmadd.s f25, f7, f8, f16, rne # perform operation
fnmadd.s f25, f7, f8, f16, rtz # perform operation
fnmadd.s f25, f7, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f7, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x24, 0x9780711a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x1e07f139 # load x3 with value 0x1e07f139
sw x3, 0(x2) # store 0x1e07f139 in memory
flw f27, 0(x2) # load 0x1e07f139 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f24, f3, f27, f30, dyn # perform operation
fnmadd.s f24, f3, f27, f30, rdn # perform operation
fnmadd.s f24, f3, f27, f30, rmm # perform operation
fnmadd.s f24, f3, f27, f30, rne # perform operation
fnmadd.s f24, f3, f27, f30, rtz # perform operation
fnmadd.s f24, f3, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f3, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f3, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f3, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f3, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f3, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x17, 0xb431d6e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x9ed9ec2f # load x3 with value 0x9ed9ec2f
sw x3, 0(x2) # store 0x9ed9ec2f in memory
flw f16, 0(x2) # load 0x9ed9ec2f from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f17, f2, f16, f18, dyn # perform operation
fnmadd.s f17, f2, f16, f18, rdn # perform operation
fnmadd.s f17, f2, f16, f18, rmm # perform operation
fnmadd.s f17, f2, f16, f18, rne # perform operation
fnmadd.s f17, f2, f16, f18, rtz # perform operation
fnmadd.s f17, f2, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x24, 0x61fd5c24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x626374a2 # load x3 with value 0x626374a2
sw x3, 0(x2) # store 0x626374a2 in memory
flw f26, 0(x2) # load 0x626374a2 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fnmadd.s f24, f7, f26, f10, dyn # perform operation
fnmadd.s f24, f7, f26, f10, rdn # perform operation
fnmadd.s f24, f7, f26, f10, rmm # perform operation
fnmadd.s f24, f7, f26, f10, rne # perform operation
fnmadd.s f24, f7, f26, f10, rtz # perform operation
fnmadd.s f24, f7, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f7, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f7, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x28, 0x1bfd69f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x1f8dd2b0 # load x3 with value 0x1f8dd2b0
sw x3, 0(x2) # store 0x1f8dd2b0 in memory
flw f20, 0(x2) # load 0x1f8dd2b0 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fnmadd.s f28, f15, f20, f21, dyn # perform operation
fnmadd.s f28, f15, f20, f21, rdn # perform operation
fnmadd.s f28, f15, f20, f21, rmm # perform operation
fnmadd.s f28, f15, f20, f21, rne # perform operation
fnmadd.s f28, f15, f20, f21, rtz # perform operation
fnmadd.s f28, f15, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f15, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f15, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f15, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f15, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f15, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x17, 0x5793fe48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x12a4d7ec # load x3 with value 0x12a4d7ec
sw x3, 0(x2) # store 0x12a4d7ec in memory
flw f27, 0(x2) # load 0x12a4d7ec from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmadd.s f17, f15, f27, f12, dyn # perform operation
fnmadd.s f17, f15, f27, f12, rdn # perform operation
fnmadd.s f17, f15, f27, f12, rmm # perform operation
fnmadd.s f17, f15, f27, f12, rne # perform operation
fnmadd.s f17, f15, f27, f12, rtz # perform operation
fnmadd.s f17, f15, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f15, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x6, 0x8fa14276 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0xaaa9d298 # load x3 with value 0xaaa9d298
sw x3, 0(x2) # store 0xaaa9d298 in memory
flw f5, 0(x2) # load 0xaaa9d298 from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fnmadd.s f6, f18, f5, f2, dyn # perform operation
fnmadd.s f6, f18, f5, f2, rdn # perform operation
fnmadd.s f6, f18, f5, f2, rmm # perform operation
fnmadd.s f6, f18, f5, f2, rne # perform operation
fnmadd.s f6, f18, f5, f2, rtz # perform operation
fnmadd.s f6, f18, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f18, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x12, 0x01977826 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x2d44b21a # load x3 with value 0x2d44b21a
sw x3, 0(x2) # store 0x2d44b21a in memory
flw f30, 0(x2) # load 0x2d44b21a from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fnmadd.s f12, f18, f30, f19, dyn # perform operation
fnmadd.s f12, f18, f30, f19, rdn # perform operation
fnmadd.s f12, f18, f30, f19, rmm # perform operation
fnmadd.s f12, f18, f30, f19, rne # perform operation
fnmadd.s f12, f18, f30, f19, rtz # perform operation
fnmadd.s f12, f18, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f18, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x23, 0x4519778f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x5ef0b716 # load x3 with value 0x5ef0b716
sw x3, 0(x2) # store 0x5ef0b716 in memory
flw f11, 0(x2) # load 0x5ef0b716 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmadd.s f23, f13, f11, f16, dyn # perform operation
fnmadd.s f23, f13, f11, f16, rdn # perform operation
fnmadd.s f23, f13, f11, f16, rmm # perform operation
fnmadd.s f23, f13, f11, f16, rne # perform operation
fnmadd.s f23, f13, f11, f16, rtz # perform operation
fnmadd.s f23, f13, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f13, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f13, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f13, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f13, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f13, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x1, 0xfaaaa0ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x86738eac # load x3 with value 0x86738eac
sw x3, 0(x2) # store 0x86738eac in memory
flw f6, 0(x2) # load 0x86738eac from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fnmadd.s f1, f7, f6, f31, dyn # perform operation
fnmadd.s f1, f7, f6, f31, rdn # perform operation
fnmadd.s f1, f7, f6, f31, rmm # perform operation
fnmadd.s f1, f7, f6, f31, rne # perform operation
fnmadd.s f1, f7, f6, f31, rtz # perform operation
fnmadd.s f1, f7, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x8, 0x81990a54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xd74e36f8 # load x3 with value 0xd74e36f8
sw x3, 0(x2) # store 0xd74e36f8 in memory
flw f6, 0(x2) # load 0xd74e36f8 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmadd.s f8, f30, f6, f27, dyn # perform operation
fnmadd.s f8, f30, f6, f27, rdn # perform operation
fnmadd.s f8, f30, f6, f27, rmm # perform operation
fnmadd.s f8, f30, f6, f27, rne # perform operation
fnmadd.s f8, f30, f6, f27, rtz # perform operation
fnmadd.s f8, f30, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f30, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x29, 0x91e56eed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x38341fc7 # load x3 with value 0x38341fc7
sw x3, 0(x2) # store 0x38341fc7 in memory
flw f8, 0(x2) # load 0x38341fc7 from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f29, f4, f8, f7, dyn # perform operation
fnmadd.s f29, f4, f8, f7, rdn # perform operation
fnmadd.s f29, f4, f8, f7, rmm # perform operation
fnmadd.s f29, f4, f8, f7, rne # perform operation
fnmadd.s f29, f4, f8, f7, rtz # perform operation
fnmadd.s f29, f4, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f4, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x4, 0xdd6b85e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x90ac14ce # load x3 with value 0x90ac14ce
sw x3, 0(x2) # store 0x90ac14ce in memory
flw f7, 0(x2) # load 0x90ac14ce from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmadd.s f4, f8, f7, f23, dyn # perform operation
fnmadd.s f4, f8, f7, f23, rdn # perform operation
fnmadd.s f4, f8, f7, f23, rmm # perform operation
fnmadd.s f4, f8, f7, f23, rne # perform operation
fnmadd.s f4, f8, f7, f23, rtz # perform operation
fnmadd.s f4, f8, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f8, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f8, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x24, 0x3eed3590 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x1876e13e # load x3 with value 0x1876e13e
sw x3, 0(x2) # store 0x1876e13e in memory
flw f10, 0(x2) # load 0x1876e13e from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fnmadd.s f24, f16, f10, f5, dyn # perform operation
fnmadd.s f24, f16, f10, f5, rdn # perform operation
fnmadd.s f24, f16, f10, f5, rmm # perform operation
fnmadd.s f24, f16, f10, f5, rne # perform operation
fnmadd.s f24, f16, f10, f5, rtz # perform operation
fnmadd.s f24, f16, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x6, 0x5ead4e72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x6d129aae # load x3 with value 0x6d129aae
sw x3, 0(x2) # store 0x6d129aae in memory
flw f12, 0(x2) # load 0x6d129aae from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmadd.s f6, f9, f12, f14, dyn # perform operation
fnmadd.s f6, f9, f12, f14, rdn # perform operation
fnmadd.s f6, f9, f12, f14, rmm # perform operation
fnmadd.s f6, f9, f12, f14, rne # perform operation
fnmadd.s f6, f9, f12, f14, rtz # perform operation
fnmadd.s f6, f9, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f9, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x2, 0xc55dcbef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x87d6c6e5 # load x3 with value 0x87d6c6e5
sw x3, 0(x2) # store 0x87d6c6e5 in memory
flw f12, 0(x2) # load 0x87d6c6e5 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.s f2, f16, f12, f8, dyn # perform operation
fnmadd.s f2, f16, f12, f8, rdn # perform operation
fnmadd.s f2, f16, f12, f8, rmm # perform operation
fnmadd.s f2, f16, f12, f8, rne # perform operation
fnmadd.s f2, f16, f12, f8, rtz # perform operation
fnmadd.s f2, f16, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f16, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f16, f12, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x1, 0xe9b189ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x9168b87d # load x3 with value 0x9168b87d
sw x3, 0(x2) # store 0x9168b87d in memory
flw f29, 0(x2) # load 0x9168b87d from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmadd.s f1, f27, f29, f9, dyn # perform operation
fnmadd.s f1, f27, f29, f9, rdn # perform operation
fnmadd.s f1, f27, f29, f9, rmm # perform operation
fnmadd.s f1, f27, f29, f9, rne # perform operation
fnmadd.s f1, f27, f29, f9, rtz # perform operation
fnmadd.s f1, f27, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x23, 0x92c5fe6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0xdcef5241 # load x3 with value 0xdcef5241
sw x3, 0(x2) # store 0xdcef5241 in memory
flw f15, 0(x2) # load 0xdcef5241 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
fnmadd.s f23, f31, f15, f4, dyn # perform operation
fnmadd.s f23, f31, f15, f4, rdn # perform operation
fnmadd.s f23, f31, f15, f4, rmm # perform operation
fnmadd.s f23, f31, f15, f4, rne # perform operation
fnmadd.s f23, f31, f15, f4, rtz # perform operation
fnmadd.s f23, f31, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x6, 0x58379211 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xd4266dc4 # load x3 with value 0xd4266dc4
sw x3, 0(x2) # store 0xd4266dc4 in memory
flw f29, 0(x2) # load 0xd4266dc4 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmadd.s f6, f10, f29, f20, dyn # perform operation
fnmadd.s f6, f10, f29, f20, rdn # perform operation
fnmadd.s f6, f10, f29, f20, rmm # perform operation
fnmadd.s f6, f10, f29, f20, rne # perform operation
fnmadd.s f6, f10, f29, f20, rtz # perform operation
fnmadd.s f6, f10, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x21, 0x081e4dd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0xed24960f # load x3 with value 0xed24960f
sw x3, 0(x2) # store 0xed24960f in memory
flw f23, 0(x2) # load 0xed24960f from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f21, f27, f23, f16, dyn # perform operation
fnmadd.s f21, f27, f23, f16, rdn # perform operation
fnmadd.s f21, f27, f23, f16, rmm # perform operation
fnmadd.s f21, f27, f23, f16, rne # perform operation
fnmadd.s f21, f27, f23, f16, rtz # perform operation
fnmadd.s f21, f27, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f27, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x20, 0x2e96718b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xf2ab9360 # load x3 with value 0xf2ab9360
sw x3, 0(x2) # store 0xf2ab9360 in memory
flw f24, 0(x2) # load 0xf2ab9360 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmadd.s f20, f15, f24, f27, dyn # perform operation
fnmadd.s f20, f15, f24, f27, rdn # perform operation
fnmadd.s f20, f15, f24, f27, rmm # perform operation
fnmadd.s f20, f15, f24, f27, rne # perform operation
fnmadd.s f20, f15, f24, f27, rtz # perform operation
fnmadd.s f20, f15, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f15, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x27, 0x14263f6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x22c99323 # load x3 with value 0x22c99323
sw x3, 0(x2) # store 0x22c99323 in memory
flw f24, 0(x2) # load 0x22c99323 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fnmadd.s f27, f13, f24, f5, dyn # perform operation
fnmadd.s f27, f13, f24, f5, rdn # perform operation
fnmadd.s f27, f13, f24, f5, rmm # perform operation
fnmadd.s f27, f13, f24, f5, rne # perform operation
fnmadd.s f27, f13, f24, f5, rtz # perform operation
fnmadd.s f27, f13, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f13, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f13, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x13, 0xd7f603e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x520c0038 # load x3 with value 0x520c0038
sw x3, 0(x2) # store 0x520c0038 in memory
flw f25, 0(x2) # load 0x520c0038 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmadd.s f13, f8, f25, f29, dyn # perform operation
fnmadd.s f13, f8, f25, f29, rdn # perform operation
fnmadd.s f13, f8, f25, f29, rmm # perform operation
fnmadd.s f13, f8, f25, f29, rne # perform operation
fnmadd.s f13, f8, f25, f29, rtz # perform operation
fnmadd.s f13, f8, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f8, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x30, 0xe18ec5ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x865afa32 # load x3 with value 0x865afa32
sw x3, 0(x2) # store 0x865afa32 in memory
flw f21, 0(x2) # load 0x865afa32 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f30, f18, f21, f1, dyn # perform operation
fnmadd.s f30, f18, f21, f1, rdn # perform operation
fnmadd.s f30, f18, f21, f1, rmm # perform operation
fnmadd.s f30, f18, f21, f1, rne # perform operation
fnmadd.s f30, f18, f21, f1, rtz # perform operation
fnmadd.s f30, f18, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x25, 0x10a9f9ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x95df98cd # load x3 with value 0x95df98cd
sw x3, 0(x2) # store 0x95df98cd in memory
flw f6, 0(x2) # load 0x95df98cd from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fnmadd.s f25, f18, f6, f13, dyn # perform operation
fnmadd.s f25, f18, f6, f13, rdn # perform operation
fnmadd.s f25, f18, f6, f13, rmm # perform operation
fnmadd.s f25, f18, f6, f13, rne # perform operation
fnmadd.s f25, f18, f6, f13, rtz # perform operation
fnmadd.s f25, f18, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f18, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f18, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f18, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f18, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f18, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x15, 0x1ade1f15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0xe4b1f643 # load x3 with value 0xe4b1f643
sw x3, 0(x2) # store 0xe4b1f643 in memory
flw f23, 0(x2) # load 0xe4b1f643 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmadd.s f15, f17, f23, f25, dyn # perform operation
fnmadd.s f15, f17, f23, f25, rdn # perform operation
fnmadd.s f15, f17, f23, f25, rmm # perform operation
fnmadd.s f15, f17, f23, f25, rne # perform operation
fnmadd.s f15, f17, f23, f25, rtz # perform operation
fnmadd.s f15, f17, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f17, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f17, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f17, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f17, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f17, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x5, 0x87f18449 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x50c79bcd # load x3 with value 0x50c79bcd
sw x3, 0(x2) # store 0x50c79bcd in memory
flw f28, 0(x2) # load 0x50c79bcd from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fnmadd.s f5, f27, f28, f22, dyn # perform operation
fnmadd.s f5, f27, f28, f22, rdn # perform operation
fnmadd.s f5, f27, f28, f22, rmm # perform operation
fnmadd.s f5, f27, f28, f22, rne # perform operation
fnmadd.s f5, f27, f28, f22, rtz # perform operation
fnmadd.s f5, f27, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f27, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f27, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x9, 0xae102120 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x2cb481cf # load x3 with value 0x2cb481cf
sw x3, 0(x2) # store 0x2cb481cf in memory
flw f23, 0(x2) # load 0x2cb481cf from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f9, f11, f23, f30, dyn # perform operation
fnmadd.s f9, f11, f23, f30, rdn # perform operation
fnmadd.s f9, f11, f23, f30, rmm # perform operation
fnmadd.s f9, f11, f23, f30, rne # perform operation
fnmadd.s f9, f11, f23, f30, rtz # perform operation
fnmadd.s f9, f11, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f11, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f11, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f11, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f11, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f11, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x23, 0xb25d7d15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x1ff02e64 # load x3 with value 0x1ff02e64
sw x3, 0(x2) # store 0x1ff02e64 in memory
flw f7, 0(x2) # load 0x1ff02e64 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmadd.s f23, f26, f7, f22, dyn # perform operation
fnmadd.s f23, f26, f7, f22, rdn # perform operation
fnmadd.s f23, f26, f7, f22, rmm # perform operation
fnmadd.s f23, f26, f7, f22, rne # perform operation
fnmadd.s f23, f26, f7, f22, rtz # perform operation
fnmadd.s f23, f26, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x29, 0x5bc6cb12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xb60ee1a5 # load x3 with value 0xb60ee1a5
sw x3, 0(x2) # store 0xb60ee1a5 in memory
flw f2, 0(x2) # load 0xb60ee1a5 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fnmadd.s f29, f16, f2, f17, dyn # perform operation
fnmadd.s f29, f16, f2, f17, rdn # perform operation
fnmadd.s f29, f16, f2, f17, rmm # perform operation
fnmadd.s f29, f16, f2, f17, rne # perform operation
fnmadd.s f29, f16, f2, f17, rtz # perform operation
fnmadd.s f29, f16, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f2, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x2, 0x8fc54d23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x883ec647 # load x3 with value 0x883ec647
sw x3, 0(x2) # store 0x883ec647 in memory
flw f4, 0(x2) # load 0x883ec647 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmadd.s f2, f8, f4, f11, dyn # perform operation
fnmadd.s f2, f8, f4, f11, rdn # perform operation
fnmadd.s f2, f8, f4, f11, rmm # perform operation
fnmadd.s f2, f8, f4, f11, rne # perform operation
fnmadd.s f2, f8, f4, f11, rtz # perform operation
fnmadd.s f2, f8, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x21, 0xec1b6934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x888b33e2 # load x3 with value 0x888b33e2
sw x3, 0(x2) # store 0x888b33e2 in memory
flw f31, 0(x2) # load 0x888b33e2 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmadd.s f21, f24, f31, f2, dyn # perform operation
fnmadd.s f21, f24, f31, f2, rdn # perform operation
fnmadd.s f21, f24, f31, f2, rmm # perform operation
fnmadd.s f21, f24, f31, f2, rne # perform operation
fnmadd.s f21, f24, f31, f2, rtz # perform operation
fnmadd.s f21, f24, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f24, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f24, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x6, 0xa73edbb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x58b2169f # load x3 with value 0x58b2169f
sw x3, 0(x2) # store 0x58b2169f in memory
flw f22, 0(x2) # load 0x58b2169f from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmadd.s f6, f25, f22, f11, dyn # perform operation
fnmadd.s f6, f25, f22, f11, rdn # perform operation
fnmadd.s f6, f25, f22, f11, rmm # perform operation
fnmadd.s f6, f25, f22, f11, rne # perform operation
fnmadd.s f6, f25, f22, f11, rtz # perform operation
fnmadd.s f6, f25, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x26, 0x214137a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x5713a7fc # load x3 with value 0x5713a7fc
sw x3, 0(x2) # store 0x5713a7fc in memory
flw f29, 0(x2) # load 0x5713a7fc from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f26, f4, f29, f12, dyn # perform operation
fnmadd.s f26, f4, f29, f12, rdn # perform operation
fnmadd.s f26, f4, f29, f12, rmm # perform operation
fnmadd.s f26, f4, f29, f12, rne # perform operation
fnmadd.s f26, f4, f29, f12, rtz # perform operation
fnmadd.s f26, f4, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f4, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x10, 0x077b11e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0xea278592 # load x3 with value 0xea278592
sw x3, 0(x2) # store 0xea278592 in memory
flw f20, 0(x2) # load 0xea278592 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
fnmadd.s f10, f22, f20, f4, dyn # perform operation
fnmadd.s f10, f22, f20, f4, rdn # perform operation
fnmadd.s f10, f22, f20, f4, rmm # perform operation
fnmadd.s f10, f22, f20, f4, rne # perform operation
fnmadd.s f10, f22, f20, f4, rtz # perform operation
fnmadd.s f10, f22, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x22, 0x3082ec55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0xa8379316 # load x3 with value 0xa8379316
sw x3, 0(x2) # store 0xa8379316 in memory
flw f15, 0(x2) # load 0xa8379316 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmadd.s f22, f14, f15, f21, dyn # perform operation
fnmadd.s f22, f14, f15, f21, rdn # perform operation
fnmadd.s f22, f14, f15, f21, rmm # perform operation
fnmadd.s f22, f14, f15, f21, rne # perform operation
fnmadd.s f22, f14, f15, f21, rtz # perform operation
fnmadd.s f22, f14, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f14, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f14, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x31, 0xfc06c0db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x26dfa7bd # load x3 with value 0x26dfa7bd
sw x3, 0(x2) # store 0x26dfa7bd in memory
flw f26, 0(x2) # load 0x26dfa7bd from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fnmadd.s f31, f3, f26, f13, dyn # perform operation
fnmadd.s f31, f3, f26, f13, rdn # perform operation
fnmadd.s f31, f3, f26, f13, rmm # perform operation
fnmadd.s f31, f3, f26, f13, rne # perform operation
fnmadd.s f31, f3, f26, f13, rtz # perform operation
fnmadd.s f31, f3, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f3, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f3, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x27, 0x2175a96c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x252b1bb7 # load x3 with value 0x252b1bb7
sw x3, 0(x2) # store 0x252b1bb7 in memory
flw f1, 0(x2) # load 0x252b1bb7 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmadd.s f27, f28, f1, f23, dyn # perform operation
fnmadd.s f27, f28, f1, f23, rdn # perform operation
fnmadd.s f27, f28, f1, f23, rmm # perform operation
fnmadd.s f27, f28, f1, f23, rne # perform operation
fnmadd.s f27, f28, f1, f23, rtz # perform operation
fnmadd.s f27, f28, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f1, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x19, 0x61e9d48f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x154924ff # load x3 with value 0x154924ff
sw x3, 0(x2) # store 0x154924ff in memory
flw f9, 0(x2) # load 0x154924ff from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmadd.s f19, f3, f9, f16, dyn # perform operation
fnmadd.s f19, f3, f9, f16, rdn # perform operation
fnmadd.s f19, f3, f9, f16, rmm # perform operation
fnmadd.s f19, f3, f9, f16, rne # perform operation
fnmadd.s f19, f3, f9, f16, rtz # perform operation
fnmadd.s f19, f3, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x16, 0x85405394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0xf02e3c10 # load x3 with value 0xf02e3c10
sw x3, 0(x2) # store 0xf02e3c10 in memory
flw f17, 0(x2) # load 0xf02e3c10 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmadd.s f16, f24, f17, f9, dyn # perform operation
fnmadd.s f16, f24, f17, f9, rdn # perform operation
fnmadd.s f16, f24, f17, f9, rmm # perform operation
fnmadd.s f16, f24, f17, f9, rne # perform operation
fnmadd.s f16, f24, f17, f9, rtz # perform operation
fnmadd.s f16, f24, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x10, 0x5ea261be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x6ee3e108 # load x3 with value 0x6ee3e108
sw x3, 0(x2) # store 0x6ee3e108 in memory
flw f19, 0(x2) # load 0x6ee3e108 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fnmadd.s f10, f27, f19, f17, dyn # perform operation
fnmadd.s f10, f27, f19, f17, rdn # perform operation
fnmadd.s f10, f27, f19, f17, rmm # perform operation
fnmadd.s f10, f27, f19, f17, rne # perform operation
fnmadd.s f10, f27, f19, f17, rtz # perform operation
fnmadd.s f10, f27, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f27, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f27, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x8, 0xfe554ef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x79cd588d # load x3 with value 0x79cd588d
sw x3, 0(x2) # store 0x79cd588d in memory
flw f21, 0(x2) # load 0x79cd588d from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fnmadd.s f8, f15, f21, f29, dyn # perform operation
fnmadd.s f8, f15, f21, f29, rdn # perform operation
fnmadd.s f8, f15, f21, f29, rmm # perform operation
fnmadd.s f8, f15, f21, f29, rne # perform operation
fnmadd.s f8, f15, f21, f29, rtz # perform operation
fnmadd.s f8, f15, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x1, 0x23d80a26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x35633728 # load x3 with value 0x35633728
sw x3, 0(x2) # store 0x35633728 in memory
flw f30, 0(x2) # load 0x35633728 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmadd.s f1, f28, f30, f29, dyn # perform operation
fnmadd.s f1, f28, f30, f29, rdn # perform operation
fnmadd.s f1, f28, f30, f29, rmm # perform operation
fnmadd.s f1, f28, f30, f29, rne # perform operation
fnmadd.s f1, f28, f30, f29, rtz # perform operation
fnmadd.s f1, f28, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x24, 0x89c87d71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x5f1a6de7 # load x3 with value 0x5f1a6de7
sw x3, 0(x2) # store 0x5f1a6de7 in memory
flw f20, 0(x2) # load 0x5f1a6de7 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f24, f9, f20, f13, dyn # perform operation
fnmadd.s f24, f9, f20, f13, rdn # perform operation
fnmadd.s f24, f9, f20, f13, rmm # perform operation
fnmadd.s f24, f9, f20, f13, rne # perform operation
fnmadd.s f24, f9, f20, f13, rtz # perform operation
fnmadd.s f24, f9, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f20, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x25, 0x5a941f55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x87241817 # load x3 with value 0x87241817
sw x3, 0(x2) # store 0x87241817 in memory
flw f24, 0(x2) # load 0x87241817 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fnmadd.s f25, f26, f24, f6, dyn # perform operation
fnmadd.s f25, f26, f24, f6, rdn # perform operation
fnmadd.s f25, f26, f24, f6, rmm # perform operation
fnmadd.s f25, f26, f24, f6, rne # perform operation
fnmadd.s f25, f26, f24, f6, rtz # perform operation
fnmadd.s f25, f26, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x4, 0x732c29f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0xd5b1c57f # load x3 with value 0xd5b1c57f
sw x3, 0(x2) # store 0xd5b1c57f in memory
flw f11, 0(x2) # load 0xd5b1c57f from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmadd.s f4, f21, f11, f29, dyn # perform operation
fnmadd.s f4, f21, f11, f29, rdn # perform operation
fnmadd.s f4, f21, f11, f29, rmm # perform operation
fnmadd.s f4, f21, f11, f29, rne # perform operation
fnmadd.s f4, f21, f11, f29, rtz # perform operation
fnmadd.s f4, f21, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f21, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f21, f11, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x26, 0x1e6a8a84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xd7482cab # load x3 with value 0xd7482cab
sw x3, 0(x2) # store 0xd7482cab in memory
flw f20, 0(x2) # load 0xd7482cab from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmadd.s f26, f16, f20, f27, dyn # perform operation
fnmadd.s f26, f16, f20, f27, rdn # perform operation
fnmadd.s f26, f16, f20, f27, rmm # perform operation
fnmadd.s f26, f16, f20, f27, rne # perform operation
fnmadd.s f26, f16, f20, f27, rtz # perform operation
fnmadd.s f26, f16, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x28, 0x3412eac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x2967fea4 # load x3 with value 0x2967fea4
sw x3, 0(x2) # store 0x2967fea4 in memory
flw f27, 0(x2) # load 0x2967fea4 from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmadd.s f28, f25, f27, f7, dyn # perform operation
fnmadd.s f28, f25, f27, f7, rdn # perform operation
fnmadd.s f28, f25, f27, f7, rmm # perform operation
fnmadd.s f28, f25, f27, f7, rne # perform operation
fnmadd.s f28, f25, f27, f7, rtz # perform operation
fnmadd.s f28, f25, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f25, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f25, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f25, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f25, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f25, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x29, 0x0a02cbb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0xe77b0814 # load x3 with value 0xe77b0814
sw x3, 0(x2) # store 0xe77b0814 in memory
flw f23, 0(x2) # load 0xe77b0814 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmadd.s f29, f30, f23, f10, dyn # perform operation
fnmadd.s f29, f30, f23, f10, rdn # perform operation
fnmadd.s f29, f30, f23, f10, rmm # perform operation
fnmadd.s f29, f30, f23, f10, rne # perform operation
fnmadd.s f29, f30, f23, f10, rtz # perform operation
fnmadd.s f29, f30, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f30, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x5, 0x1075b956 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x28a55d38 # load x3 with value 0x28a55d38
sw x3, 0(x2) # store 0x28a55d38 in memory
flw f21, 0(x2) # load 0x28a55d38 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmadd.s f5, f17, f21, f6, dyn # perform operation
fnmadd.s f5, f17, f21, f6, rdn # perform operation
fnmadd.s f5, f17, f21, f6, rmm # perform operation
fnmadd.s f5, f17, f21, f6, rne # perform operation
fnmadd.s f5, f17, f21, f6, rtz # perform operation
fnmadd.s f5, f17, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x3, 0xf03f1cd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x10db25a9 # load x3 with value 0x10db25a9
sw x3, 0(x2) # store 0x10db25a9 in memory
flw f16, 0(x2) # load 0x10db25a9 from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fnmadd.s f3, f9, f16, f30, dyn # perform operation
fnmadd.s f3, f9, f16, f30, rdn # perform operation
fnmadd.s f3, f9, f16, f30, rmm # perform operation
fnmadd.s f3, f9, f16, f30, rne # perform operation
fnmadd.s f3, f9, f16, f30, rtz # perform operation
fnmadd.s f3, f9, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x24, 0x786f6143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0xce978e28 # load x3 with value 0xce978e28
sw x3, 0(x2) # store 0xce978e28 in memory
flw f18, 0(x2) # load 0xce978e28 from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmadd.s f24, f6, f18, f16, dyn # perform operation
fnmadd.s f24, f6, f18, f16, rdn # perform operation
fnmadd.s f24, f6, f18, f16, rmm # perform operation
fnmadd.s f24, f6, f18, f16, rne # perform operation
fnmadd.s f24, f6, f18, f16, rtz # perform operation
fnmadd.s f24, f6, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f6, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f6, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f6, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f6, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f6, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x17, 0x9fee833e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x2be6efff # load x3 with value 0x2be6efff
sw x3, 0(x2) # store 0x2be6efff in memory
flw f14, 0(x2) # load 0x2be6efff from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fnmadd.s f17, f10, f14, f4, dyn # perform operation
fnmadd.s f17, f10, f14, f4, rdn # perform operation
fnmadd.s f17, f10, f14, f4, rmm # perform operation
fnmadd.s f17, f10, f14, f4, rne # perform operation
fnmadd.s f17, f10, f14, f4, rtz # perform operation
fnmadd.s f17, f10, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f10, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f10, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f10, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f10, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f10, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x26, 0x57527970 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xefab0d80 # load x3 with value 0xefab0d80
sw x3, 0(x2) # store 0xefab0d80 in memory
flw f21, 0(x2) # load 0xefab0d80 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmadd.s f26, f22, f21, f20, dyn # perform operation
fnmadd.s f26, f22, f21, f20, rdn # perform operation
fnmadd.s f26, f22, f21, f20, rmm # perform operation
fnmadd.s f26, f22, f21, f20, rne # perform operation
fnmadd.s f26, f22, f21, f20, rtz # perform operation
fnmadd.s f26, f22, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x17, 0xefa93873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xbfe7e413 # load x3 with value 0xbfe7e413
sw x3, 0(x2) # store 0xbfe7e413 in memory
flw f27, 0(x2) # load 0xbfe7e413 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fnmadd.s f17, f18, f27, f12, dyn # perform operation
fnmadd.s f17, f18, f27, f12, rdn # perform operation
fnmadd.s f17, f18, f27, f12, rmm # perform operation
fnmadd.s f17, f18, f27, f12, rne # perform operation
fnmadd.s f17, f18, f27, f12, rtz # perform operation
fnmadd.s f17, f18, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x23, 0xe6c7209e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x3de63cdb # load x3 with value 0x3de63cdb
sw x3, 0(x2) # store 0x3de63cdb in memory
flw f28, 0(x2) # load 0x3de63cdb from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f23, f25, f28, f9, dyn # perform operation
fnmadd.s f23, f25, f28, f9, rdn # perform operation
fnmadd.s f23, f25, f28, f9, rmm # perform operation
fnmadd.s f23, f25, f28, f9, rne # perform operation
fnmadd.s f23, f25, f28, f9, rtz # perform operation
fnmadd.s f23, f25, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f25, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f25, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x11, 0xf17bef47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xdd86ec41 # load x3 with value 0xdd86ec41
sw x3, 0(x2) # store 0xdd86ec41 in memory
flw f13, 0(x2) # load 0xdd86ec41 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmadd.s f11, f18, f13, f19, dyn # perform operation
fnmadd.s f11, f18, f13, f19, rdn # perform operation
fnmadd.s f11, f18, f13, f19, rmm # perform operation
fnmadd.s f11, f18, f13, f19, rne # perform operation
fnmadd.s f11, f18, f13, f19, rtz # perform operation
fnmadd.s f11, f18, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x31, 0x8d6f6ec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xf761c0d8 # load x3 with value 0xf761c0d8
sw x3, 0(x2) # store 0xf761c0d8 in memory
flw f30, 0(x2) # load 0xf761c0d8 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
fnmadd.s f31, f14, f30, f4, dyn # perform operation
fnmadd.s f31, f14, f30, f4, rdn # perform operation
fnmadd.s f31, f14, f30, f4, rmm # perform operation
fnmadd.s f31, f14, f30, f4, rne # perform operation
fnmadd.s f31, f14, f30, f4, rtz # perform operation
fnmadd.s f31, f14, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x17, 0xa6d6d030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x6e5089cd # load x3 with value 0x6e5089cd
sw x3, 0(x2) # store 0x6e5089cd in memory
flw f22, 0(x2) # load 0x6e5089cd from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fnmadd.s f17, f8, f22, f12, dyn # perform operation
fnmadd.s f17, f8, f22, f12, rdn # perform operation
fnmadd.s f17, f8, f22, f12, rmm # perform operation
fnmadd.s f17, f8, f22, f12, rne # perform operation
fnmadd.s f17, f8, f22, f12, rtz # perform operation
fnmadd.s f17, f8, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f8, f22, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x3, 0xb60fcbd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x55230e57 # load x3 with value 0x55230e57
sw x3, 0(x2) # store 0x55230e57 in memory
flw f15, 0(x2) # load 0x55230e57 from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmadd.s f3, f11, f15, f6, dyn # perform operation
fnmadd.s f3, f11, f15, f6, rdn # perform operation
fnmadd.s f3, f11, f15, f6, rmm # perform operation
fnmadd.s f3, f11, f15, f6, rne # perform operation
fnmadd.s f3, f11, f15, f6, rtz # perform operation
fnmadd.s f3, f11, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f11, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x11, 0xcb674208 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x5187250a # load x3 with value 0x5187250a
sw x3, 0(x2) # store 0x5187250a in memory
flw f1, 0(x2) # load 0x5187250a from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmadd.s f11, f2, f1, f10, dyn # perform operation
fnmadd.s f11, f2, f1, f10, rdn # perform operation
fnmadd.s f11, f2, f1, f10, rmm # perform operation
fnmadd.s f11, f2, f1, f10, rne # perform operation
fnmadd.s f11, f2, f1, f10, rtz # perform operation
fnmadd.s f11, f2, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f2, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f2, f1, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x4, 0x63ae600d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xa2082a19 # load x3 with value 0xa2082a19
sw x3, 0(x2) # store 0xa2082a19 in memory
flw f23, 0(x2) # load 0xa2082a19 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmadd.s f4, f17, f23, f20, dyn # perform operation
fnmadd.s f4, f17, f23, f20, rdn # perform operation
fnmadd.s f4, f17, f23, f20, rmm # perform operation
fnmadd.s f4, f17, f23, f20, rne # perform operation
fnmadd.s f4, f17, f23, f20, rtz # perform operation
fnmadd.s f4, f17, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x21, 0x1a4cdad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x0103c254 # load x3 with value 0x0103c254
sw x3, 0(x2) # store 0x0103c254 in memory
flw f23, 0(x2) # load 0x0103c254 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fnmadd.s f21, f5, f23, f4, dyn # perform operation
fnmadd.s f21, f5, f23, f4, rdn # perform operation
fnmadd.s f21, f5, f23, f4, rmm # perform operation
fnmadd.s f21, f5, f23, f4, rne # perform operation
fnmadd.s f21, f5, f23, f4, rtz # perform operation
fnmadd.s f21, f5, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x18, 0x94926f18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x8ec03d2e # load x3 with value 0x8ec03d2e
sw x3, 0(x2) # store 0x8ec03d2e in memory
flw f28, 0(x2) # load 0x8ec03d2e from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmadd.s f18, f27, f28, f31, dyn # perform operation
fnmadd.s f18, f27, f28, f31, rdn # perform operation
fnmadd.s f18, f27, f28, f31, rmm # perform operation
fnmadd.s f18, f27, f28, f31, rne # perform operation
fnmadd.s f18, f27, f28, f31, rtz # perform operation
fnmadd.s f18, f27, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f27, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x23, 0x4c77ecf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xf8dbcc6c # load x3 with value 0xf8dbcc6c
sw x3, 0(x2) # store 0xf8dbcc6c in memory
flw f18, 0(x2) # load 0xf8dbcc6c from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fnmadd.s f23, f30, f18, f6, dyn # perform operation
fnmadd.s f23, f30, f18, f6, rdn # perform operation
fnmadd.s f23, f30, f18, f6, rmm # perform operation
fnmadd.s f23, f30, f18, f6, rne # perform operation
fnmadd.s f23, f30, f18, f6, rtz # perform operation
fnmadd.s f23, f30, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x4, 0x118d436a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xcbfaf7a9 # load x3 with value 0xcbfaf7a9
sw x3, 0(x2) # store 0xcbfaf7a9 in memory
flw f25, 0(x2) # load 0xcbfaf7a9 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fnmadd.s f4, f14, f25, f28, dyn # perform operation
fnmadd.s f4, f14, f25, f28, rdn # perform operation
fnmadd.s f4, f14, f25, f28, rmm # perform operation
fnmadd.s f4, f14, f25, f28, rne # perform operation
fnmadd.s f4, f14, f25, f28, rtz # perform operation
fnmadd.s f4, f14, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f14, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x10, 0xd183f62e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x36820ae8 # load x3 with value 0x36820ae8
sw x3, 0(x2) # store 0x36820ae8 in memory
flw f5, 0(x2) # load 0x36820ae8 from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmadd.s f10, f22, f5, f9, dyn # perform operation
fnmadd.s f10, f22, f5, f9, rdn # perform operation
fnmadd.s f10, f22, f5, f9, rmm # perform operation
fnmadd.s f10, f22, f5, f9, rne # perform operation
fnmadd.s f10, f22, f5, f9, rtz # perform operation
fnmadd.s f10, f22, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x18, 0xd71473b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x22e7a057 # load x3 with value 0x22e7a057
sw x3, 0(x2) # store 0x22e7a057 in memory
flw f16, 0(x2) # load 0x22e7a057 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.s f18, f8, f16, f30, dyn # perform operation
fnmadd.s f18, f8, f16, f30, rdn # perform operation
fnmadd.s f18, f8, f16, f30, rmm # perform operation
fnmadd.s f18, f8, f16, f30, rne # perform operation
fnmadd.s f18, f8, f16, f30, rtz # perform operation
fnmadd.s f18, f8, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f8, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f8, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x23, 0xac8bd646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x3c950227 # load x3 with value 0x3c950227
sw x3, 0(x2) # store 0x3c950227 in memory
flw f2, 0(x2) # load 0x3c950227 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmadd.s f23, f14, f2, f17, dyn # perform operation
fnmadd.s f23, f14, f2, f17, rdn # perform operation
fnmadd.s f23, f14, f2, f17, rmm # perform operation
fnmadd.s f23, f14, f2, f17, rne # perform operation
fnmadd.s f23, f14, f2, f17, rtz # perform operation
fnmadd.s f23, f14, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f2, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x20, 0x9f458494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0xa43cb6de # load x3 with value 0xa43cb6de
sw x3, 0(x2) # store 0xa43cb6de in memory
flw f17, 0(x2) # load 0xa43cb6de from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmadd.s f20, f10, f17, f9, dyn # perform operation
fnmadd.s f20, f10, f17, f9, rdn # perform operation
fnmadd.s f20, f10, f17, f9, rmm # perform operation
fnmadd.s f20, f10, f17, f9, rne # perform operation
fnmadd.s f20, f10, f17, f9, rtz # perform operation
fnmadd.s f20, f10, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f10, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x29, 0xc7e7060a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x90d4d929 # load x3 with value 0x90d4d929
sw x3, 0(x2) # store 0x90d4d929 in memory
flw f28, 0(x2) # load 0x90d4d929 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmadd.s f29, f27, f28, f7, dyn # perform operation
fnmadd.s f29, f27, f28, f7, rdn # perform operation
fnmadd.s f29, f27, f28, f7, rmm # perform operation
fnmadd.s f29, f27, f28, f7, rne # perform operation
fnmadd.s f29, f27, f28, f7, rtz # perform operation
fnmadd.s f29, f27, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x14, 0x895cb1ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x02fff6d7 # load x3 with value 0x02fff6d7
sw x3, 0(x2) # store 0x02fff6d7 in memory
flw f21, 0(x2) # load 0x02fff6d7 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmadd.s f14, f18, f21, f9, dyn # perform operation
fnmadd.s f14, f18, f21, f9, rdn # perform operation
fnmadd.s f14, f18, f21, f9, rmm # perform operation
fnmadd.s f14, f18, f21, f9, rne # perform operation
fnmadd.s f14, f18, f21, f9, rtz # perform operation
fnmadd.s f14, f18, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x4, 0x8350aa4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x3b2c2b06 # load x3 with value 0x3b2c2b06
sw x3, 0(x2) # store 0x3b2c2b06 in memory
flw f15, 0(x2) # load 0x3b2c2b06 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fnmadd.s f4, f7, f15, f19, dyn # perform operation
fnmadd.s f4, f7, f15, f19, rdn # perform operation
fnmadd.s f4, f7, f15, f19, rmm # perform operation
fnmadd.s f4, f7, f15, f19, rne # perform operation
fnmadd.s f4, f7, f15, f19, rtz # perform operation
fnmadd.s f4, f7, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f7, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f7, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f7, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f7, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f7, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x11, 0x34b91d79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x29089039 # load x3 with value 0x29089039
sw x3, 0(x2) # store 0x29089039 in memory
flw f16, 0(x2) # load 0x29089039 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fnmadd.s f11, f9, f16, f23, dyn # perform operation
fnmadd.s f11, f9, f16, f23, rdn # perform operation
fnmadd.s f11, f9, f16, f23, rmm # perform operation
fnmadd.s f11, f9, f16, f23, rne # perform operation
fnmadd.s f11, f9, f16, f23, rtz # perform operation
fnmadd.s f11, f9, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f9, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x1, 0x7a75227f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0xec6a8fc5 # load x3 with value 0xec6a8fc5
sw x3, 0(x2) # store 0xec6a8fc5 in memory
flw f30, 0(x2) # load 0xec6a8fc5 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fnmadd.s f1, f24, f30, f7, dyn # perform operation
fnmadd.s f1, f24, f30, f7, rdn # perform operation
fnmadd.s f1, f24, f30, f7, rmm # perform operation
fnmadd.s f1, f24, f30, f7, rne # perform operation
fnmadd.s f1, f24, f30, f7, rtz # perform operation
fnmadd.s f1, f24, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f24, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f24, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f24, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f24, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f24, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x19, 0xa1d85caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x1c690557 # load x3 with value 0x1c690557
sw x3, 0(x2) # store 0x1c690557 in memory
flw f18, 0(x2) # load 0x1c690557 from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmadd.s f19, f22, f18, f24, dyn # perform operation
fnmadd.s f19, f22, f18, f24, rdn # perform operation
fnmadd.s f19, f22, f18, f24, rmm # perform operation
fnmadd.s f19, f22, f18, f24, rne # perform operation
fnmadd.s f19, f22, f18, f24, rtz # perform operation
fnmadd.s f19, f22, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f22, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x25, 0x9dc7645b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xa8bec15c # load x3 with value 0xa8bec15c
sw x3, 0(x2) # store 0xa8bec15c in memory
flw f16, 0(x2) # load 0xa8bec15c from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
fnmadd.s f25, f17, f16, f4, dyn # perform operation
fnmadd.s f25, f17, f16, f4, rdn # perform operation
fnmadd.s f25, f17, f16, f4, rmm # perform operation
fnmadd.s f25, f17, f16, f4, rne # perform operation
fnmadd.s f25, f17, f16, f4, rtz # perform operation
fnmadd.s f25, f17, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x7, 0xc83d23ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x427e419f # load x3 with value 0x427e419f
sw x3, 0(x2) # store 0x427e419f in memory
flw f29, 0(x2) # load 0x427e419f from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.s f7, f27, f29, f15, dyn # perform operation
fnmadd.s f7, f27, f29, f15, rdn # perform operation
fnmadd.s f7, f27, f29, f15, rmm # perform operation
fnmadd.s f7, f27, f29, f15, rne # perform operation
fnmadd.s f7, f27, f29, f15, rtz # perform operation
fnmadd.s f7, f27, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x11, 0xfe360337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0xaf25fbe7 # load x3 with value 0xaf25fbe7
sw x3, 0(x2) # store 0xaf25fbe7 in memory
flw f14, 0(x2) # load 0xaf25fbe7 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmadd.s f11, f22, f14, f2, dyn # perform operation
fnmadd.s f11, f22, f14, f2, rdn # perform operation
fnmadd.s f11, f22, f14, f2, rmm # perform operation
fnmadd.s f11, f22, f14, f2, rne # perform operation
fnmadd.s f11, f22, f14, f2, rtz # perform operation
fnmadd.s f11, f22, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x4, 0x56cd4241 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xac9e7b42 # load x3 with value 0xac9e7b42
sw x3, 0(x2) # store 0xac9e7b42 in memory
flw f8, 0(x2) # load 0xac9e7b42 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fnmadd.s f4, f23, f8, f25, dyn # perform operation
fnmadd.s f4, f23, f8, f25, rdn # perform operation
fnmadd.s f4, f23, f8, f25, rmm # perform operation
fnmadd.s f4, f23, f8, f25, rne # perform operation
fnmadd.s f4, f23, f8, f25, rtz # perform operation
fnmadd.s f4, f23, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x28, 0x034d4d62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xae4c4789 # load x3 with value 0xae4c4789
sw x3, 0(x2) # store 0xae4c4789 in memory
flw f18, 0(x2) # load 0xae4c4789 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmadd.s f28, f16, f18, f27, dyn # perform operation
fnmadd.s f28, f16, f18, f27, rdn # perform operation
fnmadd.s f28, f16, f18, f27, rmm # perform operation
fnmadd.s f28, f16, f18, f27, rne # perform operation
fnmadd.s f28, f16, f18, f27, rtz # perform operation
fnmadd.s f28, f16, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f16, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x26, 0x7912449b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x792e126d # load x3 with value 0x792e126d
sw x3, 0(x2) # store 0x792e126d in memory
flw f17, 0(x2) # load 0x792e126d from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fnmadd.s f26, f19, f17, f14, dyn # perform operation
fnmadd.s f26, f19, f17, f14, rdn # perform operation
fnmadd.s f26, f19, f17, f14, rmm # perform operation
fnmadd.s f26, f19, f17, f14, rne # perform operation
fnmadd.s f26, f19, f17, f14, rtz # perform operation
fnmadd.s f26, f19, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f19, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x2, 0x415b0181 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xfe2bc643 # load x3 with value 0xfe2bc643
sw x3, 0(x2) # store 0xfe2bc643 in memory
flw f15, 0(x2) # load 0xfe2bc643 from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fnmadd.s f2, f23, f15, f28, dyn # perform operation
fnmadd.s f2, f23, f15, f28, rdn # perform operation
fnmadd.s f2, f23, f15, f28, rmm # perform operation
fnmadd.s f2, f23, f15, f28, rne # perform operation
fnmadd.s f2, f23, f15, f28, rtz # perform operation
fnmadd.s f2, f23, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x1, 0xc0e0af79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x0b455914 # load x3 with value 0x0b455914
sw x3, 0(x2) # store 0x0b455914 in memory
flw f5, 0(x2) # load 0x0b455914 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmadd.s f1, f16, f5, f21, dyn # perform operation
fnmadd.s f1, f16, f5, f21, rdn # perform operation
fnmadd.s f1, f16, f5, f21, rmm # perform operation
fnmadd.s f1, f16, f5, f21, rne # perform operation
fnmadd.s f1, f16, f5, f21, rtz # perform operation
fnmadd.s f1, f16, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f16, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f16, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f16, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f16, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f16, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x30, 0xadd1cfb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x9954a274 # load x3 with value 0x9954a274
sw x3, 0(x2) # store 0x9954a274 in memory
flw f28, 0(x2) # load 0x9954a274 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f30, f26, f28, f19, dyn # perform operation
fnmadd.s f30, f26, f28, f19, rdn # perform operation
fnmadd.s f30, f26, f28, f19, rmm # perform operation
fnmadd.s f30, f26, f28, f19, rne # perform operation
fnmadd.s f30, f26, f28, f19, rtz # perform operation
fnmadd.s f30, f26, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x23, 0x0a8562b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x0dd3e912 # load x3 with value 0x0dd3e912
sw x3, 0(x2) # store 0x0dd3e912 in memory
flw f27, 0(x2) # load 0x0dd3e912 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fnmadd.s f23, f11, f27, f1, dyn # perform operation
fnmadd.s f23, f11, f27, f1, rdn # perform operation
fnmadd.s f23, f11, f27, f1, rmm # perform operation
fnmadd.s f23, f11, f27, f1, rne # perform operation
fnmadd.s f23, f11, f27, f1, rtz # perform operation
fnmadd.s f23, f11, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f11, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f11, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f11, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f11, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f11, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x29, 0x89896d7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x30ee11c1 # load x3 with value 0x30ee11c1
sw x3, 0(x2) # store 0x30ee11c1 in memory
flw f14, 0(x2) # load 0x30ee11c1 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f29, f25, f14, f6, dyn # perform operation
fnmadd.s f29, f25, f14, f6, rdn # perform operation
fnmadd.s f29, f25, f14, f6, rmm # perform operation
fnmadd.s f29, f25, f14, f6, rne # perform operation
fnmadd.s f29, f25, f14, f6, rtz # perform operation
fnmadd.s f29, f25, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x11, 0xf7167db0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x221d1d94 # load x3 with value 0x221d1d94
sw x3, 0(x2) # store 0x221d1d94 in memory
flw f31, 0(x2) # load 0x221d1d94 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmadd.s f11, f2, f31, f8, dyn # perform operation
fnmadd.s f11, f2, f31, f8, rdn # perform operation
fnmadd.s f11, f2, f31, f8, rmm # perform operation
fnmadd.s f11, f2, f31, f8, rne # perform operation
fnmadd.s f11, f2, f31, f8, rtz # perform operation
fnmadd.s f11, f2, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f2, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x27, 0x8b7934ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x4c3ed36d # load x3 with value 0x4c3ed36d
sw x3, 0(x2) # store 0x4c3ed36d in memory
flw f1, 0(x2) # load 0x4c3ed36d from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmadd.s f27, f15, f1, f24, dyn # perform operation
fnmadd.s f27, f15, f1, f24, rdn # perform operation
fnmadd.s f27, f15, f1, f24, rmm # perform operation
fnmadd.s f27, f15, f1, f24, rne # perform operation
fnmadd.s f27, f15, f1, f24, rtz # perform operation
fnmadd.s f27, f15, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x4, 0x7a435e65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xf1c04a6c # load x3 with value 0xf1c04a6c
sw x3, 0(x2) # store 0xf1c04a6c in memory
flw f2, 0(x2) # load 0xf1c04a6c from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fnmadd.s f4, f10, f2, f5, dyn # perform operation
fnmadd.s f4, f10, f2, f5, rdn # perform operation
fnmadd.s f4, f10, f2, f5, rmm # perform operation
fnmadd.s f4, f10, f2, f5, rne # perform operation
fnmadd.s f4, f10, f2, f5, rtz # perform operation
fnmadd.s f4, f10, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f10, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f10, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x1, 0x6bc0de23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x9fab9d4b # load x3 with value 0x9fab9d4b
sw x3, 0(x2) # store 0x9fab9d4b in memory
flw f23, 0(x2) # load 0x9fab9d4b from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fnmadd.s f1, f16, f23, f22, dyn # perform operation
fnmadd.s f1, f16, f23, f22, rdn # perform operation
fnmadd.s f1, f16, f23, f22, rmm # perform operation
fnmadd.s f1, f16, f23, f22, rne # perform operation
fnmadd.s f1, f16, f23, f22, rtz # perform operation
fnmadd.s f1, f16, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f16, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x23, 0xe2725e86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xd4ecd316 # load x3 with value 0xd4ecd316
sw x3, 0(x2) # store 0xd4ecd316 in memory
flw f26, 0(x2) # load 0xd4ecd316 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fnmadd.s f23, f5, f26, f10, dyn # perform operation
fnmadd.s f23, f5, f26, f10, rdn # perform operation
fnmadd.s f23, f5, f26, f10, rmm # perform operation
fnmadd.s f23, f5, f26, f10, rne # perform operation
fnmadd.s f23, f5, f26, f10, rtz # perform operation
fnmadd.s f23, f5, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f5, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f5, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f5, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f5, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f5, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x20, 0xd59245c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x6897723e # load x3 with value 0x6897723e
sw x3, 0(x2) # store 0x6897723e in memory
flw f9, 0(x2) # load 0x6897723e from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmadd.s f20, f13, f9, f25, dyn # perform operation
fnmadd.s f20, f13, f9, f25, rdn # perform operation
fnmadd.s f20, f13, f9, f25, rmm # perform operation
fnmadd.s f20, f13, f9, f25, rne # perform operation
fnmadd.s f20, f13, f9, f25, rtz # perform operation
fnmadd.s f20, f13, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f13, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x18, 0xfee4396d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x495c8335 # load x3 with value 0x495c8335
sw x3, 0(x2) # store 0x495c8335 in memory
flw f30, 0(x2) # load 0x495c8335 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.s f18, f14, f30, f5, dyn # perform operation
fnmadd.s f18, f14, f30, f5, rdn # perform operation
fnmadd.s f18, f14, f30, f5, rmm # perform operation
fnmadd.s f18, f14, f30, f5, rne # perform operation
fnmadd.s f18, f14, f30, f5, rtz # perform operation
fnmadd.s f18, f14, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x11, 0xa15b247b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x67288389 # load x3 with value 0x67288389
sw x3, 0(x2) # store 0x67288389 in memory
flw f2, 0(x2) # load 0x67288389 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmadd.s f11, f3, f2, f24, dyn # perform operation
fnmadd.s f11, f3, f2, f24, rdn # perform operation
fnmadd.s f11, f3, f2, f24, rmm # perform operation
fnmadd.s f11, f3, f2, f24, rne # perform operation
fnmadd.s f11, f3, f2, f24, rtz # perform operation
fnmadd.s f11, f3, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f3, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f3, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f3, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f3, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f3, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x1, 0xbae430c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x2fb8eb08 # load x3 with value 0x2fb8eb08
sw x3, 0(x2) # store 0x2fb8eb08 in memory
flw f31, 0(x2) # load 0x2fb8eb08 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fnmadd.s f1, f23, f31, f25, dyn # perform operation
fnmadd.s f1, f23, f31, f25, rdn # perform operation
fnmadd.s f1, f23, f31, f25, rmm # perform operation
fnmadd.s f1, f23, f31, f25, rne # perform operation
fnmadd.s f1, f23, f31, f25, rtz # perform operation
fnmadd.s f1, f23, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x22, 0x85b87a30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x5c3c597d # load x3 with value 0x5c3c597d
sw x3, 0(x2) # store 0x5c3c597d in memory
flw f29, 0(x2) # load 0x5c3c597d from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmadd.s f22, f7, f29, f21, dyn # perform operation
fnmadd.s f22, f7, f29, f21, rdn # perform operation
fnmadd.s f22, f7, f29, f21, rmm # perform operation
fnmadd.s f22, f7, f29, f21, rne # perform operation
fnmadd.s f22, f7, f29, f21, rtz # perform operation
fnmadd.s f22, f7, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f7, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x13, 0xe52a96a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xf7864a46 # load x3 with value 0xf7864a46
sw x3, 0(x2) # store 0xf7864a46 in memory
flw f29, 0(x2) # load 0xf7864a46 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmadd.s f13, f6, f29, f24, dyn # perform operation
fnmadd.s f13, f6, f29, f24, rdn # perform operation
fnmadd.s f13, f6, f29, f24, rmm # perform operation
fnmadd.s f13, f6, f29, f24, rne # perform operation
fnmadd.s f13, f6, f29, f24, rtz # perform operation
fnmadd.s f13, f6, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x24, 0xb44a0f4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x3a1b5c54 # load x3 with value 0x3a1b5c54
sw x3, 0(x2) # store 0x3a1b5c54 in memory
flw f5, 0(x2) # load 0x3a1b5c54 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmadd.s f24, f17, f5, f10, dyn # perform operation
fnmadd.s f24, f17, f5, f10, rdn # perform operation
fnmadd.s f24, f17, f5, f10, rmm # perform operation
fnmadd.s f24, f17, f5, f10, rne # perform operation
fnmadd.s f24, f17, f5, f10, rtz # perform operation
fnmadd.s f24, f17, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f17, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f17, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f17, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f17, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f17, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x7, 0x0af99d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xb6b9c33a # load x3 with value 0xb6b9c33a
sw x3, 0(x2) # store 0xb6b9c33a in memory
flw f26, 0(x2) # load 0xb6b9c33a from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fnmadd.s f7, f15, f26, f30, dyn # perform operation
fnmadd.s f7, f15, f26, f30, rdn # perform operation
fnmadd.s f7, f15, f26, f30, rmm # perform operation
fnmadd.s f7, f15, f26, f30, rne # perform operation
fnmadd.s f7, f15, f26, f30, rtz # perform operation
fnmadd.s f7, f15, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x28, 0x4e1e7df2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x7470c1ed # load x3 with value 0x7470c1ed
sw x3, 0(x2) # store 0x7470c1ed in memory
flw f9, 0(x2) # load 0x7470c1ed from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
fnmadd.s f28, f3, f9, f15, dyn # perform operation
fnmadd.s f28, f3, f9, f15, rdn # perform operation
fnmadd.s f28, f3, f9, f15, rmm # perform operation
fnmadd.s f28, f3, f9, f15, rne # perform operation
fnmadd.s f28, f3, f9, f15, rtz # perform operation
fnmadd.s f28, f3, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x22, 0x846845a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xfc745fe9 # load x3 with value 0xfc745fe9
sw x3, 0(x2) # store 0xfc745fe9 in memory
flw f31, 0(x2) # load 0xfc745fe9 from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f22, f10, f31, f1, dyn # perform operation
fnmadd.s f22, f10, f31, f1, rdn # perform operation
fnmadd.s f22, f10, f31, f1, rmm # perform operation
fnmadd.s f22, f10, f31, f1, rne # perform operation
fnmadd.s f22, f10, f31, f1, rtz # perform operation
fnmadd.s f22, f10, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x18, 0xb7a7549e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x77bc3a74 # load x3 with value 0x77bc3a74
sw x3, 0(x2) # store 0x77bc3a74 in memory
flw f10, 0(x2) # load 0x77bc3a74 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fnmadd.s f18, f16, f10, f13, dyn # perform operation
fnmadd.s f18, f16, f10, f13, rdn # perform operation
fnmadd.s f18, f16, f10, f13, rmm # perform operation
fnmadd.s f18, f16, f10, f13, rne # perform operation
fnmadd.s f18, f16, f10, f13, rtz # perform operation
fnmadd.s f18, f16, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f10, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x5, 0x38626ad9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x25be80db # load x3 with value 0x25be80db
sw x3, 0(x2) # store 0x25be80db in memory
flw f15, 0(x2) # load 0x25be80db from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
fnmadd.s f5, f7, f15, f8, dyn # perform operation
fnmadd.s f5, f7, f15, f8, rdn # perform operation
fnmadd.s f5, f7, f15, f8, rmm # perform operation
fnmadd.s f5, f7, f15, f8, rne # perform operation
fnmadd.s f5, f7, f15, f8, rtz # perform operation
fnmadd.s f5, f7, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x9, 0xd175d833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0xd8a2ade3 # load x3 with value 0xd8a2ade3
sw x3, 0(x2) # store 0xd8a2ade3 in memory
flw f11, 0(x2) # load 0xd8a2ade3 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmadd.s f9, f16, f11, f17, dyn # perform operation
fnmadd.s f9, f16, f11, f17, rdn # perform operation
fnmadd.s f9, f16, f11, f17, rmm # perform operation
fnmadd.s f9, f16, f11, f17, rne # perform operation
fnmadd.s f9, f16, f11, f17, rtz # perform operation
fnmadd.s f9, f16, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f16, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f16, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f16, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f16, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f16, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x10, 0x34dc5b79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x4b65e348 # load x3 with value 0x4b65e348
sw x3, 0(x2) # store 0x4b65e348 in memory
flw f27, 0(x2) # load 0x4b65e348 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fnmadd.s f10, f19, f27, f12, dyn # perform operation
fnmadd.s f10, f19, f27, f12, rdn # perform operation
fnmadd.s f10, f19, f27, f12, rmm # perform operation
fnmadd.s f10, f19, f27, f12, rne # perform operation
fnmadd.s f10, f19, f27, f12, rtz # perform operation
fnmadd.s f10, f19, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f19, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f19, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f19, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f19, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f19, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x9, 0xa4af0fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x4080b203 # load x3 with value 0x4080b203
sw x3, 0(x2) # store 0x4080b203 in memory
flw f7, 0(x2) # load 0x4080b203 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fnmadd.s f9, f30, f7, f13, dyn # perform operation
fnmadd.s f9, f30, f7, f13, rdn # perform operation
fnmadd.s f9, f30, f7, f13, rmm # perform operation
fnmadd.s f9, f30, f7, f13, rne # perform operation
fnmadd.s f9, f30, f7, f13, rtz # perform operation
fnmadd.s f9, f30, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f30, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x29, 0xd8cbc09e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0xccd6c452 # load x3 with value 0xccd6c452
sw x3, 0(x2) # store 0xccd6c452 in memory
flw f25, 0(x2) # load 0xccd6c452 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fnmadd.s f29, f30, f25, f4, dyn # perform operation
fnmadd.s f29, f30, f25, f4, rdn # perform operation
fnmadd.s f29, f30, f25, f4, rmm # perform operation
fnmadd.s f29, f30, f25, f4, rne # perform operation
fnmadd.s f29, f30, f25, f4, rtz # perform operation
fnmadd.s f29, f30, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f30, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x1, 0x6971efb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x9dec1543 # load x3 with value 0x9dec1543
sw x3, 0(x2) # store 0x9dec1543 in memory
flw f31, 0(x2) # load 0x9dec1543 from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fnmadd.s f1, f8, f31, f10, dyn # perform operation
fnmadd.s f1, f8, f31, f10, rdn # perform operation
fnmadd.s f1, f8, f31, f10, rmm # perform operation
fnmadd.s f1, f8, f31, f10, rne # perform operation
fnmadd.s f1, f8, f31, f10, rtz # perform operation
fnmadd.s f1, f8, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f8, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x10, 0xcb0f1fa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0xca3e0fd7 # load x3 with value 0xca3e0fd7
sw x3, 0(x2) # store 0xca3e0fd7 in memory
flw f5, 0(x2) # load 0xca3e0fd7 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmadd.s f10, f30, f5, f21, dyn # perform operation
fnmadd.s f10, f30, f5, f21, rdn # perform operation
fnmadd.s f10, f30, f5, f21, rmm # perform operation
fnmadd.s f10, f30, f5, f21, rne # perform operation
fnmadd.s f10, f30, f5, f21, rtz # perform operation
fnmadd.s f10, f30, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x13, 0x909fe7d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0xdc698190 # load x3 with value 0xdc698190
sw x3, 0(x2) # store 0xdc698190 in memory
flw f27, 0(x2) # load 0xdc698190 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fnmadd.s f13, f18, f27, f15, dyn # perform operation
fnmadd.s f13, f18, f27, f15, rdn # perform operation
fnmadd.s f13, f18, f27, f15, rmm # perform operation
fnmadd.s f13, f18, f27, f15, rne # perform operation
fnmadd.s f13, f18, f27, f15, rtz # perform operation
fnmadd.s f13, f18, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x22, 0x7751736d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0x7585b70b # load x3 with value 0x7585b70b
sw x3, 0(x2) # store 0x7585b70b in memory
flw f20, 0(x2) # load 0x7585b70b from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmadd.s f22, f4, f20, f6, dyn # perform operation
fnmadd.s f22, f4, f20, f6, rdn # perform operation
fnmadd.s f22, f4, f20, f6, rmm # perform operation
fnmadd.s f22, f4, f20, f6, rne # perform operation
fnmadd.s f22, f4, f20, f6, rtz # perform operation
fnmadd.s f22, f4, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f4, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f4, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f4, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f4, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f4, f20, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x25, 0xc4366415 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x72264d3d # load x3 with value 0x72264d3d
sw x3, 0(x2) # store 0x72264d3d in memory
flw f17, 0(x2) # load 0x72264d3d from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fnmadd.s f25, f31, f17, f27, dyn # perform operation
fnmadd.s f25, f31, f17, f27, rdn # perform operation
fnmadd.s f25, f31, f17, f27, rmm # perform operation
fnmadd.s f25, f31, f17, f27, rne # perform operation
fnmadd.s f25, f31, f17, f27, rtz # perform operation
fnmadd.s f25, f31, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f31, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f31, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f31, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f31, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f31, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x18, 0x023e06df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0xfedac22f # load x3 with value 0xfedac22f
sw x3, 0(x2) # store 0xfedac22f in memory
flw f13, 0(x2) # load 0xfedac22f from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmadd.s f18, f6, f13, f8, dyn # perform operation
fnmadd.s f18, f6, f13, f8, rdn # perform operation
fnmadd.s f18, f6, f13, f8, rmm # perform operation
fnmadd.s f18, f6, f13, f8, rne # perform operation
fnmadd.s f18, f6, f13, f8, rtz # perform operation
fnmadd.s f18, f6, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f6, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x17, 0x1fd1538a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xf76c3b9e # load x3 with value 0xf76c3b9e
sw x3, 0(x2) # store 0xf76c3b9e in memory
flw f1, 0(x2) # load 0xf76c3b9e from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f17, f26, f1, f29, dyn # perform operation
fnmadd.s f17, f26, f1, f29, rdn # perform operation
fnmadd.s f17, f26, f1, f29, rmm # perform operation
fnmadd.s f17, f26, f1, f29, rne # perform operation
fnmadd.s f17, f26, f1, f29, rtz # perform operation
fnmadd.s f17, f26, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x20, 0x2d42bdc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x63cb9b4e # load x3 with value 0x63cb9b4e
sw x3, 0(x2) # store 0x63cb9b4e in memory
flw f10, 0(x2) # load 0x63cb9b4e from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fnmadd.s f20, f31, f10, f21, dyn # perform operation
fnmadd.s f20, f31, f10, f21, rdn # perform operation
fnmadd.s f20, f31, f10, f21, rmm # perform operation
fnmadd.s f20, f31, f10, f21, rne # perform operation
fnmadd.s f20, f31, f10, f21, rtz # perform operation
fnmadd.s f20, f31, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f31, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x21, 0xe793206c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xc02a18fa # load x3 with value 0xc02a18fa
sw x3, 0(x2) # store 0xc02a18fa in memory
flw f28, 0(x2) # load 0xc02a18fa from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmadd.s f21, f12, f28, f19, dyn # perform operation
fnmadd.s f21, f12, f28, f19, rdn # perform operation
fnmadd.s f21, f12, f28, f19, rmm # perform operation
fnmadd.s f21, f12, f28, f19, rne # perform operation
fnmadd.s f21, f12, f28, f19, rtz # perform operation
fnmadd.s f21, f12, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f12, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x29, 0x277139e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xc70f806f # load x3 with value 0xc70f806f
sw x3, 0(x2) # store 0xc70f806f in memory
flw f17, 0(x2) # load 0xc70f806f from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fnmadd.s f29, f31, f17, f23, dyn # perform operation
fnmadd.s f29, f31, f17, f23, rdn # perform operation
fnmadd.s f29, f31, f17, f23, rmm # perform operation
fnmadd.s f29, f31, f17, f23, rne # perform operation
fnmadd.s f29, f31, f17, f23, rtz # perform operation
fnmadd.s f29, f31, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f31, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f31, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x23, 0xa04f7d83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xd8a7f8b7 # load x3 with value 0xd8a7f8b7
sw x3, 0(x2) # store 0xd8a7f8b7 in memory
flw f5, 0(x2) # load 0xd8a7f8b7 from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmadd.s f23, f7, f5, f12, dyn # perform operation
fnmadd.s f23, f7, f5, f12, rdn # perform operation
fnmadd.s f23, f7, f5, f12, rmm # perform operation
fnmadd.s f23, f7, f5, f12, rne # perform operation
fnmadd.s f23, f7, f5, f12, rtz # perform operation
fnmadd.s f23, f7, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x21, 0xec3a277d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xaa307a3a # load x3 with value 0xaa307a3a
sw x3, 0(x2) # store 0xaa307a3a in memory
flw f9, 0(x2) # load 0xaa307a3a from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.s f21, f15, f9, f10, dyn # perform operation
fnmadd.s f21, f15, f9, f10, rdn # perform operation
fnmadd.s f21, f15, f9, f10, rmm # perform operation
fnmadd.s f21, f15, f9, f10, rne # perform operation
fnmadd.s f21, f15, f9, f10, rtz # perform operation
fnmadd.s f21, f15, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x7, 0xe3dd43b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x7e6a2d44 # load x3 with value 0x7e6a2d44
sw x3, 0(x2) # store 0x7e6a2d44 in memory
flw f12, 0(x2) # load 0x7e6a2d44 from memory into f12
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fnmadd.s f7, f5, f12, f14, dyn # perform operation
fnmadd.s f7, f5, f12, f14, rdn # perform operation
fnmadd.s f7, f5, f12, f14, rmm # perform operation
fnmadd.s f7, f5, f12, f14, rne # perform operation
fnmadd.s f7, f5, f12, f14, rtz # perform operation
fnmadd.s f7, f5, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x21, 0xe742231d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x42b4e8e8 # load x3 with value 0x42b4e8e8
sw x3, 0(x2) # store 0x42b4e8e8 in memory
flw f19, 0(x2) # load 0x42b4e8e8 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmadd.s f21, f14, f19, f11, dyn # perform operation
fnmadd.s f21, f14, f19, f11, rdn # perform operation
fnmadd.s f21, f14, f19, f11, rmm # perform operation
fnmadd.s f21, f14, f19, f11, rne # perform operation
fnmadd.s f21, f14, f19, f11, rtz # perform operation
fnmadd.s f21, f14, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f19, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x5, 0xd3620e3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x17591bf0 # load x3 with value 0x17591bf0
sw x3, 0(x2) # store 0x17591bf0 in memory
flw f4, 0(x2) # load 0x17591bf0 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fnmadd.s f5, f20, f4, f6, dyn # perform operation
fnmadd.s f5, f20, f4, f6, rdn # perform operation
fnmadd.s f5, f20, f4, f6, rmm # perform operation
fnmadd.s f5, f20, f4, f6, rne # perform operation
fnmadd.s f5, f20, f4, f6, rtz # perform operation
fnmadd.s f5, f20, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f20, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f20, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f20, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f20, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f20, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x21, 0xd1c9b68a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xca4a6ae7 # load x3 with value 0xca4a6ae7
sw x3, 0(x2) # store 0xca4a6ae7 in memory
flw f17, 0(x2) # load 0xca4a6ae7 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f21, f24, f17, f25, dyn # perform operation
fnmadd.s f21, f24, f17, f25, rdn # perform operation
fnmadd.s f21, f24, f17, f25, rmm # perform operation
fnmadd.s f21, f24, f17, f25, rne # perform operation
fnmadd.s f21, f24, f17, f25, rtz # perform operation
fnmadd.s f21, f24, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f24, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f24, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x26, 0xfb5443fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x4e3599f9 # load x3 with value 0x4e3599f9
sw x3, 0(x2) # store 0x4e3599f9 in memory
flw f17, 0(x2) # load 0x4e3599f9 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fnmadd.s f26, f21, f17, f4, dyn # perform operation
fnmadd.s f26, f21, f17, f4, rdn # perform operation
fnmadd.s f26, f21, f17, f4, rmm # perform operation
fnmadd.s f26, f21, f17, f4, rne # perform operation
fnmadd.s f26, f21, f17, f4, rtz # perform operation
fnmadd.s f26, f21, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f21, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f21, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f21, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f21, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f21, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x1, 0xf302b4ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x19ccfba5 # load x3 with value 0x19ccfba5
sw x3, 0(x2) # store 0x19ccfba5 in memory
flw f28, 0(x2) # load 0x19ccfba5 from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmadd.s f1, f2, f28, f7, dyn # perform operation
fnmadd.s f1, f2, f28, f7, rdn # perform operation
fnmadd.s f1, f2, f28, f7, rmm # perform operation
fnmadd.s f1, f2, f28, f7, rne # perform operation
fnmadd.s f1, f2, f28, f7, rtz # perform operation
fnmadd.s f1, f2, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f2, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x8, 0xf0797c7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0xe5cf4464 # load x3 with value 0xe5cf4464
sw x3, 0(x2) # store 0xe5cf4464 in memory
flw f29, 0(x2) # load 0xe5cf4464 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmadd.s f8, f16, f29, f13, dyn # perform operation
fnmadd.s f8, f16, f29, f13, rdn # perform operation
fnmadd.s f8, f16, f29, f13, rmm # perform operation
fnmadd.s f8, f16, f29, f13, rne # perform operation
fnmadd.s f8, f16, f29, f13, rtz # perform operation
fnmadd.s f8, f16, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f16, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f16, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x8, 0x8a3fa972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x96a5ec44 # load x3 with value 0x96a5ec44
sw x3, 0(x2) # store 0x96a5ec44 in memory
flw f18, 0(x2) # load 0x96a5ec44 from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmadd.s f8, f20, f18, f28, dyn # perform operation
fnmadd.s f8, f20, f18, f28, rdn # perform operation
fnmadd.s f8, f20, f18, f28, rmm # perform operation
fnmadd.s f8, f20, f18, f28, rne # perform operation
fnmadd.s f8, f20, f18, f28, rtz # perform operation
fnmadd.s f8, f20, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x19, 0x3b35c3f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x76a1c6c5 # load x3 with value 0x76a1c6c5
sw x3, 0(x2) # store 0x76a1c6c5 in memory
flw f29, 0(x2) # load 0x76a1c6c5 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fnmadd.s f19, f7, f29, f28, dyn # perform operation
fnmadd.s f19, f7, f29, f28, rdn # perform operation
fnmadd.s f19, f7, f29, f28, rmm # perform operation
fnmadd.s f19, f7, f29, f28, rne # perform operation
fnmadd.s f19, f7, f29, f28, rtz # perform operation
fnmadd.s f19, f7, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f7, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x9, 0x0428083d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xcd4dd13f # load x3 with value 0xcd4dd13f
sw x3, 0(x2) # store 0xcd4dd13f in memory
flw f7, 0(x2) # load 0xcd4dd13f from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.s f9, f8, f7, f13, dyn # perform operation
fnmadd.s f9, f8, f7, f13, rdn # perform operation
fnmadd.s f9, f8, f7, f13, rmm # perform operation
fnmadd.s f9, f8, f7, f13, rne # perform operation
fnmadd.s f9, f8, f7, f13, rtz # perform operation
fnmadd.s f9, f8, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x23, 0x46edf76e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x3e078cd8 # load x3 with value 0x3e078cd8
sw x3, 0(x2) # store 0x3e078cd8 in memory
flw f27, 0(x2) # load 0x3e078cd8 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f23, f15, f27, f21, dyn # perform operation
fnmadd.s f23, f15, f27, f21, rdn # perform operation
fnmadd.s f23, f15, f27, f21, rmm # perform operation
fnmadd.s f23, f15, f27, f21, rne # perform operation
fnmadd.s f23, f15, f27, f21, rtz # perform operation
fnmadd.s f23, f15, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f15, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f15, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f15, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f15, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f15, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x12, 0x7ed66364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0xa05bc67d # load x3 with value 0xa05bc67d
sw x3, 0(x2) # store 0xa05bc67d in memory
flw f21, 0(x2) # load 0xa05bc67d from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmadd.s f12, f2, f21, f6, dyn # perform operation
fnmadd.s f12, f2, f21, f6, rdn # perform operation
fnmadd.s f12, f2, f21, f6, rmm # perform operation
fnmadd.s f12, f2, f21, f6, rne # perform operation
fnmadd.s f12, f2, f21, f6, rtz # perform operation
fnmadd.s f12, f2, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x26, 0x8d549662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0xce11f8d7 # load x3 with value 0xce11f8d7
sw x3, 0(x2) # store 0xce11f8d7 in memory
flw f8, 0(x2) # load 0xce11f8d7 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmadd.s f26, f18, f8, f15, dyn # perform operation
fnmadd.s f26, f18, f8, f15, rdn # perform operation
fnmadd.s f26, f18, f8, f15, rmm # perform operation
fnmadd.s f26, f18, f8, f15, rne # perform operation
fnmadd.s f26, f18, f8, f15, rtz # perform operation
fnmadd.s f26, f18, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f18, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f18, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f18, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f18, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f18, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x12, 0x1ea4a914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x90d8aee9 # load x3 with value 0x90d8aee9
sw x3, 0(x2) # store 0x90d8aee9 in memory
flw f8, 0(x2) # load 0x90d8aee9 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmadd.s f12, f5, f8, f22, dyn # perform operation
fnmadd.s f12, f5, f8, f22, rdn # perform operation
fnmadd.s f12, f5, f8, f22, rmm # perform operation
fnmadd.s f12, f5, f8, f22, rne # perform operation
fnmadd.s f12, f5, f8, f22, rtz # perform operation
fnmadd.s f12, f5, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x14, 0x77660806 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xe4a3fd22 # load x3 with value 0xe4a3fd22
sw x3, 0(x2) # store 0xe4a3fd22 in memory
flw f26, 0(x2) # load 0xe4a3fd22 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmadd.s f14, f7, f26, f19, dyn # perform operation
fnmadd.s f14, f7, f26, f19, rdn # perform operation
fnmadd.s f14, f7, f26, f19, rmm # perform operation
fnmadd.s f14, f7, f26, f19, rne # perform operation
fnmadd.s f14, f7, f26, f19, rtz # perform operation
fnmadd.s f14, f7, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f7, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f7, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f7, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f7, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f7, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x29, 0xc9c2f700 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x5be3daca # load x3 with value 0x5be3daca
sw x3, 0(x2) # store 0x5be3daca in memory
flw f25, 0(x2) # load 0x5be3daca from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmadd.s f29, f28, f25, f16, dyn # perform operation
fnmadd.s f29, f28, f25, f16, rdn # perform operation
fnmadd.s f29, f28, f25, f16, rmm # perform operation
fnmadd.s f29, f28, f25, f16, rne # perform operation
fnmadd.s f29, f28, f25, f16, rtz # perform operation
fnmadd.s f29, f28, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f28, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f28, f25, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x15, 0x9bfb93a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0xc80eaa0c # load x3 with value 0xc80eaa0c
sw x3, 0(x2) # store 0xc80eaa0c in memory
flw f21, 0(x2) # load 0xc80eaa0c from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmadd.s f15, f19, f21, f3, dyn # perform operation
fnmadd.s f15, f19, f21, f3, rdn # perform operation
fnmadd.s f15, f19, f21, f3, rmm # perform operation
fnmadd.s f15, f19, f21, f3, rne # perform operation
fnmadd.s f15, f19, f21, f3, rtz # perform operation
fnmadd.s f15, f19, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f19, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f19, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f19, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f19, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f19, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x23, 0xd5325318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x8a1addd2 # load x3 with value 0x8a1addd2
sw x3, 0(x2) # store 0x8a1addd2 in memory
flw f21, 0(x2) # load 0x8a1addd2 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmadd.s f23, f11, f21, f26, dyn # perform operation
fnmadd.s f23, f11, f21, f26, rdn # perform operation
fnmadd.s f23, f11, f21, f26, rmm # perform operation
fnmadd.s f23, f11, f21, f26, rne # perform operation
fnmadd.s f23, f11, f21, f26, rtz # perform operation
fnmadd.s f23, f11, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f11, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f11, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f11, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f11, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f11, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x23, 0x563199b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0xdfbc7b3a # load x3 with value 0xdfbc7b3a
sw x3, 0(x2) # store 0xdfbc7b3a in memory
flw f29, 0(x2) # load 0xdfbc7b3a from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmadd.s f23, f6, f29, f16, dyn # perform operation
fnmadd.s f23, f6, f29, f16, rdn # perform operation
fnmadd.s f23, f6, f29, f16, rmm # perform operation
fnmadd.s f23, f6, f29, f16, rne # perform operation
fnmadd.s f23, f6, f29, f16, rtz # perform operation
fnmadd.s f23, f6, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f29, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x2, 0xc158eaf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0xf39c83bb # load x3 with value 0xf39c83bb
sw x3, 0(x2) # store 0xf39c83bb in memory
flw f10, 0(x2) # load 0xf39c83bb from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f2, f1, f10, f25, dyn # perform operation
fnmadd.s f2, f1, f10, f25, rdn # perform operation
fnmadd.s f2, f1, f10, f25, rmm # perform operation
fnmadd.s f2, f1, f10, f25, rne # perform operation
fnmadd.s f2, f1, f10, f25, rtz # perform operation
fnmadd.s f2, f1, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f1, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f1, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f1, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f1, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f1, f10, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x1, 0x9eb386a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xc53421f1 # load x3 with value 0xc53421f1
sw x3, 0(x2) # store 0xc53421f1 in memory
flw f27, 0(x2) # load 0xc53421f1 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmadd.s f1, f8, f27, f9, dyn # perform operation
fnmadd.s f1, f8, f27, f9, rdn # perform operation
fnmadd.s f1, f8, f27, f9, rmm # perform operation
fnmadd.s f1, f8, f27, f9, rne # perform operation
fnmadd.s f1, f8, f27, f9, rtz # perform operation
fnmadd.s f1, f8, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f8, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x22, 0x21cb66e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x2d7d64e6 # load x3 with value 0x2d7d64e6
sw x3, 0(x2) # store 0x2d7d64e6 in memory
flw f24, 0(x2) # load 0x2d7d64e6 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fnmadd.s f22, f31, f24, f17, dyn # perform operation
fnmadd.s f22, f31, f24, f17, rdn # perform operation
fnmadd.s f22, f31, f24, f17, rmm # perform operation
fnmadd.s f22, f31, f24, f17, rne # perform operation
fnmadd.s f22, f31, f24, f17, rtz # perform operation
fnmadd.s f22, f31, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f31, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f31, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f31, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f31, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f31, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x17, 0x326245fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x3f6f7ff3 # load x3 with value 0x3f6f7ff3
sw x3, 0(x2) # store 0x3f6f7ff3 in memory
flw f27, 0(x2) # load 0x3f6f7ff3 from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmadd.s f17, f29, f27, f24, dyn # perform operation
fnmadd.s f17, f29, f27, f24, rdn # perform operation
fnmadd.s f17, f29, f27, f24, rmm # perform operation
fnmadd.s f17, f29, f27, f24, rne # perform operation
fnmadd.s f17, f29, f27, f24, rtz # perform operation
fnmadd.s f17, f29, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f29, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f29, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f29, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f29, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f29, f27, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x31, 0xa2acb40c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x9d8d47a8 # load x3 with value 0x9d8d47a8
sw x3, 0(x2) # store 0x9d8d47a8 in memory
flw f13, 0(x2) # load 0x9d8d47a8 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fnmadd.s f31, f9, f13, f28, dyn # perform operation
fnmadd.s f31, f9, f13, f28, rdn # perform operation
fnmadd.s f31, f9, f13, f28, rmm # perform operation
fnmadd.s f31, f9, f13, f28, rne # perform operation
fnmadd.s f31, f9, f13, f28, rtz # perform operation
fnmadd.s f31, f9, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f9, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f9, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x11, 0x2dc6aa5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x711f7ce8 # load x3 with value 0x711f7ce8
sw x3, 0(x2) # store 0x711f7ce8 in memory
flw f18, 0(x2) # load 0x711f7ce8 from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmadd.s f11, f15, f18, f23, dyn # perform operation
fnmadd.s f11, f15, f18, f23, rdn # perform operation
fnmadd.s f11, f15, f18, f23, rmm # perform operation
fnmadd.s f11, f15, f18, f23, rne # perform operation
fnmadd.s f11, f15, f18, f23, rtz # perform operation
fnmadd.s f11, f15, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x7, 0x1c3182f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x3e6b6356 # load x3 with value 0x3e6b6356
sw x3, 0(x2) # store 0x3e6b6356 in memory
flw f31, 0(x2) # load 0x3e6b6356 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.s f7, f19, f31, f14, dyn # perform operation
fnmadd.s f7, f19, f31, f14, rdn # perform operation
fnmadd.s f7, f19, f31, f14, rmm # perform operation
fnmadd.s f7, f19, f31, f14, rne # perform operation
fnmadd.s f7, f19, f31, f14, rtz # perform operation
fnmadd.s f7, f19, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x4, 0x2ff12761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x3051a02f # load x3 with value 0x3051a02f
sw x3, 0(x2) # store 0x3051a02f in memory
flw f20, 0(x2) # load 0x3051a02f from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fnmadd.s f4, f30, f20, f13, dyn # perform operation
fnmadd.s f4, f30, f20, f13, rdn # perform operation
fnmadd.s f4, f30, f20, f13, rmm # perform operation
fnmadd.s f4, f30, f20, f13, rne # perform operation
fnmadd.s f4, f30, f20, f13, rtz # perform operation
fnmadd.s f4, f30, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f30, f20, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x5, 0xb02662d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x76ae6dc6 # load x3 with value 0x76ae6dc6
sw x3, 0(x2) # store 0x76ae6dc6 in memory
flw f26, 0(x2) # load 0x76ae6dc6 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmadd.s f5, f22, f26, f12, dyn # perform operation
fnmadd.s f5, f22, f26, f12, rdn # perform operation
fnmadd.s f5, f22, f26, f12, rmm # perform operation
fnmadd.s f5, f22, f26, f12, rne # perform operation
fnmadd.s f5, f22, f26, f12, rtz # perform operation
fnmadd.s f5, f22, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x12, 0x8996a3ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xb1a1e975 # load x3 with value 0xb1a1e975
sw x3, 0(x2) # store 0xb1a1e975 in memory
flw f19, 0(x2) # load 0xb1a1e975 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmadd.s f12, f31, f19, f16, dyn # perform operation
fnmadd.s f12, f31, f19, f16, rdn # perform operation
fnmadd.s f12, f31, f19, f16, rmm # perform operation
fnmadd.s f12, f31, f19, f16, rne # perform operation
fnmadd.s f12, f31, f19, f16, rtz # perform operation
fnmadd.s f12, f31, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f31, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x29, 0x5c880e1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0xde0076d0 # load x3 with value 0xde0076d0
sw x3, 0(x2) # store 0xde0076d0 in memory
flw f22, 0(x2) # load 0xde0076d0 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f29, f3, f22, f16, dyn # perform operation
fnmadd.s f29, f3, f22, f16, rdn # perform operation
fnmadd.s f29, f3, f22, f16, rmm # perform operation
fnmadd.s f29, f3, f22, f16, rne # perform operation
fnmadd.s f29, f3, f22, f16, rtz # perform operation
fnmadd.s f29, f3, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f22, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x11, 0xb7594ac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x1e02a007 # load x3 with value 0x1e02a007
sw x3, 0(x2) # store 0x1e02a007 in memory
flw f30, 0(x2) # load 0x1e02a007 from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmadd.s f11, f23, f30, f16, dyn # perform operation
fnmadd.s f11, f23, f30, f16, rdn # perform operation
fnmadd.s f11, f23, f30, f16, rmm # perform operation
fnmadd.s f11, f23, f30, f16, rne # perform operation
fnmadd.s f11, f23, f30, f16, rtz # perform operation
fnmadd.s f11, f23, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x29, 0xc815d643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x223b1321 # load x3 with value 0x223b1321
sw x3, 0(x2) # store 0x223b1321 in memory
flw f8, 0(x2) # load 0x223b1321 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmadd.s f29, f25, f8, f26, dyn # perform operation
fnmadd.s f29, f25, f8, f26, rdn # perform operation
fnmadd.s f29, f25, f8, f26, rmm # perform operation
fnmadd.s f29, f25, f8, f26, rne # perform operation
fnmadd.s f29, f25, f8, f26, rtz # perform operation
fnmadd.s f29, f25, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x5, 0x74bd809c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x28841336 # load x3 with value 0x28841336
sw x3, 0(x2) # store 0x28841336 in memory
flw f22, 0(x2) # load 0x28841336 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmadd.s f5, f18, f22, f30, dyn # perform operation
fnmadd.s f5, f18, f22, f30, rdn # perform operation
fnmadd.s f5, f18, f22, f30, rmm # perform operation
fnmadd.s f5, f18, f22, f30, rne # perform operation
fnmadd.s f5, f18, f22, f30, rtz # perform operation
fnmadd.s f5, f18, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f22, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x2, 0x88c26475 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x6671f640 # load x3 with value 0x6671f640
sw x3, 0(x2) # store 0x6671f640 in memory
flw f6, 0(x2) # load 0x6671f640 from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmadd.s f2, f14, f6, f26, dyn # perform operation
fnmadd.s f2, f14, f6, f26, rdn # perform operation
fnmadd.s f2, f14, f6, f26, rmm # perform operation
fnmadd.s f2, f14, f6, f26, rne # perform operation
fnmadd.s f2, f14, f6, f26, rtz # perform operation
fnmadd.s f2, f14, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f14, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f14, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x21, 0x1eb189d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xaad8bdcd # load x3 with value 0xaad8bdcd
sw x3, 0(x2) # store 0xaad8bdcd in memory
flw f4, 0(x2) # load 0xaad8bdcd from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fnmadd.s f21, f23, f4, f28, dyn # perform operation
fnmadd.s f21, f23, f4, f28, rdn # perform operation
fnmadd.s f21, f23, f4, f28, rmm # perform operation
fnmadd.s f21, f23, f4, f28, rne # perform operation
fnmadd.s f21, f23, f4, f28, rtz # perform operation
fnmadd.s f21, f23, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f23, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f23, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f23, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f23, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f23, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x31, 0xb81c2085 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0xd57e9a72 # load x3 with value 0xd57e9a72
sw x3, 0(x2) # store 0xd57e9a72 in memory
flw f26, 0(x2) # load 0xd57e9a72 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.s f31, f13, f26, f12, dyn # perform operation
fnmadd.s f31, f13, f26, f12, rdn # perform operation
fnmadd.s f31, f13, f26, f12, rmm # perform operation
fnmadd.s f31, f13, f26, f12, rne # perform operation
fnmadd.s f31, f13, f26, f12, rtz # perform operation
fnmadd.s f31, f13, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f13, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x22, 0x0e4adb19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0xaa170b10 # load x3 with value 0xaa170b10
sw x3, 0(x2) # store 0xaa170b10 in memory
flw f2, 0(x2) # load 0xaa170b10 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fnmadd.s f22, f12, f2, f26, dyn # perform operation
fnmadd.s f22, f12, f2, f26, rdn # perform operation
fnmadd.s f22, f12, f2, f26, rmm # perform operation
fnmadd.s f22, f12, f2, f26, rne # perform operation
fnmadd.s f22, f12, f2, f26, rtz # perform operation
fnmadd.s f22, f12, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f12, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x16, 0xdbbf0e45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0xbe3119ff # load x3 with value 0xbe3119ff
sw x3, 0(x2) # store 0xbe3119ff in memory
flw f21, 0(x2) # load 0xbe3119ff from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
fnmadd.s f16, f3, f21, f4, dyn # perform operation
fnmadd.s f16, f3, f21, f4, rdn # perform operation
fnmadd.s f16, f3, f21, f4, rmm # perform operation
fnmadd.s f16, f3, f21, f4, rne # perform operation
fnmadd.s f16, f3, f21, f4, rtz # perform operation
fnmadd.s f16, f3, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f3, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x3, 0xe7cb5c30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0xaf339d33 # load x3 with value 0xaf339d33
sw x3, 0(x2) # store 0xaf339d33 in memory
flw f14, 0(x2) # load 0xaf339d33 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmadd.s f3, f17, f14, f22, dyn # perform operation
fnmadd.s f3, f17, f14, f22, rdn # perform operation
fnmadd.s f3, f17, f14, f22, rmm # perform operation
fnmadd.s f3, f17, f14, f22, rne # perform operation
fnmadd.s f3, f17, f14, f22, rtz # perform operation
fnmadd.s f3, f17, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f17, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f17, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f17, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f17, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f17, f14, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x20, 0xf8e58062 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x04de27a2 # load x3 with value 0x04de27a2
sw x3, 0(x2) # store 0x04de27a2 in memory
flw f9, 0(x2) # load 0x04de27a2 from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmadd.s f20, f19, f9, f7, dyn # perform operation
fnmadd.s f20, f19, f9, f7, rdn # perform operation
fnmadd.s f20, f19, f9, f7, rmm # perform operation
fnmadd.s f20, f19, f9, f7, rne # perform operation
fnmadd.s f20, f19, f9, f7, rtz # perform operation
fnmadd.s f20, f19, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x5, 0x5b9564ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x69327074 # load x3 with value 0x69327074
sw x3, 0(x2) # store 0x69327074 in memory
flw f9, 0(x2) # load 0x69327074 from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmadd.s f5, f30, f9, f8, dyn # perform operation
fnmadd.s f5, f30, f9, f8, rdn # perform operation
fnmadd.s f5, f30, f9, f8, rmm # perform operation
fnmadd.s f5, f30, f9, f8, rne # perform operation
fnmadd.s f5, f30, f9, f8, rtz # perform operation
fnmadd.s f5, f30, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x26, 0x86c31086 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x3228228a # load x3 with value 0x3228228a
sw x3, 0(x2) # store 0x3228228a in memory
flw f7, 0(x2) # load 0x3228228a from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fnmadd.s f26, f30, f7, f22, dyn # perform operation
fnmadd.s f26, f30, f7, f22, rdn # perform operation
fnmadd.s f26, f30, f7, f22, rmm # perform operation
fnmadd.s f26, f30, f7, f22, rne # perform operation
fnmadd.s f26, f30, f7, f22, rtz # perform operation
fnmadd.s f26, f30, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f30, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x28, 0xda5b24cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x60c7f4b8 # load x3 with value 0x60c7f4b8
sw x3, 0(x2) # store 0x60c7f4b8 in memory
flw f24, 0(x2) # load 0x60c7f4b8 from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fnmadd.s f28, f20, f24, f15, dyn # perform operation
fnmadd.s f28, f20, f24, f15, rdn # perform operation
fnmadd.s f28, f20, f24, f15, rmm # perform operation
fnmadd.s f28, f20, f24, f15, rne # perform operation
fnmadd.s f28, f20, f24, f15, rtz # perform operation
fnmadd.s f28, f20, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x2, 0xcf18a2e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x5d776b05 # load x3 with value 0x5d776b05
sw x3, 0(x2) # store 0x5d776b05 in memory
flw f27, 0(x2) # load 0x5d776b05 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f2, f26, f27, f12, dyn # perform operation
fnmadd.s f2, f26, f27, f12, rdn # perform operation
fnmadd.s f2, f26, f27, f12, rmm # perform operation
fnmadd.s f2, f26, f27, f12, rne # perform operation
fnmadd.s f2, f26, f27, f12, rtz # perform operation
fnmadd.s f2, f26, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f26, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f26, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f26, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f26, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f26, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x27, 0xc8d7a0e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x918e1175 # load x3 with value 0x918e1175
sw x3, 0(x2) # store 0x918e1175 in memory
flw f18, 0(x2) # load 0x918e1175 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fnmadd.s f27, f28, f18, f9, dyn # perform operation
fnmadd.s f27, f28, f18, f9, rdn # perform operation
fnmadd.s f27, f28, f18, f9, rmm # perform operation
fnmadd.s f27, f28, f18, f9, rne # perform operation
fnmadd.s f27, f28, f18, f9, rtz # perform operation
fnmadd.s f27, f28, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x29, 0xe1dcab98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x0af918b8 # load x3 with value 0x0af918b8
sw x3, 0(x2) # store 0x0af918b8 in memory
flw f1, 0(x2) # load 0x0af918b8 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fnmadd.s f29, f14, f1, f15, dyn # perform operation
fnmadd.s f29, f14, f1, f15, rdn # perform operation
fnmadd.s f29, f14, f1, f15, rmm # perform operation
fnmadd.s f29, f14, f1, f15, rne # perform operation
fnmadd.s f29, f14, f1, f15, rtz # perform operation
fnmadd.s f29, f14, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f14, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f14, f1, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x5, 0x4c02dede # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x39c6342d # load x3 with value 0x39c6342d
sw x3, 0(x2) # store 0x39c6342d in memory
flw f16, 0(x2) # load 0x39c6342d from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmadd.s f5, f29, f16, f3, dyn # perform operation
fnmadd.s f5, f29, f16, f3, rdn # perform operation
fnmadd.s f5, f29, f16, f3, rmm # perform operation
fnmadd.s f5, f29, f16, f3, rne # perform operation
fnmadd.s f5, f29, f16, f3, rtz # perform operation
fnmadd.s f5, f29, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f29, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x6, 0xe2f1e6cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x27981429 # load x3 with value 0x27981429
sw x3, 0(x2) # store 0x27981429 in memory
flw f12, 0(x2) # load 0x27981429 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fnmadd.s f6, f10, f12, f18, dyn # perform operation
fnmadd.s f6, f10, f12, f18, rdn # perform operation
fnmadd.s f6, f10, f12, f18, rmm # perform operation
fnmadd.s f6, f10, f12, f18, rne # perform operation
fnmadd.s f6, f10, f12, f18, rtz # perform operation
fnmadd.s f6, f10, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x16, 0x74a6efc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0xd6785384 # load x3 with value 0xd6785384
sw x3, 0(x2) # store 0xd6785384 in memory
flw f29, 0(x2) # load 0xd6785384 from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmadd.s f16, f4, f29, f23, dyn # perform operation
fnmadd.s f16, f4, f29, f23, rdn # perform operation
fnmadd.s f16, f4, f29, f23, rmm # perform operation
fnmadd.s f16, f4, f29, f23, rne # perform operation
fnmadd.s f16, f4, f29, f23, rtz # perform operation
fnmadd.s f16, f4, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f4, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f4, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f4, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f4, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f4, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x5, 0x6fe3e429 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x14d96f21 # load x3 with value 0x14d96f21
sw x3, 0(x2) # store 0x14d96f21 in memory
flw f22, 0(x2) # load 0x14d96f21 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fnmadd.s f5, f17, f22, f26, dyn # perform operation
fnmadd.s f5, f17, f22, f26, rdn # perform operation
fnmadd.s f5, f17, f22, f26, rmm # perform operation
fnmadd.s f5, f17, f22, f26, rne # perform operation
fnmadd.s f5, f17, f22, f26, rtz # perform operation
fnmadd.s f5, f17, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f22, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x19, 0x4089c8cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x55499109 # load x3 with value 0x55499109
sw x3, 0(x2) # store 0x55499109 in memory
flw f20, 0(x2) # load 0x55499109 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fnmadd.s f19, f29, f20, f3, dyn # perform operation
fnmadd.s f19, f29, f20, f3, rdn # perform operation
fnmadd.s f19, f29, f20, f3, rmm # perform operation
fnmadd.s f19, f29, f20, f3, rne # perform operation
fnmadd.s f19, f29, f20, f3, rtz # perform operation
fnmadd.s f19, f29, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x20, 0xe8236f64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xd91d077d # load x3 with value 0xd91d077d
sw x3, 0(x2) # store 0xd91d077d in memory
flw f3, 0(x2) # load 0xd91d077d from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmadd.s f20, f16, f3, f12, dyn # perform operation
fnmadd.s f20, f16, f3, f12, rdn # perform operation
fnmadd.s f20, f16, f3, f12, rmm # perform operation
fnmadd.s f20, f16, f3, f12, rne # perform operation
fnmadd.s f20, f16, f3, f12, rtz # perform operation
fnmadd.s f20, f16, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f16, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x9, 0xc4405db5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x14a12fe1 # load x3 with value 0x14a12fe1
sw x3, 0(x2) # store 0x14a12fe1 in memory
flw f27, 0(x2) # load 0x14a12fe1 from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmadd.s f9, f10, f27, f30, dyn # perform operation
fnmadd.s f9, f10, f27, f30, rdn # perform operation
fnmadd.s f9, f10, f27, f30, rmm # perform operation
fnmadd.s f9, f10, f27, f30, rne # perform operation
fnmadd.s f9, f10, f27, f30, rtz # perform operation
fnmadd.s f9, f10, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f10, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x7, 0xc7dca5d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x257bb3a8 # load x3 with value 0x257bb3a8
sw x3, 0(x2) # store 0x257bb3a8 in memory
flw f27, 0(x2) # load 0x257bb3a8 from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmadd.s f7, f28, f27, f5, dyn # perform operation
fnmadd.s f7, f28, f27, f5, rdn # perform operation
fnmadd.s f7, f28, f27, f5, rmm # perform operation
fnmadd.s f7, f28, f27, f5, rne # perform operation
fnmadd.s f7, f28, f27, f5, rtz # perform operation
fnmadd.s f7, f28, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f28, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f28, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f28, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f28, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f28, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x6, 0xfa18fa68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x9daabe29 # load x3 with value 0x9daabe29
sw x3, 0(x2) # store 0x9daabe29 in memory
flw f31, 0(x2) # load 0x9daabe29 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmadd.s f6, f21, f31, f24, dyn # perform operation
fnmadd.s f6, f21, f31, f24, rdn # perform operation
fnmadd.s f6, f21, f31, f24, rmm # perform operation
fnmadd.s f6, f21, f31, f24, rne # perform operation
fnmadd.s f6, f21, f31, f24, rtz # perform operation
fnmadd.s f6, f21, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f21, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f21, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f21, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f21, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f21, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x13, 0xd283bc0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x8fe41a5e # load x3 with value 0x8fe41a5e
sw x3, 0(x2) # store 0x8fe41a5e in memory
flw f20, 0(x2) # load 0x8fe41a5e from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fnmadd.s f13, f7, f20, f30, dyn # perform operation
fnmadd.s f13, f7, f20, f30, rdn # perform operation
fnmadd.s f13, f7, f20, f30, rmm # perform operation
fnmadd.s f13, f7, f20, f30, rne # perform operation
fnmadd.s f13, f7, f20, f30, rtz # perform operation
fnmadd.s f13, f7, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f7, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x25, 0x2f58edfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0xd365f284 # load x3 with value 0xd365f284
sw x3, 0(x2) # store 0xd365f284 in memory
flw f28, 0(x2) # load 0xd365f284 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fnmadd.s f25, f11, f28, f1, dyn # perform operation
fnmadd.s f25, f11, f28, f1, rdn # perform operation
fnmadd.s f25, f11, f28, f1, rmm # perform operation
fnmadd.s f25, f11, f28, f1, rne # perform operation
fnmadd.s f25, f11, f28, f1, rtz # perform operation
fnmadd.s f25, f11, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f11, f28, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x7, 0x13f82c67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xc34806ba # load x3 with value 0xc34806ba
sw x3, 0(x2) # store 0xc34806ba in memory
flw f14, 0(x2) # load 0xc34806ba from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmadd.s f7, f5, f14, f24, dyn # perform operation
fnmadd.s f7, f5, f14, f24, rdn # perform operation
fnmadd.s f7, f5, f14, f24, rmm # perform operation
fnmadd.s f7, f5, f14, f24, rne # perform operation
fnmadd.s f7, f5, f14, f24, rtz # perform operation
fnmadd.s f7, f5, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x14, 0x39ade78d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x8de0efb1 # load x3 with value 0x8de0efb1
sw x3, 0(x2) # store 0x8de0efb1 in memory
flw f27, 0(x2) # load 0x8de0efb1 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fnmadd.s f14, f8, f27, f26, dyn # perform operation
fnmadd.s f14, f8, f27, f26, rdn # perform operation
fnmadd.s f14, f8, f27, f26, rmm # perform operation
fnmadd.s f14, f8, f27, f26, rne # perform operation
fnmadd.s f14, f8, f27, f26, rtz # perform operation
fnmadd.s f14, f8, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f8, f27, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x9, 0x487da8c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0xcb83eda8 # load x3 with value 0xcb83eda8
sw x3, 0(x2) # store 0xcb83eda8 in memory
flw f5, 0(x2) # load 0xcb83eda8 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fnmadd.s f9, f18, f5, f7, dyn # perform operation
fnmadd.s f9, f18, f5, f7, rdn # perform operation
fnmadd.s f9, f18, f5, f7, rmm # perform operation
fnmadd.s f9, f18, f5, f7, rne # perform operation
fnmadd.s f9, f18, f5, f7, rtz # perform operation
fnmadd.s f9, f18, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x29, 0x39aa37b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x625eee9e # load x3 with value 0x625eee9e
sw x3, 0(x2) # store 0x625eee9e in memory
flw f6, 0(x2) # load 0x625eee9e from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmadd.s f29, f13, f6, f9, dyn # perform operation
fnmadd.s f29, f13, f6, f9, rdn # perform operation
fnmadd.s f29, f13, f6, f9, rmm # perform operation
fnmadd.s f29, f13, f6, f9, rne # perform operation
fnmadd.s f29, f13, f6, f9, rtz # perform operation
fnmadd.s f29, f13, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x4, 0xb75b7ec0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xde80565b # load x3 with value 0xde80565b
sw x3, 0(x2) # store 0xde80565b in memory
flw f2, 0(x2) # load 0xde80565b from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.s f4, f3, f2, f18, dyn # perform operation
fnmadd.s f4, f3, f2, f18, rdn # perform operation
fnmadd.s f4, f3, f2, f18, rmm # perform operation
fnmadd.s f4, f3, f2, f18, rne # perform operation
fnmadd.s f4, f3, f2, f18, rtz # perform operation
fnmadd.s f4, f3, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f3, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x16, 0xb63f362e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x3a1c78d1 # load x3 with value 0x3a1c78d1
sw x3, 0(x2) # store 0x3a1c78d1 in memory
flw f9, 0(x2) # load 0x3a1c78d1 from memory into f9
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmadd.s f16, f20, f9, f2, dyn # perform operation
fnmadd.s f16, f20, f9, f2, rdn # perform operation
fnmadd.s f16, f20, f9, f2, rmm # perform operation
fnmadd.s f16, f20, f9, f2, rne # perform operation
fnmadd.s f16, f20, f9, f2, rtz # perform operation
fnmadd.s f16, f20, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x5, 0x837d3d8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0xddf1b8a2 # load x3 with value 0xddf1b8a2
sw x3, 0(x2) # store 0xddf1b8a2 in memory
flw f15, 0(x2) # load 0xddf1b8a2 from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmadd.s f5, f6, f15, f13, dyn # perform operation
fnmadd.s f5, f6, f15, f13, rdn # perform operation
fnmadd.s f5, f6, f15, f13, rmm # perform operation
fnmadd.s f5, f6, f15, f13, rne # perform operation
fnmadd.s f5, f6, f15, f13, rtz # perform operation
fnmadd.s f5, f6, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f6, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x27, 0xac8523d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x9b4992fb # load x3 with value 0x9b4992fb
sw x3, 0(x2) # store 0x9b4992fb in memory
flw f17, 0(x2) # load 0x9b4992fb from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fnmadd.s f27, f12, f17, f20, dyn # perform operation
fnmadd.s f27, f12, f17, f20, rdn # perform operation
fnmadd.s f27, f12, f17, f20, rmm # perform operation
fnmadd.s f27, f12, f17, f20, rne # perform operation
fnmadd.s f27, f12, f17, f20, rtz # perform operation
fnmadd.s f27, f12, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x21, 0x09e95f35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x8ea49559 # load x3 with value 0x8ea49559
sw x3, 0(x2) # store 0x8ea49559 in memory
flw f7, 0(x2) # load 0x8ea49559 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f21, f2, f7, f9, dyn # perform operation
fnmadd.s f21, f2, f7, f9, rdn # perform operation
fnmadd.s f21, f2, f7, f9, rmm # perform operation
fnmadd.s f21, f2, f7, f9, rne # perform operation
fnmadd.s f21, f2, f7, f9, rtz # perform operation
fnmadd.s f21, f2, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f2, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x4, 0x83d9a0f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xa2ba6e4f # load x3 with value 0xa2ba6e4f
sw x3, 0(x2) # store 0xa2ba6e4f in memory
flw f13, 0(x2) # load 0xa2ba6e4f from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmadd.s f4, f17, f13, f22, dyn # perform operation
fnmadd.s f4, f17, f13, f22, rdn # perform operation
fnmadd.s f4, f17, f13, f22, rmm # perform operation
fnmadd.s f4, f17, f13, f22, rne # perform operation
fnmadd.s f4, f17, f13, f22, rtz # perform operation
fnmadd.s f4, f17, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x24, 0x31ca953a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x56a4cd14 # load x3 with value 0x56a4cd14
sw x3, 0(x2) # store 0x56a4cd14 in memory
flw f19, 0(x2) # load 0x56a4cd14 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fnmadd.s f24, f18, f19, f25, dyn # perform operation
fnmadd.s f24, f18, f19, f25, rdn # perform operation
fnmadd.s f24, f18, f19, f25, rmm # perform operation
fnmadd.s f24, f18, f19, f25, rne # perform operation
fnmadd.s f24, f18, f19, f25, rtz # perform operation
fnmadd.s f24, f18, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x9, 0xddbb04cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0xe29b4924 # load x3 with value 0xe29b4924
sw x3, 0(x2) # store 0xe29b4924 in memory
flw f28, 0(x2) # load 0xe29b4924 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fnmadd.s f9, f25, f28, f14, dyn # perform operation
fnmadd.s f9, f25, f28, f14, rdn # perform operation
fnmadd.s f9, f25, f28, f14, rmm # perform operation
fnmadd.s f9, f25, f28, f14, rne # perform operation
fnmadd.s f9, f25, f28, f14, rtz # perform operation
fnmadd.s f9, f25, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f28, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x5, 0x99926ca3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x95b7c11f # load x3 with value 0x95b7c11f
sw x3, 0(x2) # store 0x95b7c11f in memory
flw f17, 0(x2) # load 0x95b7c11f from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fnmadd.s f5, f4, f17, f27, dyn # perform operation
fnmadd.s f5, f4, f17, f27, rdn # perform operation
fnmadd.s f5, f4, f17, f27, rmm # perform operation
fnmadd.s f5, f4, f17, f27, rne # perform operation
fnmadd.s f5, f4, f17, f27, rtz # perform operation
fnmadd.s f5, f4, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f4, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f4, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f4, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f4, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f4, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x22, 0xf9befcad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0xd64bd6da # load x3 with value 0xd64bd6da
sw x3, 0(x2) # store 0xd64bd6da in memory
flw f20, 0(x2) # load 0xd64bd6da from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f22, f25, f20, f18, dyn # perform operation
fnmadd.s f22, f25, f20, f18, rdn # perform operation
fnmadd.s f22, f25, f20, f18, rmm # perform operation
fnmadd.s f22, f25, f20, f18, rne # perform operation
fnmadd.s f22, f25, f20, f18, rtz # perform operation
fnmadd.s f22, f25, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x27, 0xad5f7ea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xde0f68c9 # load x3 with value 0xde0f68c9
sw x3, 0(x2) # store 0xde0f68c9 in memory
flw f11, 0(x2) # load 0xde0f68c9 from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f27, f5, f11, f24, dyn # perform operation
fnmadd.s f27, f5, f11, f24, rdn # perform operation
fnmadd.s f27, f5, f11, f24, rmm # perform operation
fnmadd.s f27, f5, f11, f24, rne # perform operation
fnmadd.s f27, f5, f11, f24, rtz # perform operation
fnmadd.s f27, f5, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x11, 0x06e6a834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x74c31856 # load x3 with value 0x74c31856
sw x3, 0(x2) # store 0x74c31856 in memory
flw f8, 0(x2) # load 0x74c31856 from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmadd.s f11, f30, f8, f1, dyn # perform operation
fnmadd.s f11, f30, f8, f1, rdn # perform operation
fnmadd.s f11, f30, f8, f1, rmm # perform operation
fnmadd.s f11, f30, f8, f1, rne # perform operation
fnmadd.s f11, f30, f8, f1, rtz # perform operation
fnmadd.s f11, f30, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x28, 0x12d7bc22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x39aa04f8 # load x3 with value 0x39aa04f8
sw x3, 0(x2) # store 0x39aa04f8 in memory
flw f2, 0(x2) # load 0x39aa04f8 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmadd.s f28, f3, f2, f23, dyn # perform operation
fnmadd.s f28, f3, f2, f23, rdn # perform operation
fnmadd.s f28, f3, f2, f23, rmm # perform operation
fnmadd.s f28, f3, f2, f23, rne # perform operation
fnmadd.s f28, f3, f2, f23, rtz # perform operation
fnmadd.s f28, f3, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x3, 0x3a4d09a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x17f0ece7 # load x3 with value 0x17f0ece7
sw x3, 0(x2) # store 0x17f0ece7 in memory
flw f24, 0(x2) # load 0x17f0ece7 from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fnmadd.s f3, f6, f24, f20, dyn # perform operation
fnmadd.s f3, f6, f24, f20, rdn # perform operation
fnmadd.s f3, f6, f24, f20, rmm # perform operation
fnmadd.s f3, f6, f24, f20, rne # perform operation
fnmadd.s f3, f6, f24, f20, rtz # perform operation
fnmadd.s f3, f6, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f6, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x11, 0x60235a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xc65a9aa9 # load x3 with value 0xc65a9aa9
sw x3, 0(x2) # store 0xc65a9aa9 in memory
flw f1, 0(x2) # load 0xc65a9aa9 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fnmadd.s f11, f30, f1, f26, dyn # perform operation
fnmadd.s f11, f30, f1, f26, rdn # perform operation
fnmadd.s f11, f30, f1, f26, rmm # perform operation
fnmadd.s f11, f30, f1, f26, rne # perform operation
fnmadd.s f11, f30, f1, f26, rtz # perform operation
fnmadd.s f11, f30, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x25, 0x6e661d72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x85114ee3 # load x3 with value 0x85114ee3
sw x3, 0(x2) # store 0x85114ee3 in memory
flw f14, 0(x2) # load 0x85114ee3 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fnmadd.s f25, f17, f14, f30, dyn # perform operation
fnmadd.s f25, f17, f14, f30, rdn # perform operation
fnmadd.s f25, f17, f14, f30, rmm # perform operation
fnmadd.s f25, f17, f14, f30, rne # perform operation
fnmadd.s f25, f17, f14, f30, rtz # perform operation
fnmadd.s f25, f17, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x13, 0x7b7880d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xc088da9d # load x3 with value 0xc088da9d
sw x3, 0(x2) # store 0xc088da9d in memory
flw f28, 0(x2) # load 0xc088da9d from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fnmadd.s f13, f16, f28, f19, dyn # perform operation
fnmadd.s f13, f16, f28, f19, rdn # perform operation
fnmadd.s f13, f16, f28, f19, rmm # perform operation
fnmadd.s f13, f16, f28, f19, rne # perform operation
fnmadd.s f13, f16, f28, f19, rtz # perform operation
fnmadd.s f13, f16, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f16, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x30, 0x39093698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x83e1c734 # load x3 with value 0x83e1c734
sw x3, 0(x2) # store 0x83e1c734 in memory
flw f19, 0(x2) # load 0x83e1c734 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fnmadd.s f30, f31, f19, f1, dyn # perform operation
fnmadd.s f30, f31, f19, f1, rdn # perform operation
fnmadd.s f30, f31, f19, f1, rmm # perform operation
fnmadd.s f30, f31, f19, f1, rne # perform operation
fnmadd.s f30, f31, f19, f1, rtz # perform operation
fnmadd.s f30, f31, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x13, 0x88ce7c0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x449f5d02 # load x3 with value 0x449f5d02
sw x3, 0(x2) # store 0x449f5d02 in memory
flw f23, 0(x2) # load 0x449f5d02 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmadd.s f13, f22, f23, f28, dyn # perform operation
fnmadd.s f13, f22, f23, f28, rdn # perform operation
fnmadd.s f13, f22, f23, f28, rmm # perform operation
fnmadd.s f13, f22, f23, f28, rne # perform operation
fnmadd.s f13, f22, f23, f28, rtz # perform operation
fnmadd.s f13, f22, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f22, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x29, 0x0909f737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x25c6dc41 # load x3 with value 0x25c6dc41
sw x3, 0(x2) # store 0x25c6dc41 in memory
flw f2, 0(x2) # load 0x25c6dc41 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmadd.s f29, f24, f2, f11, dyn # perform operation
fnmadd.s f29, f24, f2, f11, rdn # perform operation
fnmadd.s f29, f24, f2, f11, rmm # perform operation
fnmadd.s f29, f24, f2, f11, rne # perform operation
fnmadd.s f29, f24, f2, f11, rtz # perform operation
fnmadd.s f29, f24, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f24, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f24, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f24, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f24, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f24, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x3, 0x4df55bb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x4e1abd9c # load x3 with value 0x4e1abd9c
sw x3, 0(x2) # store 0x4e1abd9c in memory
flw f14, 0(x2) # load 0x4e1abd9c from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmadd.s f3, f12, f14, f10, dyn # perform operation
fnmadd.s f3, f12, f14, f10, rdn # perform operation
fnmadd.s f3, f12, f14, f10, rmm # perform operation
fnmadd.s f3, f12, f14, f10, rne # perform operation
fnmadd.s f3, f12, f14, f10, rtz # perform operation
fnmadd.s f3, f12, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x3, 0xc118ae4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0xf5c3ea03 # load x3 with value 0xf5c3ea03
sw x3, 0(x2) # store 0xf5c3ea03 in memory
flw f1, 0(x2) # load 0xf5c3ea03 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fnmadd.s f3, f4, f1, f30, dyn # perform operation
fnmadd.s f3, f4, f1, f30, rdn # perform operation
fnmadd.s f3, f4, f1, f30, rmm # perform operation
fnmadd.s f3, f4, f1, f30, rne # perform operation
fnmadd.s f3, f4, f1, f30, rtz # perform operation
fnmadd.s f3, f4, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f4, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x22, 0x4756b77f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0xd9a7ebb2 # load x3 with value 0xd9a7ebb2
sw x3, 0(x2) # store 0xd9a7ebb2 in memory
flw f2, 0(x2) # load 0xd9a7ebb2 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmadd.s f22, f24, f2, f20, dyn # perform operation
fnmadd.s f22, f24, f2, f20, rdn # perform operation
fnmadd.s f22, f24, f2, f20, rmm # perform operation
fnmadd.s f22, f24, f2, f20, rne # perform operation
fnmadd.s f22, f24, f2, f20, rtz # perform operation
fnmadd.s f22, f24, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x18, 0x7898f598 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0xb71b2663 # load x3 with value 0xb71b2663
sw x3, 0(x2) # store 0xb71b2663 in memory
flw f27, 0(x2) # load 0xb71b2663 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fnmadd.s f18, f9, f27, f12, dyn # perform operation
fnmadd.s f18, f9, f27, f12, rdn # perform operation
fnmadd.s f18, f9, f27, f12, rmm # perform operation
fnmadd.s f18, f9, f27, f12, rne # perform operation
fnmadd.s f18, f9, f27, f12, rtz # perform operation
fnmadd.s f18, f9, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f9, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x22, 0xd2480bce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xd94995b6 # load x3 with value 0xd94995b6
sw x3, 0(x2) # store 0xd94995b6 in memory
flw f27, 0(x2) # load 0xd94995b6 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
fnmadd.s f22, f2, f27, f8, dyn # perform operation
fnmadd.s f22, f2, f27, f8, rdn # perform operation
fnmadd.s f22, f2, f27, f8, rmm # perform operation
fnmadd.s f22, f2, f27, f8, rne # perform operation
fnmadd.s f22, f2, f27, f8, rtz # perform operation
fnmadd.s f22, f2, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f2, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f2, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f2, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f2, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f2, f27, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x19, 0x4afbdf29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x29c83cd1 # load x3 with value 0x29c83cd1
sw x3, 0(x2) # store 0x29c83cd1 in memory
flw f12, 0(x2) # load 0x29c83cd1 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fnmadd.s f19, f11, f12, f24, dyn # perform operation
fnmadd.s f19, f11, f12, f24, rdn # perform operation
fnmadd.s f19, f11, f12, f24, rmm # perform operation
fnmadd.s f19, f11, f12, f24, rne # perform operation
fnmadd.s f19, f11, f12, f24, rtz # perform operation
fnmadd.s f19, f11, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f11, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f11, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f11, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f11, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f11, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x24, 0xd9c40a7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x3e62022f # load x3 with value 0x3e62022f
sw x3, 0(x2) # store 0x3e62022f in memory
flw f30, 0(x2) # load 0x3e62022f from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmadd.s f24, f25, f30, f17, dyn # perform operation
fnmadd.s f24, f25, f30, f17, rdn # perform operation
fnmadd.s f24, f25, f30, f17, rmm # perform operation
fnmadd.s f24, f25, f30, f17, rne # perform operation
fnmadd.s f24, f25, f30, f17, rtz # perform operation
fnmadd.s f24, f25, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f25, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x18, 0xbd977c7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x127aca30 # load x3 with value 0x127aca30
sw x3, 0(x2) # store 0x127aca30 in memory
flw f9, 0(x2) # load 0x127aca30 from memory into f9
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fnmadd.s f18, f11, f9, f29, dyn # perform operation
fnmadd.s f18, f11, f9, f29, rdn # perform operation
fnmadd.s f18, f11, f9, f29, rmm # perform operation
fnmadd.s f18, f11, f9, f29, rne # perform operation
fnmadd.s f18, f11, f9, f29, rtz # perform operation
fnmadd.s f18, f11, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f9, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x11, 0x3b7b9262 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0xf0ed341a # load x3 with value 0xf0ed341a
sw x3, 0(x2) # store 0xf0ed341a in memory
flw f4, 0(x2) # load 0xf0ed341a from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fnmadd.s f11, f12, f4, f22, dyn # perform operation
fnmadd.s f11, f12, f4, f22, rdn # perform operation
fnmadd.s f11, f12, f4, f22, rmm # perform operation
fnmadd.s f11, f12, f4, f22, rne # perform operation
fnmadd.s f11, f12, f4, f22, rtz # perform operation
fnmadd.s f11, f12, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f12, f4, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x13, 0xa7fe7f0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0xc9a1a389 # load x3 with value 0xc9a1a389
sw x3, 0(x2) # store 0xc9a1a389 in memory
flw f2, 0(x2) # load 0xc9a1a389 from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fnmadd.s f13, f28, f2, f26, dyn # perform operation
fnmadd.s f13, f28, f2, f26, rdn # perform operation
fnmadd.s f13, f28, f2, f26, rmm # perform operation
fnmadd.s f13, f28, f2, f26, rne # perform operation
fnmadd.s f13, f28, f2, f26, rtz # perform operation
fnmadd.s f13, f28, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x26, 0x40a1f8e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x340ab122 # load x3 with value 0x340ab122
sw x3, 0(x2) # store 0x340ab122 in memory
flw f29, 0(x2) # load 0x340ab122 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
fnmadd.s f26, f22, f29, f6, dyn # perform operation
fnmadd.s f26, f22, f29, f6, rdn # perform operation
fnmadd.s f26, f22, f29, f6, rmm # perform operation
fnmadd.s f26, f22, f29, f6, rne # perform operation
fnmadd.s f26, f22, f29, f6, rtz # perform operation
fnmadd.s f26, f22, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x4, 0x075427fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0xaa12e747 # load x3 with value 0xaa12e747
sw x3, 0(x2) # store 0xaa12e747 in memory
flw f28, 0(x2) # load 0xaa12e747 from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmadd.s f4, f15, f28, f19, dyn # perform operation
fnmadd.s f4, f15, f28, f19, rdn # perform operation
fnmadd.s f4, f15, f28, f19, rmm # perform operation
fnmadd.s f4, f15, f28, f19, rne # perform operation
fnmadd.s f4, f15, f28, f19, rtz # perform operation
fnmadd.s f4, f15, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f15, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f15, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f15, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f15, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f15, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x4, 0x35553b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0xfee7b1dc # load x3 with value 0xfee7b1dc
sw x3, 0(x2) # store 0xfee7b1dc in memory
flw f19, 0(x2) # load 0xfee7b1dc from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fnmadd.s f4, f14, f19, f18, dyn # perform operation
fnmadd.s f4, f14, f19, f18, rdn # perform operation
fnmadd.s f4, f14, f19, f18, rmm # perform operation
fnmadd.s f4, f14, f19, f18, rne # perform operation
fnmadd.s f4, f14, f19, f18, rtz # perform operation
fnmadd.s f4, f14, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f14, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f14, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x20, 0xf9810148 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x0a53a997 # load x3 with value 0x0a53a997
sw x3, 0(x2) # store 0x0a53a997 in memory
flw f8, 0(x2) # load 0x0a53a997 from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fnmadd.s f20, f24, f8, f4, dyn # perform operation
fnmadd.s f20, f24, f8, f4, rdn # perform operation
fnmadd.s f20, f24, f8, f4, rmm # perform operation
fnmadd.s f20, f24, f8, f4, rne # perform operation
fnmadd.s f20, f24, f8, f4, rtz # perform operation
fnmadd.s f20, f24, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f24, f8, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x22, 0xd1a849dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x72ebb48a # load x3 with value 0x72ebb48a
sw x3, 0(x2) # store 0x72ebb48a in memory
flw f4, 0(x2) # load 0x72ebb48a from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fnmadd.s f22, f25, f4, f28, dyn # perform operation
fnmadd.s f22, f25, f4, f28, rdn # perform operation
fnmadd.s f22, f25, f4, f28, rmm # perform operation
fnmadd.s f22, f25, f4, f28, rne # perform operation
fnmadd.s f22, f25, f4, f28, rtz # perform operation
fnmadd.s f22, f25, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x15, 0xe5b40180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x35ff2452 # load x3 with value 0x35ff2452
sw x3, 0(x2) # store 0x35ff2452 in memory
flw f20, 0(x2) # load 0x35ff2452 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmadd.s f15, f21, f20, f1, dyn # perform operation
fnmadd.s f15, f21, f20, f1, rdn # perform operation
fnmadd.s f15, f21, f20, f1, rmm # perform operation
fnmadd.s f15, f21, f20, f1, rne # perform operation
fnmadd.s f15, f21, f20, f1, rtz # perform operation
fnmadd.s f15, f21, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x20, 0x8946c94b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x0caddd22 # load x3 with value 0x0caddd22
sw x3, 0(x2) # store 0x0caddd22 in memory
flw f10, 0(x2) # load 0x0caddd22 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f20, f9, f10, f25, dyn # perform operation
fnmadd.s f20, f9, f10, f25, rdn # perform operation
fnmadd.s f20, f9, f10, f25, rmm # perform operation
fnmadd.s f20, f9, f10, f25, rne # perform operation
fnmadd.s f20, f9, f10, f25, rtz # perform operation
fnmadd.s f20, f9, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f10, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x16, 0xb67bd203 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x6805d4f8 # load x3 with value 0x6805d4f8
sw x3, 0(x2) # store 0x6805d4f8 in memory
flw f20, 0(x2) # load 0x6805d4f8 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmadd.s f16, f29, f20, f3, dyn # perform operation
fnmadd.s f16, f29, f20, f3, rdn # perform operation
fnmadd.s f16, f29, f20, f3, rmm # perform operation
fnmadd.s f16, f29, f20, f3, rne # perform operation
fnmadd.s f16, f29, f20, f3, rtz # perform operation
fnmadd.s f16, f29, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x17, 0x74541df4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0xbe5e9bd2 # load x3 with value 0xbe5e9bd2
sw x3, 0(x2) # store 0xbe5e9bd2 in memory
flw f15, 0(x2) # load 0xbe5e9bd2 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmadd.s f17, f20, f15, f6, dyn # perform operation
fnmadd.s f17, f20, f15, f6, rdn # perform operation
fnmadd.s f17, f20, f15, f6, rmm # perform operation
fnmadd.s f17, f20, f15, f6, rne # perform operation
fnmadd.s f17, f20, f15, f6, rtz # perform operation
fnmadd.s f17, f20, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x6, 0x0ee76dfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x1ff4eae4 # load x3 with value 0x1ff4eae4
sw x3, 0(x2) # store 0x1ff4eae4 in memory
flw f12, 0(x2) # load 0x1ff4eae4 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f6, f25, f12, f9, dyn # perform operation
fnmadd.s f6, f25, f12, f9, rdn # perform operation
fnmadd.s f6, f25, f12, f9, rmm # perform operation
fnmadd.s f6, f25, f12, f9, rne # perform operation
fnmadd.s f6, f25, f12, f9, rtz # perform operation
fnmadd.s f6, f25, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f12, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x2, 0xe887d000 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xd067ef59 # load x3 with value 0xd067ef59
sw x3, 0(x2) # store 0xd067ef59 in memory
flw f17, 0(x2) # load 0xd067ef59 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmadd.s f2, f8, f17, f15, dyn # perform operation
fnmadd.s f2, f8, f17, f15, rdn # perform operation
fnmadd.s f2, f8, f17, f15, rmm # perform operation
fnmadd.s f2, f8, f17, f15, rne # perform operation
fnmadd.s f2, f8, f17, f15, rtz # perform operation
fnmadd.s f2, f8, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x6, 0x94d54488 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x538c645b # load x3 with value 0x538c645b
sw x3, 0(x2) # store 0x538c645b in memory
flw f25, 0(x2) # load 0x538c645b from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmadd.s f6, f15, f25, f23, dyn # perform operation
fnmadd.s f6, f15, f25, f23, rdn # perform operation
fnmadd.s f6, f15, f25, f23, rmm # perform operation
fnmadd.s f6, f15, f25, f23, rne # perform operation
fnmadd.s f6, f15, f25, f23, rtz # perform operation
fnmadd.s f6, f15, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x29, 0xa0984848 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0xcefba87e # load x3 with value 0xcefba87e
sw x3, 0(x2) # store 0xcefba87e in memory
flw f5, 0(x2) # load 0xcefba87e from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fnmadd.s f29, f19, f5, f4, dyn # perform operation
fnmadd.s f29, f19, f5, f4, rdn # perform operation
fnmadd.s f29, f19, f5, f4, rmm # perform operation
fnmadd.s f29, f19, f5, f4, rne # perform operation
fnmadd.s f29, f19, f5, f4, rtz # perform operation
fnmadd.s f29, f19, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f19, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x16, 0x04c87715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xd7c01c1d # load x3 with value 0xd7c01c1d
sw x3, 0(x2) # store 0xd7c01c1d in memory
flw f31, 0(x2) # load 0xd7c01c1d from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmadd.s f16, f27, f31, f22, dyn # perform operation
fnmadd.s f16, f27, f31, f22, rdn # perform operation
fnmadd.s f16, f27, f31, f22, rmm # perform operation
fnmadd.s f16, f27, f31, f22, rne # perform operation
fnmadd.s f16, f27, f31, f22, rtz # perform operation
fnmadd.s f16, f27, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f27, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x24, 0x9e30550f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0xb7329e15 # load x3 with value 0xb7329e15
sw x3, 0(x2) # store 0xb7329e15 in memory
flw f12, 0(x2) # load 0xb7329e15 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f24, f16, f12, f13, dyn # perform operation
fnmadd.s f24, f16, f12, f13, rdn # perform operation
fnmadd.s f24, f16, f12, f13, rmm # perform operation
fnmadd.s f24, f16, f12, f13, rne # perform operation
fnmadd.s f24, f16, f12, f13, rtz # perform operation
fnmadd.s f24, f16, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x24, 0xc68e5f2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x9c8e27e8 # load x3 with value 0x9c8e27e8
sw x3, 0(x2) # store 0x9c8e27e8 in memory
flw f28, 0(x2) # load 0x9c8e27e8 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fnmadd.s f24, f15, f28, f25, dyn # perform operation
fnmadd.s f24, f15, f28, f25, rdn # perform operation
fnmadd.s f24, f15, f28, f25, rmm # perform operation
fnmadd.s f24, f15, f28, f25, rne # perform operation
fnmadd.s f24, f15, f28, f25, rtz # perform operation
fnmadd.s f24, f15, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x21, 0xd1e39dcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0xfed81cd3 # load x3 with value 0xfed81cd3
sw x3, 0(x2) # store 0xfed81cd3 in memory
flw f22, 0(x2) # load 0xfed81cd3 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f21, f3, f22, f16, dyn # perform operation
fnmadd.s f21, f3, f22, f16, rdn # perform operation
fnmadd.s f21, f3, f22, f16, rmm # perform operation
fnmadd.s f21, f3, f22, f16, rne # perform operation
fnmadd.s f21, f3, f22, f16, rtz # perform operation
fnmadd.s f21, f3, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f22, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x4, 0x6a3295d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0xd2c18513 # load x3 with value 0xd2c18513
sw x3, 0(x2) # store 0xd2c18513 in memory
flw f8, 0(x2) # load 0xd2c18513 from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmadd.s f4, f28, f8, f9, dyn # perform operation
fnmadd.s f4, f28, f8, f9, rdn # perform operation
fnmadd.s f4, f28, f8, f9, rmm # perform operation
fnmadd.s f4, f28, f8, f9, rne # perform operation
fnmadd.s f4, f28, f8, f9, rtz # perform operation
fnmadd.s f4, f28, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f28, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x9, 0x554f421b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x3235d7f1 # load x3 with value 0x3235d7f1
sw x3, 0(x2) # store 0x3235d7f1 in memory
flw f7, 0(x2) # load 0x3235d7f1 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmadd.s f9, f1, f7, f8, dyn # perform operation
fnmadd.s f9, f1, f7, f8, rdn # perform operation
fnmadd.s f9, f1, f7, f8, rmm # perform operation
fnmadd.s f9, f1, f7, f8, rne # perform operation
fnmadd.s f9, f1, f7, f8, rtz # perform operation
fnmadd.s f9, f1, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f1, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f1, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f1, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f1, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f1, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x31, 0xf9a5d4a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x3db9b310 # load x3 with value 0x3db9b310
sw x3, 0(x2) # store 0x3db9b310 in memory
flw f21, 0(x2) # load 0x3db9b310 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fnmadd.s f31, f17, f21, f16, dyn # perform operation
fnmadd.s f31, f17, f21, f16, rdn # perform operation
fnmadd.s f31, f17, f21, f16, rmm # perform operation
fnmadd.s f31, f17, f21, f16, rne # perform operation
fnmadd.s f31, f17, f21, f16, rtz # perform operation
fnmadd.s f31, f17, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f17, f21, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x20, 0x248e5cfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0x7fc69072 # load x3 with value 0x7fc69072
sw x3, 0(x2) # store 0x7fc69072 in memory
flw f7, 0(x2) # load 0x7fc69072 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmadd.s f20, f13, f7, f23, dyn # perform operation
fnmadd.s f20, f13, f7, f23, rdn # perform operation
fnmadd.s f20, f13, f7, f23, rmm # perform operation
fnmadd.s f20, f13, f7, f23, rne # perform operation
fnmadd.s f20, f13, f7, f23, rtz # perform operation
fnmadd.s f20, f13, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f13, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x26, 0x4b1fde2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xd71e4d52 # load x3 with value 0xd71e4d52
sw x3, 0(x2) # store 0xd71e4d52 in memory
flw f7, 0(x2) # load 0xd71e4d52 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fnmadd.s f26, f24, f7, f15, dyn # perform operation
fnmadd.s f26, f24, f7, f15, rdn # perform operation
fnmadd.s f26, f24, f7, f15, rmm # perform operation
fnmadd.s f26, f24, f7, f15, rne # perform operation
fnmadd.s f26, f24, f7, f15, rtz # perform operation
fnmadd.s f26, f24, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f24, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x22, 0xe523c0aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x244b4317 # load x3 with value 0x244b4317
sw x3, 0(x2) # store 0x244b4317 in memory
flw f23, 0(x2) # load 0x244b4317 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fnmadd.s f22, f28, f23, f27, dyn # perform operation
fnmadd.s f22, f28, f23, f27, rdn # perform operation
fnmadd.s f22, f28, f23, f27, rmm # perform operation
fnmadd.s f22, f28, f23, f27, rne # perform operation
fnmadd.s f22, f28, f23, f27, rtz # perform operation
fnmadd.s f22, f28, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x16, 0xc2dff477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x79463de1 # load x3 with value 0x79463de1
sw x3, 0(x2) # store 0x79463de1 in memory
flw f17, 0(x2) # load 0x79463de1 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f16, f2, f17, f21, dyn # perform operation
fnmadd.s f16, f2, f17, f21, rdn # perform operation
fnmadd.s f16, f2, f17, f21, rmm # perform operation
fnmadd.s f16, f2, f17, f21, rne # perform operation
fnmadd.s f16, f2, f17, f21, rtz # perform operation
fnmadd.s f16, f2, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f2, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f2, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f2, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f2, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f2, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x28, 0xe51efdbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x09d2e56f # load x3 with value 0x09d2e56f
sw x3, 0(x2) # store 0x09d2e56f in memory
flw f20, 0(x2) # load 0x09d2e56f from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmadd.s f28, f18, f20, f7, dyn # perform operation
fnmadd.s f28, f18, f20, f7, rdn # perform operation
fnmadd.s f28, f18, f20, f7, rmm # perform operation
fnmadd.s f28, f18, f20, f7, rne # perform operation
fnmadd.s f28, f18, f20, f7, rtz # perform operation
fnmadd.s f28, f18, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x20, 0xe017e888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x0d1a2ac1 # load x3 with value 0x0d1a2ac1
sw x3, 0(x2) # store 0x0d1a2ac1 in memory
flw f3, 0(x2) # load 0x0d1a2ac1 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmadd.s f20, f19, f3, f7, dyn # perform operation
fnmadd.s f20, f19, f3, f7, rdn # perform operation
fnmadd.s f20, f19, f3, f7, rmm # perform operation
fnmadd.s f20, f19, f3, f7, rne # perform operation
fnmadd.s f20, f19, f3, f7, rtz # perform operation
fnmadd.s f20, f19, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x4, 0xf946a148 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x871fff91 # load x3 with value 0x871fff91
sw x3, 0(x2) # store 0x871fff91 in memory
flw f31, 0(x2) # load 0x871fff91 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fnmadd.s f4, f11, f31, f10, dyn # perform operation
fnmadd.s f4, f11, f31, f10, rdn # perform operation
fnmadd.s f4, f11, f31, f10, rmm # perform operation
fnmadd.s f4, f11, f31, f10, rne # perform operation
fnmadd.s f4, f11, f31, f10, rtz # perform operation
fnmadd.s f4, f11, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f11, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f11, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x7, 0x99dee2f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x7bf1fe2c # load x3 with value 0x7bf1fe2c
sw x3, 0(x2) # store 0x7bf1fe2c in memory
flw f24, 0(x2) # load 0x7bf1fe2c from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fnmadd.s f7, f12, f24, f16, dyn # perform operation
fnmadd.s f7, f12, f24, f16, rdn # perform operation
fnmadd.s f7, f12, f24, f16, rmm # perform operation
fnmadd.s f7, f12, f24, f16, rne # perform operation
fnmadd.s f7, f12, f24, f16, rtz # perform operation
fnmadd.s f7, f12, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x29, 0xe54e0d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0xb62a89b1 # load x3 with value 0xb62a89b1
sw x3, 0(x2) # store 0xb62a89b1 in memory
flw f14, 0(x2) # load 0xb62a89b1 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmadd.s f29, f11, f14, f20, dyn # perform operation
fnmadd.s f29, f11, f14, f20, rdn # perform operation
fnmadd.s f29, f11, f14, f20, rmm # perform operation
fnmadd.s f29, f11, f14, f20, rne # perform operation
fnmadd.s f29, f11, f14, f20, rtz # perform operation
fnmadd.s f29, f11, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x31, 0x964ed133 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x9fa7ec9a # load x3 with value 0x9fa7ec9a
sw x3, 0(x2) # store 0x9fa7ec9a in memory
flw f28, 0(x2) # load 0x9fa7ec9a from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fnmadd.s f31, f11, f28, f1, dyn # perform operation
fnmadd.s f31, f11, f28, f1, rdn # perform operation
fnmadd.s f31, f11, f28, f1, rmm # perform operation
fnmadd.s f31, f11, f28, f1, rne # perform operation
fnmadd.s f31, f11, f28, f1, rtz # perform operation
fnmadd.s f31, f11, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f28, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x5, 0x527a11e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xace49a78 # load x3 with value 0xace49a78
sw x3, 0(x2) # store 0xace49a78 in memory
flw f21, 0(x2) # load 0xace49a78 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmadd.s f5, f14, f21, f8, dyn # perform operation
fnmadd.s f5, f14, f21, f8, rdn # perform operation
fnmadd.s f5, f14, f21, f8, rmm # perform operation
fnmadd.s f5, f14, f21, f8, rne # perform operation
fnmadd.s f5, f14, f21, f8, rtz # perform operation
fnmadd.s f5, f14, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f14, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x29, 0xffb3d803 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0xb25d6e17 # load x3 with value 0xb25d6e17
sw x3, 0(x2) # store 0xb25d6e17 in memory
flw f15, 0(x2) # load 0xb25d6e17 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmadd.s f29, f12, f15, f10, dyn # perform operation
fnmadd.s f29, f12, f15, f10, rdn # perform operation
fnmadd.s f29, f12, f15, f10, rmm # perform operation
fnmadd.s f29, f12, f15, f10, rne # perform operation
fnmadd.s f29, f12, f15, f10, rtz # perform operation
fnmadd.s f29, f12, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x22, 0xde7e1780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x40b63d98 # load x3 with value 0x40b63d98
sw x3, 0(x2) # store 0x40b63d98 in memory
flw f3, 0(x2) # load 0x40b63d98 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fnmadd.s f22, f14, f3, f16, dyn # perform operation
fnmadd.s f22, f14, f3, f16, rdn # perform operation
fnmadd.s f22, f14, f3, f16, rmm # perform operation
fnmadd.s f22, f14, f3, f16, rne # perform operation
fnmadd.s f22, f14, f3, f16, rtz # perform operation
fnmadd.s f22, f14, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f14, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x18, 0x59b6ddc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0xb66c8c8f # load x3 with value 0xb66c8c8f
sw x3, 0(x2) # store 0xb66c8c8f in memory
flw f8, 0(x2) # load 0xb66c8c8f from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmadd.s f18, f31, f8, f19, dyn # perform operation
fnmadd.s f18, f31, f8, f19, rdn # perform operation
fnmadd.s f18, f31, f8, f19, rmm # perform operation
fnmadd.s f18, f31, f8, f19, rne # perform operation
fnmadd.s f18, f31, f8, f19, rtz # perform operation
fnmadd.s f18, f31, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f31, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f31, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f31, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f31, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f31, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x25, 0x75e142b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x4dd092aa # load x3 with value 0x4dd092aa
sw x3, 0(x2) # store 0x4dd092aa in memory
flw f14, 0(x2) # load 0x4dd092aa from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmadd.s f25, f15, f14, f30, dyn # perform operation
fnmadd.s f25, f15, f14, f30, rdn # perform operation
fnmadd.s f25, f15, f14, f30, rmm # perform operation
fnmadd.s f25, f15, f14, f30, rne # perform operation
fnmadd.s f25, f15, f14, f30, rtz # perform operation
fnmadd.s f25, f15, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x7, 0x75a7ceda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0xe79b2f03 # load x3 with value 0xe79b2f03
sw x3, 0(x2) # store 0xe79b2f03 in memory
flw f6, 0(x2) # load 0xe79b2f03 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmadd.s f7, f3, f6, f27, dyn # perform operation
fnmadd.s f7, f3, f6, f27, rdn # perform operation
fnmadd.s f7, f3, f6, f27, rmm # perform operation
fnmadd.s f7, f3, f6, f27, rne # perform operation
fnmadd.s f7, f3, f6, f27, rtz # perform operation
fnmadd.s f7, f3, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f3, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x4, 0x37b744a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x74c9ceb6 # load x3 with value 0x74c9ceb6
sw x3, 0(x2) # store 0x74c9ceb6 in memory
flw f20, 0(x2) # load 0x74c9ceb6 from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fnmadd.s f4, f8, f20, f11, dyn # perform operation
fnmadd.s f4, f8, f20, f11, rdn # perform operation
fnmadd.s f4, f8, f20, f11, rmm # perform operation
fnmadd.s f4, f8, f20, f11, rne # perform operation
fnmadd.s f4, f8, f20, f11, rtz # perform operation
fnmadd.s f4, f8, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f8, f20, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x15, 0x83b24100 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x9898bb5d # load x3 with value 0x9898bb5d
sw x3, 0(x2) # store 0x9898bb5d in memory
flw f18, 0(x2) # load 0x9898bb5d from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmadd.s f15, f13, f18, f27, dyn # perform operation
fnmadd.s f15, f13, f18, f27, rdn # perform operation
fnmadd.s f15, f13, f18, f27, rmm # perform operation
fnmadd.s f15, f13, f18, f27, rne # perform operation
fnmadd.s f15, f13, f18, f27, rtz # perform operation
fnmadd.s f15, f13, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f13, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x1, 0x8ebfd737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x67fb26d5 # load x3 with value 0x67fb26d5
sw x3, 0(x2) # store 0x67fb26d5 in memory
flw f28, 0(x2) # load 0x67fb26d5 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmadd.s f1, f27, f28, f11, dyn # perform operation
fnmadd.s f1, f27, f28, f11, rdn # perform operation
fnmadd.s f1, f27, f28, f11, rmm # perform operation
fnmadd.s f1, f27, f28, f11, rne # perform operation
fnmadd.s f1, f27, f28, f11, rtz # perform operation
fnmadd.s f1, f27, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x2, 0xe27e1c7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x7520ada6 # load x3 with value 0x7520ada6
sw x3, 0(x2) # store 0x7520ada6 in memory
flw f8, 0(x2) # load 0x7520ada6 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmadd.s f2, f6, f8, f15, dyn # perform operation
fnmadd.s f2, f6, f8, f15, rdn # perform operation
fnmadd.s f2, f6, f8, f15, rmm # perform operation
fnmadd.s f2, f6, f8, f15, rne # perform operation
fnmadd.s f2, f6, f8, f15, rtz # perform operation
fnmadd.s f2, f6, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x27, 0x8791a41d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x92fa5048 # load x3 with value 0x92fa5048
sw x3, 0(x2) # store 0x92fa5048 in memory
flw f7, 0(x2) # load 0x92fa5048 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmadd.s f27, f5, f7, f2, dyn # perform operation
fnmadd.s f27, f5, f7, f2, rdn # perform operation
fnmadd.s f27, f5, f7, f2, rmm # perform operation
fnmadd.s f27, f5, f7, f2, rne # perform operation
fnmadd.s f27, f5, f7, f2, rtz # perform operation
fnmadd.s f27, f5, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f7, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x19, 0xc218a300 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x07770af7 # load x3 with value 0x07770af7
sw x3, 0(x2) # store 0x07770af7 in memory
flw f25, 0(x2) # load 0x07770af7 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fnmadd.s f19, f21, f25, f22, dyn # perform operation
fnmadd.s f19, f21, f25, f22, rdn # perform operation
fnmadd.s f19, f21, f25, f22, rmm # perform operation
fnmadd.s f19, f21, f25, f22, rne # perform operation
fnmadd.s f19, f21, f25, f22, rtz # perform operation
fnmadd.s f19, f21, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f21, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x19, 0x7398eaee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x696eb2e0 # load x3 with value 0x696eb2e0
sw x3, 0(x2) # store 0x696eb2e0 in memory
flw f25, 0(x2) # load 0x696eb2e0 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fnmadd.s f19, f29, f25, f7, dyn # perform operation
fnmadd.s f19, f29, f25, f7, rdn # perform operation
fnmadd.s f19, f29, f25, f7, rmm # perform operation
fnmadd.s f19, f29, f25, f7, rne # perform operation
fnmadd.s f19, f29, f25, f7, rtz # perform operation
fnmadd.s f19, f29, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x7, 0xd21d4321 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x1308cb3e # load x3 with value 0x1308cb3e
sw x3, 0(x2) # store 0x1308cb3e in memory
flw f22, 0(x2) # load 0x1308cb3e from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmadd.s f7, f9, f22, f20, dyn # perform operation
fnmadd.s f7, f9, f22, f20, rdn # perform operation
fnmadd.s f7, f9, f22, f20, rmm # perform operation
fnmadd.s f7, f9, f22, f20, rne # perform operation
fnmadd.s f7, f9, f22, f20, rtz # perform operation
fnmadd.s f7, f9, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f9, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f9, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f9, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f9, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f9, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x29, 0x5099a673 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0xeb293199 # load x3 with value 0xeb293199
sw x3, 0(x2) # store 0xeb293199 in memory
flw f6, 0(x2) # load 0xeb293199 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmadd.s f29, f21, f6, f17, dyn # perform operation
fnmadd.s f29, f21, f6, f17, rdn # perform operation
fnmadd.s f29, f21, f6, f17, rmm # perform operation
fnmadd.s f29, f21, f6, f17, rne # perform operation
fnmadd.s f29, f21, f6, f17, rtz # perform operation
fnmadd.s f29, f21, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f21, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f21, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x4, 0xf2a1ffed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xeedf00c5 # load x3 with value 0xeedf00c5
sw x3, 0(x2) # store 0xeedf00c5 in memory
flw f24, 0(x2) # load 0xeedf00c5 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fnmadd.s f4, f16, f24, f11, dyn # perform operation
fnmadd.s f4, f16, f24, f11, rdn # perform operation
fnmadd.s f4, f16, f24, f11, rmm # perform operation
fnmadd.s f4, f16, f24, f11, rne # perform operation
fnmadd.s f4, f16, f24, f11, rtz # perform operation
fnmadd.s f4, f16, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f16, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x17, 0x7c43abc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0xeec70566 # load x3 with value 0xeec70566
sw x3, 0(x2) # store 0xeec70566 in memory
flw f29, 0(x2) # load 0xeec70566 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fnmadd.s f17, f22, f29, f10, dyn # perform operation
fnmadd.s f17, f22, f29, f10, rdn # perform operation
fnmadd.s f17, f22, f29, f10, rmm # perform operation
fnmadd.s f17, f22, f29, f10, rne # perform operation
fnmadd.s f17, f22, f29, f10, rtz # perform operation
fnmadd.s f17, f22, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f22, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f22, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x7, 0xdfe88b70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xa9936889 # load x3 with value 0xa9936889
sw x3, 0(x2) # store 0xa9936889 in memory
flw f27, 0(x2) # load 0xa9936889 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fnmadd.s f7, f2, f27, f12, dyn # perform operation
fnmadd.s f7, f2, f27, f12, rdn # perform operation
fnmadd.s f7, f2, f27, f12, rmm # perform operation
fnmadd.s f7, f2, f27, f12, rne # perform operation
fnmadd.s f7, f2, f27, f12, rtz # perform operation
fnmadd.s f7, f2, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f2, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f2, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f2, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f2, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f2, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x8, 0x4fda553f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xf05cc50e # load x3 with value 0xf05cc50e
sw x3, 0(x2) # store 0xf05cc50e in memory
flw f16, 0(x2) # load 0xf05cc50e from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fnmadd.s f8, f30, f16, f23, dyn # perform operation
fnmadd.s f8, f30, f16, f23, rdn # perform operation
fnmadd.s f8, f30, f16, f23, rmm # perform operation
fnmadd.s f8, f30, f16, f23, rne # perform operation
fnmadd.s f8, f30, f16, f23, rtz # perform operation
fnmadd.s f8, f30, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f30, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x3, 0x3254abcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0xc34eb175 # load x3 with value 0xc34eb175
sw x3, 0(x2) # store 0xc34eb175 in memory
flw f28, 0(x2) # load 0xc34eb175 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmadd.s f3, f18, f28, f5, dyn # perform operation
fnmadd.s f3, f18, f28, f5, rdn # perform operation
fnmadd.s f3, f18, f28, f5, rmm # perform operation
fnmadd.s f3, f18, f28, f5, rne # perform operation
fnmadd.s f3, f18, f28, f5, rtz # perform operation
fnmadd.s f3, f18, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f18, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f18, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f18, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f18, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f18, f28, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x13, 0x3232b67b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x5f48877b # load x3 with value 0x5f48877b
sw x3, 0(x2) # store 0x5f48877b in memory
flw f29, 0(x2) # load 0x5f48877b from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fnmadd.s f13, f11, f29, f22, dyn # perform operation
fnmadd.s f13, f11, f29, f22, rdn # perform operation
fnmadd.s f13, f11, f29, f22, rmm # perform operation
fnmadd.s f13, f11, f29, f22, rne # perform operation
fnmadd.s f13, f11, f29, f22, rtz # perform operation
fnmadd.s f13, f11, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x7, 0xe66fd58b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xa5309960 # load x3 with value 0xa5309960
sw x3, 0(x2) # store 0xa5309960 in memory
flw f8, 0(x2) # load 0xa5309960 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmadd.s f7, f25, f8, f27, dyn # perform operation
fnmadd.s f7, f25, f8, f27, rdn # perform operation
fnmadd.s f7, f25, f8, f27, rmm # perform operation
fnmadd.s f7, f25, f8, f27, rne # perform operation
fnmadd.s f7, f25, f8, f27, rtz # perform operation
fnmadd.s f7, f25, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f25, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f25, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x6, 0xf81e5cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x3cb99856 # load x3 with value 0x3cb99856
sw x3, 0(x2) # store 0x3cb99856 in memory
flw f24, 0(x2) # load 0x3cb99856 from memory into f24
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fnmadd.s f6, f2, f24, f8, dyn # perform operation
fnmadd.s f6, f2, f24, f8, rdn # perform operation
fnmadd.s f6, f2, f24, f8, rmm # perform operation
fnmadd.s f6, f2, f24, f8, rne # perform operation
fnmadd.s f6, f2, f24, f8, rtz # perform operation
fnmadd.s f6, f2, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f2, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f2, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f2, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f2, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f2, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x20, 0x7dcc937e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xa7238e29 # load x3 with value 0xa7238e29
sw x3, 0(x2) # store 0xa7238e29 in memory
flw f4, 0(x2) # load 0xa7238e29 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmadd.s f20, f3, f4, f5, dyn # perform operation
fnmadd.s f20, f3, f4, f5, rdn # perform operation
fnmadd.s f20, f3, f4, f5, rmm # perform operation
fnmadd.s f20, f3, f4, f5, rne # perform operation
fnmadd.s f20, f3, f4, f5, rtz # perform operation
fnmadd.s f20, f3, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f3, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x7, 0x7615d7dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x042ce64a # load x3 with value 0x042ce64a
sw x3, 0(x2) # store 0x042ce64a in memory
flw f12, 0(x2) # load 0x042ce64a from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmadd.s f7, f11, f12, f2, dyn # perform operation
fnmadd.s f7, f11, f12, f2, rdn # perform operation
fnmadd.s f7, f11, f12, f2, rmm # perform operation
fnmadd.s f7, f11, f12, f2, rne # perform operation
fnmadd.s f7, f11, f12, f2, rtz # perform operation
fnmadd.s f7, f11, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f12, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x15, 0x4a1c8428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x01ee193c # load x3 with value 0x01ee193c
sw x3, 0(x2) # store 0x01ee193c in memory
flw f12, 0(x2) # load 0x01ee193c from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fnmadd.s f15, f8, f12, f14, dyn # perform operation
fnmadd.s f15, f8, f12, f14, rdn # perform operation
fnmadd.s f15, f8, f12, f14, rmm # perform operation
fnmadd.s f15, f8, f12, f14, rne # perform operation
fnmadd.s f15, f8, f12, f14, rtz # perform operation
fnmadd.s f15, f8, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x9, 0x14f7419b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x17859c29 # load x3 with value 0x17859c29
sw x3, 0(x2) # store 0x17859c29 in memory
flw f30, 0(x2) # load 0x17859c29 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmadd.s f9, f17, f30, f16, dyn # perform operation
fnmadd.s f9, f17, f30, f16, rdn # perform operation
fnmadd.s f9, f17, f30, f16, rmm # perform operation
fnmadd.s f9, f17, f30, f16, rne # perform operation
fnmadd.s f9, f17, f30, f16, rtz # perform operation
fnmadd.s f9, f17, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f17, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x21, 0x5c8c6484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x64b35fac # load x3 with value 0x64b35fac
sw x3, 0(x2) # store 0x64b35fac in memory
flw f4, 0(x2) # load 0x64b35fac from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f21, f7, f4, f18, dyn # perform operation
fnmadd.s f21, f7, f4, f18, rdn # perform operation
fnmadd.s f21, f7, f4, f18, rmm # perform operation
fnmadd.s f21, f7, f4, f18, rne # perform operation
fnmadd.s f21, f7, f4, f18, rtz # perform operation
fnmadd.s f21, f7, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f7, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f7, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f7, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f7, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f7, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x24, 0x94db834f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0xd64f1a70 # load x3 with value 0xd64f1a70
sw x3, 0(x2) # store 0xd64f1a70 in memory
flw f13, 0(x2) # load 0xd64f1a70 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmadd.s f24, f7, f13, f21, dyn # perform operation
fnmadd.s f24, f7, f13, f21, rdn # perform operation
fnmadd.s f24, f7, f13, f21, rmm # perform operation
fnmadd.s f24, f7, f13, f21, rne # perform operation
fnmadd.s f24, f7, f13, f21, rtz # perform operation
fnmadd.s f24, f7, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f7, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x9, 0x25cb1928 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0xaf73b3ac # load x3 with value 0xaf73b3ac
sw x3, 0(x2) # store 0xaf73b3ac in memory
flw f11, 0(x2) # load 0xaf73b3ac from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fnmadd.s f9, f15, f11, f17, dyn # perform operation
fnmadd.s f9, f15, f11, f17, rdn # perform operation
fnmadd.s f9, f15, f11, f17, rmm # perform operation
fnmadd.s f9, f15, f11, f17, rne # perform operation
fnmadd.s f9, f15, f11, f17, rtz # perform operation
fnmadd.s f9, f15, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x21, 0xbd980cbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x675e8d4e # load x3 with value 0x675e8d4e
sw x3, 0(x2) # store 0x675e8d4e in memory
flw f16, 0(x2) # load 0x675e8d4e from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fnmadd.s f21, f5, f16, f15, dyn # perform operation
fnmadd.s f21, f5, f16, f15, rdn # perform operation
fnmadd.s f21, f5, f16, f15, rmm # perform operation
fnmadd.s f21, f5, f16, f15, rne # perform operation
fnmadd.s f21, f5, f16, f15, rtz # perform operation
fnmadd.s f21, f5, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x24, 0xad5cc63d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x5b496c1f # load x3 with value 0x5b496c1f
sw x3, 0(x2) # store 0x5b496c1f in memory
flw f30, 0(x2) # load 0x5b496c1f from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmadd.s f24, f10, f30, f5, dyn # perform operation
fnmadd.s f24, f10, f30, f5, rdn # perform operation
fnmadd.s f24, f10, f30, f5, rmm # perform operation
fnmadd.s f24, f10, f30, f5, rne # perform operation
fnmadd.s f24, f10, f30, f5, rtz # perform operation
fnmadd.s f24, f10, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f10, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x19, 0xd72aa132 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0xf28ea9bc # load x3 with value 0xf28ea9bc
sw x3, 0(x2) # store 0xf28ea9bc in memory
flw f12, 0(x2) # load 0xf28ea9bc from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fnmadd.s f19, f14, f12, f11, dyn # perform operation
fnmadd.s f19, f14, f12, f11, rdn # perform operation
fnmadd.s f19, f14, f12, f11, rmm # perform operation
fnmadd.s f19, f14, f12, f11, rne # perform operation
fnmadd.s f19, f14, f12, f11, rtz # perform operation
fnmadd.s f19, f14, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x30, 0xc85c2de7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0xaa2c9bf1 # load x3 with value 0xaa2c9bf1
sw x3, 0(x2) # store 0xaa2c9bf1 in memory
flw f29, 0(x2) # load 0xaa2c9bf1 from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fnmadd.s f30, f5, f29, f18, dyn # perform operation
fnmadd.s f30, f5, f29, f18, rdn # perform operation
fnmadd.s f30, f5, f29, f18, rmm # perform operation
fnmadd.s f30, f5, f29, f18, rne # perform operation
fnmadd.s f30, f5, f29, f18, rtz # perform operation
fnmadd.s f30, f5, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f5, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f5, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f5, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f5, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f5, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x2, 0x6b21b252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xaa4d93ad # load x3 with value 0xaa4d93ad
sw x3, 0(x2) # store 0xaa4d93ad in memory
flw f7, 0(x2) # load 0xaa4d93ad from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.s f2, f6, f7, f1, dyn # perform operation
fnmadd.s f2, f6, f7, f1, rdn # perform operation
fnmadd.s f2, f6, f7, f1, rmm # perform operation
fnmadd.s f2, f6, f7, f1, rne # perform operation
fnmadd.s f2, f6, f7, f1, rtz # perform operation
fnmadd.s f2, f6, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x1, 0x9f2b8012 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x9fabbecc # load x3 with value 0x9fabbecc
sw x3, 0(x2) # store 0x9fabbecc in memory
flw f30, 0(x2) # load 0x9fabbecc from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fnmadd.s f1, f4, f30, f14, dyn # perform operation
fnmadd.s f1, f4, f30, f14, rdn # perform operation
fnmadd.s f1, f4, f30, f14, rmm # perform operation
fnmadd.s f1, f4, f30, f14, rne # perform operation
fnmadd.s f1, f4, f30, f14, rtz # perform operation
fnmadd.s f1, f4, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f4, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f4, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x12, 0xa37805fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x5d18d3ec # load x3 with value 0x5d18d3ec
sw x3, 0(x2) # store 0x5d18d3ec in memory
flw f6, 0(x2) # load 0x5d18d3ec from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmadd.s f12, f14, f6, f22, dyn # perform operation
fnmadd.s f12, f14, f6, f22, rdn # perform operation
fnmadd.s f12, f14, f6, f22, rmm # perform operation
fnmadd.s f12, f14, f6, f22, rne # perform operation
fnmadd.s f12, f14, f6, f22, rtz # perform operation
fnmadd.s f12, f14, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x22, 0xf9c29be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x30021b31 # load x3 with value 0x30021b31
sw x3, 0(x2) # store 0x30021b31 in memory
flw f24, 0(x2) # load 0x30021b31 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmadd.s f22, f18, f24, f9, dyn # perform operation
fnmadd.s f22, f18, f24, f9, rdn # perform operation
fnmadd.s f22, f18, f24, f9, rmm # perform operation
fnmadd.s f22, f18, f24, f9, rne # perform operation
fnmadd.s f22, f18, f24, f9, rtz # perform operation
fnmadd.s f22, f18, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x17, 0x099ae010 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0xb544b869 # load x3 with value 0xb544b869
sw x3, 0(x2) # store 0xb544b869 in memory
flw f7, 0(x2) # load 0xb544b869 from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmadd.s f17, f2, f7, f8, dyn # perform operation
fnmadd.s f17, f2, f7, f8, rdn # perform operation
fnmadd.s f17, f2, f7, f8, rmm # perform operation
fnmadd.s f17, f2, f7, f8, rne # perform operation
fnmadd.s f17, f2, f7, f8, rtz # perform operation
fnmadd.s f17, f2, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x5, 0x8345eaa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x8a71c0d8 # load x3 with value 0x8a71c0d8
sw x3, 0(x2) # store 0x8a71c0d8 in memory
flw f12, 0(x2) # load 0x8a71c0d8 from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f5, f11, f12, f22, dyn # perform operation
fnmadd.s f5, f11, f12, f22, rdn # perform operation
fnmadd.s f5, f11, f12, f22, rmm # perform operation
fnmadd.s f5, f11, f12, f22, rne # perform operation
fnmadd.s f5, f11, f12, f22, rtz # perform operation
fnmadd.s f5, f11, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f11, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f11, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x15, 0x454e0951 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0xbf6906b6 # load x3 with value 0xbf6906b6
sw x3, 0(x2) # store 0xbf6906b6 in memory
flw f4, 0(x2) # load 0xbf6906b6 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fnmadd.s f15, f1, f4, f30, dyn # perform operation
fnmadd.s f15, f1, f4, f30, rdn # perform operation
fnmadd.s f15, f1, f4, f30, rmm # perform operation
fnmadd.s f15, f1, f4, f30, rne # perform operation
fnmadd.s f15, f1, f4, f30, rtz # perform operation
fnmadd.s f15, f1, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x24, 0xc70a1482 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0xfb2fa8fd # load x3 with value 0xfb2fa8fd
sw x3, 0(x2) # store 0xfb2fa8fd in memory
flw f27, 0(x2) # load 0xfb2fa8fd from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmadd.s f24, f2, f27, f17, dyn # perform operation
fnmadd.s f24, f2, f27, f17, rdn # perform operation
fnmadd.s f24, f2, f27, f17, rmm # perform operation
fnmadd.s f24, f2, f27, f17, rne # perform operation
fnmadd.s f24, f2, f27, f17, rtz # perform operation
fnmadd.s f24, f2, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f2, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x31, 0xfa83c884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x5e0d0c3d # load x3 with value 0x5e0d0c3d
sw x3, 0(x2) # store 0x5e0d0c3d in memory
flw f29, 0(x2) # load 0x5e0d0c3d from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fnmadd.s f31, f8, f29, f10, dyn # perform operation
fnmadd.s f31, f8, f29, f10, rdn # perform operation
fnmadd.s f31, f8, f29, f10, rmm # perform operation
fnmadd.s f31, f8, f29, f10, rne # perform operation
fnmadd.s f31, f8, f29, f10, rtz # perform operation
fnmadd.s f31, f8, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f8, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f8, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f8, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f8, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f8, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x1, 0x9d859e8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x5a69905d # load x3 with value 0x5a69905d
sw x3, 0(x2) # store 0x5a69905d in memory
flw f26, 0(x2) # load 0x5a69905d from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fnmadd.s f1, f17, f26, f6, dyn # perform operation
fnmadd.s f1, f17, f26, f6, rdn # perform operation
fnmadd.s f1, f17, f26, f6, rmm # perform operation
fnmadd.s f1, f17, f26, f6, rne # perform operation
fnmadd.s f1, f17, f26, f6, rtz # perform operation
fnmadd.s f1, f17, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f17, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x4, 0xb6dcf834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x31ca6db9 # load x3 with value 0x31ca6db9
sw x3, 0(x2) # store 0x31ca6db9 in memory
flw f9, 0(x2) # load 0x31ca6db9 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.s f4, f27, f9, f19, dyn # perform operation
fnmadd.s f4, f27, f9, f19, rdn # perform operation
fnmadd.s f4, f27, f9, f19, rmm # perform operation
fnmadd.s f4, f27, f9, f19, rne # perform operation
fnmadd.s f4, f27, f9, f19, rtz # perform operation
fnmadd.s f4, f27, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f27, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x16, 0xe02c61af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x39ab9371 # load x3 with value 0x39ab9371
sw x3, 0(x2) # store 0x39ab9371 in memory
flw f17, 0(x2) # load 0x39ab9371 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fnmadd.s f16, f15, f17, f31, dyn # perform operation
fnmadd.s f16, f15, f17, f31, rdn # perform operation
fnmadd.s f16, f15, f17, f31, rmm # perform operation
fnmadd.s f16, f15, f17, f31, rne # perform operation
fnmadd.s f16, f15, f17, f31, rtz # perform operation
fnmadd.s f16, f15, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f17, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x15, 0x128026f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x58e1c25f # load x3 with value 0x58e1c25f
sw x3, 0(x2) # store 0x58e1c25f in memory
flw f19, 0(x2) # load 0x58e1c25f from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmadd.s f15, f29, f19, f27, dyn # perform operation
fnmadd.s f15, f29, f19, f27, rdn # perform operation
fnmadd.s f15, f29, f19, f27, rmm # perform operation
fnmadd.s f15, f29, f19, f27, rne # perform operation
fnmadd.s f15, f29, f19, f27, rtz # perform operation
fnmadd.s f15, f29, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x20, 0x45819665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xab6fa63f # load x3 with value 0xab6fa63f
sw x3, 0(x2) # store 0xab6fa63f in memory
flw f11, 0(x2) # load 0xab6fa63f from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f20, f24, f11, f18, dyn # perform operation
fnmadd.s f20, f24, f11, f18, rdn # perform operation
fnmadd.s f20, f24, f11, f18, rmm # perform operation
fnmadd.s f20, f24, f11, f18, rne # perform operation
fnmadd.s f20, f24, f11, f18, rtz # perform operation
fnmadd.s f20, f24, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f24, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x25, 0x7d06a587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x1f85c27f # load x3 with value 0x1f85c27f
sw x3, 0(x2) # store 0x1f85c27f in memory
flw f30, 0(x2) # load 0x1f85c27f from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmadd.s f25, f6, f30, f28, dyn # perform operation
fnmadd.s f25, f6, f30, f28, rdn # perform operation
fnmadd.s f25, f6, f30, f28, rmm # perform operation
fnmadd.s f25, f6, f30, f28, rne # perform operation
fnmadd.s f25, f6, f30, f28, rtz # perform operation
fnmadd.s f25, f6, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x14, 0x29160480 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x6428f229 # load x3 with value 0x6428f229
sw x3, 0(x2) # store 0x6428f229 in memory
flw f21, 0(x2) # load 0x6428f229 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmadd.s f14, f1, f21, f8, dyn # perform operation
fnmadd.s f14, f1, f21, f8, rdn # perform operation
fnmadd.s f14, f1, f21, f8, rmm # perform operation
fnmadd.s f14, f1, f21, f8, rne # perform operation
fnmadd.s f14, f1, f21, f8, rtz # perform operation
fnmadd.s f14, f1, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x20, 0x3d0298b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xae4d0ece # load x3 with value 0xae4d0ece
sw x3, 0(x2) # store 0xae4d0ece in memory
flw f9, 0(x2) # load 0xae4d0ece from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fnmadd.s f20, f11, f9, f27, dyn # perform operation
fnmadd.s f20, f11, f9, f27, rdn # perform operation
fnmadd.s f20, f11, f9, f27, rmm # perform operation
fnmadd.s f20, f11, f9, f27, rne # perform operation
fnmadd.s f20, f11, f9, f27, rtz # perform operation
fnmadd.s f20, f11, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f11, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f11, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f11, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f11, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f11, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x31, 0x47ba24cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xdc2526eb # load x3 with value 0xdc2526eb
sw x3, 0(x2) # store 0xdc2526eb in memory
flw f10, 0(x2) # load 0xdc2526eb from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fnmadd.s f31, f22, f10, f18, dyn # perform operation
fnmadd.s f31, f22, f10, f18, rdn # perform operation
fnmadd.s f31, f22, f10, f18, rmm # perform operation
fnmadd.s f31, f22, f10, f18, rne # perform operation
fnmadd.s f31, f22, f10, f18, rtz # perform operation
fnmadd.s f31, f22, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f22, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f22, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f22, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f22, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f22, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x25, 0x5d32cc26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0xd2804ce3 # load x3 with value 0xd2804ce3
sw x3, 0(x2) # store 0xd2804ce3 in memory
flw f29, 0(x2) # load 0xd2804ce3 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fnmadd.s f25, f12, f29, f28, dyn # perform operation
fnmadd.s f25, f12, f29, f28, rdn # perform operation
fnmadd.s f25, f12, f29, f28, rmm # perform operation
fnmadd.s f25, f12, f29, f28, rne # perform operation
fnmadd.s f25, f12, f29, f28, rtz # perform operation
fnmadd.s f25, f12, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x19, 0x53563b70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xc3198aab # load x3 with value 0xc3198aab
sw x3, 0(x2) # store 0xc3198aab in memory
flw f15, 0(x2) # load 0xc3198aab from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmadd.s f19, f24, f15, f12, dyn # perform operation
fnmadd.s f19, f24, f15, f12, rdn # perform operation
fnmadd.s f19, f24, f15, f12, rmm # perform operation
fnmadd.s f19, f24, f15, f12, rne # perform operation
fnmadd.s f19, f24, f15, f12, rtz # perform operation
fnmadd.s f19, f24, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x15, 0xbf1683a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x0a61fc0f # load x3 with value 0x0a61fc0f
sw x3, 0(x2) # store 0x0a61fc0f in memory
flw f5, 0(x2) # load 0x0a61fc0f from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmadd.s f15, f17, f5, f29, dyn # perform operation
fnmadd.s f15, f17, f5, f29, rdn # perform operation
fnmadd.s f15, f17, f5, f29, rmm # perform operation
fnmadd.s f15, f17, f5, f29, rne # perform operation
fnmadd.s f15, f17, f5, f29, rtz # perform operation
fnmadd.s f15, f17, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f17, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f17, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f17, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f17, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f17, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x2, 0xa0476245 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x686092db # load x3 with value 0x686092db
sw x3, 0(x2) # store 0x686092db in memory
flw f9, 0(x2) # load 0x686092db from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fnmadd.s f2, f4, f9, f6, dyn # perform operation
fnmadd.s f2, f4, f9, f6, rdn # perform operation
fnmadd.s f2, f4, f9, f6, rmm # perform operation
fnmadd.s f2, f4, f9, f6, rne # perform operation
fnmadd.s f2, f4, f9, f6, rtz # perform operation
fnmadd.s f2, f4, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f4, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f4, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x23, 0x9837dbe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x964065ca # load x3 with value 0x964065ca
sw x3, 0(x2) # store 0x964065ca in memory
flw f26, 0(x2) # load 0x964065ca from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
fnmadd.s f23, f20, f26, f4, dyn # perform operation
fnmadd.s f23, f20, f26, f4, rdn # perform operation
fnmadd.s f23, f20, f26, f4, rmm # perform operation
fnmadd.s f23, f20, f26, f4, rne # perform operation
fnmadd.s f23, f20, f26, f4, rtz # perform operation
fnmadd.s f23, f20, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x7, 0xb45acfeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xa384c6eb # load x3 with value 0xa384c6eb
sw x3, 0(x2) # store 0xa384c6eb in memory
flw f18, 0(x2) # load 0xa384c6eb from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f7, f15, f18, f9, dyn # perform operation
fnmadd.s f7, f15, f18, f9, rdn # perform operation
fnmadd.s f7, f15, f18, f9, rmm # perform operation
fnmadd.s f7, f15, f18, f9, rne # perform operation
fnmadd.s f7, f15, f18, f9, rtz # perform operation
fnmadd.s f7, f15, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x23, 0xb364b3ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x56b891de # load x3 with value 0x56b891de
sw x3, 0(x2) # store 0x56b891de in memory
flw f26, 0(x2) # load 0x56b891de from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmadd.s f23, f28, f26, f21, dyn # perform operation
fnmadd.s f23, f28, f26, f21, rdn # perform operation
fnmadd.s f23, f28, f26, f21, rmm # perform operation
fnmadd.s f23, f28, f26, f21, rne # perform operation
fnmadd.s f23, f28, f26, f21, rtz # perform operation
fnmadd.s f23, f28, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f28, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f28, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f28, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f28, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f28, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x3, 0xb0e8ea46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xd7a0f068 # load x3 with value 0xd7a0f068
sw x3, 0(x2) # store 0xd7a0f068 in memory
flw f19, 0(x2) # load 0xd7a0f068 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmadd.s f3, f30, f19, f20, dyn # perform operation
fnmadd.s f3, f30, f19, f20, rdn # perform operation
fnmadd.s f3, f30, f19, f20, rmm # perform operation
fnmadd.s f3, f30, f19, f20, rne # perform operation
fnmadd.s f3, f30, f19, f20, rtz # perform operation
fnmadd.s f3, f30, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x11, 0x27ab3e3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xccd7310f # load x3 with value 0xccd7310f
sw x3, 0(x2) # store 0xccd7310f in memory
flw f6, 0(x2) # load 0xccd7310f from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fnmadd.s f11, f24, f6, f4, dyn # perform operation
fnmadd.s f11, f24, f6, f4, rdn # perform operation
fnmadd.s f11, f24, f6, f4, rmm # perform operation
fnmadd.s f11, f24, f6, f4, rne # perform operation
fnmadd.s f11, f24, f6, f4, rtz # perform operation
fnmadd.s f11, f24, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f24, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x18, 0x00e4b359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xe82a1e24 # load x3 with value 0xe82a1e24
sw x3, 0(x2) # store 0xe82a1e24 in memory
flw f20, 0(x2) # load 0xe82a1e24 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmadd.s f18, f11, f20, f9, dyn # perform operation
fnmadd.s f18, f11, f20, f9, rdn # perform operation
fnmadd.s f18, f11, f20, f9, rmm # perform operation
fnmadd.s f18, f11, f20, f9, rne # perform operation
fnmadd.s f18, f11, f20, f9, rtz # perform operation
fnmadd.s f18, f11, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x17, 0x36c4f6ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0xaac69ded # load x3 with value 0xaac69ded
sw x3, 0(x2) # store 0xaac69ded in memory
flw f12, 0(x2) # load 0xaac69ded from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fnmadd.s f17, f7, f12, f18, dyn # perform operation
fnmadd.s f17, f7, f12, f18, rdn # perform operation
fnmadd.s f17, f7, f12, f18, rmm # perform operation
fnmadd.s f17, f7, f12, f18, rne # perform operation
fnmadd.s f17, f7, f12, f18, rtz # perform operation
fnmadd.s f17, f7, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x25, 0xbb028db4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xe932b947 # load x3 with value 0xe932b947
sw x3, 0(x2) # store 0xe932b947 in memory
flw f8, 0(x2) # load 0xe932b947 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmadd.s f25, f11, f8, f15, dyn # perform operation
fnmadd.s f25, f11, f8, f15, rdn # perform operation
fnmadd.s f25, f11, f8, f15, rmm # perform operation
fnmadd.s f25, f11, f8, f15, rne # perform operation
fnmadd.s f25, f11, f8, f15, rtz # perform operation
fnmadd.s f25, f11, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f11, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f11, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f11, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f11, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f11, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x3, 0xf53415e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x805c1bad # load x3 with value 0x805c1bad
sw x3, 0(x2) # store 0x805c1bad in memory
flw f30, 0(x2) # load 0x805c1bad from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmadd.s f3, f16, f30, f9, dyn # perform operation
fnmadd.s f3, f16, f30, f9, rdn # perform operation
fnmadd.s f3, f16, f30, f9, rmm # perform operation
fnmadd.s f3, f16, f30, f9, rne # perform operation
fnmadd.s f3, f16, f30, f9, rtz # perform operation
fnmadd.s f3, f16, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f16, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x16, 0x01146f5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x6e3e6747 # load x3 with value 0x6e3e6747
sw x3, 0(x2) # store 0x6e3e6747 in memory
flw f21, 0(x2) # load 0x6e3e6747 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmadd.s f16, f22, f21, f14, dyn # perform operation
fnmadd.s f16, f22, f21, f14, rdn # perform operation
fnmadd.s f16, f22, f21, f14, rmm # perform operation
fnmadd.s f16, f22, f21, f14, rne # perform operation
fnmadd.s f16, f22, f21, f14, rtz # perform operation
fnmadd.s f16, f22, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f22, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x28, 0x24d20888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xf3afd39b # load x3 with value 0xf3afd39b
sw x3, 0(x2) # store 0xf3afd39b in memory
flw f4, 0(x2) # load 0xf3afd39b from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fnmadd.s f28, f26, f4, f14, dyn # perform operation
fnmadd.s f28, f26, f4, f14, rdn # perform operation
fnmadd.s f28, f26, f4, f14, rmm # perform operation
fnmadd.s f28, f26, f4, f14, rne # perform operation
fnmadd.s f28, f26, f4, f14, rtz # perform operation
fnmadd.s f28, f26, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f4, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x31, 0x62d10995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xf6df9ac7 # load x3 with value 0xf6df9ac7
sw x3, 0(x2) # store 0xf6df9ac7 in memory
flw f9, 0(x2) # load 0xf6df9ac7 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fnmadd.s f31, f30, f9, f5, dyn # perform operation
fnmadd.s f31, f30, f9, f5, rdn # perform operation
fnmadd.s f31, f30, f9, f5, rmm # perform operation
fnmadd.s f31, f30, f9, f5, rne # perform operation
fnmadd.s f31, f30, f9, f5, rtz # perform operation
fnmadd.s f31, f30, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x3, 0x798a63c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xaa21e535 # load x3 with value 0xaa21e535
sw x3, 0(x2) # store 0xaa21e535 in memory
flw f11, 0(x2) # load 0xaa21e535 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
fnmadd.s f3, f8, f11, f4, dyn # perform operation
fnmadd.s f3, f8, f11, f4, rdn # perform operation
fnmadd.s f3, f8, f11, f4, rmm # perform operation
fnmadd.s f3, f8, f11, f4, rne # perform operation
fnmadd.s f3, f8, f11, f4, rtz # perform operation
fnmadd.s f3, f8, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f8, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f8, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f8, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f8, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f8, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x28, 0xfddc91c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x7adfca77 # load x3 with value 0x7adfca77
sw x3, 0(x2) # store 0x7adfca77 in memory
flw f18, 0(x2) # load 0x7adfca77 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmadd.s f28, f21, f18, f14, dyn # perform operation
fnmadd.s f28, f21, f18, f14, rdn # perform operation
fnmadd.s f28, f21, f18, f14, rmm # perform operation
fnmadd.s f28, f21, f18, f14, rne # perform operation
fnmadd.s f28, f21, f18, f14, rtz # perform operation
fnmadd.s f28, f21, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x7, 0x7893b6e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x84a6acee # load x3 with value 0x84a6acee
sw x3, 0(x2) # store 0x84a6acee in memory
flw f4, 0(x2) # load 0x84a6acee from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fnmadd.s f7, f18, f4, f20, dyn # perform operation
fnmadd.s f7, f18, f4, f20, rdn # perform operation
fnmadd.s f7, f18, f4, f20, rmm # perform operation
fnmadd.s f7, f18, f4, f20, rne # perform operation
fnmadd.s f7, f18, f4, f20, rtz # perform operation
fnmadd.s f7, f18, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f18, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f18, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f18, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f18, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f18, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x1, 0x6b5b3c5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x86bb76e1 # load x3 with value 0x86bb76e1
sw x3, 0(x2) # store 0x86bb76e1 in memory
flw f5, 0(x2) # load 0x86bb76e1 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fnmadd.s f1, f15, f5, f29, dyn # perform operation
fnmadd.s f1, f15, f5, f29, rdn # perform operation
fnmadd.s f1, f15, f5, f29, rmm # perform operation
fnmadd.s f1, f15, f5, f29, rne # perform operation
fnmadd.s f1, f15, f5, f29, rtz # perform operation
fnmadd.s f1, f15, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f15, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x6, 0x018485a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xe86d5811 # load x3 with value 0xe86d5811
sw x3, 0(x2) # store 0xe86d5811 in memory
flw f2, 0(x2) # load 0xe86d5811 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmadd.s f6, f12, f2, f29, dyn # perform operation
fnmadd.s f6, f12, f2, f29, rdn # perform operation
fnmadd.s f6, f12, f2, f29, rmm # perform operation
fnmadd.s f6, f12, f2, f29, rne # perform operation
fnmadd.s f6, f12, f2, f29, rtz # perform operation
fnmadd.s f6, f12, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x29, 0xa5f63ced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xeb2896c4 # load x3 with value 0xeb2896c4
sw x3, 0(x2) # store 0xeb2896c4 in memory
flw f1, 0(x2) # load 0xeb2896c4 from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmadd.s f29, f15, f1, f2, dyn # perform operation
fnmadd.s f29, f15, f1, f2, rdn # perform operation
fnmadd.s f29, f15, f1, f2, rmm # perform operation
fnmadd.s f29, f15, f1, f2, rne # perform operation
fnmadd.s f29, f15, f1, f2, rtz # perform operation
fnmadd.s f29, f15, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x2, 0xc16acfb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x1bf80894 # load x3 with value 0x1bf80894
sw x3, 0(x2) # store 0x1bf80894 in memory
flw f28, 0(x2) # load 0x1bf80894 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fnmadd.s f2, f22, f28, f31, dyn # perform operation
fnmadd.s f2, f22, f28, f31, rdn # perform operation
fnmadd.s f2, f22, f28, f31, rmm # perform operation
fnmadd.s f2, f22, f28, f31, rne # perform operation
fnmadd.s f2, f22, f28, f31, rtz # perform operation
fnmadd.s f2, f22, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f22, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x10, 0x68ff1f69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0xdaf8241d # load x3 with value 0xdaf8241d
sw x3, 0(x2) # store 0xdaf8241d in memory
flw f25, 0(x2) # load 0xdaf8241d from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fnmadd.s f10, f5, f25, f29, dyn # perform operation
fnmadd.s f10, f5, f25, f29, rdn # perform operation
fnmadd.s f10, f5, f25, f29, rmm # perform operation
fnmadd.s f10, f5, f25, f29, rne # perform operation
fnmadd.s f10, f5, f25, f29, rtz # perform operation
fnmadd.s f10, f5, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x3, 0x990cbc91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x959b52d7 # load x3 with value 0x959b52d7
sw x3, 0(x2) # store 0x959b52d7 in memory
flw f5, 0(x2) # load 0x959b52d7 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fnmadd.s f3, f4, f5, f15, dyn # perform operation
fnmadd.s f3, f4, f5, f15, rdn # perform operation
fnmadd.s f3, f4, f5, f15, rmm # perform operation
fnmadd.s f3, f4, f5, f15, rne # perform operation
fnmadd.s f3, f4, f5, f15, rtz # perform operation
fnmadd.s f3, f4, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f4, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f4, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f4, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f4, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f4, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x20, 0xa5439be2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xfc1902ae # load x3 with value 0xfc1902ae
sw x3, 0(x2) # store 0xfc1902ae in memory
flw f8, 0(x2) # load 0xfc1902ae from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fnmadd.s f20, f28, f8, f6, dyn # perform operation
fnmadd.s f20, f28, f8, f6, rdn # perform operation
fnmadd.s f20, f28, f8, f6, rmm # perform operation
fnmadd.s f20, f28, f8, f6, rne # perform operation
fnmadd.s f20, f28, f8, f6, rtz # perform operation
fnmadd.s f20, f28, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x25, 0x19deb5b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xb785ddd1 # load x3 with value 0xb785ddd1
sw x3, 0(x2) # store 0xb785ddd1 in memory
flw f15, 0(x2) # load 0xb785ddd1 from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmadd.s f25, f12, f15, f26, dyn # perform operation
fnmadd.s f25, f12, f15, f26, rdn # perform operation
fnmadd.s f25, f12, f15, f26, rmm # perform operation
fnmadd.s f25, f12, f15, f26, rne # perform operation
fnmadd.s f25, f12, f15, f26, rtz # perform operation
fnmadd.s f25, f12, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x22, 0x86387918 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xf9288a0a # load x3 with value 0xf9288a0a
sw x3, 0(x2) # store 0xf9288a0a in memory
flw f19, 0(x2) # load 0xf9288a0a from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmadd.s f22, f27, f19, f12, dyn # perform operation
fnmadd.s f22, f27, f19, f12, rdn # perform operation
fnmadd.s f22, f27, f19, f12, rmm # perform operation
fnmadd.s f22, f27, f19, f12, rne # perform operation
fnmadd.s f22, f27, f19, f12, rtz # perform operation
fnmadd.s f22, f27, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f27, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f27, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f27, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f27, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f27, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x16, 0x4c813296 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x60462fd8 # load x3 with value 0x60462fd8
sw x3, 0(x2) # store 0x60462fd8 in memory
flw f9, 0(x2) # load 0x60462fd8 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
fnmadd.s f16, f20, f9, f13, dyn # perform operation
fnmadd.s f16, f20, f9, f13, rdn # perform operation
fnmadd.s f16, f20, f9, f13, rmm # perform operation
fnmadd.s f16, f20, f9, f13, rne # perform operation
fnmadd.s f16, f20, f9, f13, rtz # perform operation
fnmadd.s f16, f20, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x2, 0xdac3c634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xe7974d73 # load x3 with value 0xe7974d73
sw x3, 0(x2) # store 0xe7974d73 in memory
flw f23, 0(x2) # load 0xe7974d73 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmadd.s f2, f15, f23, f14, dyn # perform operation
fnmadd.s f2, f15, f23, f14, rdn # perform operation
fnmadd.s f2, f15, f23, f14, rmm # perform operation
fnmadd.s f2, f15, f23, f14, rne # perform operation
fnmadd.s f2, f15, f23, f14, rtz # perform operation
fnmadd.s f2, f15, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f15, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f15, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f15, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f15, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f15, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x5, 0xa8c71723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x3d89475b # load x3 with value 0x3d89475b
sw x3, 0(x2) # store 0x3d89475b in memory
flw f27, 0(x2) # load 0x3d89475b from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fnmadd.s f5, f6, f27, f28, dyn # perform operation
fnmadd.s f5, f6, f27, f28, rdn # perform operation
fnmadd.s f5, f6, f27, f28, rmm # perform operation
fnmadd.s f5, f6, f27, f28, rne # perform operation
fnmadd.s f5, f6, f27, f28, rtz # perform operation
fnmadd.s f5, f6, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f6, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f6, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f6, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f6, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f6, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x26, 0x231c02f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x0cc87be4 # load x3 with value 0x0cc87be4
sw x3, 0(x2) # store 0x0cc87be4 in memory
flw f5, 0(x2) # load 0x0cc87be4 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fnmadd.s f26, f7, f5, f10, dyn # perform operation
fnmadd.s f26, f7, f5, f10, rdn # perform operation
fnmadd.s f26, f7, f5, f10, rmm # perform operation
fnmadd.s f26, f7, f5, f10, rne # perform operation
fnmadd.s f26, f7, f5, f10, rtz # perform operation
fnmadd.s f26, f7, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x20, 0x16fe8dc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x78a8e251 # load x3 with value 0x78a8e251
sw x3, 0(x2) # store 0x78a8e251 in memory
flw f27, 0(x2) # load 0x78a8e251 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fnmadd.s f20, f10, f27, f5, dyn # perform operation
fnmadd.s f20, f10, f27, f5, rdn # perform operation
fnmadd.s f20, f10, f27, f5, rmm # perform operation
fnmadd.s f20, f10, f27, f5, rne # perform operation
fnmadd.s f20, f10, f27, f5, rtz # perform operation
fnmadd.s f20, f10, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f10, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f10, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f10, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f10, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f10, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x29, 0xedbd6e76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x8d1ce150 # load x3 with value 0x8d1ce150
sw x3, 0(x2) # store 0x8d1ce150 in memory
flw f26, 0(x2) # load 0x8d1ce150 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmadd.s f29, f19, f26, f16, dyn # perform operation
fnmadd.s f29, f19, f26, f16, rdn # perform operation
fnmadd.s f29, f19, f26, f16, rmm # perform operation
fnmadd.s f29, f19, f26, f16, rne # perform operation
fnmadd.s f29, f19, f26, f16, rtz # perform operation
fnmadd.s f29, f19, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f19, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x26, 0x582f8e76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x3b541f11 # load x3 with value 0x3b541f11
sw x3, 0(x2) # store 0x3b541f11 in memory
flw f20, 0(x2) # load 0x3b541f11 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmadd.s f26, f11, f20, f18, dyn # perform operation
fnmadd.s f26, f11, f20, f18, rdn # perform operation
fnmadd.s f26, f11, f20, f18, rmm # perform operation
fnmadd.s f26, f11, f20, f18, rne # perform operation
fnmadd.s f26, f11, f20, f18, rtz # perform operation
fnmadd.s f26, f11, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f11, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x14, 0xa3b1b476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x6bd302b9 # load x3 with value 0x6bd302b9
sw x3, 0(x2) # store 0x6bd302b9 in memory
flw f30, 0(x2) # load 0x6bd302b9 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmadd.s f14, f3, f30, f25, dyn # perform operation
fnmadd.s f14, f3, f30, f25, rdn # perform operation
fnmadd.s f14, f3, f30, f25, rmm # perform operation
fnmadd.s f14, f3, f30, f25, rne # perform operation
fnmadd.s f14, f3, f30, f25, rtz # perform operation
fnmadd.s f14, f3, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f3, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x3, 0x082ac67a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x9ef6c27a # load x3 with value 0x9ef6c27a
sw x3, 0(x2) # store 0x9ef6c27a in memory
flw f5, 0(x2) # load 0x9ef6c27a from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fnmadd.s f3, f28, f5, f7, dyn # perform operation
fnmadd.s f3, f28, f5, f7, rdn # perform operation
fnmadd.s f3, f28, f5, f7, rmm # perform operation
fnmadd.s f3, f28, f5, f7, rne # perform operation
fnmadd.s f3, f28, f5, f7, rtz # perform operation
fnmadd.s f3, f28, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f28, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f28, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f28, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f28, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f28, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x26, 0x49a67c7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xa25f5422 # load x3 with value 0xa25f5422
sw x3, 0(x2) # store 0xa25f5422 in memory
flw f27, 0(x2) # load 0xa25f5422 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmadd.s f26, f25, f27, f31, dyn # perform operation
fnmadd.s f26, f25, f27, f31, rdn # perform operation
fnmadd.s f26, f25, f27, f31, rmm # perform operation
fnmadd.s f26, f25, f27, f31, rne # perform operation
fnmadd.s f26, f25, f27, f31, rtz # perform operation
fnmadd.s f26, f25, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f25, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x18, 0x5d9c2cae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x5c7f34d9 # load x3 with value 0x5c7f34d9
sw x3, 0(x2) # store 0x5c7f34d9 in memory
flw f9, 0(x2) # load 0x5c7f34d9 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmadd.s f18, f14, f9, f1, dyn # perform operation
fnmadd.s f18, f14, f9, f1, rdn # perform operation
fnmadd.s f18, f14, f9, f1, rmm # perform operation
fnmadd.s f18, f14, f9, f1, rne # perform operation
fnmadd.s f18, f14, f9, f1, rtz # perform operation
fnmadd.s f18, f14, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x3, 0x5ba0e850 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0xcd316387 # load x3 with value 0xcd316387
sw x3, 0(x2) # store 0xcd316387 in memory
flw f6, 0(x2) # load 0xcd316387 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fnmadd.s f3, f18, f6, f23, dyn # perform operation
fnmadd.s f3, f18, f6, f23, rdn # perform operation
fnmadd.s f3, f18, f6, f23, rmm # perform operation
fnmadd.s f3, f18, f6, f23, rne # perform operation
fnmadd.s f3, f18, f6, f23, rtz # perform operation
fnmadd.s f3, f18, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f18, f6, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x22, 0x88919f7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0xb1e4d0dc # load x3 with value 0xb1e4d0dc
sw x3, 0(x2) # store 0xb1e4d0dc in memory
flw f19, 0(x2) # load 0xb1e4d0dc from memory into f19
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmadd.s f22, f20, f19, f1, dyn # perform operation
fnmadd.s f22, f20, f19, f1, rdn # perform operation
fnmadd.s f22, f20, f19, f1, rmm # perform operation
fnmadd.s f22, f20, f19, f1, rne # perform operation
fnmadd.s f22, f20, f19, f1, rtz # perform operation
fnmadd.s f22, f20, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x2, 0x37ec15ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xe5efbd39 # load x3 with value 0xe5efbd39
sw x3, 0(x2) # store 0xe5efbd39 in memory
flw f3, 0(x2) # load 0xe5efbd39 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmadd.s f2, f15, f3, f20, dyn # perform operation
fnmadd.s f2, f15, f3, f20, rdn # perform operation
fnmadd.s f2, f15, f3, f20, rmm # perform operation
fnmadd.s f2, f15, f3, f20, rne # perform operation
fnmadd.s f2, f15, f3, f20, rtz # perform operation
fnmadd.s f2, f15, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f15, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f15, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f15, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f15, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f15, f3, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x8, 0xba74f3b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x0e3da86f # load x3 with value 0x0e3da86f
sw x3, 0(x2) # store 0x0e3da86f in memory
flw f26, 0(x2) # load 0x0e3da86f from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fnmadd.s f8, f25, f26, f15, dyn # perform operation
fnmadd.s f8, f25, f26, f15, rdn # perform operation
fnmadd.s f8, f25, f26, f15, rmm # perform operation
fnmadd.s f8, f25, f26, f15, rne # perform operation
fnmadd.s f8, f25, f26, f15, rtz # perform operation
fnmadd.s f8, f25, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f25, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x6, 0x8849a533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x8d963962 # load x3 with value 0x8d963962
sw x3, 0(x2) # store 0x8d963962 in memory
flw f7, 0(x2) # load 0x8d963962 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmadd.s f6, f27, f7, f11, dyn # perform operation
fnmadd.s f6, f27, f7, f11, rdn # perform operation
fnmadd.s f6, f27, f7, f11, rmm # perform operation
fnmadd.s f6, f27, f7, f11, rne # perform operation
fnmadd.s f6, f27, f7, f11, rtz # perform operation
fnmadd.s f6, f27, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f27, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f27, f7, f11 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x01d6f765 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d197a29 # load x3 with value 0x9d197a29
sw x3, 0(x2) # store 0x9d197a29 in memory
flw f22, 0(x2) # load 0x9d197a29 from memory into f22
li x3, 0xc535a2e2 # load x3 with value 0xc535a2e2
sw x3, 0(x2) # store 0xc535a2e2 in memory
flw f18, 0(x2) # load 0xc535a2e2 from memory into f18
li x3, 0x9dad6ede # load x3 with value 0x9dad6ede
sw x3, 0(x2) # store 0x9dad6ede in memory
flw f4, 0(x2) # load 0x9dad6ede from memory into f4
fnmadd.s f0, f22, f18, f4 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0xc5e04d56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa38e16df # load x3 with value 0xa38e16df
sw x3, 0(x2) # store 0xa38e16df in memory
flw f30, 0(x2) # load 0xa38e16df from memory into f30
li x3, 0x8865559b # load x3 with value 0x8865559b
sw x3, 0(x2) # store 0x8865559b in memory
flw f15, 0(x2) # load 0x8865559b from memory into f15
li x3, 0xd5ddb144 # load x3 with value 0xd5ddb144
sw x3, 0(x2) # store 0xd5ddb144 in memory
flw f27, 0(x2) # load 0xd5ddb144 from memory into f27
fnmadd.s f1, f30, f15, f27 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x7a2ec6c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4194aa6e # load x3 with value 0x4194aa6e
sw x3, 0(x2) # store 0x4194aa6e in memory
flw f4, 0(x2) # load 0x4194aa6e from memory into f4
li x3, 0x389cd3d2 # load x3 with value 0x389cd3d2
sw x3, 0(x2) # store 0x389cd3d2 in memory
flw f8, 0(x2) # load 0x389cd3d2 from memory into f8
li x3, 0x4268225c # load x3 with value 0x4268225c
sw x3, 0(x2) # store 0x4268225c in memory
flw f10, 0(x2) # load 0x4268225c from memory into f10
fnmadd.s f2, f4, f8, f10 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xfb21a0f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x33943cca # load x3 with value 0x33943cca
sw x3, 0(x2) # store 0x33943cca in memory
flw f30, 0(x2) # load 0x33943cca from memory into f30
li x3, 0xb27c619e # load x3 with value 0xb27c619e
sw x3, 0(x2) # store 0xb27c619e in memory
flw f7, 0(x2) # load 0xb27c619e from memory into f7
li x3, 0x1eb82447 # load x3 with value 0x1eb82447
sw x3, 0(x2) # store 0x1eb82447 in memory
flw f15, 0(x2) # load 0x1eb82447 from memory into f15
fnmadd.s f3, f30, f7, f15 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0xf2bf8e05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7d47f87 # load x3 with value 0xd7d47f87
sw x3, 0(x2) # store 0xd7d47f87 in memory
flw f8, 0(x2) # load 0xd7d47f87 from memory into f8
li x3, 0x783da204 # load x3 with value 0x783da204
sw x3, 0(x2) # store 0x783da204 in memory
flw f30, 0(x2) # load 0x783da204 from memory into f30
li x3, 0x2fbbb596 # load x3 with value 0x2fbbb596
sw x3, 0(x2) # store 0x2fbbb596 in memory
flw f17, 0(x2) # load 0x2fbbb596 from memory into f17
fnmadd.s f4, f8, f30, f17 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0xb19ad2ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x76c777c7 # load x3 with value 0x76c777c7
sw x3, 0(x2) # store 0x76c777c7 in memory
flw f14, 0(x2) # load 0x76c777c7 from memory into f14
li x3, 0x762b03db # load x3 with value 0x762b03db
sw x3, 0(x2) # store 0x762b03db in memory
flw f30, 0(x2) # load 0x762b03db from memory into f30
li x3, 0x3c686a35 # load x3 with value 0x3c686a35
sw x3, 0(x2) # store 0x3c686a35 in memory
flw f24, 0(x2) # load 0x3c686a35 from memory into f24
fnmadd.s f5, f14, f30, f24 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x209fb50d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x01e46029 # load x3 with value 0x01e46029
sw x3, 0(x2) # store 0x01e46029 in memory
flw f1, 0(x2) # load 0x01e46029 from memory into f1
li x3, 0xd33b9c70 # load x3 with value 0xd33b9c70
sw x3, 0(x2) # store 0xd33b9c70 in memory
flw f26, 0(x2) # load 0xd33b9c70 from memory into f26
li x3, 0x23efd5b0 # load x3 with value 0x23efd5b0
sw x3, 0(x2) # store 0x23efd5b0 in memory
flw f4, 0(x2) # load 0x23efd5b0 from memory into f4
fnmadd.s f6, f1, f26, f4 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0xc244d01e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69548c96 # load x3 with value 0x69548c96
sw x3, 0(x2) # store 0x69548c96 in memory
flw f2, 0(x2) # load 0x69548c96 from memory into f2
li x3, 0xe232c0b2 # load x3 with value 0xe232c0b2
sw x3, 0(x2) # store 0xe232c0b2 in memory
flw f19, 0(x2) # load 0xe232c0b2 from memory into f19
li x3, 0x44098517 # load x3 with value 0x44098517
sw x3, 0(x2) # store 0x44098517 in memory
flw f27, 0(x2) # load 0x44098517 from memory into f27
fnmadd.s f7, f2, f19, f27 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x6633ad2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf2a2f345 # load x3 with value 0xf2a2f345
sw x3, 0(x2) # store 0xf2a2f345 in memory
flw f12, 0(x2) # load 0xf2a2f345 from memory into f12
li x3, 0x0fb651f4 # load x3 with value 0x0fb651f4
sw x3, 0(x2) # store 0x0fb651f4 in memory
flw f23, 0(x2) # load 0x0fb651f4 from memory into f23
li x3, 0xdbdac6dd # load x3 with value 0xdbdac6dd
sw x3, 0(x2) # store 0xdbdac6dd in memory
flw f6, 0(x2) # load 0xdbdac6dd from memory into f6
fnmadd.s f8, f12, f23, f6 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x3f8b8e0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc3456927 # load x3 with value 0xc3456927
sw x3, 0(x2) # store 0xc3456927 in memory
flw f24, 0(x2) # load 0xc3456927 from memory into f24
li x3, 0xec915575 # load x3 with value 0xec915575
sw x3, 0(x2) # store 0xec915575 in memory
flw f5, 0(x2) # load 0xec915575 from memory into f5
li x3, 0x1d26b35f # load x3 with value 0x1d26b35f
sw x3, 0(x2) # store 0x1d26b35f in memory
flw f3, 0(x2) # load 0x1d26b35f from memory into f3
fnmadd.s f9, f24, f5, f3 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0xfec62f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6934459 # load x3 with value 0xe6934459
sw x3, 0(x2) # store 0xe6934459 in memory
flw f18, 0(x2) # load 0xe6934459 from memory into f18
li x3, 0x02327f76 # load x3 with value 0x02327f76
sw x3, 0(x2) # store 0x02327f76 in memory
flw f25, 0(x2) # load 0x02327f76 from memory into f25
li x3, 0x1090b48a # load x3 with value 0x1090b48a
sw x3, 0(x2) # store 0x1090b48a in memory
flw f15, 0(x2) # load 0x1090b48a from memory into f15
fnmadd.s f10, f18, f25, f15 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x9d05b853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcf467fde # load x3 with value 0xcf467fde
sw x3, 0(x2) # store 0xcf467fde in memory
flw f2, 0(x2) # load 0xcf467fde from memory into f2
li x3, 0x747fc09a # load x3 with value 0x747fc09a
sw x3, 0(x2) # store 0x747fc09a in memory
flw f31, 0(x2) # load 0x747fc09a from memory into f31
li x3, 0x788ae413 # load x3 with value 0x788ae413
sw x3, 0(x2) # store 0x788ae413 in memory
flw f22, 0(x2) # load 0x788ae413 from memory into f22
fnmadd.s f11, f2, f31, f22 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0xc7a213f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x842c5840 # load x3 with value 0x842c5840
sw x3, 0(x2) # store 0x842c5840 in memory
flw f18, 0(x2) # load 0x842c5840 from memory into f18
li x3, 0xb9dfc971 # load x3 with value 0xb9dfc971
sw x3, 0(x2) # store 0xb9dfc971 in memory
flw f24, 0(x2) # load 0xb9dfc971 from memory into f24
li x3, 0x17f2c47f # load x3 with value 0x17f2c47f
sw x3, 0(x2) # store 0x17f2c47f in memory
flw f23, 0(x2) # load 0x17f2c47f from memory into f23
fnmadd.s f12, f18, f24, f23 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x1ad64b0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x569fb926 # load x3 with value 0x569fb926
sw x3, 0(x2) # store 0x569fb926 in memory
flw f11, 0(x2) # load 0x569fb926 from memory into f11
li x3, 0x68f6bfe9 # load x3 with value 0x68f6bfe9
sw x3, 0(x2) # store 0x68f6bfe9 in memory
flw f19, 0(x2) # load 0x68f6bfe9 from memory into f19
li x3, 0xb856d398 # load x3 with value 0xb856d398
sw x3, 0(x2) # store 0xb856d398 in memory
flw f31, 0(x2) # load 0xb856d398 from memory into f31
fnmadd.s f13, f11, f19, f31 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xea491662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c45930c # load x3 with value 0x1c45930c
sw x3, 0(x2) # store 0x1c45930c in memory
flw f8, 0(x2) # load 0x1c45930c from memory into f8
li x3, 0xd45be46a # load x3 with value 0xd45be46a
sw x3, 0(x2) # store 0xd45be46a in memory
flw f17, 0(x2) # load 0xd45be46a from memory into f17
li x3, 0xad6d9468 # load x3 with value 0xad6d9468
sw x3, 0(x2) # store 0xad6d9468 in memory
flw f26, 0(x2) # load 0xad6d9468 from memory into f26
fnmadd.s f14, f8, f17, f26 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xdb0e0b4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d35e306 # load x3 with value 0x0d35e306
sw x3, 0(x2) # store 0x0d35e306 in memory
flw f1, 0(x2) # load 0x0d35e306 from memory into f1
li x3, 0xad4dcf72 # load x3 with value 0xad4dcf72
sw x3, 0(x2) # store 0xad4dcf72 in memory
flw f25, 0(x2) # load 0xad4dcf72 from memory into f25
li x3, 0x6898ebf4 # load x3 with value 0x6898ebf4
sw x3, 0(x2) # store 0x6898ebf4 in memory
flw f29, 0(x2) # load 0x6898ebf4 from memory into f29
fnmadd.s f15, f1, f25, f29 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0xc0727cf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x682a30da # load x3 with value 0x682a30da
sw x3, 0(x2) # store 0x682a30da in memory
flw f14, 0(x2) # load 0x682a30da from memory into f14
li x3, 0x680da796 # load x3 with value 0x680da796
sw x3, 0(x2) # store 0x680da796 in memory
flw f18, 0(x2) # load 0x680da796 from memory into f18
li x3, 0xe2580773 # load x3 with value 0xe2580773
sw x3, 0(x2) # store 0xe2580773 in memory
flw f8, 0(x2) # load 0xe2580773 from memory into f8
fnmadd.s f16, f14, f18, f8 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x37047f27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e710242 # load x3 with value 0x9e710242
sw x3, 0(x2) # store 0x9e710242 in memory
flw f14, 0(x2) # load 0x9e710242 from memory into f14
li x3, 0x2f4a2335 # load x3 with value 0x2f4a2335
sw x3, 0(x2) # store 0x2f4a2335 in memory
flw f8, 0(x2) # load 0x2f4a2335 from memory into f8
li x3, 0x64ab4cd3 # load x3 with value 0x64ab4cd3
sw x3, 0(x2) # store 0x64ab4cd3 in memory
flw f9, 0(x2) # load 0x64ab4cd3 from memory into f9
fnmadd.s f17, f14, f8, f9 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0xf526e516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfcb4865e # load x3 with value 0xfcb4865e
sw x3, 0(x2) # store 0xfcb4865e in memory
flw f6, 0(x2) # load 0xfcb4865e from memory into f6
li x3, 0xd8569e7c # load x3 with value 0xd8569e7c
sw x3, 0(x2) # store 0xd8569e7c in memory
flw f30, 0(x2) # load 0xd8569e7c from memory into f30
li x3, 0xe7272459 # load x3 with value 0xe7272459
sw x3, 0(x2) # store 0xe7272459 in memory
flw f18, 0(x2) # load 0xe7272459 from memory into f18
fnmadd.s f18, f6, f30, f18 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x6eacddb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc76db533 # load x3 with value 0xc76db533
sw x3, 0(x2) # store 0xc76db533 in memory
flw f18, 0(x2) # load 0xc76db533 from memory into f18
li x3, 0xbd5db49a # load x3 with value 0xbd5db49a
sw x3, 0(x2) # store 0xbd5db49a in memory
flw f29, 0(x2) # load 0xbd5db49a from memory into f29
li x3, 0xf8c77dc6 # load x3 with value 0xf8c77dc6
sw x3, 0(x2) # store 0xf8c77dc6 in memory
flw f2, 0(x2) # load 0xf8c77dc6 from memory into f2
fnmadd.s f19, f18, f29, f2 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x2f223c29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd82e0e7d # load x3 with value 0xd82e0e7d
sw x3, 0(x2) # store 0xd82e0e7d in memory
flw f21, 0(x2) # load 0xd82e0e7d from memory into f21
li x3, 0xacc2c7a6 # load x3 with value 0xacc2c7a6
sw x3, 0(x2) # store 0xacc2c7a6 in memory
flw f26, 0(x2) # load 0xacc2c7a6 from memory into f26
li x3, 0x1186bdee # load x3 with value 0x1186bdee
sw x3, 0(x2) # store 0x1186bdee in memory
flw f16, 0(x2) # load 0x1186bdee from memory into f16
fnmadd.s f20, f21, f26, f16 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x0eda762c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a8efb9d # load x3 with value 0x0a8efb9d
sw x3, 0(x2) # store 0x0a8efb9d in memory
flw f7, 0(x2) # load 0x0a8efb9d from memory into f7
li x3, 0x02d91cf2 # load x3 with value 0x02d91cf2
sw x3, 0(x2) # store 0x02d91cf2 in memory
flw f26, 0(x2) # load 0x02d91cf2 from memory into f26
li x3, 0xe59c0c89 # load x3 with value 0xe59c0c89
sw x3, 0(x2) # store 0xe59c0c89 in memory
flw f22, 0(x2) # load 0xe59c0c89 from memory into f22
fnmadd.s f21, f7, f26, f22 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0xc5587630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f73533b # load x3 with value 0x6f73533b
sw x3, 0(x2) # store 0x6f73533b in memory
flw f6, 0(x2) # load 0x6f73533b from memory into f6
li x3, 0x4a998a68 # load x3 with value 0x4a998a68
sw x3, 0(x2) # store 0x4a998a68 in memory
flw f12, 0(x2) # load 0x4a998a68 from memory into f12
li x3, 0xbea9ac55 # load x3 with value 0xbea9ac55
sw x3, 0(x2) # store 0xbea9ac55 in memory
flw f24, 0(x2) # load 0xbea9ac55 from memory into f24
fnmadd.s f22, f6, f12, f24 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0xa85eb566 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d48cb4e # load x3 with value 0x0d48cb4e
sw x3, 0(x2) # store 0x0d48cb4e in memory
flw f15, 0(x2) # load 0x0d48cb4e from memory into f15
li x3, 0xa029815f # load x3 with value 0xa029815f
sw x3, 0(x2) # store 0xa029815f in memory
flw f28, 0(x2) # load 0xa029815f from memory into f28
li x3, 0xabe52a03 # load x3 with value 0xabe52a03
sw x3, 0(x2) # store 0xabe52a03 in memory
flw f10, 0(x2) # load 0xabe52a03 from memory into f10
fnmadd.s f23, f15, f28, f10 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x799dd9a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4c914c6 # load x3 with value 0xc4c914c6
sw x3, 0(x2) # store 0xc4c914c6 in memory
flw f1, 0(x2) # load 0xc4c914c6 from memory into f1
li x3, 0xcf767f8e # load x3 with value 0xcf767f8e
sw x3, 0(x2) # store 0xcf767f8e in memory
flw f6, 0(x2) # load 0xcf767f8e from memory into f6
li x3, 0x7ee9613d # load x3 with value 0x7ee9613d
sw x3, 0(x2) # store 0x7ee9613d in memory
flw f4, 0(x2) # load 0x7ee9613d from memory into f4
fnmadd.s f24, f1, f6, f4 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xeee86cc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2293b2c # load x3 with value 0xa2293b2c
sw x3, 0(x2) # store 0xa2293b2c in memory
flw f19, 0(x2) # load 0xa2293b2c from memory into f19
li x3, 0x6e6d8ff2 # load x3 with value 0x6e6d8ff2
sw x3, 0(x2) # store 0x6e6d8ff2 in memory
flw f2, 0(x2) # load 0x6e6d8ff2 from memory into f2
li x3, 0xd3330884 # load x3 with value 0xd3330884
sw x3, 0(x2) # store 0xd3330884 in memory
flw f15, 0(x2) # load 0xd3330884 from memory into f15
fnmadd.s f25, f19, f2, f15 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x4b33e1cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2934b3b8 # load x3 with value 0x2934b3b8
sw x3, 0(x2) # store 0x2934b3b8 in memory
flw f4, 0(x2) # load 0x2934b3b8 from memory into f4
li x3, 0x7741800b # load x3 with value 0x7741800b
sw x3, 0(x2) # store 0x7741800b in memory
flw f8, 0(x2) # load 0x7741800b from memory into f8
li x3, 0x365ddad1 # load x3 with value 0x365ddad1
sw x3, 0(x2) # store 0x365ddad1 in memory
flw f11, 0(x2) # load 0x365ddad1 from memory into f11
fnmadd.s f26, f4, f8, f11 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x4aea5926 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd0939e3 # load x3 with value 0xfd0939e3
sw x3, 0(x2) # store 0xfd0939e3 in memory
flw f5, 0(x2) # load 0xfd0939e3 from memory into f5
li x3, 0x77c7fa36 # load x3 with value 0x77c7fa36
sw x3, 0(x2) # store 0x77c7fa36 in memory
flw f29, 0(x2) # load 0x77c7fa36 from memory into f29
li x3, 0x53e960c8 # load x3 with value 0x53e960c8
sw x3, 0(x2) # store 0x53e960c8 in memory
flw f24, 0(x2) # load 0x53e960c8 from memory into f24
fnmadd.s f27, f5, f29, f24 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xc65eb20e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22415262 # load x3 with value 0x22415262
sw x3, 0(x2) # store 0x22415262 in memory
flw f5, 0(x2) # load 0x22415262 from memory into f5
li x3, 0x06ce16d2 # load x3 with value 0x06ce16d2
sw x3, 0(x2) # store 0x06ce16d2 in memory
flw f21, 0(x2) # load 0x06ce16d2 from memory into f21
li x3, 0x37cfc323 # load x3 with value 0x37cfc323
sw x3, 0(x2) # store 0x37cfc323 in memory
flw f11, 0(x2) # load 0x37cfc323 from memory into f11
fnmadd.s f28, f5, f21, f11 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x97e84da5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbafeb890 # load x3 with value 0xbafeb890
sw x3, 0(x2) # store 0xbafeb890 in memory
flw f29, 0(x2) # load 0xbafeb890 from memory into f29
li x3, 0x04bd805c # load x3 with value 0x04bd805c
sw x3, 0(x2) # store 0x04bd805c in memory
flw f12, 0(x2) # load 0x04bd805c from memory into f12
li x3, 0x61088bf1 # load x3 with value 0x61088bf1
sw x3, 0(x2) # store 0x61088bf1 in memory
flw f18, 0(x2) # load 0x61088bf1 from memory into f18
fnmadd.s f29, f29, f12, f18 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x6bc908ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c63e4bf # load x3 with value 0x2c63e4bf
sw x3, 0(x2) # store 0x2c63e4bf in memory
flw f13, 0(x2) # load 0x2c63e4bf from memory into f13
li x3, 0x4dfcb423 # load x3 with value 0x4dfcb423
sw x3, 0(x2) # store 0x4dfcb423 in memory
flw f12, 0(x2) # load 0x4dfcb423 from memory into f12
li x3, 0xd1014cf9 # load x3 with value 0xd1014cf9
sw x3, 0(x2) # store 0xd1014cf9 in memory
flw f25, 0(x2) # load 0xd1014cf9 from memory into f25
fnmadd.s f30, f13, f12, f25 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x4f5652b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde42efba # load x3 with value 0xde42efba
sw x3, 0(x2) # store 0xde42efba in memory
flw f31, 0(x2) # load 0xde42efba from memory into f31
li x3, 0x83fca71b # load x3 with value 0x83fca71b
sw x3, 0(x2) # store 0x83fca71b in memory
flw f21, 0(x2) # load 0x83fca71b from memory into f21
li x3, 0x26f68c8e # load x3 with value 0x26f68c8e
sw x3, 0(x2) # store 0x26f68c8e in memory
flw f23, 0(x2) # load 0x26f68c8e from memory into f23
fnmadd.s f31, f31, f21, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x15, 0x4ffd7621 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd2ebb45 # load x3 with value 0xbd2ebb45
sw x3, 0(x2) # store 0xbd2ebb45 in memory
flw f0, 0(x2) # load 0xbd2ebb45 from memory into f0
li x3, 0x8ed2b783 # load x3 with value 0x8ed2b783
sw x3, 0(x2) # store 0x8ed2b783 in memory
flw f10, 0(x2) # load 0x8ed2b783 from memory into f10
li x3, 0x23ee2599 # load x3 with value 0x23ee2599
sw x3, 0(x2) # store 0x23ee2599 in memory
flw f16, 0(x2) # load 0x23ee2599 from memory into f16
fnmadd.s f15, f0, f10, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x3, 0x35aaea4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb4b086b8 # load x3 with value 0xb4b086b8
sw x3, 0(x2) # store 0xb4b086b8 in memory
flw f1, 0(x2) # load 0xb4b086b8 from memory into f1
li x3, 0x32e5f031 # load x3 with value 0x32e5f031
sw x3, 0(x2) # store 0x32e5f031 in memory
flw f22, 0(x2) # load 0x32e5f031 from memory into f22
li x3, 0x70ccac97 # load x3 with value 0x70ccac97
sw x3, 0(x2) # store 0x70ccac97 in memory
flw f2, 0(x2) # load 0x70ccac97 from memory into f2
fnmadd.s f3, f1, f22, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x21, 0x19daca47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x528bd31e # load x3 with value 0x528bd31e
sw x3, 0(x2) # store 0x528bd31e in memory
flw f2, 0(x2) # load 0x528bd31e from memory into f2
li x3, 0x3370776b # load x3 with value 0x3370776b
sw x3, 0(x2) # store 0x3370776b in memory
flw f27, 0(x2) # load 0x3370776b from memory into f27
li x3, 0x953bb77b # load x3 with value 0x953bb77b
sw x3, 0(x2) # store 0x953bb77b in memory
flw f30, 0(x2) # load 0x953bb77b from memory into f30
fnmadd.s f21, f2, f27, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x28, 0xf5c9dbda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdf93b051 # load x3 with value 0xdf93b051
sw x3, 0(x2) # store 0xdf93b051 in memory
flw f3, 0(x2) # load 0xdf93b051 from memory into f3
li x3, 0x68c1a335 # load x3 with value 0x68c1a335
sw x3, 0(x2) # store 0x68c1a335 in memory
flw f19, 0(x2) # load 0x68c1a335 from memory into f19
li x3, 0xbe63a802 # load x3 with value 0xbe63a802
sw x3, 0(x2) # store 0xbe63a802 in memory
flw f8, 0(x2) # load 0xbe63a802 from memory into f8
fnmadd.s f28, f3, f19, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x27, 0xfa69e04a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4d3822d # load x3 with value 0xc4d3822d
sw x3, 0(x2) # store 0xc4d3822d in memory
flw f4, 0(x2) # load 0xc4d3822d from memory into f4
li x3, 0x4c5ad840 # load x3 with value 0x4c5ad840
sw x3, 0(x2) # store 0x4c5ad840 in memory
flw f14, 0(x2) # load 0x4c5ad840 from memory into f14
li x3, 0x894fd898 # load x3 with value 0x894fd898
sw x3, 0(x2) # store 0x894fd898 in memory
flw f2, 0(x2) # load 0x894fd898 from memory into f2
fnmadd.s f27, f4, f14, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x5, 0x2c8d8bda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5159b8d1 # load x3 with value 0x5159b8d1
sw x3, 0(x2) # store 0x5159b8d1 in memory
flw f5, 0(x2) # load 0x5159b8d1 from memory into f5
li x3, 0x97eab70b # load x3 with value 0x97eab70b
sw x3, 0(x2) # store 0x97eab70b in memory
flw f13, 0(x2) # load 0x97eab70b from memory into f13
li x3, 0x29c01098 # load x3 with value 0x29c01098
sw x3, 0(x2) # store 0x29c01098 in memory
flw f26, 0(x2) # load 0x29c01098 from memory into f26
fnmadd.s f5, f5, f13, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x21, 0x375a13ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67a7aac0 # load x3 with value 0x67a7aac0
sw x3, 0(x2) # store 0x67a7aac0 in memory
flw f6, 0(x2) # load 0x67a7aac0 from memory into f6
li x3, 0x0cd4a0b7 # load x3 with value 0x0cd4a0b7
sw x3, 0(x2) # store 0x0cd4a0b7 in memory
flw f18, 0(x2) # load 0x0cd4a0b7 from memory into f18
li x3, 0x75251a4e # load x3 with value 0x75251a4e
sw x3, 0(x2) # store 0x75251a4e in memory
flw f12, 0(x2) # load 0x75251a4e from memory into f12
fnmadd.s f21, f6, f18, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x11, 0xa5b2673e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa330dd70 # load x3 with value 0xa330dd70
sw x3, 0(x2) # store 0xa330dd70 in memory
flw f7, 0(x2) # load 0xa330dd70 from memory into f7
li x3, 0x24fe8e95 # load x3 with value 0x24fe8e95
sw x3, 0(x2) # store 0x24fe8e95 in memory
flw f1, 0(x2) # load 0x24fe8e95 from memory into f1
li x3, 0x98801c8a # load x3 with value 0x98801c8a
sw x3, 0(x2) # store 0x98801c8a in memory
flw f14, 0(x2) # load 0x98801c8a from memory into f14
fnmadd.s f11, f7, f1, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x10, 0x8dfa3676 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b16ba86 # load x3 with value 0x2b16ba86
sw x3, 0(x2) # store 0x2b16ba86 in memory
flw f8, 0(x2) # load 0x2b16ba86 from memory into f8
li x3, 0x4e578068 # load x3 with value 0x4e578068
sw x3, 0(x2) # store 0x4e578068 in memory
flw f7, 0(x2) # load 0x4e578068 from memory into f7
li x3, 0x100f81f9 # load x3 with value 0x100f81f9
sw x3, 0(x2) # store 0x100f81f9 in memory
flw f22, 0(x2) # load 0x100f81f9 from memory into f22
fnmadd.s f10, f8, f7, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x3, 0x1f866f94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57b429b8 # load x3 with value 0x57b429b8
sw x3, 0(x2) # store 0x57b429b8 in memory
flw f9, 0(x2) # load 0x57b429b8 from memory into f9
li x3, 0xaea68d76 # load x3 with value 0xaea68d76
sw x3, 0(x2) # store 0xaea68d76 in memory
flw f13, 0(x2) # load 0xaea68d76 from memory into f13
li x3, 0xbd664929 # load x3 with value 0xbd664929
sw x3, 0(x2) # store 0xbd664929 in memory
flw f19, 0(x2) # load 0xbd664929 from memory into f19
fnmadd.s f3, f9, f13, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x30, 0x9e579934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9037019d # load x3 with value 0x9037019d
sw x3, 0(x2) # store 0x9037019d in memory
flw f10, 0(x2) # load 0x9037019d from memory into f10
li x3, 0x3b5db065 # load x3 with value 0x3b5db065
sw x3, 0(x2) # store 0x3b5db065 in memory
flw f12, 0(x2) # load 0x3b5db065 from memory into f12
li x3, 0x7c153b21 # load x3 with value 0x7c153b21
sw x3, 0(x2) # store 0x7c153b21 in memory
flw f20, 0(x2) # load 0x7c153b21 from memory into f20
fnmadd.s f30, f10, f12, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x8, 0xcf43b372 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4f87ffc1 # load x3 with value 0x4f87ffc1
sw x3, 0(x2) # store 0x4f87ffc1 in memory
flw f11, 0(x2) # load 0x4f87ffc1 from memory into f11
li x3, 0x7f385529 # load x3 with value 0x7f385529
sw x3, 0(x2) # store 0x7f385529 in memory
flw f3, 0(x2) # load 0x7f385529 from memory into f3
li x3, 0x7b18bda1 # load x3 with value 0x7b18bda1
sw x3, 0(x2) # store 0x7b18bda1 in memory
flw f6, 0(x2) # load 0x7b18bda1 from memory into f6
fnmadd.s f8, f11, f3, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x21, 0xd35be468 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41de8cbd # load x3 with value 0x41de8cbd
sw x3, 0(x2) # store 0x41de8cbd in memory
flw f12, 0(x2) # load 0x41de8cbd from memory into f12
li x3, 0x1ba3332f # load x3 with value 0x1ba3332f
sw x3, 0(x2) # store 0x1ba3332f in memory
flw f18, 0(x2) # load 0x1ba3332f from memory into f18
li x3, 0xc756f635 # load x3 with value 0xc756f635
sw x3, 0(x2) # store 0xc756f635 in memory
flw f7, 0(x2) # load 0xc756f635 from memory into f7
fnmadd.s f21, f12, f18, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x15, 0x977c4b57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8895d92 # load x3 with value 0xf8895d92
sw x3, 0(x2) # store 0xf8895d92 in memory
flw f13, 0(x2) # load 0xf8895d92 from memory into f13
li x3, 0x01215702 # load x3 with value 0x01215702
sw x3, 0(x2) # store 0x01215702 in memory
flw f7, 0(x2) # load 0x01215702 from memory into f7
li x3, 0xeb22a8aa # load x3 with value 0xeb22a8aa
sw x3, 0(x2) # store 0xeb22a8aa in memory
flw f5, 0(x2) # load 0xeb22a8aa from memory into f5
fnmadd.s f15, f13, f7, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x26, 0xefb8486f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xceb04aac # load x3 with value 0xceb04aac
sw x3, 0(x2) # store 0xceb04aac in memory
flw f14, 0(x2) # load 0xceb04aac from memory into f14
li x3, 0x2b71cd7f # load x3 with value 0x2b71cd7f
sw x3, 0(x2) # store 0x2b71cd7f in memory
flw f29, 0(x2) # load 0x2b71cd7f from memory into f29
li x3, 0x77ff6dbb # load x3 with value 0x77ff6dbb
sw x3, 0(x2) # store 0x77ff6dbb in memory
flw f18, 0(x2) # load 0x77ff6dbb from memory into f18
fnmadd.s f26, f14, f29, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x20, 0x81a6e20d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4bc11b7d # load x3 with value 0x4bc11b7d
sw x3, 0(x2) # store 0x4bc11b7d in memory
flw f15, 0(x2) # load 0x4bc11b7d from memory into f15
li x3, 0x74b043f3 # load x3 with value 0x74b043f3
sw x3, 0(x2) # store 0x74b043f3 in memory
flw f31, 0(x2) # load 0x74b043f3 from memory into f31
li x3, 0xc09075b7 # load x3 with value 0xc09075b7
sw x3, 0(x2) # store 0xc09075b7 in memory
flw f22, 0(x2) # load 0xc09075b7 from memory into f22
fnmadd.s f20, f15, f31, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x16, 0x126bb753 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc39256c # load x3 with value 0xbc39256c
sw x3, 0(x2) # store 0xbc39256c in memory
flw f16, 0(x2) # load 0xbc39256c from memory into f16
li x3, 0xda62ae35 # load x3 with value 0xda62ae35
sw x3, 0(x2) # store 0xda62ae35 in memory
flw f17, 0(x2) # load 0xda62ae35 from memory into f17
li x3, 0xa2c4d1ea # load x3 with value 0xa2c4d1ea
sw x3, 0(x2) # store 0xa2c4d1ea in memory
flw f25, 0(x2) # load 0xa2c4d1ea from memory into f25
fnmadd.s f16, f16, f17, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x20, 0x3480b52a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xba361e01 # load x3 with value 0xba361e01
sw x3, 0(x2) # store 0xba361e01 in memory
flw f17, 0(x2) # load 0xba361e01 from memory into f17
li x3, 0x4a676a02 # load x3 with value 0x4a676a02
sw x3, 0(x2) # store 0x4a676a02 in memory
flw f10, 0(x2) # load 0x4a676a02 from memory into f10
li x3, 0xeefb40b1 # load x3 with value 0xeefb40b1
sw x3, 0(x2) # store 0xeefb40b1 in memory
flw f24, 0(x2) # load 0xeefb40b1 from memory into f24
fnmadd.s f20, f17, f10, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x1, 0x9ae23a7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa73c6e7d # load x3 with value 0xa73c6e7d
sw x3, 0(x2) # store 0xa73c6e7d in memory
flw f18, 0(x2) # load 0xa73c6e7d from memory into f18
li x3, 0xb5b5e43d # load x3 with value 0xb5b5e43d
sw x3, 0(x2) # store 0xb5b5e43d in memory
flw f16, 0(x2) # load 0xb5b5e43d from memory into f16
li x3, 0x7da6034e # load x3 with value 0x7da6034e
sw x3, 0(x2) # store 0x7da6034e in memory
flw f15, 0(x2) # load 0x7da6034e from memory into f15
fnmadd.s f1, f18, f16, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x24, 0xf1761ccc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x288e3b77 # load x3 with value 0x288e3b77
sw x3, 0(x2) # store 0x288e3b77 in memory
flw f19, 0(x2) # load 0x288e3b77 from memory into f19
li x3, 0x4b561908 # load x3 with value 0x4b561908
sw x3, 0(x2) # store 0x4b561908 in memory
flw f18, 0(x2) # load 0x4b561908 from memory into f18
li x3, 0x65f3d148 # load x3 with value 0x65f3d148
sw x3, 0(x2) # store 0x65f3d148 in memory
flw f25, 0(x2) # load 0x65f3d148 from memory into f25
fnmadd.s f24, f19, f18, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x16, 0xe893c03e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62ce0a02 # load x3 with value 0x62ce0a02
sw x3, 0(x2) # store 0x62ce0a02 in memory
flw f20, 0(x2) # load 0x62ce0a02 from memory into f20
li x3, 0x62b1160a # load x3 with value 0x62b1160a
sw x3, 0(x2) # store 0x62b1160a in memory
flw f22, 0(x2) # load 0x62b1160a from memory into f22
li x3, 0xd0aff1f9 # load x3 with value 0xd0aff1f9
sw x3, 0(x2) # store 0xd0aff1f9 in memory
flw f21, 0(x2) # load 0xd0aff1f9 from memory into f21
fnmadd.s f16, f20, f22, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x1, 0xff90eb3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xda7fc45a # load x3 with value 0xda7fc45a
sw x3, 0(x2) # store 0xda7fc45a in memory
flw f21, 0(x2) # load 0xda7fc45a from memory into f21
li x3, 0x4fa5d55d # load x3 with value 0x4fa5d55d
sw x3, 0(x2) # store 0x4fa5d55d in memory
flw f27, 0(x2) # load 0x4fa5d55d from memory into f27
li x3, 0xd513927a # load x3 with value 0xd513927a
sw x3, 0(x2) # store 0xd513927a in memory
flw f9, 0(x2) # load 0xd513927a from memory into f9
fnmadd.s f1, f21, f27, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x6, 0x84a0ed99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8494d4dd # load x3 with value 0x8494d4dd
sw x3, 0(x2) # store 0x8494d4dd in memory
flw f22, 0(x2) # load 0x8494d4dd from memory into f22
li x3, 0x862564ac # load x3 with value 0x862564ac
sw x3, 0(x2) # store 0x862564ac in memory
flw f9, 0(x2) # load 0x862564ac from memory into f9
li x3, 0x3a69bfbd # load x3 with value 0x3a69bfbd
sw x3, 0(x2) # store 0x3a69bfbd in memory
flw f25, 0(x2) # load 0x3a69bfbd from memory into f25
fnmadd.s f6, f22, f9, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x8, 0xd9ffa57a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd91f9e22 # load x3 with value 0xd91f9e22
sw x3, 0(x2) # store 0xd91f9e22 in memory
flw f23, 0(x2) # load 0xd91f9e22 from memory into f23
li x3, 0x71718295 # load x3 with value 0x71718295
sw x3, 0(x2) # store 0x71718295 in memory
flw f25, 0(x2) # load 0x71718295 from memory into f25
li x3, 0xdbf715dd # load x3 with value 0xdbf715dd
sw x3, 0(x2) # store 0xdbf715dd in memory
flw f1, 0(x2) # load 0xdbf715dd from memory into f1
fnmadd.s f8, f23, f25, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x1, 0xde85d49a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d98b754 # load x3 with value 0x9d98b754
sw x3, 0(x2) # store 0x9d98b754 in memory
flw f24, 0(x2) # load 0x9d98b754 from memory into f24
li x3, 0xa68123cf # load x3 with value 0xa68123cf
sw x3, 0(x2) # store 0xa68123cf in memory
flw f6, 0(x2) # load 0xa68123cf from memory into f6
li x3, 0xdbe5801f # load x3 with value 0xdbe5801f
sw x3, 0(x2) # store 0xdbe5801f in memory
flw f9, 0(x2) # load 0xdbe5801f from memory into f9
fnmadd.s f1, f24, f6, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x30, 0xd82b0394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57b9e317 # load x3 with value 0x57b9e317
sw x3, 0(x2) # store 0x57b9e317 in memory
flw f25, 0(x2) # load 0x57b9e317 from memory into f25
li x3, 0x69e6d07d # load x3 with value 0x69e6d07d
sw x3, 0(x2) # store 0x69e6d07d in memory
flw f9, 0(x2) # load 0x69e6d07d from memory into f9
li x3, 0x35555928 # load x3 with value 0x35555928
sw x3, 0(x2) # store 0x35555928 in memory
flw f27, 0(x2) # load 0x35555928 from memory into f27
fnmadd.s f30, f25, f9, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x12, 0x1c34c70e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8dbb5546 # load x3 with value 0x8dbb5546
sw x3, 0(x2) # store 0x8dbb5546 in memory
flw f26, 0(x2) # load 0x8dbb5546 from memory into f26
li x3, 0xbf2b0074 # load x3 with value 0xbf2b0074
sw x3, 0(x2) # store 0xbf2b0074 in memory
flw f20, 0(x2) # load 0xbf2b0074 from memory into f20
li x3, 0x96a0fa6f # load x3 with value 0x96a0fa6f
sw x3, 0(x2) # store 0x96a0fa6f in memory
flw f26, 0(x2) # load 0x96a0fa6f from memory into f26
fnmadd.s f12, f26, f20, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x11, 0x75428c73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb765daa0 # load x3 with value 0xb765daa0
sw x3, 0(x2) # store 0xb765daa0 in memory
flw f27, 0(x2) # load 0xb765daa0 from memory into f27
li x3, 0x3d682c13 # load x3 with value 0x3d682c13
sw x3, 0(x2) # store 0x3d682c13 in memory
flw f31, 0(x2) # load 0x3d682c13 from memory into f31
li x3, 0x973bcb6f # load x3 with value 0x973bcb6f
sw x3, 0(x2) # store 0x973bcb6f in memory
flw f6, 0(x2) # load 0x973bcb6f from memory into f6
fnmadd.s f11, f27, f31, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x2, 0x63bec640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffb64b59 # load x3 with value 0xffb64b59
sw x3, 0(x2) # store 0xffb64b59 in memory
flw f28, 0(x2) # load 0xffb64b59 from memory into f28
li x3, 0xc7b550b5 # load x3 with value 0xc7b550b5
sw x3, 0(x2) # store 0xc7b550b5 in memory
flw f5, 0(x2) # load 0xc7b550b5 from memory into f5
li x3, 0x9eb8d53d # load x3 with value 0x9eb8d53d
sw x3, 0(x2) # store 0x9eb8d53d in memory
flw f24, 0(x2) # load 0x9eb8d53d from memory into f24
fnmadd.s f2, f28, f5, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x11, 0xb0538c41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2fd74c48 # load x3 with value 0x2fd74c48
sw x3, 0(x2) # store 0x2fd74c48 in memory
flw f29, 0(x2) # load 0x2fd74c48 from memory into f29
li x3, 0x3b1823dd # load x3 with value 0x3b1823dd
sw x3, 0(x2) # store 0x3b1823dd in memory
flw f4, 0(x2) # load 0x3b1823dd from memory into f4
li x3, 0x24a4c856 # load x3 with value 0x24a4c856
sw x3, 0(x2) # store 0x24a4c856 in memory
flw f27, 0(x2) # load 0x24a4c856 from memory into f27
fnmadd.s f11, f29, f4, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x25, 0x446bc5d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbe1b403 # load x3 with value 0xdbe1b403
sw x3, 0(x2) # store 0xdbe1b403 in memory
flw f30, 0(x2) # load 0xdbe1b403 from memory into f30
li x3, 0x0a9afbfc # load x3 with value 0x0a9afbfc
sw x3, 0(x2) # store 0x0a9afbfc in memory
flw f10, 0(x2) # load 0x0a9afbfc from memory into f10
li x3, 0x4a2eb483 # load x3 with value 0x4a2eb483
sw x3, 0(x2) # store 0x4a2eb483 in memory
flw f17, 0(x2) # load 0x4a2eb483 from memory into f17
fnmadd.s f25, f30, f10, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x10, 0xa41325b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f1f2891 # load x3 with value 0x3f1f2891
sw x3, 0(x2) # store 0x3f1f2891 in memory
flw f31, 0(x2) # load 0x3f1f2891 from memory into f31
li x3, 0x1e7a0523 # load x3 with value 0x1e7a0523
sw x3, 0(x2) # store 0x1e7a0523 in memory
flw f18, 0(x2) # load 0x1e7a0523 from memory into f18
li x3, 0xc6d852b4 # load x3 with value 0xc6d852b4
sw x3, 0(x2) # store 0xc6d852b4 in memory
flw f28, 0(x2) # load 0xc6d852b4 from memory into f28
fnmadd.s f10, f31, f18, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x30, 0x64a1a802 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xae81ab3f # load x3 with value 0xae81ab3f
sw x3, 0(x2) # store 0xae81ab3f in memory
flw f6, 0(x2) # load 0xae81ab3f from memory into f6
li x3, 0xd7727a47 # load x3 with value 0xd7727a47
sw x3, 0(x2) # store 0xd7727a47 in memory
flw f0, 0(x2) # load 0xd7727a47 from memory into f0
li x3, 0xba8e4d8b # load x3 with value 0xba8e4d8b
sw x3, 0(x2) # store 0xba8e4d8b in memory
flw f31, 0(x2) # load 0xba8e4d8b from memory into f31
fnmadd.s f30, f6, f0, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x7, 0xa9502221 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6339db4 # load x3 with value 0xe6339db4
sw x3, 0(x2) # store 0xe6339db4 in memory
flw f9, 0(x2) # load 0xe6339db4 from memory into f9
li x3, 0xee97c971 # load x3 with value 0xee97c971
sw x3, 0(x2) # store 0xee97c971 in memory
flw f1, 0(x2) # load 0xee97c971 from memory into f1
li x3, 0xfe680987 # load x3 with value 0xfe680987
sw x3, 0(x2) # store 0xfe680987 in memory
flw f14, 0(x2) # load 0xfe680987 from memory into f14
fnmadd.s f7, f9, f1, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x8, 0xadb489a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x751333e9 # load x3 with value 0x751333e9
sw x3, 0(x2) # store 0x751333e9 in memory
flw f24, 0(x2) # load 0x751333e9 from memory into f24
li x3, 0xabfd5adf # load x3 with value 0xabfd5adf
sw x3, 0(x2) # store 0xabfd5adf in memory
flw f2, 0(x2) # load 0xabfd5adf from memory into f2
li x3, 0x22fd375c # load x3 with value 0x22fd375c
sw x3, 0(x2) # store 0x22fd375c in memory
flw f17, 0(x2) # load 0x22fd375c from memory into f17
fnmadd.s f8, f24, f2, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x4, 0x555d8c67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa24b7b8a # load x3 with value 0xa24b7b8a
sw x3, 0(x2) # store 0xa24b7b8a in memory
flw f17, 0(x2) # load 0xa24b7b8a from memory into f17
li x3, 0xddf10468 # load x3 with value 0xddf10468
sw x3, 0(x2) # store 0xddf10468 in memory
flw f3, 0(x2) # load 0xddf10468 from memory into f3
li x3, 0x437136f6 # load x3 with value 0x437136f6
sw x3, 0(x2) # store 0x437136f6 in memory
flw f25, 0(x2) # load 0x437136f6 from memory into f25
fnmadd.s f4, f17, f3, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x8, 0xb715f85c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa73f17f4 # load x3 with value 0xa73f17f4
sw x3, 0(x2) # store 0xa73f17f4 in memory
flw f6, 0(x2) # load 0xa73f17f4 from memory into f6
li x3, 0xf54de522 # load x3 with value 0xf54de522
sw x3, 0(x2) # store 0xf54de522 in memory
flw f4, 0(x2) # load 0xf54de522 from memory into f4
li x3, 0x8ae411ab # load x3 with value 0x8ae411ab
sw x3, 0(x2) # store 0x8ae411ab in memory
flw f22, 0(x2) # load 0x8ae411ab from memory into f22
fnmadd.s f8, f6, f4, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x19, 0xf9e8b76d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x08e17aa6 # load x3 with value 0x08e17aa6
sw x3, 0(x2) # store 0x08e17aa6 in memory
flw f17, 0(x2) # load 0x08e17aa6 from memory into f17
li x3, 0x69cfd7e3 # load x3 with value 0x69cfd7e3
sw x3, 0(x2) # store 0x69cfd7e3 in memory
flw f5, 0(x2) # load 0x69cfd7e3 from memory into f5
li x3, 0x2aa8f422 # load x3 with value 0x2aa8f422
sw x3, 0(x2) # store 0x2aa8f422 in memory
flw f23, 0(x2) # load 0x2aa8f422 from memory into f23
fnmadd.s f19, f17, f5, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x12, 0x5ab53e8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec0876dd # load x3 with value 0xec0876dd
sw x3, 0(x2) # store 0xec0876dd in memory
flw f14, 0(x2) # load 0xec0876dd from memory into f14
li x3, 0x11c8a78e # load x3 with value 0x11c8a78e
sw x3, 0(x2) # store 0x11c8a78e in memory
flw f6, 0(x2) # load 0x11c8a78e from memory into f6
li x3, 0x3a8822bc # load x3 with value 0x3a8822bc
sw x3, 0(x2) # store 0x3a8822bc in memory
flw f31, 0(x2) # load 0x3a8822bc from memory into f31
fnmadd.s f12, f14, f6, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x27, 0xe1e966e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcdb91e91 # load x3 with value 0xcdb91e91
sw x3, 0(x2) # store 0xcdb91e91 in memory
flw f4, 0(x2) # load 0xcdb91e91 from memory into f4
li x3, 0xaf3f2f4f # load x3 with value 0xaf3f2f4f
sw x3, 0(x2) # store 0xaf3f2f4f in memory
flw f7, 0(x2) # load 0xaf3f2f4f from memory into f7
li x3, 0xf295ff49 # load x3 with value 0xf295ff49
sw x3, 0(x2) # store 0xf295ff49 in memory
flw f17, 0(x2) # load 0xf295ff49 from memory into f17
fnmadd.s f27, f4, f7, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x12, 0x526845b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x19715f3d # load x3 with value 0x19715f3d
sw x3, 0(x2) # store 0x19715f3d in memory
flw f24, 0(x2) # load 0x19715f3d from memory into f24
li x3, 0x86aecabb # load x3 with value 0x86aecabb
sw x3, 0(x2) # store 0x86aecabb in memory
flw f8, 0(x2) # load 0x86aecabb from memory into f8
li x3, 0x30a6443f # load x3 with value 0x30a6443f
sw x3, 0(x2) # store 0x30a6443f in memory
flw f7, 0(x2) # load 0x30a6443f from memory into f7
fnmadd.s f12, f24, f8, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x19, 0x21db2941 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x85965a58 # load x3 with value 0x85965a58
sw x3, 0(x2) # store 0x85965a58 in memory
flw f5, 0(x2) # load 0x85965a58 from memory into f5
li x3, 0x47967409 # load x3 with value 0x47967409
sw x3, 0(x2) # store 0x47967409 in memory
flw f9, 0(x2) # load 0x47967409 from memory into f9
li x3, 0x9b141bc0 # load x3 with value 0x9b141bc0
sw x3, 0(x2) # store 0x9b141bc0 in memory
flw f26, 0(x2) # load 0x9b141bc0 from memory into f26
fnmadd.s f19, f5, f9, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x4, 0xc8713367 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ea083c9 # load x3 with value 0x7ea083c9
sw x3, 0(x2) # store 0x7ea083c9 in memory
flw f23, 0(x2) # load 0x7ea083c9 from memory into f23
li x3, 0x3019f4d3 # load x3 with value 0x3019f4d3
sw x3, 0(x2) # store 0x3019f4d3 in memory
flw f10, 0(x2) # load 0x3019f4d3 from memory into f10
li x3, 0x7798e524 # load x3 with value 0x7798e524
sw x3, 0(x2) # store 0x7798e524 in memory
flw f25, 0(x2) # load 0x7798e524 from memory into f25
fnmadd.s f4, f23, f10, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x24, 0xbc33b60d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x374e3cdb # load x3 with value 0x374e3cdb
sw x3, 0(x2) # store 0x374e3cdb in memory
flw f13, 0(x2) # load 0x374e3cdb from memory into f13
li x3, 0x94cde322 # load x3 with value 0x94cde322
sw x3, 0(x2) # store 0x94cde322 in memory
flw f11, 0(x2) # load 0x94cde322 from memory into f11
li x3, 0x67505524 # load x3 with value 0x67505524
sw x3, 0(x2) # store 0x67505524 in memory
flw f28, 0(x2) # load 0x67505524 from memory into f28
fnmadd.s f24, f13, f11, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x2, 0xe2b81134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc820d055 # load x3 with value 0xc820d055
sw x3, 0(x2) # store 0xc820d055 in memory
flw f18, 0(x2) # load 0xc820d055 from memory into f18
li x3, 0xe2550662 # load x3 with value 0xe2550662
sw x3, 0(x2) # store 0xe2550662 in memory
flw f12, 0(x2) # load 0xe2550662 from memory into f12
li x3, 0x88917d8f # load x3 with value 0x88917d8f
sw x3, 0(x2) # store 0x88917d8f in memory
flw f16, 0(x2) # load 0x88917d8f from memory into f16
fnmadd.s f2, f18, f12, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x1, 0x5d74ead5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48af5ddc # load x3 with value 0x48af5ddc
sw x3, 0(x2) # store 0x48af5ddc in memory
flw f30, 0(x2) # load 0x48af5ddc from memory into f30
li x3, 0x16080fb4 # load x3 with value 0x16080fb4
sw x3, 0(x2) # store 0x16080fb4 in memory
flw f13, 0(x2) # load 0x16080fb4 from memory into f13
li x3, 0x873b2d49 # load x3 with value 0x873b2d49
sw x3, 0(x2) # store 0x873b2d49 in memory
flw f7, 0(x2) # load 0x873b2d49 from memory into f7
fnmadd.s f1, f30, f13, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x23, 0x282ebf28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0dc0c2c9 # load x3 with value 0x0dc0c2c9
sw x3, 0(x2) # store 0x0dc0c2c9 in memory
flw f13, 0(x2) # load 0x0dc0c2c9 from memory into f13
li x3, 0x8f6dba3b # load x3 with value 0x8f6dba3b
sw x3, 0(x2) # store 0x8f6dba3b in memory
flw f14, 0(x2) # load 0x8f6dba3b from memory into f14
li x3, 0x88eb1ae8 # load x3 with value 0x88eb1ae8
sw x3, 0(x2) # store 0x88eb1ae8 in memory
flw f28, 0(x2) # load 0x88eb1ae8 from memory into f28
fnmadd.s f23, f13, f14, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x16, 0x979f5853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x59efa5c7 # load x3 with value 0x59efa5c7
sw x3, 0(x2) # store 0x59efa5c7 in memory
flw f4, 0(x2) # load 0x59efa5c7 from memory into f4
li x3, 0x368b8d32 # load x3 with value 0x368b8d32
sw x3, 0(x2) # store 0x368b8d32 in memory
flw f15, 0(x2) # load 0x368b8d32 from memory into f15
li x3, 0x2ba83523 # load x3 with value 0x2ba83523
sw x3, 0(x2) # store 0x2ba83523 in memory
flw f31, 0(x2) # load 0x2ba83523 from memory into f31
fnmadd.s f16, f4, f15, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x29, 0x4bdc592f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8fd19035 # load x3 with value 0x8fd19035
sw x3, 0(x2) # store 0x8fd19035 in memory
flw f8, 0(x2) # load 0x8fd19035 from memory into f8
li x3, 0xc94d20c9 # load x3 with value 0xc94d20c9
sw x3, 0(x2) # store 0xc94d20c9 in memory
flw f16, 0(x2) # load 0xc94d20c9 from memory into f16
li x3, 0xdf8e19fa # load x3 with value 0xdf8e19fa
sw x3, 0(x2) # store 0xdf8e19fa in memory
flw f19, 0(x2) # load 0xdf8e19fa from memory into f19
fnmadd.s f29, f8, f16, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x26, 0x703a780f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71849329 # load x3 with value 0x71849329
sw x3, 0(x2) # store 0x71849329 in memory
flw f16, 0(x2) # load 0x71849329 from memory into f16
li x3, 0x502e9305 # load x3 with value 0x502e9305
sw x3, 0(x2) # store 0x502e9305 in memory
flw f17, 0(x2) # load 0x502e9305 from memory into f17
li x3, 0x2f4f399d # load x3 with value 0x2f4f399d
sw x3, 0(x2) # store 0x2f4f399d in memory
flw f22, 0(x2) # load 0x2f4f399d from memory into f22
fnmadd.s f26, f16, f17, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x22, 0xfc1c5d19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23948f65 # load x3 with value 0x23948f65
sw x3, 0(x2) # store 0x23948f65 in memory
flw f2, 0(x2) # load 0x23948f65 from memory into f2
li x3, 0x78bbc37e # load x3 with value 0x78bbc37e
sw x3, 0(x2) # store 0x78bbc37e in memory
flw f18, 0(x2) # load 0x78bbc37e from memory into f18
li x3, 0x9ef18c33 # load x3 with value 0x9ef18c33
sw x3, 0(x2) # store 0x9ef18c33 in memory
flw f24, 0(x2) # load 0x9ef18c33 from memory into f24
fnmadd.s f22, f2, f18, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x14, 0x26df759d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd17a7c84 # load x3 with value 0xd17a7c84
sw x3, 0(x2) # store 0xd17a7c84 in memory
flw f5, 0(x2) # load 0xd17a7c84 from memory into f5
li x3, 0xbf5aa2dd # load x3 with value 0xbf5aa2dd
sw x3, 0(x2) # store 0xbf5aa2dd in memory
flw f19, 0(x2) # load 0xbf5aa2dd from memory into f19
li x3, 0x2de767be # load x3 with value 0x2de767be
sw x3, 0(x2) # store 0x2de767be in memory
flw f19, 0(x2) # load 0x2de767be from memory into f19
fnmadd.s f14, f5, f19, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x22, 0x1c4c13b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98458528 # load x3 with value 0x98458528
sw x3, 0(x2) # store 0x98458528 in memory
flw f5, 0(x2) # load 0x98458528 from memory into f5
li x3, 0xd2e3b79c # load x3 with value 0xd2e3b79c
sw x3, 0(x2) # store 0xd2e3b79c in memory
flw f20, 0(x2) # load 0xd2e3b79c from memory into f20
li x3, 0xeeb38333 # load x3 with value 0xeeb38333
sw x3, 0(x2) # store 0xeeb38333 in memory
flw f29, 0(x2) # load 0xeeb38333 from memory into f29
fnmadd.s f22, f5, f20, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x13, 0xa513977a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54a59cb5 # load x3 with value 0x54a59cb5
sw x3, 0(x2) # store 0x54a59cb5 in memory
flw f31, 0(x2) # load 0x54a59cb5 from memory into f31
li x3, 0x2441c642 # load x3 with value 0x2441c642
sw x3, 0(x2) # store 0x2441c642 in memory
flw f21, 0(x2) # load 0x2441c642 from memory into f21
li x3, 0x2cd29944 # load x3 with value 0x2cd29944
sw x3, 0(x2) # store 0x2cd29944 in memory
flw f1, 0(x2) # load 0x2cd29944 from memory into f1
fnmadd.s f13, f31, f21, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x25, 0x562a59d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0686906c # load x3 with value 0x0686906c
sw x3, 0(x2) # store 0x0686906c in memory
flw f2, 0(x2) # load 0x0686906c from memory into f2
li x3, 0x7e96c245 # load x3 with value 0x7e96c245
sw x3, 0(x2) # store 0x7e96c245 in memory
flw f22, 0(x2) # load 0x7e96c245 from memory into f22
li x3, 0xb7e6af2d # load x3 with value 0xb7e6af2d
sw x3, 0(x2) # store 0xb7e6af2d in memory
flw f21, 0(x2) # load 0xb7e6af2d from memory into f21
fnmadd.s f25, f2, f22, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x27, 0x0a1e5eab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xecf1ef6c # load x3 with value 0xecf1ef6c
sw x3, 0(x2) # store 0xecf1ef6c in memory
flw f7, 0(x2) # load 0xecf1ef6c from memory into f7
li x3, 0x48bd3e5c # load x3 with value 0x48bd3e5c
sw x3, 0(x2) # store 0x48bd3e5c in memory
flw f23, 0(x2) # load 0x48bd3e5c from memory into f23
li x3, 0x434a7cb0 # load x3 with value 0x434a7cb0
sw x3, 0(x2) # store 0x434a7cb0 in memory
flw f3, 0(x2) # load 0x434a7cb0 from memory into f3
fnmadd.s f27, f7, f23, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x9, 0xd48dd43f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15e20e7e # load x3 with value 0x15e20e7e
sw x3, 0(x2) # store 0x15e20e7e in memory
flw f6, 0(x2) # load 0x15e20e7e from memory into f6
li x3, 0x4b5a8faa # load x3 with value 0x4b5a8faa
sw x3, 0(x2) # store 0x4b5a8faa in memory
flw f24, 0(x2) # load 0x4b5a8faa from memory into f24
li x3, 0x69e04073 # load x3 with value 0x69e04073
sw x3, 0(x2) # store 0x69e04073 in memory
flw f14, 0(x2) # load 0x69e04073 from memory into f14
fnmadd.s f9, f6, f24, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x17, 0x93b34205 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x618d04d6 # load x3 with value 0x618d04d6
sw x3, 0(x2) # store 0x618d04d6 in memory
flw f22, 0(x2) # load 0x618d04d6 from memory into f22
li x3, 0x50d0b8e3 # load x3 with value 0x50d0b8e3
sw x3, 0(x2) # store 0x50d0b8e3 in memory
flw f25, 0(x2) # load 0x50d0b8e3 from memory into f25
li x3, 0x850fa1b3 # load x3 with value 0x850fa1b3
sw x3, 0(x2) # store 0x850fa1b3 in memory
flw f16, 0(x2) # load 0x850fa1b3 from memory into f16
fnmadd.s f17, f22, f25, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x24, 0x52004b66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fd52f53 # load x3 with value 0x7fd52f53
sw x3, 0(x2) # store 0x7fd52f53 in memory
flw f17, 0(x2) # load 0x7fd52f53 from memory into f17
li x3, 0x952e5d4e # load x3 with value 0x952e5d4e
sw x3, 0(x2) # store 0x952e5d4e in memory
flw f26, 0(x2) # load 0x952e5d4e from memory into f26
li x3, 0xcf6cde93 # load x3 with value 0xcf6cde93
sw x3, 0(x2) # store 0xcf6cde93 in memory
flw f22, 0(x2) # load 0xcf6cde93 from memory into f22
fnmadd.s f24, f17, f26, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x8, 0xe71bb4d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaddf247a # load x3 with value 0xaddf247a
sw x3, 0(x2) # store 0xaddf247a in memory
flw f28, 0(x2) # load 0xaddf247a from memory into f28
li x3, 0xb3798475 # load x3 with value 0xb3798475
sw x3, 0(x2) # store 0xb3798475 in memory
flw f27, 0(x2) # load 0xb3798475 from memory into f27
li x3, 0x69705c84 # load x3 with value 0x69705c84
sw x3, 0(x2) # store 0x69705c84 in memory
flw f11, 0(x2) # load 0x69705c84 from memory into f11
fnmadd.s f8, f28, f27, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x21, 0x5f3e0f7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a2e67bb # load x3 with value 0x6a2e67bb
sw x3, 0(x2) # store 0x6a2e67bb in memory
flw f2, 0(x2) # load 0x6a2e67bb from memory into f2
li x3, 0x5d1414b8 # load x3 with value 0x5d1414b8
sw x3, 0(x2) # store 0x5d1414b8 in memory
flw f28, 0(x2) # load 0x5d1414b8 from memory into f28
li x3, 0xfdb9f58d # load x3 with value 0xfdb9f58d
sw x3, 0(x2) # store 0xfdb9f58d in memory
flw f17, 0(x2) # load 0xfdb9f58d from memory into f17
fnmadd.s f21, f2, f28, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x21, 0x3ece0826 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3e0a47e # load x3 with value 0xa3e0a47e
sw x3, 0(x2) # store 0xa3e0a47e in memory
flw f3, 0(x2) # load 0xa3e0a47e from memory into f3
li x3, 0x5e723128 # load x3 with value 0x5e723128
sw x3, 0(x2) # store 0x5e723128 in memory
flw f29, 0(x2) # load 0x5e723128 from memory into f29
li x3, 0x63738847 # load x3 with value 0x63738847
sw x3, 0(x2) # store 0x63738847 in memory
flw f18, 0(x2) # load 0x63738847 from memory into f18
fnmadd.s f21, f3, f29, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x7, 0x144f76f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1e0921e # load x3 with value 0xa1e0921e
sw x3, 0(x2) # store 0xa1e0921e in memory
flw f6, 0(x2) # load 0xa1e0921e from memory into f6
li x3, 0x11ed29d6 # load x3 with value 0x11ed29d6
sw x3, 0(x2) # store 0x11ed29d6 in memory
flw f30, 0(x2) # load 0x11ed29d6 from memory into f30
li x3, 0xc3f44e56 # load x3 with value 0xc3f44e56
sw x3, 0(x2) # store 0xc3f44e56 in memory
flw f12, 0(x2) # load 0xc3f44e56 from memory into f12
fnmadd.s f7, f6, f30, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x21, 0x7b692d87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa743e131 # load x3 with value 0xa743e131
sw x3, 0(x2) # store 0xa743e131 in memory
flw f18, 0(x2) # load 0xa743e131 from memory into f18
li x3, 0xbace5a7f # load x3 with value 0xbace5a7f
sw x3, 0(x2) # store 0xbace5a7f in memory
flw f31, 0(x2) # load 0xbace5a7f from memory into f31
li x3, 0x944ce927 # load x3 with value 0x944ce927
sw x3, 0(x2) # store 0x944ce927 in memory
flw f3, 0(x2) # load 0x944ce927 from memory into f3
fnmadd.s f21, f18, f31, f3 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
