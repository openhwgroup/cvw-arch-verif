///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/F//WALLY-COV-fnmsub.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.345073
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fnmsub.s f30, f7, f28, f4 # perform first operation
fnmsub.s f1, f30, f19, f24 # perform second operation

# Testcase cmp_gpr_hazard raw test
fnmsub.s f1, f14, f26, f19 # perform first operation
fnmsub.s f29, f18, f1, f12 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmsub.s f8, f7, f6, f20 # perform first operation
fnmsub.s f8, f4, f28, f6 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmsub.s f28, f25, f6, f19 # perform first operation
fnmsub.s f28, f18, f2, f21 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmsub.s f1, f29, f2, f10 # perform first operation
fnmsub.s f29, f23, f14, f15 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmsub.s f14, f2, f21, f23 # perform first operation
fnmsub.s f21, f22, f27, f24 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xd61a09e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbda621b7 # load x3 with value 0xbda621b7
sw x3, 0(x2) # store 0xbda621b7 in memory
flw f0, 0(x2) # load 0xbda621b7 from memory into f0
li x3, 0x02a5ef33 # load x3 with value 0x02a5ef33
sw x3, 0(x2) # store 0x02a5ef33 in memory
flw f29, 0(x2) # load 0x02a5ef33 from memory into f29
li x3, 0xa51f8d8a # load x3 with value 0xa51f8d8a
sw x3, 0(x2) # store 0xa51f8d8a in memory
flw f31, 0(x2) # load 0xa51f8d8a from memory into f31
fnmsub.s f0, f0, f29, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x1178f08e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd390f53 # load x3 with value 0xcd390f53
sw x3, 0(x2) # store 0xcd390f53 in memory
flw f1, 0(x2) # load 0xcd390f53 from memory into f1
li x3, 0x55e96cd7 # load x3 with value 0x55e96cd7
sw x3, 0(x2) # store 0x55e96cd7 in memory
flw f14, 0(x2) # load 0x55e96cd7 from memory into f14
li x3, 0x48e5553b # load x3 with value 0x48e5553b
sw x3, 0(x2) # store 0x48e5553b in memory
flw f5, 0(x2) # load 0x48e5553b from memory into f5
fnmsub.s f1, f1, f14, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0xef04d3b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x460adceb # load x3 with value 0x460adceb
sw x3, 0(x2) # store 0x460adceb in memory
flw f2, 0(x2) # load 0x460adceb from memory into f2
li x3, 0xd2376482 # load x3 with value 0xd2376482
sw x3, 0(x2) # store 0xd2376482 in memory
flw f15, 0(x2) # load 0xd2376482 from memory into f15
li x3, 0xe8dcd07a # load x3 with value 0xe8dcd07a
sw x3, 0(x2) # store 0xe8dcd07a in memory
flw f26, 0(x2) # load 0xe8dcd07a from memory into f26
fnmsub.s f2, f2, f15, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x3dc10d73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4afb2505 # load x3 with value 0x4afb2505
sw x3, 0(x2) # store 0x4afb2505 in memory
flw f3, 0(x2) # load 0x4afb2505 from memory into f3
li x3, 0xc1a28443 # load x3 with value 0xc1a28443
sw x3, 0(x2) # store 0xc1a28443 in memory
flw f24, 0(x2) # load 0xc1a28443 from memory into f24
li x3, 0x791d9f67 # load x3 with value 0x791d9f67
sw x3, 0(x2) # store 0x791d9f67 in memory
flw f23, 0(x2) # load 0x791d9f67 from memory into f23
fnmsub.s f3, f3, f24, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x4b6032c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54dab7e6 # load x3 with value 0x54dab7e6
sw x3, 0(x2) # store 0x54dab7e6 in memory
flw f4, 0(x2) # load 0x54dab7e6 from memory into f4
li x3, 0x858a79c0 # load x3 with value 0x858a79c0
sw x3, 0(x2) # store 0x858a79c0 in memory
flw f30, 0(x2) # load 0x858a79c0 from memory into f30
li x3, 0xf488d15b # load x3 with value 0xf488d15b
sw x3, 0(x2) # store 0xf488d15b in memory
flw f25, 0(x2) # load 0xf488d15b from memory into f25
fnmsub.s f4, f4, f30, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xb1e48f83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c3345be # load x3 with value 0x6c3345be
sw x3, 0(x2) # store 0x6c3345be in memory
flw f5, 0(x2) # load 0x6c3345be from memory into f5
li x3, 0xc3952597 # load x3 with value 0xc3952597
sw x3, 0(x2) # store 0xc3952597 in memory
flw f29, 0(x2) # load 0xc3952597 from memory into f29
li x3, 0xb8e04e4b # load x3 with value 0xb8e04e4b
sw x3, 0(x2) # store 0xb8e04e4b in memory
flw f30, 0(x2) # load 0xb8e04e4b from memory into f30
fnmsub.s f5, f5, f29, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xbf27ff2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaab787ee # load x3 with value 0xaab787ee
sw x3, 0(x2) # store 0xaab787ee in memory
flw f6, 0(x2) # load 0xaab787ee from memory into f6
li x3, 0xe388980b # load x3 with value 0xe388980b
sw x3, 0(x2) # store 0xe388980b in memory
flw f6, 0(x2) # load 0xe388980b from memory into f6
li x3, 0x99408548 # load x3 with value 0x99408548
sw x3, 0(x2) # store 0x99408548 in memory
flw f20, 0(x2) # load 0x99408548 from memory into f20
fnmsub.s f6, f6, f6, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0xefe05aed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d2635a7 # load x3 with value 0x8d2635a7
sw x3, 0(x2) # store 0x8d2635a7 in memory
flw f7, 0(x2) # load 0x8d2635a7 from memory into f7
li x3, 0x034c4418 # load x3 with value 0x034c4418
sw x3, 0(x2) # store 0x034c4418 in memory
flw f18, 0(x2) # load 0x034c4418 from memory into f18
li x3, 0x6a5f99fe # load x3 with value 0x6a5f99fe
sw x3, 0(x2) # store 0x6a5f99fe in memory
flw f11, 0(x2) # load 0x6a5f99fe from memory into f11
fnmsub.s f7, f7, f18, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x74858c5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b54a90a # load x3 with value 0x9b54a90a
sw x3, 0(x2) # store 0x9b54a90a in memory
flw f8, 0(x2) # load 0x9b54a90a from memory into f8
li x3, 0x04d29c2e # load x3 with value 0x04d29c2e
sw x3, 0(x2) # store 0x04d29c2e in memory
flw f24, 0(x2) # load 0x04d29c2e from memory into f24
li x3, 0xb506def9 # load x3 with value 0xb506def9
sw x3, 0(x2) # store 0xb506def9 in memory
flw f4, 0(x2) # load 0xb506def9 from memory into f4
fnmsub.s f8, f8, f24, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x77c91f15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3250a257 # load x3 with value 0x3250a257
sw x3, 0(x2) # store 0x3250a257 in memory
flw f9, 0(x2) # load 0x3250a257 from memory into f9
li x3, 0x60cf278b # load x3 with value 0x60cf278b
sw x3, 0(x2) # store 0x60cf278b in memory
flw f20, 0(x2) # load 0x60cf278b from memory into f20
li x3, 0xb08aa64e # load x3 with value 0xb08aa64e
sw x3, 0(x2) # store 0xb08aa64e in memory
flw f3, 0(x2) # load 0xb08aa64e from memory into f3
fnmsub.s f9, f9, f20, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xd115557c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe7094cdb # load x3 with value 0xe7094cdb
sw x3, 0(x2) # store 0xe7094cdb in memory
flw f10, 0(x2) # load 0xe7094cdb from memory into f10
li x3, 0x979782a3 # load x3 with value 0x979782a3
sw x3, 0(x2) # store 0x979782a3 in memory
flw f22, 0(x2) # load 0x979782a3 from memory into f22
li x3, 0x7fbc874b # load x3 with value 0x7fbc874b
sw x3, 0(x2) # store 0x7fbc874b in memory
flw f3, 0(x2) # load 0x7fbc874b from memory into f3
fnmsub.s f10, f10, f22, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x35758b8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1cf760d2 # load x3 with value 0x1cf760d2
sw x3, 0(x2) # store 0x1cf760d2 in memory
flw f11, 0(x2) # load 0x1cf760d2 from memory into f11
li x3, 0x18bc4f1e # load x3 with value 0x18bc4f1e
sw x3, 0(x2) # store 0x18bc4f1e in memory
flw f31, 0(x2) # load 0x18bc4f1e from memory into f31
li x3, 0xf553e47f # load x3 with value 0xf553e47f
sw x3, 0(x2) # store 0xf553e47f in memory
flw f24, 0(x2) # load 0xf553e47f from memory into f24
fnmsub.s f11, f11, f31, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0xb0af814d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x02b0937a # load x3 with value 0x02b0937a
sw x3, 0(x2) # store 0x02b0937a in memory
flw f12, 0(x2) # load 0x02b0937a from memory into f12
li x3, 0x69b1c576 # load x3 with value 0x69b1c576
sw x3, 0(x2) # store 0x69b1c576 in memory
flw f17, 0(x2) # load 0x69b1c576 from memory into f17
li x3, 0x6ca6571f # load x3 with value 0x6ca6571f
sw x3, 0(x2) # store 0x6ca6571f in memory
flw f29, 0(x2) # load 0x6ca6571f from memory into f29
fnmsub.s f12, f12, f17, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x1a99c5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x132f5a21 # load x3 with value 0x132f5a21
sw x3, 0(x2) # store 0x132f5a21 in memory
flw f13, 0(x2) # load 0x132f5a21 from memory into f13
li x3, 0xb7cbcb59 # load x3 with value 0xb7cbcb59
sw x3, 0(x2) # store 0xb7cbcb59 in memory
flw f27, 0(x2) # load 0xb7cbcb59 from memory into f27
li x3, 0x53622cad # load x3 with value 0x53622cad
sw x3, 0(x2) # store 0x53622cad in memory
flw f8, 0(x2) # load 0x53622cad from memory into f8
fnmsub.s f13, f13, f27, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x71e38dd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x437cc081 # load x3 with value 0x437cc081
sw x3, 0(x2) # store 0x437cc081 in memory
flw f14, 0(x2) # load 0x437cc081 from memory into f14
li x3, 0xf1f1dec8 # load x3 with value 0xf1f1dec8
sw x3, 0(x2) # store 0xf1f1dec8 in memory
flw f24, 0(x2) # load 0xf1f1dec8 from memory into f24
li x3, 0x9ac4cfd4 # load x3 with value 0x9ac4cfd4
sw x3, 0(x2) # store 0x9ac4cfd4 in memory
flw f13, 0(x2) # load 0x9ac4cfd4 from memory into f13
fnmsub.s f14, f14, f24, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x4e578a15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc18c15cc # load x3 with value 0xc18c15cc
sw x3, 0(x2) # store 0xc18c15cc in memory
flw f15, 0(x2) # load 0xc18c15cc from memory into f15
li x3, 0x0743f095 # load x3 with value 0x0743f095
sw x3, 0(x2) # store 0x0743f095 in memory
flw f6, 0(x2) # load 0x0743f095 from memory into f6
li x3, 0x46fc70c5 # load x3 with value 0x46fc70c5
sw x3, 0(x2) # store 0x46fc70c5 in memory
flw f25, 0(x2) # load 0x46fc70c5 from memory into f25
fnmsub.s f15, f15, f6, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x66ffde02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16dc99ae # load x3 with value 0x16dc99ae
sw x3, 0(x2) # store 0x16dc99ae in memory
flw f16, 0(x2) # load 0x16dc99ae from memory into f16
li x3, 0xa1b077c0 # load x3 with value 0xa1b077c0
sw x3, 0(x2) # store 0xa1b077c0 in memory
flw f21, 0(x2) # load 0xa1b077c0 from memory into f21
li x3, 0x8207fba0 # load x3 with value 0x8207fba0
sw x3, 0(x2) # store 0x8207fba0 in memory
flw f25, 0(x2) # load 0x8207fba0 from memory into f25
fnmsub.s f16, f16, f21, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x90747c03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x199e6d93 # load x3 with value 0x199e6d93
sw x3, 0(x2) # store 0x199e6d93 in memory
flw f17, 0(x2) # load 0x199e6d93 from memory into f17
li x3, 0x1b1de2e9 # load x3 with value 0x1b1de2e9
sw x3, 0(x2) # store 0x1b1de2e9 in memory
flw f28, 0(x2) # load 0x1b1de2e9 from memory into f28
li x3, 0x834a8b27 # load x3 with value 0x834a8b27
sw x3, 0(x2) # store 0x834a8b27 in memory
flw f24, 0(x2) # load 0x834a8b27 from memory into f24
fnmsub.s f17, f17, f28, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0xfcc32b17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d40da49 # load x3 with value 0x0d40da49
sw x3, 0(x2) # store 0x0d40da49 in memory
flw f18, 0(x2) # load 0x0d40da49 from memory into f18
li x3, 0xd7d0a321 # load x3 with value 0xd7d0a321
sw x3, 0(x2) # store 0xd7d0a321 in memory
flw f16, 0(x2) # load 0xd7d0a321 from memory into f16
li x3, 0x7032ece6 # load x3 with value 0x7032ece6
sw x3, 0(x2) # store 0x7032ece6 in memory
flw f5, 0(x2) # load 0x7032ece6 from memory into f5
fnmsub.s f18, f18, f16, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x520a371d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x63d56409 # load x3 with value 0x63d56409
sw x3, 0(x2) # store 0x63d56409 in memory
flw f19, 0(x2) # load 0x63d56409 from memory into f19
li x3, 0x4c272bf9 # load x3 with value 0x4c272bf9
sw x3, 0(x2) # store 0x4c272bf9 in memory
flw f27, 0(x2) # load 0x4c272bf9 from memory into f27
li x3, 0x63e2a5c6 # load x3 with value 0x63e2a5c6
sw x3, 0(x2) # store 0x63e2a5c6 in memory
flw f18, 0(x2) # load 0x63e2a5c6 from memory into f18
fnmsub.s f19, f19, f27, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0xb995fb1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a89f4aa # load x3 with value 0x9a89f4aa
sw x3, 0(x2) # store 0x9a89f4aa in memory
flw f20, 0(x2) # load 0x9a89f4aa from memory into f20
li x3, 0x937c544f # load x3 with value 0x937c544f
sw x3, 0(x2) # store 0x937c544f in memory
flw f18, 0(x2) # load 0x937c544f from memory into f18
li x3, 0xc0f48937 # load x3 with value 0xc0f48937
sw x3, 0(x2) # store 0xc0f48937 in memory
flw f26, 0(x2) # load 0xc0f48937 from memory into f26
fnmsub.s f20, f20, f18, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x0780726d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5033fc97 # load x3 with value 0x5033fc97
sw x3, 0(x2) # store 0x5033fc97 in memory
flw f21, 0(x2) # load 0x5033fc97 from memory into f21
li x3, 0x2e18e817 # load x3 with value 0x2e18e817
sw x3, 0(x2) # store 0x2e18e817 in memory
flw f3, 0(x2) # load 0x2e18e817 from memory into f3
li x3, 0x437fb13f # load x3 with value 0x437fb13f
sw x3, 0(x2) # store 0x437fb13f in memory
flw f31, 0(x2) # load 0x437fb13f from memory into f31
fnmsub.s f21, f21, f3, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xbd1779cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x420c27f7 # load x3 with value 0x420c27f7
sw x3, 0(x2) # store 0x420c27f7 in memory
flw f22, 0(x2) # load 0x420c27f7 from memory into f22
li x3, 0x26133537 # load x3 with value 0x26133537
sw x3, 0(x2) # store 0x26133537 in memory
flw f7, 0(x2) # load 0x26133537 from memory into f7
li x3, 0x95f58164 # load x3 with value 0x95f58164
sw x3, 0(x2) # store 0x95f58164 in memory
flw f14, 0(x2) # load 0x95f58164 from memory into f14
fnmsub.s f22, f22, f7, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x161ba841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x086d6984 # load x3 with value 0x086d6984
sw x3, 0(x2) # store 0x086d6984 in memory
flw f23, 0(x2) # load 0x086d6984 from memory into f23
li x3, 0xe8e0cabf # load x3 with value 0xe8e0cabf
sw x3, 0(x2) # store 0xe8e0cabf in memory
flw f1, 0(x2) # load 0xe8e0cabf from memory into f1
li x3, 0xa4f17362 # load x3 with value 0xa4f17362
sw x3, 0(x2) # store 0xa4f17362 in memory
flw f16, 0(x2) # load 0xa4f17362 from memory into f16
fnmsub.s f23, f23, f1, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x917f120b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48aebcf9 # load x3 with value 0x48aebcf9
sw x3, 0(x2) # store 0x48aebcf9 in memory
flw f24, 0(x2) # load 0x48aebcf9 from memory into f24
li x3, 0xb618e5ee # load x3 with value 0xb618e5ee
sw x3, 0(x2) # store 0xb618e5ee in memory
flw f17, 0(x2) # load 0xb618e5ee from memory into f17
li x3, 0xa6ee477b # load x3 with value 0xa6ee477b
sw x3, 0(x2) # store 0xa6ee477b in memory
flw f9, 0(x2) # load 0xa6ee477b from memory into f9
fnmsub.s f24, f24, f17, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x1555952c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde4eb18e # load x3 with value 0xde4eb18e
sw x3, 0(x2) # store 0xde4eb18e in memory
flw f25, 0(x2) # load 0xde4eb18e from memory into f25
li x3, 0xf41553a3 # load x3 with value 0xf41553a3
sw x3, 0(x2) # store 0xf41553a3 in memory
flw f16, 0(x2) # load 0xf41553a3 from memory into f16
li x3, 0x24e8b73b # load x3 with value 0x24e8b73b
sw x3, 0(x2) # store 0x24e8b73b in memory
flw f29, 0(x2) # load 0x24e8b73b from memory into f29
fnmsub.s f25, f25, f16, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0xc7dda9c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52b0528f # load x3 with value 0x52b0528f
sw x3, 0(x2) # store 0x52b0528f in memory
flw f26, 0(x2) # load 0x52b0528f from memory into f26
li x3, 0x7c9253aa # load x3 with value 0x7c9253aa
sw x3, 0(x2) # store 0x7c9253aa in memory
flw f13, 0(x2) # load 0x7c9253aa from memory into f13
li x3, 0x5974eb38 # load x3 with value 0x5974eb38
sw x3, 0(x2) # store 0x5974eb38 in memory
flw f10, 0(x2) # load 0x5974eb38 from memory into f10
fnmsub.s f26, f26, f13, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x697d7e11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1d406a4 # load x3 with value 0xa1d406a4
sw x3, 0(x2) # store 0xa1d406a4 in memory
flw f27, 0(x2) # load 0xa1d406a4 from memory into f27
li x3, 0x8a696ca9 # load x3 with value 0x8a696ca9
sw x3, 0(x2) # store 0x8a696ca9 in memory
flw f5, 0(x2) # load 0x8a696ca9 from memory into f5
li x3, 0x101d5ad7 # load x3 with value 0x101d5ad7
sw x3, 0(x2) # store 0x101d5ad7 in memory
flw f9, 0(x2) # load 0x101d5ad7 from memory into f9
fnmsub.s f27, f27, f5, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xaeeb357a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1dce738 # load x3 with value 0xc1dce738
sw x3, 0(x2) # store 0xc1dce738 in memory
flw f28, 0(x2) # load 0xc1dce738 from memory into f28
li x3, 0xa74a0071 # load x3 with value 0xa74a0071
sw x3, 0(x2) # store 0xa74a0071 in memory
flw f19, 0(x2) # load 0xa74a0071 from memory into f19
li x3, 0x64170a70 # load x3 with value 0x64170a70
sw x3, 0(x2) # store 0x64170a70 in memory
flw f1, 0(x2) # load 0x64170a70 from memory into f1
fnmsub.s f28, f28, f19, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x0a82e80c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6290c86 # load x3 with value 0xd6290c86
sw x3, 0(x2) # store 0xd6290c86 in memory
flw f29, 0(x2) # load 0xd6290c86 from memory into f29
li x3, 0x98ecf8c4 # load x3 with value 0x98ecf8c4
sw x3, 0(x2) # store 0x98ecf8c4 in memory
flw f4, 0(x2) # load 0x98ecf8c4 from memory into f4
li x3, 0x1c924171 # load x3 with value 0x1c924171
sw x3, 0(x2) # store 0x1c924171 in memory
flw f19, 0(x2) # load 0x1c924171 from memory into f19
fnmsub.s f29, f29, f4, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0xaadb81a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3867f10c # load x3 with value 0x3867f10c
sw x3, 0(x2) # store 0x3867f10c in memory
flw f30, 0(x2) # load 0x3867f10c from memory into f30
li x3, 0x5fa838fb # load x3 with value 0x5fa838fb
sw x3, 0(x2) # store 0x5fa838fb in memory
flw f6, 0(x2) # load 0x5fa838fb from memory into f6
li x3, 0xef51a295 # load x3 with value 0xef51a295
sw x3, 0(x2) # store 0xef51a295 in memory
flw f27, 0(x2) # load 0xef51a295 from memory into f27
fnmsub.s f30, f30, f6, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x181dcf22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3cce62e # load x3 with value 0xf3cce62e
sw x3, 0(x2) # store 0xf3cce62e in memory
flw f31, 0(x2) # load 0xf3cce62e from memory into f31
li x3, 0x1865f260 # load x3 with value 0x1865f260
sw x3, 0(x2) # store 0x1865f260 in memory
flw f3, 0(x2) # load 0x1865f260 from memory into f3
li x3, 0xd6d6ab65 # load x3 with value 0xd6d6ab65
sw x3, 0(x2) # store 0xd6d6ab65 in memory
flw f13, 0(x2) # load 0xd6d6ab65 from memory into f13
fnmsub.s f31, f31, f3, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x82901fe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8ce7e539 # load x3 with value 0x8ce7e539
sw x3, 0(x2) # store 0x8ce7e539 in memory
flw f26, 0(x2) # load 0x8ce7e539 from memory into f26
li x3, 0x5db48a11 # load x3 with value 0x5db48a11
sw x3, 0(x2) # store 0x5db48a11 in memory
flw f0, 0(x2) # load 0x5db48a11 from memory into f0
li x3, 0xef379de7 # load x3 with value 0xef379de7
sw x3, 0(x2) # store 0xef379de7 in memory
flw f17, 0(x2) # load 0xef379de7 from memory into f17
fnmsub.s f0, f26, f0, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x39f8b53d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x073b5dc7 # load x3 with value 0x073b5dc7
sw x3, 0(x2) # store 0x073b5dc7 in memory
flw f25, 0(x2) # load 0x073b5dc7 from memory into f25
li x3, 0xd02c70ad # load x3 with value 0xd02c70ad
sw x3, 0(x2) # store 0xd02c70ad in memory
flw f1, 0(x2) # load 0xd02c70ad from memory into f1
li x3, 0x6732545a # load x3 with value 0x6732545a
sw x3, 0(x2) # store 0x6732545a in memory
flw f6, 0(x2) # load 0x6732545a from memory into f6
fnmsub.s f1, f25, f1, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0xd8021808 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe9b186b1 # load x3 with value 0xe9b186b1
sw x3, 0(x2) # store 0xe9b186b1 in memory
flw f16, 0(x2) # load 0xe9b186b1 from memory into f16
li x3, 0x91cf21e7 # load x3 with value 0x91cf21e7
sw x3, 0(x2) # store 0x91cf21e7 in memory
flw f2, 0(x2) # load 0x91cf21e7 from memory into f2
li x3, 0x7be4505c # load x3 with value 0x7be4505c
sw x3, 0(x2) # store 0x7be4505c in memory
flw f13, 0(x2) # load 0x7be4505c from memory into f13
fnmsub.s f2, f16, f2, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x80d6e728 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d3ca599 # load x3 with value 0x3d3ca599
sw x3, 0(x2) # store 0x3d3ca599 in memory
flw f19, 0(x2) # load 0x3d3ca599 from memory into f19
li x3, 0x21faffc9 # load x3 with value 0x21faffc9
sw x3, 0(x2) # store 0x21faffc9 in memory
flw f3, 0(x2) # load 0x21faffc9 from memory into f3
li x3, 0x9208a527 # load x3 with value 0x9208a527
sw x3, 0(x2) # store 0x9208a527 in memory
flw f11, 0(x2) # load 0x9208a527 from memory into f11
fnmsub.s f3, f19, f3, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xa547248b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0f6a1c85 # load x3 with value 0x0f6a1c85
sw x3, 0(x2) # store 0x0f6a1c85 in memory
flw f29, 0(x2) # load 0x0f6a1c85 from memory into f29
li x3, 0x24032eb4 # load x3 with value 0x24032eb4
sw x3, 0(x2) # store 0x24032eb4 in memory
flw f4, 0(x2) # load 0x24032eb4 from memory into f4
li x3, 0xcaecc69b # load x3 with value 0xcaecc69b
sw x3, 0(x2) # store 0xcaecc69b in memory
flw f2, 0(x2) # load 0xcaecc69b from memory into f2
fnmsub.s f4, f29, f4, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x87d2be2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83a31b30 # load x3 with value 0x83a31b30
sw x3, 0(x2) # store 0x83a31b30 in memory
flw f16, 0(x2) # load 0x83a31b30 from memory into f16
li x3, 0x9626e44a # load x3 with value 0x9626e44a
sw x3, 0(x2) # store 0x9626e44a in memory
flw f5, 0(x2) # load 0x9626e44a from memory into f5
li x3, 0x7d5bdb00 # load x3 with value 0x7d5bdb00
sw x3, 0(x2) # store 0x7d5bdb00 in memory
flw f29, 0(x2) # load 0x7d5bdb00 from memory into f29
fnmsub.s f5, f16, f5, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x98f64849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee966d29 # load x3 with value 0xee966d29
sw x3, 0(x2) # store 0xee966d29 in memory
flw f8, 0(x2) # load 0xee966d29 from memory into f8
li x3, 0x3c933de5 # load x3 with value 0x3c933de5
sw x3, 0(x2) # store 0x3c933de5 in memory
flw f6, 0(x2) # load 0x3c933de5 from memory into f6
li x3, 0x7bce37fa # load x3 with value 0x7bce37fa
sw x3, 0(x2) # store 0x7bce37fa in memory
flw f13, 0(x2) # load 0x7bce37fa from memory into f13
fnmsub.s f6, f8, f6, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x46a6b572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa27962b6 # load x3 with value 0xa27962b6
sw x3, 0(x2) # store 0xa27962b6 in memory
flw f27, 0(x2) # load 0xa27962b6 from memory into f27
li x3, 0x9638f503 # load x3 with value 0x9638f503
sw x3, 0(x2) # store 0x9638f503 in memory
flw f7, 0(x2) # load 0x9638f503 from memory into f7
li x3, 0xe344bdeb # load x3 with value 0xe344bdeb
sw x3, 0(x2) # store 0xe344bdeb in memory
flw f29, 0(x2) # load 0xe344bdeb from memory into f29
fnmsub.s f7, f27, f7, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x5558cfcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bbb5750 # load x3 with value 0x1bbb5750
sw x3, 0(x2) # store 0x1bbb5750 in memory
flw f9, 0(x2) # load 0x1bbb5750 from memory into f9
li x3, 0xa0cbfca2 # load x3 with value 0xa0cbfca2
sw x3, 0(x2) # store 0xa0cbfca2 in memory
flw f8, 0(x2) # load 0xa0cbfca2 from memory into f8
li x3, 0xc4066e3e # load x3 with value 0xc4066e3e
sw x3, 0(x2) # store 0xc4066e3e in memory
flw f13, 0(x2) # load 0xc4066e3e from memory into f13
fnmsub.s f8, f9, f8, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xd318a7f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x72bff696 # load x3 with value 0x72bff696
sw x3, 0(x2) # store 0x72bff696 in memory
flw f24, 0(x2) # load 0x72bff696 from memory into f24
li x3, 0x1f350354 # load x3 with value 0x1f350354
sw x3, 0(x2) # store 0x1f350354 in memory
flw f9, 0(x2) # load 0x1f350354 from memory into f9
li x3, 0x2f66ef3c # load x3 with value 0x2f66ef3c
sw x3, 0(x2) # store 0x2f66ef3c in memory
flw f3, 0(x2) # load 0x2f66ef3c from memory into f3
fnmsub.s f9, f24, f9, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xd1ec3dde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x640fa0e7 # load x3 with value 0x640fa0e7
sw x3, 0(x2) # store 0x640fa0e7 in memory
flw f13, 0(x2) # load 0x640fa0e7 from memory into f13
li x3, 0x175c75e1 # load x3 with value 0x175c75e1
sw x3, 0(x2) # store 0x175c75e1 in memory
flw f10, 0(x2) # load 0x175c75e1 from memory into f10
li x3, 0x9fc3a2dd # load x3 with value 0x9fc3a2dd
sw x3, 0(x2) # store 0x9fc3a2dd in memory
flw f21, 0(x2) # load 0x9fc3a2dd from memory into f21
fnmsub.s f10, f13, f10, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0xd9671f52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a22a996 # load x3 with value 0x8a22a996
sw x3, 0(x2) # store 0x8a22a996 in memory
flw f10, 0(x2) # load 0x8a22a996 from memory into f10
li x3, 0x806c7812 # load x3 with value 0x806c7812
sw x3, 0(x2) # store 0x806c7812 in memory
flw f11, 0(x2) # load 0x806c7812 from memory into f11
li x3, 0x4b7e1adb # load x3 with value 0x4b7e1adb
sw x3, 0(x2) # store 0x4b7e1adb in memory
flw f19, 0(x2) # load 0x4b7e1adb from memory into f19
fnmsub.s f11, f10, f11, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0xa65fca7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x51d6b5a8 # load x3 with value 0x51d6b5a8
sw x3, 0(x2) # store 0x51d6b5a8 in memory
flw f14, 0(x2) # load 0x51d6b5a8 from memory into f14
li x3, 0xc4aefd47 # load x3 with value 0xc4aefd47
sw x3, 0(x2) # store 0xc4aefd47 in memory
flw f12, 0(x2) # load 0xc4aefd47 from memory into f12
li x3, 0xe90e8576 # load x3 with value 0xe90e8576
sw x3, 0(x2) # store 0xe90e8576 in memory
flw f30, 0(x2) # load 0xe90e8576 from memory into f30
fnmsub.s f12, f14, f12, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0xd6095cb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8237f30 # load x3 with value 0xf8237f30
sw x3, 0(x2) # store 0xf8237f30 in memory
flw f6, 0(x2) # load 0xf8237f30 from memory into f6
li x3, 0xb31060b6 # load x3 with value 0xb31060b6
sw x3, 0(x2) # store 0xb31060b6 in memory
flw f13, 0(x2) # load 0xb31060b6 from memory into f13
li x3, 0x95914e1d # load x3 with value 0x95914e1d
sw x3, 0(x2) # store 0x95914e1d in memory
flw f26, 0(x2) # load 0x95914e1d from memory into f26
fnmsub.s f13, f6, f13, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x2a54263f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc9ed35f # load x3 with value 0xdc9ed35f
sw x3, 0(x2) # store 0xdc9ed35f in memory
flw f1, 0(x2) # load 0xdc9ed35f from memory into f1
li x3, 0x546a5f5d # load x3 with value 0x546a5f5d
sw x3, 0(x2) # store 0x546a5f5d in memory
flw f14, 0(x2) # load 0x546a5f5d from memory into f14
li x3, 0x21661249 # load x3 with value 0x21661249
sw x3, 0(x2) # store 0x21661249 in memory
flw f28, 0(x2) # load 0x21661249 from memory into f28
fnmsub.s f14, f1, f14, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x1dd95cf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5b3ddee # load x3 with value 0xd5b3ddee
sw x3, 0(x2) # store 0xd5b3ddee in memory
flw f31, 0(x2) # load 0xd5b3ddee from memory into f31
li x3, 0x52f60add # load x3 with value 0x52f60add
sw x3, 0(x2) # store 0x52f60add in memory
flw f15, 0(x2) # load 0x52f60add from memory into f15
li x3, 0x5d2b435f # load x3 with value 0x5d2b435f
sw x3, 0(x2) # store 0x5d2b435f in memory
flw f5, 0(x2) # load 0x5d2b435f from memory into f5
fnmsub.s f15, f31, f15, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x43475987 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ca0dae7 # load x3 with value 0x6ca0dae7
sw x3, 0(x2) # store 0x6ca0dae7 in memory
flw f5, 0(x2) # load 0x6ca0dae7 from memory into f5
li x3, 0x06134b5d # load x3 with value 0x06134b5d
sw x3, 0(x2) # store 0x06134b5d in memory
flw f16, 0(x2) # load 0x06134b5d from memory into f16
li x3, 0x3e7d1500 # load x3 with value 0x3e7d1500
sw x3, 0(x2) # store 0x3e7d1500 in memory
flw f7, 0(x2) # load 0x3e7d1500 from memory into f7
fnmsub.s f16, f5, f16, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x2b47933a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6dae495b # load x3 with value 0x6dae495b
sw x3, 0(x2) # store 0x6dae495b in memory
flw f5, 0(x2) # load 0x6dae495b from memory into f5
li x3, 0x6767d9a1 # load x3 with value 0x6767d9a1
sw x3, 0(x2) # store 0x6767d9a1 in memory
flw f17, 0(x2) # load 0x6767d9a1 from memory into f17
li x3, 0x830384b4 # load x3 with value 0x830384b4
sw x3, 0(x2) # store 0x830384b4 in memory
flw f14, 0(x2) # load 0x830384b4 from memory into f14
fnmsub.s f17, f5, f17, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x82f6f3ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a946fd8 # load x3 with value 0x3a946fd8
sw x3, 0(x2) # store 0x3a946fd8 in memory
flw f1, 0(x2) # load 0x3a946fd8 from memory into f1
li x3, 0x11da9f1d # load x3 with value 0x11da9f1d
sw x3, 0(x2) # store 0x11da9f1d in memory
flw f18, 0(x2) # load 0x11da9f1d from memory into f18
li x3, 0xc242496b # load x3 with value 0xc242496b
sw x3, 0(x2) # store 0xc242496b in memory
flw f18, 0(x2) # load 0xc242496b from memory into f18
fnmsub.s f18, f1, f18, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xdcaf6671 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11d11304 # load x3 with value 0x11d11304
sw x3, 0(x2) # store 0x11d11304 in memory
flw f18, 0(x2) # load 0x11d11304 from memory into f18
li x3, 0xb707ae34 # load x3 with value 0xb707ae34
sw x3, 0(x2) # store 0xb707ae34 in memory
flw f19, 0(x2) # load 0xb707ae34 from memory into f19
li x3, 0x1cfc0eb0 # load x3 with value 0x1cfc0eb0
sw x3, 0(x2) # store 0x1cfc0eb0 in memory
flw f11, 0(x2) # load 0x1cfc0eb0 from memory into f11
fnmsub.s f19, f18, f19, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0xe53f4b15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x524880b0 # load x3 with value 0x524880b0
sw x3, 0(x2) # store 0x524880b0 in memory
flw f22, 0(x2) # load 0x524880b0 from memory into f22
li x3, 0x04c2c51d # load x3 with value 0x04c2c51d
sw x3, 0(x2) # store 0x04c2c51d in memory
flw f20, 0(x2) # load 0x04c2c51d from memory into f20
li x3, 0x890a16b4 # load x3 with value 0x890a16b4
sw x3, 0(x2) # store 0x890a16b4 in memory
flw f21, 0(x2) # load 0x890a16b4 from memory into f21
fnmsub.s f20, f22, f20, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0xe707d9f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1312211f # load x3 with value 0x1312211f
sw x3, 0(x2) # store 0x1312211f in memory
flw f22, 0(x2) # load 0x1312211f from memory into f22
li x3, 0x955d280b # load x3 with value 0x955d280b
sw x3, 0(x2) # store 0x955d280b in memory
flw f21, 0(x2) # load 0x955d280b from memory into f21
li x3, 0xff31a576 # load x3 with value 0xff31a576
sw x3, 0(x2) # store 0xff31a576 in memory
flw f27, 0(x2) # load 0xff31a576 from memory into f27
fnmsub.s f21, f22, f21, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x32d1f2e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5fb69544 # load x3 with value 0x5fb69544
sw x3, 0(x2) # store 0x5fb69544 in memory
flw f10, 0(x2) # load 0x5fb69544 from memory into f10
li x3, 0xf3f30e23 # load x3 with value 0xf3f30e23
sw x3, 0(x2) # store 0xf3f30e23 in memory
flw f22, 0(x2) # load 0xf3f30e23 from memory into f22
li x3, 0x73ecb6b9 # load x3 with value 0x73ecb6b9
sw x3, 0(x2) # store 0x73ecb6b9 in memory
flw f23, 0(x2) # load 0x73ecb6b9 from memory into f23
fnmsub.s f22, f10, f22, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x80b18edb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ed7ff03 # load x3 with value 0x9ed7ff03
sw x3, 0(x2) # store 0x9ed7ff03 in memory
flw f23, 0(x2) # load 0x9ed7ff03 from memory into f23
li x3, 0xdc70acee # load x3 with value 0xdc70acee
sw x3, 0(x2) # store 0xdc70acee in memory
flw f23, 0(x2) # load 0xdc70acee from memory into f23
li x3, 0x4e979d81 # load x3 with value 0x4e979d81
sw x3, 0(x2) # store 0x4e979d81 in memory
flw f27, 0(x2) # load 0x4e979d81 from memory into f27
fnmsub.s f23, f23, f23, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x61493b76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a9a2ae5 # load x3 with value 0x9a9a2ae5
sw x3, 0(x2) # store 0x9a9a2ae5 in memory
flw f4, 0(x2) # load 0x9a9a2ae5 from memory into f4
li x3, 0x46e4fc7b # load x3 with value 0x46e4fc7b
sw x3, 0(x2) # store 0x46e4fc7b in memory
flw f24, 0(x2) # load 0x46e4fc7b from memory into f24
li x3, 0x47b71fa2 # load x3 with value 0x47b71fa2
sw x3, 0(x2) # store 0x47b71fa2 in memory
flw f9, 0(x2) # load 0x47b71fa2 from memory into f9
fnmsub.s f24, f4, f24, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x4e65b4fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32fdc36a # load x3 with value 0x32fdc36a
sw x3, 0(x2) # store 0x32fdc36a in memory
flw f27, 0(x2) # load 0x32fdc36a from memory into f27
li x3, 0x91576dcd # load x3 with value 0x91576dcd
sw x3, 0(x2) # store 0x91576dcd in memory
flw f25, 0(x2) # load 0x91576dcd from memory into f25
li x3, 0x8024f3a0 # load x3 with value 0x8024f3a0
sw x3, 0(x2) # store 0x8024f3a0 in memory
flw f21, 0(x2) # load 0x8024f3a0 from memory into f21
fnmsub.s f25, f27, f25, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x11e6e38d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa33eb7db # load x3 with value 0xa33eb7db
sw x3, 0(x2) # store 0xa33eb7db in memory
flw f24, 0(x2) # load 0xa33eb7db from memory into f24
li x3, 0xe26f8f9e # load x3 with value 0xe26f8f9e
sw x3, 0(x2) # store 0xe26f8f9e in memory
flw f26, 0(x2) # load 0xe26f8f9e from memory into f26
li x3, 0x54022da6 # load x3 with value 0x54022da6
sw x3, 0(x2) # store 0x54022da6 in memory
flw f28, 0(x2) # load 0x54022da6 from memory into f28
fnmsub.s f26, f24, f26, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xf5c4abd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef44b071 # load x3 with value 0xef44b071
sw x3, 0(x2) # store 0xef44b071 in memory
flw f3, 0(x2) # load 0xef44b071 from memory into f3
li x3, 0xace52a0d # load x3 with value 0xace52a0d
sw x3, 0(x2) # store 0xace52a0d in memory
flw f27, 0(x2) # load 0xace52a0d from memory into f27
li x3, 0x976eacee # load x3 with value 0x976eacee
sw x3, 0(x2) # store 0x976eacee in memory
flw f30, 0(x2) # load 0x976eacee from memory into f30
fnmsub.s f27, f3, f27, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x1c139330 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50090f44 # load x3 with value 0x50090f44
sw x3, 0(x2) # store 0x50090f44 in memory
flw f24, 0(x2) # load 0x50090f44 from memory into f24
li x3, 0xab0e5c39 # load x3 with value 0xab0e5c39
sw x3, 0(x2) # store 0xab0e5c39 in memory
flw f28, 0(x2) # load 0xab0e5c39 from memory into f28
li x3, 0x970aff7e # load x3 with value 0x970aff7e
sw x3, 0(x2) # store 0x970aff7e in memory
flw f16, 0(x2) # load 0x970aff7e from memory into f16
fnmsub.s f28, f24, f28, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xd0f9d46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa27930f4 # load x3 with value 0xa27930f4
sw x3, 0(x2) # store 0xa27930f4 in memory
flw f21, 0(x2) # load 0xa27930f4 from memory into f21
li x3, 0x10d8ea27 # load x3 with value 0x10d8ea27
sw x3, 0(x2) # store 0x10d8ea27 in memory
flw f29, 0(x2) # load 0x10d8ea27 from memory into f29
li x3, 0x44f1f093 # load x3 with value 0x44f1f093
sw x3, 0(x2) # store 0x44f1f093 in memory
flw f20, 0(x2) # load 0x44f1f093 from memory into f20
fnmsub.s f29, f21, f29, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x23ea93b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9038eb1a # load x3 with value 0x9038eb1a
sw x3, 0(x2) # store 0x9038eb1a in memory
flw f6, 0(x2) # load 0x9038eb1a from memory into f6
li x3, 0xbd1a2581 # load x3 with value 0xbd1a2581
sw x3, 0(x2) # store 0xbd1a2581 in memory
flw f30, 0(x2) # load 0xbd1a2581 from memory into f30
li x3, 0xe2b24f82 # load x3 with value 0xe2b24f82
sw x3, 0(x2) # store 0xe2b24f82 in memory
flw f15, 0(x2) # load 0xe2b24f82 from memory into f15
fnmsub.s f30, f6, f30, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x481be25c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22fa3a12 # load x3 with value 0x22fa3a12
sw x3, 0(x2) # store 0x22fa3a12 in memory
flw f2, 0(x2) # load 0x22fa3a12 from memory into f2
li x3, 0x961cf88f # load x3 with value 0x961cf88f
sw x3, 0(x2) # store 0x961cf88f in memory
flw f31, 0(x2) # load 0x961cf88f from memory into f31
li x3, 0xa5e986f3 # load x3 with value 0xa5e986f3
sw x3, 0(x2) # store 0xa5e986f3 in memory
flw f31, 0(x2) # load 0xa5e986f3 from memory into f31
fnmsub.s f31, f2, f31, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x15, 0x3dc711ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0xc5ef75e0 # load x3 with value 0xc5ef75e0
sw x3, 0(x2) # store 0xc5ef75e0 in memory
flw f21, 0(x2) # load 0xc5ef75e0 from memory into f21
li x3, 0xf30186e5 # load x3 with value 0xf30186e5
sw x3, 0(x2) # store 0xf30186e5 in memory
flw f19, 0(x2) # load 0xf30186e5 from memory into f19
fnmsub.s f15, f16, f21, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x20, 0x5b6b6ca7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x252ab055 # load x3 with value 0x252ab055
sw x3, 0(x2) # store 0x252ab055 in memory
flw f2, 0(x2) # load 0x252ab055 from memory into f2
li x3, 0x22acc8ef # load x3 with value 0x22acc8ef
sw x3, 0(x2) # store 0x22acc8ef in memory
flw f11, 0(x2) # load 0x22acc8ef from memory into f11
fnmsub.s f20, f31, f2, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x29, 0x59bd1d30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0xe4b5e406 # load x3 with value 0xe4b5e406
sw x3, 0(x2) # store 0xe4b5e406 in memory
flw f17, 0(x2) # load 0xe4b5e406 from memory into f17
li x3, 0x339e0fa5 # load x3 with value 0x339e0fa5
sw x3, 0(x2) # store 0x339e0fa5 in memory
flw f12, 0(x2) # load 0x339e0fa5 from memory into f12
fnmsub.s f29, f23, f17, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x11, 0x4d060c7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x93f2083b # load x3 with value 0x93f2083b
sw x3, 0(x2) # store 0x93f2083b in memory
flw f17, 0(x2) # load 0x93f2083b from memory into f17
li x3, 0xad9a5b6d # load x3 with value 0xad9a5b6d
sw x3, 0(x2) # store 0xad9a5b6d in memory
flw f12, 0(x2) # load 0xad9a5b6d from memory into f12
fnmsub.s f11, f26, f17, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x30, 0x7f9ea11b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xbfd00239 # load x3 with value 0xbfd00239
sw x3, 0(x2) # store 0xbfd00239 in memory
flw f25, 0(x2) # load 0xbfd00239 from memory into f25
li x3, 0x8eaeaba8 # load x3 with value 0x8eaeaba8
sw x3, 0(x2) # store 0x8eaeaba8 in memory
flw f1, 0(x2) # load 0x8eaeaba8 from memory into f1
fnmsub.s f30, f22, f25, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x15, 0x49f8fac7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x7d633612 # load x3 with value 0x7d633612
sw x3, 0(x2) # store 0x7d633612 in memory
flw f18, 0(x2) # load 0x7d633612 from memory into f18
li x3, 0xc03cb352 # load x3 with value 0xc03cb352
sw x3, 0(x2) # store 0xc03cb352 in memory
flw f1, 0(x2) # load 0xc03cb352 from memory into f1
fnmsub.s f15, f29, f18, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x19, 0x830fa4d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x6cb68ada # load x3 with value 0x6cb68ada
sw x3, 0(x2) # store 0x6cb68ada in memory
flw f29, 0(x2) # load 0x6cb68ada from memory into f29
li x3, 0xe759a94f # load x3 with value 0xe759a94f
sw x3, 0(x2) # store 0xe759a94f in memory
flw f15, 0(x2) # load 0xe759a94f from memory into f15
fnmsub.s f19, f2, f29, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x17, 0x811eec52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xbc8e59dd # load x3 with value 0xbc8e59dd
sw x3, 0(x2) # store 0xbc8e59dd in memory
flw f3, 0(x2) # load 0xbc8e59dd from memory into f3
li x3, 0xe26695f7 # load x3 with value 0xe26695f7
sw x3, 0(x2) # store 0xe26695f7 in memory
flw f1, 0(x2) # load 0xe26695f7 from memory into f1
fnmsub.s f17, f19, f3, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x24, 0x48725aa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x837721fd # load x3 with value 0x837721fd
sw x3, 0(x2) # store 0x837721fd in memory
flw f17, 0(x2) # load 0x837721fd from memory into f17
li x3, 0xd2aa9e9f # load x3 with value 0xd2aa9e9f
sw x3, 0(x2) # store 0xd2aa9e9f in memory
flw f2, 0(x2) # load 0xd2aa9e9f from memory into f2
fnmsub.s f24, f20, f17, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x7, 0x13a71ff9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x7140d398 # load x3 with value 0x7140d398
sw x3, 0(x2) # store 0x7140d398 in memory
flw f22, 0(x2) # load 0x7140d398 from memory into f22
li x3, 0x9599169d # load x3 with value 0x9599169d
sw x3, 0(x2) # store 0x9599169d in memory
flw f10, 0(x2) # load 0x9599169d from memory into f10
fnmsub.s f7, f24, f22, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x27, 0x106e1907 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xa9ec1fc7 # load x3 with value 0xa9ec1fc7
sw x3, 0(x2) # store 0xa9ec1fc7 in memory
flw f30, 0(x2) # load 0xa9ec1fc7 from memory into f30
li x3, 0xf81c82dc # load x3 with value 0xf81c82dc
sw x3, 0(x2) # store 0xf81c82dc in memory
flw f26, 0(x2) # load 0xf81c82dc from memory into f26
fnmsub.s f27, f29, f30, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x16, 0x8b87536b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x137ab021 # load x3 with value 0x137ab021
sw x3, 0(x2) # store 0x137ab021 in memory
flw f1, 0(x2) # load 0x137ab021 from memory into f1
li x3, 0xa5cdd3b6 # load x3 with value 0xa5cdd3b6
sw x3, 0(x2) # store 0xa5cdd3b6 in memory
flw f13, 0(x2) # load 0xa5cdd3b6 from memory into f13
fnmsub.s f16, f8, f1, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x24, 0xb9a45718 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x8594ac03 # load x3 with value 0x8594ac03
sw x3, 0(x2) # store 0x8594ac03 in memory
flw f16, 0(x2) # load 0x8594ac03 from memory into f16
li x3, 0x03ef2b4d # load x3 with value 0x03ef2b4d
sw x3, 0(x2) # store 0x03ef2b4d in memory
flw f7, 0(x2) # load 0x03ef2b4d from memory into f7
fnmsub.s f24, f3, f16, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x14, 0x5b9b9686 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x6d02ad66 # load x3 with value 0x6d02ad66
sw x3, 0(x2) # store 0x6d02ad66 in memory
flw f29, 0(x2) # load 0x6d02ad66 from memory into f29
li x3, 0x96044117 # load x3 with value 0x96044117
sw x3, 0(x2) # store 0x96044117 in memory
flw f18, 0(x2) # load 0x96044117 from memory into f18
fnmsub.s f14, f19, f29, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x14, 0x28342f0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xe6eec3ac # load x3 with value 0xe6eec3ac
sw x3, 0(x2) # store 0xe6eec3ac in memory
flw f5, 0(x2) # load 0xe6eec3ac from memory into f5
li x3, 0xaf4fa721 # load x3 with value 0xaf4fa721
sw x3, 0(x2) # store 0xaf4fa721 in memory
flw f17, 0(x2) # load 0xaf4fa721 from memory into f17
fnmsub.s f14, f1, f5, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x8, 0x3187e4d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xa901889b # load x3 with value 0xa901889b
sw x3, 0(x2) # store 0xa901889b in memory
flw f28, 0(x2) # load 0xa901889b from memory into f28
li x3, 0xfc0155f6 # load x3 with value 0xfc0155f6
sw x3, 0(x2) # store 0xfc0155f6 in memory
flw f7, 0(x2) # load 0xfc0155f6 from memory into f7
fnmsub.s f8, f13, f28, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x9, 0x1c709851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xbbd145af # load x3 with value 0xbbd145af
sw x3, 0(x2) # store 0xbbd145af in memory
flw f6, 0(x2) # load 0xbbd145af from memory into f6
li x3, 0xa9b56075 # load x3 with value 0xa9b56075
sw x3, 0(x2) # store 0xa9b56075 in memory
flw f10, 0(x2) # load 0xa9b56075 from memory into f10
fnmsub.s f9, f26, f6, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x28, 0x74ac81c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0xff2f366c # load x3 with value 0xff2f366c
sw x3, 0(x2) # store 0xff2f366c in memory
flw f22, 0(x2) # load 0xff2f366c from memory into f22
li x3, 0x576cbd5c # load x3 with value 0x576cbd5c
sw x3, 0(x2) # store 0x576cbd5c in memory
flw f5, 0(x2) # load 0x576cbd5c from memory into f5
fnmsub.s f28, f17, f22, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x1, 0x9afec422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xd9e99e6d # load x3 with value 0xd9e99e6d
sw x3, 0(x2) # store 0xd9e99e6d in memory
flw f5, 0(x2) # load 0xd9e99e6d from memory into f5
li x3, 0xd934c70b # load x3 with value 0xd934c70b
sw x3, 0(x2) # store 0xd934c70b in memory
flw f30, 0(x2) # load 0xd934c70b from memory into f30
fnmsub.s f1, f17, f5, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x4, 0xee4cce09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xbe2b3d25 # load x3 with value 0xbe2b3d25
sw x3, 0(x2) # store 0xbe2b3d25 in memory
flw f10, 0(x2) # load 0xbe2b3d25 from memory into f10
li x3, 0xcf4e126b # load x3 with value 0xcf4e126b
sw x3, 0(x2) # store 0xcf4e126b in memory
flw f22, 0(x2) # load 0xcf4e126b from memory into f22
fnmsub.s f4, f1, f10, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x21, 0x0df21cfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x2b982172 # load x3 with value 0x2b982172
sw x3, 0(x2) # store 0x2b982172 in memory
flw f14, 0(x2) # load 0x2b982172 from memory into f14
li x3, 0x8073b6d3 # load x3 with value 0x8073b6d3
sw x3, 0(x2) # store 0x8073b6d3 in memory
flw f23, 0(x2) # load 0x8073b6d3 from memory into f23
fnmsub.s f21, f30, f14, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x4, 0xb19a6ff3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xdb8b51df # load x3 with value 0xdb8b51df
sw x3, 0(x2) # store 0xdb8b51df in memory
flw f1, 0(x2) # load 0xdb8b51df from memory into f1
li x3, 0x91aa6ec4 # load x3 with value 0x91aa6ec4
sw x3, 0(x2) # store 0x91aa6ec4 in memory
flw f12, 0(x2) # load 0x91aa6ec4 from memory into f12
fnmsub.s f4, f8, f1, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x20, 0x1665dc14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xc43c0429 # load x3 with value 0xc43c0429
sw x3, 0(x2) # store 0xc43c0429 in memory
flw f9, 0(x2) # load 0xc43c0429 from memory into f9
li x3, 0x84008127 # load x3 with value 0x84008127
sw x3, 0(x2) # store 0x84008127 in memory
flw f23, 0(x2) # load 0x84008127 from memory into f23
fnmsub.s f20, f18, f9, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x7, 0xbd468d08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0xde726ebd # load x3 with value 0xde726ebd
sw x3, 0(x2) # store 0xde726ebd in memory
flw f23, 0(x2) # load 0xde726ebd from memory into f23
li x3, 0x9b7d2b8b # load x3 with value 0x9b7d2b8b
sw x3, 0(x2) # store 0x9b7d2b8b in memory
flw f1, 0(x2) # load 0x9b7d2b8b from memory into f1
fnmsub.s f7, f10, f23, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x21, 0x0dd9fd7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x41a3d61f # load x3 with value 0x41a3d61f
sw x3, 0(x2) # store 0x41a3d61f in memory
flw f22, 0(x2) # load 0x41a3d61f from memory into f22
li x3, 0x9c2a2615 # load x3 with value 0x9c2a2615
sw x3, 0(x2) # store 0x9c2a2615 in memory
flw f20, 0(x2) # load 0x9c2a2615 from memory into f20
fnmsub.s f21, f6, f22, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x11, 0xc3e63ca9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x92376eaa # load x3 with value 0x92376eaa
sw x3, 0(x2) # store 0x92376eaa in memory
flw f10, 0(x2) # load 0x92376eaa from memory into f10
li x3, 0x4b96166a # load x3 with value 0x4b96166a
sw x3, 0(x2) # store 0x4b96166a in memory
flw f8, 0(x2) # load 0x4b96166a from memory into f8
fnmsub.s f11, f24, f10, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x20, 0x468de800 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x347a0337 # load x3 with value 0x347a0337
sw x3, 0(x2) # store 0x347a0337 in memory
flw f6, 0(x2) # load 0x347a0337 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x0a1250ad # load x3 with value 0x0a1250ad
sw x3, 0(x2) # store 0x0a1250ad in memory
flw f31, 0(x2) # load 0x0a1250ad from memory into f31
fnmsub.s f20, f6, f1, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x26, 0x2b0b2d0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb873a3de # load x3 with value 0xb873a3de
sw x3, 0(x2) # store 0xb873a3de in memory
flw f9, 0(x2) # load 0xb873a3de from memory into f9
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x3bd4bf8f # load x3 with value 0x3bd4bf8f
sw x3, 0(x2) # store 0x3bd4bf8f in memory
flw f11, 0(x2) # load 0x3bd4bf8f from memory into f11
fnmsub.s f26, f9, f15, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x17, 0x21275d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d864695 # load x3 with value 0x6d864695
sw x3, 0(x2) # store 0x6d864695 in memory
flw f27, 0(x2) # load 0x6d864695 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x0f72017d # load x3 with value 0x0f72017d
sw x3, 0(x2) # store 0x0f72017d in memory
flw f25, 0(x2) # load 0x0f72017d from memory into f25
fnmsub.s f17, f27, f28, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x7, 0x4ac25b62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6e7d498 # load x3 with value 0xd6e7d498
sw x3, 0(x2) # store 0xd6e7d498 in memory
flw f20, 0(x2) # load 0xd6e7d498 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x69a77de8 # load x3 with value 0x69a77de8
sw x3, 0(x2) # store 0x69a77de8 in memory
flw f10, 0(x2) # load 0x69a77de8 from memory into f10
fnmsub.s f7, f20, f4, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x3, 0x7b459649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x896bfc06 # load x3 with value 0x896bfc06
sw x3, 0(x2) # store 0x896bfc06 in memory
flw f18, 0(x2) # load 0x896bfc06 from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x631c592a # load x3 with value 0x631c592a
sw x3, 0(x2) # store 0x631c592a in memory
flw f27, 0(x2) # load 0x631c592a from memory into f27
fnmsub.s f3, f18, f31, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x29, 0xa00bdbb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7a003d5 # load x3 with value 0xc7a003d5
sw x3, 0(x2) # store 0xc7a003d5 in memory
flw f26, 0(x2) # load 0xc7a003d5 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0xdadb6511 # load x3 with value 0xdadb6511
sw x3, 0(x2) # store 0xdadb6511 in memory
flw f2, 0(x2) # load 0xdadb6511 from memory into f2
fnmsub.s f29, f26, f28, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x24, 0xeb9b9e59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x672860d8 # load x3 with value 0x672860d8
sw x3, 0(x2) # store 0x672860d8 in memory
flw f9, 0(x2) # load 0x672860d8 from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x05b01cad # load x3 with value 0x05b01cad
sw x3, 0(x2) # store 0x05b01cad in memory
flw f15, 0(x2) # load 0x05b01cad from memory into f15
fnmsub.s f24, f9, f25, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x29, 0xdbd0e6d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2cc4fa4 # load x3 with value 0xd2cc4fa4
sw x3, 0(x2) # store 0xd2cc4fa4 in memory
flw f25, 0(x2) # load 0xd2cc4fa4 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x2a44df15 # load x3 with value 0x2a44df15
sw x3, 0(x2) # store 0x2a44df15 in memory
flw f18, 0(x2) # load 0x2a44df15 from memory into f18
fnmsub.s f29, f25, f21, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x18, 0x32202dac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe723a2d # load x3 with value 0xbe723a2d
sw x3, 0(x2) # store 0xbe723a2d in memory
flw f27, 0(x2) # load 0xbe723a2d from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0xdb86002a # load x3 with value 0xdb86002a
sw x3, 0(x2) # store 0xdb86002a in memory
flw f12, 0(x2) # load 0xdb86002a from memory into f12
fnmsub.s f18, f27, f8, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x3, 0x8dea9b8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x245e5ba3 # load x3 with value 0x245e5ba3
sw x3, 0(x2) # store 0x245e5ba3 in memory
flw f30, 0(x2) # load 0x245e5ba3 from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x1e2edf09 # load x3 with value 0x1e2edf09
sw x3, 0(x2) # store 0x1e2edf09 in memory
flw f8, 0(x2) # load 0x1e2edf09 from memory into f8
fnmsub.s f3, f30, f24, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x7, 0xf0be2e28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x227f8afb # load x3 with value 0x227f8afb
sw x3, 0(x2) # store 0x227f8afb in memory
flw f22, 0(x2) # load 0x227f8afb from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xba2cc7cf # load x3 with value 0xba2cc7cf
sw x3, 0(x2) # store 0xba2cc7cf in memory
flw f24, 0(x2) # load 0xba2cc7cf from memory into f24
fnmsub.s f7, f22, f13, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x8, 0xe4dfa3ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc2588177 # load x3 with value 0xc2588177
sw x3, 0(x2) # store 0xc2588177 in memory
flw f2, 0(x2) # load 0xc2588177 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0xf1aa3b70 # load x3 with value 0xf1aa3b70
sw x3, 0(x2) # store 0xf1aa3b70 in memory
flw f18, 0(x2) # load 0xf1aa3b70 from memory into f18
fnmsub.s f8, f2, f29, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x22, 0x4cec8cef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e791566 # load x3 with value 0x6e791566
sw x3, 0(x2) # store 0x6e791566 in memory
flw f12, 0(x2) # load 0x6e791566 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x3c123b7d # load x3 with value 0x3c123b7d
sw x3, 0(x2) # store 0x3c123b7d in memory
flw f28, 0(x2) # load 0x3c123b7d from memory into f28
fnmsub.s f22, f12, f17, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x21, 0x0398ede6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a242a16 # load x3 with value 0x0a242a16
sw x3, 0(x2) # store 0x0a242a16 in memory
flw f14, 0(x2) # load 0x0a242a16 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x2999475a # load x3 with value 0x2999475a
sw x3, 0(x2) # store 0x2999475a in memory
flw f5, 0(x2) # load 0x2999475a from memory into f5
fnmsub.s f21, f14, f10, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x29, 0xaf93b757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x895e718c # load x3 with value 0x895e718c
sw x3, 0(x2) # store 0x895e718c in memory
flw f19, 0(x2) # load 0x895e718c from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0xcf2c236d # load x3 with value 0xcf2c236d
sw x3, 0(x2) # store 0xcf2c236d in memory
flw f20, 0(x2) # load 0xcf2c236d from memory into f20
fnmsub.s f29, f19, f22, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x28, 0x0502a8de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbdd49679 # load x3 with value 0xbdd49679
sw x3, 0(x2) # store 0xbdd49679 in memory
flw f30, 0(x2) # load 0xbdd49679 from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x3599de43 # load x3 with value 0x3599de43
sw x3, 0(x2) # store 0x3599de43 in memory
flw f7, 0(x2) # load 0x3599de43 from memory into f7
fnmsub.s f28, f30, f21, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x21, 0xe269e166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa156097d # load x3 with value 0xa156097d
sw x3, 0(x2) # store 0xa156097d in memory
flw f16, 0(x2) # load 0xa156097d from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x294f2249 # load x3 with value 0x294f2249
sw x3, 0(x2) # store 0x294f2249 in memory
flw f6, 0(x2) # load 0x294f2249 from memory into f6
fnmsub.s f21, f16, f29, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x4, 0xe2017f95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69f4d2b8 # load x3 with value 0x69f4d2b8
sw x3, 0(x2) # store 0x69f4d2b8 in memory
flw f7, 0(x2) # load 0x69f4d2b8 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x8109ae57 # load x3 with value 0x8109ae57
sw x3, 0(x2) # store 0x8109ae57 in memory
flw f25, 0(x2) # load 0x8109ae57 from memory into f25
fnmsub.s f4, f7, f5, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x15, 0xd40a6acc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f903d02 # load x3 with value 0x2f903d02
sw x3, 0(x2) # store 0x2f903d02 in memory
flw f10, 0(x2) # load 0x2f903d02 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x18e76df6 # load x3 with value 0x18e76df6
sw x3, 0(x2) # store 0x18e76df6 in memory
flw f6, 0(x2) # load 0x18e76df6 from memory into f6
fnmsub.s f15, f10, f5, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x8, 0x871e23b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfce953d6 # load x3 with value 0xfce953d6
sw x3, 0(x2) # store 0xfce953d6 in memory
flw f31, 0(x2) # load 0xfce953d6 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x1cfc24fd # load x3 with value 0x1cfc24fd
sw x3, 0(x2) # store 0x1cfc24fd in memory
flw f14, 0(x2) # load 0x1cfc24fd from memory into f14
fnmsub.s f8, f31, f29, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x16, 0x803ae705 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdab488c4 # load x3 with value 0xdab488c4
sw x3, 0(x2) # store 0xdab488c4 in memory
flw f25, 0(x2) # load 0xdab488c4 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x92fab99f # load x3 with value 0x92fab99f
sw x3, 0(x2) # store 0x92fab99f in memory
flw f7, 0(x2) # load 0x92fab99f from memory into f7
fnmsub.s f16, f25, f13, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x13, 0x8d8899d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80f71e68 # load x3 with value 0x80f71e68
sw x3, 0(x2) # store 0x80f71e68 in memory
flw f30, 0(x2) # load 0x80f71e68 from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0xee9668ca # load x3 with value 0xee9668ca
sw x3, 0(x2) # store 0xee9668ca in memory
flw f19, 0(x2) # load 0xee9668ca from memory into f19
fnmsub.s f13, f30, f14, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x10, 0x1df64ce6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc48b494 # load x3 with value 0xdc48b494
sw x3, 0(x2) # store 0xdc48b494 in memory
flw f23, 0(x2) # load 0xdc48b494 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x3648d11f # load x3 with value 0x3648d11f
sw x3, 0(x2) # store 0x3648d11f in memory
flw f24, 0(x2) # load 0x3648d11f from memory into f24
fnmsub.s f10, f23, f27, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x20, 0x074df80c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d8ed8f0 # load x3 with value 0x6d8ed8f0
sw x3, 0(x2) # store 0x6d8ed8f0 in memory
flw f29, 0(x2) # load 0x6d8ed8f0 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0xb92da8c6 # load x3 with value 0xb92da8c6
sw x3, 0(x2) # store 0xb92da8c6 in memory
flw f17, 0(x2) # load 0xb92da8c6 from memory into f17
fnmsub.s f20, f29, f1, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x9, 0xfd7fdfbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x870690ac # load x3 with value 0x870690ac
sw x3, 0(x2) # store 0x870690ac in memory
flw f14, 0(x2) # load 0x870690ac from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x53aa44eb # load x3 with value 0x53aa44eb
sw x3, 0(x2) # store 0x53aa44eb in memory
flw f4, 0(x2) # load 0x53aa44eb from memory into f4
fnmsub.s f9, f14, f19, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x17, 0x64838747 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa936f6af # load x3 with value 0xa936f6af
sw x3, 0(x2) # store 0xa936f6af in memory
flw f11, 0(x2) # load 0xa936f6af from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x1c879280 # load x3 with value 0x1c879280
sw x3, 0(x2) # store 0x1c879280 in memory
flw f9, 0(x2) # load 0x1c879280 from memory into f9
fnmsub.s f17, f11, f7, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x18, 0x5a3acd1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48109ee4 # load x3 with value 0x48109ee4
sw x3, 0(x2) # store 0x48109ee4 in memory
flw f5, 0(x2) # load 0x48109ee4 from memory into f5
li x3, 0x78a4d9b3 # load x3 with value 0x78a4d9b3
sw x3, 0(x2) # store 0x78a4d9b3 in memory
flw f20, 0(x2) # load 0x78a4d9b3 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmsub.s f18, f5, f20, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x2, 0x95752163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6832fca4 # load x3 with value 0x6832fca4
sw x3, 0(x2) # store 0x6832fca4 in memory
flw f9, 0(x2) # load 0x6832fca4 from memory into f9
li x3, 0xc7b608c4 # load x3 with value 0xc7b608c4
sw x3, 0(x2) # store 0xc7b608c4 in memory
flw f7, 0(x2) # load 0xc7b608c4 from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmsub.s f2, f9, f7, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x7, 0xa615e9a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x78b47f65 # load x3 with value 0x78b47f65
sw x3, 0(x2) # store 0x78b47f65 in memory
flw f11, 0(x2) # load 0x78b47f65 from memory into f11
li x3, 0x40c46ead # load x3 with value 0x40c46ead
sw x3, 0(x2) # store 0x40c46ead in memory
flw f30, 0(x2) # load 0x40c46ead from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmsub.s f7, f11, f30, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x25, 0x3baeb5ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0b51bdc6 # load x3 with value 0x0b51bdc6
sw x3, 0(x2) # store 0x0b51bdc6 in memory
flw f7, 0(x2) # load 0x0b51bdc6 from memory into f7
li x3, 0x85276b97 # load x3 with value 0x85276b97
sw x3, 0(x2) # store 0x85276b97 in memory
flw f26, 0(x2) # load 0x85276b97 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fnmsub.s f25, f7, f26, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x10, 0x0233e1d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e03f2e3 # load x3 with value 0x6e03f2e3
sw x3, 0(x2) # store 0x6e03f2e3 in memory
flw f11, 0(x2) # load 0x6e03f2e3 from memory into f11
li x3, 0x54195a34 # load x3 with value 0x54195a34
sw x3, 0(x2) # store 0x54195a34 in memory
flw f19, 0(x2) # load 0x54195a34 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fnmsub.s f10, f11, f19, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x19, 0x5f72b7e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x94722e32 # load x3 with value 0x94722e32
sw x3, 0(x2) # store 0x94722e32 in memory
flw f1, 0(x2) # load 0x94722e32 from memory into f1
li x3, 0xd061da47 # load x3 with value 0xd061da47
sw x3, 0(x2) # store 0xd061da47 in memory
flw f14, 0(x2) # load 0xd061da47 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fnmsub.s f19, f1, f14, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x24, 0x1666e6ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe55008b1 # load x3 with value 0xe55008b1
sw x3, 0(x2) # store 0xe55008b1 in memory
flw f13, 0(x2) # load 0xe55008b1 from memory into f13
li x3, 0x9600b8e4 # load x3 with value 0x9600b8e4
sw x3, 0(x2) # store 0x9600b8e4 in memory
flw f16, 0(x2) # load 0x9600b8e4 from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f24, f13, f16, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x9, 0xa7da41e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b7b61ba # load x3 with value 0x8b7b61ba
sw x3, 0(x2) # store 0x8b7b61ba in memory
flw f20, 0(x2) # load 0x8b7b61ba from memory into f20
li x3, 0xaa0a39e8 # load x3 with value 0xaa0a39e8
sw x3, 0(x2) # store 0xaa0a39e8 in memory
flw f16, 0(x2) # load 0xaa0a39e8 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmsub.s f9, f20, f16, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x23, 0xe3b036cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c3fffe1 # load x3 with value 0x2c3fffe1
sw x3, 0(x2) # store 0x2c3fffe1 in memory
flw f10, 0(x2) # load 0x2c3fffe1 from memory into f10
li x3, 0x085da7ae # load x3 with value 0x085da7ae
sw x3, 0(x2) # store 0x085da7ae in memory
flw f26, 0(x2) # load 0x085da7ae from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fnmsub.s f23, f10, f26, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x16, 0xb0d08776 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6fbcf880 # load x3 with value 0x6fbcf880
sw x3, 0(x2) # store 0x6fbcf880 in memory
flw f30, 0(x2) # load 0x6fbcf880 from memory into f30
li x3, 0x25441f83 # load x3 with value 0x25441f83
sw x3, 0(x2) # store 0x25441f83 in memory
flw f6, 0(x2) # load 0x25441f83 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fnmsub.s f16, f30, f6, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x30, 0x39d024c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef757182 # load x3 with value 0xef757182
sw x3, 0(x2) # store 0xef757182 in memory
flw f13, 0(x2) # load 0xef757182 from memory into f13
li x3, 0x8e39a3de # load x3 with value 0x8e39a3de
sw x3, 0(x2) # store 0x8e39a3de in memory
flw f17, 0(x2) # load 0x8e39a3de from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmsub.s f30, f13, f17, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x30, 0xdb9e5ea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd125efa3 # load x3 with value 0xd125efa3
sw x3, 0(x2) # store 0xd125efa3 in memory
flw f19, 0(x2) # load 0xd125efa3 from memory into f19
li x3, 0x51aec92a # load x3 with value 0x51aec92a
sw x3, 0(x2) # store 0x51aec92a in memory
flw f8, 0(x2) # load 0x51aec92a from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmsub.s f30, f19, f8, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x8, 0x3637e2af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96a00dbb # load x3 with value 0x96a00dbb
sw x3, 0(x2) # store 0x96a00dbb in memory
flw f19, 0(x2) # load 0x96a00dbb from memory into f19
li x3, 0x3e65a654 # load x3 with value 0x3e65a654
sw x3, 0(x2) # store 0x3e65a654 in memory
flw f10, 0(x2) # load 0x3e65a654 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f8, f19, f10, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x29, 0x2b858571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfbe27329 # load x3 with value 0xfbe27329
sw x3, 0(x2) # store 0xfbe27329 in memory
flw f3, 0(x2) # load 0xfbe27329 from memory into f3
li x3, 0x6b20989b # load x3 with value 0x6b20989b
sw x3, 0(x2) # store 0x6b20989b in memory
flw f16, 0(x2) # load 0x6b20989b from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fnmsub.s f29, f3, f16, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x18, 0xe1d2c94c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2d0d968 # load x3 with value 0xd2d0d968
sw x3, 0(x2) # store 0xd2d0d968 in memory
flw f31, 0(x2) # load 0xd2d0d968 from memory into f31
li x3, 0x54a4c5ec # load x3 with value 0x54a4c5ec
sw x3, 0(x2) # store 0x54a4c5ec in memory
flw f24, 0(x2) # load 0x54a4c5ec from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fnmsub.s f18, f31, f24, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x26, 0xc0314735 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39d5e6e1 # load x3 with value 0x39d5e6e1
sw x3, 0(x2) # store 0x39d5e6e1 in memory
flw f6, 0(x2) # load 0x39d5e6e1 from memory into f6
li x3, 0x4f8afd09 # load x3 with value 0x4f8afd09
sw x3, 0(x2) # store 0x4f8afd09 in memory
flw f19, 0(x2) # load 0x4f8afd09 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmsub.s f26, f6, f19, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x19, 0x34a8f644 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7f1fa7a # load x3 with value 0xb7f1fa7a
sw x3, 0(x2) # store 0xb7f1fa7a in memory
flw f3, 0(x2) # load 0xb7f1fa7a from memory into f3
li x3, 0x00621631 # load x3 with value 0x00621631
sw x3, 0(x2) # store 0x00621631 in memory
flw f6, 0(x2) # load 0x00621631 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmsub.s f19, f3, f6, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x2, 0x7fbd754d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4ebb8b80 # load x3 with value 0x4ebb8b80
sw x3, 0(x2) # store 0x4ebb8b80 in memory
flw f9, 0(x2) # load 0x4ebb8b80 from memory into f9
li x3, 0xc8a031fd # load x3 with value 0xc8a031fd
sw x3, 0(x2) # store 0xc8a031fd in memory
flw f12, 0(x2) # load 0xc8a031fd from memory into f12
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmsub.s f2, f9, f12, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x27, 0x75d55ceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc581fbef # load x3 with value 0xc581fbef
sw x3, 0(x2) # store 0xc581fbef in memory
flw f10, 0(x2) # load 0xc581fbef from memory into f10
li x3, 0xfe990859 # load x3 with value 0xfe990859
sw x3, 0(x2) # store 0xfe990859 in memory
flw f29, 0(x2) # load 0xfe990859 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmsub.s f27, f10, f29, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x16, 0xc4a7536d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1395080b # load x3 with value 0x1395080b
sw x3, 0(x2) # store 0x1395080b in memory
flw f17, 0(x2) # load 0x1395080b from memory into f17
li x3, 0x44aacacc # load x3 with value 0x44aacacc
sw x3, 0(x2) # store 0x44aacacc in memory
flw f22, 0(x2) # load 0x44aacacc from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fnmsub.s f16, f17, f22, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x13, 0x007b8322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x678c27be # load x3 with value 0x678c27be
sw x3, 0(x2) # store 0x678c27be in memory
flw f9, 0(x2) # load 0x678c27be from memory into f9
li x3, 0x742368c1 # load x3 with value 0x742368c1
sw x3, 0(x2) # store 0x742368c1 in memory
flw f19, 0(x2) # load 0x742368c1 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f13, f9, f19, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x24, 0x9b369c62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95b04890 # load x3 with value 0x95b04890
sw x3, 0(x2) # store 0x95b04890 in memory
flw f9, 0(x2) # load 0x95b04890 from memory into f9
li x3, 0x495c9416 # load x3 with value 0x495c9416
sw x3, 0(x2) # store 0x495c9416 in memory
flw f28, 0(x2) # load 0x495c9416 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fnmsub.s f24, f9, f28, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x30, 0x80988c07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d285f4d # load x3 with value 0x7d285f4d
sw x3, 0(x2) # store 0x7d285f4d in memory
flw f5, 0(x2) # load 0x7d285f4d from memory into f5
li x3, 0x275013c5 # load x3 with value 0x275013c5
sw x3, 0(x2) # store 0x275013c5 in memory
flw f22, 0(x2) # load 0x275013c5 from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmsub.s f30, f5, f22, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x26, 0x5186c92e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d84e735 # load x3 with value 0x1d84e735
sw x3, 0(x2) # store 0x1d84e735 in memory
flw f7, 0(x2) # load 0x1d84e735 from memory into f7
li x3, 0x40ca1861 # load x3 with value 0x40ca1861
sw x3, 0(x2) # store 0x40ca1861 in memory
flw f30, 0(x2) # load 0x40ca1861 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmsub.s f26, f7, f30, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x23, 0x91063333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xafe9fc54 # load x3 with value 0xafe9fc54
sw x3, 0(x2) # store 0xafe9fc54 in memory
flw f14, 0(x2) # load 0xafe9fc54 from memory into f14
li x3, 0x9ab1383a # load x3 with value 0x9ab1383a
sw x3, 0(x2) # store 0x9ab1383a in memory
flw f30, 0(x2) # load 0x9ab1383a from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmsub.s f23, f14, f30, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x13, 0x03cfda5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca766423 # load x3 with value 0xca766423
sw x3, 0(x2) # store 0xca766423 in memory
flw f26, 0(x2) # load 0xca766423 from memory into f26
li x3, 0x33e716a6 # load x3 with value 0x33e716a6
sw x3, 0(x2) # store 0x33e716a6 in memory
flw f5, 0(x2) # load 0x33e716a6 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmsub.s f13, f26, f5, f9 # perform operation

# Testcase cp_frm
li x19, 0x606fa92d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6f72906 # load x3 with value 0xa6f72906
sw x3, 0(x2) # store 0xa6f72906 in memory
flw f4, 0(x2) # load 0xa6f72906 from memory into f4
li x3, 0xd791da39 # load x3 with value 0xd791da39
sw x3, 0(x2) # store 0xd791da39 in memory
flw f28, 0(x2) # load 0xd791da39 from memory into f28
li x3, 0x0000000e # load x3 with value 0x0000000e
sw x3, 0(x2) # store 0x0000000e in memory
flw f14, 0(x2) # load 0x0000000e from memory into f14
fnmsub.s f19, f4, f28, f14, dyn # perform operation
fnmsub.s f19, f4, f28, f14, rdn # perform operation
fnmsub.s f19, f4, f28, f14, rmm # perform operation
fnmsub.s f19, f4, f28, f14, rne # perform operation
fnmsub.s f19, f4, f28, f14, rtz # perform operation
fnmsub.s f19, f4, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f4, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x28, 0xf079b238 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x75b8b3ce # load x3 with value 0x75b8b3ce
sw x3, 0(x2) # store 0x75b8b3ce in memory
flw f19, 0(x2) # load 0x75b8b3ce from memory into f19
fnmsub.s f28, f4, f16, f19, dyn # perform operation
fnmsub.s f28, f4, f16, f19, rdn # perform operation
fnmsub.s f28, f4, f16, f19, rmm # perform operation
fnmsub.s f28, f4, f16, f19, rne # perform operation
fnmsub.s f28, f4, f16, f19, rtz # perform operation
fnmsub.s f28, f4, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f4, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f4, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x16, 0xb85660d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0xc8621d68 # load x3 with value 0xc8621d68
sw x3, 0(x2) # store 0xc8621d68 in memory
flw f17, 0(x2) # load 0xc8621d68 from memory into f17
fnmsub.s f16, f4, f31, f17, dyn # perform operation
fnmsub.s f16, f4, f31, f17, rdn # perform operation
fnmsub.s f16, f4, f31, f17, rmm # perform operation
fnmsub.s f16, f4, f31, f17, rne # perform operation
fnmsub.s f16, f4, f31, f17, rtz # perform operation
fnmsub.s f16, f4, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f4, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x16, 0x01e378c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0xf35f0527 # load x3 with value 0xf35f0527
sw x3, 0(x2) # store 0xf35f0527 in memory
flw f10, 0(x2) # load 0xf35f0527 from memory into f10
fnmsub.s f16, f13, f29, f10, dyn # perform operation
fnmsub.s f16, f13, f29, f10, rdn # perform operation
fnmsub.s f16, f13, f29, f10, rmm # perform operation
fnmsub.s f16, f13, f29, f10, rne # perform operation
fnmsub.s f16, f13, f29, f10, rtz # perform operation
fnmsub.s f16, f13, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f13, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f13, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x19, 0x5309d1e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x72f7b721 # load x3 with value 0x72f7b721
sw x3, 0(x2) # store 0x72f7b721 in memory
flw f24, 0(x2) # load 0x72f7b721 from memory into f24
fnmsub.s f19, f18, f8, f24, dyn # perform operation
fnmsub.s f19, f18, f8, f24, rdn # perform operation
fnmsub.s f19, f18, f8, f24, rmm # perform operation
fnmsub.s f19, f18, f8, f24, rne # perform operation
fnmsub.s f19, f18, f8, f24, rtz # perform operation
fnmsub.s f19, f18, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x2, 0xd1e173f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xe39eb5e9 # load x3 with value 0xe39eb5e9
sw x3, 0(x2) # store 0xe39eb5e9 in memory
flw f28, 0(x2) # load 0xe39eb5e9 from memory into f28
fnmsub.s f2, f5, f10, f28, dyn # perform operation
fnmsub.s f2, f5, f10, f28, rdn # perform operation
fnmsub.s f2, f5, f10, f28, rmm # perform operation
fnmsub.s f2, f5, f10, f28, rne # perform operation
fnmsub.s f2, f5, f10, f28, rtz # perform operation
fnmsub.s f2, f5, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x10, 0xdefdb87d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x96c781d5 # load x3 with value 0x96c781d5
sw x3, 0(x2) # store 0x96c781d5 in memory
flw f1, 0(x2) # load 0x96c781d5 from memory into f1
fnmsub.s f10, f14, f2, f1, dyn # perform operation
fnmsub.s f10, f14, f2, f1, rdn # perform operation
fnmsub.s f10, f14, f2, f1, rmm # perform operation
fnmsub.s f10, f14, f2, f1, rne # perform operation
fnmsub.s f10, f14, f2, f1, rtz # perform operation
fnmsub.s f10, f14, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x26, 0xb981959f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0xae452e4a # load x3 with value 0xae452e4a
sw x3, 0(x2) # store 0xae452e4a in memory
flw f17, 0(x2) # load 0xae452e4a from memory into f17
fnmsub.s f26, f5, f4, f17, dyn # perform operation
fnmsub.s f26, f5, f4, f17, rdn # perform operation
fnmsub.s f26, f5, f4, f17, rmm # perform operation
fnmsub.s f26, f5, f4, f17, rne # perform operation
fnmsub.s f26, f5, f4, f17, rtz # perform operation
fnmsub.s f26, f5, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f5, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x25, 0x4aad54d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x5a0a1d3d # load x3 with value 0x5a0a1d3d
sw x3, 0(x2) # store 0x5a0a1d3d in memory
flw f3, 0(x2) # load 0x5a0a1d3d from memory into f3
fnmsub.s f25, f31, f11, f3, dyn # perform operation
fnmsub.s f25, f31, f11, f3, rdn # perform operation
fnmsub.s f25, f31, f11, f3, rmm # perform operation
fnmsub.s f25, f31, f11, f3, rne # perform operation
fnmsub.s f25, f31, f11, f3, rtz # perform operation
fnmsub.s f25, f31, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x19, 0x8507cc8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x32c70578 # load x3 with value 0x32c70578
sw x3, 0(x2) # store 0x32c70578 in memory
flw f28, 0(x2) # load 0x32c70578 from memory into f28
fnmsub.s f19, f23, f25, f28, dyn # perform operation
fnmsub.s f19, f23, f25, f28, rdn # perform operation
fnmsub.s f19, f23, f25, f28, rmm # perform operation
fnmsub.s f19, f23, f25, f28, rne # perform operation
fnmsub.s f19, f23, f25, f28, rtz # perform operation
fnmsub.s f19, f23, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x6, 0xdb64faca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xa562ca58 # load x3 with value 0xa562ca58
sw x3, 0(x2) # store 0xa562ca58 in memory
flw f3, 0(x2) # load 0xa562ca58 from memory into f3
fnmsub.s f6, f13, f16, f3, dyn # perform operation
fnmsub.s f6, f13, f16, f3, rdn # perform operation
fnmsub.s f6, f13, f16, f3, rmm # perform operation
fnmsub.s f6, f13, f16, f3, rne # perform operation
fnmsub.s f6, f13, f16, f3, rtz # perform operation
fnmsub.s f6, f13, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f13, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x20, 0xda2427f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x0154f1e1 # load x3 with value 0x0154f1e1
sw x3, 0(x2) # store 0x0154f1e1 in memory
flw f6, 0(x2) # load 0x0154f1e1 from memory into f6
fnmsub.s f20, f14, f17, f6, dyn # perform operation
fnmsub.s f20, f14, f17, f6, rdn # perform operation
fnmsub.s f20, f14, f17, f6, rmm # perform operation
fnmsub.s f20, f14, f17, f6, rne # perform operation
fnmsub.s f20, f14, f17, f6, rtz # perform operation
fnmsub.s f20, f14, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f14, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f14, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f14, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f14, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f14, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x18, 0x108fbfaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0xa42d4795 # load x3 with value 0xa42d4795
sw x3, 0(x2) # store 0xa42d4795 in memory
flw f24, 0(x2) # load 0xa42d4795 from memory into f24
fnmsub.s f18, f21, f12, f24, dyn # perform operation
fnmsub.s f18, f21, f12, f24, rdn # perform operation
fnmsub.s f18, f21, f12, f24, rmm # perform operation
fnmsub.s f18, f21, f12, f24, rne # perform operation
fnmsub.s f18, f21, f12, f24, rtz # perform operation
fnmsub.s f18, f21, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x20, 0x3c100cbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x34576a30 # load x3 with value 0x34576a30
sw x3, 0(x2) # store 0x34576a30 in memory
flw f13, 0(x2) # load 0x34576a30 from memory into f13
fnmsub.s f20, f11, f18, f13, dyn # perform operation
fnmsub.s f20, f11, f18, f13, rdn # perform operation
fnmsub.s f20, f11, f18, f13, rmm # perform operation
fnmsub.s f20, f11, f18, f13, rne # perform operation
fnmsub.s f20, f11, f18, f13, rtz # perform operation
fnmsub.s f20, f11, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x10, 0xb569d5f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x16723ec6 # load x3 with value 0x16723ec6
sw x3, 0(x2) # store 0x16723ec6 in memory
flw f15, 0(x2) # load 0x16723ec6 from memory into f15
fnmsub.s f10, f3, f23, f15, dyn # perform operation
fnmsub.s f10, f3, f23, f15, rdn # perform operation
fnmsub.s f10, f3, f23, f15, rmm # perform operation
fnmsub.s f10, f3, f23, f15, rne # perform operation
fnmsub.s f10, f3, f23, f15, rtz # perform operation
fnmsub.s f10, f3, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f3, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x1, 0x189907f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x0d186283 # load x3 with value 0x0d186283
sw x3, 0(x2) # store 0x0d186283 in memory
flw f22, 0(x2) # load 0x0d186283 from memory into f22
fnmsub.s f1, f18, f28, f22, dyn # perform operation
fnmsub.s f1, f18, f28, f22, rdn # perform operation
fnmsub.s f1, f18, f28, f22, rmm # perform operation
fnmsub.s f1, f18, f28, f22, rne # perform operation
fnmsub.s f1, f18, f28, f22, rtz # perform operation
fnmsub.s f1, f18, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x5, 0x851bdcb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x719c24ce # load x3 with value 0x719c24ce
sw x3, 0(x2) # store 0x719c24ce in memory
flw f3, 0(x2) # load 0x719c24ce from memory into f3
fnmsub.s f5, f29, f26, f3, dyn # perform operation
fnmsub.s f5, f29, f26, f3, rdn # perform operation
fnmsub.s f5, f29, f26, f3, rmm # perform operation
fnmsub.s f5, f29, f26, f3, rne # perform operation
fnmsub.s f5, f29, f26, f3, rtz # perform operation
fnmsub.s f5, f29, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x10, 0xf511e2ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x04764606 # load x3 with value 0x04764606
sw x3, 0(x2) # store 0x04764606 in memory
flw f21, 0(x2) # load 0x04764606 from memory into f21
fnmsub.s f10, f23, f19, f21, dyn # perform operation
fnmsub.s f10, f23, f19, f21, rdn # perform operation
fnmsub.s f10, f23, f19, f21, rmm # perform operation
fnmsub.s f10, f23, f19, f21, rne # perform operation
fnmsub.s f10, f23, f19, f21, rtz # perform operation
fnmsub.s f10, f23, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f23, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x18, 0x0854d1f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x9a5c0c3d # load x3 with value 0x9a5c0c3d
sw x3, 0(x2) # store 0x9a5c0c3d in memory
flw f23, 0(x2) # load 0x9a5c0c3d from memory into f23
fnmsub.s f18, f16, f14, f23, dyn # perform operation
fnmsub.s f18, f16, f14, f23, rdn # perform operation
fnmsub.s f18, f16, f14, f23, rmm # perform operation
fnmsub.s f18, f16, f14, f23, rne # perform operation
fnmsub.s f18, f16, f14, f23, rtz # perform operation
fnmsub.s f18, f16, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x23, 0xcda2114d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x634fb3c0 # load x3 with value 0x634fb3c0
sw x3, 0(x2) # store 0x634fb3c0 in memory
flw f13, 0(x2) # load 0x634fb3c0 from memory into f13
fnmsub.s f23, f8, f14, f13, dyn # perform operation
fnmsub.s f23, f8, f14, f13, rdn # perform operation
fnmsub.s f23, f8, f14, f13, rmm # perform operation
fnmsub.s f23, f8, f14, f13, rne # perform operation
fnmsub.s f23, f8, f14, f13, rtz # perform operation
fnmsub.s f23, f8, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f8, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f8, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x13, 0x61df8172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0xeb157345 # load x3 with value 0xeb157345
sw x3, 0(x2) # store 0xeb157345 in memory
flw f10, 0(x2) # load 0xeb157345 from memory into f10
fnmsub.s f13, f7, f2, f10, dyn # perform operation
fnmsub.s f13, f7, f2, f10, rdn # perform operation
fnmsub.s f13, f7, f2, f10, rmm # perform operation
fnmsub.s f13, f7, f2, f10, rne # perform operation
fnmsub.s f13, f7, f2, f10, rtz # perform operation
fnmsub.s f13, f7, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f7, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x14, 0x8d8bd012 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x05dc7fe8 # load x3 with value 0x05dc7fe8
sw x3, 0(x2) # store 0x05dc7fe8 in memory
flw f3, 0(x2) # load 0x05dc7fe8 from memory into f3
fnmsub.s f14, f17, f4, f3, dyn # perform operation
fnmsub.s f14, f17, f4, f3, rdn # perform operation
fnmsub.s f14, f17, f4, f3, rmm # perform operation
fnmsub.s f14, f17, f4, f3, rne # perform operation
fnmsub.s f14, f17, f4, f3, rtz # perform operation
fnmsub.s f14, f17, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x9, 0x2fb90f5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x801ee3a8 # load x3 with value 0x801ee3a8
sw x3, 0(x2) # store 0x801ee3a8 in memory
flw f8, 0(x2) # load 0x801ee3a8 from memory into f8
fnmsub.s f9, f13, f14, f8, dyn # perform operation
fnmsub.s f9, f13, f14, f8, rdn # perform operation
fnmsub.s f9, f13, f14, f8, rmm # perform operation
fnmsub.s f9, f13, f14, f8, rne # perform operation
fnmsub.s f9, f13, f14, f8, rtz # perform operation
fnmsub.s f9, f13, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x21, 0x3bfa1d12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xd35284df # load x3 with value 0xd35284df
sw x3, 0(x2) # store 0xd35284df in memory
flw f8, 0(x2) # load 0xd35284df from memory into f8
fnmsub.s f21, f5, f19, f8, dyn # perform operation
fnmsub.s f21, f5, f19, f8, rdn # perform operation
fnmsub.s f21, f5, f19, f8, rmm # perform operation
fnmsub.s f21, f5, f19, f8, rne # perform operation
fnmsub.s f21, f5, f19, f8, rtz # perform operation
fnmsub.s f21, f5, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x24, 0x6725f5fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0xff89d03f # load x3 with value 0xff89d03f
sw x3, 0(x2) # store 0xff89d03f in memory
flw f28, 0(x2) # load 0xff89d03f from memory into f28
fnmsub.s f24, f14, f31, f28, dyn # perform operation
fnmsub.s f24, f14, f31, f28, rdn # perform operation
fnmsub.s f24, f14, f31, f28, rmm # perform operation
fnmsub.s f24, f14, f31, f28, rne # perform operation
fnmsub.s f24, f14, f31, f28, rtz # perform operation
fnmsub.s f24, f14, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f14, f31, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x14, 0x05f811b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x66c41ab7 # load x3 with value 0x66c41ab7
sw x3, 0(x2) # store 0x66c41ab7 in memory
flw f2, 0(x2) # load 0x66c41ab7 from memory into f2
fnmsub.s f14, f18, f20, f2, dyn # perform operation
fnmsub.s f14, f18, f20, f2, rdn # perform operation
fnmsub.s f14, f18, f20, f2, rmm # perform operation
fnmsub.s f14, f18, f20, f2, rne # perform operation
fnmsub.s f14, f18, f20, f2, rtz # perform operation
fnmsub.s f14, f18, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f18, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x25, 0x4663de4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x38e8e889 # load x3 with value 0x38e8e889
sw x3, 0(x2) # store 0x38e8e889 in memory
flw f5, 0(x2) # load 0x38e8e889 from memory into f5
fnmsub.s f25, f22, f26, f5, dyn # perform operation
fnmsub.s f25, f22, f26, f5, rdn # perform operation
fnmsub.s f25, f22, f26, f5, rmm # perform operation
fnmsub.s f25, f22, f26, f5, rne # perform operation
fnmsub.s f25, f22, f26, f5, rtz # perform operation
fnmsub.s f25, f22, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f22, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f22, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f22, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f22, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f22, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x7, 0xfe8b8412 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x80cd402b # load x3 with value 0x80cd402b
sw x3, 0(x2) # store 0x80cd402b in memory
flw f22, 0(x2) # load 0x80cd402b from memory into f22
fnmsub.s f7, f4, f14, f22, dyn # perform operation
fnmsub.s f7, f4, f14, f22, rdn # perform operation
fnmsub.s f7, f4, f14, f22, rmm # perform operation
fnmsub.s f7, f4, f14, f22, rne # perform operation
fnmsub.s f7, f4, f14, f22, rtz # perform operation
fnmsub.s f7, f4, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f4, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f4, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f4, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f4, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f4, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x2, 0x3bff71da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x095b8a60 # load x3 with value 0x095b8a60
sw x3, 0(x2) # store 0x095b8a60 in memory
flw f29, 0(x2) # load 0x095b8a60 from memory into f29
fnmsub.s f2, f11, f4, f29, dyn # perform operation
fnmsub.s f2, f11, f4, f29, rdn # perform operation
fnmsub.s f2, f11, f4, f29, rmm # perform operation
fnmsub.s f2, f11, f4, f29, rne # perform operation
fnmsub.s f2, f11, f4, f29, rtz # perform operation
fnmsub.s f2, f11, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x18, 0x507dbf6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0x2834c3ca # load x3 with value 0x2834c3ca
sw x3, 0(x2) # store 0x2834c3ca in memory
flw f15, 0(x2) # load 0x2834c3ca from memory into f15
fnmsub.s f18, f12, f14, f15, dyn # perform operation
fnmsub.s f18, f12, f14, f15, rdn # perform operation
fnmsub.s f18, f12, f14, f15, rmm # perform operation
fnmsub.s f18, f12, f14, f15, rne # perform operation
fnmsub.s f18, f12, f14, f15, rtz # perform operation
fnmsub.s f18, f12, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x9, 0x168f06b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x035b0cb4 # load x3 with value 0x035b0cb4
sw x3, 0(x2) # store 0x035b0cb4 in memory
flw f31, 0(x2) # load 0x035b0cb4 from memory into f31
fnmsub.s f9, f20, f22, f31, dyn # perform operation
fnmsub.s f9, f20, f22, f31, rdn # perform operation
fnmsub.s f9, f20, f22, f31, rmm # perform operation
fnmsub.s f9, f20, f22, f31, rne # perform operation
fnmsub.s f9, f20, f22, f31, rtz # perform operation
fnmsub.s f9, f20, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x4, 0x368cdc8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x615b4d68 # load x3 with value 0x615b4d68
sw x3, 0(x2) # store 0x615b4d68 in memory
flw f22, 0(x2) # load 0x615b4d68 from memory into f22
fnmsub.s f4, f24, f1, f22, dyn # perform operation
fnmsub.s f4, f24, f1, f22, rdn # perform operation
fnmsub.s f4, f24, f1, f22, rmm # perform operation
fnmsub.s f4, f24, f1, f22, rne # perform operation
fnmsub.s f4, f24, f1, f22, rtz # perform operation
fnmsub.s f4, f24, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f24, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f24, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x30, 0x5d292412 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x68874649 # load x3 with value 0x68874649
sw x3, 0(x2) # store 0x68874649 in memory
flw f3, 0(x2) # load 0x68874649 from memory into f3
fnmsub.s f30, f28, f19, f3, dyn # perform operation
fnmsub.s f30, f28, f19, f3, rdn # perform operation
fnmsub.s f30, f28, f19, f3, rmm # perform operation
fnmsub.s f30, f28, f19, f3, rne # perform operation
fnmsub.s f30, f28, f19, f3, rtz # perform operation
fnmsub.s f30, f28, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f28, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x15, 0x10a8e4b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x7b8e241c # load x3 with value 0x7b8e241c
sw x3, 0(x2) # store 0x7b8e241c in memory
flw f25, 0(x2) # load 0x7b8e241c from memory into f25
fnmsub.s f15, f14, f24, f25, dyn # perform operation
fnmsub.s f15, f14, f24, f25, rdn # perform operation
fnmsub.s f15, f14, f24, f25, rmm # perform operation
fnmsub.s f15, f14, f24, f25, rne # perform operation
fnmsub.s f15, f14, f24, f25, rtz # perform operation
fnmsub.s f15, f14, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x28, 0x116031ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x3b59abc5 # load x3 with value 0x3b59abc5
sw x3, 0(x2) # store 0x3b59abc5 in memory
flw f29, 0(x2) # load 0x3b59abc5 from memory into f29
fnmsub.s f28, f23, f20, f29, dyn # perform operation
fnmsub.s f28, f23, f20, f29, rdn # perform operation
fnmsub.s f28, f23, f20, f29, rmm # perform operation
fnmsub.s f28, f23, f20, f29, rne # perform operation
fnmsub.s f28, f23, f20, f29, rtz # perform operation
fnmsub.s f28, f23, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x3, 0x13681b36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0xa7cb9dfb # load x3 with value 0xa7cb9dfb
sw x3, 0(x2) # store 0xa7cb9dfb in memory
flw f1, 0(x2) # load 0xa7cb9dfb from memory into f1
fnmsub.s f3, f30, f9, f1, dyn # perform operation
fnmsub.s f3, f30, f9, f1, rdn # perform operation
fnmsub.s f3, f30, f9, f1, rmm # perform operation
fnmsub.s f3, f30, f9, f1, rne # perform operation
fnmsub.s f3, f30, f9, f1, rtz # perform operation
fnmsub.s f3, f30, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f30, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x5, 0xa42b94a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0xb7def083 # load x3 with value 0xb7def083
sw x3, 0(x2) # store 0xb7def083 in memory
flw f20, 0(x2) # load 0xb7def083 from memory into f20
fnmsub.s f5, f6, f7, f20, dyn # perform operation
fnmsub.s f5, f6, f7, f20, rdn # perform operation
fnmsub.s f5, f6, f7, f20, rmm # perform operation
fnmsub.s f5, f6, f7, f20, rne # perform operation
fnmsub.s f5, f6, f7, f20, rtz # perform operation
fnmsub.s f5, f6, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x1, 0x275f377e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x6f18aee4 # load x3 with value 0x6f18aee4
sw x3, 0(x2) # store 0x6f18aee4 in memory
flw f13, 0(x2) # load 0x6f18aee4 from memory into f13
fnmsub.s f1, f20, f9, f13, dyn # perform operation
fnmsub.s f1, f20, f9, f13, rdn # perform operation
fnmsub.s f1, f20, f9, f13, rmm # perform operation
fnmsub.s f1, f20, f9, f13, rne # perform operation
fnmsub.s f1, f20, f9, f13, rtz # perform operation
fnmsub.s f1, f20, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x26, 0x0b1edf52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0xddd62223 # load x3 with value 0xddd62223
sw x3, 0(x2) # store 0xddd62223 in memory
flw f27, 0(x2) # load 0xddd62223 from memory into f27
fnmsub.s f26, f29, f4, f27, dyn # perform operation
fnmsub.s f26, f29, f4, f27, rdn # perform operation
fnmsub.s f26, f29, f4, f27, rmm # perform operation
fnmsub.s f26, f29, f4, f27, rne # perform operation
fnmsub.s f26, f29, f4, f27, rtz # perform operation
fnmsub.s f26, f29, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f29, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f29, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f29, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f29, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f29, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x1, 0xee4b4f39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0xc1782de8 # load x3 with value 0xc1782de8
sw x3, 0(x2) # store 0xc1782de8 in memory
flw f16, 0(x2) # load 0xc1782de8 from memory into f16
fnmsub.s f1, f22, f24, f16, dyn # perform operation
fnmsub.s f1, f22, f24, f16, rdn # perform operation
fnmsub.s f1, f22, f24, f16, rmm # perform operation
fnmsub.s f1, f22, f24, f16, rne # perform operation
fnmsub.s f1, f22, f24, f16, rtz # perform operation
fnmsub.s f1, f22, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f22, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f22, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f22, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f22, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f22, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x24, 0xed69c814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x9c1c568e # load x3 with value 0x9c1c568e
sw x3, 0(x2) # store 0x9c1c568e in memory
flw f30, 0(x2) # load 0x9c1c568e from memory into f30
fnmsub.s f24, f17, f15, f30, dyn # perform operation
fnmsub.s f24, f17, f15, f30, rdn # perform operation
fnmsub.s f24, f17, f15, f30, rmm # perform operation
fnmsub.s f24, f17, f15, f30, rne # perform operation
fnmsub.s f24, f17, f15, f30, rtz # perform operation
fnmsub.s f24, f17, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f17, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x13, 0x2e3a56ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x12a8ce16 # load x3 with value 0x12a8ce16
sw x3, 0(x2) # store 0x12a8ce16 in memory
flw f4, 0(x2) # load 0x12a8ce16 from memory into f4
fnmsub.s f13, f15, f22, f4, dyn # perform operation
fnmsub.s f13, f15, f22, f4, rdn # perform operation
fnmsub.s f13, f15, f22, f4, rmm # perform operation
fnmsub.s f13, f15, f22, f4, rne # perform operation
fnmsub.s f13, f15, f22, f4, rtz # perform operation
fnmsub.s f13, f15, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f15, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x18, 0x9583c26d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xfaf09e5d # load x3 with value 0xfaf09e5d
sw x3, 0(x2) # store 0xfaf09e5d in memory
flw f1, 0(x2) # load 0xfaf09e5d from memory into f1
fnmsub.s f18, f17, f22, f1, dyn # perform operation
fnmsub.s f18, f17, f22, f1, rdn # perform operation
fnmsub.s f18, f17, f22, f1, rmm # perform operation
fnmsub.s f18, f17, f22, f1, rne # perform operation
fnmsub.s f18, f17, f22, f1, rtz # perform operation
fnmsub.s f18, f17, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f17, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f17, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x1, 0xee8f254d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0x80cfe95c # load x3 with value 0x80cfe95c
sw x3, 0(x2) # store 0x80cfe95c in memory
flw f20, 0(x2) # load 0x80cfe95c from memory into f20
fnmsub.s f1, f6, f9, f20, dyn # perform operation
fnmsub.s f1, f6, f9, f20, rdn # perform operation
fnmsub.s f1, f6, f9, f20, rmm # perform operation
fnmsub.s f1, f6, f9, f20, rne # perform operation
fnmsub.s f1, f6, f9, f20, rtz # perform operation
fnmsub.s f1, f6, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x13, 0x9cbe2efd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0xefacabe9 # load x3 with value 0xefacabe9
sw x3, 0(x2) # store 0xefacabe9 in memory
flw f28, 0(x2) # load 0xefacabe9 from memory into f28
fnmsub.s f13, f22, f14, f28, dyn # perform operation
fnmsub.s f13, f22, f14, f28, rdn # perform operation
fnmsub.s f13, f22, f14, f28, rmm # perform operation
fnmsub.s f13, f22, f14, f28, rne # perform operation
fnmsub.s f13, f22, f14, f28, rtz # perform operation
fnmsub.s f13, f22, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f22, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x3, 0x9b906bbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x6fe88ec3 # load x3 with value 0x6fe88ec3
sw x3, 0(x2) # store 0x6fe88ec3 in memory
flw f23, 0(x2) # load 0x6fe88ec3 from memory into f23
fnmsub.s f3, f7, f1, f23, dyn # perform operation
fnmsub.s f3, f7, f1, f23, rdn # perform operation
fnmsub.s f3, f7, f1, f23, rmm # perform operation
fnmsub.s f3, f7, f1, f23, rne # perform operation
fnmsub.s f3, f7, f1, f23, rtz # perform operation
fnmsub.s f3, f7, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x26, 0xbfd028d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x8ef07d60 # load x3 with value 0x8ef07d60
sw x3, 0(x2) # store 0x8ef07d60 in memory
flw f12, 0(x2) # load 0x8ef07d60 from memory into f12
fnmsub.s f26, f3, f7, f12, dyn # perform operation
fnmsub.s f26, f3, f7, f12, rdn # perform operation
fnmsub.s f26, f3, f7, f12, rmm # perform operation
fnmsub.s f26, f3, f7, f12, rne # perform operation
fnmsub.s f26, f3, f7, f12, rtz # perform operation
fnmsub.s f26, f3, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f3, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x24, 0xcaffe9ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0x4b5f6313 # load x3 with value 0x4b5f6313
sw x3, 0(x2) # store 0x4b5f6313 in memory
flw f3, 0(x2) # load 0x4b5f6313 from memory into f3
fnmsub.s f24, f11, f1, f3, dyn # perform operation
fnmsub.s f24, f11, f1, f3, rdn # perform operation
fnmsub.s f24, f11, f1, f3, rmm # perform operation
fnmsub.s f24, f11, f1, f3, rne # perform operation
fnmsub.s f24, f11, f1, f3, rtz # perform operation
fnmsub.s f24, f11, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f11, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x13, 0xb8195a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x4089264a # load x3 with value 0x4089264a
sw x3, 0(x2) # store 0x4089264a in memory
flw f31, 0(x2) # load 0x4089264a from memory into f31
fnmsub.s f13, f8, f17, f31, dyn # perform operation
fnmsub.s f13, f8, f17, f31, rdn # perform operation
fnmsub.s f13, f8, f17, f31, rmm # perform operation
fnmsub.s f13, f8, f17, f31, rne # perform operation
fnmsub.s f13, f8, f17, f31, rtz # perform operation
fnmsub.s f13, f8, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x23, 0x3c7c4617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xabb259d3 # load x3 with value 0xabb259d3
sw x3, 0(x2) # store 0xabb259d3 in memory
flw f24, 0(x2) # load 0xabb259d3 from memory into f24
fnmsub.s f23, f4, f10, f24, dyn # perform operation
fnmsub.s f23, f4, f10, f24, rdn # perform operation
fnmsub.s f23, f4, f10, f24, rmm # perform operation
fnmsub.s f23, f4, f10, f24, rne # perform operation
fnmsub.s f23, f4, f10, f24, rtz # perform operation
fnmsub.s f23, f4, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f4, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x28, 0x2fb61caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x071d0689 # load x3 with value 0x071d0689
sw x3, 0(x2) # store 0x071d0689 in memory
flw f12, 0(x2) # load 0x071d0689 from memory into f12
fnmsub.s f28, f27, f16, f12, dyn # perform operation
fnmsub.s f28, f27, f16, f12, rdn # perform operation
fnmsub.s f28, f27, f16, f12, rmm # perform operation
fnmsub.s f28, f27, f16, f12, rne # perform operation
fnmsub.s f28, f27, f16, f12, rtz # perform operation
fnmsub.s f28, f27, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f27, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x20, 0xda55d8ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x69fe317e # load x3 with value 0x69fe317e
sw x3, 0(x2) # store 0x69fe317e in memory
flw f9, 0(x2) # load 0x69fe317e from memory into f9
fnmsub.s f20, f25, f31, f9, dyn # perform operation
fnmsub.s f20, f25, f31, f9, rdn # perform operation
fnmsub.s f20, f25, f31, f9, rmm # perform operation
fnmsub.s f20, f25, f31, f9, rne # perform operation
fnmsub.s f20, f25, f31, f9, rtz # perform operation
fnmsub.s f20, f25, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x26, 0x5d3d7e43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x26a82610 # load x3 with value 0x26a82610
sw x3, 0(x2) # store 0x26a82610 in memory
flw f25, 0(x2) # load 0x26a82610 from memory into f25
fnmsub.s f26, f7, f6, f25, dyn # perform operation
fnmsub.s f26, f7, f6, f25, rdn # perform operation
fnmsub.s f26, f7, f6, f25, rmm # perform operation
fnmsub.s f26, f7, f6, f25, rne # perform operation
fnmsub.s f26, f7, f6, f25, rtz # perform operation
fnmsub.s f26, f7, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x24, 0xa9a22450 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x7eeacd71 # load x3 with value 0x7eeacd71
sw x3, 0(x2) # store 0x7eeacd71 in memory
flw f2, 0(x2) # load 0x7eeacd71 from memory into f2
fnmsub.s f24, f21, f6, f2, dyn # perform operation
fnmsub.s f24, f21, f6, f2, rdn # perform operation
fnmsub.s f24, f21, f6, f2, rmm # perform operation
fnmsub.s f24, f21, f6, f2, rne # perform operation
fnmsub.s f24, f21, f6, f2, rtz # perform operation
fnmsub.s f24, f21, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x19, 0x1f552d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x8b1a0e39 # load x3 with value 0x8b1a0e39
sw x3, 0(x2) # store 0x8b1a0e39 in memory
flw f14, 0(x2) # load 0x8b1a0e39 from memory into f14
fnmsub.s f19, f17, f20, f14, dyn # perform operation
fnmsub.s f19, f17, f20, f14, rdn # perform operation
fnmsub.s f19, f17, f20, f14, rmm # perform operation
fnmsub.s f19, f17, f20, f14, rne # perform operation
fnmsub.s f19, f17, f20, f14, rtz # perform operation
fnmsub.s f19, f17, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x5, 0x49774546 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0x6e60ed61 # load x3 with value 0x6e60ed61
sw x3, 0(x2) # store 0x6e60ed61 in memory
flw f16, 0(x2) # load 0x6e60ed61 from memory into f16
fnmsub.s f5, f2, f14, f16, dyn # perform operation
fnmsub.s f5, f2, f14, f16, rdn # perform operation
fnmsub.s f5, f2, f14, f16, rmm # perform operation
fnmsub.s f5, f2, f14, f16, rne # perform operation
fnmsub.s f5, f2, f14, f16, rtz # perform operation
fnmsub.s f5, f2, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x26, 0x99242994 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0xf919b628 # load x3 with value 0xf919b628
sw x3, 0(x2) # store 0xf919b628 in memory
flw f5, 0(x2) # load 0xf919b628 from memory into f5
fnmsub.s f26, f7, f17, f5, dyn # perform operation
fnmsub.s f26, f7, f17, f5, rdn # perform operation
fnmsub.s f26, f7, f17, f5, rmm # perform operation
fnmsub.s f26, f7, f17, f5, rne # perform operation
fnmsub.s f26, f7, f17, f5, rtz # perform operation
fnmsub.s f26, f7, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x14, 0xb83cc62e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x8938e960 # load x3 with value 0x8938e960
sw x3, 0(x2) # store 0x8938e960 in memory
flw f22, 0(x2) # load 0x8938e960 from memory into f22
fnmsub.s f14, f30, f28, f22, dyn # perform operation
fnmsub.s f14, f30, f28, f22, rdn # perform operation
fnmsub.s f14, f30, f28, f22, rmm # perform operation
fnmsub.s f14, f30, f28, f22, rne # perform operation
fnmsub.s f14, f30, f28, f22, rtz # perform operation
fnmsub.s f14, f30, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f30, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x23, 0x7adf6815 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x8489a75b # load x3 with value 0x8489a75b
sw x3, 0(x2) # store 0x8489a75b in memory
flw f16, 0(x2) # load 0x8489a75b from memory into f16
fnmsub.s f23, f9, f7, f16, dyn # perform operation
fnmsub.s f23, f9, f7, f16, rdn # perform operation
fnmsub.s f23, f9, f7, f16, rmm # perform operation
fnmsub.s f23, f9, f7, f16, rne # perform operation
fnmsub.s f23, f9, f7, f16, rtz # perform operation
fnmsub.s f23, f9, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x7, 0x78eb9bd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x37083f48 # load x3 with value 0x37083f48
sw x3, 0(x2) # store 0x37083f48 in memory
flw f2, 0(x2) # load 0x37083f48 from memory into f2
fnmsub.s f7, f17, f15, f2, dyn # perform operation
fnmsub.s f7, f17, f15, f2, rdn # perform operation
fnmsub.s f7, f17, f15, f2, rmm # perform operation
fnmsub.s f7, f17, f15, f2, rne # perform operation
fnmsub.s f7, f17, f15, f2, rtz # perform operation
fnmsub.s f7, f17, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f17, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f17, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x17, 0x9ed304b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x21996c30 # load x3 with value 0x21996c30
sw x3, 0(x2) # store 0x21996c30 in memory
flw f1, 0(x2) # load 0x21996c30 from memory into f1
fnmsub.s f17, f22, f15, f1, dyn # perform operation
fnmsub.s f17, f22, f15, f1, rdn # perform operation
fnmsub.s f17, f22, f15, f1, rmm # perform operation
fnmsub.s f17, f22, f15, f1, rne # perform operation
fnmsub.s f17, f22, f15, f1, rtz # perform operation
fnmsub.s f17, f22, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f22, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f22, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x24, 0xd011c8e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xfe20634e # load x3 with value 0xfe20634e
sw x3, 0(x2) # store 0xfe20634e in memory
flw f23, 0(x2) # load 0xfe20634e from memory into f23
fnmsub.s f24, f18, f13, f23, dyn # perform operation
fnmsub.s f24, f18, f13, f23, rdn # perform operation
fnmsub.s f24, f18, f13, f23, rmm # perform operation
fnmsub.s f24, f18, f13, f23, rne # perform operation
fnmsub.s f24, f18, f13, f23, rtz # perform operation
fnmsub.s f24, f18, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f18, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x30, 0xde3a6234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x2ede8642 # load x3 with value 0x2ede8642
sw x3, 0(x2) # store 0x2ede8642 in memory
flw f1, 0(x2) # load 0x2ede8642 from memory into f1
fnmsub.s f30, f2, f19, f1, dyn # perform operation
fnmsub.s f30, f2, f19, f1, rdn # perform operation
fnmsub.s f30, f2, f19, f1, rmm # perform operation
fnmsub.s f30, f2, f19, f1, rne # perform operation
fnmsub.s f30, f2, f19, f1, rtz # perform operation
fnmsub.s f30, f2, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f2, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f2, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f2, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f2, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f2, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x6, 0x45c81e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x2bb1afdf # load x3 with value 0x2bb1afdf
sw x3, 0(x2) # store 0x2bb1afdf in memory
flw f7, 0(x2) # load 0x2bb1afdf from memory into f7
fnmsub.s f6, f29, f14, f7, dyn # perform operation
fnmsub.s f6, f29, f14, f7, rdn # perform operation
fnmsub.s f6, f29, f14, f7, rmm # perform operation
fnmsub.s f6, f29, f14, f7, rne # perform operation
fnmsub.s f6, f29, f14, f7, rtz # perform operation
fnmsub.s f6, f29, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f29, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x2, 0xb50548f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0xbbdff918 # load x3 with value 0xbbdff918
sw x3, 0(x2) # store 0xbbdff918 in memory
flw f22, 0(x2) # load 0xbbdff918 from memory into f22
fnmsub.s f2, f21, f9, f22, dyn # perform operation
fnmsub.s f2, f21, f9, f22, rdn # perform operation
fnmsub.s f2, f21, f9, f22, rmm # perform operation
fnmsub.s f2, f21, f9, f22, rne # perform operation
fnmsub.s f2, f21, f9, f22, rtz # perform operation
fnmsub.s f2, f21, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x16, 0x3f611759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x2dd5c92c # load x3 with value 0x2dd5c92c
sw x3, 0(x2) # store 0x2dd5c92c in memory
flw f9, 0(x2) # load 0x2dd5c92c from memory into f9
fnmsub.s f16, f14, f20, f9, dyn # perform operation
fnmsub.s f16, f14, f20, f9, rdn # perform operation
fnmsub.s f16, f14, f20, f9, rmm # perform operation
fnmsub.s f16, f14, f20, f9, rne # perform operation
fnmsub.s f16, f14, f20, f9, rtz # perform operation
fnmsub.s f16, f14, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x21, 0x8846c8f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x47a99d53 # load x3 with value 0x47a99d53
sw x3, 0(x2) # store 0x47a99d53 in memory
flw f18, 0(x2) # load 0x47a99d53 from memory into f18
fnmsub.s f21, f11, f17, f18, dyn # perform operation
fnmsub.s f21, f11, f17, f18, rdn # perform operation
fnmsub.s f21, f11, f17, f18, rmm # perform operation
fnmsub.s f21, f11, f17, f18, rne # perform operation
fnmsub.s f21, f11, f17, f18, rtz # perform operation
fnmsub.s f21, f11, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x5, 0x7004ce64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xd48cd5df # load x3 with value 0xd48cd5df
sw x3, 0(x2) # store 0xd48cd5df in memory
flw f31, 0(x2) # load 0xd48cd5df from memory into f31
fnmsub.s f5, f24, f8, f31, dyn # perform operation
fnmsub.s f5, f24, f8, f31, rdn # perform operation
fnmsub.s f5, f24, f8, f31, rmm # perform operation
fnmsub.s f5, f24, f8, f31, rne # perform operation
fnmsub.s f5, f24, f8, f31, rtz # perform operation
fnmsub.s f5, f24, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x29, 0x1407841c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x7ed391e9 # load x3 with value 0x7ed391e9
sw x3, 0(x2) # store 0x7ed391e9 in memory
flw f17, 0(x2) # load 0x7ed391e9 from memory into f17
fnmsub.s f29, f9, f31, f17, dyn # perform operation
fnmsub.s f29, f9, f31, f17, rdn # perform operation
fnmsub.s f29, f9, f31, f17, rmm # perform operation
fnmsub.s f29, f9, f31, f17, rne # perform operation
fnmsub.s f29, f9, f31, f17, rtz # perform operation
fnmsub.s f29, f9, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f9, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x3, 0x75ad066b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x0023564c # load x3 with value 0x0023564c
sw x3, 0(x2) # store 0x0023564c in memory
flw f19, 0(x2) # load 0x0023564c from memory into f19
fnmsub.s f3, f4, f2, f19, dyn # perform operation
fnmsub.s f3, f4, f2, f19, rdn # perform operation
fnmsub.s f3, f4, f2, f19, rmm # perform operation
fnmsub.s f3, f4, f2, f19, rne # perform operation
fnmsub.s f3, f4, f2, f19, rtz # perform operation
fnmsub.s f3, f4, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f4, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f4, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f4, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f4, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f4, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x23, 0x427673f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x3accff4f # load x3 with value 0x3accff4f
sw x3, 0(x2) # store 0x3accff4f in memory
flw f31, 0(x2) # load 0x3accff4f from memory into f31
fnmsub.s f23, f17, f18, f31, dyn # perform operation
fnmsub.s f23, f17, f18, f31, rdn # perform operation
fnmsub.s f23, f17, f18, f31, rmm # perform operation
fnmsub.s f23, f17, f18, f31, rne # perform operation
fnmsub.s f23, f17, f18, f31, rtz # perform operation
fnmsub.s f23, f17, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x2, 0xce6fdf06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x988e37f0 # load x3 with value 0x988e37f0
sw x3, 0(x2) # store 0x988e37f0 in memory
flw f7, 0(x2) # load 0x988e37f0 from memory into f7
fnmsub.s f2, f10, f29, f7, dyn # perform operation
fnmsub.s f2, f10, f29, f7, rdn # perform operation
fnmsub.s f2, f10, f29, f7, rmm # perform operation
fnmsub.s f2, f10, f29, f7, rne # perform operation
fnmsub.s f2, f10, f29, f7, rtz # perform operation
fnmsub.s f2, f10, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f10, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f10, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x2, 0x0a164e94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xa558cf6d # load x3 with value 0xa558cf6d
sw x3, 0(x2) # store 0xa558cf6d in memory
flw f12, 0(x2) # load 0xa558cf6d from memory into f12
fnmsub.s f2, f22, f7, f12, dyn # perform operation
fnmsub.s f2, f22, f7, f12, rdn # perform operation
fnmsub.s f2, f22, f7, f12, rmm # perform operation
fnmsub.s f2, f22, f7, f12, rne # perform operation
fnmsub.s f2, f22, f7, f12, rtz # perform operation
fnmsub.s f2, f22, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f22, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x29, 0x230a1ef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x49d07497 # load x3 with value 0x49d07497
sw x3, 0(x2) # store 0x49d07497 in memory
flw f11, 0(x2) # load 0x49d07497 from memory into f11
fnmsub.s f29, f25, f26, f11, dyn # perform operation
fnmsub.s f29, f25, f26, f11, rdn # perform operation
fnmsub.s f29, f25, f26, f11, rmm # perform operation
fnmsub.s f29, f25, f26, f11, rne # perform operation
fnmsub.s f29, f25, f26, f11, rtz # perform operation
fnmsub.s f29, f25, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f25, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f25, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f25, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f25, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f25, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x16, 0x7fea8b40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xec50f761 # load x3 with value 0xec50f761
sw x3, 0(x2) # store 0xec50f761 in memory
flw f7, 0(x2) # load 0xec50f761 from memory into f7
fnmsub.s f16, f21, f27, f7, dyn # perform operation
fnmsub.s f16, f21, f27, f7, rdn # perform operation
fnmsub.s f16, f21, f27, f7, rmm # perform operation
fnmsub.s f16, f21, f27, f7, rne # perform operation
fnmsub.s f16, f21, f27, f7, rtz # perform operation
fnmsub.s f16, f21, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f21, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f21, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f21, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f21, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f21, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x9, 0x63134cac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xd9ab72d2 # load x3 with value 0xd9ab72d2
sw x3, 0(x2) # store 0xd9ab72d2 in memory
flw f21, 0(x2) # load 0xd9ab72d2 from memory into f21
fnmsub.s f9, f31, f20, f21, dyn # perform operation
fnmsub.s f9, f31, f20, f21, rdn # perform operation
fnmsub.s f9, f31, f20, f21, rmm # perform operation
fnmsub.s f9, f31, f20, f21, rne # perform operation
fnmsub.s f9, f31, f20, f21, rtz # perform operation
fnmsub.s f9, f31, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f31, f20, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x18, 0xbfcb112e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xfea86128 # load x3 with value 0xfea86128
sw x3, 0(x2) # store 0xfea86128 in memory
flw f28, 0(x2) # load 0xfea86128 from memory into f28
fnmsub.s f18, f15, f12, f28, dyn # perform operation
fnmsub.s f18, f15, f12, f28, rdn # perform operation
fnmsub.s f18, f15, f12, f28, rmm # perform operation
fnmsub.s f18, f15, f12, f28, rne # perform operation
fnmsub.s f18, f15, f12, f28, rtz # perform operation
fnmsub.s f18, f15, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x31, 0x649d1740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x22dec564 # load x3 with value 0x22dec564
sw x3, 0(x2) # store 0x22dec564 in memory
flw f18, 0(x2) # load 0x22dec564 from memory into f18
fnmsub.s f31, f23, f28, f18, dyn # perform operation
fnmsub.s f31, f23, f28, f18, rdn # perform operation
fnmsub.s f31, f23, f28, f18, rmm # perform operation
fnmsub.s f31, f23, f28, f18, rne # perform operation
fnmsub.s f31, f23, f28, f18, rtz # perform operation
fnmsub.s f31, f23, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x3, 0x2b8392df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x5b5383c9 # load x3 with value 0x5b5383c9
sw x3, 0(x2) # store 0x5b5383c9 in memory
flw f20, 0(x2) # load 0x5b5383c9 from memory into f20
fnmsub.s f3, f15, f18, f20, dyn # perform operation
fnmsub.s f3, f15, f18, f20, rdn # perform operation
fnmsub.s f3, f15, f18, f20, rmm # perform operation
fnmsub.s f3, f15, f18, f20, rne # perform operation
fnmsub.s f3, f15, f18, f20, rtz # perform operation
fnmsub.s f3, f15, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f15, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x30, 0xbcebd9f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xe1103349 # load x3 with value 0xe1103349
sw x3, 0(x2) # store 0xe1103349 in memory
flw f13, 0(x2) # load 0xe1103349 from memory into f13
fnmsub.s f30, f20, f23, f13, dyn # perform operation
fnmsub.s f30, f20, f23, f13, rdn # perform operation
fnmsub.s f30, f20, f23, f13, rmm # perform operation
fnmsub.s f30, f20, f23, f13, rne # perform operation
fnmsub.s f30, f20, f23, f13, rtz # perform operation
fnmsub.s f30, f20, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x11, 0x975f949e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x374b81bc # load x3 with value 0x374b81bc
sw x3, 0(x2) # store 0x374b81bc in memory
flw f26, 0(x2) # load 0x374b81bc from memory into f26
fnmsub.s f11, f1, f3, f26, dyn # perform operation
fnmsub.s f11, f1, f3, f26, rdn # perform operation
fnmsub.s f11, f1, f3, f26, rmm # perform operation
fnmsub.s f11, f1, f3, f26, rne # perform operation
fnmsub.s f11, f1, f3, f26, rtz # perform operation
fnmsub.s f11, f1, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f1, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x4, 0x045ae537 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x25cce390 # load x3 with value 0x25cce390
sw x3, 0(x2) # store 0x25cce390 in memory
flw f17, 0(x2) # load 0x25cce390 from memory into f17
fnmsub.s f4, f6, f7, f17, dyn # perform operation
fnmsub.s f4, f6, f7, f17, rdn # perform operation
fnmsub.s f4, f6, f7, f17, rmm # perform operation
fnmsub.s f4, f6, f7, f17, rne # perform operation
fnmsub.s f4, f6, f7, f17, rtz # perform operation
fnmsub.s f4, f6, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f6, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x25, 0xa03a5a6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x048726cd # load x3 with value 0x048726cd
sw x3, 0(x2) # store 0x048726cd in memory
flw f12, 0(x2) # load 0x048726cd from memory into f12
fnmsub.s f25, f31, f17, f12, dyn # perform operation
fnmsub.s f25, f31, f17, f12, rdn # perform operation
fnmsub.s f25, f31, f17, f12, rmm # perform operation
fnmsub.s f25, f31, f17, f12, rne # perform operation
fnmsub.s f25, f31, f17, f12, rtz # perform operation
fnmsub.s f25, f31, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x16, 0x47ee8207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0xb3432066 # load x3 with value 0xb3432066
sw x3, 0(x2) # store 0xb3432066 in memory
flw f5, 0(x2) # load 0xb3432066 from memory into f5
fnmsub.s f16, f25, f7, f5, dyn # perform operation
fnmsub.s f16, f25, f7, f5, rdn # perform operation
fnmsub.s f16, f25, f7, f5, rmm # perform operation
fnmsub.s f16, f25, f7, f5, rne # perform operation
fnmsub.s f16, f25, f7, f5, rtz # perform operation
fnmsub.s f16, f25, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x31, 0x7d8f4d59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x3c9177de # load x3 with value 0x3c9177de
sw x3, 0(x2) # store 0x3c9177de in memory
flw f2, 0(x2) # load 0x3c9177de from memory into f2
fnmsub.s f31, f5, f7, f2, dyn # perform operation
fnmsub.s f31, f5, f7, f2, rdn # perform operation
fnmsub.s f31, f5, f7, f2, rmm # perform operation
fnmsub.s f31, f5, f7, f2, rne # perform operation
fnmsub.s f31, f5, f7, f2, rtz # perform operation
fnmsub.s f31, f5, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f5, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f5, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x21, 0x6fede2ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xadbc428e # load x3 with value 0xadbc428e
sw x3, 0(x2) # store 0xadbc428e in memory
flw f28, 0(x2) # load 0xadbc428e from memory into f28
fnmsub.s f21, f24, f30, f28, dyn # perform operation
fnmsub.s f21, f24, f30, f28, rdn # perform operation
fnmsub.s f21, f24, f30, f28, rmm # perform operation
fnmsub.s f21, f24, f30, f28, rne # perform operation
fnmsub.s f21, f24, f30, f28, rtz # perform operation
fnmsub.s f21, f24, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f24, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x23, 0x75226c5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x7245631d # load x3 with value 0x7245631d
sw x3, 0(x2) # store 0x7245631d in memory
flw f26, 0(x2) # load 0x7245631d from memory into f26
fnmsub.s f23, f19, f8, f26, dyn # perform operation
fnmsub.s f23, f19, f8, f26, rdn # perform operation
fnmsub.s f23, f19, f8, f26, rmm # perform operation
fnmsub.s f23, f19, f8, f26, rne # perform operation
fnmsub.s f23, f19, f8, f26, rtz # perform operation
fnmsub.s f23, f19, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f19, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x25, 0x37f9fa3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x1a5b4a7c # load x3 with value 0x1a5b4a7c
sw x3, 0(x2) # store 0x1a5b4a7c in memory
flw f29, 0(x2) # load 0x1a5b4a7c from memory into f29
fnmsub.s f25, f1, f15, f29, dyn # perform operation
fnmsub.s f25, f1, f15, f29, rdn # perform operation
fnmsub.s f25, f1, f15, f29, rmm # perform operation
fnmsub.s f25, f1, f15, f29, rne # perform operation
fnmsub.s f25, f1, f15, f29, rtz # perform operation
fnmsub.s f25, f1, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x22, 0x762c589f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0xd4cc9d36 # load x3 with value 0xd4cc9d36
sw x3, 0(x2) # store 0xd4cc9d36 in memory
flw f15, 0(x2) # load 0xd4cc9d36 from memory into f15
fnmsub.s f22, f19, f1, f15, dyn # perform operation
fnmsub.s f22, f19, f1, f15, rdn # perform operation
fnmsub.s f22, f19, f1, f15, rmm # perform operation
fnmsub.s f22, f19, f1, f15, rne # perform operation
fnmsub.s f22, f19, f1, f15, rtz # perform operation
fnmsub.s f22, f19, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x9, 0xd1c66352 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x13502158 # load x3 with value 0x13502158
sw x3, 0(x2) # store 0x13502158 in memory
flw f11, 0(x2) # load 0x13502158 from memory into f11
fnmsub.s f9, f19, f21, f11, dyn # perform operation
fnmsub.s f9, f19, f21, f11, rdn # perform operation
fnmsub.s f9, f19, f21, f11, rmm # perform operation
fnmsub.s f9, f19, f21, f11, rne # perform operation
fnmsub.s f9, f19, f21, f11, rtz # perform operation
fnmsub.s f9, f19, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f19, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x15, 0x623f2907 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0xec076162 # load x3 with value 0xec076162
sw x3, 0(x2) # store 0xec076162 in memory
flw f4, 0(x2) # load 0xec076162 from memory into f4
fnmsub.s f15, f23, f3, f4, dyn # perform operation
fnmsub.s f15, f23, f3, f4, rdn # perform operation
fnmsub.s f15, f23, f3, f4, rmm # perform operation
fnmsub.s f15, f23, f3, f4, rne # perform operation
fnmsub.s f15, f23, f3, f4, rtz # perform operation
fnmsub.s f15, f23, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x13, 0x06c39c44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x74cd14b9 # load x3 with value 0x74cd14b9
sw x3, 0(x2) # store 0x74cd14b9 in memory
flw f22, 0(x2) # load 0x74cd14b9 from memory into f22
fnmsub.s f13, f8, f27, f22, dyn # perform operation
fnmsub.s f13, f8, f27, f22, rdn # perform operation
fnmsub.s f13, f8, f27, f22, rmm # perform operation
fnmsub.s f13, f8, f27, f22, rne # perform operation
fnmsub.s f13, f8, f27, f22, rtz # perform operation
fnmsub.s f13, f8, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x29, 0x62b6229f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x236c61eb # load x3 with value 0x236c61eb
sw x3, 0(x2) # store 0x236c61eb in memory
flw f17, 0(x2) # load 0x236c61eb from memory into f17
fnmsub.s f29, f25, f5, f17, dyn # perform operation
fnmsub.s f29, f25, f5, f17, rdn # perform operation
fnmsub.s f29, f25, f5, f17, rmm # perform operation
fnmsub.s f29, f25, f5, f17, rne # perform operation
fnmsub.s f29, f25, f5, f17, rtz # perform operation
fnmsub.s f29, f25, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f25, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f25, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x5, 0x85214688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x2187b9cc # load x3 with value 0x2187b9cc
sw x3, 0(x2) # store 0x2187b9cc in memory
flw f23, 0(x2) # load 0x2187b9cc from memory into f23
fnmsub.s f5, f18, f25, f23, dyn # perform operation
fnmsub.s f5, f18, f25, f23, rdn # perform operation
fnmsub.s f5, f18, f25, f23, rmm # perform operation
fnmsub.s f5, f18, f25, f23, rne # perform operation
fnmsub.s f5, f18, f25, f23, rtz # perform operation
fnmsub.s f5, f18, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x3, 0xccdd5fe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0xd296258f # load x3 with value 0xd296258f
sw x3, 0(x2) # store 0xd296258f in memory
flw f29, 0(x2) # load 0xd296258f from memory into f29
fnmsub.s f3, f17, f7, f29, dyn # perform operation
fnmsub.s f3, f17, f7, f29, rdn # perform operation
fnmsub.s f3, f17, f7, f29, rmm # perform operation
fnmsub.s f3, f17, f7, f29, rne # perform operation
fnmsub.s f3, f17, f7, f29, rtz # perform operation
fnmsub.s f3, f17, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x15, 0xbd9531ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xefbaf37e # load x3 with value 0xefbaf37e
sw x3, 0(x2) # store 0xefbaf37e in memory
flw f28, 0(x2) # load 0xefbaf37e from memory into f28
fnmsub.s f15, f26, f13, f28, dyn # perform operation
fnmsub.s f15, f26, f13, f28, rdn # perform operation
fnmsub.s f15, f26, f13, f28, rmm # perform operation
fnmsub.s f15, f26, f13, f28, rne # perform operation
fnmsub.s f15, f26, f13, f28, rtz # perform operation
fnmsub.s f15, f26, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x15, 0x9d8e2d9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x8f36dd0f # load x3 with value 0x8f36dd0f
sw x3, 0(x2) # store 0x8f36dd0f in memory
flw f30, 0(x2) # load 0x8f36dd0f from memory into f30
fnmsub.s f15, f7, f29, f30, dyn # perform operation
fnmsub.s f15, f7, f29, f30, rdn # perform operation
fnmsub.s f15, f7, f29, f30, rmm # perform operation
fnmsub.s f15, f7, f29, f30, rne # perform operation
fnmsub.s f15, f7, f29, f30, rtz # perform operation
fnmsub.s f15, f7, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x24, 0xc33be9e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0xaee414f9 # load x3 with value 0xaee414f9
sw x3, 0(x2) # store 0xaee414f9 in memory
flw f14, 0(x2) # load 0xaee414f9 from memory into f14
fnmsub.s f24, f12, f10, f14, dyn # perform operation
fnmsub.s f24, f12, f10, f14, rdn # perform operation
fnmsub.s f24, f12, f10, f14, rmm # perform operation
fnmsub.s f24, f12, f10, f14, rne # perform operation
fnmsub.s f24, f12, f10, f14, rtz # perform operation
fnmsub.s f24, f12, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x11, 0x01807b0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x094f1670 # load x3 with value 0x094f1670
sw x3, 0(x2) # store 0x094f1670 in memory
flw f13, 0(x2) # load 0x094f1670 from memory into f13
fnmsub.s f11, f29, f25, f13, dyn # perform operation
fnmsub.s f11, f29, f25, f13, rdn # perform operation
fnmsub.s f11, f29, f25, f13, rmm # perform operation
fnmsub.s f11, f29, f25, f13, rne # perform operation
fnmsub.s f11, f29, f25, f13, rtz # perform operation
fnmsub.s f11, f29, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f29, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f29, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x31, 0x594be41c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x3ed25b1d # load x3 with value 0x3ed25b1d
sw x3, 0(x2) # store 0x3ed25b1d in memory
flw f4, 0(x2) # load 0x3ed25b1d from memory into f4
fnmsub.s f31, f16, f3, f4, dyn # perform operation
fnmsub.s f31, f16, f3, f4, rdn # perform operation
fnmsub.s f31, f16, f3, f4, rmm # perform operation
fnmsub.s f31, f16, f3, f4, rne # perform operation
fnmsub.s f31, f16, f3, f4, rtz # perform operation
fnmsub.s f31, f16, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x13, 0x7f21cc31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x6e702697 # load x3 with value 0x6e702697
sw x3, 0(x2) # store 0x6e702697 in memory
flw f24, 0(x2) # load 0x6e702697 from memory into f24
fnmsub.s f13, f25, f10, f24, dyn # perform operation
fnmsub.s f13, f25, f10, f24, rdn # perform operation
fnmsub.s f13, f25, f10, f24, rmm # perform operation
fnmsub.s f13, f25, f10, f24, rne # perform operation
fnmsub.s f13, f25, f10, f24, rtz # perform operation
fnmsub.s f13, f25, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f25, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f25, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x16, 0xef2e1d1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x09476acb # load x3 with value 0x09476acb
sw x3, 0(x2) # store 0x09476acb in memory
flw f29, 0(x2) # load 0x09476acb from memory into f29
fnmsub.s f16, f25, f11, f29, dyn # perform operation
fnmsub.s f16, f25, f11, f29, rdn # perform operation
fnmsub.s f16, f25, f11, f29, rmm # perform operation
fnmsub.s f16, f25, f11, f29, rne # perform operation
fnmsub.s f16, f25, f11, f29, rtz # perform operation
fnmsub.s f16, f25, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x8, 0xaef9128d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x623fd802 # load x3 with value 0x623fd802
sw x3, 0(x2) # store 0x623fd802 in memory
flw f25, 0(x2) # load 0x623fd802 from memory into f25
fnmsub.s f8, f1, f7, f25, dyn # perform operation
fnmsub.s f8, f1, f7, f25, rdn # perform operation
fnmsub.s f8, f1, f7, f25, rmm # perform operation
fnmsub.s f8, f1, f7, f25, rne # perform operation
fnmsub.s f8, f1, f7, f25, rtz # perform operation
fnmsub.s f8, f1, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x3, 0x7da6b135 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0xc85e7c44 # load x3 with value 0xc85e7c44
sw x3, 0(x2) # store 0xc85e7c44 in memory
flw f29, 0(x2) # load 0xc85e7c44 from memory into f29
fnmsub.s f3, f21, f4, f29, dyn # perform operation
fnmsub.s f3, f21, f4, f29, rdn # perform operation
fnmsub.s f3, f21, f4, f29, rmm # perform operation
fnmsub.s f3, f21, f4, f29, rne # perform operation
fnmsub.s f3, f21, f4, f29, rtz # perform operation
fnmsub.s f3, f21, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f21, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x29, 0x35a99675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xd0ed1e71 # load x3 with value 0xd0ed1e71
sw x3, 0(x2) # store 0xd0ed1e71 in memory
flw f1, 0(x2) # load 0xd0ed1e71 from memory into f1
fnmsub.s f29, f6, f31, f1, dyn # perform operation
fnmsub.s f29, f6, f31, f1, rdn # perform operation
fnmsub.s f29, f6, f31, f1, rmm # perform operation
fnmsub.s f29, f6, f31, f1, rne # perform operation
fnmsub.s f29, f6, f31, f1, rtz # perform operation
fnmsub.s f29, f6, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f6, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f6, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f6, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f6, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f6, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x10, 0x7a575499 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0xdcc46ea7 # load x3 with value 0xdcc46ea7
sw x3, 0(x2) # store 0xdcc46ea7 in memory
flw f2, 0(x2) # load 0xdcc46ea7 from memory into f2
fnmsub.s f10, f12, f13, f2, dyn # perform operation
fnmsub.s f10, f12, f13, f2, rdn # perform operation
fnmsub.s f10, f12, f13, f2, rmm # perform operation
fnmsub.s f10, f12, f13, f2, rne # perform operation
fnmsub.s f10, f12, f13, f2, rtz # perform operation
fnmsub.s f10, f12, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f12, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f12, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x30, 0x951fb6e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x9d707681 # load x3 with value 0x9d707681
sw x3, 0(x2) # store 0x9d707681 in memory
flw f19, 0(x2) # load 0x9d707681 from memory into f19
fnmsub.s f30, f10, f23, f19, dyn # perform operation
fnmsub.s f30, f10, f23, f19, rdn # perform operation
fnmsub.s f30, f10, f23, f19, rmm # perform operation
fnmsub.s f30, f10, f23, f19, rne # perform operation
fnmsub.s f30, f10, f23, f19, rtz # perform operation
fnmsub.s f30, f10, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f10, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f10, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x16, 0x36449888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x458daa44 # load x3 with value 0x458daa44
sw x3, 0(x2) # store 0x458daa44 in memory
flw f10, 0(x2) # load 0x458daa44 from memory into f10
fnmsub.s f16, f13, f7, f10, dyn # perform operation
fnmsub.s f16, f13, f7, f10, rdn # perform operation
fnmsub.s f16, f13, f7, f10, rmm # perform operation
fnmsub.s f16, f13, f7, f10, rne # perform operation
fnmsub.s f16, f13, f7, f10, rtz # perform operation
fnmsub.s f16, f13, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f13, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f13, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f13, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f13, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f13, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x28, 0x624f8886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x31e3c311 # load x3 with value 0x31e3c311
sw x3, 0(x2) # store 0x31e3c311 in memory
flw f9, 0(x2) # load 0x31e3c311 from memory into f9
fnmsub.s f28, f26, f24, f9, dyn # perform operation
fnmsub.s f28, f26, f24, f9, rdn # perform operation
fnmsub.s f28, f26, f24, f9, rmm # perform operation
fnmsub.s f28, f26, f24, f9, rne # perform operation
fnmsub.s f28, f26, f24, f9, rtz # perform operation
fnmsub.s f28, f26, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f26, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x16, 0x949f7327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xd9743c03 # load x3 with value 0xd9743c03
sw x3, 0(x2) # store 0xd9743c03 in memory
flw f6, 0(x2) # load 0xd9743c03 from memory into f6
fnmsub.s f16, f22, f10, f6, dyn # perform operation
fnmsub.s f16, f22, f10, f6, rdn # perform operation
fnmsub.s f16, f22, f10, f6, rmm # perform operation
fnmsub.s f16, f22, f10, f6, rne # perform operation
fnmsub.s f16, f22, f10, f6, rtz # perform operation
fnmsub.s f16, f22, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f22, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x20, 0x68e63b9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x936d9bc1 # load x3 with value 0x936d9bc1
sw x3, 0(x2) # store 0x936d9bc1 in memory
flw f12, 0(x2) # load 0x936d9bc1 from memory into f12
fnmsub.s f20, f5, f17, f12, dyn # perform operation
fnmsub.s f20, f5, f17, f12, rdn # perform operation
fnmsub.s f20, f5, f17, f12, rmm # perform operation
fnmsub.s f20, f5, f17, f12, rne # perform operation
fnmsub.s f20, f5, f17, f12, rtz # perform operation
fnmsub.s f20, f5, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x19, 0xff8593c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0xe5078ff2 # load x3 with value 0xe5078ff2
sw x3, 0(x2) # store 0xe5078ff2 in memory
flw f24, 0(x2) # load 0xe5078ff2 from memory into f24
fnmsub.s f19, f12, f6, f24, dyn # perform operation
fnmsub.s f19, f12, f6, f24, rdn # perform operation
fnmsub.s f19, f12, f6, f24, rmm # perform operation
fnmsub.s f19, f12, f6, f24, rne # perform operation
fnmsub.s f19, f12, f6, f24, rtz # perform operation
fnmsub.s f19, f12, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x17, 0x05ced031 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x7b6dc1a2 # load x3 with value 0x7b6dc1a2
sw x3, 0(x2) # store 0x7b6dc1a2 in memory
flw f11, 0(x2) # load 0x7b6dc1a2 from memory into f11
fnmsub.s f17, f31, f15, f11, dyn # perform operation
fnmsub.s f17, f31, f15, f11, rdn # perform operation
fnmsub.s f17, f31, f15, f11, rmm # perform operation
fnmsub.s f17, f31, f15, f11, rne # perform operation
fnmsub.s f17, f31, f15, f11, rtz # perform operation
fnmsub.s f17, f31, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x16, 0x0e2015af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xfcf7b934 # load x3 with value 0xfcf7b934
sw x3, 0(x2) # store 0xfcf7b934 in memory
flw f5, 0(x2) # load 0xfcf7b934 from memory into f5
fnmsub.s f16, f20, f14, f5, dyn # perform operation
fnmsub.s f16, f20, f14, f5, rdn # perform operation
fnmsub.s f16, f20, f14, f5, rmm # perform operation
fnmsub.s f16, f20, f14, f5, rne # perform operation
fnmsub.s f16, f20, f14, f5, rtz # perform operation
fnmsub.s f16, f20, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f20, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f20, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x21, 0xa1adbdb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x12ee144b # load x3 with value 0x12ee144b
sw x3, 0(x2) # store 0x12ee144b in memory
flw f14, 0(x2) # load 0x12ee144b from memory into f14
fnmsub.s f21, f25, f31, f14, dyn # perform operation
fnmsub.s f21, f25, f31, f14, rdn # perform operation
fnmsub.s f21, f25, f31, f14, rmm # perform operation
fnmsub.s f21, f25, f31, f14, rne # perform operation
fnmsub.s f21, f25, f31, f14, rtz # perform operation
fnmsub.s f21, f25, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f25, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f25, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x9, 0xd45b279a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xa62e53e9 # load x3 with value 0xa62e53e9
sw x3, 0(x2) # store 0xa62e53e9 in memory
flw f30, 0(x2) # load 0xa62e53e9 from memory into f30
fnmsub.s f9, f31, f1, f30, dyn # perform operation
fnmsub.s f9, f31, f1, f30, rdn # perform operation
fnmsub.s f9, f31, f1, f30, rmm # perform operation
fnmsub.s f9, f31, f1, f30, rne # perform operation
fnmsub.s f9, f31, f1, f30, rtz # perform operation
fnmsub.s f9, f31, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f31, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x29, 0x25363fb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xfebbebd7 # load x3 with value 0xfebbebd7
sw x3, 0(x2) # store 0xfebbebd7 in memory
flw f12, 0(x2) # load 0xfebbebd7 from memory into f12
fnmsub.s f29, f17, f18, f12, dyn # perform operation
fnmsub.s f29, f17, f18, f12, rdn # perform operation
fnmsub.s f29, f17, f18, f12, rmm # perform operation
fnmsub.s f29, f17, f18, f12, rne # perform operation
fnmsub.s f29, f17, f18, f12, rtz # perform operation
fnmsub.s f29, f17, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f17, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f17, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x2, 0x39533059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x84e646d5 # load x3 with value 0x84e646d5
sw x3, 0(x2) # store 0x84e646d5 in memory
flw f23, 0(x2) # load 0x84e646d5 from memory into f23
fnmsub.s f2, f16, f31, f23, dyn # perform operation
fnmsub.s f2, f16, f31, f23, rdn # perform operation
fnmsub.s f2, f16, f31, f23, rmm # perform operation
fnmsub.s f2, f16, f31, f23, rne # perform operation
fnmsub.s f2, f16, f31, f23, rtz # perform operation
fnmsub.s f2, f16, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f16, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f16, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x21, 0xf89dbb1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0xb12eefbc # load x3 with value 0xb12eefbc
sw x3, 0(x2) # store 0xb12eefbc in memory
flw f3, 0(x2) # load 0xb12eefbc from memory into f3
fnmsub.s f21, f11, f25, f3, dyn # perform operation
fnmsub.s f21, f11, f25, f3, rdn # perform operation
fnmsub.s f21, f11, f25, f3, rmm # perform operation
fnmsub.s f21, f11, f25, f3, rne # perform operation
fnmsub.s f21, f11, f25, f3, rtz # perform operation
fnmsub.s f21, f11, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x15, 0x4c27aa1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xdaef3aa2 # load x3 with value 0xdaef3aa2
sw x3, 0(x2) # store 0xdaef3aa2 in memory
flw f28, 0(x2) # load 0xdaef3aa2 from memory into f28
fnmsub.s f15, f1, f8, f28, dyn # perform operation
fnmsub.s f15, f1, f8, f28, rdn # perform operation
fnmsub.s f15, f1, f8, f28, rmm # perform operation
fnmsub.s f15, f1, f8, f28, rne # perform operation
fnmsub.s f15, f1, f8, f28, rtz # perform operation
fnmsub.s f15, f1, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f1, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f1, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f1, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f1, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f1, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x1, 0x273d8d81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x02468715 # load x3 with value 0x02468715
sw x3, 0(x2) # store 0x02468715 in memory
flw f6, 0(x2) # load 0x02468715 from memory into f6
fnmsub.s f1, f30, f7, f6, dyn # perform operation
fnmsub.s f1, f30, f7, f6, rdn # perform operation
fnmsub.s f1, f30, f7, f6, rmm # perform operation
fnmsub.s f1, f30, f7, f6, rne # perform operation
fnmsub.s f1, f30, f7, f6, rtz # perform operation
fnmsub.s f1, f30, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f30, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x1, 0x827e1bc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x2fa7085b # load x3 with value 0x2fa7085b
sw x3, 0(x2) # store 0x2fa7085b in memory
flw f26, 0(x2) # load 0x2fa7085b from memory into f26
fnmsub.s f1, f16, f25, f26, dyn # perform operation
fnmsub.s f1, f16, f25, f26, rdn # perform operation
fnmsub.s f1, f16, f25, f26, rmm # perform operation
fnmsub.s f1, f16, f25, f26, rne # perform operation
fnmsub.s f1, f16, f25, f26, rtz # perform operation
fnmsub.s f1, f16, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f16, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x19, 0x82d3021f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0xd4c0e96b # load x3 with value 0xd4c0e96b
sw x3, 0(x2) # store 0xd4c0e96b in memory
flw f22, 0(x2) # load 0xd4c0e96b from memory into f22
fnmsub.s f19, f29, f2, f22, dyn # perform operation
fnmsub.s f19, f29, f2, f22, rdn # perform operation
fnmsub.s f19, f29, f2, f22, rmm # perform operation
fnmsub.s f19, f29, f2, f22, rne # perform operation
fnmsub.s f19, f29, f2, f22, rtz # perform operation
fnmsub.s f19, f29, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f29, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f29, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x11, 0x4d3cf14a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x2a2d87e7 # load x3 with value 0x2a2d87e7
sw x3, 0(x2) # store 0x2a2d87e7 in memory
flw f9, 0(x2) # load 0x2a2d87e7 from memory into f9
fnmsub.s f11, f27, f10, f9, dyn # perform operation
fnmsub.s f11, f27, f10, f9, rdn # perform operation
fnmsub.s f11, f27, f10, f9, rmm # perform operation
fnmsub.s f11, f27, f10, f9, rne # perform operation
fnmsub.s f11, f27, f10, f9, rtz # perform operation
fnmsub.s f11, f27, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x20, 0xdd57202c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x876f57ed # load x3 with value 0x876f57ed
sw x3, 0(x2) # store 0x876f57ed in memory
flw f14, 0(x2) # load 0x876f57ed from memory into f14
fnmsub.s f20, f6, f29, f14, dyn # perform operation
fnmsub.s f20, f6, f29, f14, rdn # perform operation
fnmsub.s f20, f6, f29, f14, rmm # perform operation
fnmsub.s f20, f6, f29, f14, rne # perform operation
fnmsub.s f20, f6, f29, f14, rtz # perform operation
fnmsub.s f20, f6, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f6, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x2, 0x0b19d752 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x0c38a479 # load x3 with value 0x0c38a479
sw x3, 0(x2) # store 0x0c38a479 in memory
flw f30, 0(x2) # load 0x0c38a479 from memory into f30
fnmsub.s f2, f17, f20, f30, dyn # perform operation
fnmsub.s f2, f17, f20, f30, rdn # perform operation
fnmsub.s f2, f17, f20, f30, rmm # perform operation
fnmsub.s f2, f17, f20, f30, rne # perform operation
fnmsub.s f2, f17, f20, f30, rtz # perform operation
fnmsub.s f2, f17, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f17, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x26, 0xfa75daf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xe5d7c875 # load x3 with value 0xe5d7c875
sw x3, 0(x2) # store 0xe5d7c875 in memory
flw f28, 0(x2) # load 0xe5d7c875 from memory into f28
fnmsub.s f26, f2, f8, f28, dyn # perform operation
fnmsub.s f26, f2, f8, f28, rdn # perform operation
fnmsub.s f26, f2, f8, f28, rmm # perform operation
fnmsub.s f26, f2, f8, f28, rne # perform operation
fnmsub.s f26, f2, f8, f28, rtz # perform operation
fnmsub.s f26, f2, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x13, 0x426847f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x777c889c # load x3 with value 0x777c889c
sw x3, 0(x2) # store 0x777c889c in memory
flw f10, 0(x2) # load 0x777c889c from memory into f10
fnmsub.s f13, f4, f5, f10, dyn # perform operation
fnmsub.s f13, f4, f5, f10, rdn # perform operation
fnmsub.s f13, f4, f5, f10, rmm # perform operation
fnmsub.s f13, f4, f5, f10, rne # perform operation
fnmsub.s f13, f4, f5, f10, rtz # perform operation
fnmsub.s f13, f4, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f4, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f4, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f4, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f4, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f4, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x26, 0xd06b1f79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x40cec103 # load x3 with value 0x40cec103
sw x3, 0(x2) # store 0x40cec103 in memory
flw f9, 0(x2) # load 0x40cec103 from memory into f9
fnmsub.s f26, f18, f23, f9, dyn # perform operation
fnmsub.s f26, f18, f23, f9, rdn # perform operation
fnmsub.s f26, f18, f23, f9, rmm # perform operation
fnmsub.s f26, f18, f23, f9, rne # perform operation
fnmsub.s f26, f18, f23, f9, rtz # perform operation
fnmsub.s f26, f18, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f18, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x23, 0x654beaf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0xdd310018 # load x3 with value 0xdd310018
sw x3, 0(x2) # store 0xdd310018 in memory
flw f4, 0(x2) # load 0xdd310018 from memory into f4
fnmsub.s f23, f13, f31, f4, dyn # perform operation
fnmsub.s f23, f13, f31, f4, rdn # perform operation
fnmsub.s f23, f13, f31, f4, rmm # perform operation
fnmsub.s f23, f13, f31, f4, rne # perform operation
fnmsub.s f23, f13, f31, f4, rtz # perform operation
fnmsub.s f23, f13, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x16, 0x5d993f0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x95f5a3ec # load x3 with value 0x95f5a3ec
sw x3, 0(x2) # store 0x95f5a3ec in memory
flw f11, 0(x2) # load 0x95f5a3ec from memory into f11
fnmsub.s f16, f27, f13, f11, dyn # perform operation
fnmsub.s f16, f27, f13, f11, rdn # perform operation
fnmsub.s f16, f27, f13, f11, rmm # perform operation
fnmsub.s f16, f27, f13, f11, rne # perform operation
fnmsub.s f16, f27, f13, f11, rtz # perform operation
fnmsub.s f16, f27, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x22, 0x6f993ee2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x46a9e918 # load x3 with value 0x46a9e918
sw x3, 0(x2) # store 0x46a9e918 in memory
flw f3, 0(x2) # load 0x46a9e918 from memory into f3
fnmsub.s f22, f23, f13, f3, dyn # perform operation
fnmsub.s f22, f23, f13, f3, rdn # perform operation
fnmsub.s f22, f23, f13, f3, rmm # perform operation
fnmsub.s f22, f23, f13, f3, rne # perform operation
fnmsub.s f22, f23, f13, f3, rtz # perform operation
fnmsub.s f22, f23, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f23, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x13, 0x5af55f7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x0fe0cf6a # load x3 with value 0x0fe0cf6a
sw x3, 0(x2) # store 0x0fe0cf6a in memory
flw f14, 0(x2) # load 0x0fe0cf6a from memory into f14
fnmsub.s f13, f20, f28, f14, dyn # perform operation
fnmsub.s f13, f20, f28, f14, rdn # perform operation
fnmsub.s f13, f20, f28, f14, rmm # perform operation
fnmsub.s f13, f20, f28, f14, rne # perform operation
fnmsub.s f13, f20, f28, f14, rtz # perform operation
fnmsub.s f13, f20, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f20, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f20, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f20, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f20, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f20, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x22, 0x30a0d773 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0xda150e96 # load x3 with value 0xda150e96
sw x3, 0(x2) # store 0xda150e96 in memory
flw f4, 0(x2) # load 0xda150e96 from memory into f4
fnmsub.s f22, f12, f1, f4, dyn # perform operation
fnmsub.s f22, f12, f1, f4, rdn # perform operation
fnmsub.s f22, f12, f1, f4, rmm # perform operation
fnmsub.s f22, f12, f1, f4, rne # perform operation
fnmsub.s f22, f12, f1, f4, rtz # perform operation
fnmsub.s f22, f12, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x25, 0xbcafc5a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0xdf6966bd # load x3 with value 0xdf6966bd
sw x3, 0(x2) # store 0xdf6966bd in memory
flw f16, 0(x2) # load 0xdf6966bd from memory into f16
fnmsub.s f25, f1, f17, f16, dyn # perform operation
fnmsub.s f25, f1, f17, f16, rdn # perform operation
fnmsub.s f25, f1, f17, f16, rmm # perform operation
fnmsub.s f25, f1, f17, f16, rne # perform operation
fnmsub.s f25, f1, f17, f16, rtz # perform operation
fnmsub.s f25, f1, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x1, 0xb263b65e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0xebdc4ea2 # load x3 with value 0xebdc4ea2
sw x3, 0(x2) # store 0xebdc4ea2 in memory
flw f2, 0(x2) # load 0xebdc4ea2 from memory into f2
fnmsub.s f1, f26, f17, f2, dyn # perform operation
fnmsub.s f1, f26, f17, f2, rdn # perform operation
fnmsub.s f1, f26, f17, f2, rmm # perform operation
fnmsub.s f1, f26, f17, f2, rne # perform operation
fnmsub.s f1, f26, f17, f2, rtz # perform operation
fnmsub.s f1, f26, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x6, 0x179ae358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xa9140a8b # load x3 with value 0xa9140a8b
sw x3, 0(x2) # store 0xa9140a8b in memory
flw f4, 0(x2) # load 0xa9140a8b from memory into f4
fnmsub.s f6, f1, f7, f4, dyn # perform operation
fnmsub.s f6, f1, f7, f4, rdn # perform operation
fnmsub.s f6, f1, f7, f4, rmm # perform operation
fnmsub.s f6, f1, f7, f4, rne # perform operation
fnmsub.s f6, f1, f7, f4, rtz # perform operation
fnmsub.s f6, f1, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x31, 0x7069e4d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x649a89c4 # load x3 with value 0x649a89c4
sw x3, 0(x2) # store 0x649a89c4 in memory
flw f9, 0(x2) # load 0x649a89c4 from memory into f9
fnmsub.s f31, f4, f3, f9, dyn # perform operation
fnmsub.s f31, f4, f3, f9, rdn # perform operation
fnmsub.s f31, f4, f3, f9, rmm # perform operation
fnmsub.s f31, f4, f3, f9, rne # perform operation
fnmsub.s f31, f4, f3, f9, rtz # perform operation
fnmsub.s f31, f4, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f4, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x8, 0x7c6153c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xd3d69eb2 # load x3 with value 0xd3d69eb2
sw x3, 0(x2) # store 0xd3d69eb2 in memory
flw f16, 0(x2) # load 0xd3d69eb2 from memory into f16
fnmsub.s f8, f20, f15, f16, dyn # perform operation
fnmsub.s f8, f20, f15, f16, rdn # perform operation
fnmsub.s f8, f20, f15, f16, rmm # perform operation
fnmsub.s f8, f20, f15, f16, rne # perform operation
fnmsub.s f8, f20, f15, f16, rtz # perform operation
fnmsub.s f8, f20, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f20, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x25, 0xec5b7822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xe0b16b68 # load x3 with value 0xe0b16b68
sw x3, 0(x2) # store 0xe0b16b68 in memory
flw f9, 0(x2) # load 0xe0b16b68 from memory into f9
fnmsub.s f25, f22, f21, f9, dyn # perform operation
fnmsub.s f25, f22, f21, f9, rdn # perform operation
fnmsub.s f25, f22, f21, f9, rmm # perform operation
fnmsub.s f25, f22, f21, f9, rne # perform operation
fnmsub.s f25, f22, f21, f9, rtz # perform operation
fnmsub.s f25, f22, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f22, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f22, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f22, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f22, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f22, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x24, 0x7705e5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x5589f506 # load x3 with value 0x5589f506
sw x3, 0(x2) # store 0x5589f506 in memory
flw f5, 0(x2) # load 0x5589f506 from memory into f5
fnmsub.s f24, f21, f23, f5, dyn # perform operation
fnmsub.s f24, f21, f23, f5, rdn # perform operation
fnmsub.s f24, f21, f23, f5, rmm # perform operation
fnmsub.s f24, f21, f23, f5, rne # perform operation
fnmsub.s f24, f21, f23, f5, rtz # perform operation
fnmsub.s f24, f21, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x22, 0x291df971 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x23ad80e6 # load x3 with value 0x23ad80e6
sw x3, 0(x2) # store 0x23ad80e6 in memory
flw f7, 0(x2) # load 0x23ad80e6 from memory into f7
fnmsub.s f22, f5, f6, f7, dyn # perform operation
fnmsub.s f22, f5, f6, f7, rdn # perform operation
fnmsub.s f22, f5, f6, f7, rmm # perform operation
fnmsub.s f22, f5, f6, f7, rne # perform operation
fnmsub.s f22, f5, f6, f7, rtz # perform operation
fnmsub.s f22, f5, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x3, 0x74243769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x3b982729 # load x3 with value 0x3b982729
sw x3, 0(x2) # store 0x3b982729 in memory
flw f26, 0(x2) # load 0x3b982729 from memory into f26
fnmsub.s f3, f14, f22, f26, dyn # perform operation
fnmsub.s f3, f14, f22, f26, rdn # perform operation
fnmsub.s f3, f14, f22, f26, rmm # perform operation
fnmsub.s f3, f14, f22, f26, rne # perform operation
fnmsub.s f3, f14, f22, f26, rtz # perform operation
fnmsub.s f3, f14, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x18, 0xfe0414d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x5c3ae406 # load x3 with value 0x5c3ae406
sw x3, 0(x2) # store 0x5c3ae406 in memory
flw f2, 0(x2) # load 0x5c3ae406 from memory into f2
fnmsub.s f18, f22, f29, f2, dyn # perform operation
fnmsub.s f18, f22, f29, f2, rdn # perform operation
fnmsub.s f18, f22, f29, f2, rmm # perform operation
fnmsub.s f18, f22, f29, f2, rne # perform operation
fnmsub.s f18, f22, f29, f2, rtz # perform operation
fnmsub.s f18, f22, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x13, 0x5d459995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x15cd84dd # load x3 with value 0x15cd84dd
sw x3, 0(x2) # store 0x15cd84dd in memory
flw f16, 0(x2) # load 0x15cd84dd from memory into f16
fnmsub.s f13, f14, f28, f16, dyn # perform operation
fnmsub.s f13, f14, f28, f16, rdn # perform operation
fnmsub.s f13, f14, f28, f16, rmm # perform operation
fnmsub.s f13, f14, f28, f16, rne # perform operation
fnmsub.s f13, f14, f28, f16, rtz # perform operation
fnmsub.s f13, f14, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f14, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x22, 0x4dbda834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x9f8a6fe7 # load x3 with value 0x9f8a6fe7
sw x3, 0(x2) # store 0x9f8a6fe7 in memory
flw f27, 0(x2) # load 0x9f8a6fe7 from memory into f27
fnmsub.s f22, f14, f26, f27, dyn # perform operation
fnmsub.s f22, f14, f26, f27, rdn # perform operation
fnmsub.s f22, f14, f26, f27, rmm # perform operation
fnmsub.s f22, f14, f26, f27, rne # perform operation
fnmsub.s f22, f14, f26, f27, rtz # perform operation
fnmsub.s f22, f14, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x8, 0x1e894b0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x71292ebf # load x3 with value 0x71292ebf
sw x3, 0(x2) # store 0x71292ebf in memory
flw f19, 0(x2) # load 0x71292ebf from memory into f19
fnmsub.s f8, f23, f13, f19, dyn # perform operation
fnmsub.s f8, f23, f13, f19, rdn # perform operation
fnmsub.s f8, f23, f13, f19, rmm # perform operation
fnmsub.s f8, f23, f13, f19, rne # perform operation
fnmsub.s f8, f23, f13, f19, rtz # perform operation
fnmsub.s f8, f23, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x27, 0x0c387350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xba99e5b8 # load x3 with value 0xba99e5b8
sw x3, 0(x2) # store 0xba99e5b8 in memory
flw f19, 0(x2) # load 0xba99e5b8 from memory into f19
fnmsub.s f27, f21, f7, f19, dyn # perform operation
fnmsub.s f27, f21, f7, f19, rdn # perform operation
fnmsub.s f27, f21, f7, f19, rmm # perform operation
fnmsub.s f27, f21, f7, f19, rne # perform operation
fnmsub.s f27, f21, f7, f19, rtz # perform operation
fnmsub.s f27, f21, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x31, 0x9512eb93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x5d03168e # load x3 with value 0x5d03168e
sw x3, 0(x2) # store 0x5d03168e in memory
flw f21, 0(x2) # load 0x5d03168e from memory into f21
fnmsub.s f31, f17, f28, f21, dyn # perform operation
fnmsub.s f31, f17, f28, f21, rdn # perform operation
fnmsub.s f31, f17, f28, f21, rmm # perform operation
fnmsub.s f31, f17, f28, f21, rne # perform operation
fnmsub.s f31, f17, f28, f21, rtz # perform operation
fnmsub.s f31, f17, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x17, 0xc61d8f97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x8ec155b6 # load x3 with value 0x8ec155b6
sw x3, 0(x2) # store 0x8ec155b6 in memory
flw f23, 0(x2) # load 0x8ec155b6 from memory into f23
fnmsub.s f17, f21, f14, f23, dyn # perform operation
fnmsub.s f17, f21, f14, f23, rdn # perform operation
fnmsub.s f17, f21, f14, f23, rmm # perform operation
fnmsub.s f17, f21, f14, f23, rne # perform operation
fnmsub.s f17, f21, f14, f23, rtz # perform operation
fnmsub.s f17, f21, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x3, 0xcf362c86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x2a501df6 # load x3 with value 0x2a501df6
sw x3, 0(x2) # store 0x2a501df6 in memory
flw f12, 0(x2) # load 0x2a501df6 from memory into f12
fnmsub.s f3, f21, f18, f12, dyn # perform operation
fnmsub.s f3, f21, f18, f12, rdn # perform operation
fnmsub.s f3, f21, f18, f12, rmm # perform operation
fnmsub.s f3, f21, f18, f12, rne # perform operation
fnmsub.s f3, f21, f18, f12, rtz # perform operation
fnmsub.s f3, f21, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f21, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x17, 0x0a7af621 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x789a2c52 # load x3 with value 0x789a2c52
sw x3, 0(x2) # store 0x789a2c52 in memory
flw f1, 0(x2) # load 0x789a2c52 from memory into f1
fnmsub.s f17, f27, f21, f1, dyn # perform operation
fnmsub.s f17, f27, f21, f1, rdn # perform operation
fnmsub.s f17, f27, f21, f1, rmm # perform operation
fnmsub.s f17, f27, f21, f1, rne # perform operation
fnmsub.s f17, f27, f21, f1, rtz # perform operation
fnmsub.s f17, f27, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f21, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x19, 0xfcca7d9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x688078c2 # load x3 with value 0x688078c2
sw x3, 0(x2) # store 0x688078c2 in memory
flw f17, 0(x2) # load 0x688078c2 from memory into f17
fnmsub.s f19, f1, f29, f17, dyn # perform operation
fnmsub.s f19, f1, f29, f17, rdn # perform operation
fnmsub.s f19, f1, f29, f17, rmm # perform operation
fnmsub.s f19, f1, f29, f17, rne # perform operation
fnmsub.s f19, f1, f29, f17, rtz # perform operation
fnmsub.s f19, f1, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x6, 0x4715c5e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x1c71ec0b # load x3 with value 0x1c71ec0b
sw x3, 0(x2) # store 0x1c71ec0b in memory
flw f12, 0(x2) # load 0x1c71ec0b from memory into f12
fnmsub.s f6, f4, f28, f12, dyn # perform operation
fnmsub.s f6, f4, f28, f12, rdn # perform operation
fnmsub.s f6, f4, f28, f12, rmm # perform operation
fnmsub.s f6, f4, f28, f12, rne # perform operation
fnmsub.s f6, f4, f28, f12, rtz # perform operation
fnmsub.s f6, f4, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f4, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x3, 0xc0223c73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x8ff46322 # load x3 with value 0x8ff46322
sw x3, 0(x2) # store 0x8ff46322 in memory
flw f4, 0(x2) # load 0x8ff46322 from memory into f4
fnmsub.s f3, f27, f21, f4, dyn # perform operation
fnmsub.s f3, f27, f21, f4, rdn # perform operation
fnmsub.s f3, f27, f21, f4, rmm # perform operation
fnmsub.s f3, f27, f21, f4, rne # perform operation
fnmsub.s f3, f27, f21, f4, rtz # perform operation
fnmsub.s f3, f27, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x22, 0xbdc0d31b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x564a4ba0 # load x3 with value 0x564a4ba0
sw x3, 0(x2) # store 0x564a4ba0 in memory
flw f17, 0(x2) # load 0x564a4ba0 from memory into f17
fnmsub.s f22, f24, f5, f17, dyn # perform operation
fnmsub.s f22, f24, f5, f17, rdn # perform operation
fnmsub.s f22, f24, f5, f17, rmm # perform operation
fnmsub.s f22, f24, f5, f17, rne # perform operation
fnmsub.s f22, f24, f5, f17, rtz # perform operation
fnmsub.s f22, f24, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f24, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f24, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x5, 0x29033163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x02cd1ed6 # load x3 with value 0x02cd1ed6
sw x3, 0(x2) # store 0x02cd1ed6 in memory
flw f7, 0(x2) # load 0x02cd1ed6 from memory into f7
fnmsub.s f5, f10, f30, f7, dyn # perform operation
fnmsub.s f5, f10, f30, f7, rdn # perform operation
fnmsub.s f5, f10, f30, f7, rmm # perform operation
fnmsub.s f5, f10, f30, f7, rne # perform operation
fnmsub.s f5, f10, f30, f7, rtz # perform operation
fnmsub.s f5, f10, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f10, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f10, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x20, 0x7c2f5445 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xa12957ae # load x3 with value 0xa12957ae
sw x3, 0(x2) # store 0xa12957ae in memory
flw f12, 0(x2) # load 0xa12957ae from memory into f12
fnmsub.s f20, f13, f22, f12, dyn # perform operation
fnmsub.s f20, f13, f22, f12, rdn # perform operation
fnmsub.s f20, f13, f22, f12, rmm # perform operation
fnmsub.s f20, f13, f22, f12, rne # perform operation
fnmsub.s f20, f13, f22, f12, rtz # perform operation
fnmsub.s f20, f13, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x5, 0xedce5ef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x135a0902 # load x3 with value 0x135a0902
sw x3, 0(x2) # store 0x135a0902 in memory
flw f1, 0(x2) # load 0x135a0902 from memory into f1
fnmsub.s f5, f14, f7, f1, dyn # perform operation
fnmsub.s f5, f14, f7, f1, rdn # perform operation
fnmsub.s f5, f14, f7, f1, rmm # perform operation
fnmsub.s f5, f14, f7, f1, rne # perform operation
fnmsub.s f5, f14, f7, f1, rtz # perform operation
fnmsub.s f5, f14, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x31, 0x892d4500 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x7b016691 # load x3 with value 0x7b016691
sw x3, 0(x2) # store 0x7b016691 in memory
flw f22, 0(x2) # load 0x7b016691 from memory into f22
fnmsub.s f31, f29, f25, f22, dyn # perform operation
fnmsub.s f31, f29, f25, f22, rdn # perform operation
fnmsub.s f31, f29, f25, f22, rmm # perform operation
fnmsub.s f31, f29, f25, f22, rne # perform operation
fnmsub.s f31, f29, f25, f22, rtz # perform operation
fnmsub.s f31, f29, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f29, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f29, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f29, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f29, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f29, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x3, 0x44279c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x3c075b2f # load x3 with value 0x3c075b2f
sw x3, 0(x2) # store 0x3c075b2f in memory
flw f6, 0(x2) # load 0x3c075b2f from memory into f6
fnmsub.s f3, f29, f17, f6, dyn # perform operation
fnmsub.s f3, f29, f17, f6, rdn # perform operation
fnmsub.s f3, f29, f17, f6, rmm # perform operation
fnmsub.s f3, f29, f17, f6, rne # perform operation
fnmsub.s f3, f29, f17, f6, rtz # perform operation
fnmsub.s f3, f29, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f29, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f29, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f29, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f29, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f29, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x4, 0x33576fda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xa03426dd # load x3 with value 0xa03426dd
sw x3, 0(x2) # store 0xa03426dd in memory
flw f28, 0(x2) # load 0xa03426dd from memory into f28
fnmsub.s f4, f18, f22, f28, dyn # perform operation
fnmsub.s f4, f18, f22, f28, rdn # perform operation
fnmsub.s f4, f18, f22, f28, rmm # perform operation
fnmsub.s f4, f18, f22, f28, rne # perform operation
fnmsub.s f4, f18, f22, f28, rtz # perform operation
fnmsub.s f4, f18, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f18, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x25, 0x4ff9faa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xe4f26638 # load x3 with value 0xe4f26638
sw x3, 0(x2) # store 0xe4f26638 in memory
flw f16, 0(x2) # load 0xe4f26638 from memory into f16
fnmsub.s f25, f20, f26, f16, dyn # perform operation
fnmsub.s f25, f20, f26, f16, rdn # perform operation
fnmsub.s f25, f20, f26, f16, rmm # perform operation
fnmsub.s f25, f20, f26, f16, rne # perform operation
fnmsub.s f25, f20, f26, f16, rtz # perform operation
fnmsub.s f25, f20, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f20, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f20, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x11, 0x68938ffc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0xd4db0bd7 # load x3 with value 0xd4db0bd7
sw x3, 0(x2) # store 0xd4db0bd7 in memory
flw f22, 0(x2) # load 0xd4db0bd7 from memory into f22
fnmsub.s f11, f4, f29, f22, dyn # perform operation
fnmsub.s f11, f4, f29, f22, rdn # perform operation
fnmsub.s f11, f4, f29, f22, rmm # perform operation
fnmsub.s f11, f4, f29, f22, rne # perform operation
fnmsub.s f11, f4, f29, f22, rtz # perform operation
fnmsub.s f11, f4, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f4, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x7, 0x0ef67445 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x28c68e4e # load x3 with value 0x28c68e4e
sw x3, 0(x2) # store 0x28c68e4e in memory
flw f31, 0(x2) # load 0x28c68e4e from memory into f31
fnmsub.s f7, f17, f11, f31, dyn # perform operation
fnmsub.s f7, f17, f11, f31, rdn # perform operation
fnmsub.s f7, f17, f11, f31, rmm # perform operation
fnmsub.s f7, f17, f11, f31, rne # perform operation
fnmsub.s f7, f17, f11, f31, rtz # perform operation
fnmsub.s f7, f17, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f17, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x9, 0xb701302a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0xf28547cf # load x3 with value 0xf28547cf
sw x3, 0(x2) # store 0xf28547cf in memory
flw f18, 0(x2) # load 0xf28547cf from memory into f18
fnmsub.s f9, f15, f10, f18, dyn # perform operation
fnmsub.s f9, f15, f10, f18, rdn # perform operation
fnmsub.s f9, f15, f10, f18, rmm # perform operation
fnmsub.s f9, f15, f10, f18, rne # perform operation
fnmsub.s f9, f15, f10, f18, rtz # perform operation
fnmsub.s f9, f15, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f15, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f15, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x15, 0xb5f61df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x4f0655f6 # load x3 with value 0x4f0655f6
sw x3, 0(x2) # store 0x4f0655f6 in memory
flw f20, 0(x2) # load 0x4f0655f6 from memory into f20
fnmsub.s f15, f14, f7, f20, dyn # perform operation
fnmsub.s f15, f14, f7, f20, rdn # perform operation
fnmsub.s f15, f14, f7, f20, rmm # perform operation
fnmsub.s f15, f14, f7, f20, rne # perform operation
fnmsub.s f15, f14, f7, f20, rtz # perform operation
fnmsub.s f15, f14, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x14, 0x01b3709a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xf01a9962 # load x3 with value 0xf01a9962
sw x3, 0(x2) # store 0xf01a9962 in memory
flw f25, 0(x2) # load 0xf01a9962 from memory into f25
fnmsub.s f14, f16, f29, f25, dyn # perform operation
fnmsub.s f14, f16, f29, f25, rdn # perform operation
fnmsub.s f14, f16, f29, f25, rmm # perform operation
fnmsub.s f14, f16, f29, f25, rne # perform operation
fnmsub.s f14, f16, f29, f25, rtz # perform operation
fnmsub.s f14, f16, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x28, 0xace14146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xa8adcebb # load x3 with value 0xa8adcebb
sw x3, 0(x2) # store 0xa8adcebb in memory
flw f19, 0(x2) # load 0xa8adcebb from memory into f19
fnmsub.s f28, f5, f30, f19, dyn # perform operation
fnmsub.s f28, f5, f30, f19, rdn # perform operation
fnmsub.s f28, f5, f30, f19, rmm # perform operation
fnmsub.s f28, f5, f30, f19, rne # perform operation
fnmsub.s f28, f5, f30, f19, rtz # perform operation
fnmsub.s f28, f5, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f5, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f5, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f5, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f5, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f5, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x23, 0x02717660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xc149463b # load x3 with value 0xc149463b
sw x3, 0(x2) # store 0xc149463b in memory
flw f1, 0(x2) # load 0xc149463b from memory into f1
fnmsub.s f23, f24, f2, f1, dyn # perform operation
fnmsub.s f23, f24, f2, f1, rdn # perform operation
fnmsub.s f23, f24, f2, f1, rmm # perform operation
fnmsub.s f23, f24, f2, f1, rne # perform operation
fnmsub.s f23, f24, f2, f1, rtz # perform operation
fnmsub.s f23, f24, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f24, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f24, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f24, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f24, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f24, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x12, 0xaf5c7f55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xc189360d # load x3 with value 0xc189360d
sw x3, 0(x2) # store 0xc189360d in memory
flw f20, 0(x2) # load 0xc189360d from memory into f20
fnmsub.s f12, f24, f16, f20, dyn # perform operation
fnmsub.s f12, f24, f16, f20, rdn # perform operation
fnmsub.s f12, f24, f16, f20, rmm # perform operation
fnmsub.s f12, f24, f16, f20, rne # perform operation
fnmsub.s f12, f24, f16, f20, rtz # perform operation
fnmsub.s f12, f24, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x1, 0xaf645c3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x249e2781 # load x3 with value 0x249e2781
sw x3, 0(x2) # store 0x249e2781 in memory
flw f10, 0(x2) # load 0x249e2781 from memory into f10
fnmsub.s f1, f2, f18, f10, dyn # perform operation
fnmsub.s f1, f2, f18, f10, rdn # perform operation
fnmsub.s f1, f2, f18, f10, rmm # perform operation
fnmsub.s f1, f2, f18, f10, rne # perform operation
fnmsub.s f1, f2, f18, f10, rtz # perform operation
fnmsub.s f1, f2, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f2, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f2, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x27, 0xbcf374ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x41ab9f46 # load x3 with value 0x41ab9f46
sw x3, 0(x2) # store 0x41ab9f46 in memory
flw f14, 0(x2) # load 0x41ab9f46 from memory into f14
fnmsub.s f27, f28, f3, f14, dyn # perform operation
fnmsub.s f27, f28, f3, f14, rdn # perform operation
fnmsub.s f27, f28, f3, f14, rmm # perform operation
fnmsub.s f27, f28, f3, f14, rne # perform operation
fnmsub.s f27, f28, f3, f14, rtz # perform operation
fnmsub.s f27, f28, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x2, 0xc8a68efc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xdfe9fba4 # load x3 with value 0xdfe9fba4
sw x3, 0(x2) # store 0xdfe9fba4 in memory
flw f1, 0(x2) # load 0xdfe9fba4 from memory into f1
fnmsub.s f2, f27, f19, f1, dyn # perform operation
fnmsub.s f2, f27, f19, f1, rdn # perform operation
fnmsub.s f2, f27, f19, f1, rmm # perform operation
fnmsub.s f2, f27, f19, f1, rne # perform operation
fnmsub.s f2, f27, f19, f1, rtz # perform operation
fnmsub.s f2, f27, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x1, 0x57562cfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xe354a045 # load x3 with value 0xe354a045
sw x3, 0(x2) # store 0xe354a045 in memory
flw f4, 0(x2) # load 0xe354a045 from memory into f4
fnmsub.s f1, f5, f24, f4, dyn # perform operation
fnmsub.s f1, f5, f24, f4, rdn # perform operation
fnmsub.s f1, f5, f24, f4, rmm # perform operation
fnmsub.s f1, f5, f24, f4, rne # perform operation
fnmsub.s f1, f5, f24, f4, rtz # perform operation
fnmsub.s f1, f5, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f5, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x18, 0x3d2c0a71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xedaffd49 # load x3 with value 0xedaffd49
sw x3, 0(x2) # store 0xedaffd49 in memory
flw f8, 0(x2) # load 0xedaffd49 from memory into f8
fnmsub.s f18, f12, f17, f8, dyn # perform operation
fnmsub.s f18, f12, f17, f8, rdn # perform operation
fnmsub.s f18, f12, f17, f8, rmm # perform operation
fnmsub.s f18, f12, f17, f8, rne # perform operation
fnmsub.s f18, f12, f17, f8, rtz # perform operation
fnmsub.s f18, f12, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x1, 0x57e3491f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0xba3ac57d # load x3 with value 0xba3ac57d
sw x3, 0(x2) # store 0xba3ac57d in memory
flw f3, 0(x2) # load 0xba3ac57d from memory into f3
fnmsub.s f1, f11, f17, f3, dyn # perform operation
fnmsub.s f1, f11, f17, f3, rdn # perform operation
fnmsub.s f1, f11, f17, f3, rmm # perform operation
fnmsub.s f1, f11, f17, f3, rne # perform operation
fnmsub.s f1, f11, f17, f3, rtz # perform operation
fnmsub.s f1, f11, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x10, 0xe1f44822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xd0855fe5 # load x3 with value 0xd0855fe5
sw x3, 0(x2) # store 0xd0855fe5 in memory
flw f8, 0(x2) # load 0xd0855fe5 from memory into f8
fnmsub.s f10, f29, f2, f8, dyn # perform operation
fnmsub.s f10, f29, f2, f8, rdn # perform operation
fnmsub.s f10, f29, f2, f8, rmm # perform operation
fnmsub.s f10, f29, f2, f8, rne # perform operation
fnmsub.s f10, f29, f2, f8, rtz # perform operation
fnmsub.s f10, f29, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x1, 0x3f99bbae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0xc8a6bc07 # load x3 with value 0xc8a6bc07
sw x3, 0(x2) # store 0xc8a6bc07 in memory
flw f8, 0(x2) # load 0xc8a6bc07 from memory into f8
fnmsub.s f1, f25, f21, f8, dyn # perform operation
fnmsub.s f1, f25, f21, f8, rdn # perform operation
fnmsub.s f1, f25, f21, f8, rmm # perform operation
fnmsub.s f1, f25, f21, f8, rne # perform operation
fnmsub.s f1, f25, f21, f8, rtz # perform operation
fnmsub.s f1, f25, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f25, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f25, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f25, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f25, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f25, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x20, 0x6386c693 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xaf86a91c # load x3 with value 0xaf86a91c
sw x3, 0(x2) # store 0xaf86a91c in memory
flw f11, 0(x2) # load 0xaf86a91c from memory into f11
fnmsub.s f20, f12, f19, f11, dyn # perform operation
fnmsub.s f20, f12, f19, f11, rdn # perform operation
fnmsub.s f20, f12, f19, f11, rmm # perform operation
fnmsub.s f20, f12, f19, f11, rne # perform operation
fnmsub.s f20, f12, f19, f11, rtz # perform operation
fnmsub.s f20, f12, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x25, 0xb3261d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x22576dd5 # load x3 with value 0x22576dd5
sw x3, 0(x2) # store 0x22576dd5 in memory
flw f30, 0(x2) # load 0x22576dd5 from memory into f30
fnmsub.s f25, f21, f15, f30, dyn # perform operation
fnmsub.s f25, f21, f15, f30, rdn # perform operation
fnmsub.s f25, f21, f15, f30, rmm # perform operation
fnmsub.s f25, f21, f15, f30, rne # perform operation
fnmsub.s f25, f21, f15, f30, rtz # perform operation
fnmsub.s f25, f21, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x27, 0x6bf0ab0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x96ad9490 # load x3 with value 0x96ad9490
sw x3, 0(x2) # store 0x96ad9490 in memory
flw f5, 0(x2) # load 0x96ad9490 from memory into f5
fnmsub.s f27, f7, f1, f5, dyn # perform operation
fnmsub.s f27, f7, f1, f5, rdn # perform operation
fnmsub.s f27, f7, f1, f5, rmm # perform operation
fnmsub.s f27, f7, f1, f5, rne # perform operation
fnmsub.s f27, f7, f1, f5, rtz # perform operation
fnmsub.s f27, f7, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f7, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x6, 0x67638739 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x50db7ff8 # load x3 with value 0x50db7ff8
sw x3, 0(x2) # store 0x50db7ff8 in memory
flw f23, 0(x2) # load 0x50db7ff8 from memory into f23
fnmsub.s f6, f14, f26, f23, dyn # perform operation
fnmsub.s f6, f14, f26, f23, rdn # perform operation
fnmsub.s f6, f14, f26, f23, rmm # perform operation
fnmsub.s f6, f14, f26, f23, rne # perform operation
fnmsub.s f6, f14, f26, f23, rtz # perform operation
fnmsub.s f6, f14, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f14, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x17, 0x2fa05344 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0xc8c2469e # load x3 with value 0xc8c2469e
sw x3, 0(x2) # store 0xc8c2469e in memory
flw f8, 0(x2) # load 0xc8c2469e from memory into f8
fnmsub.s f17, f19, f31, f8, dyn # perform operation
fnmsub.s f17, f19, f31, f8, rdn # perform operation
fnmsub.s f17, f19, f31, f8, rmm # perform operation
fnmsub.s f17, f19, f31, f8, rne # perform operation
fnmsub.s f17, f19, f31, f8, rtz # perform operation
fnmsub.s f17, f19, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x14, 0x95ab65ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x8a5936f3 # load x3 with value 0x8a5936f3
sw x3, 0(x2) # store 0x8a5936f3 in memory
flw f13, 0(x2) # load 0x8a5936f3 from memory into f13
fnmsub.s f14, f17, f25, f13, dyn # perform operation
fnmsub.s f14, f17, f25, f13, rdn # perform operation
fnmsub.s f14, f17, f25, f13, rmm # perform operation
fnmsub.s f14, f17, f25, f13, rne # perform operation
fnmsub.s f14, f17, f25, f13, rtz # perform operation
fnmsub.s f14, f17, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x25, 0x441c0368 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xf798e7d0 # load x3 with value 0xf798e7d0
sw x3, 0(x2) # store 0xf798e7d0 in memory
flw f14, 0(x2) # load 0xf798e7d0 from memory into f14
fnmsub.s f25, f31, f2, f14, dyn # perform operation
fnmsub.s f25, f31, f2, f14, rdn # perform operation
fnmsub.s f25, f31, f2, f14, rmm # perform operation
fnmsub.s f25, f31, f2, f14, rne # perform operation
fnmsub.s f25, f31, f2, f14, rtz # perform operation
fnmsub.s f25, f31, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x14, 0x4c963d3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x6c10d269 # load x3 with value 0x6c10d269
sw x3, 0(x2) # store 0x6c10d269 in memory
flw f29, 0(x2) # load 0x6c10d269 from memory into f29
fnmsub.s f14, f5, f6, f29, dyn # perform operation
fnmsub.s f14, f5, f6, f29, rdn # perform operation
fnmsub.s f14, f5, f6, f29, rmm # perform operation
fnmsub.s f14, f5, f6, f29, rne # perform operation
fnmsub.s f14, f5, f6, f29, rtz # perform operation
fnmsub.s f14, f5, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f5, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f5, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f5, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f5, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f5, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x18, 0xc8b62322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x1ccb53c3 # load x3 with value 0x1ccb53c3
sw x3, 0(x2) # store 0x1ccb53c3 in memory
flw f12, 0(x2) # load 0x1ccb53c3 from memory into f12
fnmsub.s f18, f26, f16, f12, dyn # perform operation
fnmsub.s f18, f26, f16, f12, rdn # perform operation
fnmsub.s f18, f26, f16, f12, rmm # perform operation
fnmsub.s f18, f26, f16, f12, rne # perform operation
fnmsub.s f18, f26, f16, f12, rtz # perform operation
fnmsub.s f18, f26, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f26, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x1, 0x143a8c33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x1fdabee9 # load x3 with value 0x1fdabee9
sw x3, 0(x2) # store 0x1fdabee9 in memory
flw f28, 0(x2) # load 0x1fdabee9 from memory into f28
fnmsub.s f1, f24, f13, f28, dyn # perform operation
fnmsub.s f1, f24, f13, f28, rdn # perform operation
fnmsub.s f1, f24, f13, f28, rmm # perform operation
fnmsub.s f1, f24, f13, f28, rne # perform operation
fnmsub.s f1, f24, f13, f28, rtz # perform operation
fnmsub.s f1, f24, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f24, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f24, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x10, 0x0bb8ff47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xeeeefaa4 # load x3 with value 0xeeeefaa4
sw x3, 0(x2) # store 0xeeeefaa4 in memory
flw f11, 0(x2) # load 0xeeeefaa4 from memory into f11
fnmsub.s f10, f5, f26, f11, dyn # perform operation
fnmsub.s f10, f5, f26, f11, rdn # perform operation
fnmsub.s f10, f5, f26, f11, rmm # perform operation
fnmsub.s f10, f5, f26, f11, rne # perform operation
fnmsub.s f10, f5, f26, f11, rtz # perform operation
fnmsub.s f10, f5, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f5, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f5, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x8, 0xfc084ce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xbe377195 # load x3 with value 0xbe377195
sw x3, 0(x2) # store 0xbe377195 in memory
flw f10, 0(x2) # load 0xbe377195 from memory into f10
fnmsub.s f8, f1, f29, f10, dyn # perform operation
fnmsub.s f8, f1, f29, f10, rdn # perform operation
fnmsub.s f8, f1, f29, f10, rmm # perform operation
fnmsub.s f8, f1, f29, f10, rne # perform operation
fnmsub.s f8, f1, f29, f10, rtz # perform operation
fnmsub.s f8, f1, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x17, 0xd36dfaec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0xbf7a325d # load x3 with value 0xbf7a325d
sw x3, 0(x2) # store 0xbf7a325d in memory
flw f16, 0(x2) # load 0xbf7a325d from memory into f16
fnmsub.s f17, f10, f24, f16, dyn # perform operation
fnmsub.s f17, f10, f24, f16, rdn # perform operation
fnmsub.s f17, f10, f24, f16, rmm # perform operation
fnmsub.s f17, f10, f24, f16, rne # perform operation
fnmsub.s f17, f10, f24, f16, rtz # perform operation
fnmsub.s f17, f10, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f10, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f10, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x7, 0xec517621 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xf6f79c6b # load x3 with value 0xf6f79c6b
sw x3, 0(x2) # store 0xf6f79c6b in memory
flw f25, 0(x2) # load 0xf6f79c6b from memory into f25
fnmsub.s f7, f27, f12, f25, dyn # perform operation
fnmsub.s f7, f27, f12, f25, rdn # perform operation
fnmsub.s f7, f27, f12, f25, rmm # perform operation
fnmsub.s f7, f27, f12, f25, rne # perform operation
fnmsub.s f7, f27, f12, f25, rtz # perform operation
fnmsub.s f7, f27, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x12, 0x352fdf4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x2b840132 # load x3 with value 0x2b840132
sw x3, 0(x2) # store 0x2b840132 in memory
flw f4, 0(x2) # load 0x2b840132 from memory into f4
fnmsub.s f12, f16, f5, f4, dyn # perform operation
fnmsub.s f12, f16, f5, f4, rdn # perform operation
fnmsub.s f12, f16, f5, f4, rmm # perform operation
fnmsub.s f12, f16, f5, f4, rne # perform operation
fnmsub.s f12, f16, f5, f4, rtz # perform operation
fnmsub.s f12, f16, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f16, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x4, 0x8af5f464 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x3a91803d # load x3 with value 0x3a91803d
sw x3, 0(x2) # store 0x3a91803d in memory
flw f17, 0(x2) # load 0x3a91803d from memory into f17
fnmsub.s f4, f11, f19, f17, dyn # perform operation
fnmsub.s f4, f11, f19, f17, rdn # perform operation
fnmsub.s f4, f11, f19, f17, rmm # perform operation
fnmsub.s f4, f11, f19, f17, rne # perform operation
fnmsub.s f4, f11, f19, f17, rtz # perform operation
fnmsub.s f4, f11, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f11, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f11, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x22, 0xb33b447b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0xa30e7e18 # load x3 with value 0xa30e7e18
sw x3, 0(x2) # store 0xa30e7e18 in memory
flw f4, 0(x2) # load 0xa30e7e18 from memory into f4
fnmsub.s f22, f9, f6, f4, dyn # perform operation
fnmsub.s f22, f9, f6, f4, rdn # perform operation
fnmsub.s f22, f9, f6, f4, rmm # perform operation
fnmsub.s f22, f9, f6, f4, rne # perform operation
fnmsub.s f22, f9, f6, f4, rtz # perform operation
fnmsub.s f22, f9, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x2, 0x659b2dc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xb0563542 # load x3 with value 0xb0563542
sw x3, 0(x2) # store 0xb0563542 in memory
flw f31, 0(x2) # load 0xb0563542 from memory into f31
fnmsub.s f2, f12, f10, f31, dyn # perform operation
fnmsub.s f2, f12, f10, f31, rdn # perform operation
fnmsub.s f2, f12, f10, f31, rmm # perform operation
fnmsub.s f2, f12, f10, f31, rne # perform operation
fnmsub.s f2, f12, f10, f31, rtz # perform operation
fnmsub.s f2, f12, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f12, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x23, 0x5a66f338 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x90081726 # load x3 with value 0x90081726
sw x3, 0(x2) # store 0x90081726 in memory
flw f29, 0(x2) # load 0x90081726 from memory into f29
fnmsub.s f23, f26, f17, f29, dyn # perform operation
fnmsub.s f23, f26, f17, f29, rdn # perform operation
fnmsub.s f23, f26, f17, f29, rmm # perform operation
fnmsub.s f23, f26, f17, f29, rne # perform operation
fnmsub.s f23, f26, f17, f29, rtz # perform operation
fnmsub.s f23, f26, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x16, 0xe52fa264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x34b08d54 # load x3 with value 0x34b08d54
sw x3, 0(x2) # store 0x34b08d54 in memory
flw f13, 0(x2) # load 0x34b08d54 from memory into f13
fnmsub.s f16, f15, f23, f13, dyn # perform operation
fnmsub.s f16, f15, f23, f13, rdn # perform operation
fnmsub.s f16, f15, f23, f13, rmm # perform operation
fnmsub.s f16, f15, f23, f13, rne # perform operation
fnmsub.s f16, f15, f23, f13, rtz # perform operation
fnmsub.s f16, f15, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f15, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x29, 0xff21ec14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x5d574cfa # load x3 with value 0x5d574cfa
sw x3, 0(x2) # store 0x5d574cfa in memory
flw f19, 0(x2) # load 0x5d574cfa from memory into f19
fnmsub.s f29, f1, f26, f19, dyn # perform operation
fnmsub.s f29, f1, f26, f19, rdn # perform operation
fnmsub.s f29, f1, f26, f19, rmm # perform operation
fnmsub.s f29, f1, f26, f19, rne # perform operation
fnmsub.s f29, f1, f26, f19, rtz # perform operation
fnmsub.s f29, f1, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f1, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f1, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f1, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f1, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f1, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x9, 0x0cd6bc96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x5a74b05c # load x3 with value 0x5a74b05c
sw x3, 0(x2) # store 0x5a74b05c in memory
flw f7, 0(x2) # load 0x5a74b05c from memory into f7
fnmsub.s f9, f13, f3, f7, dyn # perform operation
fnmsub.s f9, f13, f3, f7, rdn # perform operation
fnmsub.s f9, f13, f3, f7, rmm # perform operation
fnmsub.s f9, f13, f3, f7, rne # perform operation
fnmsub.s f9, f13, f3, f7, rtz # perform operation
fnmsub.s f9, f13, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x18, 0x4f755813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0xd51a0ded # load x3 with value 0xd51a0ded
sw x3, 0(x2) # store 0xd51a0ded in memory
flw f11, 0(x2) # load 0xd51a0ded from memory into f11
fnmsub.s f18, f1, f22, f11, dyn # perform operation
fnmsub.s f18, f1, f22, f11, rdn # perform operation
fnmsub.s f18, f1, f22, f11, rmm # perform operation
fnmsub.s f18, f1, f22, f11, rne # perform operation
fnmsub.s f18, f1, f22, f11, rtz # perform operation
fnmsub.s f18, f1, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x19, 0x23433c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x46b168d6 # load x3 with value 0x46b168d6
sw x3, 0(x2) # store 0x46b168d6 in memory
flw f17, 0(x2) # load 0x46b168d6 from memory into f17
fnmsub.s f19, f23, f22, f17, dyn # perform operation
fnmsub.s f19, f23, f22, f17, rdn # perform operation
fnmsub.s f19, f23, f22, f17, rmm # perform operation
fnmsub.s f19, f23, f22, f17, rne # perform operation
fnmsub.s f19, f23, f22, f17, rtz # perform operation
fnmsub.s f19, f23, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x24, 0x2a381078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x4f79c90c # load x3 with value 0x4f79c90c
sw x3, 0(x2) # store 0x4f79c90c in memory
flw f9, 0(x2) # load 0x4f79c90c from memory into f9
fnmsub.s f24, f10, f15, f9, dyn # perform operation
fnmsub.s f24, f10, f15, f9, rdn # perform operation
fnmsub.s f24, f10, f15, f9, rmm # perform operation
fnmsub.s f24, f10, f15, f9, rne # perform operation
fnmsub.s f24, f10, f15, f9, rtz # perform operation
fnmsub.s f24, f10, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f10, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x23, 0x01546e1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x6f802e83 # load x3 with value 0x6f802e83
sw x3, 0(x2) # store 0x6f802e83 in memory
flw f16, 0(x2) # load 0x6f802e83 from memory into f16
fnmsub.s f23, f9, f29, f16, dyn # perform operation
fnmsub.s f23, f9, f29, f16, rdn # perform operation
fnmsub.s f23, f9, f29, f16, rmm # perform operation
fnmsub.s f23, f9, f29, f16, rne # perform operation
fnmsub.s f23, f9, f29, f16, rtz # perform operation
fnmsub.s f23, f9, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x12, 0xfe05d023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x790d137d # load x3 with value 0x790d137d
sw x3, 0(x2) # store 0x790d137d in memory
flw f6, 0(x2) # load 0x790d137d from memory into f6
fnmsub.s f12, f7, f29, f6, dyn # perform operation
fnmsub.s f12, f7, f29, f6, rdn # perform operation
fnmsub.s f12, f7, f29, f6, rmm # perform operation
fnmsub.s f12, f7, f29, f6, rne # perform operation
fnmsub.s f12, f7, f29, f6, rtz # perform operation
fnmsub.s f12, f7, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x15, 0xb965ae83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xcd05fa6f # load x3 with value 0xcd05fa6f
sw x3, 0(x2) # store 0xcd05fa6f in memory
flw f21, 0(x2) # load 0xcd05fa6f from memory into f21
fnmsub.s f15, f17, f3, f21, dyn # perform operation
fnmsub.s f15, f17, f3, f21, rdn # perform operation
fnmsub.s f15, f17, f3, f21, rmm # perform operation
fnmsub.s f15, f17, f3, f21, rne # perform operation
fnmsub.s f15, f17, f3, f21, rtz # perform operation
fnmsub.s f15, f17, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f17, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x5, 0x41f04b72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xf8d4dfa6 # load x3 with value 0xf8d4dfa6
sw x3, 0(x2) # store 0xf8d4dfa6 in memory
flw f22, 0(x2) # load 0xf8d4dfa6 from memory into f22
fnmsub.s f5, f15, f11, f22, dyn # perform operation
fnmsub.s f5, f15, f11, f22, rdn # perform operation
fnmsub.s f5, f15, f11, f22, rmm # perform operation
fnmsub.s f5, f15, f11, f22, rne # perform operation
fnmsub.s f5, f15, f11, f22, rtz # perform operation
fnmsub.s f5, f15, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f15, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x23, 0x6970b8d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x4047a7c7 # load x3 with value 0x4047a7c7
sw x3, 0(x2) # store 0x4047a7c7 in memory
flw f12, 0(x2) # load 0x4047a7c7 from memory into f12
fnmsub.s f23, f27, f15, f12, dyn # perform operation
fnmsub.s f23, f27, f15, f12, rdn # perform operation
fnmsub.s f23, f27, f15, f12, rmm # perform operation
fnmsub.s f23, f27, f15, f12, rne # perform operation
fnmsub.s f23, f27, f15, f12, rtz # perform operation
fnmsub.s f23, f27, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f27, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f27, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x2, 0xc9a56988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x89493bf0 # load x3 with value 0x89493bf0
sw x3, 0(x2) # store 0x89493bf0 in memory
flw f20, 0(x2) # load 0x89493bf0 from memory into f20
fnmsub.s f2, f27, f3, f20, dyn # perform operation
fnmsub.s f2, f27, f3, f20, rdn # perform operation
fnmsub.s f2, f27, f3, f20, rmm # perform operation
fnmsub.s f2, f27, f3, f20, rne # perform operation
fnmsub.s f2, f27, f3, f20, rtz # perform operation
fnmsub.s f2, f27, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f27, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f27, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f27, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f27, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f27, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x20, 0x552e9e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0xe8c2f155 # load x3 with value 0xe8c2f155
sw x3, 0(x2) # store 0xe8c2f155 in memory
flw f2, 0(x2) # load 0xe8c2f155 from memory into f2
fnmsub.s f20, f29, f13, f2, dyn # perform operation
fnmsub.s f20, f29, f13, f2, rdn # perform operation
fnmsub.s f20, f29, f13, f2, rmm # perform operation
fnmsub.s f20, f29, f13, f2, rne # perform operation
fnmsub.s f20, f29, f13, f2, rtz # perform operation
fnmsub.s f20, f29, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f29, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x27, 0x18492fa9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x5a4eb0e3 # load x3 with value 0x5a4eb0e3
sw x3, 0(x2) # store 0x5a4eb0e3 in memory
flw f2, 0(x2) # load 0x5a4eb0e3 from memory into f2
fnmsub.s f27, f3, f13, f2, dyn # perform operation
fnmsub.s f27, f3, f13, f2, rdn # perform operation
fnmsub.s f27, f3, f13, f2, rmm # perform operation
fnmsub.s f27, f3, f13, f2, rne # perform operation
fnmsub.s f27, f3, f13, f2, rtz # perform operation
fnmsub.s f27, f3, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x19, 0x98211099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xb705d891 # load x3 with value 0xb705d891
sw x3, 0(x2) # store 0xb705d891 in memory
flw f17, 0(x2) # load 0xb705d891 from memory into f17
fnmsub.s f19, f14, f7, f17, dyn # perform operation
fnmsub.s f19, f14, f7, f17, rdn # perform operation
fnmsub.s f19, f14, f7, f17, rmm # perform operation
fnmsub.s f19, f14, f7, f17, rne # perform operation
fnmsub.s f19, f14, f7, f17, rtz # perform operation
fnmsub.s f19, f14, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f14, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x30, 0x9155f0a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x27415d96 # load x3 with value 0x27415d96
sw x3, 0(x2) # store 0x27415d96 in memory
flw f24, 0(x2) # load 0x27415d96 from memory into f24
fnmsub.s f30, f19, f23, f24, dyn # perform operation
fnmsub.s f30, f19, f23, f24, rdn # perform operation
fnmsub.s f30, f19, f23, f24, rmm # perform operation
fnmsub.s f30, f19, f23, f24, rne # perform operation
fnmsub.s f30, f19, f23, f24, rtz # perform operation
fnmsub.s f30, f19, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x23, 0xecea2ed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0xb29f3bf0 # load x3 with value 0xb29f3bf0
sw x3, 0(x2) # store 0xb29f3bf0 in memory
flw f17, 0(x2) # load 0xb29f3bf0 from memory into f17
fnmsub.s f23, f6, f20, f17, dyn # perform operation
fnmsub.s f23, f6, f20, f17, rdn # perform operation
fnmsub.s f23, f6, f20, f17, rmm # perform operation
fnmsub.s f23, f6, f20, f17, rne # perform operation
fnmsub.s f23, f6, f20, f17, rtz # perform operation
fnmsub.s f23, f6, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x13, 0xaa82ca06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x6d6903de # load x3 with value 0x6d6903de
sw x3, 0(x2) # store 0x6d6903de in memory
flw f9, 0(x2) # load 0x6d6903de from memory into f9
fnmsub.s f13, f10, f5, f9, dyn # perform operation
fnmsub.s f13, f10, f5, f9, rdn # perform operation
fnmsub.s f13, f10, f5, f9, rmm # perform operation
fnmsub.s f13, f10, f5, f9, rne # perform operation
fnmsub.s f13, f10, f5, f9, rtz # perform operation
fnmsub.s f13, f10, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f10, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x15, 0x9eefc067 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x478237b0 # load x3 with value 0x478237b0
sw x3, 0(x2) # store 0x478237b0 in memory
flw f16, 0(x2) # load 0x478237b0 from memory into f16
fnmsub.s f15, f30, f19, f16, dyn # perform operation
fnmsub.s f15, f30, f19, f16, rdn # perform operation
fnmsub.s f15, f30, f19, f16, rmm # perform operation
fnmsub.s f15, f30, f19, f16, rne # perform operation
fnmsub.s f15, f30, f19, f16, rtz # perform operation
fnmsub.s f15, f30, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x28, 0xd6d4065e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xa172007c # load x3 with value 0xa172007c
sw x3, 0(x2) # store 0xa172007c in memory
flw f1, 0(x2) # load 0xa172007c from memory into f1
fnmsub.s f28, f5, f14, f1, dyn # perform operation
fnmsub.s f28, f5, f14, f1, rdn # perform operation
fnmsub.s f28, f5, f14, f1, rmm # perform operation
fnmsub.s f28, f5, f14, f1, rne # perform operation
fnmsub.s f28, f5, f14, f1, rtz # perform operation
fnmsub.s f28, f5, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f5, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f5, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f5, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f5, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f5, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x6, 0x3103a55e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xf31d573d # load x3 with value 0xf31d573d
sw x3, 0(x2) # store 0xf31d573d in memory
flw f8, 0(x2) # load 0xf31d573d from memory into f8
fnmsub.s f6, f30, f5, f8, dyn # perform operation
fnmsub.s f6, f30, f5, f8, rdn # perform operation
fnmsub.s f6, f30, f5, f8, rmm # perform operation
fnmsub.s f6, f30, f5, f8, rne # perform operation
fnmsub.s f6, f30, f5, f8, rtz # perform operation
fnmsub.s f6, f30, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x19, 0x2f9f98d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x0d3a0936 # load x3 with value 0x0d3a0936
sw x3, 0(x2) # store 0x0d3a0936 in memory
flw f30, 0(x2) # load 0x0d3a0936 from memory into f30
fnmsub.s f19, f5, f11, f30, dyn # perform operation
fnmsub.s f19, f5, f11, f30, rdn # perform operation
fnmsub.s f19, f5, f11, f30, rmm # perform operation
fnmsub.s f19, f5, f11, f30, rne # perform operation
fnmsub.s f19, f5, f11, f30, rtz # perform operation
fnmsub.s f19, f5, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x7, 0x58b51b65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0xadfc0404 # load x3 with value 0xadfc0404
sw x3, 0(x2) # store 0xadfc0404 in memory
flw f21, 0(x2) # load 0xadfc0404 from memory into f21
fnmsub.s f7, f30, f10, f21, dyn # perform operation
fnmsub.s f7, f30, f10, f21, rdn # perform operation
fnmsub.s f7, f30, f10, f21, rmm # perform operation
fnmsub.s f7, f30, f10, f21, rne # perform operation
fnmsub.s f7, f30, f10, f21, rtz # perform operation
fnmsub.s f7, f30, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x10, 0xc24aba6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x876e4413 # load x3 with value 0x876e4413
sw x3, 0(x2) # store 0x876e4413 in memory
flw f6, 0(x2) # load 0x876e4413 from memory into f6
fnmsub.s f10, f28, f25, f6, dyn # perform operation
fnmsub.s f10, f28, f25, f6, rdn # perform operation
fnmsub.s f10, f28, f25, f6, rmm # perform operation
fnmsub.s f10, f28, f25, f6, rne # perform operation
fnmsub.s f10, f28, f25, f6, rtz # perform operation
fnmsub.s f10, f28, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f28, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x15, 0xb6b64280 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x9be32fca # load x3 with value 0x9be32fca
sw x3, 0(x2) # store 0x9be32fca in memory
flw f5, 0(x2) # load 0x9be32fca from memory into f5
fnmsub.s f15, f23, f18, f5, dyn # perform operation
fnmsub.s f15, f23, f18, f5, rdn # perform operation
fnmsub.s f15, f23, f18, f5, rmm # perform operation
fnmsub.s f15, f23, f18, f5, rne # perform operation
fnmsub.s f15, f23, f18, f5, rtz # perform operation
fnmsub.s f15, f23, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x20, 0x50d37f07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x8f1d9df4 # load x3 with value 0x8f1d9df4
sw x3, 0(x2) # store 0x8f1d9df4 in memory
flw f17, 0(x2) # load 0x8f1d9df4 from memory into f17
fnmsub.s f20, f22, f4, f17, dyn # perform operation
fnmsub.s f20, f22, f4, f17, rdn # perform operation
fnmsub.s f20, f22, f4, f17, rmm # perform operation
fnmsub.s f20, f22, f4, f17, rne # perform operation
fnmsub.s f20, f22, f4, f17, rtz # perform operation
fnmsub.s f20, f22, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x18, 0xcc30c99d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xd8ff9571 # load x3 with value 0xd8ff9571
sw x3, 0(x2) # store 0xd8ff9571 in memory
flw f19, 0(x2) # load 0xd8ff9571 from memory into f19
fnmsub.s f18, f11, f8, f19, dyn # perform operation
fnmsub.s f18, f11, f8, f19, rdn # perform operation
fnmsub.s f18, f11, f8, f19, rmm # perform operation
fnmsub.s f18, f11, f8, f19, rne # perform operation
fnmsub.s f18, f11, f8, f19, rtz # perform operation
fnmsub.s f18, f11, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x4, 0x95e34e1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xef19e24f # load x3 with value 0xef19e24f
sw x3, 0(x2) # store 0xef19e24f in memory
flw f24, 0(x2) # load 0xef19e24f from memory into f24
fnmsub.s f4, f12, f5, f24, dyn # perform operation
fnmsub.s f4, f12, f5, f24, rdn # perform operation
fnmsub.s f4, f12, f5, f24, rmm # perform operation
fnmsub.s f4, f12, f5, f24, rne # perform operation
fnmsub.s f4, f12, f5, f24, rtz # perform operation
fnmsub.s f4, f12, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f12, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x31, 0x7037c4b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xaecc5017 # load x3 with value 0xaecc5017
sw x3, 0(x2) # store 0xaecc5017 in memory
flw f3, 0(x2) # load 0xaecc5017 from memory into f3
fnmsub.s f31, f11, f15, f3, dyn # perform operation
fnmsub.s f31, f11, f15, f3, rdn # perform operation
fnmsub.s f31, f11, f15, f3, rmm # perform operation
fnmsub.s f31, f11, f15, f3, rne # perform operation
fnmsub.s f31, f11, f15, f3, rtz # perform operation
fnmsub.s f31, f11, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x22, 0xf95e2951 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x36d78484 # load x3 with value 0x36d78484
sw x3, 0(x2) # store 0x36d78484 in memory
flw f31, 0(x2) # load 0x36d78484 from memory into f31
fnmsub.s f22, f6, f15, f31, dyn # perform operation
fnmsub.s f22, f6, f15, f31, rdn # perform operation
fnmsub.s f22, f6, f15, f31, rmm # perform operation
fnmsub.s f22, f6, f15, f31, rne # perform operation
fnmsub.s f22, f6, f15, f31, rtz # perform operation
fnmsub.s f22, f6, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x3, 0x03679f55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xb0066404 # load x3 with value 0xb0066404
sw x3, 0(x2) # store 0xb0066404 in memory
flw f23, 0(x2) # load 0xb0066404 from memory into f23
fnmsub.s f3, f27, f14, f23, dyn # perform operation
fnmsub.s f3, f27, f14, f23, rdn # perform operation
fnmsub.s f3, f27, f14, f23, rmm # perform operation
fnmsub.s f3, f27, f14, f23, rne # perform operation
fnmsub.s f3, f27, f14, f23, rtz # perform operation
fnmsub.s f3, f27, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x21, 0x64e5332c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0xc1a665b0 # load x3 with value 0xc1a665b0
sw x3, 0(x2) # store 0xc1a665b0 in memory
flw f24, 0(x2) # load 0xc1a665b0 from memory into f24
fnmsub.s f21, f11, f26, f24, dyn # perform operation
fnmsub.s f21, f11, f26, f24, rdn # perform operation
fnmsub.s f21, f11, f26, f24, rmm # perform operation
fnmsub.s f21, f11, f26, f24, rne # perform operation
fnmsub.s f21, f11, f26, f24, rtz # perform operation
fnmsub.s f21, f11, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x22, 0xee4e261f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x05a91e09 # load x3 with value 0x05a91e09
sw x3, 0(x2) # store 0x05a91e09 in memory
flw f26, 0(x2) # load 0x05a91e09 from memory into f26
fnmsub.s f22, f25, f23, f26, dyn # perform operation
fnmsub.s f22, f25, f23, f26, rdn # perform operation
fnmsub.s f22, f25, f23, f26, rmm # perform operation
fnmsub.s f22, f25, f23, f26, rne # perform operation
fnmsub.s f22, f25, f23, f26, rtz # perform operation
fnmsub.s f22, f25, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x12, 0xcfa4a75c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xbb1ef5f5 # load x3 with value 0xbb1ef5f5
sw x3, 0(x2) # store 0xbb1ef5f5 in memory
flw f25, 0(x2) # load 0xbb1ef5f5 from memory into f25
fnmsub.s f12, f15, f20, f25, dyn # perform operation
fnmsub.s f12, f15, f20, f25, rdn # perform operation
fnmsub.s f12, f15, f20, f25, rmm # perform operation
fnmsub.s f12, f15, f20, f25, rne # perform operation
fnmsub.s f12, f15, f20, f25, rtz # perform operation
fnmsub.s f12, f15, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x22, 0x02cf630d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xc5eb4687 # load x3 with value 0xc5eb4687
sw x3, 0(x2) # store 0xc5eb4687 in memory
flw f21, 0(x2) # load 0xc5eb4687 from memory into f21
fnmsub.s f22, f8, f3, f21, dyn # perform operation
fnmsub.s f22, f8, f3, f21, rdn # perform operation
fnmsub.s f22, f8, f3, f21, rmm # perform operation
fnmsub.s f22, f8, f3, f21, rne # perform operation
fnmsub.s f22, f8, f3, f21, rtz # perform operation
fnmsub.s f22, f8, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f8, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x3, 0x48ea8290 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x81bc0239 # load x3 with value 0x81bc0239
sw x3, 0(x2) # store 0x81bc0239 in memory
flw f27, 0(x2) # load 0x81bc0239 from memory into f27
fnmsub.s f3, f14, f29, f27, dyn # perform operation
fnmsub.s f3, f14, f29, f27, rdn # perform operation
fnmsub.s f3, f14, f29, f27, rmm # perform operation
fnmsub.s f3, f14, f29, f27, rne # perform operation
fnmsub.s f3, f14, f29, f27, rtz # perform operation
fnmsub.s f3, f14, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x17, 0xde84feaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x8d92794f # load x3 with value 0x8d92794f
sw x3, 0(x2) # store 0x8d92794f in memory
flw f31, 0(x2) # load 0x8d92794f from memory into f31
fnmsub.s f17, f23, f20, f31, dyn # perform operation
fnmsub.s f17, f23, f20, f31, rdn # perform operation
fnmsub.s f17, f23, f20, f31, rmm # perform operation
fnmsub.s f17, f23, f20, f31, rne # perform operation
fnmsub.s f17, f23, f20, f31, rtz # perform operation
fnmsub.s f17, f23, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f23, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f23, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f23, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f23, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f23, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x11, 0x8dd5454b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xfc819807 # load x3 with value 0xfc819807
sw x3, 0(x2) # store 0xfc819807 in memory
flw f2, 0(x2) # load 0xfc819807 from memory into f2
fnmsub.s f11, f28, f25, f2, dyn # perform operation
fnmsub.s f11, f28, f25, f2, rdn # perform operation
fnmsub.s f11, f28, f25, f2, rmm # perform operation
fnmsub.s f11, f28, f25, f2, rne # perform operation
fnmsub.s f11, f28, f25, f2, rtz # perform operation
fnmsub.s f11, f28, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f28, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x10, 0xceed31b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x8f634a71 # load x3 with value 0x8f634a71
sw x3, 0(x2) # store 0x8f634a71 in memory
flw f8, 0(x2) # load 0x8f634a71 from memory into f8
fnmsub.s f10, f19, f1, f8, dyn # perform operation
fnmsub.s f10, f19, f1, f8, rdn # perform operation
fnmsub.s f10, f19, f1, f8, rmm # perform operation
fnmsub.s f10, f19, f1, f8, rne # perform operation
fnmsub.s f10, f19, f1, f8, rtz # perform operation
fnmsub.s f10, f19, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x11, 0xd4c36fd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xbeb5b030 # load x3 with value 0xbeb5b030
sw x3, 0(x2) # store 0xbeb5b030 in memory
flw f5, 0(x2) # load 0xbeb5b030 from memory into f5
fnmsub.s f11, f2, f19, f5, dyn # perform operation
fnmsub.s f11, f2, f19, f5, rdn # perform operation
fnmsub.s f11, f2, f19, f5, rmm # perform operation
fnmsub.s f11, f2, f19, f5, rne # perform operation
fnmsub.s f11, f2, f19, f5, rtz # perform operation
fnmsub.s f11, f2, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x15, 0x3b2a7119 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xce9a1021 # load x3 with value 0xce9a1021
sw x3, 0(x2) # store 0xce9a1021 in memory
flw f23, 0(x2) # load 0xce9a1021 from memory into f23
fnmsub.s f15, f12, f10, f23, dyn # perform operation
fnmsub.s f15, f12, f10, f23, rdn # perform operation
fnmsub.s f15, f12, f10, f23, rmm # perform operation
fnmsub.s f15, f12, f10, f23, rne # perform operation
fnmsub.s f15, f12, f10, f23, rtz # perform operation
fnmsub.s f15, f12, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x17, 0x59392b58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x9127f9e2 # load x3 with value 0x9127f9e2
sw x3, 0(x2) # store 0x9127f9e2 in memory
flw f31, 0(x2) # load 0x9127f9e2 from memory into f31
fnmsub.s f17, f20, f15, f31, dyn # perform operation
fnmsub.s f17, f20, f15, f31, rdn # perform operation
fnmsub.s f17, f20, f15, f31, rmm # perform operation
fnmsub.s f17, f20, f15, f31, rne # perform operation
fnmsub.s f17, f20, f15, f31, rtz # perform operation
fnmsub.s f17, f20, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f20, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x16, 0xf1311a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0xc61dacda # load x3 with value 0xc61dacda
sw x3, 0(x2) # store 0xc61dacda in memory
flw f24, 0(x2) # load 0xc61dacda from memory into f24
fnmsub.s f16, f27, f10, f24, dyn # perform operation
fnmsub.s f16, f27, f10, f24, rdn # perform operation
fnmsub.s f16, f27, f10, f24, rmm # perform operation
fnmsub.s f16, f27, f10, f24, rne # perform operation
fnmsub.s f16, f27, f10, f24, rtz # perform operation
fnmsub.s f16, f27, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x13, 0x6cae08e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x74792c1a # load x3 with value 0x74792c1a
sw x3, 0(x2) # store 0x74792c1a in memory
flw f16, 0(x2) # load 0x74792c1a from memory into f16
fnmsub.s f13, f19, f29, f16, dyn # perform operation
fnmsub.s f13, f19, f29, f16, rdn # perform operation
fnmsub.s f13, f19, f29, f16, rmm # perform operation
fnmsub.s f13, f19, f29, f16, rne # perform operation
fnmsub.s f13, f19, f29, f16, rtz # perform operation
fnmsub.s f13, f19, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f19, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x29, 0x0e554d6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xbfc8aa77 # load x3 with value 0xbfc8aa77
sw x3, 0(x2) # store 0xbfc8aa77 in memory
flw f10, 0(x2) # load 0xbfc8aa77 from memory into f10
fnmsub.s f29, f26, f9, f10, dyn # perform operation
fnmsub.s f29, f26, f9, f10, rdn # perform operation
fnmsub.s f29, f26, f9, f10, rmm # perform operation
fnmsub.s f29, f26, f9, f10, rne # perform operation
fnmsub.s f29, f26, f9, f10, rtz # perform operation
fnmsub.s f29, f26, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f26, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x19, 0x36edc7b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0xf9bb1417 # load x3 with value 0xf9bb1417
sw x3, 0(x2) # store 0xf9bb1417 in memory
flw f23, 0(x2) # load 0xf9bb1417 from memory into f23
fnmsub.s f19, f20, f22, f23, dyn # perform operation
fnmsub.s f19, f20, f22, f23, rdn # perform operation
fnmsub.s f19, f20, f22, f23, rmm # perform operation
fnmsub.s f19, f20, f22, f23, rne # perform operation
fnmsub.s f19, f20, f22, f23, rtz # perform operation
fnmsub.s f19, f20, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f20, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x20, 0x4ee3f92a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x8c7c3c67 # load x3 with value 0x8c7c3c67
sw x3, 0(x2) # store 0x8c7c3c67 in memory
flw f31, 0(x2) # load 0x8c7c3c67 from memory into f31
fnmsub.s f20, f8, f7, f31, dyn # perform operation
fnmsub.s f20, f8, f7, f31, rdn # perform operation
fnmsub.s f20, f8, f7, f31, rmm # perform operation
fnmsub.s f20, f8, f7, f31, rne # perform operation
fnmsub.s f20, f8, f7, f31, rtz # perform operation
fnmsub.s f20, f8, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x7, 0xdb365b4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x1bfd6aa4 # load x3 with value 0x1bfd6aa4
sw x3, 0(x2) # store 0x1bfd6aa4 in memory
flw f18, 0(x2) # load 0x1bfd6aa4 from memory into f18
fnmsub.s f7, f14, f9, f18, dyn # perform operation
fnmsub.s f7, f14, f9, f18, rdn # perform operation
fnmsub.s f7, f14, f9, f18, rmm # perform operation
fnmsub.s f7, f14, f9, f18, rne # perform operation
fnmsub.s f7, f14, f9, f18, rtz # perform operation
fnmsub.s f7, f14, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x1, 0x9297f58e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x5dfdc3c4 # load x3 with value 0x5dfdc3c4
sw x3, 0(x2) # store 0x5dfdc3c4 in memory
flw f19, 0(x2) # load 0x5dfdc3c4 from memory into f19
fnmsub.s f1, f31, f24, f19, dyn # perform operation
fnmsub.s f1, f31, f24, f19, rdn # perform operation
fnmsub.s f1, f31, f24, f19, rmm # perform operation
fnmsub.s f1, f31, f24, f19, rne # perform operation
fnmsub.s f1, f31, f24, f19, rtz # perform operation
fnmsub.s f1, f31, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x10, 0x829ace4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x2726421a # load x3 with value 0x2726421a
sw x3, 0(x2) # store 0x2726421a in memory
flw f4, 0(x2) # load 0x2726421a from memory into f4
fnmsub.s f10, f21, f26, f4, dyn # perform operation
fnmsub.s f10, f21, f26, f4, rdn # perform operation
fnmsub.s f10, f21, f26, f4, rmm # perform operation
fnmsub.s f10, f21, f26, f4, rne # perform operation
fnmsub.s f10, f21, f26, f4, rtz # perform operation
fnmsub.s f10, f21, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f21, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f21, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x13, 0x2bb4694f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xe9089f68 # load x3 with value 0xe9089f68
sw x3, 0(x2) # store 0xe9089f68 in memory
flw f27, 0(x2) # load 0xe9089f68 from memory into f27
fnmsub.s f13, f3, f5, f27, dyn # perform operation
fnmsub.s f13, f3, f5, f27, rdn # perform operation
fnmsub.s f13, f3, f5, f27, rmm # perform operation
fnmsub.s f13, f3, f5, f27, rne # perform operation
fnmsub.s f13, f3, f5, f27, rtz # perform operation
fnmsub.s f13, f3, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x27, 0x86995688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0xee8845bd # load x3 with value 0xee8845bd
sw x3, 0(x2) # store 0xee8845bd in memory
flw f19, 0(x2) # load 0xee8845bd from memory into f19
fnmsub.s f27, f24, f9, f19, dyn # perform operation
fnmsub.s f27, f24, f9, f19, rdn # perform operation
fnmsub.s f27, f24, f9, f19, rmm # perform operation
fnmsub.s f27, f24, f9, f19, rne # perform operation
fnmsub.s f27, f24, f9, f19, rtz # perform operation
fnmsub.s f27, f24, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x6, 0xf75e4d15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x321034a9 # load x3 with value 0x321034a9
sw x3, 0(x2) # store 0x321034a9 in memory
flw f18, 0(x2) # load 0x321034a9 from memory into f18
fnmsub.s f6, f16, f29, f18, dyn # perform operation
fnmsub.s f6, f16, f29, f18, rdn # perform operation
fnmsub.s f6, f16, f29, f18, rmm # perform operation
fnmsub.s f6, f16, f29, f18, rne # perform operation
fnmsub.s f6, f16, f29, f18, rtz # perform operation
fnmsub.s f6, f16, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f16, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x16, 0xaee91feb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xe5c26819 # load x3 with value 0xe5c26819
sw x3, 0(x2) # store 0xe5c26819 in memory
flw f14, 0(x2) # load 0xe5c26819 from memory into f14
fnmsub.s f16, f21, f4, f14, dyn # perform operation
fnmsub.s f16, f21, f4, f14, rdn # perform operation
fnmsub.s f16, f21, f4, f14, rmm # perform operation
fnmsub.s f16, f21, f4, f14, rne # perform operation
fnmsub.s f16, f21, f4, f14, rtz # perform operation
fnmsub.s f16, f21, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f21, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x20, 0x274eeb89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x8b4d3c7f # load x3 with value 0x8b4d3c7f
sw x3, 0(x2) # store 0x8b4d3c7f in memory
flw f29, 0(x2) # load 0x8b4d3c7f from memory into f29
fnmsub.s f20, f8, f11, f29, dyn # perform operation
fnmsub.s f20, f8, f11, f29, rdn # perform operation
fnmsub.s f20, f8, f11, f29, rmm # perform operation
fnmsub.s f20, f8, f11, f29, rne # perform operation
fnmsub.s f20, f8, f11, f29, rtz # perform operation
fnmsub.s f20, f8, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x25, 0x9a943bae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xde09e089 # load x3 with value 0xde09e089
sw x3, 0(x2) # store 0xde09e089 in memory
flw f20, 0(x2) # load 0xde09e089 from memory into f20
fnmsub.s f25, f14, f24, f20, dyn # perform operation
fnmsub.s f25, f14, f24, f20, rdn # perform operation
fnmsub.s f25, f14, f24, f20, rmm # perform operation
fnmsub.s f25, f14, f24, f20, rne # perform operation
fnmsub.s f25, f14, f24, f20, rtz # perform operation
fnmsub.s f25, f14, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f14, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x30, 0x33275277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0xecf2323b # load x3 with value 0xecf2323b
sw x3, 0(x2) # store 0xecf2323b in memory
flw f20, 0(x2) # load 0xecf2323b from memory into f20
fnmsub.s f30, f4, f19, f20, dyn # perform operation
fnmsub.s f30, f4, f19, f20, rdn # perform operation
fnmsub.s f30, f4, f19, f20, rmm # perform operation
fnmsub.s f30, f4, f19, f20, rne # perform operation
fnmsub.s f30, f4, f19, f20, rtz # perform operation
fnmsub.s f30, f4, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f4, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f4, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f4, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f4, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f4, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x22, 0x33723582 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x21b48cfd # load x3 with value 0x21b48cfd
sw x3, 0(x2) # store 0x21b48cfd in memory
flw f25, 0(x2) # load 0x21b48cfd from memory into f25
fnmsub.s f22, f30, f19, f25, dyn # perform operation
fnmsub.s f22, f30, f19, f25, rdn # perform operation
fnmsub.s f22, f30, f19, f25, rmm # perform operation
fnmsub.s f22, f30, f19, f25, rne # perform operation
fnmsub.s f22, f30, f19, f25, rtz # perform operation
fnmsub.s f22, f30, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x30, 0x928515c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7f496560 # load x3 with value 0x7f496560
sw x3, 0(x2) # store 0x7f496560 in memory
flw f3, 0(x2) # load 0x7f496560 from memory into f3
fnmsub.s f30, f18, f10, f3, dyn # perform operation
fnmsub.s f30, f18, f10, f3, rdn # perform operation
fnmsub.s f30, f18, f10, f3, rmm # perform operation
fnmsub.s f30, f18, f10, f3, rne # perform operation
fnmsub.s f30, f18, f10, f3, rtz # perform operation
fnmsub.s f30, f18, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x30, 0xab37289c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x32e219d6 # load x3 with value 0x32e219d6
sw x3, 0(x2) # store 0x32e219d6 in memory
flw f29, 0(x2) # load 0x32e219d6 from memory into f29
fnmsub.s f30, f7, f19, f29, dyn # perform operation
fnmsub.s f30, f7, f19, f29, rdn # perform operation
fnmsub.s f30, f7, f19, f29, rmm # perform operation
fnmsub.s f30, f7, f19, f29, rne # perform operation
fnmsub.s f30, f7, f19, f29, rtz # perform operation
fnmsub.s f30, f7, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x22, 0x4ec1fd42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x0cc52dd2 # load x3 with value 0x0cc52dd2
sw x3, 0(x2) # store 0x0cc52dd2 in memory
flw f30, 0(x2) # load 0x0cc52dd2 from memory into f30
fnmsub.s f22, f16, f20, f30, dyn # perform operation
fnmsub.s f22, f16, f20, f30, rdn # perform operation
fnmsub.s f22, f16, f20, f30, rmm # perform operation
fnmsub.s f22, f16, f20, f30, rne # perform operation
fnmsub.s f22, f16, f20, f30, rtz # perform operation
fnmsub.s f22, f16, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x9, 0x45971881 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x4df60ded # load x3 with value 0x4df60ded
sw x3, 0(x2) # store 0x4df60ded in memory
flw f24, 0(x2) # load 0x4df60ded from memory into f24
fnmsub.s f9, f10, f6, f24, dyn # perform operation
fnmsub.s f9, f10, f6, f24, rdn # perform operation
fnmsub.s f9, f10, f6, f24, rmm # perform operation
fnmsub.s f9, f10, f6, f24, rne # perform operation
fnmsub.s f9, f10, f6, f24, rtz # perform operation
fnmsub.s f9, f10, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f10, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x22, 0xd956570d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x519ef031 # load x3 with value 0x519ef031
sw x3, 0(x2) # store 0x519ef031 in memory
flw f14, 0(x2) # load 0x519ef031 from memory into f14
fnmsub.s f22, f19, f20, f14, dyn # perform operation
fnmsub.s f22, f19, f20, f14, rdn # perform operation
fnmsub.s f22, f19, f20, f14, rmm # perform operation
fnmsub.s f22, f19, f20, f14, rne # perform operation
fnmsub.s f22, f19, f20, f14, rtz # perform operation
fnmsub.s f22, f19, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x17, 0x7d6fa1ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x07574a2e # load x3 with value 0x07574a2e
sw x3, 0(x2) # store 0x07574a2e in memory
flw f24, 0(x2) # load 0x07574a2e from memory into f24
fnmsub.s f17, f30, f28, f24, dyn # perform operation
fnmsub.s f17, f30, f28, f24, rdn # perform operation
fnmsub.s f17, f30, f28, f24, rmm # perform operation
fnmsub.s f17, f30, f28, f24, rne # perform operation
fnmsub.s f17, f30, f28, f24, rtz # perform operation
fnmsub.s f17, f30, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f30, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x5, 0xf8ecac10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0xcf647f64 # load x3 with value 0xcf647f64
sw x3, 0(x2) # store 0xcf647f64 in memory
flw f27, 0(x2) # load 0xcf647f64 from memory into f27
fnmsub.s f5, f13, f18, f27, dyn # perform operation
fnmsub.s f5, f13, f18, f27, rdn # perform operation
fnmsub.s f5, f13, f18, f27, rmm # perform operation
fnmsub.s f5, f13, f18, f27, rne # perform operation
fnmsub.s f5, f13, f18, f27, rtz # perform operation
fnmsub.s f5, f13, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f13, f18, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x16, 0xbeda044c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x7ee2f166 # load x3 with value 0x7ee2f166
sw x3, 0(x2) # store 0x7ee2f166 in memory
flw f30, 0(x2) # load 0x7ee2f166 from memory into f30
fnmsub.s f16, f8, f19, f30, dyn # perform operation
fnmsub.s f16, f8, f19, f30, rdn # perform operation
fnmsub.s f16, f8, f19, f30, rmm # perform operation
fnmsub.s f16, f8, f19, f30, rne # perform operation
fnmsub.s f16, f8, f19, f30, rtz # perform operation
fnmsub.s f16, f8, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x10, 0x7a9a1ee3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x188aa047 # load x3 with value 0x188aa047
sw x3, 0(x2) # store 0x188aa047 in memory
flw f25, 0(x2) # load 0x188aa047 from memory into f25
fnmsub.s f10, f13, f17, f25, dyn # perform operation
fnmsub.s f10, f13, f17, f25, rdn # perform operation
fnmsub.s f10, f13, f17, f25, rmm # perform operation
fnmsub.s f10, f13, f17, f25, rne # perform operation
fnmsub.s f10, f13, f17, f25, rtz # perform operation
fnmsub.s f10, f13, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f13, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f13, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x30, 0x46a36193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x10b5eea5 # load x3 with value 0x10b5eea5
sw x3, 0(x2) # store 0x10b5eea5 in memory
flw f10, 0(x2) # load 0x10b5eea5 from memory into f10
fnmsub.s f30, f12, f29, f10, dyn # perform operation
fnmsub.s f30, f12, f29, f10, rdn # perform operation
fnmsub.s f30, f12, f29, f10, rmm # perform operation
fnmsub.s f30, f12, f29, f10, rne # perform operation
fnmsub.s f30, f12, f29, f10, rtz # perform operation
fnmsub.s f30, f12, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x13, 0x219af776 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xa3008251 # load x3 with value 0xa3008251
sw x3, 0(x2) # store 0xa3008251 in memory
flw f8, 0(x2) # load 0xa3008251 from memory into f8
fnmsub.s f13, f15, f21, f8, dyn # perform operation
fnmsub.s f13, f15, f21, f8, rdn # perform operation
fnmsub.s f13, f15, f21, f8, rmm # perform operation
fnmsub.s f13, f15, f21, f8, rne # perform operation
fnmsub.s f13, f15, f21, f8, rtz # perform operation
fnmsub.s f13, f15, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f15, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x24, 0xaef26de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x328c442b # load x3 with value 0x328c442b
sw x3, 0(x2) # store 0x328c442b in memory
flw f17, 0(x2) # load 0x328c442b from memory into f17
fnmsub.s f24, f20, f10, f17, dyn # perform operation
fnmsub.s f24, f20, f10, f17, rdn # perform operation
fnmsub.s f24, f20, f10, f17, rmm # perform operation
fnmsub.s f24, f20, f10, f17, rne # perform operation
fnmsub.s f24, f20, f10, f17, rtz # perform operation
fnmsub.s f24, f20, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f20, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x26, 0x2e3c3aa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x7eff4724 # load x3 with value 0x7eff4724
sw x3, 0(x2) # store 0x7eff4724 in memory
flw f25, 0(x2) # load 0x7eff4724 from memory into f25
fnmsub.s f26, f1, f8, f25, dyn # perform operation
fnmsub.s f26, f1, f8, f25, rdn # perform operation
fnmsub.s f26, f1, f8, f25, rmm # perform operation
fnmsub.s f26, f1, f8, f25, rne # perform operation
fnmsub.s f26, f1, f8, f25, rtz # perform operation
fnmsub.s f26, f1, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f1, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f1, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x7, 0xbd50e6e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x3cc91ab3 # load x3 with value 0x3cc91ab3
sw x3, 0(x2) # store 0x3cc91ab3 in memory
flw f16, 0(x2) # load 0x3cc91ab3 from memory into f16
fnmsub.s f7, f18, f22, f16, dyn # perform operation
fnmsub.s f7, f18, f22, f16, rdn # perform operation
fnmsub.s f7, f18, f22, f16, rmm # perform operation
fnmsub.s f7, f18, f22, f16, rne # perform operation
fnmsub.s f7, f18, f22, f16, rtz # perform operation
fnmsub.s f7, f18, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f18, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f18, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x28, 0x0d209f0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x81596f75 # load x3 with value 0x81596f75
sw x3, 0(x2) # store 0x81596f75 in memory
flw f5, 0(x2) # load 0x81596f75 from memory into f5
fnmsub.s f28, f24, f4, f5, dyn # perform operation
fnmsub.s f28, f24, f4, f5, rdn # perform operation
fnmsub.s f28, f24, f4, f5, rmm # perform operation
fnmsub.s f28, f24, f4, f5, rne # perform operation
fnmsub.s f28, f24, f4, f5, rtz # perform operation
fnmsub.s f28, f24, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f24, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f24, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f24, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f24, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f24, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x9, 0x4ae2a4d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x66e6a416 # load x3 with value 0x66e6a416
sw x3, 0(x2) # store 0x66e6a416 in memory
flw f10, 0(x2) # load 0x66e6a416 from memory into f10
fnmsub.s f9, f17, f11, f10, dyn # perform operation
fnmsub.s f9, f17, f11, f10, rdn # perform operation
fnmsub.s f9, f17, f11, f10, rmm # perform operation
fnmsub.s f9, f17, f11, f10, rne # perform operation
fnmsub.s f9, f17, f11, f10, rtz # perform operation
fnmsub.s f9, f17, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f17, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f17, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f17, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f17, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f17, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x21, 0x9473b1a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x63915402 # load x3 with value 0x63915402
sw x3, 0(x2) # store 0x63915402 in memory
flw f24, 0(x2) # load 0x63915402 from memory into f24
fnmsub.s f21, f7, f31, f24, dyn # perform operation
fnmsub.s f21, f7, f31, f24, rdn # perform operation
fnmsub.s f21, f7, f31, f24, rmm # perform operation
fnmsub.s f21, f7, f31, f24, rne # perform operation
fnmsub.s f21, f7, f31, f24, rtz # perform operation
fnmsub.s f21, f7, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x20, 0x37949edc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xfaf66c9c # load x3 with value 0xfaf66c9c
sw x3, 0(x2) # store 0xfaf66c9c in memory
flw f14, 0(x2) # load 0xfaf66c9c from memory into f14
fnmsub.s f20, f6, f19, f14, dyn # perform operation
fnmsub.s f20, f6, f19, f14, rdn # perform operation
fnmsub.s f20, f6, f19, f14, rmm # perform operation
fnmsub.s f20, f6, f19, f14, rne # perform operation
fnmsub.s f20, f6, f19, f14, rtz # perform operation
fnmsub.s f20, f6, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f6, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x6, 0x1c99eaad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0xcd5b4498 # load x3 with value 0xcd5b4498
sw x3, 0(x2) # store 0xcd5b4498 in memory
flw f21, 0(x2) # load 0xcd5b4498 from memory into f21
fnmsub.s f6, f24, f3, f21, dyn # perform operation
fnmsub.s f6, f24, f3, f21, rdn # perform operation
fnmsub.s f6, f24, f3, f21, rmm # perform operation
fnmsub.s f6, f24, f3, f21, rne # perform operation
fnmsub.s f6, f24, f3, f21, rtz # perform operation
fnmsub.s f6, f24, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x18, 0x36735567 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x014aa700 # load x3 with value 0x014aa700
sw x3, 0(x2) # store 0x014aa700 in memory
flw f14, 0(x2) # load 0x014aa700 from memory into f14
fnmsub.s f18, f23, f5, f14, dyn # perform operation
fnmsub.s f18, f23, f5, f14, rdn # perform operation
fnmsub.s f18, f23, f5, f14, rmm # perform operation
fnmsub.s f18, f23, f5, f14, rne # perform operation
fnmsub.s f18, f23, f5, f14, rtz # perform operation
fnmsub.s f18, f23, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f23, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x27, 0x76eb5ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x4fa81d3c # load x3 with value 0x4fa81d3c
sw x3, 0(x2) # store 0x4fa81d3c in memory
flw f12, 0(x2) # load 0x4fa81d3c from memory into f12
fnmsub.s f27, f23, f26, f12, dyn # perform operation
fnmsub.s f27, f23, f26, f12, rdn # perform operation
fnmsub.s f27, f23, f26, f12, rmm # perform operation
fnmsub.s f27, f23, f26, f12, rne # perform operation
fnmsub.s f27, f23, f26, f12, rtz # perform operation
fnmsub.s f27, f23, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x15, 0x891aa9da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x653e88c4 # load x3 with value 0x653e88c4
sw x3, 0(x2) # store 0x653e88c4 in memory
flw f22, 0(x2) # load 0x653e88c4 from memory into f22
fnmsub.s f15, f11, f23, f22, dyn # perform operation
fnmsub.s f15, f11, f23, f22, rdn # perform operation
fnmsub.s f15, f11, f23, f22, rmm # perform operation
fnmsub.s f15, f11, f23, f22, rne # perform operation
fnmsub.s f15, f11, f23, f22, rtz # perform operation
fnmsub.s f15, f11, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x21, 0xcf6b98a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0xa4ba5b7d # load x3 with value 0xa4ba5b7d
sw x3, 0(x2) # store 0xa4ba5b7d in memory
flw f14, 0(x2) # load 0xa4ba5b7d from memory into f14
fnmsub.s f21, f4, f22, f14, dyn # perform operation
fnmsub.s f21, f4, f22, f14, rdn # perform operation
fnmsub.s f21, f4, f22, f14, rmm # perform operation
fnmsub.s f21, f4, f22, f14, rne # perform operation
fnmsub.s f21, f4, f22, f14, rtz # perform operation
fnmsub.s f21, f4, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f4, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f4, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f4, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f4, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f4, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x27, 0xee8ce310 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x2a376b40 # load x3 with value 0x2a376b40
sw x3, 0(x2) # store 0x2a376b40 in memory
flw f16, 0(x2) # load 0x2a376b40 from memory into f16
fnmsub.s f27, f6, f29, f16, dyn # perform operation
fnmsub.s f27, f6, f29, f16, rdn # perform operation
fnmsub.s f27, f6, f29, f16, rmm # perform operation
fnmsub.s f27, f6, f29, f16, rne # perform operation
fnmsub.s f27, f6, f29, f16, rtz # perform operation
fnmsub.s f27, f6, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x17, 0xcc6cd396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x6644fedb # load x3 with value 0x6644fedb
sw x3, 0(x2) # store 0x6644fedb in memory
flw f4, 0(x2) # load 0x6644fedb from memory into f4
fnmsub.s f17, f22, f5, f4, dyn # perform operation
fnmsub.s f17, f22, f5, f4, rdn # perform operation
fnmsub.s f17, f22, f5, f4, rmm # perform operation
fnmsub.s f17, f22, f5, f4, rne # perform operation
fnmsub.s f17, f22, f5, f4, rtz # perform operation
fnmsub.s f17, f22, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f22, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f22, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f22, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f22, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f22, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x22, 0x139a2608 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0xa1b7261c # load x3 with value 0xa1b7261c
sw x3, 0(x2) # store 0xa1b7261c in memory
flw f11, 0(x2) # load 0xa1b7261c from memory into f11
fnmsub.s f22, f13, f9, f11, dyn # perform operation
fnmsub.s f22, f13, f9, f11, rdn # perform operation
fnmsub.s f22, f13, f9, f11, rmm # perform operation
fnmsub.s f22, f13, f9, f11, rne # perform operation
fnmsub.s f22, f13, f9, f11, rtz # perform operation
fnmsub.s f22, f13, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x1, 0xde14c9e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x8a73150c # load x3 with value 0x8a73150c
sw x3, 0(x2) # store 0x8a73150c in memory
flw f23, 0(x2) # load 0x8a73150c from memory into f23
fnmsub.s f1, f28, f25, f23, dyn # perform operation
fnmsub.s f1, f28, f25, f23, rdn # perform operation
fnmsub.s f1, f28, f25, f23, rmm # perform operation
fnmsub.s f1, f28, f25, f23, rne # perform operation
fnmsub.s f1, f28, f25, f23, rtz # perform operation
fnmsub.s f1, f28, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f28, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x24, 0xa697d597 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x4b99614c # load x3 with value 0x4b99614c
sw x3, 0(x2) # store 0x4b99614c in memory
flw f6, 0(x2) # load 0x4b99614c from memory into f6
fnmsub.s f24, f14, f4, f6, dyn # perform operation
fnmsub.s f24, f14, f4, f6, rdn # perform operation
fnmsub.s f24, f14, f4, f6, rmm # perform operation
fnmsub.s f24, f14, f4, f6, rne # perform operation
fnmsub.s f24, f14, f4, f6, rtz # perform operation
fnmsub.s f24, f14, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f14, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x11, 0x657dfb5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0xcace080a # load x3 with value 0xcace080a
sw x3, 0(x2) # store 0xcace080a in memory
flw f23, 0(x2) # load 0xcace080a from memory into f23
fnmsub.s f11, f30, f17, f23, dyn # perform operation
fnmsub.s f11, f30, f17, f23, rdn # perform operation
fnmsub.s f11, f30, f17, f23, rmm # perform operation
fnmsub.s f11, f30, f17, f23, rne # perform operation
fnmsub.s f11, f30, f17, f23, rtz # perform operation
fnmsub.s f11, f30, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f30, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x9, 0x7a30f160 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x49b26f53 # load x3 with value 0x49b26f53
sw x3, 0(x2) # store 0x49b26f53 in memory
flw f10, 0(x2) # load 0x49b26f53 from memory into f10
fnmsub.s f9, f25, f7, f10, dyn # perform operation
fnmsub.s f9, f25, f7, f10, rdn # perform operation
fnmsub.s f9, f25, f7, f10, rmm # perform operation
fnmsub.s f9, f25, f7, f10, rne # perform operation
fnmsub.s f9, f25, f7, f10, rtz # perform operation
fnmsub.s f9, f25, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x18, 0x002b6a33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x3567b476 # load x3 with value 0x3567b476
sw x3, 0(x2) # store 0x3567b476 in memory
flw f13, 0(x2) # load 0x3567b476 from memory into f13
fnmsub.s f18, f21, f30, f13, dyn # perform operation
fnmsub.s f18, f21, f30, f13, rdn # perform operation
fnmsub.s f18, f21, f30, f13, rmm # perform operation
fnmsub.s f18, f21, f30, f13, rne # perform operation
fnmsub.s f18, f21, f30, f13, rtz # perform operation
fnmsub.s f18, f21, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x15, 0x971aa200 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xe3c76f28 # load x3 with value 0xe3c76f28
sw x3, 0(x2) # store 0xe3c76f28 in memory
flw f8, 0(x2) # load 0xe3c76f28 from memory into f8
fnmsub.s f15, f4, f9, f8, dyn # perform operation
fnmsub.s f15, f4, f9, f8, rdn # perform operation
fnmsub.s f15, f4, f9, f8, rmm # perform operation
fnmsub.s f15, f4, f9, f8, rne # perform operation
fnmsub.s f15, f4, f9, f8, rtz # perform operation
fnmsub.s f15, f4, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f4, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x12, 0x63242436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xeb62efae # load x3 with value 0xeb62efae
sw x3, 0(x2) # store 0xeb62efae in memory
flw f2, 0(x2) # load 0xeb62efae from memory into f2
fnmsub.s f12, f11, f16, f2, dyn # perform operation
fnmsub.s f12, f11, f16, f2, rdn # perform operation
fnmsub.s f12, f11, f16, f2, rmm # perform operation
fnmsub.s f12, f11, f16, f2, rne # perform operation
fnmsub.s f12, f11, f16, f2, rtz # perform operation
fnmsub.s f12, f11, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x8, 0x80073f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x9407d77b # load x3 with value 0x9407d77b
sw x3, 0(x2) # store 0x9407d77b in memory
flw f3, 0(x2) # load 0x9407d77b from memory into f3
fnmsub.s f8, f24, f29, f3, dyn # perform operation
fnmsub.s f8, f24, f29, f3, rdn # perform operation
fnmsub.s f8, f24, f29, f3, rmm # perform operation
fnmsub.s f8, f24, f29, f3, rne # perform operation
fnmsub.s f8, f24, f29, f3, rtz # perform operation
fnmsub.s f8, f24, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f24, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f24, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f24, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f24, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f24, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x23, 0xeaa57606 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0xac5f5282 # load x3 with value 0xac5f5282
sw x3, 0(x2) # store 0xac5f5282 in memory
flw f8, 0(x2) # load 0xac5f5282 from memory into f8
fnmsub.s f23, f28, f16, f8, dyn # perform operation
fnmsub.s f23, f28, f16, f8, rdn # perform operation
fnmsub.s f23, f28, f16, f8, rmm # perform operation
fnmsub.s f23, f28, f16, f8, rne # perform operation
fnmsub.s f23, f28, f16, f8, rtz # perform operation
fnmsub.s f23, f28, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f28, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f28, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x30, 0xdb8786c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0xdeb02515 # load x3 with value 0xdeb02515
sw x3, 0(x2) # store 0xdeb02515 in memory
flw f28, 0(x2) # load 0xdeb02515 from memory into f28
fnmsub.s f30, f6, f8, f28, dyn # perform operation
fnmsub.s f30, f6, f8, f28, rdn # perform operation
fnmsub.s f30, f6, f8, f28, rmm # perform operation
fnmsub.s f30, f6, f8, f28, rne # perform operation
fnmsub.s f30, f6, f8, f28, rtz # perform operation
fnmsub.s f30, f6, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x9, 0xb25fb586 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0xefc341dd # load x3 with value 0xefc341dd
sw x3, 0(x2) # store 0xefc341dd in memory
flw f19, 0(x2) # load 0xefc341dd from memory into f19
fnmsub.s f9, f5, f25, f19, dyn # perform operation
fnmsub.s f9, f5, f25, f19, rdn # perform operation
fnmsub.s f9, f5, f25, f19, rmm # perform operation
fnmsub.s f9, f5, f25, f19, rne # perform operation
fnmsub.s f9, f5, f25, f19, rtz # perform operation
fnmsub.s f9, f5, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f5, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x21, 0x58e890f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0xc1c6aee3 # load x3 with value 0xc1c6aee3
sw x3, 0(x2) # store 0xc1c6aee3 in memory
flw f24, 0(x2) # load 0xc1c6aee3 from memory into f24
fnmsub.s f21, f11, f5, f24, dyn # perform operation
fnmsub.s f21, f11, f5, f24, rdn # perform operation
fnmsub.s f21, f11, f5, f24, rmm # perform operation
fnmsub.s f21, f11, f5, f24, rne # perform operation
fnmsub.s f21, f11, f5, f24, rtz # perform operation
fnmsub.s f21, f11, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x25, 0x0e42f12d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x8e358f3e # load x3 with value 0x8e358f3e
sw x3, 0(x2) # store 0x8e358f3e in memory
flw f8, 0(x2) # load 0x8e358f3e from memory into f8
fnmsub.s f25, f18, f9, f8, dyn # perform operation
fnmsub.s f25, f18, f9, f8, rdn # perform operation
fnmsub.s f25, f18, f9, f8, rmm # perform operation
fnmsub.s f25, f18, f9, f8, rne # perform operation
fnmsub.s f25, f18, f9, f8, rtz # perform operation
fnmsub.s f25, f18, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x26, 0x9ea932f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x20b6470c # load x3 with value 0x20b6470c
sw x3, 0(x2) # store 0x20b6470c in memory
flw f2, 0(x2) # load 0x20b6470c from memory into f2
fnmsub.s f26, f9, f25, f2, dyn # perform operation
fnmsub.s f26, f9, f25, f2, rdn # perform operation
fnmsub.s f26, f9, f25, f2, rmm # perform operation
fnmsub.s f26, f9, f25, f2, rne # perform operation
fnmsub.s f26, f9, f25, f2, rtz # perform operation
fnmsub.s f26, f9, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x25, 0xc21bc959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x746b8216 # load x3 with value 0x746b8216
sw x3, 0(x2) # store 0x746b8216 in memory
flw f7, 0(x2) # load 0x746b8216 from memory into f7
fnmsub.s f25, f31, f26, f7, dyn # perform operation
fnmsub.s f25, f31, f26, f7, rdn # perform operation
fnmsub.s f25, f31, f26, f7, rmm # perform operation
fnmsub.s f25, f31, f26, f7, rne # perform operation
fnmsub.s f25, f31, f26, f7, rtz # perform operation
fnmsub.s f25, f31, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x25, 0x3200e3be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xf4dd0d70 # load x3 with value 0xf4dd0d70
sw x3, 0(x2) # store 0xf4dd0d70 in memory
flw f30, 0(x2) # load 0xf4dd0d70 from memory into f30
fnmsub.s f25, f20, f23, f30, dyn # perform operation
fnmsub.s f25, f20, f23, f30, rdn # perform operation
fnmsub.s f25, f20, f23, f30, rmm # perform operation
fnmsub.s f25, f20, f23, f30, rne # perform operation
fnmsub.s f25, f20, f23, f30, rtz # perform operation
fnmsub.s f25, f20, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f20, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x15, 0x7c45c4bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xe98f532a # load x3 with value 0xe98f532a
sw x3, 0(x2) # store 0xe98f532a in memory
flw f28, 0(x2) # load 0xe98f532a from memory into f28
fnmsub.s f15, f26, f8, f28, dyn # perform operation
fnmsub.s f15, f26, f8, f28, rdn # perform operation
fnmsub.s f15, f26, f8, f28, rmm # perform operation
fnmsub.s f15, f26, f8, f28, rne # perform operation
fnmsub.s f15, f26, f8, f28, rtz # perform operation
fnmsub.s f15, f26, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x13, 0xf689658e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x47b666af # load x3 with value 0x47b666af
sw x3, 0(x2) # store 0x47b666af in memory
flw f5, 0(x2) # load 0x47b666af from memory into f5
fnmsub.s f13, f18, f15, f5, dyn # perform operation
fnmsub.s f13, f18, f15, f5, rdn # perform operation
fnmsub.s f13, f18, f15, f5, rmm # perform operation
fnmsub.s f13, f18, f15, f5, rne # perform operation
fnmsub.s f13, f18, f15, f5, rtz # perform operation
fnmsub.s f13, f18, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x19, 0xdcc2aba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0xb6228fff # load x3 with value 0xb6228fff
sw x3, 0(x2) # store 0xb6228fff in memory
flw f15, 0(x2) # load 0xb6228fff from memory into f15
fnmsub.s f19, f1, f14, f15, dyn # perform operation
fnmsub.s f19, f1, f14, f15, rdn # perform operation
fnmsub.s f19, f1, f14, f15, rmm # perform operation
fnmsub.s f19, f1, f14, f15, rne # perform operation
fnmsub.s f19, f1, f14, f15, rtz # perform operation
fnmsub.s f19, f1, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f1, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x10, 0x947d193c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x120ca961 # load x3 with value 0x120ca961
sw x3, 0(x2) # store 0x120ca961 in memory
flw f24, 0(x2) # load 0x120ca961 from memory into f24
fnmsub.s f10, f20, f12, f24, dyn # perform operation
fnmsub.s f10, f20, f12, f24, rdn # perform operation
fnmsub.s f10, f20, f12, f24, rmm # perform operation
fnmsub.s f10, f20, f12, f24, rne # perform operation
fnmsub.s f10, f20, f12, f24, rtz # perform operation
fnmsub.s f10, f20, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x9, 0x73f2e524 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x06ffba05 # load x3 with value 0x06ffba05
sw x3, 0(x2) # store 0x06ffba05 in memory
flw f27, 0(x2) # load 0x06ffba05 from memory into f27
fnmsub.s f9, f16, f19, f27, dyn # perform operation
fnmsub.s f9, f16, f19, f27, rdn # perform operation
fnmsub.s f9, f16, f19, f27, rmm # perform operation
fnmsub.s f9, f16, f19, f27, rne # perform operation
fnmsub.s f9, f16, f19, f27, rtz # perform operation
fnmsub.s f9, f16, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x21, 0x3f2ca702 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x124de1d4 # load x3 with value 0x124de1d4
sw x3, 0(x2) # store 0x124de1d4 in memory
flw f26, 0(x2) # load 0x124de1d4 from memory into f26
fnmsub.s f21, f23, f10, f26, dyn # perform operation
fnmsub.s f21, f23, f10, f26, rdn # perform operation
fnmsub.s f21, f23, f10, f26, rmm # perform operation
fnmsub.s f21, f23, f10, f26, rne # perform operation
fnmsub.s f21, f23, f10, f26, rtz # perform operation
fnmsub.s f21, f23, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x19, 0xe498e17b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x919a899f # load x3 with value 0x919a899f
sw x3, 0(x2) # store 0x919a899f in memory
flw f12, 0(x2) # load 0x919a899f from memory into f12
fnmsub.s f19, f4, f31, f12, dyn # perform operation
fnmsub.s f19, f4, f31, f12, rdn # perform operation
fnmsub.s f19, f4, f31, f12, rmm # perform operation
fnmsub.s f19, f4, f31, f12, rne # perform operation
fnmsub.s f19, f4, f31, f12, rtz # perform operation
fnmsub.s f19, f4, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f4, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f4, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x15, 0x7dd12d12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x7c170f50 # load x3 with value 0x7c170f50
sw x3, 0(x2) # store 0x7c170f50 in memory
flw f20, 0(x2) # load 0x7c170f50 from memory into f20
fnmsub.s f15, f23, f12, f20, dyn # perform operation
fnmsub.s f15, f23, f12, f20, rdn # perform operation
fnmsub.s f15, f23, f12, f20, rmm # perform operation
fnmsub.s f15, f23, f12, f20, rne # perform operation
fnmsub.s f15, f23, f12, f20, rtz # perform operation
fnmsub.s f15, f23, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x19, 0x51156a6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x08fccbad # load x3 with value 0x08fccbad
sw x3, 0(x2) # store 0x08fccbad in memory
flw f3, 0(x2) # load 0x08fccbad from memory into f3
fnmsub.s f19, f28, f10, f3, dyn # perform operation
fnmsub.s f19, f28, f10, f3, rdn # perform operation
fnmsub.s f19, f28, f10, f3, rmm # perform operation
fnmsub.s f19, f28, f10, f3, rne # perform operation
fnmsub.s f19, f28, f10, f3, rtz # perform operation
fnmsub.s f19, f28, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f28, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f28, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f28, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f28, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f28, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x9, 0x8fba98cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x842a7973 # load x3 with value 0x842a7973
sw x3, 0(x2) # store 0x842a7973 in memory
flw f1, 0(x2) # load 0x842a7973 from memory into f1
fnmsub.s f9, f7, f30, f1, dyn # perform operation
fnmsub.s f9, f7, f30, f1, rdn # perform operation
fnmsub.s f9, f7, f30, f1, rmm # perform operation
fnmsub.s f9, f7, f30, f1, rne # perform operation
fnmsub.s f9, f7, f30, f1, rtz # perform operation
fnmsub.s f9, f7, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f7, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f7, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f7, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f7, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f7, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x8, 0xddf4961c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0xe68e4b7f # load x3 with value 0xe68e4b7f
sw x3, 0(x2) # store 0xe68e4b7f in memory
flw f5, 0(x2) # load 0xe68e4b7f from memory into f5
fnmsub.s f8, f16, f19, f5, dyn # perform operation
fnmsub.s f8, f16, f19, f5, rdn # perform operation
fnmsub.s f8, f16, f19, f5, rmm # perform operation
fnmsub.s f8, f16, f19, f5, rne # perform operation
fnmsub.s f8, f16, f19, f5, rtz # perform operation
fnmsub.s f8, f16, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f16, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x6, 0xc6af1ea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xfb119938 # load x3 with value 0xfb119938
sw x3, 0(x2) # store 0xfb119938 in memory
flw f15, 0(x2) # load 0xfb119938 from memory into f15
fnmsub.s f6, f14, f16, f15, dyn # perform operation
fnmsub.s f6, f14, f16, f15, rdn # perform operation
fnmsub.s f6, f14, f16, f15, rmm # perform operation
fnmsub.s f6, f14, f16, f15, rne # perform operation
fnmsub.s f6, f14, f16, f15, rtz # perform operation
fnmsub.s f6, f14, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f14, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f14, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x21, 0x4ea2dffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xbc01460d # load x3 with value 0xbc01460d
sw x3, 0(x2) # store 0xbc01460d in memory
flw f28, 0(x2) # load 0xbc01460d from memory into f28
fnmsub.s f21, f18, f12, f28, dyn # perform operation
fnmsub.s f21, f18, f12, f28, rdn # perform operation
fnmsub.s f21, f18, f12, f28, rmm # perform operation
fnmsub.s f21, f18, f12, f28, rne # perform operation
fnmsub.s f21, f18, f12, f28, rtz # perform operation
fnmsub.s f21, f18, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x26, 0x0ca6988c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xc5ff5fc4 # load x3 with value 0xc5ff5fc4
sw x3, 0(x2) # store 0xc5ff5fc4 in memory
flw f27, 0(x2) # load 0xc5ff5fc4 from memory into f27
fnmsub.s f26, f5, f22, f27, dyn # perform operation
fnmsub.s f26, f5, f22, f27, rdn # perform operation
fnmsub.s f26, f5, f22, f27, rmm # perform operation
fnmsub.s f26, f5, f22, f27, rne # perform operation
fnmsub.s f26, f5, f22, f27, rtz # perform operation
fnmsub.s f26, f5, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f5, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x28, 0x100b57bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xcbf110d1 # load x3 with value 0xcbf110d1
sw x3, 0(x2) # store 0xcbf110d1 in memory
flw f19, 0(x2) # load 0xcbf110d1 from memory into f19
fnmsub.s f28, f10, f27, f19, dyn # perform operation
fnmsub.s f28, f10, f27, f19, rdn # perform operation
fnmsub.s f28, f10, f27, f19, rmm # perform operation
fnmsub.s f28, f10, f27, f19, rne # perform operation
fnmsub.s f28, f10, f27, f19, rtz # perform operation
fnmsub.s f28, f10, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x22, 0x6c0785c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x977c4e72 # load x3 with value 0x977c4e72
sw x3, 0(x2) # store 0x977c4e72 in memory
flw f29, 0(x2) # load 0x977c4e72 from memory into f29
fnmsub.s f22, f5, f30, f29, dyn # perform operation
fnmsub.s f22, f5, f30, f29, rdn # perform operation
fnmsub.s f22, f5, f30, f29, rmm # perform operation
fnmsub.s f22, f5, f30, f29, rne # perform operation
fnmsub.s f22, f5, f30, f29, rtz # perform operation
fnmsub.s f22, f5, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x14, 0xec1c7c3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x1908d619 # load x3 with value 0x1908d619
sw x3, 0(x2) # store 0x1908d619 in memory
flw f4, 0(x2) # load 0x1908d619 from memory into f4
fnmsub.s f14, f7, f2, f4, dyn # perform operation
fnmsub.s f14, f7, f2, f4, rdn # perform operation
fnmsub.s f14, f7, f2, f4, rmm # perform operation
fnmsub.s f14, f7, f2, f4, rne # perform operation
fnmsub.s f14, f7, f2, f4, rtz # perform operation
fnmsub.s f14, f7, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f7, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f7, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f7, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f7, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f7, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x4, 0x33510751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x7f91ea74 # load x3 with value 0x7f91ea74
sw x3, 0(x2) # store 0x7f91ea74 in memory
flw f29, 0(x2) # load 0x7f91ea74 from memory into f29
fnmsub.s f4, f28, f16, f29, dyn # perform operation
fnmsub.s f4, f28, f16, f29, rdn # perform operation
fnmsub.s f4, f28, f16, f29, rmm # perform operation
fnmsub.s f4, f28, f16, f29, rne # perform operation
fnmsub.s f4, f28, f16, f29, rtz # perform operation
fnmsub.s f4, f28, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f28, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x10, 0x1be5aa21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x77a1d680 # load x3 with value 0x77a1d680
sw x3, 0(x2) # store 0x77a1d680 in memory
flw f16, 0(x2) # load 0x77a1d680 from memory into f16
fnmsub.s f10, f19, f11, f16, dyn # perform operation
fnmsub.s f10, f19, f11, f16, rdn # perform operation
fnmsub.s f10, f19, f11, f16, rmm # perform operation
fnmsub.s f10, f19, f11, f16, rne # perform operation
fnmsub.s f10, f19, f11, f16, rtz # perform operation
fnmsub.s f10, f19, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x6, 0x9a62c52c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x13fc4af1 # load x3 with value 0x13fc4af1
sw x3, 0(x2) # store 0x13fc4af1 in memory
flw f3, 0(x2) # load 0x13fc4af1 from memory into f3
fnmsub.s f6, f21, f5, f3, dyn # perform operation
fnmsub.s f6, f21, f5, f3, rdn # perform operation
fnmsub.s f6, f21, f5, f3, rmm # perform operation
fnmsub.s f6, f21, f5, f3, rne # perform operation
fnmsub.s f6, f21, f5, f3, rtz # perform operation
fnmsub.s f6, f21, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f21, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x30, 0x6e2d43be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x0f2dcd52 # load x3 with value 0x0f2dcd52
sw x3, 0(x2) # store 0x0f2dcd52 in memory
flw f2, 0(x2) # load 0x0f2dcd52 from memory into f2
fnmsub.s f30, f14, f12, f2, dyn # perform operation
fnmsub.s f30, f14, f12, f2, rdn # perform operation
fnmsub.s f30, f14, f12, f2, rmm # perform operation
fnmsub.s f30, f14, f12, f2, rne # perform operation
fnmsub.s f30, f14, f12, f2, rtz # perform operation
fnmsub.s f30, f14, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f14, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f14, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f14, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f14, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f14, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x22, 0x0dc0555c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xf81f9427 # load x3 with value 0xf81f9427
sw x3, 0(x2) # store 0xf81f9427 in memory
flw f4, 0(x2) # load 0xf81f9427 from memory into f4
fnmsub.s f22, f26, f11, f4, dyn # perform operation
fnmsub.s f22, f26, f11, f4, rdn # perform operation
fnmsub.s f22, f26, f11, f4, rmm # perform operation
fnmsub.s f22, f26, f11, f4, rne # perform operation
fnmsub.s f22, f26, f11, f4, rtz # perform operation
fnmsub.s f22, f26, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f26, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f26, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f26, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f26, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f26, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x26, 0x6f1d3536 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x7497f449 # load x3 with value 0x7497f449
sw x3, 0(x2) # store 0x7497f449 in memory
flw f30, 0(x2) # load 0x7497f449 from memory into f30
fnmsub.s f26, f10, f14, f30, dyn # perform operation
fnmsub.s f26, f10, f14, f30, rdn # perform operation
fnmsub.s f26, f10, f14, f30, rmm # perform operation
fnmsub.s f26, f10, f14, f30, rne # perform operation
fnmsub.s f26, f10, f14, f30, rtz # perform operation
fnmsub.s f26, f10, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f10, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x29, 0xb7059f59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xce9341e9 # load x3 with value 0xce9341e9
sw x3, 0(x2) # store 0xce9341e9 in memory
flw f16, 0(x2) # load 0xce9341e9 from memory into f16
fnmsub.s f29, f7, f21, f16, dyn # perform operation
fnmsub.s f29, f7, f21, f16, rdn # perform operation
fnmsub.s f29, f7, f21, f16, rmm # perform operation
fnmsub.s f29, f7, f21, f16, rne # perform operation
fnmsub.s f29, f7, f21, f16, rtz # perform operation
fnmsub.s f29, f7, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f7, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f7, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x24, 0x0c3ce561 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xee61bd5e # load x3 with value 0xee61bd5e
sw x3, 0(x2) # store 0xee61bd5e in memory
flw f23, 0(x2) # load 0xee61bd5e from memory into f23
fnmsub.s f24, f26, f2, f23, dyn # perform operation
fnmsub.s f24, f26, f2, f23, rdn # perform operation
fnmsub.s f24, f26, f2, f23, rmm # perform operation
fnmsub.s f24, f26, f2, f23, rne # perform operation
fnmsub.s f24, f26, f2, f23, rtz # perform operation
fnmsub.s f24, f26, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f26, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f26, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f26, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f26, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f26, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x16, 0xd999f5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x246568af # load x3 with value 0x246568af
sw x3, 0(x2) # store 0x246568af in memory
flw f10, 0(x2) # load 0x246568af from memory into f10
fnmsub.s f16, f14, f7, f10, dyn # perform operation
fnmsub.s f16, f14, f7, f10, rdn # perform operation
fnmsub.s f16, f14, f7, f10, rmm # perform operation
fnmsub.s f16, f14, f7, f10, rne # perform operation
fnmsub.s f16, f14, f7, f10, rtz # perform operation
fnmsub.s f16, f14, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x21, 0xa0f1aca9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x8ee1f789 # load x3 with value 0x8ee1f789
sw x3, 0(x2) # store 0x8ee1f789 in memory
flw f17, 0(x2) # load 0x8ee1f789 from memory into f17
fnmsub.s f21, f1, f30, f17, dyn # perform operation
fnmsub.s f21, f1, f30, f17, rdn # perform operation
fnmsub.s f21, f1, f30, f17, rmm # perform operation
fnmsub.s f21, f1, f30, f17, rne # perform operation
fnmsub.s f21, f1, f30, f17, rtz # perform operation
fnmsub.s f21, f1, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x17, 0x895425a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x39055c14 # load x3 with value 0x39055c14
sw x3, 0(x2) # store 0x39055c14 in memory
flw f18, 0(x2) # load 0x39055c14 from memory into f18
fnmsub.s f17, f16, f24, f18, dyn # perform operation
fnmsub.s f17, f16, f24, f18, rdn # perform operation
fnmsub.s f17, f16, f24, f18, rmm # perform operation
fnmsub.s f17, f16, f24, f18, rne # perform operation
fnmsub.s f17, f16, f24, f18, rtz # perform operation
fnmsub.s f17, f16, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x9, 0xbed520b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x68bb7ec6 # load x3 with value 0x68bb7ec6
sw x3, 0(x2) # store 0x68bb7ec6 in memory
flw f24, 0(x2) # load 0x68bb7ec6 from memory into f24
fnmsub.s f9, f2, f4, f24, dyn # perform operation
fnmsub.s f9, f2, f4, f24, rdn # perform operation
fnmsub.s f9, f2, f4, f24, rmm # perform operation
fnmsub.s f9, f2, f4, f24, rne # perform operation
fnmsub.s f9, f2, f4, f24, rtz # perform operation
fnmsub.s f9, f2, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x12, 0x23841f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x0fbe9f87 # load x3 with value 0x0fbe9f87
sw x3, 0(x2) # store 0x0fbe9f87 in memory
flw f26, 0(x2) # load 0x0fbe9f87 from memory into f26
fnmsub.s f12, f4, f5, f26, dyn # perform operation
fnmsub.s f12, f4, f5, f26, rdn # perform operation
fnmsub.s f12, f4, f5, f26, rmm # perform operation
fnmsub.s f12, f4, f5, f26, rne # perform operation
fnmsub.s f12, f4, f5, f26, rtz # perform operation
fnmsub.s f12, f4, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f4, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f4, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f4, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f4, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f4, f5, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x12, 0xe90763e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xfa09c968 # load x3 with value 0xfa09c968
sw x3, 0(x2) # store 0xfa09c968 in memory
flw f20, 0(x2) # load 0xfa09c968 from memory into f20
fnmsub.s f12, f21, f22, f20, dyn # perform operation
fnmsub.s f12, f21, f22, f20, rdn # perform operation
fnmsub.s f12, f21, f22, f20, rmm # perform operation
fnmsub.s f12, f21, f22, f20, rne # perform operation
fnmsub.s f12, f21, f22, f20, rtz # perform operation
fnmsub.s f12, f21, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x9, 0x28a04b22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0xe82b9a1b # load x3 with value 0xe82b9a1b
sw x3, 0(x2) # store 0xe82b9a1b in memory
flw f2, 0(x2) # load 0xe82b9a1b from memory into f2
fnmsub.s f9, f8, f12, f2, dyn # perform operation
fnmsub.s f9, f8, f12, f2, rdn # perform operation
fnmsub.s f9, f8, f12, f2, rmm # perform operation
fnmsub.s f9, f8, f12, f2, rne # perform operation
fnmsub.s f9, f8, f12, f2, rtz # perform operation
fnmsub.s f9, f8, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x22, 0x8adffd83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x24a85738 # load x3 with value 0x24a85738
sw x3, 0(x2) # store 0x24a85738 in memory
flw f26, 0(x2) # load 0x24a85738 from memory into f26
fnmsub.s f22, f15, f24, f26, dyn # perform operation
fnmsub.s f22, f15, f24, f26, rdn # perform operation
fnmsub.s f22, f15, f24, f26, rmm # perform operation
fnmsub.s f22, f15, f24, f26, rne # perform operation
fnmsub.s f22, f15, f24, f26, rtz # perform operation
fnmsub.s f22, f15, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f15, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f15, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f15, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f15, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f15, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x4, 0x50cec182 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x332c2178 # load x3 with value 0x332c2178
sw x3, 0(x2) # store 0x332c2178 in memory
flw f19, 0(x2) # load 0x332c2178 from memory into f19
fnmsub.s f4, f8, f29, f19, dyn # perform operation
fnmsub.s f4, f8, f29, f19, rdn # perform operation
fnmsub.s f4, f8, f29, f19, rmm # perform operation
fnmsub.s f4, f8, f29, f19, rne # perform operation
fnmsub.s f4, f8, f29, f19, rtz # perform operation
fnmsub.s f4, f8, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f8, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x7, 0xe872f6b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x0858d024 # load x3 with value 0x0858d024
sw x3, 0(x2) # store 0x0858d024 in memory
flw f1, 0(x2) # load 0x0858d024 from memory into f1
fnmsub.s f7, f27, f23, f1, dyn # perform operation
fnmsub.s f7, f27, f23, f1, rdn # perform operation
fnmsub.s f7, f27, f23, f1, rmm # perform operation
fnmsub.s f7, f27, f23, f1, rne # perform operation
fnmsub.s f7, f27, f23, f1, rtz # perform operation
fnmsub.s f7, f27, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x12, 0x23b30dcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x8414565e # load x3 with value 0x8414565e
sw x3, 0(x2) # store 0x8414565e in memory
flw f10, 0(x2) # load 0x8414565e from memory into f10
fnmsub.s f12, f11, f8, f10, dyn # perform operation
fnmsub.s f12, f11, f8, f10, rdn # perform operation
fnmsub.s f12, f11, f8, f10, rmm # perform operation
fnmsub.s f12, f11, f8, f10, rne # perform operation
fnmsub.s f12, f11, f8, f10, rtz # perform operation
fnmsub.s f12, f11, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x29, 0x4e4283b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0xb369318f # load x3 with value 0xb369318f
sw x3, 0(x2) # store 0xb369318f in memory
flw f19, 0(x2) # load 0xb369318f from memory into f19
fnmsub.s f29, f27, f31, f19, dyn # perform operation
fnmsub.s f29, f27, f31, f19, rdn # perform operation
fnmsub.s f29, f27, f31, f19, rmm # perform operation
fnmsub.s f29, f27, f31, f19, rne # perform operation
fnmsub.s f29, f27, f31, f19, rtz # perform operation
fnmsub.s f29, f27, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f27, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f27, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x13, 0x18f3a8ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0xa5c02f43 # load x3 with value 0xa5c02f43
sw x3, 0(x2) # store 0xa5c02f43 in memory
flw f26, 0(x2) # load 0xa5c02f43 from memory into f26
fnmsub.s f13, f12, f23, f26, dyn # perform operation
fnmsub.s f13, f12, f23, f26, rdn # perform operation
fnmsub.s f13, f12, f23, f26, rmm # perform operation
fnmsub.s f13, f12, f23, f26, rne # perform operation
fnmsub.s f13, f12, f23, f26, rtz # perform operation
fnmsub.s f13, f12, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f12, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x25, 0xdfd3fb35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0xb1082db8 # load x3 with value 0xb1082db8
sw x3, 0(x2) # store 0xb1082db8 in memory
flw f29, 0(x2) # load 0xb1082db8 from memory into f29
fnmsub.s f25, f21, f24, f29, dyn # perform operation
fnmsub.s f25, f21, f24, f29, rdn # perform operation
fnmsub.s f25, f21, f24, f29, rmm # perform operation
fnmsub.s f25, f21, f24, f29, rne # perform operation
fnmsub.s f25, f21, f24, f29, rtz # perform operation
fnmsub.s f25, f21, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x26, 0x3a0809cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x59f3ad1b # load x3 with value 0x59f3ad1b
sw x3, 0(x2) # store 0x59f3ad1b in memory
flw f6, 0(x2) # load 0x59f3ad1b from memory into f6
fnmsub.s f26, f10, f20, f6, dyn # perform operation
fnmsub.s f26, f10, f20, f6, rdn # perform operation
fnmsub.s f26, f10, f20, f6, rmm # perform operation
fnmsub.s f26, f10, f20, f6, rne # perform operation
fnmsub.s f26, f10, f20, f6, rtz # perform operation
fnmsub.s f26, f10, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f10, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f10, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x22, 0xa627b3cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x7ba98348 # load x3 with value 0x7ba98348
sw x3, 0(x2) # store 0x7ba98348 in memory
flw f5, 0(x2) # load 0x7ba98348 from memory into f5
fnmsub.s f22, f27, f11, f5, dyn # perform operation
fnmsub.s f22, f27, f11, f5, rdn # perform operation
fnmsub.s f22, f27, f11, f5, rmm # perform operation
fnmsub.s f22, f27, f11, f5, rne # perform operation
fnmsub.s f22, f27, f11, f5, rtz # perform operation
fnmsub.s f22, f27, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x11, 0x8b52829d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xcae35033 # load x3 with value 0xcae35033
sw x3, 0(x2) # store 0xcae35033 in memory
flw f26, 0(x2) # load 0xcae35033 from memory into f26
fnmsub.s f11, f25, f30, f26, dyn # perform operation
fnmsub.s f11, f25, f30, f26, rdn # perform operation
fnmsub.s f11, f25, f30, f26, rmm # perform operation
fnmsub.s f11, f25, f30, f26, rne # perform operation
fnmsub.s f11, f25, f30, f26, rtz # perform operation
fnmsub.s f11, f25, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x11, 0x3d7ca759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x831c2244 # load x3 with value 0x831c2244
sw x3, 0(x2) # store 0x831c2244 in memory
flw f12, 0(x2) # load 0x831c2244 from memory into f12
fnmsub.s f11, f26, f25, f12, dyn # perform operation
fnmsub.s f11, f26, f25, f12, rdn # perform operation
fnmsub.s f11, f26, f25, f12, rmm # perform operation
fnmsub.s f11, f26, f25, f12, rne # perform operation
fnmsub.s f11, f26, f25, f12, rtz # perform operation
fnmsub.s f11, f26, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x30, 0xae100d70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xed434554 # load x3 with value 0xed434554
sw x3, 0(x2) # store 0xed434554 in memory
flw f12, 0(x2) # load 0xed434554 from memory into f12
fnmsub.s f30, f31, f27, f12, dyn # perform operation
fnmsub.s f30, f31, f27, f12, rdn # perform operation
fnmsub.s f30, f31, f27, f12, rmm # perform operation
fnmsub.s f30, f31, f27, f12, rne # perform operation
fnmsub.s f30, f31, f27, f12, rtz # perform operation
fnmsub.s f30, f31, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f31, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x23, 0x2f7d484b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x19b38049 # load x3 with value 0x19b38049
sw x3, 0(x2) # store 0x19b38049 in memory
flw f12, 0(x2) # load 0x19b38049 from memory into f12
fnmsub.s f23, f24, f14, f12, dyn # perform operation
fnmsub.s f23, f24, f14, f12, rdn # perform operation
fnmsub.s f23, f24, f14, f12, rmm # perform operation
fnmsub.s f23, f24, f14, f12, rne # perform operation
fnmsub.s f23, f24, f14, f12, rtz # perform operation
fnmsub.s f23, f24, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f24, f14, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x19, 0x887ce5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0xe8aaba77 # load x3 with value 0xe8aaba77
sw x3, 0(x2) # store 0xe8aaba77 in memory
flw f7, 0(x2) # load 0xe8aaba77 from memory into f7
fnmsub.s f19, f4, f16, f7, dyn # perform operation
fnmsub.s f19, f4, f16, f7, rdn # perform operation
fnmsub.s f19, f4, f16, f7, rmm # perform operation
fnmsub.s f19, f4, f16, f7, rne # perform operation
fnmsub.s f19, f4, f16, f7, rtz # perform operation
fnmsub.s f19, f4, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f4, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x28, 0xd5c01702 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xd14831e5 # load x3 with value 0xd14831e5
sw x3, 0(x2) # store 0xd14831e5 in memory
flw f31, 0(x2) # load 0xd14831e5 from memory into f31
fnmsub.s f28, f27, f26, f31, dyn # perform operation
fnmsub.s f28, f27, f26, f31, rdn # perform operation
fnmsub.s f28, f27, f26, f31, rmm # perform operation
fnmsub.s f28, f27, f26, f31, rne # perform operation
fnmsub.s f28, f27, f26, f31, rtz # perform operation
fnmsub.s f28, f27, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f27, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x7, 0xc93ba414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x83e99819 # load x3 with value 0x83e99819
sw x3, 0(x2) # store 0x83e99819 in memory
flw f9, 0(x2) # load 0x83e99819 from memory into f9
fnmsub.s f7, f27, f19, f9, dyn # perform operation
fnmsub.s f7, f27, f19, f9, rdn # perform operation
fnmsub.s f7, f27, f19, f9, rmm # perform operation
fnmsub.s f7, f27, f19, f9, rne # perform operation
fnmsub.s f7, f27, f19, f9, rtz # perform operation
fnmsub.s f7, f27, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x29, 0xeb7d61b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xd4e857f9 # load x3 with value 0xd4e857f9
sw x3, 0(x2) # store 0xd4e857f9 in memory
flw f17, 0(x2) # load 0xd4e857f9 from memory into f17
fnmsub.s f29, f28, f15, f17, dyn # perform operation
fnmsub.s f29, f28, f15, f17, rdn # perform operation
fnmsub.s f29, f28, f15, f17, rmm # perform operation
fnmsub.s f29, f28, f15, f17, rne # perform operation
fnmsub.s f29, f28, f15, f17, rtz # perform operation
fnmsub.s f29, f28, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f28, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x2, 0xb3e26676 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xe909a0a3 # load x3 with value 0xe909a0a3
sw x3, 0(x2) # store 0xe909a0a3 in memory
flw f17, 0(x2) # load 0xe909a0a3 from memory into f17
fnmsub.s f2, f14, f18, f17, dyn # perform operation
fnmsub.s f2, f14, f18, f17, rdn # perform operation
fnmsub.s f2, f14, f18, f17, rmm # perform operation
fnmsub.s f2, f14, f18, f17, rne # perform operation
fnmsub.s f2, f14, f18, f17, rtz # perform operation
fnmsub.s f2, f14, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f14, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x17, 0xb11adfe3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0xffb3ce8f # load x3 with value 0xffb3ce8f
sw x3, 0(x2) # store 0xffb3ce8f in memory
flw f12, 0(x2) # load 0xffb3ce8f from memory into f12
fnmsub.s f17, f3, f19, f12, dyn # perform operation
fnmsub.s f17, f3, f19, f12, rdn # perform operation
fnmsub.s f17, f3, f19, f12, rmm # perform operation
fnmsub.s f17, f3, f19, f12, rne # perform operation
fnmsub.s f17, f3, f19, f12, rtz # perform operation
fnmsub.s f17, f3, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f3, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x28, 0x5846c3e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xa99555c6 # load x3 with value 0xa99555c6
sw x3, 0(x2) # store 0xa99555c6 in memory
flw f3, 0(x2) # load 0xa99555c6 from memory into f3
fnmsub.s f28, f1, f7, f3, dyn # perform operation
fnmsub.s f28, f1, f7, f3, rdn # perform operation
fnmsub.s f28, f1, f7, f3, rmm # perform operation
fnmsub.s f28, f1, f7, f3, rne # perform operation
fnmsub.s f28, f1, f7, f3, rtz # perform operation
fnmsub.s f28, f1, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f1, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x25, 0x59a01ad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x75edb061 # load x3 with value 0x75edb061
sw x3, 0(x2) # store 0x75edb061 in memory
flw f8, 0(x2) # load 0x75edb061 from memory into f8
fnmsub.s f25, f10, f31, f8, dyn # perform operation
fnmsub.s f25, f10, f31, f8, rdn # perform operation
fnmsub.s f25, f10, f31, f8, rmm # perform operation
fnmsub.s f25, f10, f31, f8, rne # perform operation
fnmsub.s f25, f10, f31, f8, rtz # perform operation
fnmsub.s f25, f10, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x5, 0x7355e493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xa9417526 # load x3 with value 0xa9417526
sw x3, 0(x2) # store 0xa9417526 in memory
flw f18, 0(x2) # load 0xa9417526 from memory into f18
fnmsub.s f5, f23, f2, f18, dyn # perform operation
fnmsub.s f5, f23, f2, f18, rdn # perform operation
fnmsub.s f5, f23, f2, f18, rmm # perform operation
fnmsub.s f5, f23, f2, f18, rne # perform operation
fnmsub.s f5, f23, f2, f18, rtz # perform operation
fnmsub.s f5, f23, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f23, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x31, 0x93ca3497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x1a61829e # load x3 with value 0x1a61829e
sw x3, 0(x2) # store 0x1a61829e in memory
flw f14, 0(x2) # load 0x1a61829e from memory into f14
fnmsub.s f31, f26, f2, f14, dyn # perform operation
fnmsub.s f31, f26, f2, f14, rdn # perform operation
fnmsub.s f31, f26, f2, f14, rmm # perform operation
fnmsub.s f31, f26, f2, f14, rne # perform operation
fnmsub.s f31, f26, f2, f14, rtz # perform operation
fnmsub.s f31, f26, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x28, 0x812775b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x2b3c7b70 # load x3 with value 0x2b3c7b70
sw x3, 0(x2) # store 0x2b3c7b70 in memory
flw f17, 0(x2) # load 0x2b3c7b70 from memory into f17
fnmsub.s f28, f27, f30, f17, dyn # perform operation
fnmsub.s f28, f27, f30, f17, rdn # perform operation
fnmsub.s f28, f27, f30, f17, rmm # perform operation
fnmsub.s f28, f27, f30, f17, rne # perform operation
fnmsub.s f28, f27, f30, f17, rtz # perform operation
fnmsub.s f28, f27, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f27, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x23, 0xa38ab355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x228c576f # load x3 with value 0x228c576f
sw x3, 0(x2) # store 0x228c576f in memory
flw f9, 0(x2) # load 0x228c576f from memory into f9
fnmsub.s f23, f30, f25, f9, dyn # perform operation
fnmsub.s f23, f30, f25, f9, rdn # perform operation
fnmsub.s f23, f30, f25, f9, rmm # perform operation
fnmsub.s f23, f30, f25, f9, rne # perform operation
fnmsub.s f23, f30, f25, f9, rtz # perform operation
fnmsub.s f23, f30, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f30, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f30, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f30, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f30, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f30, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x9, 0xdfb247a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x47ef017c # load x3 with value 0x47ef017c
sw x3, 0(x2) # store 0x47ef017c in memory
flw f20, 0(x2) # load 0x47ef017c from memory into f20
fnmsub.s f9, f21, f5, f20, dyn # perform operation
fnmsub.s f9, f21, f5, f20, rdn # perform operation
fnmsub.s f9, f21, f5, f20, rmm # perform operation
fnmsub.s f9, f21, f5, f20, rne # perform operation
fnmsub.s f9, f21, f5, f20, rtz # perform operation
fnmsub.s f9, f21, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f21, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f21, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x3, 0xed08cf75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xcf954c0b # load x3 with value 0xcf954c0b
sw x3, 0(x2) # store 0xcf954c0b in memory
flw f22, 0(x2) # load 0xcf954c0b from memory into f22
fnmsub.s f3, f14, f1, f22, dyn # perform operation
fnmsub.s f3, f14, f1, f22, rdn # perform operation
fnmsub.s f3, f14, f1, f22, rmm # perform operation
fnmsub.s f3, f14, f1, f22, rne # perform operation
fnmsub.s f3, f14, f1, f22, rtz # perform operation
fnmsub.s f3, f14, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x17, 0xc55d2137 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x0002110d # load x3 with value 0x0002110d
sw x3, 0(x2) # store 0x0002110d in memory
flw f4, 0(x2) # load 0x0002110d from memory into f4
fnmsub.s f17, f19, f25, f4, dyn # perform operation
fnmsub.s f17, f19, f25, f4, rdn # perform operation
fnmsub.s f17, f19, f25, f4, rmm # perform operation
fnmsub.s f17, f19, f25, f4, rne # perform operation
fnmsub.s f17, f19, f25, f4, rtz # perform operation
fnmsub.s f17, f19, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x14, 0xb47c336a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x12c43474 # load x3 with value 0x12c43474
sw x3, 0(x2) # store 0x12c43474 in memory
flw f23, 0(x2) # load 0x12c43474 from memory into f23
fnmsub.s f14, f2, f27, f23, dyn # perform operation
fnmsub.s f14, f2, f27, f23, rdn # perform operation
fnmsub.s f14, f2, f27, f23, rmm # perform operation
fnmsub.s f14, f2, f27, f23, rne # perform operation
fnmsub.s f14, f2, f27, f23, rtz # perform operation
fnmsub.s f14, f2, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x2, 0xa70458dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x020a2d6f # load x3 with value 0x020a2d6f
sw x3, 0(x2) # store 0x020a2d6f in memory
flw f12, 0(x2) # load 0x020a2d6f from memory into f12
fnmsub.s f2, f10, f11, f12, dyn # perform operation
fnmsub.s f2, f10, f11, f12, rdn # perform operation
fnmsub.s f2, f10, f11, f12, rmm # perform operation
fnmsub.s f2, f10, f11, f12, rne # perform operation
fnmsub.s f2, f10, f11, f12, rtz # perform operation
fnmsub.s f2, f10, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f10, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f10, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f10, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f10, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f10, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x15, 0xb1eb41a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x0cd28858 # load x3 with value 0x0cd28858
sw x3, 0(x2) # store 0x0cd28858 in memory
flw f16, 0(x2) # load 0x0cd28858 from memory into f16
fnmsub.s f15, f31, f7, f16, dyn # perform operation
fnmsub.s f15, f31, f7, f16, rdn # perform operation
fnmsub.s f15, f31, f7, f16, rmm # perform operation
fnmsub.s f15, f31, f7, f16, rne # perform operation
fnmsub.s f15, f31, f7, f16, rtz # perform operation
fnmsub.s f15, f31, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x5, 0x4df17751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0xbb4426f5 # load x3 with value 0xbb4426f5
sw x3, 0(x2) # store 0xbb4426f5 in memory
flw f3, 0(x2) # load 0xbb4426f5 from memory into f3
fnmsub.s f5, f2, f26, f3, dyn # perform operation
fnmsub.s f5, f2, f26, f3, rdn # perform operation
fnmsub.s f5, f2, f26, f3, rmm # perform operation
fnmsub.s f5, f2, f26, f3, rne # perform operation
fnmsub.s f5, f2, f26, f3, rtz # perform operation
fnmsub.s f5, f2, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x10, 0xe7fe139b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0xbfe31d1e # load x3 with value 0xbfe31d1e
sw x3, 0(x2) # store 0xbfe31d1e in memory
flw f6, 0(x2) # load 0xbfe31d1e from memory into f6
fnmsub.s f10, f8, f17, f6, dyn # perform operation
fnmsub.s f10, f8, f17, f6, rdn # perform operation
fnmsub.s f10, f8, f17, f6, rmm # perform operation
fnmsub.s f10, f8, f17, f6, rne # perform operation
fnmsub.s f10, f8, f17, f6, rtz # perform operation
fnmsub.s f10, f8, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f8, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f8, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f8, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f8, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f8, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x20, 0x6d8c716a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x5710cc99 # load x3 with value 0x5710cc99
sw x3, 0(x2) # store 0x5710cc99 in memory
flw f19, 0(x2) # load 0x5710cc99 from memory into f19
fnmsub.s f20, f12, f10, f19, dyn # perform operation
fnmsub.s f20, f12, f10, f19, rdn # perform operation
fnmsub.s f20, f12, f10, f19, rmm # perform operation
fnmsub.s f20, f12, f10, f19, rne # perform operation
fnmsub.s f20, f12, f10, f19, rtz # perform operation
fnmsub.s f20, f12, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x27, 0x7bdc9dc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0xe8223e22 # load x3 with value 0xe8223e22
sw x3, 0(x2) # store 0xe8223e22 in memory
flw f11, 0(x2) # load 0xe8223e22 from memory into f11
fnmsub.s f27, f5, f16, f11, dyn # perform operation
fnmsub.s f27, f5, f16, f11, rdn # perform operation
fnmsub.s f27, f5, f16, f11, rmm # perform operation
fnmsub.s f27, f5, f16, f11, rne # perform operation
fnmsub.s f27, f5, f16, f11, rtz # perform operation
fnmsub.s f27, f5, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x12, 0x06a65f18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x903b2313 # load x3 with value 0x903b2313
sw x3, 0(x2) # store 0x903b2313 in memory
flw f13, 0(x2) # load 0x903b2313 from memory into f13
fnmsub.s f12, f7, f16, f13, dyn # perform operation
fnmsub.s f12, f7, f16, f13, rdn # perform operation
fnmsub.s f12, f7, f16, f13, rmm # perform operation
fnmsub.s f12, f7, f16, f13, rne # perform operation
fnmsub.s f12, f7, f16, f13, rtz # perform operation
fnmsub.s f12, f7, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x20, 0x5543a3d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x37c43eeb # load x3 with value 0x37c43eeb
sw x3, 0(x2) # store 0x37c43eeb in memory
flw f2, 0(x2) # load 0x37c43eeb from memory into f2
fnmsub.s f20, f8, f22, f2, dyn # perform operation
fnmsub.s f20, f8, f22, f2, rdn # perform operation
fnmsub.s f20, f8, f22, f2, rmm # perform operation
fnmsub.s f20, f8, f22, f2, rne # perform operation
fnmsub.s f20, f8, f22, f2, rtz # perform operation
fnmsub.s f20, f8, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x27, 0x81a5af36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x7c94ed89 # load x3 with value 0x7c94ed89
sw x3, 0(x2) # store 0x7c94ed89 in memory
flw f19, 0(x2) # load 0x7c94ed89 from memory into f19
fnmsub.s f27, f6, f4, f19, dyn # perform operation
fnmsub.s f27, f6, f4, f19, rdn # perform operation
fnmsub.s f27, f6, f4, f19, rmm # perform operation
fnmsub.s f27, f6, f4, f19, rne # perform operation
fnmsub.s f27, f6, f4, f19, rtz # perform operation
fnmsub.s f27, f6, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x21, 0x567fb580 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x54587b45 # load x3 with value 0x54587b45
sw x3, 0(x2) # store 0x54587b45 in memory
flw f24, 0(x2) # load 0x54587b45 from memory into f24
fnmsub.s f21, f2, f31, f24, dyn # perform operation
fnmsub.s f21, f2, f31, f24, rdn # perform operation
fnmsub.s f21, f2, f31, f24, rmm # perform operation
fnmsub.s f21, f2, f31, f24, rne # perform operation
fnmsub.s f21, f2, f31, f24, rtz # perform operation
fnmsub.s f21, f2, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f2, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x22, 0xd2d98b84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0xc89473e7 # load x3 with value 0xc89473e7
sw x3, 0(x2) # store 0xc89473e7 in memory
flw f24, 0(x2) # load 0xc89473e7 from memory into f24
fnmsub.s f22, f25, f1, f24, dyn # perform operation
fnmsub.s f22, f25, f1, f24, rdn # perform operation
fnmsub.s f22, f25, f1, f24, rmm # perform operation
fnmsub.s f22, f25, f1, f24, rne # perform operation
fnmsub.s f22, f25, f1, f24, rtz # perform operation
fnmsub.s f22, f25, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x18, 0xa5c98dc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x5b8bcd8d # load x3 with value 0x5b8bcd8d
sw x3, 0(x2) # store 0x5b8bcd8d in memory
flw f26, 0(x2) # load 0x5b8bcd8d from memory into f26
fnmsub.s f18, f19, f1, f26, dyn # perform operation
fnmsub.s f18, f19, f1, f26, rdn # perform operation
fnmsub.s f18, f19, f1, f26, rmm # perform operation
fnmsub.s f18, f19, f1, f26, rne # perform operation
fnmsub.s f18, f19, f1, f26, rtz # perform operation
fnmsub.s f18, f19, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x31, 0x730de09a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0xc2d5b997 # load x3 with value 0xc2d5b997
sw x3, 0(x2) # store 0xc2d5b997 in memory
flw f11, 0(x2) # load 0xc2d5b997 from memory into f11
fnmsub.s f31, f10, f8, f11, dyn # perform operation
fnmsub.s f31, f10, f8, f11, rdn # perform operation
fnmsub.s f31, f10, f8, f11, rmm # perform operation
fnmsub.s f31, f10, f8, f11, rne # perform operation
fnmsub.s f31, f10, f8, f11, rtz # perform operation
fnmsub.s f31, f10, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f10, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x13, 0x32042a71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x74a1e377 # load x3 with value 0x74a1e377
sw x3, 0(x2) # store 0x74a1e377 in memory
flw f9, 0(x2) # load 0x74a1e377 from memory into f9
fnmsub.s f13, f6, f21, f9, dyn # perform operation
fnmsub.s f13, f6, f21, f9, rdn # perform operation
fnmsub.s f13, f6, f21, f9, rmm # perform operation
fnmsub.s f13, f6, f21, f9, rne # perform operation
fnmsub.s f13, f6, f21, f9, rtz # perform operation
fnmsub.s f13, f6, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f6, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f6, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f6, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f6, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f6, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x15, 0xffa0b12c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x923d07b5 # load x3 with value 0x923d07b5
sw x3, 0(x2) # store 0x923d07b5 in memory
flw f25, 0(x2) # load 0x923d07b5 from memory into f25
fnmsub.s f15, f24, f6, f25, dyn # perform operation
fnmsub.s f15, f24, f6, f25, rdn # perform operation
fnmsub.s f15, f24, f6, f25, rmm # perform operation
fnmsub.s f15, f24, f6, f25, rne # perform operation
fnmsub.s f15, f24, f6, f25, rtz # perform operation
fnmsub.s f15, f24, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f24, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x18, 0x412df152 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x7432db8c # load x3 with value 0x7432db8c
sw x3, 0(x2) # store 0x7432db8c in memory
flw f24, 0(x2) # load 0x7432db8c from memory into f24
fnmsub.s f18, f9, f23, f24, dyn # perform operation
fnmsub.s f18, f9, f23, f24, rdn # perform operation
fnmsub.s f18, f9, f23, f24, rmm # perform operation
fnmsub.s f18, f9, f23, f24, rne # perform operation
fnmsub.s f18, f9, f23, f24, rtz # perform operation
fnmsub.s f18, f9, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x18, 0xbe7e0657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x86a56663 # load x3 with value 0x86a56663
sw x3, 0(x2) # store 0x86a56663 in memory
flw f6, 0(x2) # load 0x86a56663 from memory into f6
fnmsub.s f18, f22, f9, f6, dyn # perform operation
fnmsub.s f18, f22, f9, f6, rdn # perform operation
fnmsub.s f18, f22, f9, f6, rmm # perform operation
fnmsub.s f18, f22, f9, f6, rne # perform operation
fnmsub.s f18, f22, f9, f6, rtz # perform operation
fnmsub.s f18, f22, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x15, 0xc9d09320 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x960f5d9b # load x3 with value 0x960f5d9b
sw x3, 0(x2) # store 0x960f5d9b in memory
flw f10, 0(x2) # load 0x960f5d9b from memory into f10
fnmsub.s f15, f5, f22, f10, dyn # perform operation
fnmsub.s f15, f5, f22, f10, rdn # perform operation
fnmsub.s f15, f5, f22, f10, rmm # perform operation
fnmsub.s f15, f5, f22, f10, rne # perform operation
fnmsub.s f15, f5, f22, f10, rtz # perform operation
fnmsub.s f15, f5, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x3, 0xf939a2bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x3609ef9d # load x3 with value 0x3609ef9d
sw x3, 0(x2) # store 0x3609ef9d in memory
flw f13, 0(x2) # load 0x3609ef9d from memory into f13
fnmsub.s f3, f17, f10, f13, dyn # perform operation
fnmsub.s f3, f17, f10, f13, rdn # perform operation
fnmsub.s f3, f17, f10, f13, rmm # perform operation
fnmsub.s f3, f17, f10, f13, rne # perform operation
fnmsub.s f3, f17, f10, f13, rtz # perform operation
fnmsub.s f3, f17, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x5, 0xb2c2c878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xb7e4452f # load x3 with value 0xb7e4452f
sw x3, 0(x2) # store 0xb7e4452f in memory
flw f31, 0(x2) # load 0xb7e4452f from memory into f31
fnmsub.s f5, f2, f7, f31, dyn # perform operation
fnmsub.s f5, f2, f7, f31, rdn # perform operation
fnmsub.s f5, f2, f7, f31, rmm # perform operation
fnmsub.s f5, f2, f7, f31, rne # perform operation
fnmsub.s f5, f2, f7, f31, rtz # perform operation
fnmsub.s f5, f2, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x15, 0xbf2ecabb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x78920393 # load x3 with value 0x78920393
sw x3, 0(x2) # store 0x78920393 in memory
flw f17, 0(x2) # load 0x78920393 from memory into f17
fnmsub.s f15, f23, f30, f17, dyn # perform operation
fnmsub.s f15, f23, f30, f17, rdn # perform operation
fnmsub.s f15, f23, f30, f17, rmm # perform operation
fnmsub.s f15, f23, f30, f17, rne # perform operation
fnmsub.s f15, f23, f30, f17, rtz # perform operation
fnmsub.s f15, f23, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x19, 0x6b961dac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x2f6c0d2d # load x3 with value 0x2f6c0d2d
sw x3, 0(x2) # store 0x2f6c0d2d in memory
flw f31, 0(x2) # load 0x2f6c0d2d from memory into f31
fnmsub.s f19, f25, f29, f31, dyn # perform operation
fnmsub.s f19, f25, f29, f31, rdn # perform operation
fnmsub.s f19, f25, f29, f31, rmm # perform operation
fnmsub.s f19, f25, f29, f31, rne # perform operation
fnmsub.s f19, f25, f29, f31, rtz # perform operation
fnmsub.s f19, f25, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x10, 0x56ca2bcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x5622f0e5 # load x3 with value 0x5622f0e5
sw x3, 0(x2) # store 0x5622f0e5 in memory
flw f30, 0(x2) # load 0x5622f0e5 from memory into f30
fnmsub.s f10, f22, f24, f30, dyn # perform operation
fnmsub.s f10, f22, f24, f30, rdn # perform operation
fnmsub.s f10, f22, f24, f30, rmm # perform operation
fnmsub.s f10, f22, f24, f30, rne # perform operation
fnmsub.s f10, f22, f24, f30, rtz # perform operation
fnmsub.s f10, f22, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f22, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x22, 0xf88cec8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xa4a2d7de # load x3 with value 0xa4a2d7de
sw x3, 0(x2) # store 0xa4a2d7de in memory
flw f25, 0(x2) # load 0xa4a2d7de from memory into f25
fnmsub.s f22, f27, f12, f25, dyn # perform operation
fnmsub.s f22, f27, f12, f25, rdn # perform operation
fnmsub.s f22, f27, f12, f25, rmm # perform operation
fnmsub.s f22, f27, f12, f25, rne # perform operation
fnmsub.s f22, f27, f12, f25, rtz # perform operation
fnmsub.s f22, f27, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x11, 0xe1fcf0d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xc59950f7 # load x3 with value 0xc59950f7
sw x3, 0(x2) # store 0xc59950f7 in memory
flw f20, 0(x2) # load 0xc59950f7 from memory into f20
fnmsub.s f11, f10, f7, f20, dyn # perform operation
fnmsub.s f11, f10, f7, f20, rdn # perform operation
fnmsub.s f11, f10, f7, f20, rmm # perform operation
fnmsub.s f11, f10, f7, f20, rne # perform operation
fnmsub.s f11, f10, f7, f20, rtz # perform operation
fnmsub.s f11, f10, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f10, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f10, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f10, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f10, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f10, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x22, 0x9e5e867e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xddb074ad # load x3 with value 0xddb074ad
sw x3, 0(x2) # store 0xddb074ad in memory
flw f9, 0(x2) # load 0xddb074ad from memory into f9
fnmsub.s f22, f26, f7, f9, dyn # perform operation
fnmsub.s f22, f26, f7, f9, rdn # perform operation
fnmsub.s f22, f26, f7, f9, rmm # perform operation
fnmsub.s f22, f26, f7, f9, rne # perform operation
fnmsub.s f22, f26, f7, f9, rtz # perform operation
fnmsub.s f22, f26, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f26, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x18, 0x4ec3ed19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x4d0bc2c8 # load x3 with value 0x4d0bc2c8
sw x3, 0(x2) # store 0x4d0bc2c8 in memory
flw f14, 0(x2) # load 0x4d0bc2c8 from memory into f14
fnmsub.s f18, f1, f29, f14, dyn # perform operation
fnmsub.s f18, f1, f29, f14, rdn # perform operation
fnmsub.s f18, f1, f29, f14, rmm # perform operation
fnmsub.s f18, f1, f29, f14, rne # perform operation
fnmsub.s f18, f1, f29, f14, rtz # perform operation
fnmsub.s f18, f1, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x14, 0x640ccc3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0xaff4a1af # load x3 with value 0xaff4a1af
sw x3, 0(x2) # store 0xaff4a1af in memory
flw f10, 0(x2) # load 0xaff4a1af from memory into f10
fnmsub.s f14, f27, f31, f10, dyn # perform operation
fnmsub.s f14, f27, f31, f10, rdn # perform operation
fnmsub.s f14, f27, f31, f10, rmm # perform operation
fnmsub.s f14, f27, f31, f10, rne # perform operation
fnmsub.s f14, f27, f31, f10, rtz # perform operation
fnmsub.s f14, f27, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f27, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f27, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f27, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f27, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f27, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x5, 0x42933e5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0xfac7c973 # load x3 with value 0xfac7c973
sw x3, 0(x2) # store 0xfac7c973 in memory
flw f8, 0(x2) # load 0xfac7c973 from memory into f8
fnmsub.s f5, f14, f28, f8, dyn # perform operation
fnmsub.s f5, f14, f28, f8, rdn # perform operation
fnmsub.s f5, f14, f28, f8, rmm # perform operation
fnmsub.s f5, f14, f28, f8, rne # perform operation
fnmsub.s f5, f14, f28, f8, rtz # perform operation
fnmsub.s f5, f14, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x30, 0xb3a19cde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x8cee5e02 # load x3 with value 0x8cee5e02
sw x3, 0(x2) # store 0x8cee5e02 in memory
flw f4, 0(x2) # load 0x8cee5e02 from memory into f4
fnmsub.s f30, f23, f18, f4, dyn # perform operation
fnmsub.s f30, f23, f18, f4, rdn # perform operation
fnmsub.s f30, f23, f18, f4, rmm # perform operation
fnmsub.s f30, f23, f18, f4, rne # perform operation
fnmsub.s f30, f23, f18, f4, rtz # perform operation
fnmsub.s f30, f23, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f23, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f23, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x31, 0xdd21b8b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x70b01a9a # load x3 with value 0x70b01a9a
sw x3, 0(x2) # store 0x70b01a9a in memory
flw f17, 0(x2) # load 0x70b01a9a from memory into f17
fnmsub.s f31, f3, f30, f17, dyn # perform operation
fnmsub.s f31, f3, f30, f17, rdn # perform operation
fnmsub.s f31, f3, f30, f17, rmm # perform operation
fnmsub.s f31, f3, f30, f17, rne # perform operation
fnmsub.s f31, f3, f30, f17, rtz # perform operation
fnmsub.s f31, f3, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f3, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x5, 0x1c524241 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0xdc0fb11f # load x3 with value 0xdc0fb11f
sw x3, 0(x2) # store 0xdc0fb11f in memory
flw f23, 0(x2) # load 0xdc0fb11f from memory into f23
fnmsub.s f5, f29, f30, f23, dyn # perform operation
fnmsub.s f5, f29, f30, f23, rdn # perform operation
fnmsub.s f5, f29, f30, f23, rmm # perform operation
fnmsub.s f5, f29, f30, f23, rne # perform operation
fnmsub.s f5, f29, f30, f23, rtz # perform operation
fnmsub.s f5, f29, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x30, 0x4cbfcb34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x110e559b # load x3 with value 0x110e559b
sw x3, 0(x2) # store 0x110e559b in memory
flw f21, 0(x2) # load 0x110e559b from memory into f21
fnmsub.s f30, f23, f18, f21, dyn # perform operation
fnmsub.s f30, f23, f18, f21, rdn # perform operation
fnmsub.s f30, f23, f18, f21, rmm # perform operation
fnmsub.s f30, f23, f18, f21, rne # perform operation
fnmsub.s f30, f23, f18, f21, rtz # perform operation
fnmsub.s f30, f23, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f23, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x2, 0x445c4f15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x485fd999 # load x3 with value 0x485fd999
sw x3, 0(x2) # store 0x485fd999 in memory
flw f1, 0(x2) # load 0x485fd999 from memory into f1
fnmsub.s f2, f15, f7, f1, dyn # perform operation
fnmsub.s f2, f15, f7, f1, rdn # perform operation
fnmsub.s f2, f15, f7, f1, rmm # perform operation
fnmsub.s f2, f15, f7, f1, rne # perform operation
fnmsub.s f2, f15, f7, f1, rtz # perform operation
fnmsub.s f2, f15, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f15, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f15, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f15, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f15, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f15, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x26, 0x28ff1d9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xe8f45d44 # load x3 with value 0xe8f45d44
sw x3, 0(x2) # store 0xe8f45d44 in memory
flw f6, 0(x2) # load 0xe8f45d44 from memory into f6
fnmsub.s f26, f8, f27, f6, dyn # perform operation
fnmsub.s f26, f8, f27, f6, rdn # perform operation
fnmsub.s f26, f8, f27, f6, rmm # perform operation
fnmsub.s f26, f8, f27, f6, rne # perform operation
fnmsub.s f26, f8, f27, f6, rtz # perform operation
fnmsub.s f26, f8, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x18, 0xd87fb3bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x8eeefd5f # load x3 with value 0x8eeefd5f
sw x3, 0(x2) # store 0x8eeefd5f in memory
flw f31, 0(x2) # load 0x8eeefd5f from memory into f31
fnmsub.s f18, f19, f20, f31, dyn # perform operation
fnmsub.s f18, f19, f20, f31, rdn # perform operation
fnmsub.s f18, f19, f20, f31, rmm # perform operation
fnmsub.s f18, f19, f20, f31, rne # perform operation
fnmsub.s f18, f19, f20, f31, rtz # perform operation
fnmsub.s f18, f19, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x11, 0x7ba0cfa9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x51e3d60c # load x3 with value 0x51e3d60c
sw x3, 0(x2) # store 0x51e3d60c in memory
flw f13, 0(x2) # load 0x51e3d60c from memory into f13
fnmsub.s f11, f28, f10, f13, dyn # perform operation
fnmsub.s f11, f28, f10, f13, rdn # perform operation
fnmsub.s f11, f28, f10, f13, rmm # perform operation
fnmsub.s f11, f28, f10, f13, rne # perform operation
fnmsub.s f11, f28, f10, f13, rtz # perform operation
fnmsub.s f11, f28, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f28, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x27, 0x58ce8ce5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x1c9a30ad # load x3 with value 0x1c9a30ad
sw x3, 0(x2) # store 0x1c9a30ad in memory
flw f26, 0(x2) # load 0x1c9a30ad from memory into f26
fnmsub.s f27, f16, f22, f26, dyn # perform operation
fnmsub.s f27, f16, f22, f26, rdn # perform operation
fnmsub.s f27, f16, f22, f26, rmm # perform operation
fnmsub.s f27, f16, f22, f26, rne # perform operation
fnmsub.s f27, f16, f22, f26, rtz # perform operation
fnmsub.s f27, f16, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x20, 0x48c89fcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x17cb1ee0 # load x3 with value 0x17cb1ee0
sw x3, 0(x2) # store 0x17cb1ee0 in memory
flw f1, 0(x2) # load 0x17cb1ee0 from memory into f1
fnmsub.s f20, f26, f22, f1, dyn # perform operation
fnmsub.s f20, f26, f22, f1, rdn # perform operation
fnmsub.s f20, f26, f22, f1, rmm # perform operation
fnmsub.s f20, f26, f22, f1, rne # perform operation
fnmsub.s f20, f26, f22, f1, rtz # perform operation
fnmsub.s f20, f26, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f26, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f26, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f26, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f26, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f26, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x22, 0x010a2f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x01aa862b # load x3 with value 0x01aa862b
sw x3, 0(x2) # store 0x01aa862b in memory
flw f2, 0(x2) # load 0x01aa862b from memory into f2
fnmsub.s f22, f21, f4, f2, dyn # perform operation
fnmsub.s f22, f21, f4, f2, rdn # perform operation
fnmsub.s f22, f21, f4, f2, rmm # perform operation
fnmsub.s f22, f21, f4, f2, rne # perform operation
fnmsub.s f22, f21, f4, f2, rtz # perform operation
fnmsub.s f22, f21, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x5, 0x2ccbf637 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x12a3aeb6 # load x3 with value 0x12a3aeb6
sw x3, 0(x2) # store 0x12a3aeb6 in memory
flw f21, 0(x2) # load 0x12a3aeb6 from memory into f21
fnmsub.s f5, f29, f24, f21, dyn # perform operation
fnmsub.s f5, f29, f24, f21, rdn # perform operation
fnmsub.s f5, f29, f24, f21, rmm # perform operation
fnmsub.s f5, f29, f24, f21, rne # perform operation
fnmsub.s f5, f29, f24, f21, rtz # perform operation
fnmsub.s f5, f29, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x7, 0x761bd1a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xfbc11521 # load x3 with value 0xfbc11521
sw x3, 0(x2) # store 0xfbc11521 in memory
flw f21, 0(x2) # load 0xfbc11521 from memory into f21
fnmsub.s f7, f24, f5, f21, dyn # perform operation
fnmsub.s f7, f24, f5, f21, rdn # perform operation
fnmsub.s f7, f24, f5, f21, rmm # perform operation
fnmsub.s f7, f24, f5, f21, rne # perform operation
fnmsub.s f7, f24, f5, f21, rtz # perform operation
fnmsub.s f7, f24, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f24, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f24, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f24, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f24, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f24, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x22, 0x80397577 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xcf4b1687 # load x3 with value 0xcf4b1687
sw x3, 0(x2) # store 0xcf4b1687 in memory
flw f18, 0(x2) # load 0xcf4b1687 from memory into f18
fnmsub.s f22, f30, f28, f18, dyn # perform operation
fnmsub.s f22, f30, f28, f18, rdn # perform operation
fnmsub.s f22, f30, f28, f18, rmm # perform operation
fnmsub.s f22, f30, f28, f18, rne # perform operation
fnmsub.s f22, f30, f28, f18, rtz # perform operation
fnmsub.s f22, f30, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x24, 0xbb310960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xaa76d171 # load x3 with value 0xaa76d171
sw x3, 0(x2) # store 0xaa76d171 in memory
flw f4, 0(x2) # load 0xaa76d171 from memory into f4
fnmsub.s f24, f7, f6, f4, dyn # perform operation
fnmsub.s f24, f7, f6, f4, rdn # perform operation
fnmsub.s f24, f7, f6, f4, rmm # perform operation
fnmsub.s f24, f7, f6, f4, rne # perform operation
fnmsub.s f24, f7, f6, f4, rtz # perform operation
fnmsub.s f24, f7, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f7, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f7, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f7, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f7, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f7, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x9, 0xbebab536 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x8524efc2 # load x3 with value 0x8524efc2
sw x3, 0(x2) # store 0x8524efc2 in memory
flw f14, 0(x2) # load 0x8524efc2 from memory into f14
fnmsub.s f9, f16, f2, f14, dyn # perform operation
fnmsub.s f9, f16, f2, f14, rdn # perform operation
fnmsub.s f9, f16, f2, f14, rmm # perform operation
fnmsub.s f9, f16, f2, f14, rne # perform operation
fnmsub.s f9, f16, f2, f14, rtz # perform operation
fnmsub.s f9, f16, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x1, 0x36beda3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x5974f2dd # load x3 with value 0x5974f2dd
sw x3, 0(x2) # store 0x5974f2dd in memory
flw f31, 0(x2) # load 0x5974f2dd from memory into f31
fnmsub.s f1, f14, f8, f31, dyn # perform operation
fnmsub.s f1, f14, f8, f31, rdn # perform operation
fnmsub.s f1, f14, f8, f31, rmm # perform operation
fnmsub.s f1, f14, f8, f31, rne # perform operation
fnmsub.s f1, f14, f8, f31, rtz # perform operation
fnmsub.s f1, f14, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f14, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x20, 0x5726313e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x65d8a349 # load x3 with value 0x65d8a349
sw x3, 0(x2) # store 0x65d8a349 in memory
flw f28, 0(x2) # load 0x65d8a349 from memory into f28
fnmsub.s f20, f11, f23, f28, dyn # perform operation
fnmsub.s f20, f11, f23, f28, rdn # perform operation
fnmsub.s f20, f11, f23, f28, rmm # perform operation
fnmsub.s f20, f11, f23, f28, rne # perform operation
fnmsub.s f20, f11, f23, f28, rtz # perform operation
fnmsub.s f20, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x21, 0x3482cf8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0xc9cc8bee # load x3 with value 0xc9cc8bee
sw x3, 0(x2) # store 0xc9cc8bee in memory
flw f24, 0(x2) # load 0xc9cc8bee from memory into f24
fnmsub.s f21, f5, f12, f24, dyn # perform operation
fnmsub.s f21, f5, f12, f24, rdn # perform operation
fnmsub.s f21, f5, f12, f24, rmm # perform operation
fnmsub.s f21, f5, f12, f24, rne # perform operation
fnmsub.s f21, f5, f12, f24, rtz # perform operation
fnmsub.s f21, f5, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x31, 0xa57cd76c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x038da8ad # load x3 with value 0x038da8ad
sw x3, 0(x2) # store 0x038da8ad in memory
flw f19, 0(x2) # load 0x038da8ad from memory into f19
fnmsub.s f31, f17, f7, f19, dyn # perform operation
fnmsub.s f31, f17, f7, f19, rdn # perform operation
fnmsub.s f31, f17, f7, f19, rmm # perform operation
fnmsub.s f31, f17, f7, f19, rne # perform operation
fnmsub.s f31, f17, f7, f19, rtz # perform operation
fnmsub.s f31, f17, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x31, 0xf745b0f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x8c726811 # load x3 with value 0x8c726811
sw x3, 0(x2) # store 0x8c726811 in memory
flw f23, 0(x2) # load 0x8c726811 from memory into f23
fnmsub.s f31, f15, f16, f23, dyn # perform operation
fnmsub.s f31, f15, f16, f23, rdn # perform operation
fnmsub.s f31, f15, f16, f23, rmm # perform operation
fnmsub.s f31, f15, f16, f23, rne # perform operation
fnmsub.s f31, f15, f16, f23, rtz # perform operation
fnmsub.s f31, f15, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f15, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x7, 0x7673105f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x190d74ad # load x3 with value 0x190d74ad
sw x3, 0(x2) # store 0x190d74ad in memory
flw f25, 0(x2) # load 0x190d74ad from memory into f25
fnmsub.s f7, f14, f6, f25, dyn # perform operation
fnmsub.s f7, f14, f6, f25, rdn # perform operation
fnmsub.s f7, f14, f6, f25, rmm # perform operation
fnmsub.s f7, f14, f6, f25, rne # perform operation
fnmsub.s f7, f14, f6, f25, rtz # perform operation
fnmsub.s f7, f14, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x18, 0x0a6276b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x8730e086 # load x3 with value 0x8730e086
sw x3, 0(x2) # store 0x8730e086 in memory
flw f15, 0(x2) # load 0x8730e086 from memory into f15
fnmsub.s f18, f28, f9, f15, dyn # perform operation
fnmsub.s f18, f28, f9, f15, rdn # perform operation
fnmsub.s f18, f28, f9, f15, rmm # perform operation
fnmsub.s f18, f28, f9, f15, rne # perform operation
fnmsub.s f18, f28, f9, f15, rtz # perform operation
fnmsub.s f18, f28, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f28, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f28, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x17, 0xa2c094b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0xf91de0b3 # load x3 with value 0xf91de0b3
sw x3, 0(x2) # store 0xf91de0b3 in memory
flw f19, 0(x2) # load 0xf91de0b3 from memory into f19
fnmsub.s f17, f21, f10, f19, dyn # perform operation
fnmsub.s f17, f21, f10, f19, rdn # perform operation
fnmsub.s f17, f21, f10, f19, rmm # perform operation
fnmsub.s f17, f21, f10, f19, rne # perform operation
fnmsub.s f17, f21, f10, f19, rtz # perform operation
fnmsub.s f17, f21, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x25, 0x9a205b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xdc6f21a3 # load x3 with value 0xdc6f21a3
sw x3, 0(x2) # store 0xdc6f21a3 in memory
flw f7, 0(x2) # load 0xdc6f21a3 from memory into f7
fnmsub.s f25, f24, f23, f7, dyn # perform operation
fnmsub.s f25, f24, f23, f7, rdn # perform operation
fnmsub.s f25, f24, f23, f7, rmm # perform operation
fnmsub.s f25, f24, f23, f7, rne # perform operation
fnmsub.s f25, f24, f23, f7, rtz # perform operation
fnmsub.s f25, f24, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f24, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x22, 0x51ffc95f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xa445fb3b # load x3 with value 0xa445fb3b
sw x3, 0(x2) # store 0xa445fb3b in memory
flw f27, 0(x2) # load 0xa445fb3b from memory into f27
fnmsub.s f22, f29, f20, f27, dyn # perform operation
fnmsub.s f22, f29, f20, f27, rdn # perform operation
fnmsub.s f22, f29, f20, f27, rmm # perform operation
fnmsub.s f22, f29, f20, f27, rne # perform operation
fnmsub.s f22, f29, f20, f27, rtz # perform operation
fnmsub.s f22, f29, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x19, 0x50a34705 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x1967509e # load x3 with value 0x1967509e
sw x3, 0(x2) # store 0x1967509e in memory
flw f15, 0(x2) # load 0x1967509e from memory into f15
fnmsub.s f19, f14, f25, f15, dyn # perform operation
fnmsub.s f19, f14, f25, f15, rdn # perform operation
fnmsub.s f19, f14, f25, f15, rmm # perform operation
fnmsub.s f19, f14, f25, f15, rne # perform operation
fnmsub.s f19, f14, f25, f15, rtz # perform operation
fnmsub.s f19, f14, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f14, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x16, 0xcf2bd5b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x6b4dee1d # load x3 with value 0x6b4dee1d
sw x3, 0(x2) # store 0x6b4dee1d in memory
flw f14, 0(x2) # load 0x6b4dee1d from memory into f14
fnmsub.s f16, f27, f30, f14, dyn # perform operation
fnmsub.s f16, f27, f30, f14, rdn # perform operation
fnmsub.s f16, f27, f30, f14, rmm # perform operation
fnmsub.s f16, f27, f30, f14, rne # perform operation
fnmsub.s f16, f27, f30, f14, rtz # perform operation
fnmsub.s f16, f27, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x23, 0xec5f2a2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xb8b9f4e1 # load x3 with value 0xb8b9f4e1
sw x3, 0(x2) # store 0xb8b9f4e1 in memory
flw f9, 0(x2) # load 0xb8b9f4e1 from memory into f9
fnmsub.s f23, f6, f15, f9, dyn # perform operation
fnmsub.s f23, f6, f15, f9, rdn # perform operation
fnmsub.s f23, f6, f15, f9, rmm # perform operation
fnmsub.s f23, f6, f15, f9, rne # perform operation
fnmsub.s f23, f6, f15, f9, rtz # perform operation
fnmsub.s f23, f6, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x31, 0x03e10d68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x0b81d078 # load x3 with value 0x0b81d078
sw x3, 0(x2) # store 0x0b81d078 in memory
flw f26, 0(x2) # load 0x0b81d078 from memory into f26
fnmsub.s f31, f22, f18, f26, dyn # perform operation
fnmsub.s f31, f22, f18, f26, rdn # perform operation
fnmsub.s f31, f22, f18, f26, rmm # perform operation
fnmsub.s f31, f22, f18, f26, rne # perform operation
fnmsub.s f31, f22, f18, f26, rtz # perform operation
fnmsub.s f31, f22, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x25, 0x5d73bc85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x90239185 # load x3 with value 0x90239185
sw x3, 0(x2) # store 0x90239185 in memory
flw f19, 0(x2) # load 0x90239185 from memory into f19
fnmsub.s f25, f20, f4, f19, dyn # perform operation
fnmsub.s f25, f20, f4, f19, rdn # perform operation
fnmsub.s f25, f20, f4, f19, rmm # perform operation
fnmsub.s f25, f20, f4, f19, rne # perform operation
fnmsub.s f25, f20, f4, f19, rtz # perform operation
fnmsub.s f25, f20, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f20, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f20, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x2, 0x8a62bd7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xa25a0b99 # load x3 with value 0xa25a0b99
sw x3, 0(x2) # store 0xa25a0b99 in memory
flw f24, 0(x2) # load 0xa25a0b99 from memory into f24
fnmsub.s f2, f29, f19, f24, dyn # perform operation
fnmsub.s f2, f29, f19, f24, rdn # perform operation
fnmsub.s f2, f29, f19, f24, rmm # perform operation
fnmsub.s f2, f29, f19, f24, rne # perform operation
fnmsub.s f2, f29, f19, f24, rtz # perform operation
fnmsub.s f2, f29, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f29, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f29, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x26, 0x11a53485 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xa75db2b5 # load x3 with value 0xa75db2b5
sw x3, 0(x2) # store 0xa75db2b5 in memory
flw f10, 0(x2) # load 0xa75db2b5 from memory into f10
fnmsub.s f26, f4, f20, f10, dyn # perform operation
fnmsub.s f26, f4, f20, f10, rdn # perform operation
fnmsub.s f26, f4, f20, f10, rmm # perform operation
fnmsub.s f26, f4, f20, f10, rne # perform operation
fnmsub.s f26, f4, f20, f10, rtz # perform operation
fnmsub.s f26, f4, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f4, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f4, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f4, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f4, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f4, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x18, 0x72bd3712 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x95836b5b # load x3 with value 0x95836b5b
sw x3, 0(x2) # store 0x95836b5b in memory
flw f4, 0(x2) # load 0x95836b5b from memory into f4
fnmsub.s f18, f2, f9, f4, dyn # perform operation
fnmsub.s f18, f2, f9, f4, rdn # perform operation
fnmsub.s f18, f2, f9, f4, rmm # perform operation
fnmsub.s f18, f2, f9, f4, rne # perform operation
fnmsub.s f18, f2, f9, f4, rtz # perform operation
fnmsub.s f18, f2, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f2, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f2, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f2, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f2, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f2, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x6, 0x542bc809 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x4ab8e4cc # load x3 with value 0x4ab8e4cc
sw x3, 0(x2) # store 0x4ab8e4cc in memory
flw f13, 0(x2) # load 0x4ab8e4cc from memory into f13
fnmsub.s f6, f5, f3, f13, dyn # perform operation
fnmsub.s f6, f5, f3, f13, rdn # perform operation
fnmsub.s f6, f5, f3, f13, rmm # perform operation
fnmsub.s f6, f5, f3, f13, rne # perform operation
fnmsub.s f6, f5, f3, f13, rtz # perform operation
fnmsub.s f6, f5, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f5, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f5, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f5, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f5, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f5, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x1, 0x52d76fc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x85ad4a27 # load x3 with value 0x85ad4a27
sw x3, 0(x2) # store 0x85ad4a27 in memory
flw f6, 0(x2) # load 0x85ad4a27 from memory into f6
fnmsub.s f1, f15, f26, f6, dyn # perform operation
fnmsub.s f1, f15, f26, f6, rdn # perform operation
fnmsub.s f1, f15, f26, f6, rmm # perform operation
fnmsub.s f1, f15, f26, f6, rne # perform operation
fnmsub.s f1, f15, f26, f6, rtz # perform operation
fnmsub.s f1, f15, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x8, 0x499ff758 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0xd4d9607a # load x3 with value 0xd4d9607a
sw x3, 0(x2) # store 0xd4d9607a in memory
flw f1, 0(x2) # load 0xd4d9607a from memory into f1
fnmsub.s f8, f17, f3, f1, dyn # perform operation
fnmsub.s f8, f17, f3, f1, rdn # perform operation
fnmsub.s f8, f17, f3, f1, rmm # perform operation
fnmsub.s f8, f17, f3, f1, rne # perform operation
fnmsub.s f8, f17, f3, f1, rtz # perform operation
fnmsub.s f8, f17, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x31, 0xd09c53ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xa07c818e # load x3 with value 0xa07c818e
sw x3, 0(x2) # store 0xa07c818e in memory
flw f21, 0(x2) # load 0xa07c818e from memory into f21
fnmsub.s f31, f2, f4, f21, dyn # perform operation
fnmsub.s f31, f2, f4, f21, rdn # perform operation
fnmsub.s f31, f2, f4, f21, rmm # perform operation
fnmsub.s f31, f2, f4, f21, rne # perform operation
fnmsub.s f31, f2, f4, f21, rtz # perform operation
fnmsub.s f31, f2, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f2, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f2, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f2, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f2, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f2, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x24, 0x2e7e7efa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x424a9b70 # load x3 with value 0x424a9b70
sw x3, 0(x2) # store 0x424a9b70 in memory
flw f3, 0(x2) # load 0x424a9b70 from memory into f3
fnmsub.s f24, f22, f28, f3, dyn # perform operation
fnmsub.s f24, f22, f28, f3, rdn # perform operation
fnmsub.s f24, f22, f28, f3, rmm # perform operation
fnmsub.s f24, f22, f28, f3, rne # perform operation
fnmsub.s f24, f22, f28, f3, rtz # perform operation
fnmsub.s f24, f22, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x9, 0xbb272ff3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x5c07ddb1 # load x3 with value 0x5c07ddb1
sw x3, 0(x2) # store 0x5c07ddb1 in memory
flw f1, 0(x2) # load 0x5c07ddb1 from memory into f1
fnmsub.s f9, f7, f3, f1, dyn # perform operation
fnmsub.s f9, f7, f3, f1, rdn # perform operation
fnmsub.s f9, f7, f3, f1, rmm # perform operation
fnmsub.s f9, f7, f3, f1, rne # perform operation
fnmsub.s f9, f7, f3, f1, rtz # perform operation
fnmsub.s f9, f7, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f7, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x11, 0xedd81a2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xe7a4f7a6 # load x3 with value 0xe7a4f7a6
sw x3, 0(x2) # store 0xe7a4f7a6 in memory
flw f13, 0(x2) # load 0xe7a4f7a6 from memory into f13
fnmsub.s f11, f26, f24, f13, dyn # perform operation
fnmsub.s f11, f26, f24, f13, rdn # perform operation
fnmsub.s f11, f26, f24, f13, rmm # perform operation
fnmsub.s f11, f26, f24, f13, rne # perform operation
fnmsub.s f11, f26, f24, f13, rtz # perform operation
fnmsub.s f11, f26, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x10, 0x07b18a0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x1e4723d6 # load x3 with value 0x1e4723d6
sw x3, 0(x2) # store 0x1e4723d6 in memory
flw f17, 0(x2) # load 0x1e4723d6 from memory into f17
fnmsub.s f10, f3, f24, f17, dyn # perform operation
fnmsub.s f10, f3, f24, f17, rdn # perform operation
fnmsub.s f10, f3, f24, f17, rmm # perform operation
fnmsub.s f10, f3, f24, f17, rne # perform operation
fnmsub.s f10, f3, f24, f17, rtz # perform operation
fnmsub.s f10, f3, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f3, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x22, 0xa527c3a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x96e30b08 # load x3 with value 0x96e30b08
sw x3, 0(x2) # store 0x96e30b08 in memory
flw f6, 0(x2) # load 0x96e30b08 from memory into f6
fnmsub.s f22, f25, f11, f6, dyn # perform operation
fnmsub.s f22, f25, f11, f6, rdn # perform operation
fnmsub.s f22, f25, f11, f6, rmm # perform operation
fnmsub.s f22, f25, f11, f6, rne # perform operation
fnmsub.s f22, f25, f11, f6, rtz # perform operation
fnmsub.s f22, f25, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x16, 0xa0b1c161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x08a0df40 # load x3 with value 0x08a0df40
sw x3, 0(x2) # store 0x08a0df40 in memory
flw f29, 0(x2) # load 0x08a0df40 from memory into f29
fnmsub.s f16, f10, f14, f29, dyn # perform operation
fnmsub.s f16, f10, f14, f29, rdn # perform operation
fnmsub.s f16, f10, f14, f29, rmm # perform operation
fnmsub.s f16, f10, f14, f29, rne # perform operation
fnmsub.s f16, f10, f14, f29, rtz # perform operation
fnmsub.s f16, f10, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f10, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x18, 0x0f628414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x2e167b3d # load x3 with value 0x2e167b3d
sw x3, 0(x2) # store 0x2e167b3d in memory
flw f2, 0(x2) # load 0x2e167b3d from memory into f2
fnmsub.s f18, f15, f13, f2, dyn # perform operation
fnmsub.s f18, f15, f13, f2, rdn # perform operation
fnmsub.s f18, f15, f13, f2, rmm # perform operation
fnmsub.s f18, f15, f13, f2, rne # perform operation
fnmsub.s f18, f15, f13, f2, rtz # perform operation
fnmsub.s f18, f15, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x16, 0x95b31238 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x5c2b3b32 # load x3 with value 0x5c2b3b32
sw x3, 0(x2) # store 0x5c2b3b32 in memory
flw f21, 0(x2) # load 0x5c2b3b32 from memory into f21
fnmsub.s f16, f7, f25, f21, dyn # perform operation
fnmsub.s f16, f7, f25, f21, rdn # perform operation
fnmsub.s f16, f7, f25, f21, rmm # perform operation
fnmsub.s f16, f7, f25, f21, rne # perform operation
fnmsub.s f16, f7, f25, f21, rtz # perform operation
fnmsub.s f16, f7, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f7, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x12, 0xe09ca480 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x1a8efeb3 # load x3 with value 0x1a8efeb3
sw x3, 0(x2) # store 0x1a8efeb3 in memory
flw f9, 0(x2) # load 0x1a8efeb3 from memory into f9
fnmsub.s f12, f6, f25, f9, dyn # perform operation
fnmsub.s f12, f6, f25, f9, rdn # perform operation
fnmsub.s f12, f6, f25, f9, rmm # perform operation
fnmsub.s f12, f6, f25, f9, rne # perform operation
fnmsub.s f12, f6, f25, f9, rtz # perform operation
fnmsub.s f12, f6, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f6, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f6, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f6, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f6, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f6, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x9, 0x41af36f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xab6221cb # load x3 with value 0xab6221cb
sw x3, 0(x2) # store 0xab6221cb in memory
flw f12, 0(x2) # load 0xab6221cb from memory into f12
fnmsub.s f9, f25, f4, f12, dyn # perform operation
fnmsub.s f9, f25, f4, f12, rdn # perform operation
fnmsub.s f9, f25, f4, f12, rmm # perform operation
fnmsub.s f9, f25, f4, f12, rne # perform operation
fnmsub.s f9, f25, f4, f12, rtz # perform operation
fnmsub.s f9, f25, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x2, 0x71440c90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xd00f41ad # load x3 with value 0xd00f41ad
sw x3, 0(x2) # store 0xd00f41ad in memory
flw f15, 0(x2) # load 0xd00f41ad from memory into f15
fnmsub.s f2, f19, f9, f15, dyn # perform operation
fnmsub.s f2, f19, f9, f15, rdn # perform operation
fnmsub.s f2, f19, f9, f15, rmm # perform operation
fnmsub.s f2, f19, f9, f15, rne # perform operation
fnmsub.s f2, f19, f9, f15, rtz # perform operation
fnmsub.s f2, f19, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x24, 0x6fa078f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0xed251985 # load x3 with value 0xed251985
sw x3, 0(x2) # store 0xed251985 in memory
flw f4, 0(x2) # load 0xed251985 from memory into f4
fnmsub.s f24, f8, f21, f4, dyn # perform operation
fnmsub.s f24, f8, f21, f4, rdn # perform operation
fnmsub.s f24, f8, f21, f4, rmm # perform operation
fnmsub.s f24, f8, f21, f4, rne # perform operation
fnmsub.s f24, f8, f21, f4, rtz # perform operation
fnmsub.s f24, f8, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f8, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f8, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x12, 0x757dbcb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x39b259ac # load x3 with value 0x39b259ac
sw x3, 0(x2) # store 0x39b259ac in memory
flw f30, 0(x2) # load 0x39b259ac from memory into f30
fnmsub.s f12, f3, f7, f30, dyn # perform operation
fnmsub.s f12, f3, f7, f30, rdn # perform operation
fnmsub.s f12, f3, f7, f30, rmm # perform operation
fnmsub.s f12, f3, f7, f30, rne # perform operation
fnmsub.s f12, f3, f7, f30, rtz # perform operation
fnmsub.s f12, f3, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f3, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f3, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f3, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f3, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f3, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x18, 0xb5da61fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x01ecf62c # load x3 with value 0x01ecf62c
sw x3, 0(x2) # store 0x01ecf62c in memory
flw f11, 0(x2) # load 0x01ecf62c from memory into f11
fnmsub.s f18, f28, f9, f11, dyn # perform operation
fnmsub.s f18, f28, f9, f11, rdn # perform operation
fnmsub.s f18, f28, f9, f11, rmm # perform operation
fnmsub.s f18, f28, f9, f11, rne # perform operation
fnmsub.s f18, f28, f9, f11, rtz # perform operation
fnmsub.s f18, f28, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f28, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x15, 0x254ac715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x8006b5ab # load x3 with value 0x8006b5ab
sw x3, 0(x2) # store 0x8006b5ab in memory
flw f19, 0(x2) # load 0x8006b5ab from memory into f19
fnmsub.s f15, f5, f4, f19, dyn # perform operation
fnmsub.s f15, f5, f4, f19, rdn # perform operation
fnmsub.s f15, f5, f4, f19, rmm # perform operation
fnmsub.s f15, f5, f4, f19, rne # perform operation
fnmsub.s f15, f5, f4, f19, rtz # perform operation
fnmsub.s f15, f5, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x31, 0x78103809 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x75543650 # load x3 with value 0x75543650
sw x3, 0(x2) # store 0x75543650 in memory
flw f7, 0(x2) # load 0x75543650 from memory into f7
fnmsub.s f31, f11, f25, f7, dyn # perform operation
fnmsub.s f31, f11, f25, f7, rdn # perform operation
fnmsub.s f31, f11, f25, f7, rmm # perform operation
fnmsub.s f31, f11, f25, f7, rne # perform operation
fnmsub.s f31, f11, f25, f7, rtz # perform operation
fnmsub.s f31, f11, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x23, 0xd3d079db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x7695c172 # load x3 with value 0x7695c172
sw x3, 0(x2) # store 0x7695c172 in memory
flw f7, 0(x2) # load 0x7695c172 from memory into f7
fnmsub.s f23, f30, f16, f7, dyn # perform operation
fnmsub.s f23, f30, f16, f7, rdn # perform operation
fnmsub.s f23, f30, f16, f7, rmm # perform operation
fnmsub.s f23, f30, f16, f7, rne # perform operation
fnmsub.s f23, f30, f16, f7, rtz # perform operation
fnmsub.s f23, f30, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f30, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f30, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f30, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f30, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f30, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x2, 0xc34f46bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xa3342938 # load x3 with value 0xa3342938
sw x3, 0(x2) # store 0xa3342938 in memory
flw f3, 0(x2) # load 0xa3342938 from memory into f3
fnmsub.s f2, f30, f11, f3, dyn # perform operation
fnmsub.s f2, f30, f11, f3, rdn # perform operation
fnmsub.s f2, f30, f11, f3, rmm # perform operation
fnmsub.s f2, f30, f11, f3, rne # perform operation
fnmsub.s f2, f30, f11, f3, rtz # perform operation
fnmsub.s f2, f30, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x13, 0x2d3c05c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x51dc29b1 # load x3 with value 0x51dc29b1
sw x3, 0(x2) # store 0x51dc29b1 in memory
flw f20, 0(x2) # load 0x51dc29b1 from memory into f20
fnmsub.s f13, f7, f25, f20, dyn # perform operation
fnmsub.s f13, f7, f25, f20, rdn # perform operation
fnmsub.s f13, f7, f25, f20, rmm # perform operation
fnmsub.s f13, f7, f25, f20, rne # perform operation
fnmsub.s f13, f7, f25, f20, rtz # perform operation
fnmsub.s f13, f7, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f7, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f7, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f7, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f7, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f7, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x29, 0x133f5780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x140b621e # load x3 with value 0x140b621e
sw x3, 0(x2) # store 0x140b621e in memory
flw f31, 0(x2) # load 0x140b621e from memory into f31
fnmsub.s f29, f19, f26, f31, dyn # perform operation
fnmsub.s f29, f19, f26, f31, rdn # perform operation
fnmsub.s f29, f19, f26, f31, rmm # perform operation
fnmsub.s f29, f19, f26, f31, rne # perform operation
fnmsub.s f29, f19, f26, f31, rtz # perform operation
fnmsub.s f29, f19, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x2, 0xcd1a6639 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x81c17551 # load x3 with value 0x81c17551
sw x3, 0(x2) # store 0x81c17551 in memory
flw f8, 0(x2) # load 0x81c17551 from memory into f8
fnmsub.s f2, f11, f5, f8, dyn # perform operation
fnmsub.s f2, f11, f5, f8, rdn # perform operation
fnmsub.s f2, f11, f5, f8, rmm # perform operation
fnmsub.s f2, f11, f5, f8, rne # perform operation
fnmsub.s f2, f11, f5, f8, rtz # perform operation
fnmsub.s f2, f11, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x25, 0xd1245e65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0xd4528f4a # load x3 with value 0xd4528f4a
sw x3, 0(x2) # store 0xd4528f4a in memory
flw f21, 0(x2) # load 0xd4528f4a from memory into f21
fnmsub.s f25, f10, f29, f21, dyn # perform operation
fnmsub.s f25, f10, f29, f21, rdn # perform operation
fnmsub.s f25, f10, f29, f21, rmm # perform operation
fnmsub.s f25, f10, f29, f21, rne # perform operation
fnmsub.s f25, f10, f29, f21, rtz # perform operation
fnmsub.s f25, f10, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x24, 0x1698890b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0xe2e10442 # load x3 with value 0xe2e10442
sw x3, 0(x2) # store 0xe2e10442 in memory
flw f2, 0(x2) # load 0xe2e10442 from memory into f2
fnmsub.s f24, f1, f6, f2, dyn # perform operation
fnmsub.s f24, f1, f6, f2, rdn # perform operation
fnmsub.s f24, f1, f6, f2, rmm # perform operation
fnmsub.s f24, f1, f6, f2, rne # perform operation
fnmsub.s f24, f1, f6, f2, rtz # perform operation
fnmsub.s f24, f1, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f1, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x17, 0xf7d65d30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x017936ea # load x3 with value 0x017936ea
sw x3, 0(x2) # store 0x017936ea in memory
flw f14, 0(x2) # load 0x017936ea from memory into f14
fnmsub.s f17, f11, f7, f14, dyn # perform operation
fnmsub.s f17, f11, f7, f14, rdn # perform operation
fnmsub.s f17, f11, f7, f14, rmm # perform operation
fnmsub.s f17, f11, f7, f14, rne # perform operation
fnmsub.s f17, f11, f7, f14, rtz # perform operation
fnmsub.s f17, f11, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x31, 0x18b37de2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x5689a28c # load x3 with value 0x5689a28c
sw x3, 0(x2) # store 0x5689a28c in memory
flw f29, 0(x2) # load 0x5689a28c from memory into f29
fnmsub.s f31, f15, f22, f29, dyn # perform operation
fnmsub.s f31, f15, f22, f29, rdn # perform operation
fnmsub.s f31, f15, f22, f29, rmm # perform operation
fnmsub.s f31, f15, f22, f29, rne # perform operation
fnmsub.s f31, f15, f22, f29, rtz # perform operation
fnmsub.s f31, f15, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f15, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f15, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f15, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f15, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f15, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x31, 0xead98dc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0xca309935 # load x3 with value 0xca309935
sw x3, 0(x2) # store 0xca309935 in memory
flw f3, 0(x2) # load 0xca309935 from memory into f3
fnmsub.s f31, f12, f5, f3, dyn # perform operation
fnmsub.s f31, f12, f5, f3, rdn # perform operation
fnmsub.s f31, f12, f5, f3, rmm # perform operation
fnmsub.s f31, f12, f5, f3, rne # perform operation
fnmsub.s f31, f12, f5, f3, rtz # perform operation
fnmsub.s f31, f12, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f12, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f12, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f12, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f12, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f12, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x7, 0x646236c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0x3062e2de # load x3 with value 0x3062e2de
sw x3, 0(x2) # store 0x3062e2de in memory
flw f14, 0(x2) # load 0x3062e2de from memory into f14
fnmsub.s f7, f23, f25, f14, dyn # perform operation
fnmsub.s f7, f23, f25, f14, rdn # perform operation
fnmsub.s f7, f23, f25, f14, rmm # perform operation
fnmsub.s f7, f23, f25, f14, rne # perform operation
fnmsub.s f7, f23, f25, f14, rtz # perform operation
fnmsub.s f7, f23, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f23, f25, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x31, 0x3d829d5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0xf735c36c # load x3 with value 0xf735c36c
sw x3, 0(x2) # store 0xf735c36c in memory
flw f30, 0(x2) # load 0xf735c36c from memory into f30
fnmsub.s f31, f16, f14, f30, dyn # perform operation
fnmsub.s f31, f16, f14, f30, rdn # perform operation
fnmsub.s f31, f16, f14, f30, rmm # perform operation
fnmsub.s f31, f16, f14, f30, rne # perform operation
fnmsub.s f31, f16, f14, f30, rtz # perform operation
fnmsub.s f31, f16, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x14, 0x563c92e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0xd5d33a4f # load x3 with value 0xd5d33a4f
sw x3, 0(x2) # store 0xd5d33a4f in memory
flw f30, 0(x2) # load 0xd5d33a4f from memory into f30
fnmsub.s f14, f7, f22, f30, dyn # perform operation
fnmsub.s f14, f7, f22, f30, rdn # perform operation
fnmsub.s f14, f7, f22, f30, rmm # perform operation
fnmsub.s f14, f7, f22, f30, rne # perform operation
fnmsub.s f14, f7, f22, f30, rtz # perform operation
fnmsub.s f14, f7, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f7, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f7, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x18, 0x351868bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xcc110c9b # load x3 with value 0xcc110c9b
sw x3, 0(x2) # store 0xcc110c9b in memory
flw f11, 0(x2) # load 0xcc110c9b from memory into f11
fnmsub.s f18, f17, f28, f11, dyn # perform operation
fnmsub.s f18, f17, f28, f11, rdn # perform operation
fnmsub.s f18, f17, f28, f11, rmm # perform operation
fnmsub.s f18, f17, f28, f11, rne # perform operation
fnmsub.s f18, f17, f28, f11, rtz # perform operation
fnmsub.s f18, f17, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f17, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f17, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x26, 0xdd2be25d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x3b565c06 # load x3 with value 0x3b565c06
sw x3, 0(x2) # store 0x3b565c06 in memory
flw f3, 0(x2) # load 0x3b565c06 from memory into f3
fnmsub.s f26, f5, f24, f3, dyn # perform operation
fnmsub.s f26, f5, f24, f3, rdn # perform operation
fnmsub.s f26, f5, f24, f3, rmm # perform operation
fnmsub.s f26, f5, f24, f3, rne # perform operation
fnmsub.s f26, f5, f24, f3, rtz # perform operation
fnmsub.s f26, f5, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f5, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f5, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f5, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f5, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f5, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x13, 0xa34d1a69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xed9c8f15 # load x3 with value 0xed9c8f15
sw x3, 0(x2) # store 0xed9c8f15 in memory
flw f23, 0(x2) # load 0xed9c8f15 from memory into f23
fnmsub.s f13, f22, f2, f23, dyn # perform operation
fnmsub.s f13, f22, f2, f23, rdn # perform operation
fnmsub.s f13, f22, f2, f23, rmm # perform operation
fnmsub.s f13, f22, f2, f23, rne # perform operation
fnmsub.s f13, f22, f2, f23, rtz # perform operation
fnmsub.s f13, f22, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f22, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x18, 0xaa65bc80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x43b60a2a # load x3 with value 0x43b60a2a
sw x3, 0(x2) # store 0x43b60a2a in memory
flw f20, 0(x2) # load 0x43b60a2a from memory into f20
fnmsub.s f18, f2, f23, f20, dyn # perform operation
fnmsub.s f18, f2, f23, f20, rdn # perform operation
fnmsub.s f18, f2, f23, f20, rmm # perform operation
fnmsub.s f18, f2, f23, f20, rne # perform operation
fnmsub.s f18, f2, f23, f20, rtz # perform operation
fnmsub.s f18, f2, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f2, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x1, 0x6a12103d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x9ccbb753 # load x3 with value 0x9ccbb753
sw x3, 0(x2) # store 0x9ccbb753 in memory
flw f11, 0(x2) # load 0x9ccbb753 from memory into f11
fnmsub.s f1, f19, f27, f11, dyn # perform operation
fnmsub.s f1, f19, f27, f11, rdn # perform operation
fnmsub.s f1, f19, f27, f11, rmm # perform operation
fnmsub.s f1, f19, f27, f11, rne # perform operation
fnmsub.s f1, f19, f27, f11, rtz # perform operation
fnmsub.s f1, f19, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f19, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f19, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f19, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f19, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f19, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x24, 0xadd42c39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x3767063a # load x3 with value 0x3767063a
sw x3, 0(x2) # store 0x3767063a in memory
flw f31, 0(x2) # load 0x3767063a from memory into f31
fnmsub.s f24, f1, f23, f31, dyn # perform operation
fnmsub.s f24, f1, f23, f31, rdn # perform operation
fnmsub.s f24, f1, f23, f31, rmm # perform operation
fnmsub.s f24, f1, f23, f31, rne # perform operation
fnmsub.s f24, f1, f23, f31, rtz # perform operation
fnmsub.s f24, f1, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f1, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f1, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f1, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f1, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f1, f23, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x3, 0x04df2972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x4aa71ddc # load x3 with value 0x4aa71ddc
sw x3, 0(x2) # store 0x4aa71ddc in memory
flw f24, 0(x2) # load 0x4aa71ddc from memory into f24
fnmsub.s f3, f30, f11, f24, dyn # perform operation
fnmsub.s f3, f30, f11, f24, rdn # perform operation
fnmsub.s f3, f30, f11, f24, rmm # perform operation
fnmsub.s f3, f30, f11, f24, rne # perform operation
fnmsub.s f3, f30, f11, f24, rtz # perform operation
fnmsub.s f3, f30, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f30, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x4, 0xe300eedc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x76db8afe # load x3 with value 0x76db8afe
sw x3, 0(x2) # store 0x76db8afe in memory
flw f26, 0(x2) # load 0x76db8afe from memory into f26
fnmsub.s f4, f2, f20, f26, dyn # perform operation
fnmsub.s f4, f2, f20, f26, rdn # perform operation
fnmsub.s f4, f2, f20, f26, rmm # perform operation
fnmsub.s f4, f2, f20, f26, rne # perform operation
fnmsub.s f4, f2, f20, f26, rtz # perform operation
fnmsub.s f4, f2, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x3, 0xb8078cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x5c7335fe # load x3 with value 0x5c7335fe
sw x3, 0(x2) # store 0x5c7335fe in memory
flw f13, 0(x2) # load 0x5c7335fe from memory into f13
fnmsub.s f3, f7, f23, f13, dyn # perform operation
fnmsub.s f3, f7, f23, f13, rdn # perform operation
fnmsub.s f3, f7, f23, f13, rmm # perform operation
fnmsub.s f3, f7, f23, f13, rne # perform operation
fnmsub.s f3, f7, f23, f13, rtz # perform operation
fnmsub.s f3, f7, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x4, 0x634cb8b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0xb39f0abc # load x3 with value 0xb39f0abc
sw x3, 0(x2) # store 0xb39f0abc in memory
flw f3, 0(x2) # load 0xb39f0abc from memory into f3
fnmsub.s f4, f18, f9, f3, dyn # perform operation
fnmsub.s f4, f18, f9, f3, rdn # perform operation
fnmsub.s f4, f18, f9, f3, rmm # perform operation
fnmsub.s f4, f18, f9, f3, rne # perform operation
fnmsub.s f4, f18, f9, f3, rtz # perform operation
fnmsub.s f4, f18, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f18, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f18, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f18, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f18, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f18, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x15, 0x80047a7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0xb7c2b266 # load x3 with value 0xb7c2b266
sw x3, 0(x2) # store 0xb7c2b266 in memory
flw f2, 0(x2) # load 0xb7c2b266 from memory into f2
fnmsub.s f15, f7, f30, f2, dyn # perform operation
fnmsub.s f15, f7, f30, f2, rdn # perform operation
fnmsub.s f15, f7, f30, f2, rmm # perform operation
fnmsub.s f15, f7, f30, f2, rne # perform operation
fnmsub.s f15, f7, f30, f2, rtz # perform operation
fnmsub.s f15, f7, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f30, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x20, 0xa991d6e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x42de86df # load x3 with value 0x42de86df
sw x3, 0(x2) # store 0x42de86df in memory
flw f26, 0(x2) # load 0x42de86df from memory into f26
fnmsub.s f20, f2, f7, f26, dyn # perform operation
fnmsub.s f20, f2, f7, f26, rdn # perform operation
fnmsub.s f20, f2, f7, f26, rmm # perform operation
fnmsub.s f20, f2, f7, f26, rne # perform operation
fnmsub.s f20, f2, f7, f26, rtz # perform operation
fnmsub.s f20, f2, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x8, 0x43711eed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xde6c4ec2 # load x3 with value 0xde6c4ec2
sw x3, 0(x2) # store 0xde6c4ec2 in memory
flw f31, 0(x2) # load 0xde6c4ec2 from memory into f31
fnmsub.s f8, f3, f9, f31, dyn # perform operation
fnmsub.s f8, f3, f9, f31, rdn # perform operation
fnmsub.s f8, f3, f9, f31, rmm # perform operation
fnmsub.s f8, f3, f9, f31, rne # perform operation
fnmsub.s f8, f3, f9, f31, rtz # perform operation
fnmsub.s f8, f3, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f3, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x7, 0xea43ee96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x1dd95e86 # load x3 with value 0x1dd95e86
sw x3, 0(x2) # store 0x1dd95e86 in memory
flw f29, 0(x2) # load 0x1dd95e86 from memory into f29
fnmsub.s f7, f27, f25, f29, dyn # perform operation
fnmsub.s f7, f27, f25, f29, rdn # perform operation
fnmsub.s f7, f27, f25, f29, rmm # perform operation
fnmsub.s f7, f27, f25, f29, rne # perform operation
fnmsub.s f7, f27, f25, f29, rtz # perform operation
fnmsub.s f7, f27, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x14, 0xbc571f8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xc024d096 # load x3 with value 0xc024d096
sw x3, 0(x2) # store 0xc024d096 in memory
flw f22, 0(x2) # load 0xc024d096 from memory into f22
fnmsub.s f14, f17, f30, f22, dyn # perform operation
fnmsub.s f14, f17, f30, f22, rdn # perform operation
fnmsub.s f14, f17, f30, f22, rmm # perform operation
fnmsub.s f14, f17, f30, f22, rne # perform operation
fnmsub.s f14, f17, f30, f22, rtz # perform operation
fnmsub.s f14, f17, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f30, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x10, 0xae8b5a41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0xb3d19866 # load x3 with value 0xb3d19866
sw x3, 0(x2) # store 0xb3d19866 in memory
flw f28, 0(x2) # load 0xb3d19866 from memory into f28
fnmsub.s f10, f14, f21, f28, dyn # perform operation
fnmsub.s f10, f14, f21, f28, rdn # perform operation
fnmsub.s f10, f14, f21, f28, rmm # perform operation
fnmsub.s f10, f14, f21, f28, rne # perform operation
fnmsub.s f10, f14, f21, f28, rtz # perform operation
fnmsub.s f10, f14, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x1, 0x63d6b836 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x1f13d235 # load x3 with value 0x1f13d235
sw x3, 0(x2) # store 0x1f13d235 in memory
flw f2, 0(x2) # load 0x1f13d235 from memory into f2
fnmsub.s f1, f19, f6, f2, dyn # perform operation
fnmsub.s f1, f19, f6, f2, rdn # perform operation
fnmsub.s f1, f19, f6, f2, rmm # perform operation
fnmsub.s f1, f19, f6, f2, rne # perform operation
fnmsub.s f1, f19, f6, f2, rtz # perform operation
fnmsub.s f1, f19, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f19, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f19, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f19, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f19, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f19, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x8, 0x25f69e8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x49942840 # load x3 with value 0x49942840
sw x3, 0(x2) # store 0x49942840 in memory
flw f16, 0(x2) # load 0x49942840 from memory into f16
fnmsub.s f8, f11, f13, f16, dyn # perform operation
fnmsub.s f8, f11, f13, f16, rdn # perform operation
fnmsub.s f8, f11, f13, f16, rmm # perform operation
fnmsub.s f8, f11, f13, f16, rne # perform operation
fnmsub.s f8, f11, f13, f16, rtz # perform operation
fnmsub.s f8, f11, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f11, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x25, 0xf16290a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x5eac5918 # load x3 with value 0x5eac5918
sw x3, 0(x2) # store 0x5eac5918 in memory
flw f9, 0(x2) # load 0x5eac5918 from memory into f9
fnmsub.s f25, f16, f30, f9, dyn # perform operation
fnmsub.s f25, f16, f30, f9, rdn # perform operation
fnmsub.s f25, f16, f30, f9, rmm # perform operation
fnmsub.s f25, f16, f30, f9, rne # perform operation
fnmsub.s f25, f16, f30, f9, rtz # perform operation
fnmsub.s f25, f16, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x8, 0x85ed4978 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x7ac2aa72 # load x3 with value 0x7ac2aa72
sw x3, 0(x2) # store 0x7ac2aa72 in memory
flw f12, 0(x2) # load 0x7ac2aa72 from memory into f12
fnmsub.s f8, f27, f28, f12, dyn # perform operation
fnmsub.s f8, f27, f28, f12, rdn # perform operation
fnmsub.s f8, f27, f28, f12, rmm # perform operation
fnmsub.s f8, f27, f28, f12, rne # perform operation
fnmsub.s f8, f27, f28, f12, rtz # perform operation
fnmsub.s f8, f27, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x1, 0x0690bb36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x9e1f4f4b # load x3 with value 0x9e1f4f4b
sw x3, 0(x2) # store 0x9e1f4f4b in memory
flw f20, 0(x2) # load 0x9e1f4f4b from memory into f20
fnmsub.s f1, f17, f14, f20, dyn # perform operation
fnmsub.s f1, f17, f14, f20, rdn # perform operation
fnmsub.s f1, f17, f14, f20, rmm # perform operation
fnmsub.s f1, f17, f14, f20, rne # perform operation
fnmsub.s f1, f17, f14, f20, rtz # perform operation
fnmsub.s f1, f17, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f17, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f17, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x7, 0x509c5a52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x9aae8e06 # load x3 with value 0x9aae8e06
sw x3, 0(x2) # store 0x9aae8e06 in memory
flw f3, 0(x2) # load 0x9aae8e06 from memory into f3
fnmsub.s f7, f1, f31, f3, dyn # perform operation
fnmsub.s f7, f1, f31, f3, rdn # perform operation
fnmsub.s f7, f1, f31, f3, rmm # perform operation
fnmsub.s f7, f1, f31, f3, rne # perform operation
fnmsub.s f7, f1, f31, f3, rtz # perform operation
fnmsub.s f7, f1, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f1, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f1, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f1, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f1, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f1, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x16, 0x663b59ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0xb674e5a9 # load x3 with value 0xb674e5a9
sw x3, 0(x2) # store 0xb674e5a9 in memory
flw f24, 0(x2) # load 0xb674e5a9 from memory into f24
fnmsub.s f16, f5, f10, f24, dyn # perform operation
fnmsub.s f16, f5, f10, f24, rdn # perform operation
fnmsub.s f16, f5, f10, f24, rmm # perform operation
fnmsub.s f16, f5, f10, f24, rne # perform operation
fnmsub.s f16, f5, f10, f24, rtz # perform operation
fnmsub.s f16, f5, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x23, 0x269fe5fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x364f57ec # load x3 with value 0x364f57ec
sw x3, 0(x2) # store 0x364f57ec in memory
flw f9, 0(x2) # load 0x364f57ec from memory into f9
fnmsub.s f23, f13, f2, f9, dyn # perform operation
fnmsub.s f23, f13, f2, f9, rdn # perform operation
fnmsub.s f23, f13, f2, f9, rmm # perform operation
fnmsub.s f23, f13, f2, f9, rne # perform operation
fnmsub.s f23, f13, f2, f9, rtz # perform operation
fnmsub.s f23, f13, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x2, 0x22c43c5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x663c73ac # load x3 with value 0x663c73ac
sw x3, 0(x2) # store 0x663c73ac in memory
flw f9, 0(x2) # load 0x663c73ac from memory into f9
fnmsub.s f2, f10, f17, f9, dyn # perform operation
fnmsub.s f2, f10, f17, f9, rdn # perform operation
fnmsub.s f2, f10, f17, f9, rmm # perform operation
fnmsub.s f2, f10, f17, f9, rne # perform operation
fnmsub.s f2, f10, f17, f9, rtz # perform operation
fnmsub.s f2, f10, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f10, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f10, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x25, 0x538f9bd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x51bc04a3 # load x3 with value 0x51bc04a3
sw x3, 0(x2) # store 0x51bc04a3 in memory
flw f31, 0(x2) # load 0x51bc04a3 from memory into f31
fnmsub.s f25, f30, f27, f31, dyn # perform operation
fnmsub.s f25, f30, f27, f31, rdn # perform operation
fnmsub.s f25, f30, f27, f31, rmm # perform operation
fnmsub.s f25, f30, f27, f31, rne # perform operation
fnmsub.s f25, f30, f27, f31, rtz # perform operation
fnmsub.s f25, f30, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f30, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f30, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x29, 0xd84060b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xe7c03cdb # load x3 with value 0xe7c03cdb
sw x3, 0(x2) # store 0xe7c03cdb in memory
flw f1, 0(x2) # load 0xe7c03cdb from memory into f1
fnmsub.s f29, f21, f19, f1, dyn # perform operation
fnmsub.s f29, f21, f19, f1, rdn # perform operation
fnmsub.s f29, f21, f19, f1, rmm # perform operation
fnmsub.s f29, f21, f19, f1, rne # perform operation
fnmsub.s f29, f21, f19, f1, rtz # perform operation
fnmsub.s f29, f21, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f21, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f21, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x7, 0x7a8d6aeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x07fcf2de # load x3 with value 0x07fcf2de
sw x3, 0(x2) # store 0x07fcf2de in memory
flw f6, 0(x2) # load 0x07fcf2de from memory into f6
fnmsub.s f7, f4, f29, f6, dyn # perform operation
fnmsub.s f7, f4, f29, f6, rdn # perform operation
fnmsub.s f7, f4, f29, f6, rmm # perform operation
fnmsub.s f7, f4, f29, f6, rne # perform operation
fnmsub.s f7, f4, f29, f6, rtz # perform operation
fnmsub.s f7, f4, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f4, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x6, 0x5d371524 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0xcb1e7fc1 # load x3 with value 0xcb1e7fc1
sw x3, 0(x2) # store 0xcb1e7fc1 in memory
flw f9, 0(x2) # load 0xcb1e7fc1 from memory into f9
fnmsub.s f6, f14, f24, f9, dyn # perform operation
fnmsub.s f6, f14, f24, f9, rdn # perform operation
fnmsub.s f6, f14, f24, f9, rmm # perform operation
fnmsub.s f6, f14, f24, f9, rne # perform operation
fnmsub.s f6, f14, f24, f9, rtz # perform operation
fnmsub.s f6, f14, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f14, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f14, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f14, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f14, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f14, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x28, 0x2e4ac2da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0xc9859c1f # load x3 with value 0xc9859c1f
sw x3, 0(x2) # store 0xc9859c1f in memory
flw f31, 0(x2) # load 0xc9859c1f from memory into f31
fnmsub.s f28, f10, f6, f31, dyn # perform operation
fnmsub.s f28, f10, f6, f31, rdn # perform operation
fnmsub.s f28, f10, f6, f31, rmm # perform operation
fnmsub.s f28, f10, f6, f31, rne # perform operation
fnmsub.s f28, f10, f6, f31, rtz # perform operation
fnmsub.s f28, f10, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x22, 0x036a102a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x2be708c6 # load x3 with value 0x2be708c6
sw x3, 0(x2) # store 0x2be708c6 in memory
flw f30, 0(x2) # load 0x2be708c6 from memory into f30
fnmsub.s f22, f19, f23, f30, dyn # perform operation
fnmsub.s f22, f19, f23, f30, rdn # perform operation
fnmsub.s f22, f19, f23, f30, rmm # perform operation
fnmsub.s f22, f19, f23, f30, rne # perform operation
fnmsub.s f22, f19, f23, f30, rtz # perform operation
fnmsub.s f22, f19, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x16, 0x376968b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x99a7ea7e # load x3 with value 0x99a7ea7e
sw x3, 0(x2) # store 0x99a7ea7e in memory
flw f9, 0(x2) # load 0x99a7ea7e from memory into f9
fnmsub.s f16, f15, f11, f9, dyn # perform operation
fnmsub.s f16, f15, f11, f9, rdn # perform operation
fnmsub.s f16, f15, f11, f9, rmm # perform operation
fnmsub.s f16, f15, f11, f9, rne # perform operation
fnmsub.s f16, f15, f11, f9, rtz # perform operation
fnmsub.s f16, f15, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f15, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f15, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f15, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f15, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f15, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x23, 0x2cbf0a2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x23ba6e9f # load x3 with value 0x23ba6e9f
sw x3, 0(x2) # store 0x23ba6e9f in memory
flw f16, 0(x2) # load 0x23ba6e9f from memory into f16
fnmsub.s f23, f1, f8, f16, dyn # perform operation
fnmsub.s f23, f1, f8, f16, rdn # perform operation
fnmsub.s f23, f1, f8, f16, rmm # perform operation
fnmsub.s f23, f1, f8, f16, rne # perform operation
fnmsub.s f23, f1, f8, f16, rtz # perform operation
fnmsub.s f23, f1, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f1, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f1, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f1, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f1, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f1, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x12, 0x9c2ae0fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x913fd785 # load x3 with value 0x913fd785
sw x3, 0(x2) # store 0x913fd785 in memory
flw f6, 0(x2) # load 0x913fd785 from memory into f6
fnmsub.s f12, f22, f18, f6, dyn # perform operation
fnmsub.s f12, f22, f18, f6, rdn # perform operation
fnmsub.s f12, f22, f18, f6, rmm # perform operation
fnmsub.s f12, f22, f18, f6, rne # perform operation
fnmsub.s f12, f22, f18, f6, rtz # perform operation
fnmsub.s f12, f22, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x25, 0xb796c893 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0xc2a9bbab # load x3 with value 0xc2a9bbab
sw x3, 0(x2) # store 0xc2a9bbab in memory
flw f9, 0(x2) # load 0xc2a9bbab from memory into f9
fnmsub.s f25, f31, f4, f9, dyn # perform operation
fnmsub.s f25, f31, f4, f9, rdn # perform operation
fnmsub.s f25, f31, f4, f9, rmm # perform operation
fnmsub.s f25, f31, f4, f9, rne # perform operation
fnmsub.s f25, f31, f4, f9, rtz # perform operation
fnmsub.s f25, f31, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x18, 0xa3a9f6dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xd8f0bb33 # load x3 with value 0xd8f0bb33
sw x3, 0(x2) # store 0xd8f0bb33 in memory
flw f20, 0(x2) # load 0xd8f0bb33 from memory into f20
fnmsub.s f18, f15, f23, f20, dyn # perform operation
fnmsub.s f18, f15, f23, f20, rdn # perform operation
fnmsub.s f18, f15, f23, f20, rmm # perform operation
fnmsub.s f18, f15, f23, f20, rne # perform operation
fnmsub.s f18, f15, f23, f20, rtz # perform operation
fnmsub.s f18, f15, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x5, 0x00fa0e8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x0d430ab3 # load x3 with value 0x0d430ab3
sw x3, 0(x2) # store 0x0d430ab3 in memory
flw f20, 0(x2) # load 0x0d430ab3 from memory into f20
fnmsub.s f5, f21, f31, f20, dyn # perform operation
fnmsub.s f5, f21, f31, f20, rdn # perform operation
fnmsub.s f5, f21, f31, f20, rmm # perform operation
fnmsub.s f5, f21, f31, f20, rne # perform operation
fnmsub.s f5, f21, f31, f20, rtz # perform operation
fnmsub.s f5, f21, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x28, 0x44dc15ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0xc7be5eb9 # load x3 with value 0xc7be5eb9
sw x3, 0(x2) # store 0xc7be5eb9 in memory
flw f22, 0(x2) # load 0xc7be5eb9 from memory into f22
fnmsub.s f28, f24, f15, f22, dyn # perform operation
fnmsub.s f28, f24, f15, f22, rdn # perform operation
fnmsub.s f28, f24, f15, f22, rmm # perform operation
fnmsub.s f28, f24, f15, f22, rne # perform operation
fnmsub.s f28, f24, f15, f22, rtz # perform operation
fnmsub.s f28, f24, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f24, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x28, 0xa9a3be71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xeadb0d81 # load x3 with value 0xeadb0d81
sw x3, 0(x2) # store 0xeadb0d81 in memory
flw f9, 0(x2) # load 0xeadb0d81 from memory into f9
fnmsub.s f28, f5, f22, f9, dyn # perform operation
fnmsub.s f28, f5, f22, f9, rdn # perform operation
fnmsub.s f28, f5, f22, f9, rmm # perform operation
fnmsub.s f28, f5, f22, f9, rne # perform operation
fnmsub.s f28, f5, f22, f9, rtz # perform operation
fnmsub.s f28, f5, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f5, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f5, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x15, 0x70b4622d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x973fb5d7 # load x3 with value 0x973fb5d7
sw x3, 0(x2) # store 0x973fb5d7 in memory
flw f12, 0(x2) # load 0x973fb5d7 from memory into f12
fnmsub.s f15, f31, f9, f12, dyn # perform operation
fnmsub.s f15, f31, f9, f12, rdn # perform operation
fnmsub.s f15, f31, f9, f12, rmm # perform operation
fnmsub.s f15, f31, f9, f12, rne # perform operation
fnmsub.s f15, f31, f9, f12, rtz # perform operation
fnmsub.s f15, f31, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x4, 0xdd188152 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x301c2753 # load x3 with value 0x301c2753
sw x3, 0(x2) # store 0x301c2753 in memory
flw f8, 0(x2) # load 0x301c2753 from memory into f8
fnmsub.s f4, f10, f5, f8, dyn # perform operation
fnmsub.s f4, f10, f5, f8, rdn # perform operation
fnmsub.s f4, f10, f5, f8, rmm # perform operation
fnmsub.s f4, f10, f5, f8, rne # perform operation
fnmsub.s f4, f10, f5, f8, rtz # perform operation
fnmsub.s f4, f10, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f10, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x22, 0xa896f6ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x57e35229 # load x3 with value 0x57e35229
sw x3, 0(x2) # store 0x57e35229 in memory
flw f18, 0(x2) # load 0x57e35229 from memory into f18
fnmsub.s f22, f1, f11, f18, dyn # perform operation
fnmsub.s f22, f1, f11, f18, rdn # perform operation
fnmsub.s f22, f1, f11, f18, rmm # perform operation
fnmsub.s f22, f1, f11, f18, rne # perform operation
fnmsub.s f22, f1, f11, f18, rtz # perform operation
fnmsub.s f22, f1, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f1, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f1, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f1, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f1, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f1, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x30, 0x50cd3e9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xb2695d01 # load x3 with value 0xb2695d01
sw x3, 0(x2) # store 0xb2695d01 in memory
flw f7, 0(x2) # load 0xb2695d01 from memory into f7
fnmsub.s f30, f28, f4, f7, dyn # perform operation
fnmsub.s f30, f28, f4, f7, rdn # perform operation
fnmsub.s f30, f28, f4, f7, rmm # perform operation
fnmsub.s f30, f28, f4, f7, rne # perform operation
fnmsub.s f30, f28, f4, f7, rtz # perform operation
fnmsub.s f30, f28, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f28, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f28, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f28, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f28, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f28, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x12, 0x7f2ba84b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xf1c58223 # load x3 with value 0xf1c58223
sw x3, 0(x2) # store 0xf1c58223 in memory
flw f4, 0(x2) # load 0xf1c58223 from memory into f4
fnmsub.s f12, f7, f28, f4, dyn # perform operation
fnmsub.s f12, f7, f28, f4, rdn # perform operation
fnmsub.s f12, f7, f28, f4, rmm # perform operation
fnmsub.s f12, f7, f28, f4, rne # perform operation
fnmsub.s f12, f7, f28, f4, rtz # perform operation
fnmsub.s f12, f7, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x29, 0x84499c07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0xe7f47bb0 # load x3 with value 0xe7f47bb0
sw x3, 0(x2) # store 0xe7f47bb0 in memory
flw f23, 0(x2) # load 0xe7f47bb0 from memory into f23
fnmsub.s f29, f21, f5, f23, dyn # perform operation
fnmsub.s f29, f21, f5, f23, rdn # perform operation
fnmsub.s f29, f21, f5, f23, rmm # perform operation
fnmsub.s f29, f21, f5, f23, rne # perform operation
fnmsub.s f29, f21, f5, f23, rtz # perform operation
fnmsub.s f29, f21, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f21, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x2, 0x827d6fe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0xf0af8f86 # load x3 with value 0xf0af8f86
sw x3, 0(x2) # store 0xf0af8f86 in memory
flw f31, 0(x2) # load 0xf0af8f86 from memory into f31
fnmsub.s f2, f26, f24, f31, dyn # perform operation
fnmsub.s f2, f26, f24, f31, rdn # perform operation
fnmsub.s f2, f26, f24, f31, rmm # perform operation
fnmsub.s f2, f26, f24, f31, rne # perform operation
fnmsub.s f2, f26, f24, f31, rtz # perform operation
fnmsub.s f2, f26, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x16, 0x99bc2f3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x64745a9e # load x3 with value 0x64745a9e
sw x3, 0(x2) # store 0x64745a9e in memory
flw f14, 0(x2) # load 0x64745a9e from memory into f14
fnmsub.s f16, f28, f24, f14, dyn # perform operation
fnmsub.s f16, f28, f24, f14, rdn # perform operation
fnmsub.s f16, f28, f24, f14, rmm # perform operation
fnmsub.s f16, f28, f24, f14, rne # perform operation
fnmsub.s f16, f28, f24, f14, rtz # perform operation
fnmsub.s f16, f28, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f28, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f28, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f28, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f28, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f28, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x15, 0xba5b6035 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x6e0a8083 # load x3 with value 0x6e0a8083
sw x3, 0(x2) # store 0x6e0a8083 in memory
flw f30, 0(x2) # load 0x6e0a8083 from memory into f30
fnmsub.s f15, f25, f18, f30, dyn # perform operation
fnmsub.s f15, f25, f18, f30, rdn # perform operation
fnmsub.s f15, f25, f18, f30, rmm # perform operation
fnmsub.s f15, f25, f18, f30, rne # perform operation
fnmsub.s f15, f25, f18, f30, rtz # perform operation
fnmsub.s f15, f25, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f25, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x31, 0x1b45dea6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xbcb7def7 # load x3 with value 0xbcb7def7
sw x3, 0(x2) # store 0xbcb7def7 in memory
flw f17, 0(x2) # load 0xbcb7def7 from memory into f17
fnmsub.s f31, f6, f1, f17, dyn # perform operation
fnmsub.s f31, f6, f1, f17, rdn # perform operation
fnmsub.s f31, f6, f1, f17, rmm # perform operation
fnmsub.s f31, f6, f1, f17, rne # perform operation
fnmsub.s f31, f6, f1, f17, rtz # perform operation
fnmsub.s f31, f6, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x8, 0x7acd832f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xdaddd2ed # load x3 with value 0xdaddd2ed
sw x3, 0(x2) # store 0xdaddd2ed in memory
flw f9, 0(x2) # load 0xdaddd2ed from memory into f9
fnmsub.s f8, f16, f27, f9, dyn # perform operation
fnmsub.s f8, f16, f27, f9, rdn # perform operation
fnmsub.s f8, f16, f27, f9, rmm # perform operation
fnmsub.s f8, f16, f27, f9, rne # perform operation
fnmsub.s f8, f16, f27, f9, rtz # perform operation
fnmsub.s f8, f16, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f16, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x8, 0x7d79aaaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x5e462f0c # load x3 with value 0x5e462f0c
sw x3, 0(x2) # store 0x5e462f0c in memory
flw f30, 0(x2) # load 0x5e462f0c from memory into f30
fnmsub.s f8, f29, f7, f30, dyn # perform operation
fnmsub.s f8, f29, f7, f30, rdn # perform operation
fnmsub.s f8, f29, f7, f30, rmm # perform operation
fnmsub.s f8, f29, f7, f30, rne # perform operation
fnmsub.s f8, f29, f7, f30, rtz # perform operation
fnmsub.s f8, f29, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x21, 0xbe41b69b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x57e6cc09 # load x3 with value 0x57e6cc09
sw x3, 0(x2) # store 0x57e6cc09 in memory
flw f24, 0(x2) # load 0x57e6cc09 from memory into f24
fnmsub.s f21, f13, f15, f24, dyn # perform operation
fnmsub.s f21, f13, f15, f24, rdn # perform operation
fnmsub.s f21, f13, f15, f24, rmm # perform operation
fnmsub.s f21, f13, f15, f24, rne # perform operation
fnmsub.s f21, f13, f15, f24, rtz # perform operation
fnmsub.s f21, f13, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x31, 0x77607f53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xe0245fbf # load x3 with value 0xe0245fbf
sw x3, 0(x2) # store 0xe0245fbf in memory
flw f27, 0(x2) # load 0xe0245fbf from memory into f27
fnmsub.s f31, f30, f19, f27, dyn # perform operation
fnmsub.s f31, f30, f19, f27, rdn # perform operation
fnmsub.s f31, f30, f19, f27, rmm # perform operation
fnmsub.s f31, f30, f19, f27, rne # perform operation
fnmsub.s f31, f30, f19, f27, rtz # perform operation
fnmsub.s f31, f30, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f30, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f30, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x1, 0x656f11dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x2cf88f4b # load x3 with value 0x2cf88f4b
sw x3, 0(x2) # store 0x2cf88f4b in memory
flw f16, 0(x2) # load 0x2cf88f4b from memory into f16
fnmsub.s f1, f29, f11, f16, dyn # perform operation
fnmsub.s f1, f29, f11, f16, rdn # perform operation
fnmsub.s f1, f29, f11, f16, rmm # perform operation
fnmsub.s f1, f29, f11, f16, rne # perform operation
fnmsub.s f1, f29, f11, f16, rtz # perform operation
fnmsub.s f1, f29, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f29, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x23, 0x2bc27e2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x31f3b548 # load x3 with value 0x31f3b548
sw x3, 0(x2) # store 0x31f3b548 in memory
flw f6, 0(x2) # load 0x31f3b548 from memory into f6
fnmsub.s f23, f20, f8, f6, dyn # perform operation
fnmsub.s f23, f20, f8, f6, rdn # perform operation
fnmsub.s f23, f20, f8, f6, rmm # perform operation
fnmsub.s f23, f20, f8, f6, rne # perform operation
fnmsub.s f23, f20, f8, f6, rtz # perform operation
fnmsub.s f23, f20, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f20, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f20, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f20, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f20, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f20, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x26, 0xcedca7f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x6bb852ff # load x3 with value 0x6bb852ff
sw x3, 0(x2) # store 0x6bb852ff in memory
flw f2, 0(x2) # load 0x6bb852ff from memory into f2
fnmsub.s f26, f7, f13, f2, dyn # perform operation
fnmsub.s f26, f7, f13, f2, rdn # perform operation
fnmsub.s f26, f7, f13, f2, rmm # perform operation
fnmsub.s f26, f7, f13, f2, rne # perform operation
fnmsub.s f26, f7, f13, f2, rtz # perform operation
fnmsub.s f26, f7, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x29, 0xc908fc2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x01c59cff # load x3 with value 0x01c59cff
sw x3, 0(x2) # store 0x01c59cff in memory
flw f7, 0(x2) # load 0x01c59cff from memory into f7
fnmsub.s f29, f22, f17, f7, dyn # perform operation
fnmsub.s f29, f22, f17, f7, rdn # perform operation
fnmsub.s f29, f22, f17, f7, rmm # perform operation
fnmsub.s f29, f22, f17, f7, rne # perform operation
fnmsub.s f29, f22, f17, f7, rtz # perform operation
fnmsub.s f29, f22, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x16, 0x102dd322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x042014c0 # load x3 with value 0x042014c0
sw x3, 0(x2) # store 0x042014c0 in memory
flw f10, 0(x2) # load 0x042014c0 from memory into f10
fnmsub.s f16, f25, f31, f10, dyn # perform operation
fnmsub.s f16, f25, f31, f10, rdn # perform operation
fnmsub.s f16, f25, f31, f10, rmm # perform operation
fnmsub.s f16, f25, f31, f10, rne # perform operation
fnmsub.s f16, f25, f31, f10, rtz # perform operation
fnmsub.s f16, f25, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x5, 0xd1b3e914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x3d59ee21 # load x3 with value 0x3d59ee21
sw x3, 0(x2) # store 0x3d59ee21 in memory
flw f19, 0(x2) # load 0x3d59ee21 from memory into f19
fnmsub.s f5, f7, f22, f19, dyn # perform operation
fnmsub.s f5, f7, f22, f19, rdn # perform operation
fnmsub.s f5, f7, f22, f19, rmm # perform operation
fnmsub.s f5, f7, f22, f19, rne # perform operation
fnmsub.s f5, f7, f22, f19, rtz # perform operation
fnmsub.s f5, f7, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x27, 0x83638c33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xdbd8f8bc # load x3 with value 0xdbd8f8bc
sw x3, 0(x2) # store 0xdbd8f8bc in memory
flw f13, 0(x2) # load 0xdbd8f8bc from memory into f13
fnmsub.s f27, f2, f1, f13, dyn # perform operation
fnmsub.s f27, f2, f1, f13, rdn # perform operation
fnmsub.s f27, f2, f1, f13, rmm # perform operation
fnmsub.s f27, f2, f1, f13, rne # perform operation
fnmsub.s f27, f2, f1, f13, rtz # perform operation
fnmsub.s f27, f2, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x17, 0x26b21329 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x30367ac5 # load x3 with value 0x30367ac5
sw x3, 0(x2) # store 0x30367ac5 in memory
flw f23, 0(x2) # load 0x30367ac5 from memory into f23
fnmsub.s f17, f9, f14, f23, dyn # perform operation
fnmsub.s f17, f9, f14, f23, rdn # perform operation
fnmsub.s f17, f9, f14, f23, rmm # perform operation
fnmsub.s f17, f9, f14, f23, rne # perform operation
fnmsub.s f17, f9, f14, f23, rtz # perform operation
fnmsub.s f17, f9, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f9, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x15, 0x8af346f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xc166beae # load x3 with value 0xc166beae
sw x3, 0(x2) # store 0xc166beae in memory
flw f24, 0(x2) # load 0xc166beae from memory into f24
fnmsub.s f15, f19, f11, f24, dyn # perform operation
fnmsub.s f15, f19, f11, f24, rdn # perform operation
fnmsub.s f15, f19, f11, f24, rmm # perform operation
fnmsub.s f15, f19, f11, f24, rne # perform operation
fnmsub.s f15, f19, f11, f24, rtz # perform operation
fnmsub.s f15, f19, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x15, 0xe5d83337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x77514f2f # load x3 with value 0x77514f2f
sw x3, 0(x2) # store 0x77514f2f in memory
flw f21, 0(x2) # load 0x77514f2f from memory into f21
fnmsub.s f15, f5, f30, f21, dyn # perform operation
fnmsub.s f15, f5, f30, f21, rdn # perform operation
fnmsub.s f15, f5, f30, f21, rmm # perform operation
fnmsub.s f15, f5, f30, f21, rne # perform operation
fnmsub.s f15, f5, f30, f21, rtz # perform operation
fnmsub.s f15, f5, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x24, 0x21725e1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xeff40f5e # load x3 with value 0xeff40f5e
sw x3, 0(x2) # store 0xeff40f5e in memory
flw f26, 0(x2) # load 0xeff40f5e from memory into f26
fnmsub.s f24, f11, f3, f26, dyn # perform operation
fnmsub.s f24, f11, f3, f26, rdn # perform operation
fnmsub.s f24, f11, f3, f26, rmm # perform operation
fnmsub.s f24, f11, f3, f26, rne # perform operation
fnmsub.s f24, f11, f3, f26, rtz # perform operation
fnmsub.s f24, f11, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f11, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x17, 0xcd87c805 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0xf21e4f6b # load x3 with value 0xf21e4f6b
sw x3, 0(x2) # store 0xf21e4f6b in memory
flw f13, 0(x2) # load 0xf21e4f6b from memory into f13
fnmsub.s f17, f1, f28, f13, dyn # perform operation
fnmsub.s f17, f1, f28, f13, rdn # perform operation
fnmsub.s f17, f1, f28, f13, rmm # perform operation
fnmsub.s f17, f1, f28, f13, rne # perform operation
fnmsub.s f17, f1, f28, f13, rtz # perform operation
fnmsub.s f17, f1, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x10, 0xee7583fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x0efb2f15 # load x3 with value 0x0efb2f15
sw x3, 0(x2) # store 0x0efb2f15 in memory
flw f3, 0(x2) # load 0x0efb2f15 from memory into f3
fnmsub.s f10, f20, f27, f3, dyn # perform operation
fnmsub.s f10, f20, f27, f3, rdn # perform operation
fnmsub.s f10, f20, f27, f3, rmm # perform operation
fnmsub.s f10, f20, f27, f3, rne # perform operation
fnmsub.s f10, f20, f27, f3, rtz # perform operation
fnmsub.s f10, f20, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x15, 0xf66e9edb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x175770fe # load x3 with value 0x175770fe
sw x3, 0(x2) # store 0x175770fe in memory
flw f2, 0(x2) # load 0x175770fe from memory into f2
fnmsub.s f15, f7, f24, f2, dyn # perform operation
fnmsub.s f15, f7, f24, f2, rdn # perform operation
fnmsub.s f15, f7, f24, f2, rmm # perform operation
fnmsub.s f15, f7, f24, f2, rne # perform operation
fnmsub.s f15, f7, f24, f2, rtz # perform operation
fnmsub.s f15, f7, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x2, 0xa4ad581b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0xa6033a3b # load x3 with value 0xa6033a3b
sw x3, 0(x2) # store 0xa6033a3b in memory
flw f21, 0(x2) # load 0xa6033a3b from memory into f21
fnmsub.s f2, f22, f12, f21, dyn # perform operation
fnmsub.s f2, f22, f12, f21, rdn # perform operation
fnmsub.s f2, f22, f12, f21, rmm # perform operation
fnmsub.s f2, f22, f12, f21, rne # perform operation
fnmsub.s f2, f22, f12, f21, rtz # perform operation
fnmsub.s f2, f22, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f22, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x4, 0x54dab160 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0xf8b70924 # load x3 with value 0xf8b70924
sw x3, 0(x2) # store 0xf8b70924 in memory
flw f19, 0(x2) # load 0xf8b70924 from memory into f19
fnmsub.s f4, f14, f25, f19, dyn # perform operation
fnmsub.s f4, f14, f25, f19, rdn # perform operation
fnmsub.s f4, f14, f25, f19, rmm # perform operation
fnmsub.s f4, f14, f25, f19, rne # perform operation
fnmsub.s f4, f14, f25, f19, rtz # perform operation
fnmsub.s f4, f14, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f14, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x3, 0x09955e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xee006ed4 # load x3 with value 0xee006ed4
sw x3, 0(x2) # store 0xee006ed4 in memory
flw f12, 0(x2) # load 0xee006ed4 from memory into f12
fnmsub.s f3, f4, f28, f12, dyn # perform operation
fnmsub.s f3, f4, f28, f12, rdn # perform operation
fnmsub.s f3, f4, f28, f12, rmm # perform operation
fnmsub.s f3, f4, f28, f12, rne # perform operation
fnmsub.s f3, f4, f28, f12, rtz # perform operation
fnmsub.s f3, f4, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f4, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f4, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x9, 0x4867e916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x0aaa6361 # load x3 with value 0x0aaa6361
sw x3, 0(x2) # store 0x0aaa6361 in memory
flw f31, 0(x2) # load 0x0aaa6361 from memory into f31
fnmsub.s f9, f6, f12, f31, dyn # perform operation
fnmsub.s f9, f6, f12, f31, rdn # perform operation
fnmsub.s f9, f6, f12, f31, rmm # perform operation
fnmsub.s f9, f6, f12, f31, rne # perform operation
fnmsub.s f9, f6, f12, f31, rtz # perform operation
fnmsub.s f9, f6, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x29, 0x83af11e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x11dd445c # load x3 with value 0x11dd445c
sw x3, 0(x2) # store 0x11dd445c in memory
flw f1, 0(x2) # load 0x11dd445c from memory into f1
fnmsub.s f29, f30, f6, f1, dyn # perform operation
fnmsub.s f29, f30, f6, f1, rdn # perform operation
fnmsub.s f29, f30, f6, f1, rmm # perform operation
fnmsub.s f29, f30, f6, f1, rne # perform operation
fnmsub.s f29, f30, f6, f1, rtz # perform operation
fnmsub.s f29, f30, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f30, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x29, 0xee0a45b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x371dbd7d # load x3 with value 0x371dbd7d
sw x3, 0(x2) # store 0x371dbd7d in memory
flw f14, 0(x2) # load 0x371dbd7d from memory into f14
fnmsub.s f29, f31, f28, f14, dyn # perform operation
fnmsub.s f29, f31, f28, f14, rdn # perform operation
fnmsub.s f29, f31, f28, f14, rmm # perform operation
fnmsub.s f29, f31, f28, f14, rne # perform operation
fnmsub.s f29, f31, f28, f14, rtz # perform operation
fnmsub.s f29, f31, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f31, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x4, 0xff0ff021 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x88d2470d # load x3 with value 0x88d2470d
sw x3, 0(x2) # store 0x88d2470d in memory
flw f9, 0(x2) # load 0x88d2470d from memory into f9
fnmsub.s f4, f18, f26, f9, dyn # perform operation
fnmsub.s f4, f18, f26, f9, rdn # perform operation
fnmsub.s f4, f18, f26, f9, rmm # perform operation
fnmsub.s f4, f18, f26, f9, rne # perform operation
fnmsub.s f4, f18, f26, f9, rtz # perform operation
fnmsub.s f4, f18, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f18, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x22, 0x5386c895 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x92396885 # load x3 with value 0x92396885
sw x3, 0(x2) # store 0x92396885 in memory
flw f4, 0(x2) # load 0x92396885 from memory into f4
fnmsub.s f22, f19, f5, f4, dyn # perform operation
fnmsub.s f22, f19, f5, f4, rdn # perform operation
fnmsub.s f22, f19, f5, f4, rmm # perform operation
fnmsub.s f22, f19, f5, f4, rne # perform operation
fnmsub.s f22, f19, f5, f4, rtz # perform operation
fnmsub.s f22, f19, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x20, 0xc1ae66a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0xbc1e91d5 # load x3 with value 0xbc1e91d5
sw x3, 0(x2) # store 0xbc1e91d5 in memory
flw f8, 0(x2) # load 0xbc1e91d5 from memory into f8
fnmsub.s f20, f27, f25, f8, dyn # perform operation
fnmsub.s f20, f27, f25, f8, rdn # perform operation
fnmsub.s f20, f27, f25, f8, rmm # perform operation
fnmsub.s f20, f27, f25, f8, rne # perform operation
fnmsub.s f20, f27, f25, f8, rtz # perform operation
fnmsub.s f20, f27, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x18, 0xee629313 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x3fdb642b # load x3 with value 0x3fdb642b
sw x3, 0(x2) # store 0x3fdb642b in memory
flw f19, 0(x2) # load 0x3fdb642b from memory into f19
fnmsub.s f18, f12, f22, f19, dyn # perform operation
fnmsub.s f18, f12, f22, f19, rdn # perform operation
fnmsub.s f18, f12, f22, f19, rmm # perform operation
fnmsub.s f18, f12, f22, f19, rne # perform operation
fnmsub.s f18, f12, f22, f19, rtz # perform operation
fnmsub.s f18, f12, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f12, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f12, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f12, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f12, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f12, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x31, 0xf052ec13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0xe71c2d74 # load x3 with value 0xe71c2d74
sw x3, 0(x2) # store 0xe71c2d74 in memory
flw f7, 0(x2) # load 0xe71c2d74 from memory into f7
fnmsub.s f31, f27, f5, f7, dyn # perform operation
fnmsub.s f31, f27, f5, f7, rdn # perform operation
fnmsub.s f31, f27, f5, f7, rmm # perform operation
fnmsub.s f31, f27, f5, f7, rne # perform operation
fnmsub.s f31, f27, f5, f7, rtz # perform operation
fnmsub.s f31, f27, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f27, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x12, 0x68a9c7e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xf3e0752d # load x3 with value 0xf3e0752d
sw x3, 0(x2) # store 0xf3e0752d in memory
flw f28, 0(x2) # load 0xf3e0752d from memory into f28
fnmsub.s f12, f1, f15, f28, dyn # perform operation
fnmsub.s f12, f1, f15, f28, rdn # perform operation
fnmsub.s f12, f1, f15, f28, rmm # perform operation
fnmsub.s f12, f1, f15, f28, rne # perform operation
fnmsub.s f12, f1, f15, f28, rtz # perform operation
fnmsub.s f12, f1, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f1, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f1, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x23, 0xa5724908 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0xc034ae4c # load x3 with value 0xc034ae4c
sw x3, 0(x2) # store 0xc034ae4c in memory
flw f20, 0(x2) # load 0xc034ae4c from memory into f20
fnmsub.s f23, f13, f19, f20, dyn # perform operation
fnmsub.s f23, f13, f19, f20, rdn # perform operation
fnmsub.s f23, f13, f19, f20, rmm # perform operation
fnmsub.s f23, f13, f19, f20, rne # perform operation
fnmsub.s f23, f13, f19, f20, rtz # perform operation
fnmsub.s f23, f13, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x16, 0x2d368477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x2be8b47d # load x3 with value 0x2be8b47d
sw x3, 0(x2) # store 0x2be8b47d in memory
flw f3, 0(x2) # load 0x2be8b47d from memory into f3
fnmsub.s f16, f25, f24, f3, dyn # perform operation
fnmsub.s f16, f25, f24, f3, rdn # perform operation
fnmsub.s f16, f25, f24, f3, rmm # perform operation
fnmsub.s f16, f25, f24, f3, rne # perform operation
fnmsub.s f16, f25, f24, f3, rtz # perform operation
fnmsub.s f16, f25, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x27, 0x92e7e46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x09643c76 # load x3 with value 0x09643c76
sw x3, 0(x2) # store 0x09643c76 in memory
flw f18, 0(x2) # load 0x09643c76 from memory into f18
fnmsub.s f27, f6, f7, f18, dyn # perform operation
fnmsub.s f27, f6, f7, f18, rdn # perform operation
fnmsub.s f27, f6, f7, f18, rmm # perform operation
fnmsub.s f27, f6, f7, f18, rne # perform operation
fnmsub.s f27, f6, f7, f18, rtz # perform operation
fnmsub.s f27, f6, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x6, 0x155c4861 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x52b3999d # load x3 with value 0x52b3999d
sw x3, 0(x2) # store 0x52b3999d in memory
flw f15, 0(x2) # load 0x52b3999d from memory into f15
fnmsub.s f6, f20, f3, f15, dyn # perform operation
fnmsub.s f6, f20, f3, f15, rdn # perform operation
fnmsub.s f6, f20, f3, f15, rmm # perform operation
fnmsub.s f6, f20, f3, f15, rne # perform operation
fnmsub.s f6, f20, f3, f15, rtz # perform operation
fnmsub.s f6, f20, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x22, 0xb9e615ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x2bfc61dd # load x3 with value 0x2bfc61dd
sw x3, 0(x2) # store 0x2bfc61dd in memory
flw f5, 0(x2) # load 0x2bfc61dd from memory into f5
fnmsub.s f22, f14, f23, f5, dyn # perform operation
fnmsub.s f22, f14, f23, f5, rdn # perform operation
fnmsub.s f22, f14, f23, f5, rmm # perform operation
fnmsub.s f22, f14, f23, f5, rne # perform operation
fnmsub.s f22, f14, f23, f5, rtz # perform operation
fnmsub.s f22, f14, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x11, 0x485aa7d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xaa9bce95 # load x3 with value 0xaa9bce95
sw x3, 0(x2) # store 0xaa9bce95 in memory
flw f4, 0(x2) # load 0xaa9bce95 from memory into f4
fnmsub.s f11, f23, f26, f4, dyn # perform operation
fnmsub.s f11, f23, f26, f4, rdn # perform operation
fnmsub.s f11, f23, f26, f4, rmm # perform operation
fnmsub.s f11, f23, f26, f4, rne # perform operation
fnmsub.s f11, f23, f26, f4, rtz # perform operation
fnmsub.s f11, f23, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x22, 0x2d7e49f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x144b2a63 # load x3 with value 0x144b2a63
sw x3, 0(x2) # store 0x144b2a63 in memory
flw f21, 0(x2) # load 0x144b2a63 from memory into f21
fnmsub.s f22, f23, f7, f21, dyn # perform operation
fnmsub.s f22, f23, f7, f21, rdn # perform operation
fnmsub.s f22, f23, f7, f21, rmm # perform operation
fnmsub.s f22, f23, f7, f21, rne # perform operation
fnmsub.s f22, f23, f7, f21, rtz # perform operation
fnmsub.s f22, f23, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f23, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x5, 0x8096584e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0xad7fbe2a # load x3 with value 0xad7fbe2a
sw x3, 0(x2) # store 0xad7fbe2a in memory
flw f31, 0(x2) # load 0xad7fbe2a from memory into f31
fnmsub.s f5, f24, f6, f31, dyn # perform operation
fnmsub.s f5, f24, f6, f31, rdn # perform operation
fnmsub.s f5, f24, f6, f31, rmm # perform operation
fnmsub.s f5, f24, f6, f31, rne # perform operation
fnmsub.s f5, f24, f6, f31, rtz # perform operation
fnmsub.s f5, f24, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x28, 0xf5f9483f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xcd62508b # load x3 with value 0xcd62508b
sw x3, 0(x2) # store 0xcd62508b in memory
flw f4, 0(x2) # load 0xcd62508b from memory into f4
fnmsub.s f28, f5, f30, f4, dyn # perform operation
fnmsub.s f28, f5, f30, f4, rdn # perform operation
fnmsub.s f28, f5, f30, f4, rmm # perform operation
fnmsub.s f28, f5, f30, f4, rne # perform operation
fnmsub.s f28, f5, f30, f4, rtz # perform operation
fnmsub.s f28, f5, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f5, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f5, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f5, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f5, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f5, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x4, 0xfda3caed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x9922b8b6 # load x3 with value 0x9922b8b6
sw x3, 0(x2) # store 0x9922b8b6 in memory
flw f3, 0(x2) # load 0x9922b8b6 from memory into f3
fnmsub.s f4, f26, f24, f3, dyn # perform operation
fnmsub.s f4, f26, f24, f3, rdn # perform operation
fnmsub.s f4, f26, f24, f3, rmm # perform operation
fnmsub.s f4, f26, f24, f3, rne # perform operation
fnmsub.s f4, f26, f24, f3, rtz # perform operation
fnmsub.s f4, f26, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f26, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f26, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f26, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f26, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f26, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x26, 0xc8aa92ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0xe4a324e9 # load x3 with value 0xe4a324e9
sw x3, 0(x2) # store 0xe4a324e9 in memory
flw f28, 0(x2) # load 0xe4a324e9 from memory into f28
fnmsub.s f26, f15, f7, f28, dyn # perform operation
fnmsub.s f26, f15, f7, f28, rdn # perform operation
fnmsub.s f26, f15, f7, f28, rmm # perform operation
fnmsub.s f26, f15, f7, f28, rne # perform operation
fnmsub.s f26, f15, f7, f28, rtz # perform operation
fnmsub.s f26, f15, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f15, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f15, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f15, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f15, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f15, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x9, 0x417b6f97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x7717ec3f # load x3 with value 0x7717ec3f
sw x3, 0(x2) # store 0x7717ec3f in memory
flw f27, 0(x2) # load 0x7717ec3f from memory into f27
fnmsub.s f9, f18, f12, f27, dyn # perform operation
fnmsub.s f9, f18, f12, f27, rdn # perform operation
fnmsub.s f9, f18, f12, f27, rmm # perform operation
fnmsub.s f9, f18, f12, f27, rne # perform operation
fnmsub.s f9, f18, f12, f27, rtz # perform operation
fnmsub.s f9, f18, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f18, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x9, 0xc8731f4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x66c0cfbf # load x3 with value 0x66c0cfbf
sw x3, 0(x2) # store 0x66c0cfbf in memory
flw f17, 0(x2) # load 0x66c0cfbf from memory into f17
fnmsub.s f9, f21, f25, f17, dyn # perform operation
fnmsub.s f9, f21, f25, f17, rdn # perform operation
fnmsub.s f9, f21, f25, f17, rmm # perform operation
fnmsub.s f9, f21, f25, f17, rne # perform operation
fnmsub.s f9, f21, f25, f17, rtz # perform operation
fnmsub.s f9, f21, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f21, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x1, 0x6867a350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0xc781a70c # load x3 with value 0xc781a70c
sw x3, 0(x2) # store 0xc781a70c in memory
flw f30, 0(x2) # load 0xc781a70c from memory into f30
fnmsub.s f1, f27, f15, f30, dyn # perform operation
fnmsub.s f1, f27, f15, f30, rdn # perform operation
fnmsub.s f1, f27, f15, f30, rmm # perform operation
fnmsub.s f1, f27, f15, f30, rne # perform operation
fnmsub.s f1, f27, f15, f30, rtz # perform operation
fnmsub.s f1, f27, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f27, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x4, 0xca65a9a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x2510ae66 # load x3 with value 0x2510ae66
sw x3, 0(x2) # store 0x2510ae66 in memory
flw f21, 0(x2) # load 0x2510ae66 from memory into f21
fnmsub.s f4, f28, f6, f21, dyn # perform operation
fnmsub.s f4, f28, f6, f21, rdn # perform operation
fnmsub.s f4, f28, f6, f21, rmm # perform operation
fnmsub.s f4, f28, f6, f21, rne # perform operation
fnmsub.s f4, f28, f6, f21, rtz # perform operation
fnmsub.s f4, f28, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f28, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f28, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x30, 0xb4140b21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0xe832495a # load x3 with value 0xe832495a
sw x3, 0(x2) # store 0xe832495a in memory
flw f1, 0(x2) # load 0xe832495a from memory into f1
fnmsub.s f30, f11, f15, f1, dyn # perform operation
fnmsub.s f30, f11, f15, f1, rdn # perform operation
fnmsub.s f30, f11, f15, f1, rmm # perform operation
fnmsub.s f30, f11, f15, f1, rne # perform operation
fnmsub.s f30, f11, f15, f1, rtz # perform operation
fnmsub.s f30, f11, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f11, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x28, 0x33b68394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x9dd94456 # load x3 with value 0x9dd94456
sw x3, 0(x2) # store 0x9dd94456 in memory
flw f7, 0(x2) # load 0x9dd94456 from memory into f7
fnmsub.s f28, f1, f31, f7, dyn # perform operation
fnmsub.s f28, f1, f31, f7, rdn # perform operation
fnmsub.s f28, f1, f31, f7, rmm # perform operation
fnmsub.s f28, f1, f31, f7, rne # perform operation
fnmsub.s f28, f1, f31, f7, rtz # perform operation
fnmsub.s f28, f1, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f1, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x3, 0x4242a5a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x7a54768c # load x3 with value 0x7a54768c
sw x3, 0(x2) # store 0x7a54768c in memory
flw f9, 0(x2) # load 0x7a54768c from memory into f9
fnmsub.s f3, f27, f5, f9, dyn # perform operation
fnmsub.s f3, f27, f5, f9, rdn # perform operation
fnmsub.s f3, f27, f5, f9, rmm # perform operation
fnmsub.s f3, f27, f5, f9, rne # perform operation
fnmsub.s f3, f27, f5, f9, rtz # perform operation
fnmsub.s f3, f27, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x25, 0xa04cd3d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x61f8b8ac # load x3 with value 0x61f8b8ac
sw x3, 0(x2) # store 0x61f8b8ac in memory
flw f14, 0(x2) # load 0x61f8b8ac from memory into f14
fnmsub.s f25, f6, f2, f14, dyn # perform operation
fnmsub.s f25, f6, f2, f14, rdn # perform operation
fnmsub.s f25, f6, f2, f14, rmm # perform operation
fnmsub.s f25, f6, f2, f14, rne # perform operation
fnmsub.s f25, f6, f2, f14, rtz # perform operation
fnmsub.s f25, f6, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f6, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x1, 0xcb9a14c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0xcfd61f24 # load x3 with value 0xcfd61f24
sw x3, 0(x2) # store 0xcfd61f24 in memory
flw f4, 0(x2) # load 0xcfd61f24 from memory into f4
fnmsub.s f1, f18, f25, f4, dyn # perform operation
fnmsub.s f1, f18, f25, f4, rdn # perform operation
fnmsub.s f1, f18, f25, f4, rmm # perform operation
fnmsub.s f1, f18, f25, f4, rne # perform operation
fnmsub.s f1, f18, f25, f4, rtz # perform operation
fnmsub.s f1, f18, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x27, 0x9ef7d698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x339c4bc2 # load x3 with value 0x339c4bc2
sw x3, 0(x2) # store 0x339c4bc2 in memory
flw f22, 0(x2) # load 0x339c4bc2 from memory into f22
fnmsub.s f27, f30, f18, f22, dyn # perform operation
fnmsub.s f27, f30, f18, f22, rdn # perform operation
fnmsub.s f27, f30, f18, f22, rmm # perform operation
fnmsub.s f27, f30, f18, f22, rne # perform operation
fnmsub.s f27, f30, f18, f22, rtz # perform operation
fnmsub.s f27, f30, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f30, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x18, 0x7f7b380e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xc0474ae9 # load x3 with value 0xc0474ae9
sw x3, 0(x2) # store 0xc0474ae9 in memory
flw f11, 0(x2) # load 0xc0474ae9 from memory into f11
fnmsub.s f18, f20, f25, f11, dyn # perform operation
fnmsub.s f18, f20, f25, f11, rdn # perform operation
fnmsub.s f18, f20, f25, f11, rmm # perform operation
fnmsub.s f18, f20, f25, f11, rne # perform operation
fnmsub.s f18, f20, f25, f11, rtz # perform operation
fnmsub.s f18, f20, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x15, 0x57e65a9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xe424f96b # load x3 with value 0xe424f96b
sw x3, 0(x2) # store 0xe424f96b in memory
flw f30, 0(x2) # load 0xe424f96b from memory into f30
fnmsub.s f15, f6, f14, f30, dyn # perform operation
fnmsub.s f15, f6, f14, f30, rdn # perform operation
fnmsub.s f15, f6, f14, f30, rmm # perform operation
fnmsub.s f15, f6, f14, f30, rne # perform operation
fnmsub.s f15, f6, f14, f30, rtz # perform operation
fnmsub.s f15, f6, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f6, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x27, 0x87fb2b90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x2879c9c9 # load x3 with value 0x2879c9c9
sw x3, 0(x2) # store 0x2879c9c9 in memory
flw f11, 0(x2) # load 0x2879c9c9 from memory into f11
fnmsub.s f27, f18, f22, f11, dyn # perform operation
fnmsub.s f27, f18, f22, f11, rdn # perform operation
fnmsub.s f27, f18, f22, f11, rmm # perform operation
fnmsub.s f27, f18, f22, f11, rne # perform operation
fnmsub.s f27, f18, f22, f11, rtz # perform operation
fnmsub.s f27, f18, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f18, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x23, 0xe9bdfb74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x62d9932a # load x3 with value 0x62d9932a
sw x3, 0(x2) # store 0x62d9932a in memory
flw f11, 0(x2) # load 0x62d9932a from memory into f11
fnmsub.s f23, f1, f4, f11, dyn # perform operation
fnmsub.s f23, f1, f4, f11, rdn # perform operation
fnmsub.s f23, f1, f4, f11, rmm # perform operation
fnmsub.s f23, f1, f4, f11, rne # perform operation
fnmsub.s f23, f1, f4, f11, rtz # perform operation
fnmsub.s f23, f1, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f1, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f1, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f1, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f1, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f1, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x20, 0xfad78a52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x02752038 # load x3 with value 0x02752038
sw x3, 0(x2) # store 0x02752038 in memory
flw f5, 0(x2) # load 0x02752038 from memory into f5
fnmsub.s f20, f27, f24, f5, dyn # perform operation
fnmsub.s f20, f27, f24, f5, rdn # perform operation
fnmsub.s f20, f27, f24, f5, rmm # perform operation
fnmsub.s f20, f27, f24, f5, rne # perform operation
fnmsub.s f20, f27, f24, f5, rtz # perform operation
fnmsub.s f20, f27, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x28, 0xb79d482d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xeb53405e # load x3 with value 0xeb53405e
sw x3, 0(x2) # store 0xeb53405e in memory
flw f13, 0(x2) # load 0xeb53405e from memory into f13
fnmsub.s f28, f15, f22, f13, dyn # perform operation
fnmsub.s f28, f15, f22, f13, rdn # perform operation
fnmsub.s f28, f15, f22, f13, rmm # perform operation
fnmsub.s f28, f15, f22, f13, rne # perform operation
fnmsub.s f28, f15, f22, f13, rtz # perform operation
fnmsub.s f28, f15, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f15, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x8, 0xfeb0a761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x0e12b26f # load x3 with value 0x0e12b26f
sw x3, 0(x2) # store 0x0e12b26f in memory
flw f2, 0(x2) # load 0x0e12b26f from memory into f2
fnmsub.s f8, f30, f11, f2, dyn # perform operation
fnmsub.s f8, f30, f11, f2, rdn # perform operation
fnmsub.s f8, f30, f11, f2, rmm # perform operation
fnmsub.s f8, f30, f11, f2, rne # perform operation
fnmsub.s f8, f30, f11, f2, rtz # perform operation
fnmsub.s f8, f30, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f30, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x18, 0xe5a506c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x85a32753 # load x3 with value 0x85a32753
sw x3, 0(x2) # store 0x85a32753 in memory
flw f3, 0(x2) # load 0x85a32753 from memory into f3
fnmsub.s f18, f11, f1, f3, dyn # perform operation
fnmsub.s f18, f11, f1, f3, rdn # perform operation
fnmsub.s f18, f11, f1, f3, rmm # perform operation
fnmsub.s f18, f11, f1, f3, rne # perform operation
fnmsub.s f18, f11, f1, f3, rtz # perform operation
fnmsub.s f18, f11, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x12, 0x355f1bcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xf831cafd # load x3 with value 0xf831cafd
sw x3, 0(x2) # store 0xf831cafd in memory
flw f21, 0(x2) # load 0xf831cafd from memory into f21
fnmsub.s f12, f5, f6, f21, dyn # perform operation
fnmsub.s f12, f5, f6, f21, rdn # perform operation
fnmsub.s f12, f5, f6, f21, rmm # perform operation
fnmsub.s f12, f5, f6, f21, rne # perform operation
fnmsub.s f12, f5, f6, f21, rtz # perform operation
fnmsub.s f12, f5, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x28, 0xbfd31a63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0xdb6aa458 # load x3 with value 0xdb6aa458
sw x3, 0(x2) # store 0xdb6aa458 in memory
flw f23, 0(x2) # load 0xdb6aa458 from memory into f23
fnmsub.s f28, f21, f13, f23, dyn # perform operation
fnmsub.s f28, f21, f13, f23, rdn # perform operation
fnmsub.s f28, f21, f13, f23, rmm # perform operation
fnmsub.s f28, f21, f13, f23, rne # perform operation
fnmsub.s f28, f21, f13, f23, rtz # perform operation
fnmsub.s f28, f21, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f21, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f21, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f21, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f21, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f21, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x24, 0xad4e84d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x0b14c6bc # load x3 with value 0x0b14c6bc
sw x3, 0(x2) # store 0x0b14c6bc in memory
flw f21, 0(x2) # load 0x0b14c6bc from memory into f21
fnmsub.s f24, f30, f10, f21, dyn # perform operation
fnmsub.s f24, f30, f10, f21, rdn # perform operation
fnmsub.s f24, f30, f10, f21, rmm # perform operation
fnmsub.s f24, f30, f10, f21, rne # perform operation
fnmsub.s f24, f30, f10, f21, rtz # perform operation
fnmsub.s f24, f30, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f30, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f30, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x16, 0xbec56e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x15c1a85d # load x3 with value 0x15c1a85d
sw x3, 0(x2) # store 0x15c1a85d in memory
flw f19, 0(x2) # load 0x15c1a85d from memory into f19
fnmsub.s f16, f24, f26, f19, dyn # perform operation
fnmsub.s f16, f24, f26, f19, rdn # perform operation
fnmsub.s f16, f24, f26, f19, rmm # perform operation
fnmsub.s f16, f24, f26, f19, rne # perform operation
fnmsub.s f16, f24, f26, f19, rtz # perform operation
fnmsub.s f16, f24, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x26, 0x09373374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xf36b9760 # load x3 with value 0xf36b9760
sw x3, 0(x2) # store 0xf36b9760 in memory
flw f1, 0(x2) # load 0xf36b9760 from memory into f1
fnmsub.s f26, f21, f17, f1, dyn # perform operation
fnmsub.s f26, f21, f17, f1, rdn # perform operation
fnmsub.s f26, f21, f17, f1, rmm # perform operation
fnmsub.s f26, f21, f17, f1, rne # perform operation
fnmsub.s f26, f21, f17, f1, rtz # perform operation
fnmsub.s f26, f21, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f21, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x23, 0x2ba3ddf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0xb3b27327 # load x3 with value 0xb3b27327
sw x3, 0(x2) # store 0xb3b27327 in memory
flw f25, 0(x2) # load 0xb3b27327 from memory into f25
fnmsub.s f23, f18, f19, f25, dyn # perform operation
fnmsub.s f23, f18, f19, f25, rdn # perform operation
fnmsub.s f23, f18, f19, f25, rmm # perform operation
fnmsub.s f23, f18, f19, f25, rne # perform operation
fnmsub.s f23, f18, f19, f25, rtz # perform operation
fnmsub.s f23, f18, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f18, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x8, 0x25c1c5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x94d5aed8 # load x3 with value 0x94d5aed8
sw x3, 0(x2) # store 0x94d5aed8 in memory
flw f17, 0(x2) # load 0x94d5aed8 from memory into f17
fnmsub.s f8, f29, f31, f17, dyn # perform operation
fnmsub.s f8, f29, f31, f17, rdn # perform operation
fnmsub.s f8, f29, f31, f17, rmm # perform operation
fnmsub.s f8, f29, f31, f17, rne # perform operation
fnmsub.s f8, f29, f31, f17, rtz # perform operation
fnmsub.s f8, f29, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x26, 0x8c590f6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0xc1c49489 # load x3 with value 0xc1c49489
sw x3, 0(x2) # store 0xc1c49489 in memory
flw f31, 0(x2) # load 0xc1c49489 from memory into f31
fnmsub.s f26, f18, f10, f31, dyn # perform operation
fnmsub.s f26, f18, f10, f31, rdn # perform operation
fnmsub.s f26, f18, f10, f31, rmm # perform operation
fnmsub.s f26, f18, f10, f31, rne # perform operation
fnmsub.s f26, f18, f10, f31, rtz # perform operation
fnmsub.s f26, f18, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f18, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f18, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f18, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f18, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f18, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x19, 0x4cdf9d06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xf0514770 # load x3 with value 0xf0514770
sw x3, 0(x2) # store 0xf0514770 in memory
flw f17, 0(x2) # load 0xf0514770 from memory into f17
fnmsub.s f19, f4, f23, f17, dyn # perform operation
fnmsub.s f19, f4, f23, f17, rdn # perform operation
fnmsub.s f19, f4, f23, f17, rmm # perform operation
fnmsub.s f19, f4, f23, f17, rne # perform operation
fnmsub.s f19, f4, f23, f17, rtz # perform operation
fnmsub.s f19, f4, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f4, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f4, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f4, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f4, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f4, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x14, 0xcdc35533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xd21870cf # load x3 with value 0xd21870cf
sw x3, 0(x2) # store 0xd21870cf in memory
flw f17, 0(x2) # load 0xd21870cf from memory into f17
fnmsub.s f14, f10, f12, f17, dyn # perform operation
fnmsub.s f14, f10, f12, f17, rdn # perform operation
fnmsub.s f14, f10, f12, f17, rmm # perform operation
fnmsub.s f14, f10, f12, f17, rne # perform operation
fnmsub.s f14, f10, f12, f17, rtz # perform operation
fnmsub.s f14, f10, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f10, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f10, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f10, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f10, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f10, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x18, 0xc6cfb157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0xd5baf59b # load x3 with value 0xd5baf59b
sw x3, 0(x2) # store 0xd5baf59b in memory
flw f24, 0(x2) # load 0xd5baf59b from memory into f24
fnmsub.s f18, f3, f26, f24, dyn # perform operation
fnmsub.s f18, f3, f26, f24, rdn # perform operation
fnmsub.s f18, f3, f26, f24, rmm # perform operation
fnmsub.s f18, f3, f26, f24, rne # perform operation
fnmsub.s f18, f3, f26, f24, rtz # perform operation
fnmsub.s f18, f3, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f3, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x22, 0x090951d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x75ad219c # load x3 with value 0x75ad219c
sw x3, 0(x2) # store 0x75ad219c in memory
flw f27, 0(x2) # load 0x75ad219c from memory into f27
fnmsub.s f22, f11, f10, f27, dyn # perform operation
fnmsub.s f22, f11, f10, f27, rdn # perform operation
fnmsub.s f22, f11, f10, f27, rmm # perform operation
fnmsub.s f22, f11, f10, f27, rne # perform operation
fnmsub.s f22, f11, f10, f27, rtz # perform operation
fnmsub.s f22, f11, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f11, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f11, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f11, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f11, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f11, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x13, 0xa60a4015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x423d6eeb # load x3 with value 0x423d6eeb
sw x3, 0(x2) # store 0x423d6eeb in memory
flw f11, 0(x2) # load 0x423d6eeb from memory into f11
fnmsub.s f13, f25, f1, f11, dyn # perform operation
fnmsub.s f13, f25, f1, f11, rdn # perform operation
fnmsub.s f13, f25, f1, f11, rmm # perform operation
fnmsub.s f13, f25, f1, f11, rne # perform operation
fnmsub.s f13, f25, f1, f11, rtz # perform operation
fnmsub.s f13, f25, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f25, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x28, 0x3b58c210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0xd244aee5 # load x3 with value 0xd244aee5
sw x3, 0(x2) # store 0xd244aee5 in memory
flw f17, 0(x2) # load 0xd244aee5 from memory into f17
fnmsub.s f28, f5, f21, f17, dyn # perform operation
fnmsub.s f28, f5, f21, f17, rdn # perform operation
fnmsub.s f28, f5, f21, f17, rmm # perform operation
fnmsub.s f28, f5, f21, f17, rne # perform operation
fnmsub.s f28, f5, f21, f17, rtz # perform operation
fnmsub.s f28, f5, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f5, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x23, 0xe58d0953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xf493b70a # load x3 with value 0xf493b70a
sw x3, 0(x2) # store 0xf493b70a in memory
flw f8, 0(x2) # load 0xf493b70a from memory into f8
fnmsub.s f23, f25, f22, f8, dyn # perform operation
fnmsub.s f23, f25, f22, f8, rdn # perform operation
fnmsub.s f23, f25, f22, f8, rmm # perform operation
fnmsub.s f23, f25, f22, f8, rne # perform operation
fnmsub.s f23, f25, f22, f8, rtz # perform operation
fnmsub.s f23, f25, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x25, 0x29b71a19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x4e39c286 # load x3 with value 0x4e39c286
sw x3, 0(x2) # store 0x4e39c286 in memory
flw f30, 0(x2) # load 0x4e39c286 from memory into f30
fnmsub.s f25, f28, f14, f30, dyn # perform operation
fnmsub.s f25, f28, f14, f30, rdn # perform operation
fnmsub.s f25, f28, f14, f30, rmm # perform operation
fnmsub.s f25, f28, f14, f30, rne # perform operation
fnmsub.s f25, f28, f14, f30, rtz # perform operation
fnmsub.s f25, f28, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f28, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f28, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f28, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f28, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f28, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x1, 0x6d4fee03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0xd1036d51 # load x3 with value 0xd1036d51
sw x3, 0(x2) # store 0xd1036d51 in memory
flw f2, 0(x2) # load 0xd1036d51 from memory into f2
fnmsub.s f1, f9, f23, f2, dyn # perform operation
fnmsub.s f1, f9, f23, f2, rdn # perform operation
fnmsub.s f1, f9, f23, f2, rmm # perform operation
fnmsub.s f1, f9, f23, f2, rne # perform operation
fnmsub.s f1, f9, f23, f2, rtz # perform operation
fnmsub.s f1, f9, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f9, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x19, 0xf2b48ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x18c14481 # load x3 with value 0x18c14481
sw x3, 0(x2) # store 0x18c14481 in memory
flw f5, 0(x2) # load 0x18c14481 from memory into f5
fnmsub.s f19, f13, f9, f5, dyn # perform operation
fnmsub.s f19, f13, f9, f5, rdn # perform operation
fnmsub.s f19, f13, f9, f5, rmm # perform operation
fnmsub.s f19, f13, f9, f5, rne # perform operation
fnmsub.s f19, f13, f9, f5, rtz # perform operation
fnmsub.s f19, f13, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f13, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x12, 0x99ccaac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0xfce3267f # load x3 with value 0xfce3267f
sw x3, 0(x2) # store 0xfce3267f in memory
flw f16, 0(x2) # load 0xfce3267f from memory into f16
fnmsub.s f12, f13, f2, f16, dyn # perform operation
fnmsub.s f12, f13, f2, f16, rdn # perform operation
fnmsub.s f12, f13, f2, f16, rmm # perform operation
fnmsub.s f12, f13, f2, f16, rne # perform operation
fnmsub.s f12, f13, f2, f16, rtz # perform operation
fnmsub.s f12, f13, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f13, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f13, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x9, 0xa1409aaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x3334509a # load x3 with value 0x3334509a
sw x3, 0(x2) # store 0x3334509a in memory
flw f7, 0(x2) # load 0x3334509a from memory into f7
fnmsub.s f9, f26, f3, f7, dyn # perform operation
fnmsub.s f9, f26, f3, f7, rdn # perform operation
fnmsub.s f9, f26, f3, f7, rmm # perform operation
fnmsub.s f9, f26, f3, f7, rne # perform operation
fnmsub.s f9, f26, f3, f7, rtz # perform operation
fnmsub.s f9, f26, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x3, 0xbb24388f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xfa3da051 # load x3 with value 0xfa3da051
sw x3, 0(x2) # store 0xfa3da051 in memory
flw f1, 0(x2) # load 0xfa3da051 from memory into f1
fnmsub.s f3, f20, f11, f1, dyn # perform operation
fnmsub.s f3, f20, f11, f1, rdn # perform operation
fnmsub.s f3, f20, f11, f1, rmm # perform operation
fnmsub.s f3, f20, f11, f1, rne # perform operation
fnmsub.s f3, f20, f11, f1, rtz # perform operation
fnmsub.s f3, f20, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f20, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x11, 0x2ff212bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x2958c696 # load x3 with value 0x2958c696
sw x3, 0(x2) # store 0x2958c696 in memory
flw f7, 0(x2) # load 0x2958c696 from memory into f7
fnmsub.s f11, f28, f12, f7, dyn # perform operation
fnmsub.s f11, f28, f12, f7, rdn # perform operation
fnmsub.s f11, f28, f12, f7, rmm # perform operation
fnmsub.s f11, f28, f12, f7, rne # perform operation
fnmsub.s f11, f28, f12, f7, rtz # perform operation
fnmsub.s f11, f28, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f28, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f28, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f28, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f28, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f28, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x15, 0x9bcbb7d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xdaa8a31d # load x3 with value 0xdaa8a31d
sw x3, 0(x2) # store 0xdaa8a31d in memory
flw f26, 0(x2) # load 0xdaa8a31d from memory into f26
fnmsub.s f15, f27, f3, f26, dyn # perform operation
fnmsub.s f15, f27, f3, f26, rdn # perform operation
fnmsub.s f15, f27, f3, f26, rmm # perform operation
fnmsub.s f15, f27, f3, f26, rne # perform operation
fnmsub.s f15, f27, f3, f26, rtz # perform operation
fnmsub.s f15, f27, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f27, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x25, 0x3c555637 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x82f58c7e # load x3 with value 0x82f58c7e
sw x3, 0(x2) # store 0x82f58c7e in memory
flw f28, 0(x2) # load 0x82f58c7e from memory into f28
fnmsub.s f25, f15, f23, f28, dyn # perform operation
fnmsub.s f25, f15, f23, f28, rdn # perform operation
fnmsub.s f25, f15, f23, f28, rmm # perform operation
fnmsub.s f25, f15, f23, f28, rne # perform operation
fnmsub.s f25, f15, f23, f28, rtz # perform operation
fnmsub.s f25, f15, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x12, 0x41deabd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x47aaeee9 # load x3 with value 0x47aaeee9
sw x3, 0(x2) # store 0x47aaeee9 in memory
flw f29, 0(x2) # load 0x47aaeee9 from memory into f29
fnmsub.s f12, f28, f18, f29, dyn # perform operation
fnmsub.s f12, f28, f18, f29, rdn # perform operation
fnmsub.s f12, f28, f18, f29, rmm # perform operation
fnmsub.s f12, f28, f18, f29, rne # perform operation
fnmsub.s f12, f28, f18, f29, rtz # perform operation
fnmsub.s f12, f28, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x21, 0x43719e12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x2c121b01 # load x3 with value 0x2c121b01
sw x3, 0(x2) # store 0x2c121b01 in memory
flw f14, 0(x2) # load 0x2c121b01 from memory into f14
fnmsub.s f21, f19, f28, f14, dyn # perform operation
fnmsub.s f21, f19, f28, f14, rdn # perform operation
fnmsub.s f21, f19, f28, f14, rmm # perform operation
fnmsub.s f21, f19, f28, f14, rne # perform operation
fnmsub.s f21, f19, f28, f14, rtz # perform operation
fnmsub.s f21, f19, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f19, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x20, 0x9a096366 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xd3861e22 # load x3 with value 0xd3861e22
sw x3, 0(x2) # store 0xd3861e22 in memory
flw f1, 0(x2) # load 0xd3861e22 from memory into f1
fnmsub.s f20, f31, f23, f1, dyn # perform operation
fnmsub.s f20, f31, f23, f1, rdn # perform operation
fnmsub.s f20, f31, f23, f1, rmm # perform operation
fnmsub.s f20, f31, f23, f1, rne # perform operation
fnmsub.s f20, f31, f23, f1, rtz # perform operation
fnmsub.s f20, f31, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x21, 0xeef095c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x1fa95836 # load x3 with value 0x1fa95836
sw x3, 0(x2) # store 0x1fa95836 in memory
flw f15, 0(x2) # load 0x1fa95836 from memory into f15
fnmsub.s f21, f7, f18, f15, dyn # perform operation
fnmsub.s f21, f7, f18, f15, rdn # perform operation
fnmsub.s f21, f7, f18, f15, rmm # perform operation
fnmsub.s f21, f7, f18, f15, rne # perform operation
fnmsub.s f21, f7, f18, f15, rtz # perform operation
fnmsub.s f21, f7, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x18, 0x26e3b9c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x24441d8e # load x3 with value 0x24441d8e
sw x3, 0(x2) # store 0x24441d8e in memory
flw f26, 0(x2) # load 0x24441d8e from memory into f26
fnmsub.s f18, f29, f17, f26, dyn # perform operation
fnmsub.s f18, f29, f17, f26, rdn # perform operation
fnmsub.s f18, f29, f17, f26, rmm # perform operation
fnmsub.s f18, f29, f17, f26, rne # perform operation
fnmsub.s f18, f29, f17, f26, rtz # perform operation
fnmsub.s f18, f29, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x30, 0x9c47b3b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x551818bd # load x3 with value 0x551818bd
sw x3, 0(x2) # store 0x551818bd in memory
flw f6, 0(x2) # load 0x551818bd from memory into f6
fnmsub.s f30, f20, f27, f6, dyn # perform operation
fnmsub.s f30, f20, f27, f6, rdn # perform operation
fnmsub.s f30, f20, f27, f6, rmm # perform operation
fnmsub.s f30, f20, f27, f6, rne # perform operation
fnmsub.s f30, f20, f27, f6, rtz # perform operation
fnmsub.s f30, f20, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x30, 0x5c4aa3dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0x104e3449 # load x3 with value 0x104e3449
sw x3, 0(x2) # store 0x104e3449 in memory
flw f26, 0(x2) # load 0x104e3449 from memory into f26
fnmsub.s f30, f25, f1, f26, dyn # perform operation
fnmsub.s f30, f25, f1, f26, rdn # perform operation
fnmsub.s f30, f25, f1, f26, rmm # perform operation
fnmsub.s f30, f25, f1, f26, rne # perform operation
fnmsub.s f30, f25, f1, f26, rtz # perform operation
fnmsub.s f30, f25, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x10, 0xa015b2a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x1df5fa72 # load x3 with value 0x1df5fa72
sw x3, 0(x2) # store 0x1df5fa72 in memory
flw f2, 0(x2) # load 0x1df5fa72 from memory into f2
fnmsub.s f10, f9, f25, f2, dyn # perform operation
fnmsub.s f10, f9, f25, f2, rdn # perform operation
fnmsub.s f10, f9, f25, f2, rmm # perform operation
fnmsub.s f10, f9, f25, f2, rne # perform operation
fnmsub.s f10, f9, f25, f2, rtz # perform operation
fnmsub.s f10, f9, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f9, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f9, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x2, 0x5f4421a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x17410aba # load x3 with value 0x17410aba
sw x3, 0(x2) # store 0x17410aba in memory
flw f13, 0(x2) # load 0x17410aba from memory into f13
fnmsub.s f2, f22, f30, f13, dyn # perform operation
fnmsub.s f2, f22, f30, f13, rdn # perform operation
fnmsub.s f2, f22, f30, f13, rmm # perform operation
fnmsub.s f2, f22, f30, f13, rne # perform operation
fnmsub.s f2, f22, f30, f13, rtz # perform operation
fnmsub.s f2, f22, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f22, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f22, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x18, 0x9eb23d68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xa9fd0a6a # load x3 with value 0xa9fd0a6a
sw x3, 0(x2) # store 0xa9fd0a6a in memory
flw f20, 0(x2) # load 0xa9fd0a6a from memory into f20
fnmsub.s f18, f15, f25, f20, dyn # perform operation
fnmsub.s f18, f15, f25, f20, rdn # perform operation
fnmsub.s f18, f15, f25, f20, rmm # perform operation
fnmsub.s f18, f15, f25, f20, rne # perform operation
fnmsub.s f18, f15, f25, f20, rtz # perform operation
fnmsub.s f18, f15, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x7, 0x98378f18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x76c8f1e8 # load x3 with value 0x76c8f1e8
sw x3, 0(x2) # store 0x76c8f1e8 in memory
flw f19, 0(x2) # load 0x76c8f1e8 from memory into f19
fnmsub.s f7, f1, f31, f19, dyn # perform operation
fnmsub.s f7, f1, f31, f19, rdn # perform operation
fnmsub.s f7, f1, f31, f19, rmm # perform operation
fnmsub.s f7, f1, f31, f19, rne # perform operation
fnmsub.s f7, f1, f31, f19, rtz # perform operation
fnmsub.s f7, f1, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f1, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f1, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x31, 0xfba6cea1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x3421840b # load x3 with value 0x3421840b
sw x3, 0(x2) # store 0x3421840b in memory
flw f21, 0(x2) # load 0x3421840b from memory into f21
fnmsub.s f31, f25, f22, f21, dyn # perform operation
fnmsub.s f31, f25, f22, f21, rdn # perform operation
fnmsub.s f31, f25, f22, f21, rmm # perform operation
fnmsub.s f31, f25, f22, f21, rne # perform operation
fnmsub.s f31, f25, f22, f21, rtz # perform operation
fnmsub.s f31, f25, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f25, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f25, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f25, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f25, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f25, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x30, 0x06a4a2ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x667b9fbc # load x3 with value 0x667b9fbc
sw x3, 0(x2) # store 0x667b9fbc in memory
flw f20, 0(x2) # load 0x667b9fbc from memory into f20
fnmsub.s f30, f24, f23, f20, dyn # perform operation
fnmsub.s f30, f24, f23, f20, rdn # perform operation
fnmsub.s f30, f24, f23, f20, rmm # perform operation
fnmsub.s f30, f24, f23, f20, rne # perform operation
fnmsub.s f30, f24, f23, f20, rtz # perform operation
fnmsub.s f30, f24, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x25, 0xb55c466c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xc5b1a772 # load x3 with value 0xc5b1a772
sw x3, 0(x2) # store 0xc5b1a772 in memory
flw f3, 0(x2) # load 0xc5b1a772 from memory into f3
fnmsub.s f25, f16, f8, f3, dyn # perform operation
fnmsub.s f25, f16, f8, f3, rdn # perform operation
fnmsub.s f25, f16, f8, f3, rmm # perform operation
fnmsub.s f25, f16, f8, f3, rne # perform operation
fnmsub.s f25, f16, f8, f3, rtz # perform operation
fnmsub.s f25, f16, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x8, 0xe5811924 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x006b7d16 # load x3 with value 0x006b7d16
sw x3, 0(x2) # store 0x006b7d16 in memory
flw f21, 0(x2) # load 0x006b7d16 from memory into f21
fnmsub.s f8, f27, f7, f21, dyn # perform operation
fnmsub.s f8, f27, f7, f21, rdn # perform operation
fnmsub.s f8, f27, f7, f21, rmm # perform operation
fnmsub.s f8, f27, f7, f21, rne # perform operation
fnmsub.s f8, f27, f7, f21, rtz # perform operation
fnmsub.s f8, f27, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x28, 0xa35ef20d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xdaa0a0d1 # load x3 with value 0xdaa0a0d1
sw x3, 0(x2) # store 0xdaa0a0d1 in memory
flw f17, 0(x2) # load 0xdaa0a0d1 from memory into f17
fnmsub.s f28, f20, f7, f17, dyn # perform operation
fnmsub.s f28, f20, f7, f17, rdn # perform operation
fnmsub.s f28, f20, f7, f17, rmm # perform operation
fnmsub.s f28, f20, f7, f17, rne # perform operation
fnmsub.s f28, f20, f7, f17, rtz # perform operation
fnmsub.s f28, f20, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f20, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f20, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f20, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f20, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f20, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x30, 0xd6c2492e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x0dbe493f # load x3 with value 0x0dbe493f
sw x3, 0(x2) # store 0x0dbe493f in memory
flw f29, 0(x2) # load 0x0dbe493f from memory into f29
fnmsub.s f30, f20, f17, f29, dyn # perform operation
fnmsub.s f30, f20, f17, f29, rdn # perform operation
fnmsub.s f30, f20, f17, f29, rmm # perform operation
fnmsub.s f30, f20, f17, f29, rne # perform operation
fnmsub.s f30, f20, f17, f29, rtz # perform operation
fnmsub.s f30, f20, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x8, 0x531f11f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xe093cc74 # load x3 with value 0xe093cc74
sw x3, 0(x2) # store 0xe093cc74 in memory
flw f13, 0(x2) # load 0xe093cc74 from memory into f13
fnmsub.s f8, f30, f23, f13, dyn # perform operation
fnmsub.s f8, f30, f23, f13, rdn # perform operation
fnmsub.s f8, f30, f23, f13, rmm # perform operation
fnmsub.s f8, f30, f23, f13, rne # perform operation
fnmsub.s f8, f30, f23, f13, rtz # perform operation
fnmsub.s f8, f30, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f30, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x25, 0xe13c7497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x399384ac # load x3 with value 0x399384ac
sw x3, 0(x2) # store 0x399384ac in memory
flw f8, 0(x2) # load 0x399384ac from memory into f8
fnmsub.s f25, f1, f26, f8, dyn # perform operation
fnmsub.s f25, f1, f26, f8, rdn # perform operation
fnmsub.s f25, f1, f26, f8, rmm # perform operation
fnmsub.s f25, f1, f26, f8, rne # perform operation
fnmsub.s f25, f1, f26, f8, rtz # perform operation
fnmsub.s f25, f1, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x10, 0xc692ce50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x21cdd4b1 # load x3 with value 0x21cdd4b1
sw x3, 0(x2) # store 0x21cdd4b1 in memory
flw f31, 0(x2) # load 0x21cdd4b1 from memory into f31
fnmsub.s f10, f22, f12, f31, dyn # perform operation
fnmsub.s f10, f22, f12, f31, rdn # perform operation
fnmsub.s f10, f22, f12, f31, rmm # perform operation
fnmsub.s f10, f22, f12, f31, rne # perform operation
fnmsub.s f10, f22, f12, f31, rtz # perform operation
fnmsub.s f10, f22, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f22, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x17, 0x4f3e0495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0x7fa9e431 # load x3 with value 0x7fa9e431
sw x3, 0(x2) # store 0x7fa9e431 in memory
flw f5, 0(x2) # load 0x7fa9e431 from memory into f5
fnmsub.s f17, f9, f10, f5, dyn # perform operation
fnmsub.s f17, f9, f10, f5, rdn # perform operation
fnmsub.s f17, f9, f10, f5, rmm # perform operation
fnmsub.s f17, f9, f10, f5, rne # perform operation
fnmsub.s f17, f9, f10, f5, rtz # perform operation
fnmsub.s f17, f9, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f9, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x1, 0x3c9f494d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x20e93548 # load x3 with value 0x20e93548
sw x3, 0(x2) # store 0x20e93548 in memory
flw f23, 0(x2) # load 0x20e93548 from memory into f23
fnmsub.s f1, f18, f17, f23, dyn # perform operation
fnmsub.s f1, f18, f17, f23, rdn # perform operation
fnmsub.s f1, f18, f17, f23, rmm # perform operation
fnmsub.s f1, f18, f17, f23, rne # perform operation
fnmsub.s f1, f18, f17, f23, rtz # perform operation
fnmsub.s f1, f18, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x22, 0xcf0dcae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0xbb9a2d9a # load x3 with value 0xbb9a2d9a
sw x3, 0(x2) # store 0xbb9a2d9a in memory
flw f25, 0(x2) # load 0xbb9a2d9a from memory into f25
fnmsub.s f22, f9, f8, f25, dyn # perform operation
fnmsub.s f22, f9, f8, f25, rdn # perform operation
fnmsub.s f22, f9, f8, f25, rmm # perform operation
fnmsub.s f22, f9, f8, f25, rne # perform operation
fnmsub.s f22, f9, f8, f25, rtz # perform operation
fnmsub.s f22, f9, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x19, 0x161dfc4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x17d7b1ad # load x3 with value 0x17d7b1ad
sw x3, 0(x2) # store 0x17d7b1ad in memory
flw f11, 0(x2) # load 0x17d7b1ad from memory into f11
fnmsub.s f19, f27, f14, f11, dyn # perform operation
fnmsub.s f19, f27, f14, f11, rdn # perform operation
fnmsub.s f19, f27, f14, f11, rmm # perform operation
fnmsub.s f19, f27, f14, f11, rne # perform operation
fnmsub.s f19, f27, f14, f11, rtz # perform operation
fnmsub.s f19, f27, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x29, 0x748dea0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x0afcd17c # load x3 with value 0x0afcd17c
sw x3, 0(x2) # store 0x0afcd17c in memory
flw f13, 0(x2) # load 0x0afcd17c from memory into f13
fnmsub.s f29, f15, f28, f13, dyn # perform operation
fnmsub.s f29, f15, f28, f13, rdn # perform operation
fnmsub.s f29, f15, f28, f13, rmm # perform operation
fnmsub.s f29, f15, f28, f13, rne # perform operation
fnmsub.s f29, f15, f28, f13, rtz # perform operation
fnmsub.s f29, f15, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x12, 0xfa26f220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x97ba5735 # load x3 with value 0x97ba5735
sw x3, 0(x2) # store 0x97ba5735 in memory
flw f9, 0(x2) # load 0x97ba5735 from memory into f9
fnmsub.s f12, f7, f20, f9, dyn # perform operation
fnmsub.s f12, f7, f20, f9, rdn # perform operation
fnmsub.s f12, f7, f20, f9, rmm # perform operation
fnmsub.s f12, f7, f20, f9, rne # perform operation
fnmsub.s f12, f7, f20, f9, rtz # perform operation
fnmsub.s f12, f7, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x14, 0xcf8d68a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xea179c74 # load x3 with value 0xea179c74
sw x3, 0(x2) # store 0xea179c74 in memory
flw f27, 0(x2) # load 0xea179c74 from memory into f27
fnmsub.s f14, f18, f28, f27, dyn # perform operation
fnmsub.s f14, f18, f28, f27, rdn # perform operation
fnmsub.s f14, f18, f28, f27, rmm # perform operation
fnmsub.s f14, f18, f28, f27, rne # perform operation
fnmsub.s f14, f18, f28, f27, rtz # perform operation
fnmsub.s f14, f18, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f18, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x8, 0x2d9c7cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x6eabbe62 # load x3 with value 0x6eabbe62
sw x3, 0(x2) # store 0x6eabbe62 in memory
flw f20, 0(x2) # load 0x6eabbe62 from memory into f20
fnmsub.s f8, f29, f25, f20, dyn # perform operation
fnmsub.s f8, f29, f25, f20, rdn # perform operation
fnmsub.s f8, f29, f25, f20, rmm # perform operation
fnmsub.s f8, f29, f25, f20, rne # perform operation
fnmsub.s f8, f29, f25, f20, rtz # perform operation
fnmsub.s f8, f29, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x9, 0x0262bbc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x0a3630cb # load x3 with value 0x0a3630cb
sw x3, 0(x2) # store 0x0a3630cb in memory
flw f12, 0(x2) # load 0x0a3630cb from memory into f12
fnmsub.s f9, f10, f18, f12, dyn # perform operation
fnmsub.s f9, f10, f18, f12, rdn # perform operation
fnmsub.s f9, f10, f18, f12, rmm # perform operation
fnmsub.s f9, f10, f18, f12, rne # perform operation
fnmsub.s f9, f10, f18, f12, rtz # perform operation
fnmsub.s f9, f10, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f10, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f10, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f10, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f10, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f10, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x28, 0x8fa23e83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xaca4e36e # load x3 with value 0xaca4e36e
sw x3, 0(x2) # store 0xaca4e36e in memory
flw f14, 0(x2) # load 0xaca4e36e from memory into f14
fnmsub.s f28, f2, f31, f14, dyn # perform operation
fnmsub.s f28, f2, f31, f14, rdn # perform operation
fnmsub.s f28, f2, f31, f14, rmm # perform operation
fnmsub.s f28, f2, f31, f14, rne # perform operation
fnmsub.s f28, f2, f31, f14, rtz # perform operation
fnmsub.s f28, f2, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f2, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f2, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x24, 0x0d943ba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x9829c8e5 # load x3 with value 0x9829c8e5
sw x3, 0(x2) # store 0x9829c8e5 in memory
flw f28, 0(x2) # load 0x9829c8e5 from memory into f28
fnmsub.s f24, f22, f16, f28, dyn # perform operation
fnmsub.s f24, f22, f16, f28, rdn # perform operation
fnmsub.s f24, f22, f16, f28, rmm # perform operation
fnmsub.s f24, f22, f16, f28, rne # perform operation
fnmsub.s f24, f22, f16, f28, rtz # perform operation
fnmsub.s f24, f22, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f16, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x27, 0x3b226029 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0xeaeffb69 # load x3 with value 0xeaeffb69
sw x3, 0(x2) # store 0xeaeffb69 in memory
flw f24, 0(x2) # load 0xeaeffb69 from memory into f24
fnmsub.s f27, f29, f11, f24, dyn # perform operation
fnmsub.s f27, f29, f11, f24, rdn # perform operation
fnmsub.s f27, f29, f11, f24, rmm # perform operation
fnmsub.s f27, f29, f11, f24, rne # perform operation
fnmsub.s f27, f29, f11, f24, rtz # perform operation
fnmsub.s f27, f29, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f29, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x12, 0xaa9e1579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xa7b98624 # load x3 with value 0xa7b98624
sw x3, 0(x2) # store 0xa7b98624 in memory
flw f22, 0(x2) # load 0xa7b98624 from memory into f22
fnmsub.s f12, f4, f27, f22, dyn # perform operation
fnmsub.s f12, f4, f27, f22, rdn # perform operation
fnmsub.s f12, f4, f27, f22, rmm # perform operation
fnmsub.s f12, f4, f27, f22, rne # perform operation
fnmsub.s f12, f4, f27, f22, rtz # perform operation
fnmsub.s f12, f4, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f4, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x3, 0xb2724fbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x95b2b4ea # load x3 with value 0x95b2b4ea
sw x3, 0(x2) # store 0x95b2b4ea in memory
flw f15, 0(x2) # load 0x95b2b4ea from memory into f15
fnmsub.s f3, f8, f18, f15, dyn # perform operation
fnmsub.s f3, f8, f18, f15, rdn # perform operation
fnmsub.s f3, f8, f18, f15, rmm # perform operation
fnmsub.s f3, f8, f18, f15, rne # perform operation
fnmsub.s f3, f8, f18, f15, rtz # perform operation
fnmsub.s f3, f8, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f8, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x13, 0xf9b79523 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x0774e144 # load x3 with value 0x0774e144
sw x3, 0(x2) # store 0x0774e144 in memory
flw f21, 0(x2) # load 0x0774e144 from memory into f21
fnmsub.s f13, f1, f6, f21, dyn # perform operation
fnmsub.s f13, f1, f6, f21, rdn # perform operation
fnmsub.s f13, f1, f6, f21, rmm # perform operation
fnmsub.s f13, f1, f6, f21, rne # perform operation
fnmsub.s f13, f1, f6, f21, rtz # perform operation
fnmsub.s f13, f1, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f1, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x18, 0xb7d6cdd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x681270b8 # load x3 with value 0x681270b8
sw x3, 0(x2) # store 0x681270b8 in memory
flw f5, 0(x2) # load 0x681270b8 from memory into f5
fnmsub.s f18, f29, f1, f5, dyn # perform operation
fnmsub.s f18, f29, f1, f5, rdn # perform operation
fnmsub.s f18, f29, f1, f5, rmm # perform operation
fnmsub.s f18, f29, f1, f5, rne # perform operation
fnmsub.s f18, f29, f1, f5, rtz # perform operation
fnmsub.s f18, f29, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x25, 0x04113971 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x4843c324 # load x3 with value 0x4843c324
sw x3, 0(x2) # store 0x4843c324 in memory
flw f4, 0(x2) # load 0x4843c324 from memory into f4
fnmsub.s f25, f23, f17, f4, dyn # perform operation
fnmsub.s f25, f23, f17, f4, rdn # perform operation
fnmsub.s f25, f23, f17, f4, rmm # perform operation
fnmsub.s f25, f23, f17, f4, rne # perform operation
fnmsub.s f25, f23, f17, f4, rtz # perform operation
fnmsub.s f25, f23, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f23, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f23, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f23, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f23, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f23, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x30, 0x48d88d00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x47df9ca1 # load x3 with value 0x47df9ca1
sw x3, 0(x2) # store 0x47df9ca1 in memory
flw f5, 0(x2) # load 0x47df9ca1 from memory into f5
fnmsub.s f30, f31, f20, f5, dyn # perform operation
fnmsub.s f30, f31, f20, f5, rdn # perform operation
fnmsub.s f30, f31, f20, f5, rmm # perform operation
fnmsub.s f30, f31, f20, f5, rne # perform operation
fnmsub.s f30, f31, f20, f5, rtz # perform operation
fnmsub.s f30, f31, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f31, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x7, 0xdee5e1c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x6aff24da # load x3 with value 0x6aff24da
sw x3, 0(x2) # store 0x6aff24da in memory
flw f15, 0(x2) # load 0x6aff24da from memory into f15
fnmsub.s f7, f29, f21, f15, dyn # perform operation
fnmsub.s f7, f29, f21, f15, rdn # perform operation
fnmsub.s f7, f29, f21, f15, rmm # perform operation
fnmsub.s f7, f29, f21, f15, rne # perform operation
fnmsub.s f7, f29, f21, f15, rtz # perform operation
fnmsub.s f7, f29, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f29, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f29, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f29, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f29, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f29, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x17, 0xbac07dda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xc0e639dc # load x3 with value 0xc0e639dc
sw x3, 0(x2) # store 0xc0e639dc in memory
flw f1, 0(x2) # load 0xc0e639dc from memory into f1
fnmsub.s f17, f4, f8, f1, dyn # perform operation
fnmsub.s f17, f4, f8, f1, rdn # perform operation
fnmsub.s f17, f4, f8, f1, rmm # perform operation
fnmsub.s f17, f4, f8, f1, rne # perform operation
fnmsub.s f17, f4, f8, f1, rtz # perform operation
fnmsub.s f17, f4, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f4, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f4, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f4, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f4, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f4, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x18, 0x62ef15db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x8adde169 # load x3 with value 0x8adde169
sw x3, 0(x2) # store 0x8adde169 in memory
flw f20, 0(x2) # load 0x8adde169 from memory into f20
fnmsub.s f18, f6, f16, f20, dyn # perform operation
fnmsub.s f18, f6, f16, f20, rdn # perform operation
fnmsub.s f18, f6, f16, f20, rmm # perform operation
fnmsub.s f18, f6, f16, f20, rne # perform operation
fnmsub.s f18, f6, f16, f20, rtz # perform operation
fnmsub.s f18, f6, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x2, 0xf2f58582 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0xb4b748ce # load x3 with value 0xb4b748ce
sw x3, 0(x2) # store 0xb4b748ce in memory
flw f4, 0(x2) # load 0xb4b748ce from memory into f4
fnmsub.s f2, f10, f30, f4, dyn # perform operation
fnmsub.s f2, f10, f30, f4, rdn # perform operation
fnmsub.s f2, f10, f30, f4, rmm # perform operation
fnmsub.s f2, f10, f30, f4, rne # perform operation
fnmsub.s f2, f10, f30, f4, rtz # perform operation
fnmsub.s f2, f10, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f10, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f10, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f10, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f10, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f10, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x4, 0xa02b9d9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x691c304a # load x3 with value 0x691c304a
sw x3, 0(x2) # store 0x691c304a in memory
flw f30, 0(x2) # load 0x691c304a from memory into f30
fnmsub.s f4, f19, f26, f30, dyn # perform operation
fnmsub.s f4, f19, f26, f30, rdn # perform operation
fnmsub.s f4, f19, f26, f30, rmm # perform operation
fnmsub.s f4, f19, f26, f30, rne # perform operation
fnmsub.s f4, f19, f26, f30, rtz # perform operation
fnmsub.s f4, f19, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f19, f26, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x26, 0x44562de9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0xb8a54b0a # load x3 with value 0xb8a54b0a
sw x3, 0(x2) # store 0xb8a54b0a in memory
flw f31, 0(x2) # load 0xb8a54b0a from memory into f31
fnmsub.s f26, f21, f11, f31, dyn # perform operation
fnmsub.s f26, f21, f11, f31, rdn # perform operation
fnmsub.s f26, f21, f11, f31, rmm # perform operation
fnmsub.s f26, f21, f11, f31, rne # perform operation
fnmsub.s f26, f21, f11, f31, rtz # perform operation
fnmsub.s f26, f21, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f21, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x15, 0x17dab62d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x87006db7 # load x3 with value 0x87006db7
sw x3, 0(x2) # store 0x87006db7 in memory
flw f3, 0(x2) # load 0x87006db7 from memory into f3
fnmsub.s f15, f9, f6, f3, dyn # perform operation
fnmsub.s f15, f9, f6, f3, rdn # perform operation
fnmsub.s f15, f9, f6, f3, rmm # perform operation
fnmsub.s f15, f9, f6, f3, rne # perform operation
fnmsub.s f15, f9, f6, f3, rtz # perform operation
fnmsub.s f15, f9, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x16, 0x52914c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x681d23e5 # load x3 with value 0x681d23e5
sw x3, 0(x2) # store 0x681d23e5 in memory
flw f5, 0(x2) # load 0x681d23e5 from memory into f5
fnmsub.s f16, f29, f4, f5, dyn # perform operation
fnmsub.s f16, f29, f4, f5, rdn # perform operation
fnmsub.s f16, f29, f4, f5, rmm # perform operation
fnmsub.s f16, f29, f4, f5, rne # perform operation
fnmsub.s f16, f29, f4, f5, rtz # perform operation
fnmsub.s f16, f29, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f29, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f29, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f29, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f29, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f29, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x9, 0xd90a52b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x5956ec35 # load x3 with value 0x5956ec35
sw x3, 0(x2) # store 0x5956ec35 in memory
flw f29, 0(x2) # load 0x5956ec35 from memory into f29
fnmsub.s f9, f11, f23, f29, dyn # perform operation
fnmsub.s f9, f11, f23, f29, rdn # perform operation
fnmsub.s f9, f11, f23, f29, rmm # perform operation
fnmsub.s f9, f11, f23, f29, rne # perform operation
fnmsub.s f9, f11, f23, f29, rtz # perform operation
fnmsub.s f9, f11, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f11, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x18, 0x7b0d14b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0xcaf02986 # load x3 with value 0xcaf02986
sw x3, 0(x2) # store 0xcaf02986 in memory
flw f15, 0(x2) # load 0xcaf02986 from memory into f15
fnmsub.s f18, f30, f29, f15, dyn # perform operation
fnmsub.s f18, f30, f29, f15, rdn # perform operation
fnmsub.s f18, f30, f29, f15, rmm # perform operation
fnmsub.s f18, f30, f29, f15, rne # perform operation
fnmsub.s f18, f30, f29, f15, rtz # perform operation
fnmsub.s f18, f30, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f30, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f30, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x15, 0x876501f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x6c27d52c # load x3 with value 0x6c27d52c
sw x3, 0(x2) # store 0x6c27d52c in memory
flw f19, 0(x2) # load 0x6c27d52c from memory into f19
fnmsub.s f15, f12, f28, f19, dyn # perform operation
fnmsub.s f15, f12, f28, f19, rdn # perform operation
fnmsub.s f15, f12, f28, f19, rmm # perform operation
fnmsub.s f15, f12, f28, f19, rne # perform operation
fnmsub.s f15, f12, f28, f19, rtz # perform operation
fnmsub.s f15, f12, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x9, 0xc89c1129 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x7924b512 # load x3 with value 0x7924b512
sw x3, 0(x2) # store 0x7924b512 in memory
flw f29, 0(x2) # load 0x7924b512 from memory into f29
fnmsub.s f9, f8, f13, f29, dyn # perform operation
fnmsub.s f9, f8, f13, f29, rdn # perform operation
fnmsub.s f9, f8, f13, f29, rmm # perform operation
fnmsub.s f9, f8, f13, f29, rne # perform operation
fnmsub.s f9, f8, f13, f29, rtz # perform operation
fnmsub.s f9, f8, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x27, 0xd9ea6e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x3517c647 # load x3 with value 0x3517c647
sw x3, 0(x2) # store 0x3517c647 in memory
flw f2, 0(x2) # load 0x3517c647 from memory into f2
fnmsub.s f27, f21, f26, f2, dyn # perform operation
fnmsub.s f27, f21, f26, f2, rdn # perform operation
fnmsub.s f27, f21, f26, f2, rmm # perform operation
fnmsub.s f27, f21, f26, f2, rne # perform operation
fnmsub.s f27, f21, f26, f2, rtz # perform operation
fnmsub.s f27, f21, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x12, 0x65ee13a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xfaa8e192 # load x3 with value 0xfaa8e192
sw x3, 0(x2) # store 0xfaa8e192 in memory
flw f1, 0(x2) # load 0xfaa8e192 from memory into f1
fnmsub.s f12, f29, f22, f1, dyn # perform operation
fnmsub.s f12, f29, f22, f1, rdn # perform operation
fnmsub.s f12, f29, f22, f1, rmm # perform operation
fnmsub.s f12, f29, f22, f1, rne # perform operation
fnmsub.s f12, f29, f22, f1, rtz # perform operation
fnmsub.s f12, f29, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f29, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f29, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x11, 0xb09a1e67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0xc43c6ce2 # load x3 with value 0xc43c6ce2
sw x3, 0(x2) # store 0xc43c6ce2 in memory
flw f26, 0(x2) # load 0xc43c6ce2 from memory into f26
fnmsub.s f11, f21, f23, f26, dyn # perform operation
fnmsub.s f11, f21, f23, f26, rdn # perform operation
fnmsub.s f11, f21, f23, f26, rmm # perform operation
fnmsub.s f11, f21, f23, f26, rne # perform operation
fnmsub.s f11, f21, f23, f26, rtz # perform operation
fnmsub.s f11, f21, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f21, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x16, 0x97e504fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x70f95982 # load x3 with value 0x70f95982
sw x3, 0(x2) # store 0x70f95982 in memory
flw f17, 0(x2) # load 0x70f95982 from memory into f17
fnmsub.s f16, f24, f31, f17, dyn # perform operation
fnmsub.s f16, f24, f31, f17, rdn # perform operation
fnmsub.s f16, f24, f31, f17, rmm # perform operation
fnmsub.s f16, f24, f31, f17, rne # perform operation
fnmsub.s f16, f24, f31, f17, rtz # perform operation
fnmsub.s f16, f24, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x11, 0x13681f22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0xa38e2e24 # load x3 with value 0xa38e2e24
sw x3, 0(x2) # store 0xa38e2e24 in memory
flw f17, 0(x2) # load 0xa38e2e24 from memory into f17
fnmsub.s f11, f23, f28, f17, dyn # perform operation
fnmsub.s f11, f23, f28, f17, rdn # perform operation
fnmsub.s f11, f23, f28, f17, rmm # perform operation
fnmsub.s f11, f23, f28, f17, rne # perform operation
fnmsub.s f11, f23, f28, f17, rtz # perform operation
fnmsub.s f11, f23, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x2, 0x4cdb2a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x95b2294a # load x3 with value 0x95b2294a
sw x3, 0(x2) # store 0x95b2294a in memory
flw f13, 0(x2) # load 0x95b2294a from memory into f13
fnmsub.s f2, f16, f31, f13, dyn # perform operation
fnmsub.s f2, f16, f31, f13, rdn # perform operation
fnmsub.s f2, f16, f31, f13, rmm # perform operation
fnmsub.s f2, f16, f31, f13, rne # perform operation
fnmsub.s f2, f16, f31, f13, rtz # perform operation
fnmsub.s f2, f16, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f16, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x10, 0x56f991e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x7c58a1a2 # load x3 with value 0x7c58a1a2
sw x3, 0(x2) # store 0x7c58a1a2 in memory
flw f21, 0(x2) # load 0x7c58a1a2 from memory into f21
fnmsub.s f10, f5, f28, f21, dyn # perform operation
fnmsub.s f10, f5, f28, f21, rdn # perform operation
fnmsub.s f10, f5, f28, f21, rmm # perform operation
fnmsub.s f10, f5, f28, f21, rne # perform operation
fnmsub.s f10, f5, f28, f21, rtz # perform operation
fnmsub.s f10, f5, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f5, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f5, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f5, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f5, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f5, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x5, 0x41b1b5cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x5bd01b66 # load x3 with value 0x5bd01b66
sw x3, 0(x2) # store 0x5bd01b66 in memory
flw f9, 0(x2) # load 0x5bd01b66 from memory into f9
fnmsub.s f5, f6, f11, f9, dyn # perform operation
fnmsub.s f5, f6, f11, f9, rdn # perform operation
fnmsub.s f5, f6, f11, f9, rmm # perform operation
fnmsub.s f5, f6, f11, f9, rne # perform operation
fnmsub.s f5, f6, f11, f9, rtz # perform operation
fnmsub.s f5, f6, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x25, 0x76d08206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0xc30fb8bc # load x3 with value 0xc30fb8bc
sw x3, 0(x2) # store 0xc30fb8bc in memory
flw f12, 0(x2) # load 0xc30fb8bc from memory into f12
fnmsub.s f25, f29, f23, f12, dyn # perform operation
fnmsub.s f25, f29, f23, f12, rdn # perform operation
fnmsub.s f25, f29, f23, f12, rmm # perform operation
fnmsub.s f25, f29, f23, f12, rne # perform operation
fnmsub.s f25, f29, f23, f12, rtz # perform operation
fnmsub.s f25, f29, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x20, 0x49f1272d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x70d77729 # load x3 with value 0x70d77729
sw x3, 0(x2) # store 0x70d77729 in memory
flw f30, 0(x2) # load 0x70d77729 from memory into f30
fnmsub.s f20, f27, f14, f30, dyn # perform operation
fnmsub.s f20, f27, f14, f30, rdn # perform operation
fnmsub.s f20, f27, f14, f30, rmm # perform operation
fnmsub.s f20, f27, f14, f30, rne # perform operation
fnmsub.s f20, f27, f14, f30, rtz # perform operation
fnmsub.s f20, f27, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x18, 0x3ac5de9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x4c8cb2ff # load x3 with value 0x4c8cb2ff
sw x3, 0(x2) # store 0x4c8cb2ff in memory
flw f2, 0(x2) # load 0x4c8cb2ff from memory into f2
fnmsub.s f18, f30, f16, f2, dyn # perform operation
fnmsub.s f18, f30, f16, f2, rdn # perform operation
fnmsub.s f18, f30, f16, f2, rmm # perform operation
fnmsub.s f18, f30, f16, f2, rne # perform operation
fnmsub.s f18, f30, f16, f2, rtz # perform operation
fnmsub.s f18, f30, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f30, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f30, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x30, 0xdf653ecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x174723e9 # load x3 with value 0x174723e9
sw x3, 0(x2) # store 0x174723e9 in memory
flw f9, 0(x2) # load 0x174723e9 from memory into f9
fnmsub.s f30, f7, f1, f9, dyn # perform operation
fnmsub.s f30, f7, f1, f9, rdn # perform operation
fnmsub.s f30, f7, f1, f9, rmm # perform operation
fnmsub.s f30, f7, f1, f9, rne # perform operation
fnmsub.s f30, f7, f1, f9, rtz # perform operation
fnmsub.s f30, f7, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x20, 0x5920dc79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x0fd74ac2 # load x3 with value 0x0fd74ac2
sw x3, 0(x2) # store 0x0fd74ac2 in memory
flw f8, 0(x2) # load 0x0fd74ac2 from memory into f8
fnmsub.s f20, f3, f21, f8, dyn # perform operation
fnmsub.s f20, f3, f21, f8, rdn # perform operation
fnmsub.s f20, f3, f21, f8, rmm # perform operation
fnmsub.s f20, f3, f21, f8, rne # perform operation
fnmsub.s f20, f3, f21, f8, rtz # perform operation
fnmsub.s f20, f3, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x29, 0x44ad84a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x11a34ec8 # load x3 with value 0x11a34ec8
sw x3, 0(x2) # store 0x11a34ec8 in memory
flw f30, 0(x2) # load 0x11a34ec8 from memory into f30
fnmsub.s f29, f6, f1, f30, dyn # perform operation
fnmsub.s f29, f6, f1, f30, rdn # perform operation
fnmsub.s f29, f6, f1, f30, rmm # perform operation
fnmsub.s f29, f6, f1, f30, rne # perform operation
fnmsub.s f29, f6, f1, f30, rtz # perform operation
fnmsub.s f29, f6, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f6, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x12, 0x3e199b83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x8e380320 # load x3 with value 0x8e380320
sw x3, 0(x2) # store 0x8e380320 in memory
flw f28, 0(x2) # load 0x8e380320 from memory into f28
fnmsub.s f12, f20, f13, f28, dyn # perform operation
fnmsub.s f12, f20, f13, f28, rdn # perform operation
fnmsub.s f12, f20, f13, f28, rmm # perform operation
fnmsub.s f12, f20, f13, f28, rne # perform operation
fnmsub.s f12, f20, f13, f28, rtz # perform operation
fnmsub.s f12, f20, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f20, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x12, 0x2774b74f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x146e075a # load x3 with value 0x146e075a
sw x3, 0(x2) # store 0x146e075a in memory
flw f20, 0(x2) # load 0x146e075a from memory into f20
fnmsub.s f12, f28, f19, f20, dyn # perform operation
fnmsub.s f12, f28, f19, f20, rdn # perform operation
fnmsub.s f12, f28, f19, f20, rmm # perform operation
fnmsub.s f12, f28, f19, f20, rne # perform operation
fnmsub.s f12, f28, f19, f20, rtz # perform operation
fnmsub.s f12, f28, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x4, 0x52c37d73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x7708d287 # load x3 with value 0x7708d287
sw x3, 0(x2) # store 0x7708d287 in memory
flw f12, 0(x2) # load 0x7708d287 from memory into f12
fnmsub.s f4, f20, f17, f12, dyn # perform operation
fnmsub.s f4, f20, f17, f12, rdn # perform operation
fnmsub.s f4, f20, f17, f12, rmm # perform operation
fnmsub.s f4, f20, f17, f12, rne # perform operation
fnmsub.s f4, f20, f17, f12, rtz # perform operation
fnmsub.s f4, f20, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f20, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x12, 0x3aee92ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x1926f360 # load x3 with value 0x1926f360
sw x3, 0(x2) # store 0x1926f360 in memory
flw f21, 0(x2) # load 0x1926f360 from memory into f21
fnmsub.s f12, f22, f11, f21, dyn # perform operation
fnmsub.s f12, f22, f11, f21, rdn # perform operation
fnmsub.s f12, f22, f11, f21, rmm # perform operation
fnmsub.s f12, f22, f11, f21, rne # perform operation
fnmsub.s f12, f22, f11, f21, rtz # perform operation
fnmsub.s f12, f22, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x24, 0xd8b7fa71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x478c5198 # load x3 with value 0x478c5198
sw x3, 0(x2) # store 0x478c5198 in memory
flw f25, 0(x2) # load 0x478c5198 from memory into f25
fnmsub.s f24, f12, f17, f25, dyn # perform operation
fnmsub.s f24, f12, f17, f25, rdn # perform operation
fnmsub.s f24, f12, f17, f25, rmm # perform operation
fnmsub.s f24, f12, f17, f25, rne # perform operation
fnmsub.s f24, f12, f17, f25, rtz # perform operation
fnmsub.s f24, f12, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x5, 0x58577ca8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x1f0065f5 # load x3 with value 0x1f0065f5
sw x3, 0(x2) # store 0x1f0065f5 in memory
flw f6, 0(x2) # load 0x1f0065f5 from memory into f6
fnmsub.s f5, f13, f29, f6, dyn # perform operation
fnmsub.s f5, f13, f29, f6, rdn # perform operation
fnmsub.s f5, f13, f29, f6, rmm # perform operation
fnmsub.s f5, f13, f29, f6, rne # perform operation
fnmsub.s f5, f13, f29, f6, rtz # perform operation
fnmsub.s f5, f13, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f13, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f13, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f13, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f13, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f13, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x30, 0xf2477967 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x96844fac # load x3 with value 0x96844fac
sw x3, 0(x2) # store 0x96844fac in memory
flw f9, 0(x2) # load 0x96844fac from memory into f9
fnmsub.s f30, f20, f2, f9, dyn # perform operation
fnmsub.s f30, f20, f2, f9, rdn # perform operation
fnmsub.s f30, f20, f2, f9, rmm # perform operation
fnmsub.s f30, f20, f2, f9, rne # perform operation
fnmsub.s f30, f20, f2, f9, rtz # perform operation
fnmsub.s f30, f20, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x6, 0x24a77475 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xca89f0e2 # load x3 with value 0xca89f0e2
sw x3, 0(x2) # store 0xca89f0e2 in memory
flw f2, 0(x2) # load 0xca89f0e2 from memory into f2
fnmsub.s f6, f12, f9, f2, dyn # perform operation
fnmsub.s f6, f12, f9, f2, rdn # perform operation
fnmsub.s f6, f12, f9, f2, rmm # perform operation
fnmsub.s f6, f12, f9, f2, rne # perform operation
fnmsub.s f6, f12, f9, f2, rtz # perform operation
fnmsub.s f6, f12, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f12, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x20, 0x7b38be27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x637815df # load x3 with value 0x637815df
sw x3, 0(x2) # store 0x637815df in memory
flw f3, 0(x2) # load 0x637815df from memory into f3
fnmsub.s f20, f16, f12, f3, dyn # perform operation
fnmsub.s f20, f16, f12, f3, rdn # perform operation
fnmsub.s f20, f16, f12, f3, rmm # perform operation
fnmsub.s f20, f16, f12, f3, rne # perform operation
fnmsub.s f20, f16, f12, f3, rtz # perform operation
fnmsub.s f20, f16, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x5, 0xa1dcb598 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x4421410c # load x3 with value 0x4421410c
sw x3, 0(x2) # store 0x4421410c in memory
flw f19, 0(x2) # load 0x4421410c from memory into f19
fnmsub.s f5, f25, f27, f19, dyn # perform operation
fnmsub.s f5, f25, f27, f19, rdn # perform operation
fnmsub.s f5, f25, f27, f19, rmm # perform operation
fnmsub.s f5, f25, f27, f19, rne # perform operation
fnmsub.s f5, f25, f27, f19, rtz # perform operation
fnmsub.s f5, f25, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f25, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x7, 0x3c0aa061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x771a69fb # load x3 with value 0x771a69fb
sw x3, 0(x2) # store 0x771a69fb in memory
flw f16, 0(x2) # load 0x771a69fb from memory into f16
fnmsub.s f7, f23, f28, f16, dyn # perform operation
fnmsub.s f7, f23, f28, f16, rdn # perform operation
fnmsub.s f7, f23, f28, f16, rmm # perform operation
fnmsub.s f7, f23, f28, f16, rne # perform operation
fnmsub.s f7, f23, f28, f16, rtz # perform operation
fnmsub.s f7, f23, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f23, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x17, 0x81ca4309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0xc22c6ad6 # load x3 with value 0xc22c6ad6
sw x3, 0(x2) # store 0xc22c6ad6 in memory
flw f30, 0(x2) # load 0xc22c6ad6 from memory into f30
fnmsub.s f17, f6, f16, f30, dyn # perform operation
fnmsub.s f17, f6, f16, f30, rdn # perform operation
fnmsub.s f17, f6, f16, f30, rmm # perform operation
fnmsub.s f17, f6, f16, f30, rne # perform operation
fnmsub.s f17, f6, f16, f30, rtz # perform operation
fnmsub.s f17, f6, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f6, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x22, 0xe741c4ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xc89b5f85 # load x3 with value 0xc89b5f85
sw x3, 0(x2) # store 0xc89b5f85 in memory
flw f9, 0(x2) # load 0xc89b5f85 from memory into f9
fnmsub.s f22, f1, f10, f9, dyn # perform operation
fnmsub.s f22, f1, f10, f9, rdn # perform operation
fnmsub.s f22, f1, f10, f9, rmm # perform operation
fnmsub.s f22, f1, f10, f9, rne # perform operation
fnmsub.s f22, f1, f10, f9, rtz # perform operation
fnmsub.s f22, f1, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f1, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f1, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x2, 0xefe5f3bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x5cfa7da5 # load x3 with value 0x5cfa7da5
sw x3, 0(x2) # store 0x5cfa7da5 in memory
flw f29, 0(x2) # load 0x5cfa7da5 from memory into f29
fnmsub.s f2, f4, f6, f29, dyn # perform operation
fnmsub.s f2, f4, f6, f29, rdn # perform operation
fnmsub.s f2, f4, f6, f29, rmm # perform operation
fnmsub.s f2, f4, f6, f29, rne # perform operation
fnmsub.s f2, f4, f6, f29, rtz # perform operation
fnmsub.s f2, f4, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f4, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x29, 0x689d6493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0x3ccac51d # load x3 with value 0x3ccac51d
sw x3, 0(x2) # store 0x3ccac51d in memory
flw f14, 0(x2) # load 0x3ccac51d from memory into f14
fnmsub.s f29, f19, f20, f14, dyn # perform operation
fnmsub.s f29, f19, f20, f14, rdn # perform operation
fnmsub.s f29, f19, f20, f14, rmm # perform operation
fnmsub.s f29, f19, f20, f14, rne # perform operation
fnmsub.s f29, f19, f20, f14, rtz # perform operation
fnmsub.s f29, f19, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x9, 0xf7d13ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xd974f7bc # load x3 with value 0xd974f7bc
sw x3, 0(x2) # store 0xd974f7bc in memory
flw f25, 0(x2) # load 0xd974f7bc from memory into f25
fnmsub.s f9, f16, f18, f25, dyn # perform operation
fnmsub.s f9, f16, f18, f25, rdn # perform operation
fnmsub.s f9, f16, f18, f25, rmm # perform operation
fnmsub.s f9, f16, f18, f25, rne # perform operation
fnmsub.s f9, f16, f18, f25, rtz # perform operation
fnmsub.s f9, f16, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x19, 0x42d4ccf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x9bb053a1 # load x3 with value 0x9bb053a1
sw x3, 0(x2) # store 0x9bb053a1 in memory
flw f27, 0(x2) # load 0x9bb053a1 from memory into f27
fnmsub.s f19, f6, f14, f27, dyn # perform operation
fnmsub.s f19, f6, f14, f27, rdn # perform operation
fnmsub.s f19, f6, f14, f27, rmm # perform operation
fnmsub.s f19, f6, f14, f27, rne # perform operation
fnmsub.s f19, f6, f14, f27, rtz # perform operation
fnmsub.s f19, f6, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f6, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x26, 0xf64443f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0xe2525bc2 # load x3 with value 0xe2525bc2
sw x3, 0(x2) # store 0xe2525bc2 in memory
flw f12, 0(x2) # load 0xe2525bc2 from memory into f12
fnmsub.s f26, f20, f27, f12, dyn # perform operation
fnmsub.s f26, f20, f27, f12, rdn # perform operation
fnmsub.s f26, f20, f27, f12, rmm # perform operation
fnmsub.s f26, f20, f27, f12, rne # perform operation
fnmsub.s f26, f20, f27, f12, rtz # perform operation
fnmsub.s f26, f20, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f20, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x26, 0xdc78db93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x508f39ca # load x3 with value 0x508f39ca
sw x3, 0(x2) # store 0x508f39ca in memory
flw f20, 0(x2) # load 0x508f39ca from memory into f20
fnmsub.s f26, f2, f28, f20, dyn # perform operation
fnmsub.s f26, f2, f28, f20, rdn # perform operation
fnmsub.s f26, f2, f28, f20, rmm # perform operation
fnmsub.s f26, f2, f28, f20, rne # perform operation
fnmsub.s f26, f2, f28, f20, rtz # perform operation
fnmsub.s f26, f2, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x11, 0xdd7a3299 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x7c120305 # load x3 with value 0x7c120305
sw x3, 0(x2) # store 0x7c120305 in memory
flw f15, 0(x2) # load 0x7c120305 from memory into f15
fnmsub.s f11, f26, f8, f15, dyn # perform operation
fnmsub.s f11, f26, f8, f15, rdn # perform operation
fnmsub.s f11, f26, f8, f15, rmm # perform operation
fnmsub.s f11, f26, f8, f15, rne # perform operation
fnmsub.s f11, f26, f8, f15, rtz # perform operation
fnmsub.s f11, f26, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x5, 0xecee9927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x55300518 # load x3 with value 0x55300518
sw x3, 0(x2) # store 0x55300518 in memory
flw f22, 0(x2) # load 0x55300518 from memory into f22
fnmsub.s f5, f11, f8, f22, dyn # perform operation
fnmsub.s f5, f11, f8, f22, rdn # perform operation
fnmsub.s f5, f11, f8, f22, rmm # perform operation
fnmsub.s f5, f11, f8, f22, rne # perform operation
fnmsub.s f5, f11, f8, f22, rtz # perform operation
fnmsub.s f5, f11, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f11, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f11, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f11, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f11, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f11, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x19, 0xb1c8e3e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0xca8a5a7e # load x3 with value 0xca8a5a7e
sw x3, 0(x2) # store 0xca8a5a7e in memory
flw f17, 0(x2) # load 0xca8a5a7e from memory into f17
fnmsub.s f19, f3, f15, f17, dyn # perform operation
fnmsub.s f19, f3, f15, f17, rdn # perform operation
fnmsub.s f19, f3, f15, f17, rmm # perform operation
fnmsub.s f19, f3, f15, f17, rne # perform operation
fnmsub.s f19, f3, f15, f17, rtz # perform operation
fnmsub.s f19, f3, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x22, 0x5a6a1d00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x957244cb # load x3 with value 0x957244cb
sw x3, 0(x2) # store 0x957244cb in memory
flw f11, 0(x2) # load 0x957244cb from memory into f11
fnmsub.s f22, f6, f28, f11, dyn # perform operation
fnmsub.s f22, f6, f28, f11, rdn # perform operation
fnmsub.s f22, f6, f28, f11, rmm # perform operation
fnmsub.s f22, f6, f28, f11, rne # perform operation
fnmsub.s f22, f6, f28, f11, rtz # perform operation
fnmsub.s f22, f6, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x27, 0x259acfab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x15641e70 # load x3 with value 0x15641e70
sw x3, 0(x2) # store 0x15641e70 in memory
flw f29, 0(x2) # load 0x15641e70 from memory into f29
fnmsub.s f27, f28, f22, f29, dyn # perform operation
fnmsub.s f27, f28, f22, f29, rdn # perform operation
fnmsub.s f27, f28, f22, f29, rmm # perform operation
fnmsub.s f27, f28, f22, f29, rne # perform operation
fnmsub.s f27, f28, f22, f29, rtz # perform operation
fnmsub.s f27, f28, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x2, 0xeae34ea3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x280e9786 # load x3 with value 0x280e9786
sw x3, 0(x2) # store 0x280e9786 in memory
flw f6, 0(x2) # load 0x280e9786 from memory into f6
fnmsub.s f2, f8, f13, f6, dyn # perform operation
fnmsub.s f2, f8, f13, f6, rdn # perform operation
fnmsub.s f2, f8, f13, f6, rmm # perform operation
fnmsub.s f2, f8, f13, f6, rne # perform operation
fnmsub.s f2, f8, f13, f6, rtz # perform operation
fnmsub.s f2, f8, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x30, 0x7fdf9a00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x96261a05 # load x3 with value 0x96261a05
sw x3, 0(x2) # store 0x96261a05 in memory
flw f8, 0(x2) # load 0x96261a05 from memory into f8
fnmsub.s f30, f21, f24, f8, dyn # perform operation
fnmsub.s f30, f21, f24, f8, rdn # perform operation
fnmsub.s f30, f21, f24, f8, rmm # perform operation
fnmsub.s f30, f21, f24, f8, rne # perform operation
fnmsub.s f30, f21, f24, f8, rtz # perform operation
fnmsub.s f30, f21, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f21, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f21, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x27, 0x70fe05c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xc359f384 # load x3 with value 0xc359f384
sw x3, 0(x2) # store 0xc359f384 in memory
flw f1, 0(x2) # load 0xc359f384 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f27, f11, f1, f16, dyn # perform operation
fnmsub.s f27, f11, f1, f16, rdn # perform operation
fnmsub.s f27, f11, f1, f16, rmm # perform operation
fnmsub.s f27, f11, f1, f16, rne # perform operation
fnmsub.s f27, f11, f1, f16, rtz # perform operation
fnmsub.s f27, f11, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x30, 0xd9c019e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x49ea1a0d # load x3 with value 0x49ea1a0d
sw x3, 0(x2) # store 0x49ea1a0d in memory
flw f28, 0(x2) # load 0x49ea1a0d from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmsub.s f30, f17, f28, f7, dyn # perform operation
fnmsub.s f30, f17, f28, f7, rdn # perform operation
fnmsub.s f30, f17, f28, f7, rmm # perform operation
fnmsub.s f30, f17, f28, f7, rne # perform operation
fnmsub.s f30, f17, f28, f7, rtz # perform operation
fnmsub.s f30, f17, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f17, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x31, 0xa6c5abed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x41b83fc6 # load x3 with value 0x41b83fc6
sw x3, 0(x2) # store 0x41b83fc6 in memory
flw f9, 0(x2) # load 0x41b83fc6 from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f31, f17, f9, f13, dyn # perform operation
fnmsub.s f31, f17, f9, f13, rdn # perform operation
fnmsub.s f31, f17, f9, f13, rmm # perform operation
fnmsub.s f31, f17, f9, f13, rne # perform operation
fnmsub.s f31, f17, f9, f13, rtz # perform operation
fnmsub.s f31, f17, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x25, 0xcf7d7338 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0xe3256a25 # load x3 with value 0xe3256a25
sw x3, 0(x2) # store 0xe3256a25 in memory
flw f23, 0(x2) # load 0xe3256a25 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fnmsub.s f25, f28, f23, f6, dyn # perform operation
fnmsub.s f25, f28, f23, f6, rdn # perform operation
fnmsub.s f25, f28, f23, f6, rmm # perform operation
fnmsub.s f25, f28, f23, f6, rne # perform operation
fnmsub.s f25, f28, f23, f6, rtz # perform operation
fnmsub.s f25, f28, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f28, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x17, 0x28e3703d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x52ff417a # load x3 with value 0x52ff417a
sw x3, 0(x2) # store 0x52ff417a in memory
flw f7, 0(x2) # load 0x52ff417a from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmsub.s f17, f29, f7, f28, dyn # perform operation
fnmsub.s f17, f29, f7, f28, rdn # perform operation
fnmsub.s f17, f29, f7, f28, rmm # perform operation
fnmsub.s f17, f29, f7, f28, rne # perform operation
fnmsub.s f17, f29, f7, f28, rtz # perform operation
fnmsub.s f17, f29, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f29, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f29, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f29, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f29, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f29, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x11, 0x552f9621 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x981a1530 # load x3 with value 0x981a1530
sw x3, 0(x2) # store 0x981a1530 in memory
flw f27, 0(x2) # load 0x981a1530 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmsub.s f11, f17, f27, f1, dyn # perform operation
fnmsub.s f11, f17, f27, f1, rdn # perform operation
fnmsub.s f11, f17, f27, f1, rmm # perform operation
fnmsub.s f11, f17, f27, f1, rne # perform operation
fnmsub.s f11, f17, f27, f1, rtz # perform operation
fnmsub.s f11, f17, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x7, 0x1ddc6367 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xb9a6be87 # load x3 with value 0xb9a6be87
sw x3, 0(x2) # store 0xb9a6be87 in memory
flw f10, 0(x2) # load 0xb9a6be87 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmsub.s f7, f6, f10, f21, dyn # perform operation
fnmsub.s f7, f6, f10, f21, rdn # perform operation
fnmsub.s f7, f6, f10, f21, rmm # perform operation
fnmsub.s f7, f6, f10, f21, rne # perform operation
fnmsub.s f7, f6, f10, f21, rtz # perform operation
fnmsub.s f7, f6, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f6, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x17, 0xd3878f81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x881e01c3 # load x3 with value 0x881e01c3
sw x3, 0(x2) # store 0x881e01c3 in memory
flw f6, 0(x2) # load 0x881e01c3 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmsub.s f17, f13, f6, f22, dyn # perform operation
fnmsub.s f17, f13, f6, f22, rdn # perform operation
fnmsub.s f17, f13, f6, f22, rmm # perform operation
fnmsub.s f17, f13, f6, f22, rne # perform operation
fnmsub.s f17, f13, f6, f22, rtz # perform operation
fnmsub.s f17, f13, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x9, 0x5e70c7b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xa25b0ce2 # load x3 with value 0xa25b0ce2
sw x3, 0(x2) # store 0xa25b0ce2 in memory
flw f7, 0(x2) # load 0xa25b0ce2 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
fnmsub.s f9, f20, f7, f4, dyn # perform operation
fnmsub.s f9, f20, f7, f4, rdn # perform operation
fnmsub.s f9, f20, f7, f4, rmm # perform operation
fnmsub.s f9, f20, f7, f4, rne # perform operation
fnmsub.s f9, f20, f7, f4, rtz # perform operation
fnmsub.s f9, f20, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x23, 0xf43588e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xd7ce8164 # load x3 with value 0xd7ce8164
sw x3, 0(x2) # store 0xd7ce8164 in memory
flw f11, 0(x2) # load 0xd7ce8164 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmsub.s f23, f21, f11, f1, dyn # perform operation
fnmsub.s f23, f21, f11, f1, rdn # perform operation
fnmsub.s f23, f21, f11, f1, rmm # perform operation
fnmsub.s f23, f21, f11, f1, rne # perform operation
fnmsub.s f23, f21, f11, f1, rtz # perform operation
fnmsub.s f23, f21, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f21, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f21, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f21, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f21, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f21, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x25, 0xf9f450e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0xbdc8478b # load x3 with value 0xbdc8478b
sw x3, 0(x2) # store 0xbdc8478b in memory
flw f24, 0(x2) # load 0xbdc8478b from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmsub.s f25, f16, f24, f21, dyn # perform operation
fnmsub.s f25, f16, f24, f21, rdn # perform operation
fnmsub.s f25, f16, f24, f21, rmm # perform operation
fnmsub.s f25, f16, f24, f21, rne # perform operation
fnmsub.s f25, f16, f24, f21, rtz # perform operation
fnmsub.s f25, f16, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x31, 0xa51fd9c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x3a700ee2 # load x3 with value 0x3a700ee2
sw x3, 0(x2) # store 0x3a700ee2 in memory
flw f9, 0(x2) # load 0x3a700ee2 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmsub.s f31, f26, f9, f14, dyn # perform operation
fnmsub.s f31, f26, f9, f14, rdn # perform operation
fnmsub.s f31, f26, f9, f14, rmm # perform operation
fnmsub.s f31, f26, f9, f14, rne # perform operation
fnmsub.s f31, f26, f9, f14, rtz # perform operation
fnmsub.s f31, f26, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x9, 0x6650e41f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x68c7ce09 # load x3 with value 0x68c7ce09
sw x3, 0(x2) # store 0x68c7ce09 in memory
flw f3, 0(x2) # load 0x68c7ce09 from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fnmsub.s f9, f24, f3, f15, dyn # perform operation
fnmsub.s f9, f24, f3, f15, rdn # perform operation
fnmsub.s f9, f24, f3, f15, rmm # perform operation
fnmsub.s f9, f24, f3, f15, rne # perform operation
fnmsub.s f9, f24, f3, f15, rtz # perform operation
fnmsub.s f9, f24, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f24, f3, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x9, 0x60a9de18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x55c3dad3 # load x3 with value 0x55c3dad3
sw x3, 0(x2) # store 0x55c3dad3 in memory
flw f17, 0(x2) # load 0x55c3dad3 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fnmsub.s f9, f16, f17, f6, dyn # perform operation
fnmsub.s f9, f16, f17, f6, rdn # perform operation
fnmsub.s f9, f16, f17, f6, rmm # perform operation
fnmsub.s f9, f16, f17, f6, rne # perform operation
fnmsub.s f9, f16, f17, f6, rtz # perform operation
fnmsub.s f9, f16, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x11, 0x869cb2c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x6dbfc066 # load x3 with value 0x6dbfc066
sw x3, 0(x2) # store 0x6dbfc066 in memory
flw f9, 0(x2) # load 0x6dbfc066 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmsub.s f11, f15, f9, f6, dyn # perform operation
fnmsub.s f11, f15, f9, f6, rdn # perform operation
fnmsub.s f11, f15, f9, f6, rmm # perform operation
fnmsub.s f11, f15, f9, f6, rne # perform operation
fnmsub.s f11, f15, f9, f6, rtz # perform operation
fnmsub.s f11, f15, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f15, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f15, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x25, 0x48ca0b05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x5b8c22ae # load x3 with value 0x5b8c22ae
sw x3, 0(x2) # store 0x5b8c22ae in memory
flw f5, 0(x2) # load 0x5b8c22ae from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmsub.s f25, f1, f5, f20, dyn # perform operation
fnmsub.s f25, f1, f5, f20, rdn # perform operation
fnmsub.s f25, f1, f5, f20, rmm # perform operation
fnmsub.s f25, f1, f5, f20, rne # perform operation
fnmsub.s f25, f1, f5, f20, rtz # perform operation
fnmsub.s f25, f1, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f5, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x12, 0xfbacb9d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x4c3ac6c5 # load x3 with value 0x4c3ac6c5
sw x3, 0(x2) # store 0x4c3ac6c5 in memory
flw f25, 0(x2) # load 0x4c3ac6c5 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fnmsub.s f12, f30, f25, f3, dyn # perform operation
fnmsub.s f12, f30, f25, f3, rdn # perform operation
fnmsub.s f12, f30, f25, f3, rmm # perform operation
fnmsub.s f12, f30, f25, f3, rne # perform operation
fnmsub.s f12, f30, f25, f3, rtz # perform operation
fnmsub.s f12, f30, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f30, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x16, 0x37cb7355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x0e315e29 # load x3 with value 0x0e315e29
sw x3, 0(x2) # store 0x0e315e29 in memory
flw f22, 0(x2) # load 0x0e315e29 from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fnmsub.s f16, f18, f22, f21, dyn # perform operation
fnmsub.s f16, f18, f22, f21, rdn # perform operation
fnmsub.s f16, f18, f22, f21, rmm # perform operation
fnmsub.s f16, f18, f22, f21, rne # perform operation
fnmsub.s f16, f18, f22, f21, rtz # perform operation
fnmsub.s f16, f18, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f18, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f18, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f18, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f18, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f18, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x20, 0xdf31efeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x51660dce # load x3 with value 0x51660dce
sw x3, 0(x2) # store 0x51660dce in memory
flw f8, 0(x2) # load 0x51660dce from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmsub.s f20, f15, f8, f14, dyn # perform operation
fnmsub.s f20, f15, f8, f14, rdn # perform operation
fnmsub.s f20, f15, f8, f14, rmm # perform operation
fnmsub.s f20, f15, f8, f14, rne # perform operation
fnmsub.s f20, f15, f8, f14, rtz # perform operation
fnmsub.s f20, f15, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f15, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x5, 0xec6fb5c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xcf351f3d # load x3 with value 0xcf351f3d
sw x3, 0(x2) # store 0xcf351f3d in memory
flw f4, 0(x2) # load 0xcf351f3d from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmsub.s f5, f3, f4, f19, dyn # perform operation
fnmsub.s f5, f3, f4, f19, rdn # perform operation
fnmsub.s f5, f3, f4, f19, rmm # perform operation
fnmsub.s f5, f3, f4, f19, rne # perform operation
fnmsub.s f5, f3, f4, f19, rtz # perform operation
fnmsub.s f5, f3, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f3, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f3, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x5, 0x367fdc91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0xe9800c5b # load x3 with value 0xe9800c5b
sw x3, 0(x2) # store 0xe9800c5b in memory
flw f11, 0(x2) # load 0xe9800c5b from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fnmsub.s f5, f8, f11, f26, dyn # perform operation
fnmsub.s f5, f8, f11, f26, rdn # perform operation
fnmsub.s f5, f8, f11, f26, rmm # perform operation
fnmsub.s f5, f8, f11, f26, rne # perform operation
fnmsub.s f5, f8, f11, f26, rtz # perform operation
fnmsub.s f5, f8, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x1, 0x0f90ad63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xe52a212b # load x3 with value 0xe52a212b
sw x3, 0(x2) # store 0xe52a212b in memory
flw f31, 0(x2) # load 0xe52a212b from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmsub.s f1, f9, f31, f11, dyn # perform operation
fnmsub.s f1, f9, f31, f11, rdn # perform operation
fnmsub.s f1, f9, f31, f11, rmm # perform operation
fnmsub.s f1, f9, f31, f11, rne # perform operation
fnmsub.s f1, f9, f31, f11, rtz # perform operation
fnmsub.s f1, f9, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f9, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x23, 0xd03da891 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x477a4e4b # load x3 with value 0x477a4e4b
sw x3, 0(x2) # store 0x477a4e4b in memory
flw f1, 0(x2) # load 0x477a4e4b from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmsub.s f23, f24, f1, f26, dyn # perform operation
fnmsub.s f23, f24, f1, f26, rdn # perform operation
fnmsub.s f23, f24, f1, f26, rmm # perform operation
fnmsub.s f23, f24, f1, f26, rne # perform operation
fnmsub.s f23, f24, f1, f26, rtz # perform operation
fnmsub.s f23, f24, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f24, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f24, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x24, 0xd67aa655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x9578c667 # load x3 with value 0x9578c667
sw x3, 0(x2) # store 0x9578c667 in memory
flw f3, 0(x2) # load 0x9578c667 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f24, f12, f3, f9, dyn # perform operation
fnmsub.s f24, f12, f3, f9, rdn # perform operation
fnmsub.s f24, f12, f3, f9, rmm # perform operation
fnmsub.s f24, f12, f3, f9, rne # perform operation
fnmsub.s f24, f12, f3, f9, rtz # perform operation
fnmsub.s f24, f12, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x3, 0xb89bc90e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x7c5a6c70 # load x3 with value 0x7c5a6c70
sw x3, 0(x2) # store 0x7c5a6c70 in memory
flw f1, 0(x2) # load 0x7c5a6c70 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmsub.s f3, f26, f1, f24, dyn # perform operation
fnmsub.s f3, f26, f1, f24, rdn # perform operation
fnmsub.s f3, f26, f1, f24, rmm # perform operation
fnmsub.s f3, f26, f1, f24, rne # perform operation
fnmsub.s f3, f26, f1, f24, rtz # perform operation
fnmsub.s f3, f26, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f26, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f26, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f26, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f26, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f26, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x25, 0x92a24a06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x2939ae36 # load x3 with value 0x2939ae36
sw x3, 0(x2) # store 0x2939ae36 in memory
flw f15, 0(x2) # load 0x2939ae36 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fnmsub.s f25, f12, f15, f7, dyn # perform operation
fnmsub.s f25, f12, f15, f7, rdn # perform operation
fnmsub.s f25, f12, f15, f7, rmm # perform operation
fnmsub.s f25, f12, f15, f7, rne # perform operation
fnmsub.s f25, f12, f15, f7, rtz # perform operation
fnmsub.s f25, f12, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f12, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f12, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f12, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f12, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f12, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x9, 0x92379c15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x4f7d9dcf # load x3 with value 0x4f7d9dcf
sw x3, 0(x2) # store 0x4f7d9dcf in memory
flw f5, 0(x2) # load 0x4f7d9dcf from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmsub.s f9, f8, f5, f13, dyn # perform operation
fnmsub.s f9, f8, f5, f13, rdn # perform operation
fnmsub.s f9, f8, f5, f13, rmm # perform operation
fnmsub.s f9, f8, f5, f13, rne # perform operation
fnmsub.s f9, f8, f5, f13, rtz # perform operation
fnmsub.s f9, f8, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x26, 0x782f8d06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x2cbfdbf2 # load x3 with value 0x2cbfdbf2
sw x3, 0(x2) # store 0x2cbfdbf2 in memory
flw f25, 0(x2) # load 0x2cbfdbf2 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmsub.s f26, f13, f25, f17, dyn # perform operation
fnmsub.s f26, f13, f25, f17, rdn # perform operation
fnmsub.s f26, f13, f25, f17, rmm # perform operation
fnmsub.s f26, f13, f25, f17, rne # perform operation
fnmsub.s f26, f13, f25, f17, rtz # perform operation
fnmsub.s f26, f13, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x19, 0x54b7b841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x1b3be7fa # load x3 with value 0x1b3be7fa
sw x3, 0(x2) # store 0x1b3be7fa in memory
flw f17, 0(x2) # load 0x1b3be7fa from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f19, f25, f17, f13, dyn # perform operation
fnmsub.s f19, f25, f17, f13, rdn # perform operation
fnmsub.s f19, f25, f17, f13, rmm # perform operation
fnmsub.s f19, f25, f17, f13, rne # perform operation
fnmsub.s f19, f25, f17, f13, rtz # perform operation
fnmsub.s f19, f25, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f17, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x31, 0x384aed3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x9ca37494 # load x3 with value 0x9ca37494
sw x3, 0(x2) # store 0x9ca37494 in memory
flw f29, 0(x2) # load 0x9ca37494 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmsub.s f31, f18, f29, f14, dyn # perform operation
fnmsub.s f31, f18, f29, f14, rdn # perform operation
fnmsub.s f31, f18, f29, f14, rmm # perform operation
fnmsub.s f31, f18, f29, f14, rne # perform operation
fnmsub.s f31, f18, f29, f14, rtz # perform operation
fnmsub.s f31, f18, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f18, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f18, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x4, 0x1a07891e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x2fe1040d # load x3 with value 0x2fe1040d
sw x3, 0(x2) # store 0x2fe1040d in memory
flw f24, 0(x2) # load 0x2fe1040d from memory into f24
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmsub.s f4, f31, f24, f16, dyn # perform operation
fnmsub.s f4, f31, f24, f16, rdn # perform operation
fnmsub.s f4, f31, f24, f16, rmm # perform operation
fnmsub.s f4, f31, f24, f16, rne # perform operation
fnmsub.s f4, f31, f24, f16, rtz # perform operation
fnmsub.s f4, f31, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f31, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f31, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x26, 0x5fada409 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0xd70d2c4e # load x3 with value 0xd70d2c4e
sw x3, 0(x2) # store 0xd70d2c4e in memory
flw f20, 0(x2) # load 0xd70d2c4e from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmsub.s f26, f14, f20, f1, dyn # perform operation
fnmsub.s f26, f14, f20, f1, rdn # perform operation
fnmsub.s f26, f14, f20, f1, rmm # perform operation
fnmsub.s f26, f14, f20, f1, rne # perform operation
fnmsub.s f26, f14, f20, f1, rtz # perform operation
fnmsub.s f26, f14, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x16, 0x9faa98c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x4adcb847 # load x3 with value 0x4adcb847
sw x3, 0(x2) # store 0x4adcb847 in memory
flw f19, 0(x2) # load 0x4adcb847 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmsub.s f16, f21, f19, f6, dyn # perform operation
fnmsub.s f16, f21, f19, f6, rdn # perform operation
fnmsub.s f16, f21, f19, f6, rmm # perform operation
fnmsub.s f16, f21, f19, f6, rne # perform operation
fnmsub.s f16, f21, f19, f6, rtz # perform operation
fnmsub.s f16, f21, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f21, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x17, 0xe3a24c2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x996ffaca # load x3 with value 0x996ffaca
sw x3, 0(x2) # store 0x996ffaca in memory
flw f19, 0(x2) # load 0x996ffaca from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmsub.s f17, f13, f19, f22, dyn # perform operation
fnmsub.s f17, f13, f19, f22, rdn # perform operation
fnmsub.s f17, f13, f19, f22, rmm # perform operation
fnmsub.s f17, f13, f19, f22, rne # perform operation
fnmsub.s f17, f13, f19, f22, rtz # perform operation
fnmsub.s f17, f13, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x4, 0xbbd31e74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x86d31bc4 # load x3 with value 0x86d31bc4
sw x3, 0(x2) # store 0x86d31bc4 in memory
flw f9, 0(x2) # load 0x86d31bc4 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmsub.s f4, f11, f9, f22, dyn # perform operation
fnmsub.s f4, f11, f9, f22, rdn # perform operation
fnmsub.s f4, f11, f9, f22, rmm # perform operation
fnmsub.s f4, f11, f9, f22, rne # perform operation
fnmsub.s f4, f11, f9, f22, rtz # perform operation
fnmsub.s f4, f11, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f11, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f11, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x20, 0xffc3de32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x100dd6cb # load x3 with value 0x100dd6cb
sw x3, 0(x2) # store 0x100dd6cb in memory
flw f12, 0(x2) # load 0x100dd6cb from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fnmsub.s f20, f25, f12, f11, dyn # perform operation
fnmsub.s f20, f25, f12, f11, rdn # perform operation
fnmsub.s f20, f25, f12, f11, rmm # perform operation
fnmsub.s f20, f25, f12, f11, rne # perform operation
fnmsub.s f20, f25, f12, f11, rtz # perform operation
fnmsub.s f20, f25, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x17, 0x4fc6816c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xbfe82868 # load x3 with value 0xbfe82868
sw x3, 0(x2) # store 0xbfe82868 in memory
flw f2, 0(x2) # load 0xbfe82868 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fnmsub.s f17, f3, f2, f6, dyn # perform operation
fnmsub.s f17, f3, f2, f6, rdn # perform operation
fnmsub.s f17, f3, f2, f6, rmm # perform operation
fnmsub.s f17, f3, f2, f6, rne # perform operation
fnmsub.s f17, f3, f2, f6, rtz # perform operation
fnmsub.s f17, f3, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f3, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f3, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f3, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f3, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f3, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x12, 0x17106e6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0xabf28cbd # load x3 with value 0xabf28cbd
sw x3, 0(x2) # store 0xabf28cbd in memory
flw f23, 0(x2) # load 0xabf28cbd from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fnmsub.s f12, f30, f23, f17, dyn # perform operation
fnmsub.s f12, f30, f23, f17, rdn # perform operation
fnmsub.s f12, f30, f23, f17, rmm # perform operation
fnmsub.s f12, f30, f23, f17, rne # perform operation
fnmsub.s f12, f30, f23, f17, rtz # perform operation
fnmsub.s f12, f30, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f30, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x9, 0x8f7a155f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x329a4fb0 # load x3 with value 0x329a4fb0
sw x3, 0(x2) # store 0x329a4fb0 in memory
flw f6, 0(x2) # load 0x329a4fb0 from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fnmsub.s f9, f20, f6, f27, dyn # perform operation
fnmsub.s f9, f20, f6, f27, rdn # perform operation
fnmsub.s f9, f20, f6, f27, rmm # perform operation
fnmsub.s f9, f20, f6, f27, rne # perform operation
fnmsub.s f9, f20, f6, f27, rtz # perform operation
fnmsub.s f9, f20, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x26, 0x64f9357e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x487df360 # load x3 with value 0x487df360
sw x3, 0(x2) # store 0x487df360 in memory
flw f19, 0(x2) # load 0x487df360 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmsub.s f26, f4, f19, f12, dyn # perform operation
fnmsub.s f26, f4, f19, f12, rdn # perform operation
fnmsub.s f26, f4, f19, f12, rmm # perform operation
fnmsub.s f26, f4, f19, f12, rne # perform operation
fnmsub.s f26, f4, f19, f12, rtz # perform operation
fnmsub.s f26, f4, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f4, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x17, 0xbdf149b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x02ad289d # load x3 with value 0x02ad289d
sw x3, 0(x2) # store 0x02ad289d in memory
flw f16, 0(x2) # load 0x02ad289d from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmsub.s f17, f22, f16, f9, dyn # perform operation
fnmsub.s f17, f22, f16, f9, rdn # perform operation
fnmsub.s f17, f22, f16, f9, rmm # perform operation
fnmsub.s f17, f22, f16, f9, rne # perform operation
fnmsub.s f17, f22, f16, f9, rtz # perform operation
fnmsub.s f17, f22, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f22, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f22, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f22, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f22, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f22, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x25, 0xa9f4b0bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xa22e2b7a # load x3 with value 0xa22e2b7a
sw x3, 0(x2) # store 0xa22e2b7a in memory
flw f13, 0(x2) # load 0xa22e2b7a from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fnmsub.s f25, f29, f13, f1, dyn # perform operation
fnmsub.s f25, f29, f13, f1, rdn # perform operation
fnmsub.s f25, f29, f13, f1, rmm # perform operation
fnmsub.s f25, f29, f13, f1, rne # perform operation
fnmsub.s f25, f29, f13, f1, rtz # perform operation
fnmsub.s f25, f29, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x28, 0xaa6d03d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x8adde252 # load x3 with value 0x8adde252
sw x3, 0(x2) # store 0x8adde252 in memory
flw f7, 0(x2) # load 0x8adde252 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fnmsub.s f28, f12, f7, f16, dyn # perform operation
fnmsub.s f28, f12, f7, f16, rdn # perform operation
fnmsub.s f28, f12, f7, f16, rmm # perform operation
fnmsub.s f28, f12, f7, f16, rne # perform operation
fnmsub.s f28, f12, f7, f16, rtz # perform operation
fnmsub.s f28, f12, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x24, 0x9c981fed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0xea35ca9f # load x3 with value 0xea35ca9f
sw x3, 0(x2) # store 0xea35ca9f in memory
flw f15, 0(x2) # load 0xea35ca9f from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmsub.s f24, f30, f15, f19, dyn # perform operation
fnmsub.s f24, f30, f15, f19, rdn # perform operation
fnmsub.s f24, f30, f15, f19, rmm # perform operation
fnmsub.s f24, f30, f15, f19, rne # perform operation
fnmsub.s f24, f30, f15, f19, rtz # perform operation
fnmsub.s f24, f30, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f30, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f30, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x19, 0x2caa7571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x9e4ed7c4 # load x3 with value 0x9e4ed7c4
sw x3, 0(x2) # store 0x9e4ed7c4 in memory
flw f12, 0(x2) # load 0x9e4ed7c4 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmsub.s f19, f16, f12, f5, dyn # perform operation
fnmsub.s f19, f16, f12, f5, rdn # perform operation
fnmsub.s f19, f16, f12, f5, rmm # perform operation
fnmsub.s f19, f16, f12, f5, rne # perform operation
fnmsub.s f19, f16, f12, f5, rtz # perform operation
fnmsub.s f19, f16, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f16, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x11, 0x3898aef3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x025117e5 # load x3 with value 0x025117e5
sw x3, 0(x2) # store 0x025117e5 in memory
flw f16, 0(x2) # load 0x025117e5 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fnmsub.s f11, f2, f16, f18, dyn # perform operation
fnmsub.s f11, f2, f16, f18, rdn # perform operation
fnmsub.s f11, f2, f16, f18, rmm # perform operation
fnmsub.s f11, f2, f16, f18, rne # perform operation
fnmsub.s f11, f2, f16, f18, rtz # perform operation
fnmsub.s f11, f2, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x28, 0xfe4b7729 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xb3c08be3 # load x3 with value 0xb3c08be3
sw x3, 0(x2) # store 0xb3c08be3 in memory
flw f29, 0(x2) # load 0xb3c08be3 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fnmsub.s f28, f17, f29, f12, dyn # perform operation
fnmsub.s f28, f17, f29, f12, rdn # perform operation
fnmsub.s f28, f17, f29, f12, rmm # perform operation
fnmsub.s f28, f17, f29, f12, rne # perform operation
fnmsub.s f28, f17, f29, f12, rtz # perform operation
fnmsub.s f28, f17, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f17, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x28, 0x509ed836 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xe01e8269 # load x3 with value 0xe01e8269
sw x3, 0(x2) # store 0xe01e8269 in memory
flw f20, 0(x2) # load 0xe01e8269 from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fnmsub.s f28, f3, f20, f7, dyn # perform operation
fnmsub.s f28, f3, f20, f7, rdn # perform operation
fnmsub.s f28, f3, f20, f7, rmm # perform operation
fnmsub.s f28, f3, f20, f7, rne # perform operation
fnmsub.s f28, f3, f20, f7, rtz # perform operation
fnmsub.s f28, f3, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f3, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f3, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f3, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f3, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f3, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x14, 0xcc2f3bbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x85485a4f # load x3 with value 0x85485a4f
sw x3, 0(x2) # store 0x85485a4f in memory
flw f23, 0(x2) # load 0x85485a4f from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fnmsub.s f14, f22, f23, f31, dyn # perform operation
fnmsub.s f14, f22, f23, f31, rdn # perform operation
fnmsub.s f14, f22, f23, f31, rmm # perform operation
fnmsub.s f14, f22, f23, f31, rne # perform operation
fnmsub.s f14, f22, f23, f31, rtz # perform operation
fnmsub.s f14, f22, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f22, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x2, 0x13c30c55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0x672e8452 # load x3 with value 0x672e8452
sw x3, 0(x2) # store 0x672e8452 in memory
flw f6, 0(x2) # load 0x672e8452 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f2, f30, f6, f9, dyn # perform operation
fnmsub.s f2, f30, f6, f9, rdn # perform operation
fnmsub.s f2, f30, f6, f9, rmm # perform operation
fnmsub.s f2, f30, f6, f9, rne # perform operation
fnmsub.s f2, f30, f6, f9, rtz # perform operation
fnmsub.s f2, f30, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x24, 0x470212b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x4a1a7427 # load x3 with value 0x4a1a7427
sw x3, 0(x2) # store 0x4a1a7427 in memory
flw f27, 0(x2) # load 0x4a1a7427 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmsub.s f24, f26, f27, f23, dyn # perform operation
fnmsub.s f24, f26, f27, f23, rdn # perform operation
fnmsub.s f24, f26, f27, f23, rmm # perform operation
fnmsub.s f24, f26, f27, f23, rne # perform operation
fnmsub.s f24, f26, f27, f23, rtz # perform operation
fnmsub.s f24, f26, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f26, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f26, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x30, 0xfae31264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x754b5cf7 # load x3 with value 0x754b5cf7
sw x3, 0(x2) # store 0x754b5cf7 in memory
flw f26, 0(x2) # load 0x754b5cf7 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fnmsub.s f30, f31, f26, f22, dyn # perform operation
fnmsub.s f30, f31, f26, f22, rdn # perform operation
fnmsub.s f30, f31, f26, f22, rmm # perform operation
fnmsub.s f30, f31, f26, f22, rne # perform operation
fnmsub.s f30, f31, f26, f22, rtz # perform operation
fnmsub.s f30, f31, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f31, f26, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x12, 0x236c71a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x39710f67 # load x3 with value 0x39710f67
sw x3, 0(x2) # store 0x39710f67 in memory
flw f26, 0(x2) # load 0x39710f67 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f12, f10, f26, f16, dyn # perform operation
fnmsub.s f12, f10, f26, f16, rdn # perform operation
fnmsub.s f12, f10, f26, f16, rmm # perform operation
fnmsub.s f12, f10, f26, f16, rne # perform operation
fnmsub.s f12, f10, f26, f16, rtz # perform operation
fnmsub.s f12, f10, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f10, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x7, 0x20b5ca4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x3a7c4f3e # load x3 with value 0x3a7c4f3e
sw x3, 0(x2) # store 0x3a7c4f3e in memory
flw f21, 0(x2) # load 0x3a7c4f3e from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fnmsub.s f7, f27, f21, f4, dyn # perform operation
fnmsub.s f7, f27, f21, f4, rdn # perform operation
fnmsub.s f7, f27, f21, f4, rmm # perform operation
fnmsub.s f7, f27, f21, f4, rne # perform operation
fnmsub.s f7, f27, f21, f4, rtz # perform operation
fnmsub.s f7, f27, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x31, 0x8ad76c8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0xbf99f41b # load x3 with value 0xbf99f41b
sw x3, 0(x2) # store 0xbf99f41b in memory
flw f19, 0(x2) # load 0xbf99f41b from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmsub.s f31, f29, f19, f6, dyn # perform operation
fnmsub.s f31, f29, f19, f6, rdn # perform operation
fnmsub.s f31, f29, f19, f6, rmm # perform operation
fnmsub.s f31, f29, f19, f6, rne # perform operation
fnmsub.s f31, f29, f19, f6, rtz # perform operation
fnmsub.s f31, f29, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f29, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f29, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f29, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f29, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f29, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x13, 0x58376be5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0xc2205197 # load x3 with value 0xc2205197
sw x3, 0(x2) # store 0xc2205197 in memory
flw f1, 0(x2) # load 0xc2205197 from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fnmsub.s f13, f17, f1, f4, dyn # perform operation
fnmsub.s f13, f17, f1, f4, rdn # perform operation
fnmsub.s f13, f17, f1, f4, rmm # perform operation
fnmsub.s f13, f17, f1, f4, rne # perform operation
fnmsub.s f13, f17, f1, f4, rtz # perform operation
fnmsub.s f13, f17, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x21, 0x6e310d0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x37dff807 # load x3 with value 0x37dff807
sw x3, 0(x2) # store 0x37dff807 in memory
flw f22, 0(x2) # load 0x37dff807 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fnmsub.s f21, f13, f22, f18, dyn # perform operation
fnmsub.s f21, f13, f22, f18, rdn # perform operation
fnmsub.s f21, f13, f22, f18, rmm # perform operation
fnmsub.s f21, f13, f22, f18, rne # perform operation
fnmsub.s f21, f13, f22, f18, rtz # perform operation
fnmsub.s f21, f13, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x9, 0xc4d83c87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x59bac35e # load x3 with value 0x59bac35e
sw x3, 0(x2) # store 0x59bac35e in memory
flw f22, 0(x2) # load 0x59bac35e from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fnmsub.s f9, f17, f22, f15, dyn # perform operation
fnmsub.s f9, f17, f22, f15, rdn # perform operation
fnmsub.s f9, f17, f22, f15, rmm # perform operation
fnmsub.s f9, f17, f22, f15, rne # perform operation
fnmsub.s f9, f17, f22, f15, rtz # perform operation
fnmsub.s f9, f17, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f17, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f17, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x9, 0x7541c9e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xf55a00f0 # load x3 with value 0xf55a00f0
sw x3, 0(x2) # store 0xf55a00f0 in memory
flw f31, 0(x2) # load 0xf55a00f0 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmsub.s f9, f6, f31, f28, dyn # perform operation
fnmsub.s f9, f6, f31, f28, rdn # perform operation
fnmsub.s f9, f6, f31, f28, rmm # perform operation
fnmsub.s f9, f6, f31, f28, rne # perform operation
fnmsub.s f9, f6, f31, f28, rtz # perform operation
fnmsub.s f9, f6, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x18, 0x43a252c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x0ac0c133 # load x3 with value 0x0ac0c133
sw x3, 0(x2) # store 0x0ac0c133 in memory
flw f27, 0(x2) # load 0x0ac0c133 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmsub.s f18, f5, f27, f10, dyn # perform operation
fnmsub.s f18, f5, f27, f10, rdn # perform operation
fnmsub.s f18, f5, f27, f10, rmm # perform operation
fnmsub.s f18, f5, f27, f10, rne # perform operation
fnmsub.s f18, f5, f27, f10, rtz # perform operation
fnmsub.s f18, f5, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f5, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x31, 0x25f60790 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0xb5bece3b # load x3 with value 0xb5bece3b
sw x3, 0(x2) # store 0xb5bece3b in memory
flw f19, 0(x2) # load 0xb5bece3b from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fnmsub.s f31, f23, f19, f29, dyn # perform operation
fnmsub.s f31, f23, f19, f29, rdn # perform operation
fnmsub.s f31, f23, f19, f29, rmm # perform operation
fnmsub.s f31, f23, f19, f29, rne # perform operation
fnmsub.s f31, f23, f19, f29, rtz # perform operation
fnmsub.s f31, f23, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f19, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x15, 0xcb759352 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0xf976727a # load x3 with value 0xf976727a
sw x3, 0(x2) # store 0xf976727a in memory
flw f18, 0(x2) # load 0xf976727a from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmsub.s f15, f28, f18, f7, dyn # perform operation
fnmsub.s f15, f28, f18, f7, rdn # perform operation
fnmsub.s f15, f28, f18, f7, rmm # perform operation
fnmsub.s f15, f28, f18, f7, rne # perform operation
fnmsub.s f15, f28, f18, f7, rtz # perform operation
fnmsub.s f15, f28, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f28, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x20, 0x522146da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x3a5241d0 # load x3 with value 0x3a5241d0
sw x3, 0(x2) # store 0x3a5241d0 in memory
flw f8, 0(x2) # load 0x3a5241d0 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmsub.s f20, f5, f8, f19, dyn # perform operation
fnmsub.s f20, f5, f8, f19, rdn # perform operation
fnmsub.s f20, f5, f8, f19, rmm # perform operation
fnmsub.s f20, f5, f8, f19, rne # perform operation
fnmsub.s f20, f5, f8, f19, rtz # perform operation
fnmsub.s f20, f5, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x21, 0xb7fae8f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x36b8107d # load x3 with value 0x36b8107d
sw x3, 0(x2) # store 0x36b8107d in memory
flw f30, 0(x2) # load 0x36b8107d from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fnmsub.s f21, f5, f30, f22, dyn # perform operation
fnmsub.s f21, f5, f30, f22, rdn # perform operation
fnmsub.s f21, f5, f30, f22, rmm # perform operation
fnmsub.s f21, f5, f30, f22, rne # perform operation
fnmsub.s f21, f5, f30, f22, rtz # perform operation
fnmsub.s f21, f5, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x12, 0x90789bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x88991808 # load x3 with value 0x88991808
sw x3, 0(x2) # store 0x88991808 in memory
flw f10, 0(x2) # load 0x88991808 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fnmsub.s f12, f2, f10, f18, dyn # perform operation
fnmsub.s f12, f2, f10, f18, rdn # perform operation
fnmsub.s f12, f2, f10, f18, rmm # perform operation
fnmsub.s f12, f2, f10, f18, rne # perform operation
fnmsub.s f12, f2, f10, f18, rtz # perform operation
fnmsub.s f12, f2, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f2, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x18, 0xaa4e9b17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x9f86f46a # load x3 with value 0x9f86f46a
sw x3, 0(x2) # store 0x9f86f46a in memory
flw f25, 0(x2) # load 0x9f86f46a from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmsub.s f18, f31, f25, f1, dyn # perform operation
fnmsub.s f18, f31, f25, f1, rdn # perform operation
fnmsub.s f18, f31, f25, f1, rmm # perform operation
fnmsub.s f18, f31, f25, f1, rne # perform operation
fnmsub.s f18, f31, f25, f1, rtz # perform operation
fnmsub.s f18, f31, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f31, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x12, 0x02221a8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x633d3e8c # load x3 with value 0x633d3e8c
sw x3, 0(x2) # store 0x633d3e8c in memory
flw f5, 0(x2) # load 0x633d3e8c from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmsub.s f12, f24, f5, f29, dyn # perform operation
fnmsub.s f12, f24, f5, f29, rdn # perform operation
fnmsub.s f12, f24, f5, f29, rmm # perform operation
fnmsub.s f12, f24, f5, f29, rne # perform operation
fnmsub.s f12, f24, f5, f29, rtz # perform operation
fnmsub.s f12, f24, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x6, 0x347a2d7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x99f73a49 # load x3 with value 0x99f73a49
sw x3, 0(x2) # store 0x99f73a49 in memory
flw f29, 0(x2) # load 0x99f73a49 from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
fnmsub.s f6, f9, f29, f4, dyn # perform operation
fnmsub.s f6, f9, f29, f4, rdn # perform operation
fnmsub.s f6, f9, f29, f4, rmm # perform operation
fnmsub.s f6, f9, f29, f4, rne # perform operation
fnmsub.s f6, f9, f29, f4, rtz # perform operation
fnmsub.s f6, f9, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f9, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f9, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f9, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f9, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f9, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x22, 0xe4a6f3da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x73fead27 # load x3 with value 0x73fead27
sw x3, 0(x2) # store 0x73fead27 in memory
flw f11, 0(x2) # load 0x73fead27 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fnmsub.s f22, f24, f11, f27, dyn # perform operation
fnmsub.s f22, f24, f11, f27, rdn # perform operation
fnmsub.s f22, f24, f11, f27, rmm # perform operation
fnmsub.s f22, f24, f11, f27, rne # perform operation
fnmsub.s f22, f24, f11, f27, rtz # perform operation
fnmsub.s f22, f24, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f24, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f24, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x11, 0xcf0f7cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x1d11f9c1 # load x3 with value 0x1d11f9c1
sw x3, 0(x2) # store 0x1d11f9c1 in memory
flw f13, 0(x2) # load 0x1d11f9c1 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fnmsub.s f11, f22, f13, f21, dyn # perform operation
fnmsub.s f11, f22, f13, f21, rdn # perform operation
fnmsub.s f11, f22, f13, f21, rmm # perform operation
fnmsub.s f11, f22, f13, f21, rne # perform operation
fnmsub.s f11, f22, f13, f21, rtz # perform operation
fnmsub.s f11, f22, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f22, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x14, 0x1a61c224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x5e950049 # load x3 with value 0x5e950049
sw x3, 0(x2) # store 0x5e950049 in memory
flw f15, 0(x2) # load 0x5e950049 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fnmsub.s f14, f27, f15, f8, dyn # perform operation
fnmsub.s f14, f27, f15, f8, rdn # perform operation
fnmsub.s f14, f27, f15, f8, rmm # perform operation
fnmsub.s f14, f27, f15, f8, rne # perform operation
fnmsub.s f14, f27, f15, f8, rtz # perform operation
fnmsub.s f14, f27, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f27, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f27, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x24, 0xcf13b486 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x9e437704 # load x3 with value 0x9e437704
sw x3, 0(x2) # store 0x9e437704 in memory
flw f8, 0(x2) # load 0x9e437704 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmsub.s f24, f2, f8, f26, dyn # perform operation
fnmsub.s f24, f2, f8, f26, rdn # perform operation
fnmsub.s f24, f2, f8, f26, rmm # perform operation
fnmsub.s f24, f2, f8, f26, rne # perform operation
fnmsub.s f24, f2, f8, f26, rtz # perform operation
fnmsub.s f24, f2, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x22, 0x62645283 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x7aeeb9ab # load x3 with value 0x7aeeb9ab
sw x3, 0(x2) # store 0x7aeeb9ab in memory
flw f18, 0(x2) # load 0x7aeeb9ab from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f22, f31, f18, f16, dyn # perform operation
fnmsub.s f22, f31, f18, f16, rdn # perform operation
fnmsub.s f22, f31, f18, f16, rmm # perform operation
fnmsub.s f22, f31, f18, f16, rne # perform operation
fnmsub.s f22, f31, f18, f16, rtz # perform operation
fnmsub.s f22, f31, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f31, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x1, 0xb8bb7715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xad3ab14c # load x3 with value 0xad3ab14c
sw x3, 0(x2) # store 0xad3ab14c in memory
flw f2, 0(x2) # load 0xad3ab14c from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmsub.s f1, f27, f2, f25, dyn # perform operation
fnmsub.s f1, f27, f2, f25, rdn # perform operation
fnmsub.s f1, f27, f2, f25, rmm # perform operation
fnmsub.s f1, f27, f2, f25, rne # perform operation
fnmsub.s f1, f27, f2, f25, rtz # perform operation
fnmsub.s f1, f27, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f27, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f27, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x11, 0xe6a80af0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x14576563 # load x3 with value 0x14576563
sw x3, 0(x2) # store 0x14576563 in memory
flw f31, 0(x2) # load 0x14576563 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fnmsub.s f11, f20, f31, f5, dyn # perform operation
fnmsub.s f11, f20, f31, f5, rdn # perform operation
fnmsub.s f11, f20, f31, f5, rmm # perform operation
fnmsub.s f11, f20, f31, f5, rne # perform operation
fnmsub.s f11, f20, f31, f5, rtz # perform operation
fnmsub.s f11, f20, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f20, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f20, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f20, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f20, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f20, f31, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x11, 0xfda1eb77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xf336366f # load x3 with value 0xf336366f
sw x3, 0(x2) # store 0xf336366f in memory
flw f29, 0(x2) # load 0xf336366f from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmsub.s f11, f27, f29, f21, dyn # perform operation
fnmsub.s f11, f27, f29, f21, rdn # perform operation
fnmsub.s f11, f27, f29, f21, rmm # perform operation
fnmsub.s f11, f27, f29, f21, rne # perform operation
fnmsub.s f11, f27, f29, f21, rtz # perform operation
fnmsub.s f11, f27, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x5, 0x7027c804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x99c222dc # load x3 with value 0x99c222dc
sw x3, 0(x2) # store 0x99c222dc in memory
flw f18, 0(x2) # load 0x99c222dc from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fnmsub.s f5, f19, f18, f17, dyn # perform operation
fnmsub.s f5, f19, f18, f17, rdn # perform operation
fnmsub.s f5, f19, f18, f17, rmm # perform operation
fnmsub.s f5, f19, f18, f17, rne # perform operation
fnmsub.s f5, f19, f18, f17, rtz # perform operation
fnmsub.s f5, f19, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x25, 0xd2b3284d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x8aa0fb0d # load x3 with value 0x8aa0fb0d
sw x3, 0(x2) # store 0x8aa0fb0d in memory
flw f27, 0(x2) # load 0x8aa0fb0d from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmsub.s f25, f4, f27, f23, dyn # perform operation
fnmsub.s f25, f4, f27, f23, rdn # perform operation
fnmsub.s f25, f4, f27, f23, rmm # perform operation
fnmsub.s f25, f4, f27, f23, rne # perform operation
fnmsub.s f25, f4, f27, f23, rtz # perform operation
fnmsub.s f25, f4, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f4, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f4, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f4, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f4, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f4, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x18, 0xdecb0f1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x17bc455f # load x3 with value 0x17bc455f
sw x3, 0(x2) # store 0x17bc455f in memory
flw f17, 0(x2) # load 0x17bc455f from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fnmsub.s f18, f2, f17, f3, dyn # perform operation
fnmsub.s f18, f2, f17, f3, rdn # perform operation
fnmsub.s f18, f2, f17, f3, rmm # perform operation
fnmsub.s f18, f2, f17, f3, rne # perform operation
fnmsub.s f18, f2, f17, f3, rtz # perform operation
fnmsub.s f18, f2, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f2, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x26, 0x8ea07ad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xf730d66c # load x3 with value 0xf730d66c
sw x3, 0(x2) # store 0xf730d66c in memory
flw f19, 0(x2) # load 0xf730d66c from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmsub.s f26, f14, f19, f17, dyn # perform operation
fnmsub.s f26, f14, f19, f17, rdn # perform operation
fnmsub.s f26, f14, f19, f17, rmm # perform operation
fnmsub.s f26, f14, f19, f17, rne # perform operation
fnmsub.s f26, f14, f19, f17, rtz # perform operation
fnmsub.s f26, f14, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x22, 0x39e84cd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0xe04bfaf2 # load x3 with value 0xe04bfaf2
sw x3, 0(x2) # store 0xe04bfaf2 in memory
flw f27, 0(x2) # load 0xe04bfaf2 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmsub.s f22, f3, f27, f9, dyn # perform operation
fnmsub.s f22, f3, f27, f9, rdn # perform operation
fnmsub.s f22, f3, f27, f9, rmm # perform operation
fnmsub.s f22, f3, f27, f9, rne # perform operation
fnmsub.s f22, f3, f27, f9, rtz # perform operation
fnmsub.s f22, f3, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x11, 0xfdaa6b85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x8008854e # load x3 with value 0x8008854e
sw x3, 0(x2) # store 0x8008854e in memory
flw f19, 0(x2) # load 0x8008854e from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmsub.s f11, f22, f19, f21, dyn # perform operation
fnmsub.s f11, f22, f19, f21, rdn # perform operation
fnmsub.s f11, f22, f19, f21, rmm # perform operation
fnmsub.s f11, f22, f19, f21, rne # perform operation
fnmsub.s f11, f22, f19, f21, rtz # perform operation
fnmsub.s f11, f22, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f22, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x6, 0x43a632c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x695e6ef9 # load x3 with value 0x695e6ef9
sw x3, 0(x2) # store 0x695e6ef9 in memory
flw f20, 0(x2) # load 0x695e6ef9 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fnmsub.s f6, f13, f20, f31, dyn # perform operation
fnmsub.s f6, f13, f20, f31, rdn # perform operation
fnmsub.s f6, f13, f20, f31, rmm # perform operation
fnmsub.s f6, f13, f20, f31, rne # perform operation
fnmsub.s f6, f13, f20, f31, rtz # perform operation
fnmsub.s f6, f13, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f13, f20, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x18, 0xf5187a4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xfcbc1083 # load x3 with value 0xfcbc1083
sw x3, 0(x2) # store 0xfcbc1083 in memory
flw f26, 0(x2) # load 0xfcbc1083 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmsub.s f18, f22, f26, f3, dyn # perform operation
fnmsub.s f18, f22, f26, f3, rdn # perform operation
fnmsub.s f18, f22, f26, f3, rmm # perform operation
fnmsub.s f18, f22, f26, f3, rne # perform operation
fnmsub.s f18, f22, f26, f3, rtz # perform operation
fnmsub.s f18, f22, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x24, 0x66574bad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x87226da5 # load x3 with value 0x87226da5
sw x3, 0(x2) # store 0x87226da5 in memory
flw f15, 0(x2) # load 0x87226da5 from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f24, f23, f15, f3, dyn # perform operation
fnmsub.s f24, f23, f15, f3, rdn # perform operation
fnmsub.s f24, f23, f15, f3, rmm # perform operation
fnmsub.s f24, f23, f15, f3, rne # perform operation
fnmsub.s f24, f23, f15, f3, rtz # perform operation
fnmsub.s f24, f23, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x10, 0x0fe13ebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0xd5c385df # load x3 with value 0xd5c385df
sw x3, 0(x2) # store 0xd5c385df in memory
flw f31, 0(x2) # load 0xd5c385df from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmsub.s f10, f19, f31, f26, dyn # perform operation
fnmsub.s f10, f19, f31, f26, rdn # perform operation
fnmsub.s f10, f19, f31, f26, rmm # perform operation
fnmsub.s f10, f19, f31, f26, rne # perform operation
fnmsub.s f10, f19, f31, f26, rtz # perform operation
fnmsub.s f10, f19, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f31, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x24, 0xb6a9039c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x6b18808b # load x3 with value 0x6b18808b
sw x3, 0(x2) # store 0x6b18808b in memory
flw f27, 0(x2) # load 0x6b18808b from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fnmsub.s f24, f9, f27, f5, dyn # perform operation
fnmsub.s f24, f9, f27, f5, rdn # perform operation
fnmsub.s f24, f9, f27, f5, rmm # perform operation
fnmsub.s f24, f9, f27, f5, rne # perform operation
fnmsub.s f24, f9, f27, f5, rtz # perform operation
fnmsub.s f24, f9, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f9, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f9, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f9, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f9, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f9, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x26, 0x47f43641 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0xbbfe868d # load x3 with value 0xbbfe868d
sw x3, 0(x2) # store 0xbbfe868d in memory
flw f25, 0(x2) # load 0xbbfe868d from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fnmsub.s f26, f13, f25, f3, dyn # perform operation
fnmsub.s f26, f13, f25, f3, rdn # perform operation
fnmsub.s f26, f13, f25, f3, rmm # perform operation
fnmsub.s f26, f13, f25, f3, rne # perform operation
fnmsub.s f26, f13, f25, f3, rtz # perform operation
fnmsub.s f26, f13, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x17, 0xcf2f8105 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x78dbe1a1 # load x3 with value 0x78dbe1a1
sw x3, 0(x2) # store 0x78dbe1a1 in memory
flw f30, 0(x2) # load 0x78dbe1a1 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
fnmsub.s f17, f20, f30, f4, dyn # perform operation
fnmsub.s f17, f20, f30, f4, rdn # perform operation
fnmsub.s f17, f20, f30, f4, rmm # perform operation
fnmsub.s f17, f20, f30, f4, rne # perform operation
fnmsub.s f17, f20, f30, f4, rtz # perform operation
fnmsub.s f17, f20, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f20, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x1, 0xc4e9774e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x0dc635f4 # load x3 with value 0x0dc635f4
sw x3, 0(x2) # store 0x0dc635f4 in memory
flw f27, 0(x2) # load 0x0dc635f4 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fnmsub.s f1, f18, f27, f4, dyn # perform operation
fnmsub.s f1, f18, f27, f4, rdn # perform operation
fnmsub.s f1, f18, f27, f4, rmm # perform operation
fnmsub.s f1, f18, f27, f4, rne # perform operation
fnmsub.s f1, f18, f27, f4, rtz # perform operation
fnmsub.s f1, f18, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f27, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x17, 0xa1760699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x8ef8d82d # load x3 with value 0x8ef8d82d
sw x3, 0(x2) # store 0x8ef8d82d in memory
flw f25, 0(x2) # load 0x8ef8d82d from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmsub.s f17, f24, f25, f3, dyn # perform operation
fnmsub.s f17, f24, f25, f3, rdn # perform operation
fnmsub.s f17, f24, f25, f3, rmm # perform operation
fnmsub.s f17, f24, f25, f3, rne # perform operation
fnmsub.s f17, f24, f25, f3, rtz # perform operation
fnmsub.s f17, f24, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f24, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x6, 0x3c9ad0bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x1f649f52 # load x3 with value 0x1f649f52
sw x3, 0(x2) # store 0x1f649f52 in memory
flw f14, 0(x2) # load 0x1f649f52 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmsub.s f6, f30, f14, f23, dyn # perform operation
fnmsub.s f6, f30, f14, f23, rdn # perform operation
fnmsub.s f6, f30, f14, f23, rmm # perform operation
fnmsub.s f6, f30, f14, f23, rne # perform operation
fnmsub.s f6, f30, f14, f23, rtz # perform operation
fnmsub.s f6, f30, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x23, 0x002da2b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x23b5f196 # load x3 with value 0x23b5f196
sw x3, 0(x2) # store 0x23b5f196 in memory
flw f4, 0(x2) # load 0x23b5f196 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fnmsub.s f23, f22, f4, f17, dyn # perform operation
fnmsub.s f23, f22, f4, f17, rdn # perform operation
fnmsub.s f23, f22, f4, f17, rmm # perform operation
fnmsub.s f23, f22, f4, f17, rne # perform operation
fnmsub.s f23, f22, f4, f17, rtz # perform operation
fnmsub.s f23, f22, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f22, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x25, 0xa39baa61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x1bcb4076 # load x3 with value 0x1bcb4076
sw x3, 0(x2) # store 0x1bcb4076 in memory
flw f14, 0(x2) # load 0x1bcb4076 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fnmsub.s f25, f9, f14, f17, dyn # perform operation
fnmsub.s f25, f9, f14, f17, rdn # perform operation
fnmsub.s f25, f9, f14, f17, rmm # perform operation
fnmsub.s f25, f9, f14, f17, rne # perform operation
fnmsub.s f25, f9, f14, f17, rtz # perform operation
fnmsub.s f25, f9, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f9, f14, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x29, 0x4a5e0a68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0xaaf6be46 # load x3 with value 0xaaf6be46
sw x3, 0(x2) # store 0xaaf6be46 in memory
flw f3, 0(x2) # load 0xaaf6be46 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmsub.s f29, f19, f3, f17, dyn # perform operation
fnmsub.s f29, f19, f3, f17, rdn # perform operation
fnmsub.s f29, f19, f3, f17, rmm # perform operation
fnmsub.s f29, f19, f3, f17, rne # perform operation
fnmsub.s f29, f19, f3, f17, rtz # perform operation
fnmsub.s f29, f19, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x26, 0x845adeaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x53f4e1a3 # load x3 with value 0x53f4e1a3
sw x3, 0(x2) # store 0x53f4e1a3 in memory
flw f11, 0(x2) # load 0x53f4e1a3 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmsub.s f26, f7, f11, f22, dyn # perform operation
fnmsub.s f26, f7, f11, f22, rdn # perform operation
fnmsub.s f26, f7, f11, f22, rmm # perform operation
fnmsub.s f26, f7, f11, f22, rne # perform operation
fnmsub.s f26, f7, f11, f22, rtz # perform operation
fnmsub.s f26, f7, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x21, 0x55479936 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x3d81ff79 # load x3 with value 0x3d81ff79
sw x3, 0(x2) # store 0x3d81ff79 in memory
flw f1, 0(x2) # load 0x3d81ff79 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmsub.s f21, f20, f1, f11, dyn # perform operation
fnmsub.s f21, f20, f1, f11, rdn # perform operation
fnmsub.s f21, f20, f1, f11, rmm # perform operation
fnmsub.s f21, f20, f1, f11, rne # perform operation
fnmsub.s f21, f20, f1, f11, rtz # perform operation
fnmsub.s f21, f20, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f20, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x25, 0x90fc0514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x04bfe7c0 # load x3 with value 0x04bfe7c0
sw x3, 0(x2) # store 0x04bfe7c0 in memory
flw f21, 0(x2) # load 0x04bfe7c0 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fnmsub.s f25, f5, f21, f27, dyn # perform operation
fnmsub.s f25, f5, f21, f27, rdn # perform operation
fnmsub.s f25, f5, f21, f27, rmm # perform operation
fnmsub.s f25, f5, f21, f27, rne # perform operation
fnmsub.s f25, f5, f21, f27, rtz # perform operation
fnmsub.s f25, f5, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f5, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x26, 0x32018757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x78117cda # load x3 with value 0x78117cda
sw x3, 0(x2) # store 0x78117cda in memory
flw f2, 0(x2) # load 0x78117cda from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmsub.s f26, f30, f2, f8, dyn # perform operation
fnmsub.s f26, f30, f2, f8, rdn # perform operation
fnmsub.s f26, f30, f2, f8, rmm # perform operation
fnmsub.s f26, f30, f2, f8, rne # perform operation
fnmsub.s f26, f30, f2, f8, rtz # perform operation
fnmsub.s f26, f30, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f30, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x22, 0xf985ed19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x5572423f # load x3 with value 0x5572423f
sw x3, 0(x2) # store 0x5572423f in memory
flw f10, 0(x2) # load 0x5572423f from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fnmsub.s f22, f9, f10, f1, dyn # perform operation
fnmsub.s f22, f9, f10, f1, rdn # perform operation
fnmsub.s f22, f9, f10, f1, rmm # perform operation
fnmsub.s f22, f9, f10, f1, rne # perform operation
fnmsub.s f22, f9, f10, f1, rtz # perform operation
fnmsub.s f22, f9, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x20, 0x01e154f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x25b56b6b # load x3 with value 0x25b56b6b
sw x3, 0(x2) # store 0x25b56b6b in memory
flw f11, 0(x2) # load 0x25b56b6b from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fnmsub.s f20, f12, f11, f30, dyn # perform operation
fnmsub.s f20, f12, f11, f30, rdn # perform operation
fnmsub.s f20, f12, f11, f30, rmm # perform operation
fnmsub.s f20, f12, f11, f30, rne # perform operation
fnmsub.s f20, f12, f11, f30, rtz # perform operation
fnmsub.s f20, f12, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x2, 0xbf21d83c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xb59a01b4 # load x3 with value 0xb59a01b4
sw x3, 0(x2) # store 0xb59a01b4 in memory
flw f24, 0(x2) # load 0xb59a01b4 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fnmsub.s f2, f10, f24, f3, dyn # perform operation
fnmsub.s f2, f10, f24, f3, rdn # perform operation
fnmsub.s f2, f10, f24, f3, rmm # perform operation
fnmsub.s f2, f10, f24, f3, rne # perform operation
fnmsub.s f2, f10, f24, f3, rtz # perform operation
fnmsub.s f2, f10, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f10, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x20, 0x93c1d250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x9364b1dc # load x3 with value 0x9364b1dc
sw x3, 0(x2) # store 0x9364b1dc in memory
flw f14, 0(x2) # load 0x9364b1dc from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f20, f9, f14, f3, dyn # perform operation
fnmsub.s f20, f9, f14, f3, rdn # perform operation
fnmsub.s f20, f9, f14, f3, rmm # perform operation
fnmsub.s f20, f9, f14, f3, rne # perform operation
fnmsub.s f20, f9, f14, f3, rtz # perform operation
fnmsub.s f20, f9, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f9, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x14, 0x501104ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xfa065744 # load x3 with value 0xfa065744
sw x3, 0(x2) # store 0xfa065744 in memory
flw f4, 0(x2) # load 0xfa065744 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmsub.s f14, f10, f4, f16, dyn # perform operation
fnmsub.s f14, f10, f4, f16, rdn # perform operation
fnmsub.s f14, f10, f4, f16, rmm # perform operation
fnmsub.s f14, f10, f4, f16, rne # perform operation
fnmsub.s f14, f10, f4, f16, rtz # perform operation
fnmsub.s f14, f10, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f10, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f10, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f10, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f10, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f10, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x8, 0x68a321ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x384a6ac6 # load x3 with value 0x384a6ac6
sw x3, 0(x2) # store 0x384a6ac6 in memory
flw f5, 0(x2) # load 0x384a6ac6 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmsub.s f8, f25, f5, f14, dyn # perform operation
fnmsub.s f8, f25, f5, f14, rdn # perform operation
fnmsub.s f8, f25, f5, f14, rmm # perform operation
fnmsub.s f8, f25, f5, f14, rne # perform operation
fnmsub.s f8, f25, f5, f14, rtz # perform operation
fnmsub.s f8, f25, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x18, 0x9b8f6342 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xcd9ac89b # load x3 with value 0xcd9ac89b
sw x3, 0(x2) # store 0xcd9ac89b in memory
flw f8, 0(x2) # load 0xcd9ac89b from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fnmsub.s f18, f10, f8, f25, dyn # perform operation
fnmsub.s f18, f10, f8, f25, rdn # perform operation
fnmsub.s f18, f10, f8, f25, rmm # perform operation
fnmsub.s f18, f10, f8, f25, rne # perform operation
fnmsub.s f18, f10, f8, f25, rtz # perform operation
fnmsub.s f18, f10, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x17, 0xa539a94e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xe095b409 # load x3 with value 0xe095b409
sw x3, 0(x2) # store 0xe095b409 in memory
flw f25, 0(x2) # load 0xe095b409 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmsub.s f17, f28, f25, f29, dyn # perform operation
fnmsub.s f17, f28, f25, f29, rdn # perform operation
fnmsub.s f17, f28, f25, f29, rmm # perform operation
fnmsub.s f17, f28, f25, f29, rne # perform operation
fnmsub.s f17, f28, f25, f29, rtz # perform operation
fnmsub.s f17, f28, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f28, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x22, 0x757c6215 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x26d9aa9a # load x3 with value 0x26d9aa9a
sw x3, 0(x2) # store 0x26d9aa9a in memory
flw f26, 0(x2) # load 0x26d9aa9a from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmsub.s f22, f19, f26, f15, dyn # perform operation
fnmsub.s f22, f19, f26, f15, rdn # perform operation
fnmsub.s f22, f19, f26, f15, rmm # perform operation
fnmsub.s f22, f19, f26, f15, rne # perform operation
fnmsub.s f22, f19, f26, f15, rtz # perform operation
fnmsub.s f22, f19, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x19, 0xeb04dd17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xe70d3cea # load x3 with value 0xe70d3cea
sw x3, 0(x2) # store 0xe70d3cea in memory
flw f25, 0(x2) # load 0xe70d3cea from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmsub.s f19, f3, f25, f13, dyn # perform operation
fnmsub.s f19, f3, f25, f13, rdn # perform operation
fnmsub.s f19, f3, f25, f13, rmm # perform operation
fnmsub.s f19, f3, f25, f13, rne # perform operation
fnmsub.s f19, f3, f25, f13, rtz # perform operation
fnmsub.s f19, f3, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x27, 0x83922e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x253aead0 # load x3 with value 0x253aead0
sw x3, 0(x2) # store 0x253aead0 in memory
flw f20, 0(x2) # load 0x253aead0 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fnmsub.s f27, f16, f20, f15, dyn # perform operation
fnmsub.s f27, f16, f20, f15, rdn # perform operation
fnmsub.s f27, f16, f20, f15, rmm # perform operation
fnmsub.s f27, f16, f20, f15, rne # perform operation
fnmsub.s f27, f16, f20, f15, rtz # perform operation
fnmsub.s f27, f16, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f20, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x25, 0xaa7852e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x461b9f36 # load x3 with value 0x461b9f36
sw x3, 0(x2) # store 0x461b9f36 in memory
flw f24, 0(x2) # load 0x461b9f36 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
fnmsub.s f25, f3, f24, f4, dyn # perform operation
fnmsub.s f25, f3, f24, f4, rdn # perform operation
fnmsub.s f25, f3, f24, f4, rmm # perform operation
fnmsub.s f25, f3, f24, f4, rne # perform operation
fnmsub.s f25, f3, f24, f4, rtz # perform operation
fnmsub.s f25, f3, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x22, 0x61e4b886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x359c9b31 # load x3 with value 0x359c9b31
sw x3, 0(x2) # store 0x359c9b31 in memory
flw f21, 0(x2) # load 0x359c9b31 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmsub.s f22, f9, f21, f30, dyn # perform operation
fnmsub.s f22, f9, f21, f30, rdn # perform operation
fnmsub.s f22, f9, f21, f30, rmm # perform operation
fnmsub.s f22, f9, f21, f30, rne # perform operation
fnmsub.s f22, f9, f21, f30, rtz # perform operation
fnmsub.s f22, f9, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x28, 0x4ea017d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xb58eb390 # load x3 with value 0xb58eb390
sw x3, 0(x2) # store 0xb58eb390 in memory
flw f10, 0(x2) # load 0xb58eb390 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fnmsub.s f28, f12, f10, f14, dyn # perform operation
fnmsub.s f28, f12, f10, f14, rdn # perform operation
fnmsub.s f28, f12, f10, f14, rmm # perform operation
fnmsub.s f28, f12, f10, f14, rne # perform operation
fnmsub.s f28, f12, f10, f14, rtz # perform operation
fnmsub.s f28, f12, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x13, 0xfcefcde8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0xe8d64e63 # load x3 with value 0xe8d64e63
sw x3, 0(x2) # store 0xe8d64e63 in memory
flw f12, 0(x2) # load 0xe8d64e63 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
fnmsub.s f13, f23, f12, f4, dyn # perform operation
fnmsub.s f13, f23, f12, f4, rdn # perform operation
fnmsub.s f13, f23, f12, f4, rmm # perform operation
fnmsub.s f13, f23, f12, f4, rne # perform operation
fnmsub.s f13, f23, f12, f4, rtz # perform operation
fnmsub.s f13, f23, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x2, 0x7e1c74a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xf3f49f25 # load x3 with value 0xf3f49f25
sw x3, 0(x2) # store 0xf3f49f25 in memory
flw f18, 0(x2) # load 0xf3f49f25 from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmsub.s f2, f28, f18, f24, dyn # perform operation
fnmsub.s f2, f28, f18, f24, rdn # perform operation
fnmsub.s f2, f28, f18, f24, rmm # perform operation
fnmsub.s f2, f28, f18, f24, rne # perform operation
fnmsub.s f2, f28, f18, f24, rtz # perform operation
fnmsub.s f2, f28, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f28, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f28, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f28, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f28, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f28, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x29, 0x060c794d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x1d6e46e2 # load x3 with value 0x1d6e46e2
sw x3, 0(x2) # store 0x1d6e46e2 in memory
flw f27, 0(x2) # load 0x1d6e46e2 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fnmsub.s f29, f7, f27, f6, dyn # perform operation
fnmsub.s f29, f7, f27, f6, rdn # perform operation
fnmsub.s f29, f7, f27, f6, rmm # perform operation
fnmsub.s f29, f7, f27, f6, rne # perform operation
fnmsub.s f29, f7, f27, f6, rtz # perform operation
fnmsub.s f29, f7, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f7, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x15, 0x63e27b02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0xe796fcd3 # load x3 with value 0xe796fcd3
sw x3, 0(x2) # store 0xe796fcd3 in memory
flw f18, 0(x2) # load 0xe796fcd3 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fnmsub.s f15, f8, f18, f12, dyn # perform operation
fnmsub.s f15, f8, f18, f12, rdn # perform operation
fnmsub.s f15, f8, f18, f12, rmm # perform operation
fnmsub.s f15, f8, f18, f12, rne # perform operation
fnmsub.s f15, f8, f18, f12, rtz # perform operation
fnmsub.s f15, f8, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f8, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x23, 0xf3221c1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xe9f119ce # load x3 with value 0xe9f119ce
sw x3, 0(x2) # store 0xe9f119ce in memory
flw f29, 0(x2) # load 0xe9f119ce from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmsub.s f23, f21, f29, f18, dyn # perform operation
fnmsub.s f23, f21, f29, f18, rdn # perform operation
fnmsub.s f23, f21, f29, f18, rmm # perform operation
fnmsub.s f23, f21, f29, f18, rne # perform operation
fnmsub.s f23, f21, f29, f18, rtz # perform operation
fnmsub.s f23, f21, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f21, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x5, 0xe18f4952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x289d4cd5 # load x3 with value 0x289d4cd5
sw x3, 0(x2) # store 0x289d4cd5 in memory
flw f30, 0(x2) # load 0x289d4cd5 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmsub.s f5, f7, f30, f4, dyn # perform operation
fnmsub.s f5, f7, f30, f4, rdn # perform operation
fnmsub.s f5, f7, f30, f4, rmm # perform operation
fnmsub.s f5, f7, f30, f4, rne # perform operation
fnmsub.s f5, f7, f30, f4, rtz # perform operation
fnmsub.s f5, f7, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x1, 0xebb1b08f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x8c29ddcc # load x3 with value 0x8c29ddcc
sw x3, 0(x2) # store 0x8c29ddcc in memory
flw f3, 0(x2) # load 0x8c29ddcc from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmsub.s f1, f29, f3, f21, dyn # perform operation
fnmsub.s f1, f29, f3, f21, rdn # perform operation
fnmsub.s f1, f29, f3, f21, rmm # perform operation
fnmsub.s f1, f29, f3, f21, rne # perform operation
fnmsub.s f1, f29, f3, f21, rtz # perform operation
fnmsub.s f1, f29, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f29, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x30, 0x9102bfa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x62434d37 # load x3 with value 0x62434d37
sw x3, 0(x2) # store 0x62434d37 in memory
flw f1, 0(x2) # load 0x62434d37 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fnmsub.s f30, f15, f1, f4, dyn # perform operation
fnmsub.s f30, f15, f1, f4, rdn # perform operation
fnmsub.s f30, f15, f1, f4, rmm # perform operation
fnmsub.s f30, f15, f1, f4, rne # perform operation
fnmsub.s f30, f15, f1, f4, rtz # perform operation
fnmsub.s f30, f15, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f15, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f15, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x22, 0x175217bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xb7d8abd8 # load x3 with value 0xb7d8abd8
sw x3, 0(x2) # store 0xb7d8abd8 in memory
flw f30, 0(x2) # load 0xb7d8abd8 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fnmsub.s f22, f4, f30, f1, dyn # perform operation
fnmsub.s f22, f4, f30, f1, rdn # perform operation
fnmsub.s f22, f4, f30, f1, rmm # perform operation
fnmsub.s f22, f4, f30, f1, rne # perform operation
fnmsub.s f22, f4, f30, f1, rtz # perform operation
fnmsub.s f22, f4, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f4, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f4, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f4, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f4, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f4, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x24, 0xb0b44d40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0xe2116668 # load x3 with value 0xe2116668
sw x3, 0(x2) # store 0xe2116668 in memory
flw f30, 0(x2) # load 0xe2116668 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fnmsub.s f24, f14, f30, f8, dyn # perform operation
fnmsub.s f24, f14, f30, f8, rdn # perform operation
fnmsub.s f24, f14, f30, f8, rmm # perform operation
fnmsub.s f24, f14, f30, f8, rne # perform operation
fnmsub.s f24, f14, f30, f8, rtz # perform operation
fnmsub.s f24, f14, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f14, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x19, 0x87d2fa79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x2083d3e3 # load x3 with value 0x2083d3e3
sw x3, 0(x2) # store 0x2083d3e3 in memory
flw f18, 0(x2) # load 0x2083d3e3 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f19, f27, f18, f9, dyn # perform operation
fnmsub.s f19, f27, f18, f9, rdn # perform operation
fnmsub.s f19, f27, f18, f9, rmm # perform operation
fnmsub.s f19, f27, f18, f9, rne # perform operation
fnmsub.s f19, f27, f18, f9, rtz # perform operation
fnmsub.s f19, f27, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x23, 0xa3a013f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0xde61c7d7 # load x3 with value 0xde61c7d7
sw x3, 0(x2) # store 0xde61c7d7 in memory
flw f2, 0(x2) # load 0xde61c7d7 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fnmsub.s f23, f11, f2, f20, dyn # perform operation
fnmsub.s f23, f11, f2, f20, rdn # perform operation
fnmsub.s f23, f11, f2, f20, rmm # perform operation
fnmsub.s f23, f11, f2, f20, rne # perform operation
fnmsub.s f23, f11, f2, f20, rtz # perform operation
fnmsub.s f23, f11, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f11, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x15, 0x68f4a86d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x029b069b # load x3 with value 0x029b069b
sw x3, 0(x2) # store 0x029b069b in memory
flw f31, 0(x2) # load 0x029b069b from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmsub.s f15, f18, f31, f10, dyn # perform operation
fnmsub.s f15, f18, f31, f10, rdn # perform operation
fnmsub.s f15, f18, f31, f10, rmm # perform operation
fnmsub.s f15, f18, f31, f10, rne # perform operation
fnmsub.s f15, f18, f31, f10, rtz # perform operation
fnmsub.s f15, f18, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x7, 0xbb8e120b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x4dac4424 # load x3 with value 0x4dac4424
sw x3, 0(x2) # store 0x4dac4424 in memory
flw f29, 0(x2) # load 0x4dac4424 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fnmsub.s f7, f2, f29, f25, dyn # perform operation
fnmsub.s f7, f2, f29, f25, rdn # perform operation
fnmsub.s f7, f2, f29, f25, rmm # perform operation
fnmsub.s f7, f2, f29, f25, rne # perform operation
fnmsub.s f7, f2, f29, f25, rtz # perform operation
fnmsub.s f7, f2, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f2, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f2, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f2, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f2, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f2, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x17, 0x39d83c1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x451e1103 # load x3 with value 0x451e1103
sw x3, 0(x2) # store 0x451e1103 in memory
flw f8, 0(x2) # load 0x451e1103 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
fnmsub.s f17, f1, f8, f15, dyn # perform operation
fnmsub.s f17, f1, f8, f15, rdn # perform operation
fnmsub.s f17, f1, f8, f15, rmm # perform operation
fnmsub.s f17, f1, f8, f15, rne # perform operation
fnmsub.s f17, f1, f8, f15, rtz # perform operation
fnmsub.s f17, f1, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x18, 0x8b78e2d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xada01e2b # load x3 with value 0xada01e2b
sw x3, 0(x2) # store 0xada01e2b in memory
flw f6, 0(x2) # load 0xada01e2b from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmsub.s f18, f30, f6, f25, dyn # perform operation
fnmsub.s f18, f30, f6, f25, rdn # perform operation
fnmsub.s f18, f30, f6, f25, rmm # perform operation
fnmsub.s f18, f30, f6, f25, rne # perform operation
fnmsub.s f18, f30, f6, f25, rtz # perform operation
fnmsub.s f18, f30, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f30, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x17, 0x7e27c990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0xdcadce6b # load x3 with value 0xdcadce6b
sw x3, 0(x2) # store 0xdcadce6b in memory
flw f4, 0(x2) # load 0xdcadce6b from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fnmsub.s f17, f15, f4, f12, dyn # perform operation
fnmsub.s f17, f15, f4, f12, rdn # perform operation
fnmsub.s f17, f15, f4, f12, rmm # perform operation
fnmsub.s f17, f15, f4, f12, rne # perform operation
fnmsub.s f17, f15, f4, f12, rtz # perform operation
fnmsub.s f17, f15, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f15, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f15, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f15, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f15, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f15, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x7, 0x71e6b525 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xa41a5b18 # load x3 with value 0xa41a5b18
sw x3, 0(x2) # store 0xa41a5b18 in memory
flw f29, 0(x2) # load 0xa41a5b18 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fnmsub.s f7, f3, f29, f18, dyn # perform operation
fnmsub.s f7, f3, f29, f18, rdn # perform operation
fnmsub.s f7, f3, f29, f18, rmm # perform operation
fnmsub.s f7, f3, f29, f18, rne # perform operation
fnmsub.s f7, f3, f29, f18, rtz # perform operation
fnmsub.s f7, f3, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f3, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x15, 0x6755a78a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x0f511d39 # load x3 with value 0x0f511d39
sw x3, 0(x2) # store 0x0f511d39 in memory
flw f27, 0(x2) # load 0x0f511d39 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmsub.s f15, f31, f27, f30, dyn # perform operation
fnmsub.s f15, f31, f27, f30, rdn # perform operation
fnmsub.s f15, f31, f27, f30, rmm # perform operation
fnmsub.s f15, f31, f27, f30, rne # perform operation
fnmsub.s f15, f31, f27, f30, rtz # perform operation
fnmsub.s f15, f31, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x21, 0x801882f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x6f17a146 # load x3 with value 0x6f17a146
sw x3, 0(x2) # store 0x6f17a146 in memory
flw f30, 0(x2) # load 0x6f17a146 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fnmsub.s f21, f17, f30, f23, dyn # perform operation
fnmsub.s f21, f17, f30, f23, rdn # perform operation
fnmsub.s f21, f17, f30, f23, rmm # perform operation
fnmsub.s f21, f17, f30, f23, rne # perform operation
fnmsub.s f21, f17, f30, f23, rtz # perform operation
fnmsub.s f21, f17, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f17, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x23, 0xca70e439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x8d4a5122 # load x3 with value 0x8d4a5122
sw x3, 0(x2) # store 0x8d4a5122 in memory
flw f29, 0(x2) # load 0x8d4a5122 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmsub.s f23, f30, f29, f2, dyn # perform operation
fnmsub.s f23, f30, f29, f2, rdn # perform operation
fnmsub.s f23, f30, f29, f2, rmm # perform operation
fnmsub.s f23, f30, f29, f2, rne # perform operation
fnmsub.s f23, f30, f29, f2, rtz # perform operation
fnmsub.s f23, f30, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f30, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x22, 0x884d71b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0xed57a2c0 # load x3 with value 0xed57a2c0
sw x3, 0(x2) # store 0xed57a2c0 in memory
flw f13, 0(x2) # load 0xed57a2c0 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fnmsub.s f22, f25, f13, f5, dyn # perform operation
fnmsub.s f22, f25, f13, f5, rdn # perform operation
fnmsub.s f22, f25, f13, f5, rmm # perform operation
fnmsub.s f22, f25, f13, f5, rne # perform operation
fnmsub.s f22, f25, f13, f5, rtz # perform operation
fnmsub.s f22, f25, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x2, 0x26f8e876 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xb20369fc # load x3 with value 0xb20369fc
sw x3, 0(x2) # store 0xb20369fc in memory
flw f25, 0(x2) # load 0xb20369fc from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmsub.s f2, f14, f25, f3, dyn # perform operation
fnmsub.s f2, f14, f25, f3, rdn # perform operation
fnmsub.s f2, f14, f25, f3, rmm # perform operation
fnmsub.s f2, f14, f25, f3, rne # perform operation
fnmsub.s f2, f14, f25, f3, rtz # perform operation
fnmsub.s f2, f14, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f14, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x28, 0x68689482 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xfd8ddc4a # load x3 with value 0xfd8ddc4a
sw x3, 0(x2) # store 0xfd8ddc4a in memory
flw f27, 0(x2) # load 0xfd8ddc4a from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fnmsub.s f28, f23, f27, f19, dyn # perform operation
fnmsub.s f28, f23, f27, f19, rdn # perform operation
fnmsub.s f28, f23, f27, f19, rmm # perform operation
fnmsub.s f28, f23, f27, f19, rne # perform operation
fnmsub.s f28, f23, f27, f19, rtz # perform operation
fnmsub.s f28, f23, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x2, 0x6e616f4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x23ee1685 # load x3 with value 0x23ee1685
sw x3, 0(x2) # store 0x23ee1685 in memory
flw f11, 0(x2) # load 0x23ee1685 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fnmsub.s f2, f8, f11, f14, dyn # perform operation
fnmsub.s f2, f8, f11, f14, rdn # perform operation
fnmsub.s f2, f8, f11, f14, rmm # perform operation
fnmsub.s f2, f8, f11, f14, rne # perform operation
fnmsub.s f2, f8, f11, f14, rtz # perform operation
fnmsub.s f2, f8, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x8, 0xa411f263 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0xbfce769f # load x3 with value 0xbfce769f
sw x3, 0(x2) # store 0xbfce769f in memory
flw f24, 0(x2) # load 0xbfce769f from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmsub.s f8, f28, f24, f31, dyn # perform operation
fnmsub.s f8, f28, f24, f31, rdn # perform operation
fnmsub.s f8, f28, f24, f31, rmm # perform operation
fnmsub.s f8, f28, f24, f31, rne # perform operation
fnmsub.s f8, f28, f24, f31, rtz # perform operation
fnmsub.s f8, f28, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f28, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x15, 0x9782bd7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x2a1a33d3 # load x3 with value 0x2a1a33d3
sw x3, 0(x2) # store 0x2a1a33d3 in memory
flw f10, 0(x2) # load 0x2a1a33d3 from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fnmsub.s f15, f27, f10, f3, dyn # perform operation
fnmsub.s f15, f27, f10, f3, rdn # perform operation
fnmsub.s f15, f27, f10, f3, rmm # perform operation
fnmsub.s f15, f27, f10, f3, rne # perform operation
fnmsub.s f15, f27, f10, f3, rtz # perform operation
fnmsub.s f15, f27, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f27, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x24, 0x7c37e983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x53080c19 # load x3 with value 0x53080c19
sw x3, 0(x2) # store 0x53080c19 in memory
flw f8, 0(x2) # load 0x53080c19 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fnmsub.s f24, f31, f8, f5, dyn # perform operation
fnmsub.s f24, f31, f8, f5, rdn # perform operation
fnmsub.s f24, f31, f8, f5, rmm # perform operation
fnmsub.s f24, f31, f8, f5, rne # perform operation
fnmsub.s f24, f31, f8, f5, rtz # perform operation
fnmsub.s f24, f31, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f31, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f31, f8, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x8, 0x9eaf643d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x872335f8 # load x3 with value 0x872335f8
sw x3, 0(x2) # store 0x872335f8 in memory
flw f18, 0(x2) # load 0x872335f8 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fnmsub.s f8, f26, f18, f25, dyn # perform operation
fnmsub.s f8, f26, f18, f25, rdn # perform operation
fnmsub.s f8, f26, f18, f25, rmm # perform operation
fnmsub.s f8, f26, f18, f25, rne # perform operation
fnmsub.s f8, f26, f18, f25, rtz # perform operation
fnmsub.s f8, f26, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f26, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x7, 0xd22524b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x814bca9b # load x3 with value 0x814bca9b
sw x3, 0(x2) # store 0x814bca9b in memory
flw f19, 0(x2) # load 0x814bca9b from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmsub.s f7, f1, f19, f3, dyn # perform operation
fnmsub.s f7, f1, f19, f3, rdn # perform operation
fnmsub.s f7, f1, f19, f3, rmm # perform operation
fnmsub.s f7, f1, f19, f3, rne # perform operation
fnmsub.s f7, f1, f19, f3, rtz # perform operation
fnmsub.s f7, f1, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f1, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x14, 0xc8e8b00e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x6e4f6280 # load x3 with value 0x6e4f6280
sw x3, 0(x2) # store 0x6e4f6280 in memory
flw f5, 0(x2) # load 0x6e4f6280 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmsub.s f14, f25, f5, f31, dyn # perform operation
fnmsub.s f14, f25, f5, f31, rdn # perform operation
fnmsub.s f14, f25, f5, f31, rmm # perform operation
fnmsub.s f14, f25, f5, f31, rne # perform operation
fnmsub.s f14, f25, f5, f31, rtz # perform operation
fnmsub.s f14, f25, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f25, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f25, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f25, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f25, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f25, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x4, 0x26dd1962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x6e1da240 # load x3 with value 0x6e1da240
sw x3, 0(x2) # store 0x6e1da240 in memory
flw f30, 0(x2) # load 0x6e1da240 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmsub.s f4, f5, f30, f16, dyn # perform operation
fnmsub.s f4, f5, f30, f16, rdn # perform operation
fnmsub.s f4, f5, f30, f16, rmm # perform operation
fnmsub.s f4, f5, f30, f16, rne # perform operation
fnmsub.s f4, f5, f30, f16, rtz # perform operation
fnmsub.s f4, f5, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f5, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x23, 0x54ab0abe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0xf7f26e43 # load x3 with value 0xf7f26e43
sw x3, 0(x2) # store 0xf7f26e43 in memory
flw f22, 0(x2) # load 0xf7f26e43 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmsub.s f23, f8, f22, f21, dyn # perform operation
fnmsub.s f23, f8, f22, f21, rdn # perform operation
fnmsub.s f23, f8, f22, f21, rmm # perform operation
fnmsub.s f23, f8, f22, f21, rne # perform operation
fnmsub.s f23, f8, f22, f21, rtz # perform operation
fnmsub.s f23, f8, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f8, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f8, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x13, 0x64237c2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xcfb15e03 # load x3 with value 0xcfb15e03
sw x3, 0(x2) # store 0xcfb15e03 in memory
flw f5, 0(x2) # load 0xcfb15e03 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fnmsub.s f13, f17, f5, f16, dyn # perform operation
fnmsub.s f13, f17, f5, f16, rdn # perform operation
fnmsub.s f13, f17, f5, f16, rmm # perform operation
fnmsub.s f13, f17, f5, f16, rne # perform operation
fnmsub.s f13, f17, f5, f16, rtz # perform operation
fnmsub.s f13, f17, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f5, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x5, 0x54a146e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xb1545246 # load x3 with value 0xb1545246
sw x3, 0(x2) # store 0xb1545246 in memory
flw f4, 0(x2) # load 0xb1545246 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmsub.s f5, f9, f4, f23, dyn # perform operation
fnmsub.s f5, f9, f4, f23, rdn # perform operation
fnmsub.s f5, f9, f4, f23, rmm # perform operation
fnmsub.s f5, f9, f4, f23, rne # perform operation
fnmsub.s f5, f9, f4, f23, rtz # perform operation
fnmsub.s f5, f9, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f9, f4, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x7, 0xe758b515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x62566f34 # load x3 with value 0x62566f34
sw x3, 0(x2) # store 0x62566f34 in memory
flw f19, 0(x2) # load 0x62566f34 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmsub.s f7, f10, f19, f2, dyn # perform operation
fnmsub.s f7, f10, f19, f2, rdn # perform operation
fnmsub.s f7, f10, f19, f2, rmm # perform operation
fnmsub.s f7, f10, f19, f2, rne # perform operation
fnmsub.s f7, f10, f19, f2, rtz # perform operation
fnmsub.s f7, f10, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f10, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f10, f19, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x14, 0x661a1bb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xd9cb4e68 # load x3 with value 0xd9cb4e68
sw x3, 0(x2) # store 0xd9cb4e68 in memory
flw f19, 0(x2) # load 0xd9cb4e68 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fnmsub.s f14, f2, f19, f28, dyn # perform operation
fnmsub.s f14, f2, f19, f28, rdn # perform operation
fnmsub.s f14, f2, f19, f28, rmm # perform operation
fnmsub.s f14, f2, f19, f28, rne # perform operation
fnmsub.s f14, f2, f19, f28, rtz # perform operation
fnmsub.s f14, f2, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x10, 0xba0a513a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x4571ffad # load x3 with value 0x4571ffad
sw x3, 0(x2) # store 0x4571ffad in memory
flw f16, 0(x2) # load 0x4571ffad from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fnmsub.s f10, f26, f16, f2, dyn # perform operation
fnmsub.s f10, f26, f16, f2, rdn # perform operation
fnmsub.s f10, f26, f16, f2, rmm # perform operation
fnmsub.s f10, f26, f16, f2, rne # perform operation
fnmsub.s f10, f26, f16, f2, rtz # perform operation
fnmsub.s f10, f26, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f26, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x26, 0x503e8de1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x13d2993e # load x3 with value 0x13d2993e
sw x3, 0(x2) # store 0x13d2993e in memory
flw f8, 0(x2) # load 0x13d2993e from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fnmsub.s f26, f12, f8, f19, dyn # perform operation
fnmsub.s f26, f12, f8, f19, rdn # perform operation
fnmsub.s f26, f12, f8, f19, rmm # perform operation
fnmsub.s f26, f12, f8, f19, rne # perform operation
fnmsub.s f26, f12, f8, f19, rtz # perform operation
fnmsub.s f26, f12, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x25, 0xee383868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x6d6a555a # load x3 with value 0x6d6a555a
sw x3, 0(x2) # store 0x6d6a555a in memory
flw f26, 0(x2) # load 0x6d6a555a from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmsub.s f25, f31, f26, f2, dyn # perform operation
fnmsub.s f25, f31, f26, f2, rdn # perform operation
fnmsub.s f25, f31, f26, f2, rmm # perform operation
fnmsub.s f25, f31, f26, f2, rne # perform operation
fnmsub.s f25, f31, f26, f2, rtz # perform operation
fnmsub.s f25, f31, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x18, 0x15aeacb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x2340c07c # load x3 with value 0x2340c07c
sw x3, 0(x2) # store 0x2340c07c in memory
flw f26, 0(x2) # load 0x2340c07c from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f18, f4, f26, f22, dyn # perform operation
fnmsub.s f18, f4, f26, f22, rdn # perform operation
fnmsub.s f18, f4, f26, f22, rmm # perform operation
fnmsub.s f18, f4, f26, f22, rne # perform operation
fnmsub.s f18, f4, f26, f22, rtz # perform operation
fnmsub.s f18, f4, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f4, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f4, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f4, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f4, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f4, f26, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x18, 0x955d2637 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0xf6339e32 # load x3 with value 0xf6339e32
sw x3, 0(x2) # store 0xf6339e32 in memory
flw f5, 0(x2) # load 0xf6339e32 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmsub.s f18, f19, f5, f30, dyn # perform operation
fnmsub.s f18, f19, f5, f30, rdn # perform operation
fnmsub.s f18, f19, f5, f30, rmm # perform operation
fnmsub.s f18, f19, f5, f30, rne # perform operation
fnmsub.s f18, f19, f5, f30, rtz # perform operation
fnmsub.s f18, f19, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x26, 0xcc4e5559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x575ab8c2 # load x3 with value 0x575ab8c2
sw x3, 0(x2) # store 0x575ab8c2 in memory
flw f24, 0(x2) # load 0x575ab8c2 from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fnmsub.s f26, f6, f24, f15, dyn # perform operation
fnmsub.s f26, f6, f24, f15, rdn # perform operation
fnmsub.s f26, f6, f24, f15, rmm # perform operation
fnmsub.s f26, f6, f24, f15, rne # perform operation
fnmsub.s f26, f6, f24, f15, rtz # perform operation
fnmsub.s f26, f6, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f6, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x8, 0xf96455ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0xc185eca4 # load x3 with value 0xc185eca4
sw x3, 0(x2) # store 0xc185eca4 in memory
flw f16, 0(x2) # load 0xc185eca4 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmsub.s f8, f22, f16, f12, dyn # perform operation
fnmsub.s f8, f22, f16, f12, rdn # perform operation
fnmsub.s f8, f22, f16, f12, rmm # perform operation
fnmsub.s f8, f22, f16, f12, rne # perform operation
fnmsub.s f8, f22, f16, f12, rtz # perform operation
fnmsub.s f8, f22, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f22, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f22, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f22, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f22, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f22, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x16, 0x029bccd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0xdcbd6212 # load x3 with value 0xdcbd6212
sw x3, 0(x2) # store 0xdcbd6212 in memory
flw f22, 0(x2) # load 0xdcbd6212 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmsub.s f16, f31, f22, f19, dyn # perform operation
fnmsub.s f16, f31, f22, f19, rdn # perform operation
fnmsub.s f16, f31, f22, f19, rmm # perform operation
fnmsub.s f16, f31, f22, f19, rne # perform operation
fnmsub.s f16, f31, f22, f19, rtz # perform operation
fnmsub.s f16, f31, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f31, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x19, 0xf41be845 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0xd29862f2 # load x3 with value 0xd29862f2
sw x3, 0(x2) # store 0xd29862f2 in memory
flw f12, 0(x2) # load 0xd29862f2 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
fnmsub.s f19, f23, f12, f4, dyn # perform operation
fnmsub.s f19, f23, f12, f4, rdn # perform operation
fnmsub.s f19, f23, f12, f4, rmm # perform operation
fnmsub.s f19, f23, f12, f4, rne # perform operation
fnmsub.s f19, f23, f12, f4, rtz # perform operation
fnmsub.s f19, f23, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x29, 0x3e4bde24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x29cedef9 # load x3 with value 0x29cedef9
sw x3, 0(x2) # store 0x29cedef9 in memory
flw f11, 0(x2) # load 0x29cedef9 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fnmsub.s f29, f8, f11, f6, dyn # perform operation
fnmsub.s f29, f8, f11, f6, rdn # perform operation
fnmsub.s f29, f8, f11, f6, rmm # perform operation
fnmsub.s f29, f8, f11, f6, rne # perform operation
fnmsub.s f29, f8, f11, f6, rtz # perform operation
fnmsub.s f29, f8, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f8, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f8, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f8, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f8, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f8, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x22, 0xd4f9a497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x739fee7a # load x3 with value 0x739fee7a
sw x3, 0(x2) # store 0x739fee7a in memory
flw f26, 0(x2) # load 0x739fee7a from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fnmsub.s f22, f14, f26, f25, dyn # perform operation
fnmsub.s f22, f14, f26, f25, rdn # perform operation
fnmsub.s f22, f14, f26, f25, rmm # perform operation
fnmsub.s f22, f14, f26, f25, rne # perform operation
fnmsub.s f22, f14, f26, f25, rtz # perform operation
fnmsub.s f22, f14, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x14, 0xa4376b2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0xc0e16d78 # load x3 with value 0xc0e16d78
sw x3, 0(x2) # store 0xc0e16d78 in memory
flw f4, 0(x2) # load 0xc0e16d78 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fnmsub.s f14, f31, f4, f18, dyn # perform operation
fnmsub.s f14, f31, f4, f18, rdn # perform operation
fnmsub.s f14, f31, f4, f18, rmm # perform operation
fnmsub.s f14, f31, f4, f18, rne # perform operation
fnmsub.s f14, f31, f4, f18, rtz # perform operation
fnmsub.s f14, f31, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f31, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f31, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f31, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f31, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f31, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x15, 0x47377dcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x229028e6 # load x3 with value 0x229028e6
sw x3, 0(x2) # store 0x229028e6 in memory
flw f3, 0(x2) # load 0x229028e6 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fnmsub.s f15, f2, f3, f17, dyn # perform operation
fnmsub.s f15, f2, f3, f17, rdn # perform operation
fnmsub.s f15, f2, f3, f17, rmm # perform operation
fnmsub.s f15, f2, f3, f17, rne # perform operation
fnmsub.s f15, f2, f3, f17, rtz # perform operation
fnmsub.s f15, f2, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f2, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x21, 0x9aa1edb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x5d4f99e1 # load x3 with value 0x5d4f99e1
sw x3, 0(x2) # store 0x5d4f99e1 in memory
flw f16, 0(x2) # load 0x5d4f99e1 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fnmsub.s f21, f18, f16, f20, dyn # perform operation
fnmsub.s f21, f18, f16, f20, rdn # perform operation
fnmsub.s f21, f18, f16, f20, rmm # perform operation
fnmsub.s f21, f18, f16, f20, rne # perform operation
fnmsub.s f21, f18, f16, f20, rtz # perform operation
fnmsub.s f21, f18, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x25, 0x1555e69c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x37419694 # load x3 with value 0x37419694
sw x3, 0(x2) # store 0x37419694 in memory
flw f9, 0(x2) # load 0x37419694 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmsub.s f25, f4, f9, f18, dyn # perform operation
fnmsub.s f25, f4, f9, f18, rdn # perform operation
fnmsub.s f25, f4, f9, f18, rmm # perform operation
fnmsub.s f25, f4, f9, f18, rne # perform operation
fnmsub.s f25, f4, f9, f18, rtz # perform operation
fnmsub.s f25, f4, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f4, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f4, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f4, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f4, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f4, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x12, 0xa245c71b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0xe4c411d0 # load x3 with value 0xe4c411d0
sw x3, 0(x2) # store 0xe4c411d0 in memory
flw f29, 0(x2) # load 0xe4c411d0 from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmsub.s f12, f8, f29, f17, dyn # perform operation
fnmsub.s f12, f8, f29, f17, rdn # perform operation
fnmsub.s f12, f8, f29, f17, rmm # perform operation
fnmsub.s f12, f8, f29, f17, rne # perform operation
fnmsub.s f12, f8, f29, f17, rtz # perform operation
fnmsub.s f12, f8, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x17, 0x2762361d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x43d039a5 # load x3 with value 0x43d039a5
sw x3, 0(x2) # store 0x43d039a5 in memory
flw f26, 0(x2) # load 0x43d039a5 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fnmsub.s f17, f27, f26, f15, dyn # perform operation
fnmsub.s f17, f27, f26, f15, rdn # perform operation
fnmsub.s f17, f27, f26, f15, rmm # perform operation
fnmsub.s f17, f27, f26, f15, rne # perform operation
fnmsub.s f17, f27, f26, f15, rtz # perform operation
fnmsub.s f17, f27, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x6, 0x1cde96ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x9ca56ce2 # load x3 with value 0x9ca56ce2
sw x3, 0(x2) # store 0x9ca56ce2 in memory
flw f22, 0(x2) # load 0x9ca56ce2 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fnmsub.s f6, f11, f22, f15, dyn # perform operation
fnmsub.s f6, f11, f22, f15, rdn # perform operation
fnmsub.s f6, f11, f22, f15, rmm # perform operation
fnmsub.s f6, f11, f22, f15, rne # perform operation
fnmsub.s f6, f11, f22, f15, rtz # perform operation
fnmsub.s f6, f11, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f11, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x21, 0xda6df4ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x3bd9471a # load x3 with value 0x3bd9471a
sw x3, 0(x2) # store 0x3bd9471a in memory
flw f20, 0(x2) # load 0x3bd9471a from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmsub.s f21, f11, f20, f9, dyn # perform operation
fnmsub.s f21, f11, f20, f9, rdn # perform operation
fnmsub.s f21, f11, f20, f9, rmm # perform operation
fnmsub.s f21, f11, f20, f9, rne # perform operation
fnmsub.s f21, f11, f20, f9, rtz # perform operation
fnmsub.s f21, f11, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x17, 0x9dd73be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x1cdf5972 # load x3 with value 0x1cdf5972
sw x3, 0(x2) # store 0x1cdf5972 in memory
flw f19, 0(x2) # load 0x1cdf5972 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmsub.s f17, f27, f19, f1, dyn # perform operation
fnmsub.s f17, f27, f19, f1, rdn # perform operation
fnmsub.s f17, f27, f19, f1, rmm # perform operation
fnmsub.s f17, f27, f19, f1, rne # perform operation
fnmsub.s f17, f27, f19, f1, rtz # perform operation
fnmsub.s f17, f27, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x8, 0xbac7d6cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x77126b74 # load x3 with value 0x77126b74
sw x3, 0(x2) # store 0x77126b74 in memory
flw f30, 0(x2) # load 0x77126b74 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fnmsub.s f8, f25, f30, f1, dyn # perform operation
fnmsub.s f8, f25, f30, f1, rdn # perform operation
fnmsub.s f8, f25, f30, f1, rmm # perform operation
fnmsub.s f8, f25, f30, f1, rne # perform operation
fnmsub.s f8, f25, f30, f1, rtz # perform operation
fnmsub.s f8, f25, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x3, 0x68dfa5f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x8b569212 # load x3 with value 0x8b569212
sw x3, 0(x2) # store 0x8b569212 in memory
flw f13, 0(x2) # load 0x8b569212 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmsub.s f3, f4, f13, f27, dyn # perform operation
fnmsub.s f3, f4, f13, f27, rdn # perform operation
fnmsub.s f3, f4, f13, f27, rmm # perform operation
fnmsub.s f3, f4, f13, f27, rne # perform operation
fnmsub.s f3, f4, f13, f27, rtz # perform operation
fnmsub.s f3, f4, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f4, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x21, 0x9cf00102 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x6361dd77 # load x3 with value 0x6361dd77
sw x3, 0(x2) # store 0x6361dd77 in memory
flw f1, 0(x2) # load 0x6361dd77 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fnmsub.s f21, f28, f1, f29, dyn # perform operation
fnmsub.s f21, f28, f1, f29, rdn # perform operation
fnmsub.s f21, f28, f1, f29, rmm # perform operation
fnmsub.s f21, f28, f1, f29, rne # perform operation
fnmsub.s f21, f28, f1, f29, rtz # perform operation
fnmsub.s f21, f28, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x1, 0x0eb3d402 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0xa5913520 # load x3 with value 0xa5913520
sw x3, 0(x2) # store 0xa5913520 in memory
flw f7, 0(x2) # load 0xa5913520 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fnmsub.s f1, f31, f7, f14, dyn # perform operation
fnmsub.s f1, f31, f7, f14, rdn # perform operation
fnmsub.s f1, f31, f7, f14, rmm # perform operation
fnmsub.s f1, f31, f7, f14, rne # perform operation
fnmsub.s f1, f31, f7, f14, rtz # perform operation
fnmsub.s f1, f31, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x7, 0x0d9c8aa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xb2d36461 # load x3 with value 0xb2d36461
sw x3, 0(x2) # store 0xb2d36461 in memory
flw f31, 0(x2) # load 0xb2d36461 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmsub.s f7, f10, f31, f1, dyn # perform operation
fnmsub.s f7, f10, f31, f1, rdn # perform operation
fnmsub.s f7, f10, f31, f1, rmm # perform operation
fnmsub.s f7, f10, f31, f1, rne # perform operation
fnmsub.s f7, f10, f31, f1, rtz # perform operation
fnmsub.s f7, f10, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f10, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x22, 0x6f570e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x2301e522 # load x3 with value 0x2301e522
sw x3, 0(x2) # store 0x2301e522 in memory
flw f26, 0(x2) # load 0x2301e522 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmsub.s f22, f2, f26, f21, dyn # perform operation
fnmsub.s f22, f2, f26, f21, rdn # perform operation
fnmsub.s f22, f2, f26, f21, rmm # perform operation
fnmsub.s f22, f2, f26, f21, rne # perform operation
fnmsub.s f22, f2, f26, f21, rtz # perform operation
fnmsub.s f22, f2, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x29, 0xbfd4fe1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x7e24baab # load x3 with value 0x7e24baab
sw x3, 0(x2) # store 0x7e24baab in memory
flw f20, 0(x2) # load 0x7e24baab from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmsub.s f29, f17, f20, f27, dyn # perform operation
fnmsub.s f29, f17, f20, f27, rdn # perform operation
fnmsub.s f29, f17, f20, f27, rmm # perform operation
fnmsub.s f29, f17, f20, f27, rne # perform operation
fnmsub.s f29, f17, f20, f27, rtz # perform operation
fnmsub.s f29, f17, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f17, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f17, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x29, 0x902fe8e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0xecaac3da # load x3 with value 0xecaac3da
sw x3, 0(x2) # store 0xecaac3da in memory
flw f23, 0(x2) # load 0xecaac3da from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fnmsub.s f29, f5, f23, f30, dyn # perform operation
fnmsub.s f29, f5, f23, f30, rdn # perform operation
fnmsub.s f29, f5, f23, f30, rmm # perform operation
fnmsub.s f29, f5, f23, f30, rne # perform operation
fnmsub.s f29, f5, f23, f30, rtz # perform operation
fnmsub.s f29, f5, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x16, 0xd4b319c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0xad7f2fd3 # load x3 with value 0xad7f2fd3
sw x3, 0(x2) # store 0xad7f2fd3 in memory
flw f8, 0(x2) # load 0xad7f2fd3 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmsub.s f16, f19, f8, f29, dyn # perform operation
fnmsub.s f16, f19, f8, f29, rdn # perform operation
fnmsub.s f16, f19, f8, f29, rmm # perform operation
fnmsub.s f16, f19, f8, f29, rne # perform operation
fnmsub.s f16, f19, f8, f29, rtz # perform operation
fnmsub.s f16, f19, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x28, 0xe3752682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x9de543b4 # load x3 with value 0x9de543b4
sw x3, 0(x2) # store 0x9de543b4 in memory
flw f19, 0(x2) # load 0x9de543b4 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fnmsub.s f28, f17, f19, f31, dyn # perform operation
fnmsub.s f28, f17, f19, f31, rdn # perform operation
fnmsub.s f28, f17, f19, f31, rmm # perform operation
fnmsub.s f28, f17, f19, f31, rne # perform operation
fnmsub.s f28, f17, f19, f31, rtz # perform operation
fnmsub.s f28, f17, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f17, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x25, 0xe9c9e464 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x9e3d77d8 # load x3 with value 0x9e3d77d8
sw x3, 0(x2) # store 0x9e3d77d8 in memory
flw f16, 0(x2) # load 0x9e3d77d8 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fnmsub.s f25, f28, f16, f15, dyn # perform operation
fnmsub.s f25, f28, f16, f15, rdn # perform operation
fnmsub.s f25, f28, f16, f15, rmm # perform operation
fnmsub.s f25, f28, f16, f15, rne # perform operation
fnmsub.s f25, f28, f16, f15, rtz # perform operation
fnmsub.s f25, f28, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f28, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x2, 0x72001162 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x792fe321 # load x3 with value 0x792fe321
sw x3, 0(x2) # store 0x792fe321 in memory
flw f3, 0(x2) # load 0x792fe321 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmsub.s f2, f23, f3, f19, dyn # perform operation
fnmsub.s f2, f23, f3, f19, rdn # perform operation
fnmsub.s f2, f23, f3, f19, rmm # perform operation
fnmsub.s f2, f23, f3, f19, rne # perform operation
fnmsub.s f2, f23, f3, f19, rtz # perform operation
fnmsub.s f2, f23, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x19, 0xfac660f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xbd502a0b # load x3 with value 0xbd502a0b
sw x3, 0(x2) # store 0xbd502a0b in memory
flw f14, 0(x2) # load 0xbd502a0b from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmsub.s f19, f27, f14, f13, dyn # perform operation
fnmsub.s f19, f27, f14, f13, rdn # perform operation
fnmsub.s f19, f27, f14, f13, rmm # perform operation
fnmsub.s f19, f27, f14, f13, rne # perform operation
fnmsub.s f19, f27, f14, f13, rtz # perform operation
fnmsub.s f19, f27, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x17, 0xb94c1609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x82e81553 # load x3 with value 0x82e81553
sw x3, 0(x2) # store 0x82e81553 in memory
flw f2, 0(x2) # load 0x82e81553 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmsub.s f17, f19, f2, f16, dyn # perform operation
fnmsub.s f17, f19, f2, f16, rdn # perform operation
fnmsub.s f17, f19, f2, f16, rmm # perform operation
fnmsub.s f17, f19, f2, f16, rne # perform operation
fnmsub.s f17, f19, f2, f16, rtz # perform operation
fnmsub.s f17, f19, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f2, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x26, 0x6177b76e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x7b73b65a # load x3 with value 0x7b73b65a
sw x3, 0(x2) # store 0x7b73b65a in memory
flw f5, 0(x2) # load 0x7b73b65a from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f26, f11, f5, f13, dyn # perform operation
fnmsub.s f26, f11, f5, f13, rdn # perform operation
fnmsub.s f26, f11, f5, f13, rmm # perform operation
fnmsub.s f26, f11, f5, f13, rne # perform operation
fnmsub.s f26, f11, f5, f13, rtz # perform operation
fnmsub.s f26, f11, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f11, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f11, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x9, 0xa28bc630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x5024d17c # load x3 with value 0x5024d17c
sw x3, 0(x2) # store 0x5024d17c in memory
flw f23, 0(x2) # load 0x5024d17c from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fnmsub.s f9, f11, f23, f19, dyn # perform operation
fnmsub.s f9, f11, f23, f19, rdn # perform operation
fnmsub.s f9, f11, f23, f19, rmm # perform operation
fnmsub.s f9, f11, f23, f19, rne # perform operation
fnmsub.s f9, f11, f23, f19, rtz # perform operation
fnmsub.s f9, f11, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f11, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x2, 0xa938aef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x286d7cf1 # load x3 with value 0x286d7cf1
sw x3, 0(x2) # store 0x286d7cf1 in memory
flw f10, 0(x2) # load 0x286d7cf1 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmsub.s f2, f16, f10, f21, dyn # perform operation
fnmsub.s f2, f16, f10, f21, rdn # perform operation
fnmsub.s f2, f16, f10, f21, rmm # perform operation
fnmsub.s f2, f16, f10, f21, rne # perform operation
fnmsub.s f2, f16, f10, f21, rtz # perform operation
fnmsub.s f2, f16, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f16, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x8, 0xe8487583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x50e731b3 # load x3 with value 0x50e731b3
sw x3, 0(x2) # store 0x50e731b3 in memory
flw f10, 0(x2) # load 0x50e731b3 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmsub.s f8, f7, f10, f31, dyn # perform operation
fnmsub.s f8, f7, f10, f31, rdn # perform operation
fnmsub.s f8, f7, f10, f31, rmm # perform operation
fnmsub.s f8, f7, f10, f31, rne # perform operation
fnmsub.s f8, f7, f10, f31, rtz # perform operation
fnmsub.s f8, f7, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f7, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x26, 0xa47095a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0xf0be9e7b # load x3 with value 0xf0be9e7b
sw x3, 0(x2) # store 0xf0be9e7b in memory
flw f17, 0(x2) # load 0xf0be9e7b from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmsub.s f26, f25, f17, f12, dyn # perform operation
fnmsub.s f26, f25, f17, f12, rdn # perform operation
fnmsub.s f26, f25, f17, f12, rmm # perform operation
fnmsub.s f26, f25, f17, f12, rne # perform operation
fnmsub.s f26, f25, f17, f12, rtz # perform operation
fnmsub.s f26, f25, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x21, 0x529a7b8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x18fb9899 # load x3 with value 0x18fb9899
sw x3, 0(x2) # store 0x18fb9899 in memory
flw f2, 0(x2) # load 0x18fb9899 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fnmsub.s f21, f15, f2, f4, dyn # perform operation
fnmsub.s f21, f15, f2, f4, rdn # perform operation
fnmsub.s f21, f15, f2, f4, rmm # perform operation
fnmsub.s f21, f15, f2, f4, rne # perform operation
fnmsub.s f21, f15, f2, f4, rtz # perform operation
fnmsub.s f21, f15, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x23, 0x0c320d60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xba2cd619 # load x3 with value 0xba2cd619
sw x3, 0(x2) # store 0xba2cd619 in memory
flw f14, 0(x2) # load 0xba2cd619 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fnmsub.s f23, f24, f14, f10, dyn # perform operation
fnmsub.s f23, f24, f14, f10, rdn # perform operation
fnmsub.s f23, f24, f14, f10, rmm # perform operation
fnmsub.s f23, f24, f14, f10, rne # perform operation
fnmsub.s f23, f24, f14, f10, rtz # perform operation
fnmsub.s f23, f24, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f24, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x9, 0x6f738e3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x699c7467 # load x3 with value 0x699c7467
sw x3, 0(x2) # store 0x699c7467 in memory
flw f28, 0(x2) # load 0x699c7467 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fnmsub.s f9, f10, f28, f27, dyn # perform operation
fnmsub.s f9, f10, f28, f27, rdn # perform operation
fnmsub.s f9, f10, f28, f27, rmm # perform operation
fnmsub.s f9, f10, f28, f27, rne # perform operation
fnmsub.s f9, f10, f28, f27, rtz # perform operation
fnmsub.s f9, f10, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f10, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x26, 0x024da995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x01c9d8ff # load x3 with value 0x01c9d8ff
sw x3, 0(x2) # store 0x01c9d8ff in memory
flw f1, 0(x2) # load 0x01c9d8ff from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fnmsub.s f26, f3, f1, f16, dyn # perform operation
fnmsub.s f26, f3, f1, f16, rdn # perform operation
fnmsub.s f26, f3, f1, f16, rmm # perform operation
fnmsub.s f26, f3, f1, f16, rne # perform operation
fnmsub.s f26, f3, f1, f16, rtz # perform operation
fnmsub.s f26, f3, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f3, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x12, 0x59ef92ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xcc3f9656 # load x3 with value 0xcc3f9656
sw x3, 0(x2) # store 0xcc3f9656 in memory
flw f22, 0(x2) # load 0xcc3f9656 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmsub.s f12, f15, f22, f19, dyn # perform operation
fnmsub.s f12, f15, f22, f19, rdn # perform operation
fnmsub.s f12, f15, f22, f19, rmm # perform operation
fnmsub.s f12, f15, f22, f19, rne # perform operation
fnmsub.s f12, f15, f22, f19, rtz # perform operation
fnmsub.s f12, f15, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x27, 0xce55e58f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x3a183511 # load x3 with value 0x3a183511
sw x3, 0(x2) # store 0x3a183511 in memory
flw f7, 0(x2) # load 0x3a183511 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmsub.s f27, f20, f7, f8, dyn # perform operation
fnmsub.s f27, f20, f7, f8, rdn # perform operation
fnmsub.s f27, f20, f7, f8, rmm # perform operation
fnmsub.s f27, f20, f7, f8, rne # perform operation
fnmsub.s f27, f20, f7, f8, rtz # perform operation
fnmsub.s f27, f20, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x15, 0x9bccc9f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xe490d884 # load x3 with value 0xe490d884
sw x3, 0(x2) # store 0xe490d884 in memory
flw f22, 0(x2) # load 0xe490d884 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmsub.s f15, f10, f22, f9, dyn # perform operation
fnmsub.s f15, f10, f22, f9, rdn # perform operation
fnmsub.s f15, f10, f22, f9, rmm # perform operation
fnmsub.s f15, f10, f22, f9, rne # perform operation
fnmsub.s f15, f10, f22, f9, rtz # perform operation
fnmsub.s f15, f10, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f10, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x31, 0x5df83fc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0xfd96e8bb # load x3 with value 0xfd96e8bb
sw x3, 0(x2) # store 0xfd96e8bb in memory
flw f28, 0(x2) # load 0xfd96e8bb from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fnmsub.s f31, f21, f28, f10, dyn # perform operation
fnmsub.s f31, f21, f28, f10, rdn # perform operation
fnmsub.s f31, f21, f28, f10, rmm # perform operation
fnmsub.s f31, f21, f28, f10, rne # perform operation
fnmsub.s f31, f21, f28, f10, rtz # perform operation
fnmsub.s f31, f21, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x16, 0xd4ab9c78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x2efcaaa4 # load x3 with value 0x2efcaaa4
sw x3, 0(x2) # store 0x2efcaaa4 in memory
flw f27, 0(x2) # load 0x2efcaaa4 from memory into f27
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmsub.s f16, f25, f27, f13, dyn # perform operation
fnmsub.s f16, f25, f27, f13, rdn # perform operation
fnmsub.s f16, f25, f27, f13, rmm # perform operation
fnmsub.s f16, f25, f27, f13, rne # perform operation
fnmsub.s f16, f25, f27, f13, rtz # perform operation
fnmsub.s f16, f25, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x21, 0x955f3420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x6594d93b # load x3 with value 0x6594d93b
sw x3, 0(x2) # store 0x6594d93b in memory
flw f30, 0(x2) # load 0x6594d93b from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmsub.s f21, f9, f30, f28, dyn # perform operation
fnmsub.s f21, f9, f30, f28, rdn # perform operation
fnmsub.s f21, f9, f30, f28, rmm # perform operation
fnmsub.s f21, f9, f30, f28, rne # perform operation
fnmsub.s f21, f9, f30, f28, rtz # perform operation
fnmsub.s f21, f9, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f9, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f9, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x6, 0xe6e932e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x12e3879a # load x3 with value 0x12e3879a
sw x3, 0(x2) # store 0x12e3879a in memory
flw f16, 0(x2) # load 0x12e3879a from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fnmsub.s f6, f25, f16, f7, dyn # perform operation
fnmsub.s f6, f25, f16, f7, rdn # perform operation
fnmsub.s f6, f25, f16, f7, rmm # perform operation
fnmsub.s f6, f25, f16, f7, rne # perform operation
fnmsub.s f6, f25, f16, f7, rtz # perform operation
fnmsub.s f6, f25, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f25, f16, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x18, 0x1be31293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xe659539b # load x3 with value 0xe659539b
sw x3, 0(x2) # store 0xe659539b in memory
flw f16, 0(x2) # load 0xe659539b from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fnmsub.s f18, f27, f16, f15, dyn # perform operation
fnmsub.s f18, f27, f16, f15, rdn # perform operation
fnmsub.s f18, f27, f16, f15, rmm # perform operation
fnmsub.s f18, f27, f16, f15, rne # perform operation
fnmsub.s f18, f27, f16, f15, rtz # perform operation
fnmsub.s f18, f27, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x29, 0x7b477548 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x59cdf757 # load x3 with value 0x59cdf757
sw x3, 0(x2) # store 0x59cdf757 in memory
flw f6, 0(x2) # load 0x59cdf757 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmsub.s f29, f20, f6, f24, dyn # perform operation
fnmsub.s f29, f20, f6, f24, rdn # perform operation
fnmsub.s f29, f20, f6, f24, rmm # perform operation
fnmsub.s f29, f20, f6, f24, rne # perform operation
fnmsub.s f29, f20, f6, f24, rtz # perform operation
fnmsub.s f29, f20, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f20, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x14, 0x05ca88fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x0cedb39c # load x3 with value 0x0cedb39c
sw x3, 0(x2) # store 0x0cedb39c in memory
flw f22, 0(x2) # load 0x0cedb39c from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmsub.s f14, f6, f22, f3, dyn # perform operation
fnmsub.s f14, f6, f22, f3, rdn # perform operation
fnmsub.s f14, f6, f22, f3, rmm # perform operation
fnmsub.s f14, f6, f22, f3, rne # perform operation
fnmsub.s f14, f6, f22, f3, rtz # perform operation
fnmsub.s f14, f6, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f22, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x23, 0x61b6cce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0xcdc30cfc # load x3 with value 0xcdc30cfc
sw x3, 0(x2) # store 0xcdc30cfc in memory
flw f28, 0(x2) # load 0xcdc30cfc from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fnmsub.s f23, f2, f28, f6, dyn # perform operation
fnmsub.s f23, f2, f28, f6, rdn # perform operation
fnmsub.s f23, f2, f28, f6, rmm # perform operation
fnmsub.s f23, f2, f28, f6, rne # perform operation
fnmsub.s f23, f2, f28, f6, rtz # perform operation
fnmsub.s f23, f2, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f2, f28, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x3, 0x63df1083 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xae958184 # load x3 with value 0xae958184
sw x3, 0(x2) # store 0xae958184 in memory
flw f2, 0(x2) # load 0xae958184 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmsub.s f3, f28, f2, f22, dyn # perform operation
fnmsub.s f3, f28, f2, f22, rdn # perform operation
fnmsub.s f3, f28, f2, f22, rmm # perform operation
fnmsub.s f3, f28, f2, f22, rne # perform operation
fnmsub.s f3, f28, f2, f22, rtz # perform operation
fnmsub.s f3, f28, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f28, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f28, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f28, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f28, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f28, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x18, 0xd86f7212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x39bb2512 # load x3 with value 0x39bb2512
sw x3, 0(x2) # store 0x39bb2512 in memory
flw f22, 0(x2) # load 0x39bb2512 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f18, f10, f22, f9, dyn # perform operation
fnmsub.s f18, f10, f22, f9, rdn # perform operation
fnmsub.s f18, f10, f22, f9, rmm # perform operation
fnmsub.s f18, f10, f22, f9, rne # perform operation
fnmsub.s f18, f10, f22, f9, rtz # perform operation
fnmsub.s f18, f10, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x16, 0x0b90eea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0xe7286482 # load x3 with value 0xe7286482
sw x3, 0(x2) # store 0xe7286482 in memory
flw f27, 0(x2) # load 0xe7286482 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmsub.s f16, f23, f27, f2, dyn # perform operation
fnmsub.s f16, f23, f27, f2, rdn # perform operation
fnmsub.s f16, f23, f27, f2, rmm # perform operation
fnmsub.s f16, f23, f27, f2, rne # perform operation
fnmsub.s f16, f23, f27, f2, rtz # perform operation
fnmsub.s f16, f23, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f23, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x8, 0x1e5ac3df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0xe0543347 # load x3 with value 0xe0543347
sw x3, 0(x2) # store 0xe0543347 in memory
flw f21, 0(x2) # load 0xe0543347 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fnmsub.s f8, f7, f21, f30, dyn # perform operation
fnmsub.s f8, f7, f21, f30, rdn # perform operation
fnmsub.s f8, f7, f21, f30, rmm # perform operation
fnmsub.s f8, f7, f21, f30, rne # perform operation
fnmsub.s f8, f7, f21, f30, rtz # perform operation
fnmsub.s f8, f7, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f7, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f7, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x8, 0x6b538944 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x74479fe6 # load x3 with value 0x74479fe6
sw x3, 0(x2) # store 0x74479fe6 in memory
flw f20, 0(x2) # load 0x74479fe6 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmsub.s f8, f11, f20, f1, dyn # perform operation
fnmsub.s f8, f11, f20, f1, rdn # perform operation
fnmsub.s f8, f11, f20, f1, rmm # perform operation
fnmsub.s f8, f11, f20, f1, rne # perform operation
fnmsub.s f8, f11, f20, f1, rtz # perform operation
fnmsub.s f8, f11, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f11, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f11, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f11, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f11, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f11, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x21, 0xa2827454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xec5937ec # load x3 with value 0xec5937ec
sw x3, 0(x2) # store 0xec5937ec in memory
flw f10, 0(x2) # load 0xec5937ec from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmsub.s f21, f18, f10, f30, dyn # perform operation
fnmsub.s f21, f18, f10, f30, rdn # perform operation
fnmsub.s f21, f18, f10, f30, rmm # perform operation
fnmsub.s f21, f18, f10, f30, rne # perform operation
fnmsub.s f21, f18, f10, f30, rtz # perform operation
fnmsub.s f21, f18, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x28, 0xf4c12db6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x8c0af1b3 # load x3 with value 0x8c0af1b3
sw x3, 0(x2) # store 0x8c0af1b3 in memory
flw f30, 0(x2) # load 0x8c0af1b3 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fnmsub.s f28, f6, f30, f17, dyn # perform operation
fnmsub.s f28, f6, f30, f17, rdn # perform operation
fnmsub.s f28, f6, f30, f17, rmm # perform operation
fnmsub.s f28, f6, f30, f17, rne # perform operation
fnmsub.s f28, f6, f30, f17, rtz # perform operation
fnmsub.s f28, f6, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f6, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f6, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f6, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f6, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f6, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x12, 0x87327a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x7958efef # load x3 with value 0x7958efef
sw x3, 0(x2) # store 0x7958efef in memory
flw f8, 0(x2) # load 0x7958efef from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f12, f1, f8, f18, dyn # perform operation
fnmsub.s f12, f1, f8, f18, rdn # perform operation
fnmsub.s f12, f1, f8, f18, rmm # perform operation
fnmsub.s f12, f1, f8, f18, rne # perform operation
fnmsub.s f12, f1, f8, f18, rtz # perform operation
fnmsub.s f12, f1, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f1, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x5, 0xd5b4fa6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x2bddd870 # load x3 with value 0x2bddd870
sw x3, 0(x2) # store 0x2bddd870 in memory
flw f2, 0(x2) # load 0x2bddd870 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmsub.s f5, f18, f2, f9, dyn # perform operation
fnmsub.s f5, f18, f2, f9, rdn # perform operation
fnmsub.s f5, f18, f2, f9, rmm # perform operation
fnmsub.s f5, f18, f2, f9, rne # perform operation
fnmsub.s f5, f18, f2, f9, rtz # perform operation
fnmsub.s f5, f18, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x9, 0xbfc20908 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0xc75c4897 # load x3 with value 0xc75c4897
sw x3, 0(x2) # store 0xc75c4897 in memory
flw f13, 0(x2) # load 0xc75c4897 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fnmsub.s f9, f6, f13, f20, dyn # perform operation
fnmsub.s f9, f6, f13, f20, rdn # perform operation
fnmsub.s f9, f6, f13, f20, rmm # perform operation
fnmsub.s f9, f6, f13, f20, rne # perform operation
fnmsub.s f9, f6, f13, f20, rtz # perform operation
fnmsub.s f9, f6, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x15, 0xa81d275a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x86df8be2 # load x3 with value 0x86df8be2
sw x3, 0(x2) # store 0x86df8be2 in memory
flw f20, 0(x2) # load 0x86df8be2 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fnmsub.s f15, f19, f20, f8, dyn # perform operation
fnmsub.s f15, f19, f20, f8, rdn # perform operation
fnmsub.s f15, f19, f20, f8, rmm # perform operation
fnmsub.s f15, f19, f20, f8, rne # perform operation
fnmsub.s f15, f19, f20, f8, rtz # perform operation
fnmsub.s f15, f19, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x22, 0xaff718f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xe4e54876 # load x3 with value 0xe4e54876
sw x3, 0(x2) # store 0xe4e54876 in memory
flw f24, 0(x2) # load 0xe4e54876 from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fnmsub.s f22, f12, f24, f16, dyn # perform operation
fnmsub.s f22, f12, f24, f16, rdn # perform operation
fnmsub.s f22, f12, f24, f16, rmm # perform operation
fnmsub.s f22, f12, f24, f16, rne # perform operation
fnmsub.s f22, f12, f24, f16, rtz # perform operation
fnmsub.s f22, f12, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x19, 0x4a5584f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xf5ce0f37 # load x3 with value 0xf5ce0f37
sw x3, 0(x2) # store 0xf5ce0f37 in memory
flw f24, 0(x2) # load 0xf5ce0f37 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmsub.s f19, f18, f24, f30, dyn # perform operation
fnmsub.s f19, f18, f24, f30, rdn # perform operation
fnmsub.s f19, f18, f24, f30, rmm # perform operation
fnmsub.s f19, f18, f24, f30, rne # perform operation
fnmsub.s f19, f18, f24, f30, rtz # perform operation
fnmsub.s f19, f18, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f18, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f18, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x11, 0xfe1dde38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x1a784432 # load x3 with value 0x1a784432
sw x3, 0(x2) # store 0x1a784432 in memory
flw f24, 0(x2) # load 0x1a784432 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fnmsub.s f11, f8, f24, f23, dyn # perform operation
fnmsub.s f11, f8, f24, f23, rdn # perform operation
fnmsub.s f11, f8, f24, f23, rmm # perform operation
fnmsub.s f11, f8, f24, f23, rne # perform operation
fnmsub.s f11, f8, f24, f23, rtz # perform operation
fnmsub.s f11, f8, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f8, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f8, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x23, 0x0963228a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x4cab84cb # load x3 with value 0x4cab84cb
sw x3, 0(x2) # store 0x4cab84cb in memory
flw f27, 0(x2) # load 0x4cab84cb from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fnmsub.s f23, f8, f27, f1, dyn # perform operation
fnmsub.s f23, f8, f27, f1, rdn # perform operation
fnmsub.s f23, f8, f27, f1, rmm # perform operation
fnmsub.s f23, f8, f27, f1, rne # perform operation
fnmsub.s f23, f8, f27, f1, rtz # perform operation
fnmsub.s f23, f8, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f8, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x15, 0xb43b612f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x94d94867 # load x3 with value 0x94d94867
sw x3, 0(x2) # store 0x94d94867 in memory
flw f7, 0(x2) # load 0x94d94867 from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fnmsub.s f15, f4, f7, f21, dyn # perform operation
fnmsub.s f15, f4, f7, f21, rdn # perform operation
fnmsub.s f15, f4, f7, f21, rmm # perform operation
fnmsub.s f15, f4, f7, f21, rne # perform operation
fnmsub.s f15, f4, f7, f21, rtz # perform operation
fnmsub.s f15, f4, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f4, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f4, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f4, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f4, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f4, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x10, 0x7a958ce7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x63403735 # load x3 with value 0x63403735
sw x3, 0(x2) # store 0x63403735 in memory
flw f9, 0(x2) # load 0x63403735 from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fnmsub.s f10, f19, f9, f26, dyn # perform operation
fnmsub.s f10, f19, f9, f26, rdn # perform operation
fnmsub.s f10, f19, f9, f26, rmm # perform operation
fnmsub.s f10, f19, f9, f26, rne # perform operation
fnmsub.s f10, f19, f9, f26, rtz # perform operation
fnmsub.s f10, f19, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x22, 0x6e148f59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x36fbcea9 # load x3 with value 0x36fbcea9
sw x3, 0(x2) # store 0x36fbcea9 in memory
flw f4, 0(x2) # load 0x36fbcea9 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fnmsub.s f22, f31, f4, f6, dyn # perform operation
fnmsub.s f22, f31, f4, f6, rdn # perform operation
fnmsub.s f22, f31, f4, f6, rmm # perform operation
fnmsub.s f22, f31, f4, f6, rne # perform operation
fnmsub.s f22, f31, f4, f6, rtz # perform operation
fnmsub.s f22, f31, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f31, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f31, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f31, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f31, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f31, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x30, 0x02d32e55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xc821ce13 # load x3 with value 0xc821ce13
sw x3, 0(x2) # store 0xc821ce13 in memory
flw f11, 0(x2) # load 0xc821ce13 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmsub.s f30, f16, f11, f4, dyn # perform operation
fnmsub.s f30, f16, f11, f4, rdn # perform operation
fnmsub.s f30, f16, f11, f4, rmm # perform operation
fnmsub.s f30, f16, f11, f4, rne # perform operation
fnmsub.s f30, f16, f11, f4, rtz # perform operation
fnmsub.s f30, f16, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f16, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x21, 0xd282a13f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x328591ff # load x3 with value 0x328591ff
sw x3, 0(x2) # store 0x328591ff in memory
flw f3, 0(x2) # load 0x328591ff from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fnmsub.s f21, f22, f3, f15, dyn # perform operation
fnmsub.s f21, f22, f3, f15, rdn # perform operation
fnmsub.s f21, f22, f3, f15, rmm # perform operation
fnmsub.s f21, f22, f3, f15, rne # perform operation
fnmsub.s f21, f22, f3, f15, rtz # perform operation
fnmsub.s f21, f22, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f22, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f22, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f22, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f22, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f22, f3, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x29, 0xadae9594 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xe20fc22c # load x3 with value 0xe20fc22c
sw x3, 0(x2) # store 0xe20fc22c in memory
flw f14, 0(x2) # load 0xe20fc22c from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmsub.s f29, f30, f14, f25, dyn # perform operation
fnmsub.s f29, f30, f14, f25, rdn # perform operation
fnmsub.s f29, f30, f14, f25, rmm # perform operation
fnmsub.s f29, f30, f14, f25, rne # perform operation
fnmsub.s f29, f30, f14, f25, rtz # perform operation
fnmsub.s f29, f30, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f30, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x22, 0x3ec7593a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x48e8c680 # load x3 with value 0x48e8c680
sw x3, 0(x2) # store 0x48e8c680 in memory
flw f13, 0(x2) # load 0x48e8c680 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fnmsub.s f22, f29, f13, f8, dyn # perform operation
fnmsub.s f22, f29, f13, f8, rdn # perform operation
fnmsub.s f22, f29, f13, f8, rmm # perform operation
fnmsub.s f22, f29, f13, f8, rne # perform operation
fnmsub.s f22, f29, f13, f8, rtz # perform operation
fnmsub.s f22, f29, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x8, 0x9d6de8ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xaaba5ff5 # load x3 with value 0xaaba5ff5
sw x3, 0(x2) # store 0xaaba5ff5 in memory
flw f28, 0(x2) # load 0xaaba5ff5 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
fnmsub.s f8, f14, f28, f4, dyn # perform operation
fnmsub.s f8, f14, f28, f4, rdn # perform operation
fnmsub.s f8, f14, f28, f4, rmm # perform operation
fnmsub.s f8, f14, f28, f4, rne # perform operation
fnmsub.s f8, f14, f28, f4, rtz # perform operation
fnmsub.s f8, f14, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x31, 0x46f40616 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x17e8288e # load x3 with value 0x17e8288e
sw x3, 0(x2) # store 0x17e8288e in memory
flw f5, 0(x2) # load 0x17e8288e from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmsub.s f31, f1, f5, f12, dyn # perform operation
fnmsub.s f31, f1, f5, f12, rdn # perform operation
fnmsub.s f31, f1, f5, f12, rmm # perform operation
fnmsub.s f31, f1, f5, f12, rne # perform operation
fnmsub.s f31, f1, f5, f12, rtz # perform operation
fnmsub.s f31, f1, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x3, 0x502d534c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0xc90d5d88 # load x3 with value 0xc90d5d88
sw x3, 0(x2) # store 0xc90d5d88 in memory
flw f7, 0(x2) # load 0xc90d5d88 from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmsub.s f3, f24, f7, f10, dyn # perform operation
fnmsub.s f3, f24, f7, f10, rdn # perform operation
fnmsub.s f3, f24, f7, f10, rmm # perform operation
fnmsub.s f3, f24, f7, f10, rne # perform operation
fnmsub.s f3, f24, f7, f10, rtz # perform operation
fnmsub.s f3, f24, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f24, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x5, 0xcb4565da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x94c733a1 # load x3 with value 0x94c733a1
sw x3, 0(x2) # store 0x94c733a1 in memory
flw f21, 0(x2) # load 0x94c733a1 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fnmsub.s f5, f19, f21, f13, dyn # perform operation
fnmsub.s f5, f19, f21, f13, rdn # perform operation
fnmsub.s f5, f19, f21, f13, rmm # perform operation
fnmsub.s f5, f19, f21, f13, rne # perform operation
fnmsub.s f5, f19, f21, f13, rtz # perform operation
fnmsub.s f5, f19, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f21, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x11, 0x7f82f0c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x8e245748 # load x3 with value 0x8e245748
sw x3, 0(x2) # store 0x8e245748 in memory
flw f4, 0(x2) # load 0x8e245748 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f11, f2, f4, f27, dyn # perform operation
fnmsub.s f11, f2, f4, f27, rdn # perform operation
fnmsub.s f11, f2, f4, f27, rmm # perform operation
fnmsub.s f11, f2, f4, f27, rne # perform operation
fnmsub.s f11, f2, f4, f27, rtz # perform operation
fnmsub.s f11, f2, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x21, 0x8e258be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0xd51a2acf # load x3 with value 0xd51a2acf
sw x3, 0(x2) # store 0xd51a2acf in memory
flw f23, 0(x2) # load 0xd51a2acf from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fnmsub.s f21, f22, f23, f26, dyn # perform operation
fnmsub.s f21, f22, f23, f26, rdn # perform operation
fnmsub.s f21, f22, f23, f26, rmm # perform operation
fnmsub.s f21, f22, f23, f26, rne # perform operation
fnmsub.s f21, f22, f23, f26, rtz # perform operation
fnmsub.s f21, f22, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f22, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x29, 0x6b5fa3cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x046df43e # load x3 with value 0x046df43e
sw x3, 0(x2) # store 0x046df43e in memory
flw f30, 0(x2) # load 0x046df43e from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f29, f28, f30, f3, dyn # perform operation
fnmsub.s f29, f28, f30, f3, rdn # perform operation
fnmsub.s f29, f28, f30, f3, rmm # perform operation
fnmsub.s f29, f28, f30, f3, rne # perform operation
fnmsub.s f29, f28, f30, f3, rtz # perform operation
fnmsub.s f29, f28, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f28, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x18, 0x2e4f04e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x95dfc130 # load x3 with value 0x95dfc130
sw x3, 0(x2) # store 0x95dfc130 in memory
flw f17, 0(x2) # load 0x95dfc130 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmsub.s f18, f26, f17, f31, dyn # perform operation
fnmsub.s f18, f26, f17, f31, rdn # perform operation
fnmsub.s f18, f26, f17, f31, rmm # perform operation
fnmsub.s f18, f26, f17, f31, rne # perform operation
fnmsub.s f18, f26, f17, f31, rtz # perform operation
fnmsub.s f18, f26, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f26, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f26, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f26, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f26, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f26, f17, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x12, 0xbe2c1b00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x86c52bf2 # load x3 with value 0x86c52bf2
sw x3, 0(x2) # store 0x86c52bf2 in memory
flw f6, 0(x2) # load 0x86c52bf2 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fnmsub.s f12, f18, f6, f4, dyn # perform operation
fnmsub.s f12, f18, f6, f4, rdn # perform operation
fnmsub.s f12, f18, f6, f4, rmm # perform operation
fnmsub.s f12, f18, f6, f4, rne # perform operation
fnmsub.s f12, f18, f6, f4, rtz # perform operation
fnmsub.s f12, f18, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f18, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x6, 0xa25f829f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x8144d254 # load x3 with value 0x8144d254
sw x3, 0(x2) # store 0x8144d254 in memory
flw f11, 0(x2) # load 0x8144d254 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmsub.s f6, f4, f11, f1, dyn # perform operation
fnmsub.s f6, f4, f11, f1, rdn # perform operation
fnmsub.s f6, f4, f11, f1, rmm # perform operation
fnmsub.s f6, f4, f11, f1, rne # perform operation
fnmsub.s f6, f4, f11, f1, rtz # perform operation
fnmsub.s f6, f4, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f4, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f4, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f4, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f4, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f4, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x8, 0x6192c5df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x95c1438c # load x3 with value 0x95c1438c
sw x3, 0(x2) # store 0x95c1438c in memory
flw f27, 0(x2) # load 0x95c1438c from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmsub.s f8, f2, f27, f15, dyn # perform operation
fnmsub.s f8, f2, f27, f15, rdn # perform operation
fnmsub.s f8, f2, f27, f15, rmm # perform operation
fnmsub.s f8, f2, f27, f15, rne # perform operation
fnmsub.s f8, f2, f27, f15, rtz # perform operation
fnmsub.s f8, f2, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f2, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x8, 0xa4161916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xda2598f8 # load x3 with value 0xda2598f8
sw x3, 0(x2) # store 0xda2598f8 in memory
flw f29, 0(x2) # load 0xda2598f8 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fnmsub.s f8, f28, f29, f10, dyn # perform operation
fnmsub.s f8, f28, f29, f10, rdn # perform operation
fnmsub.s f8, f28, f29, f10, rmm # perform operation
fnmsub.s f8, f28, f29, f10, rne # perform operation
fnmsub.s f8, f28, f29, f10, rtz # perform operation
fnmsub.s f8, f28, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f28, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f28, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f28, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f28, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f28, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x23, 0x2c5e0cfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x97c476bf # load x3 with value 0x97c476bf
sw x3, 0(x2) # store 0x97c476bf in memory
flw f22, 0(x2) # load 0x97c476bf from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmsub.s f23, f9, f22, f13, dyn # perform operation
fnmsub.s f23, f9, f22, f13, rdn # perform operation
fnmsub.s f23, f9, f22, f13, rmm # perform operation
fnmsub.s f23, f9, f22, f13, rne # perform operation
fnmsub.s f23, f9, f22, f13, rtz # perform operation
fnmsub.s f23, f9, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x12, 0x67c9a225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xeba27a8b # load x3 with value 0xeba27a8b
sw x3, 0(x2) # store 0xeba27a8b in memory
flw f25, 0(x2) # load 0xeba27a8b from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fnmsub.s f12, f21, f25, f30, dyn # perform operation
fnmsub.s f12, f21, f25, f30, rdn # perform operation
fnmsub.s f12, f21, f25, f30, rmm # perform operation
fnmsub.s f12, f21, f25, f30, rne # perform operation
fnmsub.s f12, f21, f25, f30, rtz # perform operation
fnmsub.s f12, f21, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x19, 0xb5e4bd18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x3c4885d0 # load x3 with value 0x3c4885d0
sw x3, 0(x2) # store 0x3c4885d0 in memory
flw f14, 0(x2) # load 0x3c4885d0 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fnmsub.s f19, f5, f14, f24, dyn # perform operation
fnmsub.s f19, f5, f14, f24, rdn # perform operation
fnmsub.s f19, f5, f14, f24, rmm # perform operation
fnmsub.s f19, f5, f14, f24, rne # perform operation
fnmsub.s f19, f5, f14, f24, rtz # perform operation
fnmsub.s f19, f5, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x4, 0x95cc418b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0xb184269e # load x3 with value 0xb184269e
sw x3, 0(x2) # store 0xb184269e in memory
flw f25, 0(x2) # load 0xb184269e from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmsub.s f4, f7, f25, f28, dyn # perform operation
fnmsub.s f4, f7, f25, f28, rdn # perform operation
fnmsub.s f4, f7, f25, f28, rmm # perform operation
fnmsub.s f4, f7, f25, f28, rne # perform operation
fnmsub.s f4, f7, f25, f28, rtz # perform operation
fnmsub.s f4, f7, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f7, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f7, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x24, 0x13c6f8bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xc54a24dd # load x3 with value 0xc54a24dd
sw x3, 0(x2) # store 0xc54a24dd in memory
flw f23, 0(x2) # load 0xc54a24dd from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmsub.s f24, f15, f23, f16, dyn # perform operation
fnmsub.s f24, f15, f23, f16, rdn # perform operation
fnmsub.s f24, f15, f23, f16, rmm # perform operation
fnmsub.s f24, f15, f23, f16, rne # perform operation
fnmsub.s f24, f15, f23, f16, rtz # perform operation
fnmsub.s f24, f15, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f15, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f15, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f15, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f15, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f15, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x13, 0xd9ec2c4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7fe8f32b # load x3 with value 0x7fe8f32b
sw x3, 0(x2) # store 0x7fe8f32b in memory
flw f30, 0(x2) # load 0x7fe8f32b from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmsub.s f13, f20, f30, f12, dyn # perform operation
fnmsub.s f13, f20, f30, f12, rdn # perform operation
fnmsub.s f13, f20, f30, f12, rmm # perform operation
fnmsub.s f13, f20, f30, f12, rne # perform operation
fnmsub.s f13, f20, f30, f12, rtz # perform operation
fnmsub.s f13, f20, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f20, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x10, 0x880617d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xd0249a43 # load x3 with value 0xd0249a43
sw x3, 0(x2) # store 0xd0249a43 in memory
flw f19, 0(x2) # load 0xd0249a43 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fnmsub.s f10, f15, f19, f12, dyn # perform operation
fnmsub.s f10, f15, f19, f12, rdn # perform operation
fnmsub.s f10, f15, f19, f12, rmm # perform operation
fnmsub.s f10, f15, f19, f12, rne # perform operation
fnmsub.s f10, f15, f19, f12, rtz # perform operation
fnmsub.s f10, f15, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x7, 0x83410d76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0xde56df39 # load x3 with value 0xde56df39
sw x3, 0(x2) # store 0xde56df39 in memory
flw f4, 0(x2) # load 0xde56df39 from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmsub.s f7, f19, f4, f24, dyn # perform operation
fnmsub.s f7, f19, f4, f24, rdn # perform operation
fnmsub.s f7, f19, f4, f24, rmm # perform operation
fnmsub.s f7, f19, f4, f24, rne # perform operation
fnmsub.s f7, f19, f4, f24, rtz # perform operation
fnmsub.s f7, f19, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f19, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f19, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f19, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f19, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f19, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x1, 0x7c53d94b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x526bdc18 # load x3 with value 0x526bdc18
sw x3, 0(x2) # store 0x526bdc18 in memory
flw f21, 0(x2) # load 0x526bdc18 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmsub.s f1, f14, f21, f8, dyn # perform operation
fnmsub.s f1, f14, f21, f8, rdn # perform operation
fnmsub.s f1, f14, f21, f8, rmm # perform operation
fnmsub.s f1, f14, f21, f8, rne # perform operation
fnmsub.s f1, f14, f21, f8, rtz # perform operation
fnmsub.s f1, f14, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f14, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x1, 0x71882a1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x4b885ab1 # load x3 with value 0x4b885ab1
sw x3, 0(x2) # store 0x4b885ab1 in memory
flw f5, 0(x2) # load 0x4b885ab1 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fnmsub.s f1, f16, f5, f17, dyn # perform operation
fnmsub.s f1, f16, f5, f17, rdn # perform operation
fnmsub.s f1, f16, f5, f17, rmm # perform operation
fnmsub.s f1, f16, f5, f17, rne # perform operation
fnmsub.s f1, f16, f5, f17, rtz # perform operation
fnmsub.s f1, f16, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f16, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f16, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f16, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f16, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f16, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x21, 0xcc0730fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0xd49b850c # load x3 with value 0xd49b850c
sw x3, 0(x2) # store 0xd49b850c in memory
flw f22, 0(x2) # load 0xd49b850c from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fnmsub.s f21, f18, f22, f5, dyn # perform operation
fnmsub.s f21, f18, f22, f5, rdn # perform operation
fnmsub.s f21, f18, f22, f5, rmm # perform operation
fnmsub.s f21, f18, f22, f5, rne # perform operation
fnmsub.s f21, f18, f22, f5, rtz # perform operation
fnmsub.s f21, f18, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x27, 0x91612bec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x1a214e20 # load x3 with value 0x1a214e20
sw x3, 0(x2) # store 0x1a214e20 in memory
flw f3, 0(x2) # load 0x1a214e20 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmsub.s f27, f22, f3, f23, dyn # perform operation
fnmsub.s f27, f22, f3, f23, rdn # perform operation
fnmsub.s f27, f22, f3, f23, rmm # perform operation
fnmsub.s f27, f22, f3, f23, rne # perform operation
fnmsub.s f27, f22, f3, f23, rtz # perform operation
fnmsub.s f27, f22, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f22, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x12, 0x7dd20bba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x3b9c1c8e # load x3 with value 0x3b9c1c8e
sw x3, 0(x2) # store 0x3b9c1c8e in memory
flw f26, 0(x2) # load 0x3b9c1c8e from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmsub.s f12, f21, f26, f6, dyn # perform operation
fnmsub.s f12, f21, f26, f6, rdn # perform operation
fnmsub.s f12, f21, f26, f6, rmm # perform operation
fnmsub.s f12, f21, f26, f6, rne # perform operation
fnmsub.s f12, f21, f26, f6, rtz # perform operation
fnmsub.s f12, f21, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x30, 0x42fb566e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x7631c3dd # load x3 with value 0x7631c3dd
sw x3, 0(x2) # store 0x7631c3dd in memory
flw f15, 0(x2) # load 0x7631c3dd from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fnmsub.s f30, f19, f15, f7, dyn # perform operation
fnmsub.s f30, f19, f15, f7, rdn # perform operation
fnmsub.s f30, f19, f15, f7, rmm # perform operation
fnmsub.s f30, f19, f15, f7, rne # perform operation
fnmsub.s f30, f19, f15, f7, rtz # perform operation
fnmsub.s f30, f19, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x3, 0x0d99d5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x393500be # load x3 with value 0x393500be
sw x3, 0(x2) # store 0x393500be in memory
flw f31, 0(x2) # load 0x393500be from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmsub.s f3, f9, f31, f22, dyn # perform operation
fnmsub.s f3, f9, f31, f22, rdn # perform operation
fnmsub.s f3, f9, f31, f22, rmm # perform operation
fnmsub.s f3, f9, f31, f22, rne # perform operation
fnmsub.s f3, f9, f31, f22, rtz # perform operation
fnmsub.s f3, f9, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f9, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f9, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x5, 0xa3df6e83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x209b41d8 # load x3 with value 0x209b41d8
sw x3, 0(x2) # store 0x209b41d8 in memory
flw f10, 0(x2) # load 0x209b41d8 from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmsub.s f5, f7, f10, f31, dyn # perform operation
fnmsub.s f5, f7, f10, f31, rdn # perform operation
fnmsub.s f5, f7, f10, f31, rmm # perform operation
fnmsub.s f5, f7, f10, f31, rne # perform operation
fnmsub.s f5, f7, f10, f31, rtz # perform operation
fnmsub.s f5, f7, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x15, 0x5ae6eda5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x27aa9eb0 # load x3 with value 0x27aa9eb0
sw x3, 0(x2) # store 0x27aa9eb0 in memory
flw f12, 0(x2) # load 0x27aa9eb0 from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fnmsub.s f15, f10, f12, f2, dyn # perform operation
fnmsub.s f15, f10, f12, f2, rdn # perform operation
fnmsub.s f15, f10, f12, f2, rmm # perform operation
fnmsub.s f15, f10, f12, f2, rne # perform operation
fnmsub.s f15, f10, f12, f2, rtz # perform operation
fnmsub.s f15, f10, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f10, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f10, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f10, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f10, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f10, f12, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x30, 0x801f5411 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x449bd7ef # load x3 with value 0x449bd7ef
sw x3, 0(x2) # store 0x449bd7ef in memory
flw f9, 0(x2) # load 0x449bd7ef from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fnmsub.s f30, f13, f9, f7, dyn # perform operation
fnmsub.s f30, f13, f9, f7, rdn # perform operation
fnmsub.s f30, f13, f9, f7, rmm # perform operation
fnmsub.s f30, f13, f9, f7, rne # perform operation
fnmsub.s f30, f13, f9, f7, rtz # perform operation
fnmsub.s f30, f13, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x15, 0xcaf79fbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0xf5ad4840 # load x3 with value 0xf5ad4840
sw x3, 0(x2) # store 0xf5ad4840 in memory
flw f31, 0(x2) # load 0xf5ad4840 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmsub.s f15, f6, f31, f8, dyn # perform operation
fnmsub.s f15, f6, f31, f8, rdn # perform operation
fnmsub.s f15, f6, f31, f8, rmm # perform operation
fnmsub.s f15, f6, f31, f8, rne # perform operation
fnmsub.s f15, f6, f31, f8, rtz # perform operation
fnmsub.s f15, f6, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f6, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x31, 0xc939dafc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x1a944c9d # load x3 with value 0x1a944c9d
sw x3, 0(x2) # store 0x1a944c9d in memory
flw f3, 0(x2) # load 0x1a944c9d from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fnmsub.s f31, f24, f3, f11, dyn # perform operation
fnmsub.s f31, f24, f3, f11, rdn # perform operation
fnmsub.s f31, f24, f3, f11, rmm # perform operation
fnmsub.s f31, f24, f3, f11, rne # perform operation
fnmsub.s f31, f24, f3, f11, rtz # perform operation
fnmsub.s f31, f24, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x2, 0x6362be04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x982bc40d # load x3 with value 0x982bc40d
sw x3, 0(x2) # store 0x982bc40d in memory
flw f19, 0(x2) # load 0x982bc40d from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmsub.s f2, f21, f19, f13, dyn # perform operation
fnmsub.s f2, f21, f19, f13, rdn # perform operation
fnmsub.s f2, f21, f19, f13, rmm # perform operation
fnmsub.s f2, f21, f19, f13, rne # perform operation
fnmsub.s f2, f21, f19, f13, rtz # perform operation
fnmsub.s f2, f21, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x26, 0xa5f23143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x22bfda7c # load x3 with value 0x22bfda7c
sw x3, 0(x2) # store 0x22bfda7c in memory
flw f4, 0(x2) # load 0x22bfda7c from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fnmsub.s f26, f27, f4, f17, dyn # perform operation
fnmsub.s f26, f27, f4, f17, rdn # perform operation
fnmsub.s f26, f27, f4, f17, rmm # perform operation
fnmsub.s f26, f27, f4, f17, rne # perform operation
fnmsub.s f26, f27, f4, f17, rtz # perform operation
fnmsub.s f26, f27, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x31, 0xbc9ff18d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xf7aaec15 # load x3 with value 0xf7aaec15
sw x3, 0(x2) # store 0xf7aaec15 in memory
flw f11, 0(x2) # load 0xf7aaec15 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f31, f23, f11, f16, dyn # perform operation
fnmsub.s f31, f23, f11, f16, rdn # perform operation
fnmsub.s f31, f23, f11, f16, rmm # perform operation
fnmsub.s f31, f23, f11, f16, rne # perform operation
fnmsub.s f31, f23, f11, f16, rtz # perform operation
fnmsub.s f31, f23, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x13, 0xbb2f666d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x28b3e465 # load x3 with value 0x28b3e465
sw x3, 0(x2) # store 0x28b3e465 in memory
flw f28, 0(x2) # load 0x28b3e465 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fnmsub.s f13, f3, f28, f22, dyn # perform operation
fnmsub.s f13, f3, f28, f22, rdn # perform operation
fnmsub.s f13, f3, f28, f22, rmm # perform operation
fnmsub.s f13, f3, f28, f22, rne # perform operation
fnmsub.s f13, f3, f28, f22, rtz # perform operation
fnmsub.s f13, f3, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x26, 0xa68e4c5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0xd13309b9 # load x3 with value 0xd13309b9
sw x3, 0(x2) # store 0xd13309b9 in memory
flw f17, 0(x2) # load 0xd13309b9 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmsub.s f26, f25, f17, f20, dyn # perform operation
fnmsub.s f26, f25, f17, f20, rdn # perform operation
fnmsub.s f26, f25, f17, f20, rmm # perform operation
fnmsub.s f26, f25, f17, f20, rne # perform operation
fnmsub.s f26, f25, f17, f20, rtz # perform operation
fnmsub.s f26, f25, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x15, 0x6e06a0b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x3aa75561 # load x3 with value 0x3aa75561
sw x3, 0(x2) # store 0x3aa75561 in memory
flw f16, 0(x2) # load 0x3aa75561 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fnmsub.s f15, f19, f16, f1, dyn # perform operation
fnmsub.s f15, f19, f16, f1, rdn # perform operation
fnmsub.s f15, f19, f16, f1, rmm # perform operation
fnmsub.s f15, f19, f16, f1, rne # perform operation
fnmsub.s f15, f19, f16, f1, rtz # perform operation
fnmsub.s f15, f19, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x27, 0x0887520f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x3e969a38 # load x3 with value 0x3e969a38
sw x3, 0(x2) # store 0x3e969a38 in memory
flw f15, 0(x2) # load 0x3e969a38 from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fnmsub.s f27, f20, f15, f8, dyn # perform operation
fnmsub.s f27, f20, f15, f8, rdn # perform operation
fnmsub.s f27, f20, f15, f8, rmm # perform operation
fnmsub.s f27, f20, f15, f8, rne # perform operation
fnmsub.s f27, f20, f15, f8, rtz # perform operation
fnmsub.s f27, f20, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x14, 0x9a5ade6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0xaed1ce87 # load x3 with value 0xaed1ce87
sw x3, 0(x2) # store 0xaed1ce87 in memory
flw f13, 0(x2) # load 0xaed1ce87 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fnmsub.s f14, f5, f13, f12, dyn # perform operation
fnmsub.s f14, f5, f13, f12, rdn # perform operation
fnmsub.s f14, f5, f13, f12, rmm # perform operation
fnmsub.s f14, f5, f13, f12, rne # perform operation
fnmsub.s f14, f5, f13, f12, rtz # perform operation
fnmsub.s f14, f5, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f5, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f5, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f5, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f5, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f5, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x17, 0x71840f69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x6006deb7 # load x3 with value 0x6006deb7
sw x3, 0(x2) # store 0x6006deb7 in memory
flw f21, 0(x2) # load 0x6006deb7 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmsub.s f17, f1, f21, f6, dyn # perform operation
fnmsub.s f17, f1, f21, f6, rdn # perform operation
fnmsub.s f17, f1, f21, f6, rmm # perform operation
fnmsub.s f17, f1, f21, f6, rne # perform operation
fnmsub.s f17, f1, f21, f6, rtz # perform operation
fnmsub.s f17, f1, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x27, 0xa75c785b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0xb370ce33 # load x3 with value 0xb370ce33
sw x3, 0(x2) # store 0xb370ce33 in memory
flw f30, 0(x2) # load 0xb370ce33 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fnmsub.s f27, f25, f30, f13, dyn # perform operation
fnmsub.s f27, f25, f30, f13, rdn # perform operation
fnmsub.s f27, f25, f30, f13, rmm # perform operation
fnmsub.s f27, f25, f30, f13, rne # perform operation
fnmsub.s f27, f25, f30, f13, rtz # perform operation
fnmsub.s f27, f25, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f25, f30, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x20, 0xe4e6b3ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xaac61ecb # load x3 with value 0xaac61ecb
sw x3, 0(x2) # store 0xaac61ecb in memory
flw f4, 0(x2) # load 0xaac61ecb from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmsub.s f20, f30, f4, f8, dyn # perform operation
fnmsub.s f20, f30, f4, f8, rdn # perform operation
fnmsub.s f20, f30, f4, f8, rmm # perform operation
fnmsub.s f20, f30, f4, f8, rne # perform operation
fnmsub.s f20, f30, f4, f8, rtz # perform operation
fnmsub.s f20, f30, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f30, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f30, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f30, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f30, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f30, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x27, 0xeb3503fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0xea69772b # load x3 with value 0xea69772b
sw x3, 0(x2) # store 0xea69772b in memory
flw f12, 0(x2) # load 0xea69772b from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmsub.s f27, f26, f12, f30, dyn # perform operation
fnmsub.s f27, f26, f12, f30, rdn # perform operation
fnmsub.s f27, f26, f12, f30, rmm # perform operation
fnmsub.s f27, f26, f12, f30, rne # perform operation
fnmsub.s f27, f26, f12, f30, rtz # perform operation
fnmsub.s f27, f26, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f26, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x9, 0x923b3d69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x82e3bc91 # load x3 with value 0x82e3bc91
sw x3, 0(x2) # store 0x82e3bc91 in memory
flw f14, 0(x2) # load 0x82e3bc91 from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmsub.s f9, f21, f14, f27, dyn # perform operation
fnmsub.s f9, f21, f14, f27, rdn # perform operation
fnmsub.s f9, f21, f14, f27, rmm # perform operation
fnmsub.s f9, f21, f14, f27, rne # perform operation
fnmsub.s f9, f21, f14, f27, rtz # perform operation
fnmsub.s f9, f21, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f21, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x26, 0x3eb0fe04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x8a81f6da # load x3 with value 0x8a81f6da
sw x3, 0(x2) # store 0x8a81f6da in memory
flw f1, 0(x2) # load 0x8a81f6da from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmsub.s f26, f24, f1, f5, dyn # perform operation
fnmsub.s f26, f24, f1, f5, rdn # perform operation
fnmsub.s f26, f24, f1, f5, rmm # perform operation
fnmsub.s f26, f24, f1, f5, rne # perform operation
fnmsub.s f26, f24, f1, f5, rtz # perform operation
fnmsub.s f26, f24, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f24, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f24, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x12, 0x7f16115b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xb9d5619d # load x3 with value 0xb9d5619d
sw x3, 0(x2) # store 0xb9d5619d in memory
flw f5, 0(x2) # load 0xb9d5619d from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmsub.s f12, f24, f5, f11, dyn # perform operation
fnmsub.s f12, f24, f5, f11, rdn # perform operation
fnmsub.s f12, f24, f5, f11, rmm # perform operation
fnmsub.s f12, f24, f5, f11, rne # perform operation
fnmsub.s f12, f24, f5, f11, rtz # perform operation
fnmsub.s f12, f24, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x5, 0xf9a088c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0xbbd2dfa8 # load x3 with value 0xbbd2dfa8
sw x3, 0(x2) # store 0xbbd2dfa8 in memory
flw f21, 0(x2) # load 0xbbd2dfa8 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fnmsub.s f5, f6, f21, f4, dyn # perform operation
fnmsub.s f5, f6, f21, f4, rdn # perform operation
fnmsub.s f5, f6, f21, f4, rmm # perform operation
fnmsub.s f5, f6, f21, f4, rne # perform operation
fnmsub.s f5, f6, f21, f4, rtz # perform operation
fnmsub.s f5, f6, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f6, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f6, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f6, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f6, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f6, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x23, 0xbc986366 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0xa66c39e2 # load x3 with value 0xa66c39e2
sw x3, 0(x2) # store 0xa66c39e2 in memory
flw f9, 0(x2) # load 0xa66c39e2 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fnmsub.s f23, f2, f9, f25, dyn # perform operation
fnmsub.s f23, f2, f9, f25, rdn # perform operation
fnmsub.s f23, f2, f9, f25, rmm # perform operation
fnmsub.s f23, f2, f9, f25, rne # perform operation
fnmsub.s f23, f2, f9, f25, rtz # perform operation
fnmsub.s f23, f2, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f2, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x2, 0x4ca22bf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0xd96610ed # load x3 with value 0xd96610ed
sw x3, 0(x2) # store 0xd96610ed in memory
flw f17, 0(x2) # load 0xd96610ed from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmsub.s f2, f4, f17, f23, dyn # perform operation
fnmsub.s f2, f4, f17, f23, rdn # perform operation
fnmsub.s f2, f4, f17, f23, rmm # perform operation
fnmsub.s f2, f4, f17, f23, rne # perform operation
fnmsub.s f2, f4, f17, f23, rtz # perform operation
fnmsub.s f2, f4, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f4, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f4, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f4, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f4, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f4, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x27, 0xa7154301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x47ce9365 # load x3 with value 0x47ce9365
sw x3, 0(x2) # store 0x47ce9365 in memory
flw f12, 0(x2) # load 0x47ce9365 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmsub.s f27, f20, f12, f1, dyn # perform operation
fnmsub.s f27, f20, f12, f1, rdn # perform operation
fnmsub.s f27, f20, f12, f1, rmm # perform operation
fnmsub.s f27, f20, f12, f1, rne # perform operation
fnmsub.s f27, f20, f12, f1, rtz # perform operation
fnmsub.s f27, f20, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x20, 0x29db2d25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x3581f07d # load x3 with value 0x3581f07d
sw x3, 0(x2) # store 0x3581f07d in memory
flw f15, 0(x2) # load 0x3581f07d from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f20, f23, f15, f24, dyn # perform operation
fnmsub.s f20, f23, f15, f24, rdn # perform operation
fnmsub.s f20, f23, f15, f24, rmm # perform operation
fnmsub.s f20, f23, f15, f24, rne # perform operation
fnmsub.s f20, f23, f15, f24, rtz # perform operation
fnmsub.s f20, f23, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x24, 0x75fdb0e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x795dd603 # load x3 with value 0x795dd603
sw x3, 0(x2) # store 0x795dd603 in memory
flw f26, 0(x2) # load 0x795dd603 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmsub.s f24, f13, f26, f12, dyn # perform operation
fnmsub.s f24, f13, f26, f12, rdn # perform operation
fnmsub.s f24, f13, f26, f12, rmm # perform operation
fnmsub.s f24, f13, f26, f12, rne # perform operation
fnmsub.s f24, f13, f26, f12, rtz # perform operation
fnmsub.s f24, f13, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f13, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x13, 0x822f0db7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x31b83b67 # load x3 with value 0x31b83b67
sw x3, 0(x2) # store 0x31b83b67 in memory
flw f30, 0(x2) # load 0x31b83b67 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmsub.s f13, f5, f30, f15, dyn # perform operation
fnmsub.s f13, f5, f30, f15, rdn # perform operation
fnmsub.s f13, f5, f30, f15, rmm # perform operation
fnmsub.s f13, f5, f30, f15, rne # perform operation
fnmsub.s f13, f5, f30, f15, rtz # perform operation
fnmsub.s f13, f5, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f5, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x9, 0xcf7d753a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x36d71142 # load x3 with value 0x36d71142
sw x3, 0(x2) # store 0x36d71142 in memory
flw f27, 0(x2) # load 0x36d71142 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fnmsub.s f9, f16, f27, f12, dyn # perform operation
fnmsub.s f9, f16, f27, f12, rdn # perform operation
fnmsub.s f9, f16, f27, f12, rmm # perform operation
fnmsub.s f9, f16, f27, f12, rne # perform operation
fnmsub.s f9, f16, f27, f12, rtz # perform operation
fnmsub.s f9, f16, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x1, 0x111481b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x19b03c38 # load x3 with value 0x19b03c38
sw x3, 0(x2) # store 0x19b03c38 in memory
flw f24, 0(x2) # load 0x19b03c38 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fnmsub.s f1, f6, f24, f2, dyn # perform operation
fnmsub.s f1, f6, f24, f2, rdn # perform operation
fnmsub.s f1, f6, f24, f2, rmm # perform operation
fnmsub.s f1, f6, f24, f2, rne # perform operation
fnmsub.s f1, f6, f24, f2, rtz # perform operation
fnmsub.s f1, f6, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f24, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x11, 0xa3119ab2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x7e0a8ed6 # load x3 with value 0x7e0a8ed6
sw x3, 0(x2) # store 0x7e0a8ed6 in memory
flw f31, 0(x2) # load 0x7e0a8ed6 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f11, f2, f31, f27, dyn # perform operation
fnmsub.s f11, f2, f31, f27, rdn # perform operation
fnmsub.s f11, f2, f31, f27, rmm # perform operation
fnmsub.s f11, f2, f31, f27, rne # perform operation
fnmsub.s f11, f2, f31, f27, rtz # perform operation
fnmsub.s f11, f2, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x8, 0xe06b7c3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x3cca1346 # load x3 with value 0x3cca1346
sw x3, 0(x2) # store 0x3cca1346 in memory
flw f17, 0(x2) # load 0x3cca1346 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fnmsub.s f8, f26, f17, f28, dyn # perform operation
fnmsub.s f8, f26, f17, f28, rdn # perform operation
fnmsub.s f8, f26, f17, f28, rmm # perform operation
fnmsub.s f8, f26, f17, f28, rne # perform operation
fnmsub.s f8, f26, f17, f28, rtz # perform operation
fnmsub.s f8, f26, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f26, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f26, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f26, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f26, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f26, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x18, 0x768b36d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0xc18bf1d0 # load x3 with value 0xc18bf1d0
sw x3, 0(x2) # store 0xc18bf1d0 in memory
flw f1, 0(x2) # load 0xc18bf1d0 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fnmsub.s f18, f5, f1, f14, dyn # perform operation
fnmsub.s f18, f5, f1, f14, rdn # perform operation
fnmsub.s f18, f5, f1, f14, rmm # perform operation
fnmsub.s f18, f5, f1, f14, rne # perform operation
fnmsub.s f18, f5, f1, f14, rtz # perform operation
fnmsub.s f18, f5, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f5, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f5, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f5, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f5, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f5, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x29, 0x60fb33e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x470afe0d # load x3 with value 0x470afe0d
sw x3, 0(x2) # store 0x470afe0d in memory
flw f14, 0(x2) # load 0x470afe0d from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fnmsub.s f29, f13, f14, f24, dyn # perform operation
fnmsub.s f29, f13, f14, f24, rdn # perform operation
fnmsub.s f29, f13, f14, f24, rmm # perform operation
fnmsub.s f29, f13, f14, f24, rne # perform operation
fnmsub.s f29, f13, f14, f24, rtz # perform operation
fnmsub.s f29, f13, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f13, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x23, 0x30053b3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xab903dbc # load x3 with value 0xab903dbc
sw x3, 0(x2) # store 0xab903dbc in memory
flw f18, 0(x2) # load 0xab903dbc from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f23, f25, f18, f16, dyn # perform operation
fnmsub.s f23, f25, f18, f16, rdn # perform operation
fnmsub.s f23, f25, f18, f16, rmm # perform operation
fnmsub.s f23, f25, f18, f16, rne # perform operation
fnmsub.s f23, f25, f18, f16, rtz # perform operation
fnmsub.s f23, f25, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x6, 0x12774bd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xfcf5d155 # load x3 with value 0xfcf5d155
sw x3, 0(x2) # store 0xfcf5d155 in memory
flw f11, 0(x2) # load 0xfcf5d155 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fnmsub.s f6, f8, f11, f3, dyn # perform operation
fnmsub.s f6, f8, f11, f3, rdn # perform operation
fnmsub.s f6, f8, f11, f3, rmm # perform operation
fnmsub.s f6, f8, f11, f3, rne # perform operation
fnmsub.s f6, f8, f11, f3, rtz # perform operation
fnmsub.s f6, f8, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f8, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f8, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f8, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f8, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f8, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x23, 0x6f9fc43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x127b4064 # load x3 with value 0x127b4064
sw x3, 0(x2) # store 0x127b4064 in memory
flw f5, 0(x2) # load 0x127b4064 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f23, f22, f5, f13, dyn # perform operation
fnmsub.s f23, f22, f5, f13, rdn # perform operation
fnmsub.s f23, f22, f5, f13, rmm # perform operation
fnmsub.s f23, f22, f5, f13, rne # perform operation
fnmsub.s f23, f22, f5, f13, rtz # perform operation
fnmsub.s f23, f22, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f22, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x9, 0x197d582d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x45499e93 # load x3 with value 0x45499e93
sw x3, 0(x2) # store 0x45499e93 in memory
flw f31, 0(x2) # load 0x45499e93 from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmsub.s f9, f3, f31, f22, dyn # perform operation
fnmsub.s f9, f3, f31, f22, rdn # perform operation
fnmsub.s f9, f3, f31, f22, rmm # perform operation
fnmsub.s f9, f3, f31, f22, rne # perform operation
fnmsub.s f9, f3, f31, f22, rtz # perform operation
fnmsub.s f9, f3, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f3, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f3, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f3, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f3, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f3, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x4, 0x8f999c9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x07998605 # load x3 with value 0x07998605
sw x3, 0(x2) # store 0x07998605 in memory
flw f28, 0(x2) # load 0x07998605 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmsub.s f4, f16, f28, f23, dyn # perform operation
fnmsub.s f4, f16, f28, f23, rdn # perform operation
fnmsub.s f4, f16, f28, f23, rmm # perform operation
fnmsub.s f4, f16, f28, f23, rne # perform operation
fnmsub.s f4, f16, f28, f23, rtz # perform operation
fnmsub.s f4, f16, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f16, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f16, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f16, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f16, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f16, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x24, 0xf4303347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x999d7556 # load x3 with value 0x999d7556
sw x3, 0(x2) # store 0x999d7556 in memory
flw f7, 0(x2) # load 0x999d7556 from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmsub.s f24, f28, f7, f31, dyn # perform operation
fnmsub.s f24, f28, f7, f31, rdn # perform operation
fnmsub.s f24, f28, f7, f31, rmm # perform operation
fnmsub.s f24, f28, f7, f31, rne # perform operation
fnmsub.s f24, f28, f7, f31, rtz # perform operation
fnmsub.s f24, f28, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f28, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f28, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x24, 0xa2b693af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0xafe5854c # load x3 with value 0xafe5854c
sw x3, 0(x2) # store 0xafe5854c in memory
flw f26, 0(x2) # load 0xafe5854c from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fnmsub.s f24, f16, f26, f8, dyn # perform operation
fnmsub.s f24, f16, f26, f8, rdn # perform operation
fnmsub.s f24, f16, f26, f8, rmm # perform operation
fnmsub.s f24, f16, f26, f8, rne # perform operation
fnmsub.s f24, f16, f26, f8, rtz # perform operation
fnmsub.s f24, f16, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f16, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x29, 0x429d0248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xa22fe737 # load x3 with value 0xa22fe737
sw x3, 0(x2) # store 0xa22fe737 in memory
flw f21, 0(x2) # load 0xa22fe737 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmsub.s f29, f14, f21, f24, dyn # perform operation
fnmsub.s f29, f14, f21, f24, rdn # perform operation
fnmsub.s f29, f14, f21, f24, rmm # perform operation
fnmsub.s f29, f14, f21, f24, rne # perform operation
fnmsub.s f29, f14, f21, f24, rtz # perform operation
fnmsub.s f29, f14, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f14, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f14, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f14, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f14, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f14, f21, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x5, 0x4df7f3d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x71f32da3 # load x3 with value 0x71f32da3
sw x3, 0(x2) # store 0x71f32da3 in memory
flw f14, 0(x2) # load 0x71f32da3 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmsub.s f5, f15, f14, f18, dyn # perform operation
fnmsub.s f5, f15, f14, f18, rdn # perform operation
fnmsub.s f5, f15, f14, f18, rmm # perform operation
fnmsub.s f5, f15, f14, f18, rne # perform operation
fnmsub.s f5, f15, f14, f18, rtz # perform operation
fnmsub.s f5, f15, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f15, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x9, 0x751b9055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x086e4f5b # load x3 with value 0x086e4f5b
sw x3, 0(x2) # store 0x086e4f5b in memory
flw f14, 0(x2) # load 0x086e4f5b from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmsub.s f9, f31, f14, f30, dyn # perform operation
fnmsub.s f9, f31, f14, f30, rdn # perform operation
fnmsub.s f9, f31, f14, f30, rmm # perform operation
fnmsub.s f9, f31, f14, f30, rne # perform operation
fnmsub.s f9, f31, f14, f30, rtz # perform operation
fnmsub.s f9, f31, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f31, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f31, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f31, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f31, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f31, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x8, 0x630906fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0xdb287c12 # load x3 with value 0xdb287c12
sw x3, 0(x2) # store 0xdb287c12 in memory
flw f1, 0(x2) # load 0xdb287c12 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
fnmsub.s f8, f3, f1, f13, dyn # perform operation
fnmsub.s f8, f3, f1, f13, rdn # perform operation
fnmsub.s f8, f3, f1, f13, rmm # perform operation
fnmsub.s f8, f3, f1, f13, rne # perform operation
fnmsub.s f8, f3, f1, f13, rtz # perform operation
fnmsub.s f8, f3, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f3, f1, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x2, 0xd8064f96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xbeb7bbd4 # load x3 with value 0xbeb7bbd4
sw x3, 0(x2) # store 0xbeb7bbd4 in memory
flw f21, 0(x2) # load 0xbeb7bbd4 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmsub.s f2, f30, f21, f3, dyn # perform operation
fnmsub.s f2, f30, f21, f3, rdn # perform operation
fnmsub.s f2, f30, f21, f3, rmm # perform operation
fnmsub.s f2, f30, f21, f3, rne # perform operation
fnmsub.s f2, f30, f21, f3, rtz # perform operation
fnmsub.s f2, f30, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x25, 0x6e02c25c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x162f661f # load x3 with value 0x162f661f
sw x3, 0(x2) # store 0x162f661f in memory
flw f31, 0(x2) # load 0x162f661f from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmsub.s f25, f23, f31, f6, dyn # perform operation
fnmsub.s f25, f23, f31, f6, rdn # perform operation
fnmsub.s f25, f23, f31, f6, rmm # perform operation
fnmsub.s f25, f23, f31, f6, rne # perform operation
fnmsub.s f25, f23, f31, f6, rtz # perform operation
fnmsub.s f25, f23, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f23, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x5, 0xda2b3c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x6b62f40f # load x3 with value 0x6b62f40f
sw x3, 0(x2) # store 0x6b62f40f in memory
flw f30, 0(x2) # load 0x6b62f40f from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fnmsub.s f5, f31, f30, f4, dyn # perform operation
fnmsub.s f5, f31, f30, f4, rdn # perform operation
fnmsub.s f5, f31, f30, f4, rmm # perform operation
fnmsub.s f5, f31, f30, f4, rne # perform operation
fnmsub.s f5, f31, f30, f4, rtz # perform operation
fnmsub.s f5, f31, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f31, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x7, 0x2b086b04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x9d15e984 # load x3 with value 0x9d15e984
sw x3, 0(x2) # store 0x9d15e984 in memory
flw f13, 0(x2) # load 0x9d15e984 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fnmsub.s f7, f23, f13, f14, dyn # perform operation
fnmsub.s f7, f23, f13, f14, rdn # perform operation
fnmsub.s f7, f23, f13, f14, rmm # perform operation
fnmsub.s f7, f23, f13, f14, rne # perform operation
fnmsub.s f7, f23, f13, f14, rtz # perform operation
fnmsub.s f7, f23, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f23, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f23, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f23, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f23, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f23, f13, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x16, 0x17a9d5d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x772cc026 # load x3 with value 0x772cc026
sw x3, 0(x2) # store 0x772cc026 in memory
flw f17, 0(x2) # load 0x772cc026 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fnmsub.s f16, f3, f17, f6, dyn # perform operation
fnmsub.s f16, f3, f17, f6, rdn # perform operation
fnmsub.s f16, f3, f17, f6, rmm # perform operation
fnmsub.s f16, f3, f17, f6, rne # perform operation
fnmsub.s f16, f3, f17, f6, rtz # perform operation
fnmsub.s f16, f3, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f3, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f3, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x22, 0xdbb899c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x02a6ecb4 # load x3 with value 0x02a6ecb4
sw x3, 0(x2) # store 0x02a6ecb4 in memory
flw f1, 0(x2) # load 0x02a6ecb4 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmsub.s f22, f21, f1, f10, dyn # perform operation
fnmsub.s f22, f21, f1, f10, rdn # perform operation
fnmsub.s f22, f21, f1, f10, rmm # perform operation
fnmsub.s f22, f21, f1, f10, rne # perform operation
fnmsub.s f22, f21, f1, f10, rtz # perform operation
fnmsub.s f22, f21, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f1, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x14, 0xb195caae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xb1405471 # load x3 with value 0xb1405471
sw x3, 0(x2) # store 0xb1405471 in memory
flw f2, 0(x2) # load 0xb1405471 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmsub.s f14, f6, f2, f17, dyn # perform operation
fnmsub.s f14, f6, f2, f17, rdn # perform operation
fnmsub.s f14, f6, f2, f17, rmm # perform operation
fnmsub.s f14, f6, f2, f17, rne # perform operation
fnmsub.s f14, f6, f2, f17, rtz # perform operation
fnmsub.s f14, f6, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f2, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x23, 0x0791fe78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xe3920dd5 # load x3 with value 0xe3920dd5
sw x3, 0(x2) # store 0xe3920dd5 in memory
flw f30, 0(x2) # load 0xe3920dd5 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmsub.s f23, f26, f30, f6, dyn # perform operation
fnmsub.s f23, f26, f30, f6, rdn # perform operation
fnmsub.s f23, f26, f30, f6, rmm # perform operation
fnmsub.s f23, f26, f30, f6, rne # perform operation
fnmsub.s f23, f26, f30, f6, rtz # perform operation
fnmsub.s f23, f26, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x11, 0xe0a8ee4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xeedd8ce1 # load x3 with value 0xeedd8ce1
sw x3, 0(x2) # store 0xeedd8ce1 in memory
flw f14, 0(x2) # load 0xeedd8ce1 from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmsub.s f11, f28, f14, f8, dyn # perform operation
fnmsub.s f11, f28, f14, f8, rdn # perform operation
fnmsub.s f11, f28, f14, f8, rmm # perform operation
fnmsub.s f11, f28, f14, f8, rne # perform operation
fnmsub.s f11, f28, f14, f8, rtz # perform operation
fnmsub.s f11, f28, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f28, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f28, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f28, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f28, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f28, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x10, 0x15db836d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0xca52950c # load x3 with value 0xca52950c
sw x3, 0(x2) # store 0xca52950c in memory
flw f27, 0(x2) # load 0xca52950c from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fnmsub.s f10, f16, f27, f23, dyn # perform operation
fnmsub.s f10, f16, f27, f23, rdn # perform operation
fnmsub.s f10, f16, f27, f23, rmm # perform operation
fnmsub.s f10, f16, f27, f23, rne # perform operation
fnmsub.s f10, f16, f27, f23, rtz # perform operation
fnmsub.s f10, f16, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f16, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x4, 0xbfc85cc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xd99f2a1f # load x3 with value 0xd99f2a1f
sw x3, 0(x2) # store 0xd99f2a1f in memory
flw f11, 0(x2) # load 0xd99f2a1f from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f4, f25, f11, f20, dyn # perform operation
fnmsub.s f4, f25, f11, f20, rdn # perform operation
fnmsub.s f4, f25, f11, f20, rmm # perform operation
fnmsub.s f4, f25, f11, f20, rne # perform operation
fnmsub.s f4, f25, f11, f20, rtz # perform operation
fnmsub.s f4, f25, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f25, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x27, 0x21d77717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xddbaa1c7 # load x3 with value 0xddbaa1c7
sw x3, 0(x2) # store 0xddbaa1c7 in memory
flw f5, 0(x2) # load 0xddbaa1c7 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fnmsub.s f27, f24, f5, f3, dyn # perform operation
fnmsub.s f27, f24, f5, f3, rdn # perform operation
fnmsub.s f27, f24, f5, f3, rmm # perform operation
fnmsub.s f27, f24, f5, f3, rne # perform operation
fnmsub.s f27, f24, f5, f3, rtz # perform operation
fnmsub.s f27, f24, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x15, 0x63513e13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0xcd93b889 # load x3 with value 0xcd93b889
sw x3, 0(x2) # store 0xcd93b889 in memory
flw f11, 0(x2) # load 0xcd93b889 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fnmsub.s f15, f27, f11, f5, dyn # perform operation
fnmsub.s f15, f27, f11, f5, rdn # perform operation
fnmsub.s f15, f27, f11, f5, rmm # perform operation
fnmsub.s f15, f27, f11, f5, rne # perform operation
fnmsub.s f15, f27, f11, f5, rtz # perform operation
fnmsub.s f15, f27, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f27, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f27, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x28, 0x5eeb08ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x70995000 # load x3 with value 0x70995000
sw x3, 0(x2) # store 0x70995000 in memory
flw f5, 0(x2) # load 0x70995000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
fnmsub.s f28, f18, f5, f8, dyn # perform operation
fnmsub.s f28, f18, f5, f8, rdn # perform operation
fnmsub.s f28, f18, f5, f8, rmm # perform operation
fnmsub.s f28, f18, f5, f8, rne # perform operation
fnmsub.s f28, f18, f5, f8, rtz # perform operation
fnmsub.s f28, f18, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f18, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x18, 0x3a7de861 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x153611e1 # load x3 with value 0x153611e1
sw x3, 0(x2) # store 0x153611e1 in memory
flw f22, 0(x2) # load 0x153611e1 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fnmsub.s f18, f16, f22, f10, dyn # perform operation
fnmsub.s f18, f16, f22, f10, rdn # perform operation
fnmsub.s f18, f16, f22, f10, rmm # perform operation
fnmsub.s f18, f16, f22, f10, rne # perform operation
fnmsub.s f18, f16, f22, f10, rtz # perform operation
fnmsub.s f18, f16, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x23, 0xaa6da8b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x6381f0c7 # load x3 with value 0x6381f0c7
sw x3, 0(x2) # store 0x6381f0c7 in memory
flw f24, 0(x2) # load 0x6381f0c7 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmsub.s f23, f5, f24, f1, dyn # perform operation
fnmsub.s f23, f5, f24, f1, rdn # perform operation
fnmsub.s f23, f5, f24, f1, rmm # perform operation
fnmsub.s f23, f5, f24, f1, rne # perform operation
fnmsub.s f23, f5, f24, f1, rtz # perform operation
fnmsub.s f23, f5, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x10, 0xb51fe191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x69d2a484 # load x3 with value 0x69d2a484
sw x3, 0(x2) # store 0x69d2a484 in memory
flw f18, 0(x2) # load 0x69d2a484 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fnmsub.s f10, f29, f18, f22, dyn # perform operation
fnmsub.s f10, f29, f18, f22, rdn # perform operation
fnmsub.s f10, f29, f18, f22, rmm # perform operation
fnmsub.s f10, f29, f18, f22, rne # perform operation
fnmsub.s f10, f29, f18, f22, rtz # perform operation
fnmsub.s f10, f29, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x22, 0xbfa1fe96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x21e4ae27 # load x3 with value 0x21e4ae27
sw x3, 0(x2) # store 0x21e4ae27 in memory
flw f19, 0(x2) # load 0x21e4ae27 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fnmsub.s f22, f20, f19, f12, dyn # perform operation
fnmsub.s f22, f20, f19, f12, rdn # perform operation
fnmsub.s f22, f20, f19, f12, rmm # perform operation
fnmsub.s f22, f20, f19, f12, rne # perform operation
fnmsub.s f22, f20, f19, f12, rtz # perform operation
fnmsub.s f22, f20, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f20, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x10, 0x236ab956 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xdcf84e5a # load x3 with value 0xdcf84e5a
sw x3, 0(x2) # store 0xdcf84e5a in memory
flw f11, 0(x2) # load 0xdcf84e5a from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fnmsub.s f10, f19, f11, f12, dyn # perform operation
fnmsub.s f10, f19, f11, f12, rdn # perform operation
fnmsub.s f10, f19, f11, f12, rmm # perform operation
fnmsub.s f10, f19, f11, f12, rne # perform operation
fnmsub.s f10, f19, f11, f12, rtz # perform operation
fnmsub.s f10, f19, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f11, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x22, 0x48818752 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x69aa84bf # load x3 with value 0x69aa84bf
sw x3, 0(x2) # store 0x69aa84bf in memory
flw f25, 0(x2) # load 0x69aa84bf from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fnmsub.s f22, f20, f25, f19, dyn # perform operation
fnmsub.s f22, f20, f25, f19, rdn # perform operation
fnmsub.s f22, f20, f25, f19, rmm # perform operation
fnmsub.s f22, f20, f25, f19, rne # perform operation
fnmsub.s f22, f20, f25, f19, rtz # perform operation
fnmsub.s f22, f20, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f20, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x23, 0xbf619624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0xed3a8ddd # load x3 with value 0xed3a8ddd
sw x3, 0(x2) # store 0xed3a8ddd in memory
flw f4, 0(x2) # load 0xed3a8ddd from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmsub.s f23, f5, f4, f8, dyn # perform operation
fnmsub.s f23, f5, f4, f8, rdn # perform operation
fnmsub.s f23, f5, f4, f8, rmm # perform operation
fnmsub.s f23, f5, f4, f8, rne # perform operation
fnmsub.s f23, f5, f4, f8, rtz # perform operation
fnmsub.s f23, f5, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x11, 0x4121f905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0xfbe9ae0e # load x3 with value 0xfbe9ae0e
sw x3, 0(x2) # store 0xfbe9ae0e in memory
flw f27, 0(x2) # load 0xfbe9ae0e from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmsub.s f11, f24, f27, f21, dyn # perform operation
fnmsub.s f11, f24, f27, f21, rdn # perform operation
fnmsub.s f11, f24, f27, f21, rmm # perform operation
fnmsub.s f11, f24, f27, f21, rne # perform operation
fnmsub.s f11, f24, f27, f21, rtz # perform operation
fnmsub.s f11, f24, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f24, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x27, 0x4cb260dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x2753b707 # load x3 with value 0x2753b707
sw x3, 0(x2) # store 0x2753b707 in memory
flw f29, 0(x2) # load 0x2753b707 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fnmsub.s f27, f5, f29, f20, dyn # perform operation
fnmsub.s f27, f5, f29, f20, rdn # perform operation
fnmsub.s f27, f5, f29, f20, rmm # perform operation
fnmsub.s f27, f5, f29, f20, rne # perform operation
fnmsub.s f27, f5, f29, f20, rtz # perform operation
fnmsub.s f27, f5, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x9, 0xe7ad0d90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x5482c6e4 # load x3 with value 0x5482c6e4
sw x3, 0(x2) # store 0x5482c6e4 in memory
flw f7, 0(x2) # load 0x5482c6e4 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmsub.s f9, f29, f7, f26, dyn # perform operation
fnmsub.s f9, f29, f7, f26, rdn # perform operation
fnmsub.s f9, f29, f7, f26, rmm # perform operation
fnmsub.s f9, f29, f7, f26, rne # perform operation
fnmsub.s f9, f29, f7, f26, rtz # perform operation
fnmsub.s f9, f29, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f29, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f29, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f29, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f29, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f29, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x10, 0xc0489d9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0xb9be385d # load x3 with value 0xb9be385d
sw x3, 0(x2) # store 0xb9be385d in memory
flw f15, 0(x2) # load 0xb9be385d from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmsub.s f10, f5, f15, f2, dyn # perform operation
fnmsub.s f10, f5, f15, f2, rdn # perform operation
fnmsub.s f10, f5, f15, f2, rmm # perform operation
fnmsub.s f10, f5, f15, f2, rne # perform operation
fnmsub.s f10, f5, f15, f2, rtz # perform operation
fnmsub.s f10, f5, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f5, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f5, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x8, 0x87f1f9dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x2eeb5c41 # load x3 with value 0x2eeb5c41
sw x3, 0(x2) # store 0x2eeb5c41 in memory
flw f11, 0(x2) # load 0x2eeb5c41 from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmsub.s f8, f29, f11, f20, dyn # perform operation
fnmsub.s f8, f29, f11, f20, rdn # perform operation
fnmsub.s f8, f29, f11, f20, rmm # perform operation
fnmsub.s f8, f29, f11, f20, rne # perform operation
fnmsub.s f8, f29, f11, f20, rtz # perform operation
fnmsub.s f8, f29, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x21, 0xc83903ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x1e24838d # load x3 with value 0x1e24838d
sw x3, 0(x2) # store 0x1e24838d in memory
flw f18, 0(x2) # load 0x1e24838d from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fnmsub.s f21, f12, f18, f15, dyn # perform operation
fnmsub.s f21, f12, f18, f15, rdn # perform operation
fnmsub.s f21, f12, f18, f15, rmm # perform operation
fnmsub.s f21, f12, f18, f15, rne # perform operation
fnmsub.s f21, f12, f18, f15, rtz # perform operation
fnmsub.s f21, f12, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f12, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f12, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x21, 0x8cdf531c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x3486ba3a # load x3 with value 0x3486ba3a
sw x3, 0(x2) # store 0x3486ba3a in memory
flw f11, 0(x2) # load 0x3486ba3a from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmsub.s f21, f7, f11, f6, dyn # perform operation
fnmsub.s f21, f7, f11, f6, rdn # perform operation
fnmsub.s f21, f7, f11, f6, rmm # perform operation
fnmsub.s f21, f7, f11, f6, rne # perform operation
fnmsub.s f21, f7, f11, f6, rtz # perform operation
fnmsub.s f21, f7, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x16, 0x137f423e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x1b326264 # load x3 with value 0x1b326264
sw x3, 0(x2) # store 0x1b326264 in memory
flw f26, 0(x2) # load 0x1b326264 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fnmsub.s f16, f31, f26, f17, dyn # perform operation
fnmsub.s f16, f31, f26, f17, rdn # perform operation
fnmsub.s f16, f31, f26, f17, rmm # perform operation
fnmsub.s f16, f31, f26, f17, rne # perform operation
fnmsub.s f16, f31, f26, f17, rtz # perform operation
fnmsub.s f16, f31, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f31, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x31, 0x7f2cdbee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x40a95054 # load x3 with value 0x40a95054
sw x3, 0(x2) # store 0x40a95054 in memory
flw f9, 0(x2) # load 0x40a95054 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmsub.s f31, f8, f9, f18, dyn # perform operation
fnmsub.s f31, f8, f9, f18, rdn # perform operation
fnmsub.s f31, f8, f9, f18, rmm # perform operation
fnmsub.s f31, f8, f9, f18, rne # perform operation
fnmsub.s f31, f8, f9, f18, rtz # perform operation
fnmsub.s f31, f8, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f8, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f8, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f8, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f8, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f8, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x2, 0x7034b3e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x7fd7b0b6 # load x3 with value 0x7fd7b0b6
sw x3, 0(x2) # store 0x7fd7b0b6 in memory
flw f20, 0(x2) # load 0x7fd7b0b6 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fnmsub.s f2, f29, f20, f8, dyn # perform operation
fnmsub.s f2, f29, f20, f8, rdn # perform operation
fnmsub.s f2, f29, f20, f8, rmm # perform operation
fnmsub.s f2, f29, f20, f8, rne # perform operation
fnmsub.s f2, f29, f20, f8, rtz # perform operation
fnmsub.s f2, f29, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f29, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f29, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x5, 0x2f99dd91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x2fecadf3 # load x3 with value 0x2fecadf3
sw x3, 0(x2) # store 0x2fecadf3 in memory
flw f6, 0(x2) # load 0x2fecadf3 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmsub.s f5, f27, f6, f28, dyn # perform operation
fnmsub.s f5, f27, f6, f28, rdn # perform operation
fnmsub.s f5, f27, f6, f28, rmm # perform operation
fnmsub.s f5, f27, f6, f28, rne # perform operation
fnmsub.s f5, f27, f6, f28, rtz # perform operation
fnmsub.s f5, f27, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f27, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x12, 0xa046cfeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x983f665f # load x3 with value 0x983f665f
sw x3, 0(x2) # store 0x983f665f in memory
flw f3, 0(x2) # load 0x983f665f from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmsub.s f12, f4, f3, f6, dyn # perform operation
fnmsub.s f12, f4, f3, f6, rdn # perform operation
fnmsub.s f12, f4, f3, f6, rmm # perform operation
fnmsub.s f12, f4, f3, f6, rne # perform operation
fnmsub.s f12, f4, f3, f6, rtz # perform operation
fnmsub.s f12, f4, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f4, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f4, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f4, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f4, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f4, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x31, 0x48bbd1c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x1839f4a5 # load x3 with value 0x1839f4a5
sw x3, 0(x2) # store 0x1839f4a5 in memory
flw f23, 0(x2) # load 0x1839f4a5 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmsub.s f31, f19, f23, f20, dyn # perform operation
fnmsub.s f31, f19, f23, f20, rdn # perform operation
fnmsub.s f31, f19, f23, f20, rmm # perform operation
fnmsub.s f31, f19, f23, f20, rne # perform operation
fnmsub.s f31, f19, f23, f20, rtz # perform operation
fnmsub.s f31, f19, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f19, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f19, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x31, 0xa251cb9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x2aca8016 # load x3 with value 0x2aca8016
sw x3, 0(x2) # store 0x2aca8016 in memory
flw f8, 0(x2) # load 0x2aca8016 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmsub.s f31, f17, f8, f7, dyn # perform operation
fnmsub.s f31, f17, f8, f7, rdn # perform operation
fnmsub.s f31, f17, f8, f7, rmm # perform operation
fnmsub.s f31, f17, f8, f7, rne # perform operation
fnmsub.s f31, f17, f8, f7, rtz # perform operation
fnmsub.s f31, f17, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x23, 0xf431b68c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x23caf183 # load x3 with value 0x23caf183
sw x3, 0(x2) # store 0x23caf183 in memory
flw f19, 0(x2) # load 0x23caf183 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmsub.s f23, f4, f19, f9, dyn # perform operation
fnmsub.s f23, f4, f19, f9, rdn # perform operation
fnmsub.s f23, f4, f19, f9, rmm # perform operation
fnmsub.s f23, f4, f19, f9, rne # perform operation
fnmsub.s f23, f4, f19, f9, rtz # perform operation
fnmsub.s f23, f4, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f4, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f4, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f4, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f4, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f4, f19, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x24, 0x60640ac6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0xd206e2d8 # load x3 with value 0xd206e2d8
sw x3, 0(x2) # store 0xd206e2d8 in memory
flw f5, 0(x2) # load 0xd206e2d8 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmsub.s f24, f23, f5, f10, dyn # perform operation
fnmsub.s f24, f23, f5, f10, rdn # perform operation
fnmsub.s f24, f23, f5, f10, rmm # perform operation
fnmsub.s f24, f23, f5, f10, rne # perform operation
fnmsub.s f24, f23, f5, f10, rtz # perform operation
fnmsub.s f24, f23, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x1, 0xe1efc5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x5ed8a9d1 # load x3 with value 0x5ed8a9d1
sw x3, 0(x2) # store 0x5ed8a9d1 in memory
flw f4, 0(x2) # load 0x5ed8a9d1 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f1, f23, f4, f27, dyn # perform operation
fnmsub.s f1, f23, f4, f27, rdn # perform operation
fnmsub.s f1, f23, f4, f27, rmm # perform operation
fnmsub.s f1, f23, f4, f27, rne # perform operation
fnmsub.s f1, f23, f4, f27, rtz # perform operation
fnmsub.s f1, f23, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f23, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x12, 0xe9a2cdda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x23c0ad42 # load x3 with value 0x23c0ad42
sw x3, 0(x2) # store 0x23c0ad42 in memory
flw f19, 0(x2) # load 0x23c0ad42 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fnmsub.s f12, f31, f19, f24, dyn # perform operation
fnmsub.s f12, f31, f19, f24, rdn # perform operation
fnmsub.s f12, f31, f19, f24, rmm # perform operation
fnmsub.s f12, f31, f19, f24, rne # perform operation
fnmsub.s f12, f31, f19, f24, rtz # perform operation
fnmsub.s f12, f31, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f31, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f31, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f31, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f31, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f31, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x6, 0x4b0ee193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xbe55a16d # load x3 with value 0xbe55a16d
sw x3, 0(x2) # store 0xbe55a16d in memory
flw f16, 0(x2) # load 0xbe55a16d from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fnmsub.s f6, f15, f16, f12, dyn # perform operation
fnmsub.s f6, f15, f16, f12, rdn # perform operation
fnmsub.s f6, f15, f16, f12, rmm # perform operation
fnmsub.s f6, f15, f16, f12, rne # perform operation
fnmsub.s f6, f15, f16, f12, rtz # perform operation
fnmsub.s f6, f15, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f15, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f15, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f15, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f15, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f15, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x15, 0xdd38617f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0xe49c45bb # load x3 with value 0xe49c45bb
sw x3, 0(x2) # store 0xe49c45bb in memory
flw f3, 0(x2) # load 0xe49c45bb from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fnmsub.s f15, f25, f3, f7, dyn # perform operation
fnmsub.s f15, f25, f3, f7, rdn # perform operation
fnmsub.s f15, f25, f3, f7, rmm # perform operation
fnmsub.s f15, f25, f3, f7, rne # perform operation
fnmsub.s f15, f25, f3, f7, rtz # perform operation
fnmsub.s f15, f25, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f25, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x13, 0x1f5340ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x9988a647 # load x3 with value 0x9988a647
sw x3, 0(x2) # store 0x9988a647 in memory
flw f26, 0(x2) # load 0x9988a647 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fnmsub.s f13, f15, f26, f27, dyn # perform operation
fnmsub.s f13, f15, f26, f27, rdn # perform operation
fnmsub.s f13, f15, f26, f27, rmm # perform operation
fnmsub.s f13, f15, f26, f27, rne # perform operation
fnmsub.s f13, f15, f26, f27, rtz # perform operation
fnmsub.s f13, f15, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f15, f26, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x22, 0xf25bd28a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x85086039 # load x3 with value 0x85086039
sw x3, 0(x2) # store 0x85086039 in memory
flw f21, 0(x2) # load 0x85086039 from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmsub.s f22, f5, f21, f8, dyn # perform operation
fnmsub.s f22, f5, f21, f8, rdn # perform operation
fnmsub.s f22, f5, f21, f8, rmm # perform operation
fnmsub.s f22, f5, f21, f8, rne # perform operation
fnmsub.s f22, f5, f21, f8, rtz # perform operation
fnmsub.s f22, f5, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x27, 0xed7d5527 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x69f75e09 # load x3 with value 0x69f75e09
sw x3, 0(x2) # store 0x69f75e09 in memory
flw f13, 0(x2) # load 0x69f75e09 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmsub.s f27, f23, f13, f6, dyn # perform operation
fnmsub.s f27, f23, f13, f6, rdn # perform operation
fnmsub.s f27, f23, f13, f6, rmm # perform operation
fnmsub.s f27, f23, f13, f6, rne # perform operation
fnmsub.s f27, f23, f13, f6, rtz # perform operation
fnmsub.s f27, f23, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f13, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x16, 0xbbf107dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0xc1196161 # load x3 with value 0xc1196161
sw x3, 0(x2) # store 0xc1196161 in memory
flw f27, 0(x2) # load 0xc1196161 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fnmsub.s f16, f8, f27, f10, dyn # perform operation
fnmsub.s f16, f8, f27, f10, rdn # perform operation
fnmsub.s f16, f8, f27, f10, rmm # perform operation
fnmsub.s f16, f8, f27, f10, rne # perform operation
fnmsub.s f16, f8, f27, f10, rtz # perform operation
fnmsub.s f16, f8, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x8, 0x8063d320 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x69ef981d # load x3 with value 0x69ef981d
sw x3, 0(x2) # store 0x69ef981d in memory
flw f29, 0(x2) # load 0x69ef981d from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmsub.s f8, f14, f29, f13, dyn # perform operation
fnmsub.s f8, f14, f29, f13, rdn # perform operation
fnmsub.s f8, f14, f29, f13, rmm # perform operation
fnmsub.s f8, f14, f29, f13, rne # perform operation
fnmsub.s f8, f14, f29, f13, rtz # perform operation
fnmsub.s f8, f14, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x29, 0x81e74736 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x377a95eb # load x3 with value 0x377a95eb
sw x3, 0(x2) # store 0x377a95eb in memory
flw f3, 0(x2) # load 0x377a95eb from memory into f3
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmsub.s f29, f10, f3, f6, dyn # perform operation
fnmsub.s f29, f10, f3, f6, rdn # perform operation
fnmsub.s f29, f10, f3, f6, rmm # perform operation
fnmsub.s f29, f10, f3, f6, rne # perform operation
fnmsub.s f29, f10, f3, f6, rtz # perform operation
fnmsub.s f29, f10, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x11, 0x7c4e818a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x97c5e822 # load x3 with value 0x97c5e822
sw x3, 0(x2) # store 0x97c5e822 in memory
flw f18, 0(x2) # load 0x97c5e822 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmsub.s f11, f30, f18, f28, dyn # perform operation
fnmsub.s f11, f30, f18, f28, rdn # perform operation
fnmsub.s f11, f30, f18, f28, rmm # perform operation
fnmsub.s f11, f30, f18, f28, rne # perform operation
fnmsub.s f11, f30, f18, f28, rtz # perform operation
fnmsub.s f11, f30, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f30, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f30, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f30, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f30, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f30, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x7, 0x08b9ea26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x9074e5f3 # load x3 with value 0x9074e5f3
sw x3, 0(x2) # store 0x9074e5f3 in memory
flw f16, 0(x2) # load 0x9074e5f3 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmsub.s f7, f28, f16, f23, dyn # perform operation
fnmsub.s f7, f28, f16, f23, rdn # perform operation
fnmsub.s f7, f28, f16, f23, rmm # perform operation
fnmsub.s f7, f28, f16, f23, rne # perform operation
fnmsub.s f7, f28, f16, f23, rtz # perform operation
fnmsub.s f7, f28, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x4, 0x1b91983b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x3ada2a28 # load x3 with value 0x3ada2a28
sw x3, 0(x2) # store 0x3ada2a28 in memory
flw f7, 0(x2) # load 0x3ada2a28 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmsub.s f4, f28, f7, f30, dyn # perform operation
fnmsub.s f4, f28, f7, f30, rdn # perform operation
fnmsub.s f4, f28, f7, f30, rmm # perform operation
fnmsub.s f4, f28, f7, f30, rne # perform operation
fnmsub.s f4, f28, f7, f30, rtz # perform operation
fnmsub.s f4, f28, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f28, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x25, 0x648c00dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0xc1c8f486 # load x3 with value 0xc1c8f486
sw x3, 0(x2) # store 0xc1c8f486 in memory
flw f13, 0(x2) # load 0xc1c8f486 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fnmsub.s f25, f18, f13, f11, dyn # perform operation
fnmsub.s f25, f18, f13, f11, rdn # perform operation
fnmsub.s f25, f18, f13, f11, rmm # perform operation
fnmsub.s f25, f18, f13, f11, rne # perform operation
fnmsub.s f25, f18, f13, f11, rtz # perform operation
fnmsub.s f25, f18, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x18, 0xcf2a7733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xe0240e4d # load x3 with value 0xe0240e4d
sw x3, 0(x2) # store 0xe0240e4d in memory
flw f16, 0(x2) # load 0xe0240e4d from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fnmsub.s f18, f7, f16, f6, dyn # perform operation
fnmsub.s f18, f7, f16, f6, rdn # perform operation
fnmsub.s f18, f7, f16, f6, rmm # perform operation
fnmsub.s f18, f7, f16, f6, rne # perform operation
fnmsub.s f18, f7, f16, f6, rtz # perform operation
fnmsub.s f18, f7, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x5, 0xfc4db84b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x3110b6e3 # load x3 with value 0x3110b6e3
sw x3, 0(x2) # store 0x3110b6e3 in memory
flw f25, 0(x2) # load 0x3110b6e3 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmsub.s f5, f26, f25, f24, dyn # perform operation
fnmsub.s f5, f26, f25, f24, rdn # perform operation
fnmsub.s f5, f26, f25, f24, rmm # perform operation
fnmsub.s f5, f26, f25, f24, rne # perform operation
fnmsub.s f5, f26, f25, f24, rtz # perform operation
fnmsub.s f5, f26, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f26, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f26, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x19, 0xdeaf25ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0xa8fd7f3f # load x3 with value 0xa8fd7f3f
sw x3, 0(x2) # store 0xa8fd7f3f in memory
flw f11, 0(x2) # load 0xa8fd7f3f from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fnmsub.s f19, f31, f11, f18, dyn # perform operation
fnmsub.s f19, f31, f11, f18, rdn # perform operation
fnmsub.s f19, f31, f11, f18, rmm # perform operation
fnmsub.s f19, f31, f11, f18, rne # perform operation
fnmsub.s f19, f31, f11, f18, rtz # perform operation
fnmsub.s f19, f31, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f31, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x17, 0xeeb499a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x896a4e7b # load x3 with value 0x896a4e7b
sw x3, 0(x2) # store 0x896a4e7b in memory
flw f15, 0(x2) # load 0x896a4e7b from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmsub.s f17, f9, f15, f27, dyn # perform operation
fnmsub.s f17, f9, f15, f27, rdn # perform operation
fnmsub.s f17, f9, f15, f27, rmm # perform operation
fnmsub.s f17, f9, f15, f27, rne # perform operation
fnmsub.s f17, f9, f15, f27, rtz # perform operation
fnmsub.s f17, f9, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f9, f15, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x10, 0x3db9042a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0xc395d823 # load x3 with value 0xc395d823
sw x3, 0(x2) # store 0xc395d823 in memory
flw f19, 0(x2) # load 0xc395d823 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmsub.s f10, f6, f19, f4, dyn # perform operation
fnmsub.s f10, f6, f19, f4, rdn # perform operation
fnmsub.s f10, f6, f19, f4, rmm # perform operation
fnmsub.s f10, f6, f19, f4, rne # perform operation
fnmsub.s f10, f6, f19, f4, rtz # perform operation
fnmsub.s f10, f6, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f6, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x19, 0x7fb928c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x74f47a0d # load x3 with value 0x74f47a0d
sw x3, 0(x2) # store 0x74f47a0d in memory
flw f1, 0(x2) # load 0x74f47a0d from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmsub.s f19, f17, f1, f29, dyn # perform operation
fnmsub.s f19, f17, f1, f29, rdn # perform operation
fnmsub.s f19, f17, f1, f29, rmm # perform operation
fnmsub.s f19, f17, f1, f29, rne # perform operation
fnmsub.s f19, f17, f1, f29, rtz # perform operation
fnmsub.s f19, f17, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x12, 0xbf9954d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x687a0433 # load x3 with value 0x687a0433
sw x3, 0(x2) # store 0x687a0433 in memory
flw f3, 0(x2) # load 0x687a0433 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fnmsub.s f12, f28, f3, f16, dyn # perform operation
fnmsub.s f12, f28, f3, f16, rdn # perform operation
fnmsub.s f12, f28, f3, f16, rmm # perform operation
fnmsub.s f12, f28, f3, f16, rne # perform operation
fnmsub.s f12, f28, f3, f16, rtz # perform operation
fnmsub.s f12, f28, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x30, 0xaffb0ff0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x3d20d212 # load x3 with value 0x3d20d212
sw x3, 0(x2) # store 0x3d20d212 in memory
flw f29, 0(x2) # load 0x3d20d212 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fnmsub.s f30, f6, f29, f26, dyn # perform operation
fnmsub.s f30, f6, f29, f26, rdn # perform operation
fnmsub.s f30, f6, f29, f26, rmm # perform operation
fnmsub.s f30, f6, f29, f26, rne # perform operation
fnmsub.s f30, f6, f29, f26, rtz # perform operation
fnmsub.s f30, f6, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x12, 0xa8783c90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xfcb5e5d1 # load x3 with value 0xfcb5e5d1
sw x3, 0(x2) # store 0xfcb5e5d1 in memory
flw f17, 0(x2) # load 0xfcb5e5d1 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fnmsub.s f12, f5, f17, f15, dyn # perform operation
fnmsub.s f12, f5, f17, f15, rdn # perform operation
fnmsub.s f12, f5, f17, f15, rmm # perform operation
fnmsub.s f12, f5, f17, f15, rne # perform operation
fnmsub.s f12, f5, f17, f15, rtz # perform operation
fnmsub.s f12, f5, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x9, 0xac994960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0xfe875aad # load x3 with value 0xfe875aad
sw x3, 0(x2) # store 0xfe875aad in memory
flw f1, 0(x2) # load 0xfe875aad from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fnmsub.s f9, f26, f1, f6, dyn # perform operation
fnmsub.s f9, f26, f1, f6, rdn # perform operation
fnmsub.s f9, f26, f1, f6, rmm # perform operation
fnmsub.s f9, f26, f1, f6, rne # perform operation
fnmsub.s f9, f26, f1, f6, rtz # perform operation
fnmsub.s f9, f26, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x30, 0x1d166574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xf46d34b9 # load x3 with value 0xf46d34b9
sw x3, 0(x2) # store 0xf46d34b9 in memory
flw f1, 0(x2) # load 0xf46d34b9 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmsub.s f30, f16, f1, f29, dyn # perform operation
fnmsub.s f30, f16, f1, f29, rdn # perform operation
fnmsub.s f30, f16, f1, f29, rmm # perform operation
fnmsub.s f30, f16, f1, f29, rne # perform operation
fnmsub.s f30, f16, f1, f29, rtz # perform operation
fnmsub.s f30, f16, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f16, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x24, 0x619d33fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x53633400 # load x3 with value 0x53633400
sw x3, 0(x2) # store 0x53633400 in memory
flw f25, 0(x2) # load 0x53633400 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmsub.s f24, f8, f25, f9, dyn # perform operation
fnmsub.s f24, f8, f25, f9, rdn # perform operation
fnmsub.s f24, f8, f25, f9, rmm # perform operation
fnmsub.s f24, f8, f25, f9, rne # perform operation
fnmsub.s f24, f8, f25, f9, rtz # perform operation
fnmsub.s f24, f8, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f8, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f8, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f8, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f8, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f8, f25, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x6, 0x55d85a54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x6f513972 # load x3 with value 0x6f513972
sw x3, 0(x2) # store 0x6f513972 in memory
flw f17, 0(x2) # load 0x6f513972 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmsub.s f6, f19, f17, f24, dyn # perform operation
fnmsub.s f6, f19, f17, f24, rdn # perform operation
fnmsub.s f6, f19, f17, f24, rmm # perform operation
fnmsub.s f6, f19, f17, f24, rne # perform operation
fnmsub.s f6, f19, f17, f24, rtz # perform operation
fnmsub.s f6, f19, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f19, f17, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x15, 0xa6990052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x6bec66c6 # load x3 with value 0x6bec66c6
sw x3, 0(x2) # store 0x6bec66c6 in memory
flw f30, 0(x2) # load 0x6bec66c6 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f15, f21, f30, f14, dyn # perform operation
fnmsub.s f15, f21, f30, f14, rdn # perform operation
fnmsub.s f15, f21, f30, f14, rmm # perform operation
fnmsub.s f15, f21, f30, f14, rne # perform operation
fnmsub.s f15, f21, f30, f14, rtz # perform operation
fnmsub.s f15, f21, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x20, 0x96b650a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x324b500f # load x3 with value 0x324b500f
sw x3, 0(x2) # store 0x324b500f in memory
flw f31, 0(x2) # load 0x324b500f from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmsub.s f20, f3, f31, f30, dyn # perform operation
fnmsub.s f20, f3, f31, f30, rdn # perform operation
fnmsub.s f20, f3, f31, f30, rmm # perform operation
fnmsub.s f20, f3, f31, f30, rne # perform operation
fnmsub.s f20, f3, f31, f30, rtz # perform operation
fnmsub.s f20, f3, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x12, 0x61377004 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x5c762c6d # load x3 with value 0x5c762c6d
sw x3, 0(x2) # store 0x5c762c6d in memory
flw f17, 0(x2) # load 0x5c762c6d from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmsub.s f12, f10, f17, f18, dyn # perform operation
fnmsub.s f12, f10, f17, f18, rdn # perform operation
fnmsub.s f12, f10, f17, f18, rmm # perform operation
fnmsub.s f12, f10, f17, f18, rne # perform operation
fnmsub.s f12, f10, f17, f18, rtz # perform operation
fnmsub.s f12, f10, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f10, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x26, 0x9ee6e0b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x15dbd9df # load x3 with value 0x15dbd9df
sw x3, 0(x2) # store 0x15dbd9df in memory
flw f2, 0(x2) # load 0x15dbd9df from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fnmsub.s f26, f21, f2, f27, dyn # perform operation
fnmsub.s f26, f21, f2, f27, rdn # perform operation
fnmsub.s f26, f21, f2, f27, rmm # perform operation
fnmsub.s f26, f21, f2, f27, rne # perform operation
fnmsub.s f26, f21, f2, f27, rtz # perform operation
fnmsub.s f26, f21, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f21, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f21, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x27, 0xb41fcd68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x58a59f9a # load x3 with value 0x58a59f9a
sw x3, 0(x2) # store 0x58a59f9a in memory
flw f23, 0(x2) # load 0x58a59f9a from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmsub.s f27, f2, f23, f5, dyn # perform operation
fnmsub.s f27, f2, f23, f5, rdn # perform operation
fnmsub.s f27, f2, f23, f5, rmm # perform operation
fnmsub.s f27, f2, f23, f5, rne # perform operation
fnmsub.s f27, f2, f23, f5, rtz # perform operation
fnmsub.s f27, f2, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x31, 0x3878593b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x9409e55d # load x3 with value 0x9409e55d
sw x3, 0(x2) # store 0x9409e55d in memory
flw f8, 0(x2) # load 0x9409e55d from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmsub.s f31, f24, f8, f19, dyn # perform operation
fnmsub.s f31, f24, f8, f19, rdn # perform operation
fnmsub.s f31, f24, f8, f19, rmm # perform operation
fnmsub.s f31, f24, f8, f19, rne # perform operation
fnmsub.s f31, f24, f8, f19, rtz # perform operation
fnmsub.s f31, f24, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x24, 0x6a8dc2c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xf50f0b0a # load x3 with value 0xf50f0b0a
sw x3, 0(x2) # store 0xf50f0b0a in memory
flw f11, 0(x2) # load 0xf50f0b0a from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmsub.s f24, f4, f11, f23, dyn # perform operation
fnmsub.s f24, f4, f11, f23, rdn # perform operation
fnmsub.s f24, f4, f11, f23, rmm # perform operation
fnmsub.s f24, f4, f11, f23, rne # perform operation
fnmsub.s f24, f4, f11, f23, rtz # perform operation
fnmsub.s f24, f4, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f4, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f4, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f4, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f4, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f4, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x27, 0xe35d3581 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x1f1b9450 # load x3 with value 0x1f1b9450
sw x3, 0(x2) # store 0x1f1b9450 in memory
flw f30, 0(x2) # load 0x1f1b9450 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fnmsub.s f27, f1, f30, f19, dyn # perform operation
fnmsub.s f27, f1, f30, f19, rdn # perform operation
fnmsub.s f27, f1, f30, f19, rmm # perform operation
fnmsub.s f27, f1, f30, f19, rne # perform operation
fnmsub.s f27, f1, f30, f19, rtz # perform operation
fnmsub.s f27, f1, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x23, 0x71184889 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x7a74d484 # load x3 with value 0x7a74d484
sw x3, 0(x2) # store 0x7a74d484 in memory
flw f17, 0(x2) # load 0x7a74d484 from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fnmsub.s f23, f8, f17, f4, dyn # perform operation
fnmsub.s f23, f8, f17, f4, rdn # perform operation
fnmsub.s f23, f8, f17, f4, rmm # perform operation
fnmsub.s f23, f8, f17, f4, rne # perform operation
fnmsub.s f23, f8, f17, f4, rtz # perform operation
fnmsub.s f23, f8, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f8, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x27, 0xf7e35e22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x53482b49 # load x3 with value 0x53482b49
sw x3, 0(x2) # store 0x53482b49 in memory
flw f9, 0(x2) # load 0x53482b49 from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmsub.s f27, f12, f9, f16, dyn # perform operation
fnmsub.s f27, f12, f9, f16, rdn # perform operation
fnmsub.s f27, f12, f9, f16, rmm # perform operation
fnmsub.s f27, f12, f9, f16, rne # perform operation
fnmsub.s f27, f12, f9, f16, rtz # perform operation
fnmsub.s f27, f12, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x3, 0xf478cc58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0xd10c9970 # load x3 with value 0xd10c9970
sw x3, 0(x2) # store 0xd10c9970 in memory
flw f19, 0(x2) # load 0xd10c9970 from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fnmsub.s f3, f17, f19, f31, dyn # perform operation
fnmsub.s f3, f17, f19, f31, rdn # perform operation
fnmsub.s f3, f17, f19, f31, rmm # perform operation
fnmsub.s f3, f17, f19, f31, rne # perform operation
fnmsub.s f3, f17, f19, f31, rtz # perform operation
fnmsub.s f3, f17, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x4, 0xff0d4474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xcda41c80 # load x3 with value 0xcda41c80
sw x3, 0(x2) # store 0xcda41c80 in memory
flw f21, 0(x2) # load 0xcda41c80 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmsub.s f4, f2, f21, f8, dyn # perform operation
fnmsub.s f4, f2, f21, f8, rdn # perform operation
fnmsub.s f4, f2, f21, f8, rmm # perform operation
fnmsub.s f4, f2, f21, f8, rne # perform operation
fnmsub.s f4, f2, f21, f8, rtz # perform operation
fnmsub.s f4, f2, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x26, 0x95d5d1fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x025ba146 # load x3 with value 0x025ba146
sw x3, 0(x2) # store 0x025ba146 in memory
flw f2, 0(x2) # load 0x025ba146 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmsub.s f26, f23, f2, f31, dyn # perform operation
fnmsub.s f26, f23, f2, f31, rdn # perform operation
fnmsub.s f26, f23, f2, f31, rmm # perform operation
fnmsub.s f26, f23, f2, f31, rne # perform operation
fnmsub.s f26, f23, f2, f31, rtz # perform operation
fnmsub.s f26, f23, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f23, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x15, 0x7cd141f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x21032ebf # load x3 with value 0x21032ebf
sw x3, 0(x2) # store 0x21032ebf in memory
flw f9, 0(x2) # load 0x21032ebf from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fnmsub.s f15, f21, f9, f17, dyn # perform operation
fnmsub.s f15, f21, f9, f17, rdn # perform operation
fnmsub.s f15, f21, f9, f17, rmm # perform operation
fnmsub.s f15, f21, f9, f17, rne # perform operation
fnmsub.s f15, f21, f9, f17, rtz # perform operation
fnmsub.s f15, f21, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x23, 0x4961bf66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x47d967da # load x3 with value 0x47d967da
sw x3, 0(x2) # store 0x47d967da in memory
flw f11, 0(x2) # load 0x47d967da from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fnmsub.s f23, f13, f11, f30, dyn # perform operation
fnmsub.s f23, f13, f11, f30, rdn # perform operation
fnmsub.s f23, f13, f11, f30, rmm # perform operation
fnmsub.s f23, f13, f11, f30, rne # perform operation
fnmsub.s f23, f13, f11, f30, rtz # perform operation
fnmsub.s f23, f13, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x13, 0xae3e969a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0xcfaf5bff # load x3 with value 0xcfaf5bff
sw x3, 0(x2) # store 0xcfaf5bff in memory
flw f16, 0(x2) # load 0xcfaf5bff from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmsub.s f13, f21, f16, f29, dyn # perform operation
fnmsub.s f13, f21, f16, f29, rdn # perform operation
fnmsub.s f13, f21, f16, f29, rmm # perform operation
fnmsub.s f13, f21, f16, f29, rne # perform operation
fnmsub.s f13, f21, f16, f29, rtz # perform operation
fnmsub.s f13, f21, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x14, 0xa7ced5a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
li x3, 0x9281c552 # load x3 with value 0x9281c552
sw x3, 0(x2) # store 0x9281c552 in memory
flw f13, 0(x2) # load 0x9281c552 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmsub.s f14, f29, f13, f5, dyn # perform operation
fnmsub.s f14, f29, f13, f5, rdn # perform operation
fnmsub.s f14, f29, f13, f5, rmm # perform operation
fnmsub.s f14, f29, f13, f5, rne # perform operation
fnmsub.s f14, f29, f13, f5, rtz # perform operation
fnmsub.s f14, f29, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f29, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f29, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f29, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f29, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f29, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x23, 0x27bb743a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x8ffd825c # load x3 with value 0x8ffd825c
sw x3, 0(x2) # store 0x8ffd825c in memory
flw f6, 0(x2) # load 0x8ffd825c from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmsub.s f23, f18, f6, f4, dyn # perform operation
fnmsub.s f23, f18, f6, f4, rdn # perform operation
fnmsub.s f23, f18, f6, f4, rmm # perform operation
fnmsub.s f23, f18, f6, f4, rne # perform operation
fnmsub.s f23, f18, f6, f4, rtz # perform operation
fnmsub.s f23, f18, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f18, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f18, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x9, 0xfcd82e7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x20c0007a # load x3 with value 0x20c0007a
sw x3, 0(x2) # store 0x20c0007a in memory
flw f18, 0(x2) # load 0x20c0007a from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmsub.s f9, f10, f18, f14, dyn # perform operation
fnmsub.s f9, f10, f18, f14, rdn # perform operation
fnmsub.s f9, f10, f18, f14, rmm # perform operation
fnmsub.s f9, f10, f18, f14, rne # perform operation
fnmsub.s f9, f10, f18, f14, rtz # perform operation
fnmsub.s f9, f10, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f10, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f10, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f10, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f10, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f10, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x22, 0xeab2f7e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0xb820b925 # load x3 with value 0xb820b925
sw x3, 0(x2) # store 0xb820b925 in memory
flw f17, 0(x2) # load 0xb820b925 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fnmsub.s f22, f3, f17, f5, dyn # perform operation
fnmsub.s f22, f3, f17, f5, rdn # perform operation
fnmsub.s f22, f3, f17, f5, rmm # perform operation
fnmsub.s f22, f3, f17, f5, rne # perform operation
fnmsub.s f22, f3, f17, f5, rtz # perform operation
fnmsub.s f22, f3, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x8, 0x96760328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0xd9689a98 # load x3 with value 0xd9689a98
sw x3, 0(x2) # store 0xd9689a98 in memory
flw f5, 0(x2) # load 0xd9689a98 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmsub.s f8, f9, f5, f29, dyn # perform operation
fnmsub.s f8, f9, f5, f29, rdn # perform operation
fnmsub.s f8, f9, f5, f29, rmm # perform operation
fnmsub.s f8, f9, f5, f29, rne # perform operation
fnmsub.s f8, f9, f5, f29, rtz # perform operation
fnmsub.s f8, f9, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f9, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x29, 0x80b928b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x67e2fae2 # load x3 with value 0x67e2fae2
sw x3, 0(x2) # store 0x67e2fae2 in memory
flw f9, 0(x2) # load 0x67e2fae2 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmsub.s f29, f7, f9, f13, dyn # perform operation
fnmsub.s f29, f7, f9, f13, rdn # perform operation
fnmsub.s f29, f7, f9, f13, rmm # perform operation
fnmsub.s f29, f7, f9, f13, rne # perform operation
fnmsub.s f29, f7, f9, f13, rtz # perform operation
fnmsub.s f29, f7, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f7, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x10, 0xd25e2ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xe660e86f # load x3 with value 0xe660e86f
sw x3, 0(x2) # store 0xe660e86f in memory
flw f6, 0(x2) # load 0xe660e86f from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmsub.s f10, f1, f6, f19, dyn # perform operation
fnmsub.s f10, f1, f6, f19, rdn # perform operation
fnmsub.s f10, f1, f6, f19, rmm # perform operation
fnmsub.s f10, f1, f6, f19, rne # perform operation
fnmsub.s f10, f1, f6, f19, rtz # perform operation
fnmsub.s f10, f1, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f1, f6, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x16, 0xab60d0ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xaaf5f748 # load x3 with value 0xaaf5f748
sw x3, 0(x2) # store 0xaaf5f748 in memory
flw f17, 0(x2) # load 0xaaf5f748 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmsub.s f16, f5, f17, f18, dyn # perform operation
fnmsub.s f16, f5, f17, f18, rdn # perform operation
fnmsub.s f16, f5, f17, f18, rmm # perform operation
fnmsub.s f16, f5, f17, f18, rne # perform operation
fnmsub.s f16, f5, f17, f18, rtz # perform operation
fnmsub.s f16, f5, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x16, 0x56399028 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x19006757 # load x3 with value 0x19006757
sw x3, 0(x2) # store 0x19006757 in memory
flw f7, 0(x2) # load 0x19006757 from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f16, f17, f7, f20, dyn # perform operation
fnmsub.s f16, f17, f7, f20, rdn # perform operation
fnmsub.s f16, f17, f7, f20, rmm # perform operation
fnmsub.s f16, f17, f7, f20, rne # perform operation
fnmsub.s f16, f17, f7, f20, rtz # perform operation
fnmsub.s f16, f17, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f7, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x4, 0x5f887850 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x5cf353df # load x3 with value 0x5cf353df
sw x3, 0(x2) # store 0x5cf353df in memory
flw f2, 0(x2) # load 0x5cf353df from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fnmsub.s f4, f23, f2, f11, dyn # perform operation
fnmsub.s f4, f23, f2, f11, rdn # perform operation
fnmsub.s f4, f23, f2, f11, rmm # perform operation
fnmsub.s f4, f23, f2, f11, rne # perform operation
fnmsub.s f4, f23, f2, f11, rtz # perform operation
fnmsub.s f4, f23, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f23, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f23, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f23, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f23, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f23, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x27, 0x87b440ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xcc04ed80 # load x3 with value 0xcc04ed80
sw x3, 0(x2) # store 0xcc04ed80 in memory
flw f9, 0(x2) # load 0xcc04ed80 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmsub.s f27, f8, f9, f21, dyn # perform operation
fnmsub.s f27, f8, f9, f21, rdn # perform operation
fnmsub.s f27, f8, f9, f21, rmm # perform operation
fnmsub.s f27, f8, f9, f21, rne # perform operation
fnmsub.s f27, f8, f9, f21, rtz # perform operation
fnmsub.s f27, f8, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f8, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f8, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f8, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f8, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f8, f9, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x26, 0x2577762d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x88d06f64 # load x3 with value 0x88d06f64
sw x3, 0(x2) # store 0x88d06f64 in memory
flw f28, 0(x2) # load 0x88d06f64 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmsub.s f26, f14, f28, f11, dyn # perform operation
fnmsub.s f26, f14, f28, f11, rdn # perform operation
fnmsub.s f26, f14, f28, f11, rmm # perform operation
fnmsub.s f26, f14, f28, f11, rne # perform operation
fnmsub.s f26, f14, f28, f11, rtz # perform operation
fnmsub.s f26, f14, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x3, 0x2ae39920 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0xd2c0d782 # load x3 with value 0xd2c0d782
sw x3, 0(x2) # store 0xd2c0d782 in memory
flw f14, 0(x2) # load 0xd2c0d782 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fnmsub.s f3, f30, f14, f26, dyn # perform operation
fnmsub.s f3, f30, f14, f26, rdn # perform operation
fnmsub.s f3, f30, f14, f26, rmm # perform operation
fnmsub.s f3, f30, f14, f26, rne # perform operation
fnmsub.s f3, f30, f14, f26, rtz # perform operation
fnmsub.s f3, f30, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f30, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x27, 0x763f9655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x378618e6 # load x3 with value 0x378618e6
sw x3, 0(x2) # store 0x378618e6 in memory
flw f4, 0(x2) # load 0x378618e6 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fnmsub.s f27, f9, f4, f5, dyn # perform operation
fnmsub.s f27, f9, f4, f5, rdn # perform operation
fnmsub.s f27, f9, f4, f5, rmm # perform operation
fnmsub.s f27, f9, f4, f5, rne # perform operation
fnmsub.s f27, f9, f4, f5, rtz # perform operation
fnmsub.s f27, f9, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f9, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x28, 0x76dd0420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xa4c74035 # load x3 with value 0xa4c74035
sw x3, 0(x2) # store 0xa4c74035 in memory
flw f7, 0(x2) # load 0xa4c74035 from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fnmsub.s f28, f8, f7, f12, dyn # perform operation
fnmsub.s f28, f8, f7, f12, rdn # perform operation
fnmsub.s f28, f8, f7, f12, rmm # perform operation
fnmsub.s f28, f8, f7, f12, rne # perform operation
fnmsub.s f28, f8, f7, f12, rtz # perform operation
fnmsub.s f28, f8, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f8, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x7, 0xd7c326cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x76c81ee2 # load x3 with value 0x76c81ee2
sw x3, 0(x2) # store 0x76c81ee2 in memory
flw f8, 0(x2) # load 0x76c81ee2 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
fnmsub.s f7, f28, f8, f4, dyn # perform operation
fnmsub.s f7, f28, f8, f4, rdn # perform operation
fnmsub.s f7, f28, f8, f4, rmm # perform operation
fnmsub.s f7, f28, f8, f4, rne # perform operation
fnmsub.s f7, f28, f8, f4, rtz # perform operation
fnmsub.s f7, f28, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f8, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x29, 0x33c96eb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x4e286428 # load x3 with value 0x4e286428
sw x3, 0(x2) # store 0x4e286428 in memory
flw f24, 0(x2) # load 0x4e286428 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmsub.s f29, f28, f24, f23, dyn # perform operation
fnmsub.s f29, f28, f24, f23, rdn # perform operation
fnmsub.s f29, f28, f24, f23, rmm # perform operation
fnmsub.s f29, f28, f24, f23, rne # perform operation
fnmsub.s f29, f28, f24, f23, rtz # perform operation
fnmsub.s f29, f28, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f28, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x3, 0xef7a8f85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x7b01f050 # load x3 with value 0x7b01f050
sw x3, 0(x2) # store 0x7b01f050 in memory
flw f8, 0(x2) # load 0x7b01f050 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fnmsub.s f3, f6, f8, f12, dyn # perform operation
fnmsub.s f3, f6, f8, f12, rdn # perform operation
fnmsub.s f3, f6, f8, f12, rmm # perform operation
fnmsub.s f3, f6, f8, f12, rne # perform operation
fnmsub.s f3, f6, f8, f12, rtz # perform operation
fnmsub.s f3, f6, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f6, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f6, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f6, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f6, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f6, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x25, 0x90086bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x749ca71a # load x3 with value 0x749ca71a
sw x3, 0(x2) # store 0x749ca71a in memory
flw f24, 0(x2) # load 0x749ca71a from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fnmsub.s f25, f10, f24, f21, dyn # perform operation
fnmsub.s f25, f10, f24, f21, rdn # perform operation
fnmsub.s f25, f10, f24, f21, rmm # perform operation
fnmsub.s f25, f10, f24, f21, rne # perform operation
fnmsub.s f25, f10, f24, f21, rtz # perform operation
fnmsub.s f25, f10, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x28, 0x53473bdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x034b7c92 # load x3 with value 0x034b7c92
sw x3, 0(x2) # store 0x034b7c92 in memory
flw f4, 0(x2) # load 0x034b7c92 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f28, f12, f4, f23, dyn # perform operation
fnmsub.s f28, f12, f4, f23, rdn # perform operation
fnmsub.s f28, f12, f4, f23, rmm # perform operation
fnmsub.s f28, f12, f4, f23, rne # perform operation
fnmsub.s f28, f12, f4, f23, rtz # perform operation
fnmsub.s f28, f12, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f4, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x15, 0x20f0976c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x92481164 # load x3 with value 0x92481164
sw x3, 0(x2) # store 0x92481164 in memory
flw f3, 0(x2) # load 0x92481164 from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmsub.s f15, f8, f3, f25, dyn # perform operation
fnmsub.s f15, f8, f3, f25, rdn # perform operation
fnmsub.s f15, f8, f3, f25, rmm # perform operation
fnmsub.s f15, f8, f3, f25, rne # perform operation
fnmsub.s f15, f8, f3, f25, rtz # perform operation
fnmsub.s f15, f8, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f8, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f8, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f8, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f8, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f8, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x9, 0x0304a03d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0xed254776 # load x3 with value 0xed254776
sw x3, 0(x2) # store 0xed254776 in memory
flw f31, 0(x2) # load 0xed254776 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmsub.s f9, f11, f31, f3, dyn # perform operation
fnmsub.s f9, f11, f31, f3, rdn # perform operation
fnmsub.s f9, f11, f31, f3, rmm # perform operation
fnmsub.s f9, f11, f31, f3, rne # perform operation
fnmsub.s f9, f11, f31, f3, rtz # perform operation
fnmsub.s f9, f11, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f11, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f11, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f11, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f11, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f11, f31, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x12, 0x3a457a31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x1eaa1a8f # load x3 with value 0x1eaa1a8f
sw x3, 0(x2) # store 0x1eaa1a8f in memory
flw f18, 0(x2) # load 0x1eaa1a8f from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmsub.s f12, f31, f18, f6, dyn # perform operation
fnmsub.s f12, f31, f18, f6, rdn # perform operation
fnmsub.s f12, f31, f18, f6, rmm # perform operation
fnmsub.s f12, f31, f18, f6, rne # perform operation
fnmsub.s f12, f31, f18, f6, rtz # perform operation
fnmsub.s f12, f31, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f31, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x4, 0x93dd02c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x09b3a246 # load x3 with value 0x09b3a246
sw x3, 0(x2) # store 0x09b3a246 in memory
flw f15, 0(x2) # load 0x09b3a246 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fnmsub.s f4, f6, f15, f22, dyn # perform operation
fnmsub.s f4, f6, f15, f22, rdn # perform operation
fnmsub.s f4, f6, f15, f22, rmm # perform operation
fnmsub.s f4, f6, f15, f22, rne # perform operation
fnmsub.s f4, f6, f15, f22, rtz # perform operation
fnmsub.s f4, f6, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f6, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x3, 0xd12b2830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x1798ad53 # load x3 with value 0x1798ad53
sw x3, 0(x2) # store 0x1798ad53 in memory
flw f19, 0(x2) # load 0x1798ad53 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fnmsub.s f3, f27, f19, f7, dyn # perform operation
fnmsub.s f3, f27, f19, f7, rdn # perform operation
fnmsub.s f3, f27, f19, f7, rmm # perform operation
fnmsub.s f3, f27, f19, f7, rne # perform operation
fnmsub.s f3, f27, f19, f7, rtz # perform operation
fnmsub.s f3, f27, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x3, 0xc284415d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0xacae08ae # load x3 with value 0xacae08ae
sw x3, 0(x2) # store 0xacae08ae in memory
flw f7, 0(x2) # load 0xacae08ae from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fnmsub.s f3, f9, f7, f21, dyn # perform operation
fnmsub.s f3, f9, f7, f21, rdn # perform operation
fnmsub.s f3, f9, f7, f21, rmm # perform operation
fnmsub.s f3, f9, f7, f21, rne # perform operation
fnmsub.s f3, f9, f7, f21, rtz # perform operation
fnmsub.s f3, f9, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f9, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f9, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x14, 0x8a2d20ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x6dcde0a4 # load x3 with value 0x6dcde0a4
sw x3, 0(x2) # store 0x6dcde0a4 in memory
flw f9, 0(x2) # load 0x6dcde0a4 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fnmsub.s f14, f8, f9, f10, dyn # perform operation
fnmsub.s f14, f8, f9, f10, rdn # perform operation
fnmsub.s f14, f8, f9, f10, rmm # perform operation
fnmsub.s f14, f8, f9, f10, rne # perform operation
fnmsub.s f14, f8, f9, f10, rtz # perform operation
fnmsub.s f14, f8, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x21, 0x76fc2645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x96d2c87e # load x3 with value 0x96d2c87e
sw x3, 0(x2) # store 0x96d2c87e in memory
flw f20, 0(x2) # load 0x96d2c87e from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fnmsub.s f21, f6, f20, f23, dyn # perform operation
fnmsub.s f21, f6, f20, f23, rdn # perform operation
fnmsub.s f21, f6, f20, f23, rmm # perform operation
fnmsub.s f21, f6, f20, f23, rne # perform operation
fnmsub.s f21, f6, f20, f23, rtz # perform operation
fnmsub.s f21, f6, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f6, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x12, 0x320e8813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x7c1d8e0c # load x3 with value 0x7c1d8e0c
sw x3, 0(x2) # store 0x7c1d8e0c in memory
flw f16, 0(x2) # load 0x7c1d8e0c from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fnmsub.s f12, f11, f16, f30, dyn # perform operation
fnmsub.s f12, f11, f16, f30, rdn # perform operation
fnmsub.s f12, f11, f16, f30, rmm # perform operation
fnmsub.s f12, f11, f16, f30, rne # perform operation
fnmsub.s f12, f11, f16, f30, rtz # perform operation
fnmsub.s f12, f11, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x18, 0x63d58629 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x994862d2 # load x3 with value 0x994862d2
sw x3, 0(x2) # store 0x994862d2 in memory
flw f31, 0(x2) # load 0x994862d2 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fnmsub.s f18, f26, f31, f29, dyn # perform operation
fnmsub.s f18, f26, f31, f29, rdn # perform operation
fnmsub.s f18, f26, f31, f29, rmm # perform operation
fnmsub.s f18, f26, f31, f29, rne # perform operation
fnmsub.s f18, f26, f31, f29, rtz # perform operation
fnmsub.s f18, f26, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f26, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x30, 0x782da023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x66611583 # load x3 with value 0x66611583
sw x3, 0(x2) # store 0x66611583 in memory
flw f22, 0(x2) # load 0x66611583 from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmsub.s f30, f6, f22, f9, dyn # perform operation
fnmsub.s f30, f6, f22, f9, rdn # perform operation
fnmsub.s f30, f6, f22, f9, rmm # perform operation
fnmsub.s f30, f6, f22, f9, rne # perform operation
fnmsub.s f30, f6, f22, f9, rtz # perform operation
fnmsub.s f30, f6, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x28, 0xc3f7d4cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xa009373c # load x3 with value 0xa009373c
sw x3, 0(x2) # store 0xa009373c in memory
flw f27, 0(x2) # load 0xa009373c from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmsub.s f28, f1, f27, f22, dyn # perform operation
fnmsub.s f28, f1, f27, f22, rdn # perform operation
fnmsub.s f28, f1, f27, f22, rmm # perform operation
fnmsub.s f28, f1, f27, f22, rne # perform operation
fnmsub.s f28, f1, f27, f22, rtz # perform operation
fnmsub.s f28, f1, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f1, f27, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x18, 0xb732c6d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x3756e60c # load x3 with value 0x3756e60c
sw x3, 0(x2) # store 0x3756e60c in memory
flw f9, 0(x2) # load 0x3756e60c from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmsub.s f18, f10, f9, f15, dyn # perform operation
fnmsub.s f18, f10, f9, f15, rdn # perform operation
fnmsub.s f18, f10, f9, f15, rmm # perform operation
fnmsub.s f18, f10, f9, f15, rne # perform operation
fnmsub.s f18, f10, f9, f15, rtz # perform operation
fnmsub.s f18, f10, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x17, 0x0f66b109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x8c4175b5 # load x3 with value 0x8c4175b5
sw x3, 0(x2) # store 0x8c4175b5 in memory
flw f1, 0(x2) # load 0x8c4175b5 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fnmsub.s f17, f11, f1, f31, dyn # perform operation
fnmsub.s f17, f11, f1, f31, rdn # perform operation
fnmsub.s f17, f11, f1, f31, rmm # perform operation
fnmsub.s f17, f11, f1, f31, rne # perform operation
fnmsub.s f17, f11, f1, f31, rtz # perform operation
fnmsub.s f17, f11, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x22, 0x9a726487 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xde6e8ef5 # load x3 with value 0xde6e8ef5
sw x3, 0(x2) # store 0xde6e8ef5 in memory
flw f6, 0(x2) # load 0xde6e8ef5 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmsub.s f22, f18, f6, f14, dyn # perform operation
fnmsub.s f22, f18, f6, f14, rdn # perform operation
fnmsub.s f22, f18, f6, f14, rmm # perform operation
fnmsub.s f22, f18, f6, f14, rne # perform operation
fnmsub.s f22, f18, f6, f14, rtz # perform operation
fnmsub.s f22, f18, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x23, 0xb14b01d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0xc6008b36 # load x3 with value 0xc6008b36
sw x3, 0(x2) # store 0xc6008b36 in memory
flw f2, 0(x2) # load 0xc6008b36 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmsub.s f23, f27, f2, f8, dyn # perform operation
fnmsub.s f23, f27, f2, f8, rdn # perform operation
fnmsub.s f23, f27, f2, f8, rmm # perform operation
fnmsub.s f23, f27, f2, f8, rne # perform operation
fnmsub.s f23, f27, f2, f8, rtz # perform operation
fnmsub.s f23, f27, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f27, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f27, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f27, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f27, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f27, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x21, 0x28e9984f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x9fc59322 # load x3 with value 0x9fc59322
sw x3, 0(x2) # store 0x9fc59322 in memory
flw f28, 0(x2) # load 0x9fc59322 from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmsub.s f21, f3, f28, f29, dyn # perform operation
fnmsub.s f21, f3, f28, f29, rdn # perform operation
fnmsub.s f21, f3, f28, f29, rmm # perform operation
fnmsub.s f21, f3, f28, f29, rne # perform operation
fnmsub.s f21, f3, f28, f29, rtz # perform operation
fnmsub.s f21, f3, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f3, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x18, 0x4fcc64b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0xb39b4616 # load x3 with value 0xb39b4616
sw x3, 0(x2) # store 0xb39b4616 in memory
flw f16, 0(x2) # load 0xb39b4616 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmsub.s f18, f15, f16, f13, dyn # perform operation
fnmsub.s f18, f15, f16, f13, rdn # perform operation
fnmsub.s f18, f15, f16, f13, rmm # perform operation
fnmsub.s f18, f15, f16, f13, rne # perform operation
fnmsub.s f18, f15, f16, f13, rtz # perform operation
fnmsub.s f18, f15, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f15, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x15, 0x0b2c8791 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x39946f8e # load x3 with value 0x39946f8e
sw x3, 0(x2) # store 0x39946f8e in memory
flw f13, 0(x2) # load 0x39946f8e from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmsub.s f15, f5, f13, f31, dyn # perform operation
fnmsub.s f15, f5, f13, f31, rdn # perform operation
fnmsub.s f15, f5, f13, f31, rmm # perform operation
fnmsub.s f15, f5, f13, f31, rne # perform operation
fnmsub.s f15, f5, f13, f31, rtz # perform operation
fnmsub.s f15, f5, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x18, 0xb38446bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x9c19ba98 # load x3 with value 0x9c19ba98
sw x3, 0(x2) # store 0x9c19ba98 in memory
flw f22, 0(x2) # load 0x9c19ba98 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f18, f7, f22, f25, dyn # perform operation
fnmsub.s f18, f7, f22, f25, rdn # perform operation
fnmsub.s f18, f7, f22, f25, rmm # perform operation
fnmsub.s f18, f7, f22, f25, rne # perform operation
fnmsub.s f18, f7, f22, f25, rtz # perform operation
fnmsub.s f18, f7, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x14, 0x81f871cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xd3200746 # load x3 with value 0xd3200746
sw x3, 0(x2) # store 0xd3200746 in memory
flw f29, 0(x2) # load 0xd3200746 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fnmsub.s f14, f16, f29, f28, dyn # perform operation
fnmsub.s f14, f16, f29, f28, rdn # perform operation
fnmsub.s f14, f16, f29, f28, rmm # perform operation
fnmsub.s f14, f16, f29, f28, rne # perform operation
fnmsub.s f14, f16, f29, f28, rtz # perform operation
fnmsub.s f14, f16, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x11, 0x26187c7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x5217fab9 # load x3 with value 0x5217fab9
sw x3, 0(x2) # store 0x5217fab9 in memory
flw f22, 0(x2) # load 0x5217fab9 from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmsub.s f11, f12, f22, f21, dyn # perform operation
fnmsub.s f11, f12, f22, f21, rdn # perform operation
fnmsub.s f11, f12, f22, f21, rmm # perform operation
fnmsub.s f11, f12, f22, f21, rne # perform operation
fnmsub.s f11, f12, f22, f21, rtz # perform operation
fnmsub.s f11, f12, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f12, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x28, 0x15cf797a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x3509acca # load x3 with value 0x3509acca
sw x3, 0(x2) # store 0x3509acca in memory
flw f13, 0(x2) # load 0x3509acca from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f28, f11, f13, f18, dyn # perform operation
fnmsub.s f28, f11, f13, f18, rdn # perform operation
fnmsub.s f28, f11, f13, f18, rmm # perform operation
fnmsub.s f28, f11, f13, f18, rne # perform operation
fnmsub.s f28, f11, f13, f18, rtz # perform operation
fnmsub.s f28, f11, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f11, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f11, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f11, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f11, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f11, f13, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x11, 0xe9f3f203 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x7326930b # load x3 with value 0x7326930b
sw x3, 0(x2) # store 0x7326930b in memory
flw f14, 0(x2) # load 0x7326930b from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmsub.s f11, f26, f14, f23, dyn # perform operation
fnmsub.s f11, f26, f14, f23, rdn # perform operation
fnmsub.s f11, f26, f14, f23, rmm # perform operation
fnmsub.s f11, f26, f14, f23, rne # perform operation
fnmsub.s f11, f26, f14, f23, rtz # perform operation
fnmsub.s f11, f26, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x29, 0xe72ae761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xfbe71124 # load x3 with value 0xfbe71124
sw x3, 0(x2) # store 0xfbe71124 in memory
flw f4, 0(x2) # load 0xfbe71124 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmsub.s f29, f15, f4, f1, dyn # perform operation
fnmsub.s f29, f15, f4, f1, rdn # perform operation
fnmsub.s f29, f15, f4, f1, rmm # perform operation
fnmsub.s f29, f15, f4, f1, rne # perform operation
fnmsub.s f29, f15, f4, f1, rtz # perform operation
fnmsub.s f29, f15, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f4, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x29, 0xdb245179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x003b9dff # load x3 with value 0x003b9dff
sw x3, 0(x2) # store 0x003b9dff in memory
flw f15, 0(x2) # load 0x003b9dff from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fnmsub.s f29, f16, f15, f22, dyn # perform operation
fnmsub.s f29, f16, f15, f22, rdn # perform operation
fnmsub.s f29, f16, f15, f22, rmm # perform operation
fnmsub.s f29, f16, f15, f22, rne # perform operation
fnmsub.s f29, f16, f15, f22, rtz # perform operation
fnmsub.s f29, f16, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f16, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f16, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x12, 0xbb9b33e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x5803c719 # load x3 with value 0x5803c719
sw x3, 0(x2) # store 0x5803c719 in memory
flw f26, 0(x2) # load 0x5803c719 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fnmsub.s f12, f10, f26, f4, dyn # perform operation
fnmsub.s f12, f10, f26, f4, rdn # perform operation
fnmsub.s f12, f10, f26, f4, rmm # perform operation
fnmsub.s f12, f10, f26, f4, rne # perform operation
fnmsub.s f12, f10, f26, f4, rtz # perform operation
fnmsub.s f12, f10, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f10, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f10, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f10, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f10, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f10, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x12, 0x6318d64e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xccf9ff6a # load x3 with value 0xccf9ff6a
sw x3, 0(x2) # store 0xccf9ff6a in memory
flw f31, 0(x2) # load 0xccf9ff6a from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fnmsub.s f12, f11, f31, f29, dyn # perform operation
fnmsub.s f12, f11, f31, f29, rdn # perform operation
fnmsub.s f12, f11, f31, f29, rmm # perform operation
fnmsub.s f12, f11, f31, f29, rne # perform operation
fnmsub.s f12, f11, f31, f29, rtz # perform operation
fnmsub.s f12, f11, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x8, 0xc8efa38e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xc5f90f02 # load x3 with value 0xc5f90f02
sw x3, 0(x2) # store 0xc5f90f02 in memory
flw f22, 0(x2) # load 0xc5f90f02 from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmsub.s f8, f4, f22, f13, dyn # perform operation
fnmsub.s f8, f4, f22, f13, rdn # perform operation
fnmsub.s f8, f4, f22, f13, rmm # perform operation
fnmsub.s f8, f4, f22, f13, rne # perform operation
fnmsub.s f8, f4, f22, f13, rtz # perform operation
fnmsub.s f8, f4, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f4, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x22, 0x3d3d50ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x3da43464 # load x3 with value 0x3da43464
sw x3, 0(x2) # store 0x3da43464 in memory
flw f18, 0(x2) # load 0x3da43464 from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmsub.s f22, f2, f18, f9, dyn # perform operation
fnmsub.s f22, f2, f18, f9, rdn # perform operation
fnmsub.s f22, f2, f18, f9, rmm # perform operation
fnmsub.s f22, f2, f18, f9, rne # perform operation
fnmsub.s f22, f2, f18, f9, rtz # perform operation
fnmsub.s f22, f2, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x29, 0xcb0f8781 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x5f716246 # load x3 with value 0x5f716246
sw x3, 0(x2) # store 0x5f716246 in memory
flw f21, 0(x2) # load 0x5f716246 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fnmsub.s f29, f3, f21, f23, dyn # perform operation
fnmsub.s f29, f3, f21, f23, rdn # perform operation
fnmsub.s f29, f3, f21, f23, rmm # perform operation
fnmsub.s f29, f3, f21, f23, rne # perform operation
fnmsub.s f29, f3, f21, f23, rtz # perform operation
fnmsub.s f29, f3, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x26, 0xe7a94f4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x2ce7cffc # load x3 with value 0x2ce7cffc
sw x3, 0(x2) # store 0x2ce7cffc in memory
flw f31, 0(x2) # load 0x2ce7cffc from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmsub.s f26, f28, f31, f10, dyn # perform operation
fnmsub.s f26, f28, f31, f10, rdn # perform operation
fnmsub.s f26, f28, f31, f10, rmm # perform operation
fnmsub.s f26, f28, f31, f10, rne # perform operation
fnmsub.s f26, f28, f31, f10, rtz # perform operation
fnmsub.s f26, f28, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x2, 0x3395811d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xc12e1b5c # load x3 with value 0xc12e1b5c
sw x3, 0(x2) # store 0xc12e1b5c in memory
flw f11, 0(x2) # load 0xc12e1b5c from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fnmsub.s f2, f15, f11, f20, dyn # perform operation
fnmsub.s f2, f15, f11, f20, rdn # perform operation
fnmsub.s f2, f15, f11, f20, rmm # perform operation
fnmsub.s f2, f15, f11, f20, rne # perform operation
fnmsub.s f2, f15, f11, f20, rtz # perform operation
fnmsub.s f2, f15, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f15, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x24, 0xadabeb5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x4b696460 # load x3 with value 0x4b696460
sw x3, 0(x2) # store 0x4b696460 in memory
flw f20, 0(x2) # load 0x4b696460 from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmsub.s f24, f7, f20, f2, dyn # perform operation
fnmsub.s f24, f7, f20, f2, rdn # perform operation
fnmsub.s f24, f7, f20, f2, rmm # perform operation
fnmsub.s f24, f7, f20, f2, rne # perform operation
fnmsub.s f24, f7, f20, f2, rtz # perform operation
fnmsub.s f24, f7, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f7, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x27, 0xabb78b30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x656334c5 # load x3 with value 0x656334c5
sw x3, 0(x2) # store 0x656334c5 in memory
flw f2, 0(x2) # load 0x656334c5 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmsub.s f27, f3, f2, f20, dyn # perform operation
fnmsub.s f27, f3, f2, f20, rdn # perform operation
fnmsub.s f27, f3, f2, f20, rmm # perform operation
fnmsub.s f27, f3, f2, f20, rne # perform operation
fnmsub.s f27, f3, f2, f20, rtz # perform operation
fnmsub.s f27, f3, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x30, 0x85458626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x82731ab0 # load x3 with value 0x82731ab0
sw x3, 0(x2) # store 0x82731ab0 in memory
flw f21, 0(x2) # load 0x82731ab0 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fnmsub.s f30, f20, f21, f31, dyn # perform operation
fnmsub.s f30, f20, f21, f31, rdn # perform operation
fnmsub.s f30, f20, f21, f31, rmm # perform operation
fnmsub.s f30, f20, f21, f31, rne # perform operation
fnmsub.s f30, f20, f21, f31, rtz # perform operation
fnmsub.s f30, f20, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x26, 0x4c5964c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x99892265 # load x3 with value 0x99892265
sw x3, 0(x2) # store 0x99892265 in memory
flw f9, 0(x2) # load 0x99892265 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmsub.s f26, f20, f9, f22, dyn # perform operation
fnmsub.s f26, f20, f9, f22, rdn # perform operation
fnmsub.s f26, f20, f9, f22, rmm # perform operation
fnmsub.s f26, f20, f9, f22, rne # perform operation
fnmsub.s f26, f20, f9, f22, rtz # perform operation
fnmsub.s f26, f20, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f20, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f20, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f20, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f20, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f20, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x10, 0x8e499745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x3f332446 # load x3 with value 0x3f332446
sw x3, 0(x2) # store 0x3f332446 in memory
flw f21, 0(x2) # load 0x3f332446 from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmsub.s f10, f19, f21, f28, dyn # perform operation
fnmsub.s f10, f19, f21, f28, rdn # perform operation
fnmsub.s f10, f19, f21, f28, rmm # perform operation
fnmsub.s f10, f19, f21, f28, rne # perform operation
fnmsub.s f10, f19, f21, f28, rtz # perform operation
fnmsub.s f10, f19, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x29, 0x11dc69f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x0ce52830 # load x3 with value 0x0ce52830
sw x3, 0(x2) # store 0x0ce52830 in memory
flw f16, 0(x2) # load 0x0ce52830 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fnmsub.s f29, f28, f16, f30, dyn # perform operation
fnmsub.s f29, f28, f16, f30, rdn # perform operation
fnmsub.s f29, f28, f16, f30, rmm # perform operation
fnmsub.s f29, f28, f16, f30, rne # perform operation
fnmsub.s f29, f28, f16, f30, rtz # perform operation
fnmsub.s f29, f28, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f28, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f28, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f28, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f28, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f28, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x25, 0x1666ba02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0xbd5c22dd # load x3 with value 0xbd5c22dd
sw x3, 0(x2) # store 0xbd5c22dd in memory
flw f14, 0(x2) # load 0xbd5c22dd from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmsub.s f25, f2, f14, f13, dyn # perform operation
fnmsub.s f25, f2, f14, f13, rdn # perform operation
fnmsub.s f25, f2, f14, f13, rmm # perform operation
fnmsub.s f25, f2, f14, f13, rne # perform operation
fnmsub.s f25, f2, f14, f13, rtz # perform operation
fnmsub.s f25, f2, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f2, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x26, 0x733d10a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x8164bcbf # load x3 with value 0x8164bcbf
sw x3, 0(x2) # store 0x8164bcbf in memory
flw f30, 0(x2) # load 0x8164bcbf from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fnmsub.s f26, f28, f30, f17, dyn # perform operation
fnmsub.s f26, f28, f30, f17, rdn # perform operation
fnmsub.s f26, f28, f30, f17, rmm # perform operation
fnmsub.s f26, f28, f30, f17, rne # perform operation
fnmsub.s f26, f28, f30, f17, rtz # perform operation
fnmsub.s f26, f28, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x2, 0x8cc242b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0xc6cc2ec5 # load x3 with value 0xc6cc2ec5
sw x3, 0(x2) # store 0xc6cc2ec5 in memory
flw f20, 0(x2) # load 0xc6cc2ec5 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmsub.s f2, f31, f20, f17, dyn # perform operation
fnmsub.s f2, f31, f20, f17, rdn # perform operation
fnmsub.s f2, f31, f20, f17, rmm # perform operation
fnmsub.s f2, f31, f20, f17, rne # perform operation
fnmsub.s f2, f31, f20, f17, rtz # perform operation
fnmsub.s f2, f31, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x2, 0x525a58d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xe9f9b899 # load x3 with value 0xe9f9b899
sw x3, 0(x2) # store 0xe9f9b899 in memory
flw f16, 0(x2) # load 0xe9f9b899 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmsub.s f2, f13, f16, f1, dyn # perform operation
fnmsub.s f2, f13, f16, f1, rdn # perform operation
fnmsub.s f2, f13, f16, f1, rmm # perform operation
fnmsub.s f2, f13, f16, f1, rne # perform operation
fnmsub.s f2, f13, f16, f1, rtz # perform operation
fnmsub.s f2, f13, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f13, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x5, 0x46acb6a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x0e114cff # load x3 with value 0x0e114cff
sw x3, 0(x2) # store 0x0e114cff in memory
flw f11, 0(x2) # load 0x0e114cff from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fnmsub.s f5, f7, f11, f21, dyn # perform operation
fnmsub.s f5, f7, f11, f21, rdn # perform operation
fnmsub.s f5, f7, f11, f21, rmm # perform operation
fnmsub.s f5, f7, f11, f21, rne # perform operation
fnmsub.s f5, f7, f11, f21, rtz # perform operation
fnmsub.s f5, f7, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f11, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x2, 0x3cc36109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x916bc19c # load x3 with value 0x916bc19c
sw x3, 0(x2) # store 0x916bc19c in memory
flw f26, 0(x2) # load 0x916bc19c from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmsub.s f2, f18, f26, f11, dyn # perform operation
fnmsub.s f2, f18, f26, f11, rdn # perform operation
fnmsub.s f2, f18, f26, f11, rmm # perform operation
fnmsub.s f2, f18, f26, f11, rne # perform operation
fnmsub.s f2, f18, f26, f11, rtz # perform operation
fnmsub.s f2, f18, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f18, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x25, 0x022675db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x41220573 # load x3 with value 0x41220573
sw x3, 0(x2) # store 0x41220573 in memory
flw f22, 0(x2) # load 0x41220573 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
fnmsub.s f25, f26, f22, f8, dyn # perform operation
fnmsub.s f25, f26, f22, f8, rdn # perform operation
fnmsub.s f25, f26, f22, f8, rmm # perform operation
fnmsub.s f25, f26, f22, f8, rne # perform operation
fnmsub.s f25, f26, f22, f8, rtz # perform operation
fnmsub.s f25, f26, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f26, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f26, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x10, 0x0e005a89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0xd906f228 # load x3 with value 0xd906f228
sw x3, 0(x2) # store 0xd906f228 in memory
flw f12, 0(x2) # load 0xd906f228 from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmsub.s f10, f14, f12, f30, dyn # perform operation
fnmsub.s f10, f14, f12, f30, rdn # perform operation
fnmsub.s f10, f14, f12, f30, rmm # perform operation
fnmsub.s f10, f14, f12, f30, rne # perform operation
fnmsub.s f10, f14, f12, f30, rtz # perform operation
fnmsub.s f10, f14, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x25, 0x9073c0af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x3b76844c # load x3 with value 0x3b76844c
sw x3, 0(x2) # store 0x3b76844c in memory
flw f6, 0(x2) # load 0x3b76844c from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmsub.s f25, f29, f6, f20, dyn # perform operation
fnmsub.s f25, f29, f6, f20, rdn # perform operation
fnmsub.s f25, f29, f6, f20, rmm # perform operation
fnmsub.s f25, f29, f6, f20, rne # perform operation
fnmsub.s f25, f29, f6, f20, rtz # perform operation
fnmsub.s f25, f29, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x12, 0xed534497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x4ddc6137 # load x3 with value 0x4ddc6137
sw x3, 0(x2) # store 0x4ddc6137 in memory
flw f11, 0(x2) # load 0x4ddc6137 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmsub.s f12, f21, f11, f27, dyn # perform operation
fnmsub.s f12, f21, f11, f27, rdn # perform operation
fnmsub.s f12, f21, f11, f27, rmm # perform operation
fnmsub.s f12, f21, f11, f27, rne # perform operation
fnmsub.s f12, f21, f11, f27, rtz # perform operation
fnmsub.s f12, f21, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x11, 0x7482b153 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x07576321 # load x3 with value 0x07576321
sw x3, 0(x2) # store 0x07576321 in memory
flw f26, 0(x2) # load 0x07576321 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmsub.s f11, f5, f26, f15, dyn # perform operation
fnmsub.s f11, f5, f26, f15, rdn # perform operation
fnmsub.s f11, f5, f26, f15, rmm # perform operation
fnmsub.s f11, f5, f26, f15, rne # perform operation
fnmsub.s f11, f5, f26, f15, rtz # perform operation
fnmsub.s f11, f5, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f5, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x9, 0x54ca9f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0xa9b844de # load x3 with value 0xa9b844de
sw x3, 0(x2) # store 0xa9b844de in memory
flw f26, 0(x2) # load 0xa9b844de from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmsub.s f9, f25, f26, f19, dyn # perform operation
fnmsub.s f9, f25, f26, f19, rdn # perform operation
fnmsub.s f9, f25, f26, f19, rmm # perform operation
fnmsub.s f9, f25, f26, f19, rne # perform operation
fnmsub.s f9, f25, f26, f19, rtz # perform operation
fnmsub.s f9, f25, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x10, 0x85f01013 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x4b611781 # load x3 with value 0x4b611781
sw x3, 0(x2) # store 0x4b611781 in memory
flw f7, 0(x2) # load 0x4b611781 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f10, f15, f7, f3, dyn # perform operation
fnmsub.s f10, f15, f7, f3, rdn # perform operation
fnmsub.s f10, f15, f7, f3, rmm # perform operation
fnmsub.s f10, f15, f7, f3, rne # perform operation
fnmsub.s f10, f15, f7, f3, rtz # perform operation
fnmsub.s f10, f15, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x11, 0xe3268375 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x130fde3a # load x3 with value 0x130fde3a
sw x3, 0(x2) # store 0x130fde3a in memory
flw f8, 0(x2) # load 0x130fde3a from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
fnmsub.s f11, f10, f8, f17, dyn # perform operation
fnmsub.s f11, f10, f8, f17, rdn # perform operation
fnmsub.s f11, f10, f8, f17, rmm # perform operation
fnmsub.s f11, f10, f8, f17, rne # perform operation
fnmsub.s f11, f10, f8, f17, rtz # perform operation
fnmsub.s f11, f10, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f10, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x28, 0xc0c4e5ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x57dc3302 # load x3 with value 0x57dc3302
sw x3, 0(x2) # store 0x57dc3302 in memory
flw f19, 0(x2) # load 0x57dc3302 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fnmsub.s f28, f30, f19, f25, dyn # perform operation
fnmsub.s f28, f30, f19, f25, rdn # perform operation
fnmsub.s f28, f30, f19, f25, rmm # perform operation
fnmsub.s f28, f30, f19, f25, rne # perform operation
fnmsub.s f28, f30, f19, f25, rtz # perform operation
fnmsub.s f28, f30, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f30, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f30, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x13, 0x06f92210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x528e1e7d # load x3 with value 0x528e1e7d
sw x3, 0(x2) # store 0x528e1e7d in memory
flw f25, 0(x2) # load 0x528e1e7d from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmsub.s f13, f1, f25, f30, dyn # perform operation
fnmsub.s f13, f1, f25, f30, rdn # perform operation
fnmsub.s f13, f1, f25, f30, rmm # perform operation
fnmsub.s f13, f1, f25, f30, rne # perform operation
fnmsub.s f13, f1, f25, f30, rtz # perform operation
fnmsub.s f13, f1, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f1, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x25, 0x0d640b7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0xb9d91222 # load x3 with value 0xb9d91222
sw x3, 0(x2) # store 0xb9d91222 in memory
flw f30, 0(x2) # load 0xb9d91222 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmsub.s f25, f16, f30, f9, dyn # perform operation
fnmsub.s f25, f16, f30, f9, rdn # perform operation
fnmsub.s f25, f16, f30, f9, rmm # perform operation
fnmsub.s f25, f16, f30, f9, rne # perform operation
fnmsub.s f25, f16, f30, f9, rtz # perform operation
fnmsub.s f25, f16, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x24, 0x9e951e74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xdd18276a # load x3 with value 0xdd18276a
sw x3, 0(x2) # store 0xdd18276a in memory
flw f19, 0(x2) # load 0xdd18276a from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmsub.s f24, f20, f19, f1, dyn # perform operation
fnmsub.s f24, f20, f19, f1, rdn # perform operation
fnmsub.s f24, f20, f19, f1, rmm # perform operation
fnmsub.s f24, f20, f19, f1, rne # perform operation
fnmsub.s f24, f20, f19, f1, rtz # perform operation
fnmsub.s f24, f20, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f20, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f20, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x31, 0x7419b16b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0xf9c4f24c # load x3 with value 0xf9c4f24c
sw x3, 0(x2) # store 0xf9c4f24c in memory
flw f4, 0(x2) # load 0xf9c4f24c from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fnmsub.s f31, f11, f4, f28, dyn # perform operation
fnmsub.s f31, f11, f4, f28, rdn # perform operation
fnmsub.s f31, f11, f4, f28, rmm # perform operation
fnmsub.s f31, f11, f4, f28, rne # perform operation
fnmsub.s f31, f11, f4, f28, rtz # perform operation
fnmsub.s f31, f11, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x15, 0x16c5fbd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x7e38b397 # load x3 with value 0x7e38b397
sw x3, 0(x2) # store 0x7e38b397 in memory
flw f23, 0(x2) # load 0x7e38b397 from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fnmsub.s f15, f14, f23, f7, dyn # perform operation
fnmsub.s f15, f14, f23, f7, rdn # perform operation
fnmsub.s f15, f14, f23, f7, rmm # perform operation
fnmsub.s f15, f14, f23, f7, rne # perform operation
fnmsub.s f15, f14, f23, f7, rtz # perform operation
fnmsub.s f15, f14, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x13, 0xe3fcdeaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xd65af484 # load x3 with value 0xd65af484
sw x3, 0(x2) # store 0xd65af484 in memory
flw f10, 0(x2) # load 0xd65af484 from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmsub.s f13, f1, f10, f16, dyn # perform operation
fnmsub.s f13, f1, f10, f16, rdn # perform operation
fnmsub.s f13, f1, f10, f16, rmm # perform operation
fnmsub.s f13, f1, f10, f16, rne # perform operation
fnmsub.s f13, f1, f10, f16, rtz # perform operation
fnmsub.s f13, f1, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f1, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x22, 0x73c4ddb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x1ab70544 # load x3 with value 0x1ab70544
sw x3, 0(x2) # store 0x1ab70544 in memory
flw f27, 0(x2) # load 0x1ab70544 from memory into f27
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
fnmsub.s f22, f3, f27, f4, dyn # perform operation
fnmsub.s f22, f3, f27, f4, rdn # perform operation
fnmsub.s f22, f3, f27, f4, rmm # perform operation
fnmsub.s f22, f3, f27, f4, rne # perform operation
fnmsub.s f22, f3, f27, f4, rtz # perform operation
fnmsub.s f22, f3, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f27, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x11, 0xd071fe88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x2be4448e # load x3 with value 0x2be4448e
sw x3, 0(x2) # store 0x2be4448e in memory
flw f4, 0(x2) # load 0x2be4448e from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmsub.s f11, f24, f4, f14, dyn # perform operation
fnmsub.s f11, f24, f4, f14, rdn # perform operation
fnmsub.s f11, f24, f4, f14, rmm # perform operation
fnmsub.s f11, f24, f4, f14, rne # perform operation
fnmsub.s f11, f24, f4, f14, rtz # perform operation
fnmsub.s f11, f24, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f24, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f24, f4, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x9, 0xd7810e41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xb4c02a06 # load x3 with value 0xb4c02a06
sw x3, 0(x2) # store 0xb4c02a06 in memory
flw f20, 0(x2) # load 0xb4c02a06 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmsub.s f9, f23, f20, f29, dyn # perform operation
fnmsub.s f9, f23, f20, f29, rdn # perform operation
fnmsub.s f9, f23, f20, f29, rmm # perform operation
fnmsub.s f9, f23, f20, f29, rne # perform operation
fnmsub.s f9, f23, f20, f29, rtz # perform operation
fnmsub.s f9, f23, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f23, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f23, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x25, 0xcb443bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x8cc017a6 # load x3 with value 0x8cc017a6
sw x3, 0(x2) # store 0x8cc017a6 in memory
flw f8, 0(x2) # load 0x8cc017a6 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fnmsub.s f25, f10, f8, f21, dyn # perform operation
fnmsub.s f25, f10, f8, f21, rdn # perform operation
fnmsub.s f25, f10, f8, f21, rmm # perform operation
fnmsub.s f25, f10, f8, f21, rne # perform operation
fnmsub.s f25, f10, f8, f21, rtz # perform operation
fnmsub.s f25, f10, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x4, 0xe243a1be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x473cc1b2 # load x3 with value 0x473cc1b2
sw x3, 0(x2) # store 0x473cc1b2 in memory
flw f20, 0(x2) # load 0x473cc1b2 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmsub.s f4, f2, f20, f26, dyn # perform operation
fnmsub.s f4, f2, f20, f26, rdn # perform operation
fnmsub.s f4, f2, f20, f26, rmm # perform operation
fnmsub.s f4, f2, f20, f26, rne # perform operation
fnmsub.s f4, f2, f20, f26, rtz # perform operation
fnmsub.s f4, f2, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f2, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x29, 0x9f32f36d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x0d74a78e # load x3 with value 0x0d74a78e
sw x3, 0(x2) # store 0x0d74a78e in memory
flw f22, 0(x2) # load 0x0d74a78e from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fnmsub.s f29, f9, f22, f31, dyn # perform operation
fnmsub.s f29, f9, f22, f31, rdn # perform operation
fnmsub.s f29, f9, f22, f31, rmm # perform operation
fnmsub.s f29, f9, f22, f31, rne # perform operation
fnmsub.s f29, f9, f22, f31, rtz # perform operation
fnmsub.s f29, f9, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f9, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x4, 0xdf3d146f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xdfd071f1 # load x3 with value 0xdfd071f1
sw x3, 0(x2) # store 0xdfd071f1 in memory
flw f21, 0(x2) # load 0xdfd071f1 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f4, f31, f21, f20, dyn # perform operation
fnmsub.s f4, f31, f21, f20, rdn # perform operation
fnmsub.s f4, f31, f21, f20, rmm # perform operation
fnmsub.s f4, f31, f21, f20, rne # perform operation
fnmsub.s f4, f31, f21, f20, rtz # perform operation
fnmsub.s f4, f31, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f31, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f31, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x31, 0x2c0901d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x39fa22dc # load x3 with value 0x39fa22dc
sw x3, 0(x2) # store 0x39fa22dc in memory
flw f15, 0(x2) # load 0x39fa22dc from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
fnmsub.s f31, f23, f15, f4, dyn # perform operation
fnmsub.s f31, f23, f15, f4, rdn # perform operation
fnmsub.s f31, f23, f15, f4, rmm # perform operation
fnmsub.s f31, f23, f15, f4, rne # perform operation
fnmsub.s f31, f23, f15, f4, rtz # perform operation
fnmsub.s f31, f23, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x23, 0x2cc2a98f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0xfd5b7fb0 # load x3 with value 0xfd5b7fb0
sw x3, 0(x2) # store 0xfd5b7fb0 in memory
flw f2, 0(x2) # load 0xfd5b7fb0 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmsub.s f23, f25, f2, f30, dyn # perform operation
fnmsub.s f23, f25, f2, f30, rdn # perform operation
fnmsub.s f23, f25, f2, f30, rmm # perform operation
fnmsub.s f23, f25, f2, f30, rne # perform operation
fnmsub.s f23, f25, f2, f30, rtz # perform operation
fnmsub.s f23, f25, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x9, 0x43896004 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x7fba7454 # load x3 with value 0x7fba7454
sw x3, 0(x2) # store 0x7fba7454 in memory
flw f22, 0(x2) # load 0x7fba7454 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmsub.s f9, f21, f22, f24, dyn # perform operation
fnmsub.s f9, f21, f22, f24, rdn # perform operation
fnmsub.s f9, f21, f22, f24, rmm # perform operation
fnmsub.s f9, f21, f22, f24, rne # perform operation
fnmsub.s f9, f21, f22, f24, rtz # perform operation
fnmsub.s f9, f21, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f21, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x17, 0xc5fa9285 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x1a3c368e # load x3 with value 0x1a3c368e
sw x3, 0(x2) # store 0x1a3c368e in memory
flw f18, 0(x2) # load 0x1a3c368e from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fnmsub.s f17, f6, f18, f10, dyn # perform operation
fnmsub.s f17, f6, f18, f10, rdn # perform operation
fnmsub.s f17, f6, f18, f10, rmm # perform operation
fnmsub.s f17, f6, f18, f10, rne # perform operation
fnmsub.s f17, f6, f18, f10, rtz # perform operation
fnmsub.s f17, f6, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f6, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f6, f18, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x25, 0x50eb262f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x2a01ee83 # load x3 with value 0x2a01ee83
sw x3, 0(x2) # store 0x2a01ee83 in memory
flw f29, 0(x2) # load 0x2a01ee83 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmsub.s f25, f9, f29, f28, dyn # perform operation
fnmsub.s f25, f9, f29, f28, rdn # perform operation
fnmsub.s f25, f9, f29, f28, rmm # perform operation
fnmsub.s f25, f9, f29, f28, rne # perform operation
fnmsub.s f25, f9, f29, f28, rtz # perform operation
fnmsub.s f25, f9, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f9, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f9, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f9, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f9, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f9, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x23, 0xff2f8599 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0xdf8b3797 # load x3 with value 0xdf8b3797
sw x3, 0(x2) # store 0xdf8b3797 in memory
flw f16, 0(x2) # load 0xdf8b3797 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmsub.s f23, f13, f16, f5, dyn # perform operation
fnmsub.s f23, f13, f16, f5, rdn # perform operation
fnmsub.s f23, f13, f16, f5, rmm # perform operation
fnmsub.s f23, f13, f16, f5, rne # perform operation
fnmsub.s f23, f13, f16, f5, rtz # perform operation
fnmsub.s f23, f13, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x31, 0x49a0ada9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0xcbcd715a # load x3 with value 0xcbcd715a
sw x3, 0(x2) # store 0xcbcd715a in memory
flw f10, 0(x2) # load 0xcbcd715a from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fnmsub.s f31, f2, f10, f16, dyn # perform operation
fnmsub.s f31, f2, f10, f16, rdn # perform operation
fnmsub.s f31, f2, f10, f16, rmm # perform operation
fnmsub.s f31, f2, f10, f16, rne # perform operation
fnmsub.s f31, f2, f10, f16, rtz # perform operation
fnmsub.s f31, f2, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f2, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x25, 0x4a120fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x44c1f5f9 # load x3 with value 0x44c1f5f9
sw x3, 0(x2) # store 0x44c1f5f9 in memory
flw f4, 0(x2) # load 0x44c1f5f9 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmsub.s f25, f3, f4, f22, dyn # perform operation
fnmsub.s f25, f3, f4, f22, rdn # perform operation
fnmsub.s f25, f3, f4, f22, rmm # perform operation
fnmsub.s f25, f3, f4, f22, rne # perform operation
fnmsub.s f25, f3, f4, f22, rtz # perform operation
fnmsub.s f25, f3, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f4, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x6, 0x02670779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x693a2ced # load x3 with value 0x693a2ced
sw x3, 0(x2) # store 0x693a2ced in memory
flw f27, 0(x2) # load 0x693a2ced from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmsub.s f6, f16, f27, f20, dyn # perform operation
fnmsub.s f6, f16, f27, f20, rdn # perform operation
fnmsub.s f6, f16, f27, f20, rmm # perform operation
fnmsub.s f6, f16, f27, f20, rne # perform operation
fnmsub.s f6, f16, f27, f20, rtz # perform operation
fnmsub.s f6, f16, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f16, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x10, 0x4b86128f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xad6b0ed5 # load x3 with value 0xad6b0ed5
sw x3, 0(x2) # store 0xad6b0ed5 in memory
flw f14, 0(x2) # load 0xad6b0ed5 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmsub.s f10, f24, f14, f1, dyn # perform operation
fnmsub.s f10, f24, f14, f1, rdn # perform operation
fnmsub.s f10, f24, f14, f1, rmm # perform operation
fnmsub.s f10, f24, f14, f1, rne # perform operation
fnmsub.s f10, f24, f14, f1, rtz # perform operation
fnmsub.s f10, f24, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x24, 0x468a9528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x629125a1 # load x3 with value 0x629125a1
sw x3, 0(x2) # store 0x629125a1 in memory
flw f31, 0(x2) # load 0x629125a1 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fnmsub.s f24, f23, f31, f22, dyn # perform operation
fnmsub.s f24, f23, f31, f22, rdn # perform operation
fnmsub.s f24, f23, f31, f22, rmm # perform operation
fnmsub.s f24, f23, f31, f22, rne # perform operation
fnmsub.s f24, f23, f31, f22, rtz # perform operation
fnmsub.s f24, f23, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x3, 0x0715beb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x88dcab7d # load x3 with value 0x88dcab7d
sw x3, 0(x2) # store 0x88dcab7d in memory
flw f14, 0(x2) # load 0x88dcab7d from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmsub.s f3, f4, f14, f25, dyn # perform operation
fnmsub.s f3, f4, f14, f25, rdn # perform operation
fnmsub.s f3, f4, f14, f25, rmm # perform operation
fnmsub.s f3, f4, f14, f25, rne # perform operation
fnmsub.s f3, f4, f14, f25, rtz # perform operation
fnmsub.s f3, f4, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f4, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f4, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f4, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f4, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f4, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x11, 0x871fcd0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0xfbdd711f # load x3 with value 0xfbdd711f
sw x3, 0(x2) # store 0xfbdd711f in memory
flw f18, 0(x2) # load 0xfbdd711f from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fnmsub.s f11, f6, f18, f5, dyn # perform operation
fnmsub.s f11, f6, f18, f5, rdn # perform operation
fnmsub.s f11, f6, f18, f5, rmm # perform operation
fnmsub.s f11, f6, f18, f5, rne # perform operation
fnmsub.s f11, f6, f18, f5, rtz # perform operation
fnmsub.s f11, f6, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x23, 0x60d88e58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x2afa9dd6 # load x3 with value 0x2afa9dd6
sw x3, 0(x2) # store 0x2afa9dd6 in memory
flw f20, 0(x2) # load 0x2afa9dd6 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmsub.s f23, f15, f20, f18, dyn # perform operation
fnmsub.s f23, f15, f20, f18, rdn # perform operation
fnmsub.s f23, f15, f20, f18, rmm # perform operation
fnmsub.s f23, f15, f20, f18, rne # perform operation
fnmsub.s f23, f15, f20, f18, rtz # perform operation
fnmsub.s f23, f15, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x27, 0xc1fdf5b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0xc3c6d772 # load x3 with value 0xc3c6d772
sw x3, 0(x2) # store 0xc3c6d772 in memory
flw f19, 0(x2) # load 0xc3c6d772 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmsub.s f27, f11, f19, f25, dyn # perform operation
fnmsub.s f27, f11, f19, f25, rdn # perform operation
fnmsub.s f27, f11, f19, f25, rmm # perform operation
fnmsub.s f27, f11, f19, f25, rne # perform operation
fnmsub.s f27, f11, f19, f25, rtz # perform operation
fnmsub.s f27, f11, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x8, 0xe0097d33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x48239893 # load x3 with value 0x48239893
sw x3, 0(x2) # store 0x48239893 in memory
flw f2, 0(x2) # load 0x48239893 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fnmsub.s f8, f9, f2, f13, dyn # perform operation
fnmsub.s f8, f9, f2, f13, rdn # perform operation
fnmsub.s f8, f9, f2, f13, rmm # perform operation
fnmsub.s f8, f9, f2, f13, rne # perform operation
fnmsub.s f8, f9, f2, f13, rtz # perform operation
fnmsub.s f8, f9, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f9, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x15, 0xc45e6650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x25e7f3f7 # load x3 with value 0x25e7f3f7
sw x3, 0(x2) # store 0x25e7f3f7 in memory
flw f12, 0(x2) # load 0x25e7f3f7 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmsub.s f15, f7, f12, f10, dyn # perform operation
fnmsub.s f15, f7, f12, f10, rdn # perform operation
fnmsub.s f15, f7, f12, f10, rmm # perform operation
fnmsub.s f15, f7, f12, f10, rne # perform operation
fnmsub.s f15, f7, f12, f10, rtz # perform operation
fnmsub.s f15, f7, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x2, 0xfadcbf31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xe5035fba # load x3 with value 0xe5035fba
sw x3, 0(x2) # store 0xe5035fba in memory
flw f14, 0(x2) # load 0xe5035fba from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmsub.s f2, f7, f14, f23, dyn # perform operation
fnmsub.s f2, f7, f14, f23, rdn # perform operation
fnmsub.s f2, f7, f14, f23, rmm # perform operation
fnmsub.s f2, f7, f14, f23, rne # perform operation
fnmsub.s f2, f7, f14, f23, rtz # perform operation
fnmsub.s f2, f7, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f7, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f7, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f7, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f7, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f7, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x30, 0x60ed0ad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xaffa4a6f # load x3 with value 0xaffa4a6f
sw x3, 0(x2) # store 0xaffa4a6f in memory
flw f12, 0(x2) # load 0xaffa4a6f from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fnmsub.s f30, f4, f12, f25, dyn # perform operation
fnmsub.s f30, f4, f12, f25, rdn # perform operation
fnmsub.s f30, f4, f12, f25, rmm # perform operation
fnmsub.s f30, f4, f12, f25, rne # perform operation
fnmsub.s f30, f4, f12, f25, rtz # perform operation
fnmsub.s f30, f4, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f4, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f4, f12, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x13, 0x289da785 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xe343038c # load x3 with value 0xe343038c
sw x3, 0(x2) # store 0xe343038c in memory
flw f15, 0(x2) # load 0xe343038c from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fnmsub.s f13, f23, f15, f2, dyn # perform operation
fnmsub.s f13, f23, f15, f2, rdn # perform operation
fnmsub.s f13, f23, f15, f2, rmm # perform operation
fnmsub.s f13, f23, f15, f2, rne # perform operation
fnmsub.s f13, f23, f15, f2, rtz # perform operation
fnmsub.s f13, f23, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x21, 0x9821f8d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x2dd943ae # load x3 with value 0x2dd943ae
sw x3, 0(x2) # store 0x2dd943ae in memory
flw f18, 0(x2) # load 0x2dd943ae from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fnmsub.s f21, f28, f18, f26, dyn # perform operation
fnmsub.s f21, f28, f18, f26, rdn # perform operation
fnmsub.s f21, f28, f18, f26, rmm # perform operation
fnmsub.s f21, f28, f18, f26, rne # perform operation
fnmsub.s f21, f28, f18, f26, rtz # perform operation
fnmsub.s f21, f28, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x9, 0x904549bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x99ed073d # load x3 with value 0x99ed073d
sw x3, 0(x2) # store 0x99ed073d in memory
flw f28, 0(x2) # load 0x99ed073d from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmsub.s f9, f6, f28, f29, dyn # perform operation
fnmsub.s f9, f6, f28, f29, rdn # perform operation
fnmsub.s f9, f6, f28, f29, rmm # perform operation
fnmsub.s f9, f6, f28, f29, rne # perform operation
fnmsub.s f9, f6, f28, f29, rtz # perform operation
fnmsub.s f9, f6, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x13, 0xa329f659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x4e978837 # load x3 with value 0x4e978837
sw x3, 0(x2) # store 0x4e978837 in memory
flw f5, 0(x2) # load 0x4e978837 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fnmsub.s f13, f21, f5, f10, dyn # perform operation
fnmsub.s f13, f21, f5, f10, rdn # perform operation
fnmsub.s f13, f21, f5, f10, rmm # perform operation
fnmsub.s f13, f21, f5, f10, rne # perform operation
fnmsub.s f13, f21, f5, f10, rtz # perform operation
fnmsub.s f13, f21, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x31, 0x92517c47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x57cf07aa # load x3 with value 0x57cf07aa
sw x3, 0(x2) # store 0x57cf07aa in memory
flw f28, 0(x2) # load 0x57cf07aa from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f31, f4, f28, f14, dyn # perform operation
fnmsub.s f31, f4, f28, f14, rdn # perform operation
fnmsub.s f31, f4, f28, f14, rmm # perform operation
fnmsub.s f31, f4, f28, f14, rne # perform operation
fnmsub.s f31, f4, f28, f14, rtz # perform operation
fnmsub.s f31, f4, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f4, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f4, f28, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x21, 0x9fe3121e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x83a2dd0e # load x3 with value 0x83a2dd0e
sw x3, 0(x2) # store 0x83a2dd0e in memory
flw f27, 0(x2) # load 0x83a2dd0e from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fnmsub.s f21, f5, f27, f11, dyn # perform operation
fnmsub.s f21, f5, f27, f11, rdn # perform operation
fnmsub.s f21, f5, f27, f11, rmm # perform operation
fnmsub.s f21, f5, f27, f11, rne # perform operation
fnmsub.s f21, f5, f27, f11, rtz # perform operation
fnmsub.s f21, f5, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f27, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x13, 0xc80047be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0xd2d771c8 # load x3 with value 0xd2d771c8
sw x3, 0(x2) # store 0xd2d771c8 in memory
flw f18, 0(x2) # load 0xd2d771c8 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmsub.s f13, f5, f18, f24, dyn # perform operation
fnmsub.s f13, f5, f18, f24, rdn # perform operation
fnmsub.s f13, f5, f18, f24, rmm # perform operation
fnmsub.s f13, f5, f18, f24, rne # perform operation
fnmsub.s f13, f5, f18, f24, rtz # perform operation
fnmsub.s f13, f5, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f5, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f5, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x1, 0xfa11e168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xafc471df # load x3 with value 0xafc471df
sw x3, 0(x2) # store 0xafc471df in memory
flw f20, 0(x2) # load 0xafc471df from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fnmsub.s f1, f31, f20, f10, dyn # perform operation
fnmsub.s f1, f31, f20, f10, rdn # perform operation
fnmsub.s f1, f31, f20, f10, rmm # perform operation
fnmsub.s f1, f31, f20, f10, rne # perform operation
fnmsub.s f1, f31, f20, f10, rtz # perform operation
fnmsub.s f1, f31, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x9, 0xa0dd7be2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xb9848471 # load x3 with value 0xb9848471
sw x3, 0(x2) # store 0xb9848471 in memory
flw f21, 0(x2) # load 0xb9848471 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmsub.s f9, f27, f21, f13, dyn # perform operation
fnmsub.s f9, f27, f21, f13, rdn # perform operation
fnmsub.s f9, f27, f21, f13, rmm # perform operation
fnmsub.s f9, f27, f21, f13, rne # perform operation
fnmsub.s f9, f27, f21, f13, rtz # perform operation
fnmsub.s f9, f27, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f27, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f27, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f27, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f27, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f27, f21, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x25, 0x217ff7e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0xfe59fbae # load x3 with value 0xfe59fbae
sw x3, 0(x2) # store 0xfe59fbae in memory
flw f29, 0(x2) # load 0xfe59fbae from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmsub.s f25, f3, f29, f24, dyn # perform operation
fnmsub.s f25, f3, f29, f24, rdn # perform operation
fnmsub.s f25, f3, f29, f24, rmm # perform operation
fnmsub.s f25, f3, f29, f24, rne # perform operation
fnmsub.s f25, f3, f29, f24, rtz # perform operation
fnmsub.s f25, f3, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x25, 0xf8b114f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xec7b4953 # load x3 with value 0xec7b4953
sw x3, 0(x2) # store 0xec7b4953 in memory
flw f21, 0(x2) # load 0xec7b4953 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fnmsub.s f25, f24, f21, f20, dyn # perform operation
fnmsub.s f25, f24, f21, f20, rdn # perform operation
fnmsub.s f25, f24, f21, f20, rmm # perform operation
fnmsub.s f25, f24, f21, f20, rne # perform operation
fnmsub.s f25, f24, f21, f20, rtz # perform operation
fnmsub.s f25, f24, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f24, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f24, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x12, 0x64815954 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x2a762843 # load x3 with value 0x2a762843
sw x3, 0(x2) # store 0x2a762843 in memory
flw f31, 0(x2) # load 0x2a762843 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f12, f28, f31, f25, dyn # perform operation
fnmsub.s f12, f28, f31, f25, rdn # perform operation
fnmsub.s f12, f28, f31, f25, rmm # perform operation
fnmsub.s f12, f28, f31, f25, rne # perform operation
fnmsub.s f12, f28, f31, f25, rtz # perform operation
fnmsub.s f12, f28, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x31, 0x6d46b594 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0xe2119fa5 # load x3 with value 0xe2119fa5
sw x3, 0(x2) # store 0xe2119fa5 in memory
flw f15, 0(x2) # load 0xe2119fa5 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fnmsub.s f31, f26, f15, f9, dyn # perform operation
fnmsub.s f31, f26, f15, f9, rdn # perform operation
fnmsub.s f31, f26, f15, f9, rmm # perform operation
fnmsub.s f31, f26, f15, f9, rne # perform operation
fnmsub.s f31, f26, f15, f9, rtz # perform operation
fnmsub.s f31, f26, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x24, 0xc406ad0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xc4ac81d6 # load x3 with value 0xc4ac81d6
sw x3, 0(x2) # store 0xc4ac81d6 in memory
flw f23, 0(x2) # load 0xc4ac81d6 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fnmsub.s f24, f21, f23, f3, dyn # perform operation
fnmsub.s f24, f21, f23, f3, rdn # perform operation
fnmsub.s f24, f21, f23, f3, rmm # perform operation
fnmsub.s f24, f21, f23, f3, rne # perform operation
fnmsub.s f24, f21, f23, f3, rtz # perform operation
fnmsub.s f24, f21, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x28, 0xb8ae4d52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x3a148f7c # load x3 with value 0x3a148f7c
sw x3, 0(x2) # store 0x3a148f7c in memory
flw f25, 0(x2) # load 0x3a148f7c from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fnmsub.s f28, f8, f25, f30, dyn # perform operation
fnmsub.s f28, f8, f25, f30, rdn # perform operation
fnmsub.s f28, f8, f25, f30, rmm # perform operation
fnmsub.s f28, f8, f25, f30, rne # perform operation
fnmsub.s f28, f8, f25, f30, rtz # perform operation
fnmsub.s f28, f8, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f8, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f8, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f8, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f8, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f8, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x23, 0xe226f713 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x71664037 # load x3 with value 0x71664037
sw x3, 0(x2) # store 0x71664037 in memory
flw f13, 0(x2) # load 0x71664037 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fnmsub.s f23, f22, f13, f19, dyn # perform operation
fnmsub.s f23, f22, f13, f19, rdn # perform operation
fnmsub.s f23, f22, f13, f19, rmm # perform operation
fnmsub.s f23, f22, f13, f19, rne # perform operation
fnmsub.s f23, f22, f13, f19, rtz # perform operation
fnmsub.s f23, f22, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f22, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x2, 0x88dd9161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x6fa2e2ab # load x3 with value 0x6fa2e2ab
sw x3, 0(x2) # store 0x6fa2e2ab in memory
flw f27, 0(x2) # load 0x6fa2e2ab from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fnmsub.s f2, f28, f27, f23, dyn # perform operation
fnmsub.s f2, f28, f27, f23, rdn # perform operation
fnmsub.s f2, f28, f27, f23, rmm # perform operation
fnmsub.s f2, f28, f27, f23, rne # perform operation
fnmsub.s f2, f28, f27, f23, rtz # perform operation
fnmsub.s f2, f28, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f28, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f28, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x7, 0xcce48a5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x039601c7 # load x3 with value 0x039601c7
sw x3, 0(x2) # store 0x039601c7 in memory
flw f27, 0(x2) # load 0x039601c7 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmsub.s f7, f31, f27, f14, dyn # perform operation
fnmsub.s f7, f31, f27, f14, rdn # perform operation
fnmsub.s f7, f31, f27, f14, rmm # perform operation
fnmsub.s f7, f31, f27, f14, rne # perform operation
fnmsub.s f7, f31, f27, f14, rtz # perform operation
fnmsub.s f7, f31, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f31, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f31, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f31, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f31, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f31, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x1, 0xeaffe8c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x3b77e226 # load x3 with value 0x3b77e226
sw x3, 0(x2) # store 0x3b77e226 in memory
flw f9, 0(x2) # load 0x3b77e226 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fnmsub.s f1, f26, f9, f13, dyn # perform operation
fnmsub.s f1, f26, f9, f13, rdn # perform operation
fnmsub.s f1, f26, f9, f13, rmm # perform operation
fnmsub.s f1, f26, f9, f13, rne # perform operation
fnmsub.s f1, f26, f9, f13, rtz # perform operation
fnmsub.s f1, f26, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x8, 0x9460b7a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xb439c014 # load x3 with value 0xb439c014
sw x3, 0(x2) # store 0xb439c014 in memory
flw f11, 0(x2) # load 0xb439c014 from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmsub.s f8, f6, f11, f3, dyn # perform operation
fnmsub.s f8, f6, f11, f3, rdn # perform operation
fnmsub.s f8, f6, f11, f3, rmm # perform operation
fnmsub.s f8, f6, f11, f3, rne # perform operation
fnmsub.s f8, f6, f11, f3, rtz # perform operation
fnmsub.s f8, f6, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f6, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x3, 0x975f7736 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xf0837ad1 # load x3 with value 0xf0837ad1
sw x3, 0(x2) # store 0xf0837ad1 in memory
flw f31, 0(x2) # load 0xf0837ad1 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmsub.s f3, f5, f31, f7, dyn # perform operation
fnmsub.s f3, f5, f31, f7, rdn # perform operation
fnmsub.s f3, f5, f31, f7, rmm # perform operation
fnmsub.s f3, f5, f31, f7, rne # perform operation
fnmsub.s f3, f5, f31, f7, rtz # perform operation
fnmsub.s f3, f5, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f5, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f5, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f5, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f5, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f5, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x11, 0xe72f1b06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xc5a94db9 # load x3 with value 0xc5a94db9
sw x3, 0(x2) # store 0xc5a94db9 in memory
flw f24, 0(x2) # load 0xc5a94db9 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
fnmsub.s f11, f5, f24, f4, dyn # perform operation
fnmsub.s f11, f5, f24, f4, rdn # perform operation
fnmsub.s f11, f5, f24, f4, rmm # perform operation
fnmsub.s f11, f5, f24, f4, rne # perform operation
fnmsub.s f11, f5, f24, f4, rtz # perform operation
fnmsub.s f11, f5, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f5, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f5, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x24, 0xf0ffc791 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0xf3ffec7f # load x3 with value 0xf3ffec7f
sw x3, 0(x2) # store 0xf3ffec7f in memory
flw f30, 0(x2) # load 0xf3ffec7f from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmsub.s f24, f27, f30, f10, dyn # perform operation
fnmsub.s f24, f27, f30, f10, rdn # perform operation
fnmsub.s f24, f27, f30, f10, rmm # perform operation
fnmsub.s f24, f27, f30, f10, rne # perform operation
fnmsub.s f24, f27, f30, f10, rtz # perform operation
fnmsub.s f24, f27, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f27, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f27, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x1, 0x3a92cf49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x6b06dcaf # load x3 with value 0x6b06dcaf
sw x3, 0(x2) # store 0x6b06dcaf in memory
flw f23, 0(x2) # load 0x6b06dcaf from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fnmsub.s f1, f13, f23, f2, dyn # perform operation
fnmsub.s f1, f13, f23, f2, rdn # perform operation
fnmsub.s f1, f13, f23, f2, rmm # perform operation
fnmsub.s f1, f13, f23, f2, rne # perform operation
fnmsub.s f1, f13, f23, f2, rtz # perform operation
fnmsub.s f1, f13, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f13, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x31, 0xc248bfd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x77a73641 # load x3 with value 0x77a73641
sw x3, 0(x2) # store 0x77a73641 in memory
flw f19, 0(x2) # load 0x77a73641 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fnmsub.s f31, f13, f19, f4, dyn # perform operation
fnmsub.s f31, f13, f19, f4, rdn # perform operation
fnmsub.s f31, f13, f19, f4, rmm # perform operation
fnmsub.s f31, f13, f19, f4, rne # perform operation
fnmsub.s f31, f13, f19, f4, rtz # perform operation
fnmsub.s f31, f13, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f13, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f13, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x14, 0x1b8b1f5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x5ecd695a # load x3 with value 0x5ecd695a
sw x3, 0(x2) # store 0x5ecd695a in memory
flw f19, 0(x2) # load 0x5ecd695a from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmsub.s f14, f16, f19, f6, dyn # perform operation
fnmsub.s f14, f16, f19, f6, rdn # perform operation
fnmsub.s f14, f16, f19, f6, rmm # perform operation
fnmsub.s f14, f16, f19, f6, rne # perform operation
fnmsub.s f14, f16, f19, f6, rtz # perform operation
fnmsub.s f14, f16, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x11, 0xfadce914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0xf6881419 # load x3 with value 0xf6881419
sw x3, 0(x2) # store 0xf6881419 in memory
flw f1, 0(x2) # load 0xf6881419 from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fnmsub.s f11, f30, f1, f26, dyn # perform operation
fnmsub.s f11, f30, f1, f26, rdn # perform operation
fnmsub.s f11, f30, f1, f26, rmm # perform operation
fnmsub.s f11, f30, f1, f26, rne # perform operation
fnmsub.s f11, f30, f1, f26, rtz # perform operation
fnmsub.s f11, f30, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f30, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f30, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x9, 0xbc2c58a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x80c51d47 # load x3 with value 0x80c51d47
sw x3, 0(x2) # store 0x80c51d47 in memory
flw f16, 0(x2) # load 0x80c51d47 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fnmsub.s f9, f28, f16, f27, dyn # perform operation
fnmsub.s f9, f28, f16, f27, rdn # perform operation
fnmsub.s f9, f28, f16, f27, rmm # perform operation
fnmsub.s f9, f28, f16, f27, rne # perform operation
fnmsub.s f9, f28, f16, f27, rtz # perform operation
fnmsub.s f9, f28, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f28, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f28, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f28, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f28, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f28, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x20, 0x6549bc52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x067195c5 # load x3 with value 0x067195c5
sw x3, 0(x2) # store 0x067195c5 in memory
flw f21, 0(x2) # load 0x067195c5 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f20, f18, f21, f24, dyn # perform operation
fnmsub.s f20, f18, f21, f24, rdn # perform operation
fnmsub.s f20, f18, f21, f24, rmm # perform operation
fnmsub.s f20, f18, f21, f24, rne # perform operation
fnmsub.s f20, f18, f21, f24, rtz # perform operation
fnmsub.s f20, f18, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f18, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f18, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f18, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f18, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f18, f21, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x1, 0x10e7f6b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x73e37fa4 # load x3 with value 0x73e37fa4
sw x3, 0(x2) # store 0x73e37fa4 in memory
flw f30, 0(x2) # load 0x73e37fa4 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmsub.s f1, f5, f30, f2, dyn # perform operation
fnmsub.s f1, f5, f30, f2, rdn # perform operation
fnmsub.s f1, f5, f30, f2, rmm # perform operation
fnmsub.s f1, f5, f30, f2, rne # perform operation
fnmsub.s f1, f5, f30, f2, rtz # perform operation
fnmsub.s f1, f5, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f5, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f5, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x13, 0x08a74ed3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x6b5cc9c4 # load x3 with value 0x6b5cc9c4
sw x3, 0(x2) # store 0x6b5cc9c4 in memory
flw f28, 0(x2) # load 0x6b5cc9c4 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fnmsub.s f13, f24, f28, f6, dyn # perform operation
fnmsub.s f13, f24, f28, f6, rdn # perform operation
fnmsub.s f13, f24, f28, f6, rmm # perform operation
fnmsub.s f13, f24, f28, f6, rne # perform operation
fnmsub.s f13, f24, f28, f6, rtz # perform operation
fnmsub.s f13, f24, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f24, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f24, f28, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x21, 0xf612f9c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0xa8733469 # load x3 with value 0xa8733469
sw x3, 0(x2) # store 0xa8733469 in memory
flw f14, 0(x2) # load 0xa8733469 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmsub.s f21, f15, f14, f18, dyn # perform operation
fnmsub.s f21, f15, f14, f18, rdn # perform operation
fnmsub.s f21, f15, f14, f18, rmm # perform operation
fnmsub.s f21, f15, f14, f18, rne # perform operation
fnmsub.s f21, f15, f14, f18, rtz # perform operation
fnmsub.s f21, f15, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x25, 0x1e90c265 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x874f1a1d # load x3 with value 0x874f1a1d
sw x3, 0(x2) # store 0x874f1a1d in memory
flw f28, 0(x2) # load 0x874f1a1d from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmsub.s f25, f20, f28, f22, dyn # perform operation
fnmsub.s f25, f20, f28, f22, rdn # perform operation
fnmsub.s f25, f20, f28, f22, rmm # perform operation
fnmsub.s f25, f20, f28, f22, rne # perform operation
fnmsub.s f25, f20, f28, f22, rtz # perform operation
fnmsub.s f25, f20, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f20, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f20, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f20, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f20, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f20, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x13, 0x721f8f38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0xa433662c # load x3 with value 0xa433662c
sw x3, 0(x2) # store 0xa433662c in memory
flw f20, 0(x2) # load 0xa433662c from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fnmsub.s f13, f3, f20, f18, dyn # perform operation
fnmsub.s f13, f3, f20, f18, rdn # perform operation
fnmsub.s f13, f3, f20, f18, rmm # perform operation
fnmsub.s f13, f3, f20, f18, rne # perform operation
fnmsub.s f13, f3, f20, f18, rtz # perform operation
fnmsub.s f13, f3, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x7, 0xf2642a7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x07ae3974 # load x3 with value 0x07ae3974
sw x3, 0(x2) # store 0x07ae3974 in memory
flw f24, 0(x2) # load 0x07ae3974 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fnmsub.s f7, f2, f24, f25, dyn # perform operation
fnmsub.s f7, f2, f24, f25, rdn # perform operation
fnmsub.s f7, f2, f24, f25, rmm # perform operation
fnmsub.s f7, f2, f24, f25, rne # perform operation
fnmsub.s f7, f2, f24, f25, rtz # perform operation
fnmsub.s f7, f2, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f2, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f2, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x15, 0x2d54921b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x978e5bfc # load x3 with value 0x978e5bfc
sw x3, 0(x2) # store 0x978e5bfc in memory
flw f21, 0(x2) # load 0x978e5bfc from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmsub.s f15, f20, f21, f11, dyn # perform operation
fnmsub.s f15, f20, f21, f11, rdn # perform operation
fnmsub.s f15, f20, f21, f11, rmm # perform operation
fnmsub.s f15, f20, f21, f11, rne # perform operation
fnmsub.s f15, f20, f21, f11, rtz # perform operation
fnmsub.s f15, f20, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f20, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f20, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f20, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f20, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f20, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x22, 0x3d8ba7b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x7dc88d88 # load x3 with value 0x7dc88d88
sw x3, 0(x2) # store 0x7dc88d88 in memory
flw f2, 0(x2) # load 0x7dc88d88 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fnmsub.s f22, f13, f2, f29, dyn # perform operation
fnmsub.s f22, f13, f2, f29, rdn # perform operation
fnmsub.s f22, f13, f2, f29, rmm # perform operation
fnmsub.s f22, f13, f2, f29, rne # perform operation
fnmsub.s f22, f13, f2, f29, rtz # perform operation
fnmsub.s f22, f13, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x1, 0xd86c4e03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0xbb8f3df1 # load x3 with value 0xbb8f3df1
sw x3, 0(x2) # store 0xbb8f3df1 in memory
flw f3, 0(x2) # load 0xbb8f3df1 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmsub.s f1, f31, f3, f10, dyn # perform operation
fnmsub.s f1, f31, f3, f10, rdn # perform operation
fnmsub.s f1, f31, f3, f10, rmm # perform operation
fnmsub.s f1, f31, f3, f10, rne # perform operation
fnmsub.s f1, f31, f3, f10, rtz # perform operation
fnmsub.s f1, f31, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x31, 0xd0104332 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xfce73f87 # load x3 with value 0xfce73f87
sw x3, 0(x2) # store 0xfce73f87 in memory
flw f15, 0(x2) # load 0xfce73f87 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fnmsub.s f31, f2, f15, f25, dyn # perform operation
fnmsub.s f31, f2, f15, f25, rdn # perform operation
fnmsub.s f31, f2, f15, f25, rmm # perform operation
fnmsub.s f31, f2, f15, f25, rne # perform operation
fnmsub.s f31, f2, f15, f25, rtz # perform operation
fnmsub.s f31, f2, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f2, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x17, 0xd3e47f05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x07ac9442 # load x3 with value 0x07ac9442
sw x3, 0(x2) # store 0x07ac9442 in memory
flw f10, 0(x2) # load 0x07ac9442 from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
fnmsub.s f17, f7, f10, f4, dyn # perform operation
fnmsub.s f17, f7, f10, f4, rdn # perform operation
fnmsub.s f17, f7, f10, f4, rmm # perform operation
fnmsub.s f17, f7, f10, f4, rne # perform operation
fnmsub.s f17, f7, f10, f4, rtz # perform operation
fnmsub.s f17, f7, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x20, 0xd6460695 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xf49d267b # load x3 with value 0xf49d267b
sw x3, 0(x2) # store 0xf49d267b in memory
flw f16, 0(x2) # load 0xf49d267b from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fnmsub.s f20, f5, f16, f13, dyn # perform operation
fnmsub.s f20, f5, f16, f13, rdn # perform operation
fnmsub.s f20, f5, f16, f13, rmm # perform operation
fnmsub.s f20, f5, f16, f13, rne # perform operation
fnmsub.s f20, f5, f16, f13, rtz # perform operation
fnmsub.s f20, f5, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x3, 0x8dde18d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x19ec0df2 # load x3 with value 0x19ec0df2
sw x3, 0(x2) # store 0x19ec0df2 in memory
flw f26, 0(x2) # load 0x19ec0df2 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fnmsub.s f3, f18, f26, f29, dyn # perform operation
fnmsub.s f3, f18, f26, f29, rdn # perform operation
fnmsub.s f3, f18, f26, f29, rmm # perform operation
fnmsub.s f3, f18, f26, f29, rne # perform operation
fnmsub.s f3, f18, f26, f29, rtz # perform operation
fnmsub.s f3, f18, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f18, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f18, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x9, 0xc5bcdedf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x73f9e605 # load x3 with value 0x73f9e605
sw x3, 0(x2) # store 0x73f9e605 in memory
flw f10, 0(x2) # load 0x73f9e605 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fnmsub.s f9, f22, f10, f20, dyn # perform operation
fnmsub.s f9, f22, f10, f20, rdn # perform operation
fnmsub.s f9, f22, f10, f20, rmm # perform operation
fnmsub.s f9, f22, f10, f20, rne # perform operation
fnmsub.s f9, f22, f10, f20, rtz # perform operation
fnmsub.s f9, f22, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x2, 0xd45a691a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x5306114b # load x3 with value 0x5306114b
sw x3, 0(x2) # store 0x5306114b in memory
flw f28, 0(x2) # load 0x5306114b from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmsub.s f2, f22, f28, f16, dyn # perform operation
fnmsub.s f2, f22, f28, f16, rdn # perform operation
fnmsub.s f2, f22, f28, f16, rmm # perform operation
fnmsub.s f2, f22, f28, f16, rne # perform operation
fnmsub.s f2, f22, f28, f16, rtz # perform operation
fnmsub.s f2, f22, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f22, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f22, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f22, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f22, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f22, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x1, 0xe814eeb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0xbf49ccef # load x3 with value 0xbf49ccef
sw x3, 0(x2) # store 0xbf49ccef in memory
flw f6, 0(x2) # load 0xbf49ccef from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmsub.s f1, f20, f6, f25, dyn # perform operation
fnmsub.s f1, f20, f6, f25, rdn # perform operation
fnmsub.s f1, f20, f6, f25, rmm # perform operation
fnmsub.s f1, f20, f6, f25, rne # perform operation
fnmsub.s f1, f20, f6, f25, rtz # perform operation
fnmsub.s f1, f20, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x22, 0xb1d5c72b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x577854d1 # load x3 with value 0x577854d1
sw x3, 0(x2) # store 0x577854d1 in memory
flw f6, 0(x2) # load 0x577854d1 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmsub.s f22, f31, f6, f26, dyn # perform operation
fnmsub.s f22, f31, f6, f26, rdn # perform operation
fnmsub.s f22, f31, f6, f26, rmm # perform operation
fnmsub.s f22, f31, f6, f26, rne # perform operation
fnmsub.s f22, f31, f6, f26, rtz # perform operation
fnmsub.s f22, f31, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f31, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x2, 0x4f9dc008 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x6f3916d4 # load x3 with value 0x6f3916d4
sw x3, 0(x2) # store 0x6f3916d4 in memory
flw f23, 0(x2) # load 0x6f3916d4 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmsub.s f2, f7, f23, f31, dyn # perform operation
fnmsub.s f2, f7, f23, f31, rdn # perform operation
fnmsub.s f2, f7, f23, f31, rmm # perform operation
fnmsub.s f2, f7, f23, f31, rne # perform operation
fnmsub.s f2, f7, f23, f31, rtz # perform operation
fnmsub.s f2, f7, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f7, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x31, 0x34f82c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xa6b47b8e # load x3 with value 0xa6b47b8e
sw x3, 0(x2) # store 0xa6b47b8e in memory
flw f14, 0(x2) # load 0xa6b47b8e from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fnmsub.s f31, f17, f14, f11, dyn # perform operation
fnmsub.s f31, f17, f14, f11, rdn # perform operation
fnmsub.s f31, f17, f14, f11, rmm # perform operation
fnmsub.s f31, f17, f14, f11, rne # perform operation
fnmsub.s f31, f17, f14, f11, rtz # perform operation
fnmsub.s f31, f17, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x16, 0xb8d8bc54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x37d2eac9 # load x3 with value 0x37d2eac9
sw x3, 0(x2) # store 0x37d2eac9 in memory
flw f2, 0(x2) # load 0x37d2eac9 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fnmsub.s f16, f5, f2, f15, dyn # perform operation
fnmsub.s f16, f5, f2, f15, rdn # perform operation
fnmsub.s f16, f5, f2, f15, rmm # perform operation
fnmsub.s f16, f5, f2, f15, rne # perform operation
fnmsub.s f16, f5, f2, f15, rtz # perform operation
fnmsub.s f16, f5, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x18, 0xd38582c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x6ef702b7 # load x3 with value 0x6ef702b7
sw x3, 0(x2) # store 0x6ef702b7 in memory
flw f22, 0(x2) # load 0x6ef702b7 from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmsub.s f18, f16, f22, f23, dyn # perform operation
fnmsub.s f18, f16, f22, f23, rdn # perform operation
fnmsub.s f18, f16, f22, f23, rmm # perform operation
fnmsub.s f18, f16, f22, f23, rne # perform operation
fnmsub.s f18, f16, f22, f23, rtz # perform operation
fnmsub.s f18, f16, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x4, 0x84569a8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x537ace7b # load x3 with value 0x537ace7b
sw x3, 0(x2) # store 0x537ace7b in memory
flw f20, 0(x2) # load 0x537ace7b from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmsub.s f4, f25, f20, f24, dyn # perform operation
fnmsub.s f4, f25, f20, f24, rdn # perform operation
fnmsub.s f4, f25, f20, f24, rmm # perform operation
fnmsub.s f4, f25, f20, f24, rne # perform operation
fnmsub.s f4, f25, f20, f24, rtz # perform operation
fnmsub.s f4, f25, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f25, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x19, 0x9f7b3a5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x5ac04ff0 # load x3 with value 0x5ac04ff0
sw x3, 0(x2) # store 0x5ac04ff0 in memory
flw f9, 0(x2) # load 0x5ac04ff0 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f19, f13, f9, f27, dyn # perform operation
fnmsub.s f19, f13, f9, f27, rdn # perform operation
fnmsub.s f19, f13, f9, f27, rmm # perform operation
fnmsub.s f19, f13, f9, f27, rne # perform operation
fnmsub.s f19, f13, f9, f27, rtz # perform operation
fnmsub.s f19, f13, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f13, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f13, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f13, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f13, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f13, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x18, 0x5f7b6958 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xa792b5dc # load x3 with value 0xa792b5dc
sw x3, 0(x2) # store 0xa792b5dc in memory
flw f28, 0(x2) # load 0xa792b5dc from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fnmsub.s f18, f3, f28, f8, dyn # perform operation
fnmsub.s f18, f3, f28, f8, rdn # perform operation
fnmsub.s f18, f3, f28, f8, rmm # perform operation
fnmsub.s f18, f3, f28, f8, rne # perform operation
fnmsub.s f18, f3, f28, f8, rtz # perform operation
fnmsub.s f18, f3, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f3, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x11, 0x477b93fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x270ff91c # load x3 with value 0x270ff91c
sw x3, 0(x2) # store 0x270ff91c in memory
flw f10, 0(x2) # load 0x270ff91c from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fnmsub.s f11, f13, f10, f30, dyn # perform operation
fnmsub.s f11, f13, f10, f30, rdn # perform operation
fnmsub.s f11, f13, f10, f30, rmm # perform operation
fnmsub.s f11, f13, f10, f30, rne # perform operation
fnmsub.s f11, f13, f10, f30, rtz # perform operation
fnmsub.s f11, f13, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f13, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f13, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x14, 0x7380f444 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x43050105 # load x3 with value 0x43050105
sw x3, 0(x2) # store 0x43050105 in memory
flw f6, 0(x2) # load 0x43050105 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fnmsub.s f14, f19, f6, f21, dyn # perform operation
fnmsub.s f14, f19, f6, f21, rdn # perform operation
fnmsub.s f14, f19, f6, f21, rmm # perform operation
fnmsub.s f14, f19, f6, f21, rne # perform operation
fnmsub.s f14, f19, f6, f21, rtz # perform operation
fnmsub.s f14, f19, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f19, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f19, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f19, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f19, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f19, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x26, 0x35cedd31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0xaa81b3ac # load x3 with value 0xaa81b3ac
sw x3, 0(x2) # store 0xaa81b3ac in memory
flw f22, 0(x2) # load 0xaa81b3ac from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmsub.s f26, f14, f22, f20, dyn # perform operation
fnmsub.s f26, f14, f22, f20, rdn # perform operation
fnmsub.s f26, f14, f22, f20, rmm # perform operation
fnmsub.s f26, f14, f22, f20, rne # perform operation
fnmsub.s f26, f14, f22, f20, rtz # perform operation
fnmsub.s f26, f14, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x19, 0x79174e69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x874d1cde # load x3 with value 0x874d1cde
sw x3, 0(x2) # store 0x874d1cde in memory
flw f31, 0(x2) # load 0x874d1cde from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmsub.s f19, f21, f31, f12, dyn # perform operation
fnmsub.s f19, f21, f31, f12, rdn # perform operation
fnmsub.s f19, f21, f31, f12, rmm # perform operation
fnmsub.s f19, f21, f31, f12, rne # perform operation
fnmsub.s f19, f21, f31, f12, rtz # perform operation
fnmsub.s f19, f21, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f21, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x15, 0x8c15fecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x56412b98 # load x3 with value 0x56412b98
sw x3, 0(x2) # store 0x56412b98 in memory
flw f19, 0(x2) # load 0x56412b98 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmsub.s f15, f30, f19, f24, dyn # perform operation
fnmsub.s f15, f30, f19, f24, rdn # perform operation
fnmsub.s f15, f30, f19, f24, rmm # perform operation
fnmsub.s f15, f30, f19, f24, rne # perform operation
fnmsub.s f15, f30, f19, f24, rtz # perform operation
fnmsub.s f15, f30, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x31, 0xdc778f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xfd4ec0e9 # load x3 with value 0xfd4ec0e9
sw x3, 0(x2) # store 0xfd4ec0e9 in memory
flw f28, 0(x2) # load 0xfd4ec0e9 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fnmsub.s f31, f3, f28, f29, dyn # perform operation
fnmsub.s f31, f3, f28, f29, rdn # perform operation
fnmsub.s f31, f3, f28, f29, rmm # perform operation
fnmsub.s f31, f3, f28, f29, rne # perform operation
fnmsub.s f31, f3, f28, f29, rtz # perform operation
fnmsub.s f31, f3, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f3, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x30, 0x6379c498 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x65bfc855 # load x3 with value 0x65bfc855
sw x3, 0(x2) # store 0x65bfc855 in memory
flw f4, 0(x2) # load 0x65bfc855 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fnmsub.s f30, f25, f4, f13, dyn # perform operation
fnmsub.s f30, f25, f4, f13, rdn # perform operation
fnmsub.s f30, f25, f4, f13, rmm # perform operation
fnmsub.s f30, f25, f4, f13, rne # perform operation
fnmsub.s f30, f25, f4, f13, rtz # perform operation
fnmsub.s f30, f25, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x31, 0x1333e77f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x6ca3eaff # load x3 with value 0x6ca3eaff
sw x3, 0(x2) # store 0x6ca3eaff in memory
flw f11, 0(x2) # load 0x6ca3eaff from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmsub.s f31, f26, f11, f2, dyn # perform operation
fnmsub.s f31, f26, f11, f2, rdn # perform operation
fnmsub.s f31, f26, f11, f2, rmm # perform operation
fnmsub.s f31, f26, f11, f2, rne # perform operation
fnmsub.s f31, f26, f11, f2, rtz # perform operation
fnmsub.s f31, f26, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f11, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x19, 0x48db8e34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0xdd934e91 # load x3 with value 0xdd934e91
sw x3, 0(x2) # store 0xdd934e91 in memory
flw f24, 0(x2) # load 0xdd934e91 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmsub.s f19, f11, f24, f26, dyn # perform operation
fnmsub.s f19, f11, f24, f26, rdn # perform operation
fnmsub.s f19, f11, f24, f26, rmm # perform operation
fnmsub.s f19, f11, f24, f26, rne # perform operation
fnmsub.s f19, f11, f24, f26, rtz # perform operation
fnmsub.s f19, f11, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f11, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f11, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x22, 0x1b04885e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x0c1351a9 # load x3 with value 0x0c1351a9
sw x3, 0(x2) # store 0x0c1351a9 in memory
flw f5, 0(x2) # load 0x0c1351a9 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmsub.s f22, f18, f5, f16, dyn # perform operation
fnmsub.s f22, f18, f5, f16, rdn # perform operation
fnmsub.s f22, f18, f5, f16, rmm # perform operation
fnmsub.s f22, f18, f5, f16, rne # perform operation
fnmsub.s f22, f18, f5, f16, rtz # perform operation
fnmsub.s f22, f18, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f5, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x29, 0x911c94e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0xaf770ea5 # load x3 with value 0xaf770ea5
sw x3, 0(x2) # store 0xaf770ea5 in memory
flw f6, 0(x2) # load 0xaf770ea5 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmsub.s f29, f7, f6, f14, dyn # perform operation
fnmsub.s f29, f7, f6, f14, rdn # perform operation
fnmsub.s f29, f7, f6, f14, rmm # perform operation
fnmsub.s f29, f7, f6, f14, rne # perform operation
fnmsub.s f29, f7, f6, f14, rtz # perform operation
fnmsub.s f29, f7, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f7, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f7, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f7, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f7, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f7, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x21, 0x00e65115 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xfaad4263 # load x3 with value 0xfaad4263
sw x3, 0(x2) # store 0xfaad4263 in memory
flw f15, 0(x2) # load 0xfaad4263 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fnmsub.s f21, f22, f15, f31, dyn # perform operation
fnmsub.s f21, f22, f15, f31, rdn # perform operation
fnmsub.s f21, f22, f15, f31, rmm # perform operation
fnmsub.s f21, f22, f15, f31, rne # perform operation
fnmsub.s f21, f22, f15, f31, rtz # perform operation
fnmsub.s f21, f22, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f22, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x30, 0x76541607 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xc64a5c65 # load x3 with value 0xc64a5c65
sw x3, 0(x2) # store 0xc64a5c65 in memory
flw f23, 0(x2) # load 0xc64a5c65 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fnmsub.s f30, f11, f23, f14, dyn # perform operation
fnmsub.s f30, f11, f23, f14, rdn # perform operation
fnmsub.s f30, f11, f23, f14, rmm # perform operation
fnmsub.s f30, f11, f23, f14, rne # perform operation
fnmsub.s f30, f11, f23, f14, rtz # perform operation
fnmsub.s f30, f11, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f11, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f11, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f11, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f11, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f11, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x8, 0x5c109ac6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x71f89f0d # load x3 with value 0x71f89f0d
sw x3, 0(x2) # store 0x71f89f0d in memory
flw f3, 0(x2) # load 0x71f89f0d from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fnmsub.s f8, f21, f3, f16, dyn # perform operation
fnmsub.s f8, f21, f3, f16, rdn # perform operation
fnmsub.s f8, f21, f3, f16, rmm # perform operation
fnmsub.s f8, f21, f3, f16, rne # perform operation
fnmsub.s f8, f21, f3, f16, rtz # perform operation
fnmsub.s f8, f21, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f21, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x6, 0xcebd2bb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0xa5e14ad1 # load x3 with value 0xa5e14ad1
sw x3, 0(x2) # store 0xa5e14ad1 in memory
flw f20, 0(x2) # load 0xa5e14ad1 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fnmsub.s f6, f31, f20, f1, dyn # perform operation
fnmsub.s f6, f31, f20, f1, rdn # perform operation
fnmsub.s f6, f31, f20, f1, rmm # perform operation
fnmsub.s f6, f31, f20, f1, rne # perform operation
fnmsub.s f6, f31, f20, f1, rtz # perform operation
fnmsub.s f6, f31, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f31, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f31, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f31, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f31, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f31, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x9, 0xf8d48096 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x21603975 # load x3 with value 0x21603975
sw x3, 0(x2) # store 0x21603975 in memory
flw f26, 0(x2) # load 0x21603975 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fnmsub.s f9, f20, f26, f10, dyn # perform operation
fnmsub.s f9, f20, f26, f10, rdn # perform operation
fnmsub.s f9, f20, f26, f10, rmm # perform operation
fnmsub.s f9, f20, f26, f10, rne # perform operation
fnmsub.s f9, f20, f26, f10, rtz # perform operation
fnmsub.s f9, f20, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x2, 0xf43f2af4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x63f2023d # load x3 with value 0x63f2023d
sw x3, 0(x2) # store 0x63f2023d in memory
flw f27, 0(x2) # load 0x63f2023d from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fnmsub.s f2, f23, f27, f5, dyn # perform operation
fnmsub.s f2, f23, f27, f5, rdn # perform operation
fnmsub.s f2, f23, f27, f5, rmm # perform operation
fnmsub.s f2, f23, f27, f5, rne # perform operation
fnmsub.s f2, f23, f27, f5, rtz # perform operation
fnmsub.s f2, f23, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x2, 0x181714b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xaf139074 # load x3 with value 0xaf139074
sw x3, 0(x2) # store 0xaf139074 in memory
flw f14, 0(x2) # load 0xaf139074 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmsub.s f2, f1, f14, f22, dyn # perform operation
fnmsub.s f2, f1, f14, f22, rdn # perform operation
fnmsub.s f2, f1, f14, f22, rmm # perform operation
fnmsub.s f2, f1, f14, f22, rne # perform operation
fnmsub.s f2, f1, f14, f22, rtz # perform operation
fnmsub.s f2, f1, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f14, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x21, 0xd0fbc4e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0xd58e5c2a # load x3 with value 0xd58e5c2a
sw x3, 0(x2) # store 0xd58e5c2a in memory
flw f30, 0(x2) # load 0xd58e5c2a from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fnmsub.s f21, f4, f30, f17, dyn # perform operation
fnmsub.s f21, f4, f30, f17, rdn # perform operation
fnmsub.s f21, f4, f30, f17, rmm # perform operation
fnmsub.s f21, f4, f30, f17, rne # perform operation
fnmsub.s f21, f4, f30, f17, rtz # perform operation
fnmsub.s f21, f4, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f4, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f4, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f4, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f4, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f4, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x7, 0x5185213d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x934ae590 # load x3 with value 0x934ae590
sw x3, 0(x2) # store 0x934ae590 in memory
flw f25, 0(x2) # load 0x934ae590 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fnmsub.s f7, f27, f25, f9, dyn # perform operation
fnmsub.s f7, f27, f25, f9, rdn # perform operation
fnmsub.s f7, f27, f25, f9, rmm # perform operation
fnmsub.s f7, f27, f25, f9, rne # perform operation
fnmsub.s f7, f27, f25, f9, rtz # perform operation
fnmsub.s f7, f27, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f25, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x16, 0xd7a7f5c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xceee1652 # load x3 with value 0xceee1652
sw x3, 0(x2) # store 0xceee1652 in memory
flw f26, 0(x2) # load 0xceee1652 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmsub.s f16, f11, f26, f10, dyn # perform operation
fnmsub.s f16, f11, f26, f10, rdn # perform operation
fnmsub.s f16, f11, f26, f10, rmm # perform operation
fnmsub.s f16, f11, f26, f10, rne # perform operation
fnmsub.s f16, f11, f26, f10, rtz # perform operation
fnmsub.s f16, f11, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f11, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f11, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f11, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f11, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f11, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x20, 0xdfa7672c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x70dd0a14 # load x3 with value 0x70dd0a14
sw x3, 0(x2) # store 0x70dd0a14 in memory
flw f16, 0(x2) # load 0x70dd0a14 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmsub.s f20, f5, f16, f3, dyn # perform operation
fnmsub.s f20, f5, f16, f3, rdn # perform operation
fnmsub.s f20, f5, f16, f3, rmm # perform operation
fnmsub.s f20, f5, f16, f3, rne # perform operation
fnmsub.s f20, f5, f16, f3, rtz # perform operation
fnmsub.s f20, f5, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x20, 0x422fd642 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0xca4d046e # load x3 with value 0xca4d046e
sw x3, 0(x2) # store 0xca4d046e in memory
flw f3, 0(x2) # load 0xca4d046e from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fnmsub.s f20, f7, f3, f24, dyn # perform operation
fnmsub.s f20, f7, f3, f24, rdn # perform operation
fnmsub.s f20, f7, f3, f24, rmm # perform operation
fnmsub.s f20, f7, f3, f24, rne # perform operation
fnmsub.s f20, f7, f3, f24, rtz # perform operation
fnmsub.s f20, f7, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f7, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f7, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f7, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f7, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f7, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x22, 0x337c6f2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0xf60464a2 # load x3 with value 0xf60464a2
sw x3, 0(x2) # store 0xf60464a2 in memory
flw f19, 0(x2) # load 0xf60464a2 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fnmsub.s f22, f16, f19, f4, dyn # perform operation
fnmsub.s f22, f16, f19, f4, rdn # perform operation
fnmsub.s f22, f16, f19, f4, rmm # perform operation
fnmsub.s f22, f16, f19, f4, rne # perform operation
fnmsub.s f22, f16, f19, f4, rtz # perform operation
fnmsub.s f22, f16, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x5, 0xf12101d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x374b0076 # load x3 with value 0x374b0076
sw x3, 0(x2) # store 0x374b0076 in memory
flw f17, 0(x2) # load 0x374b0076 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmsub.s f5, f8, f17, f29, dyn # perform operation
fnmsub.s f5, f8, f17, f29, rdn # perform operation
fnmsub.s f5, f8, f17, f29, rmm # perform operation
fnmsub.s f5, f8, f17, f29, rne # perform operation
fnmsub.s f5, f8, f17, f29, rtz # perform operation
fnmsub.s f5, f8, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x22, 0x97f8eb64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x2a6da216 # load x3 with value 0x2a6da216
sw x3, 0(x2) # store 0x2a6da216 in memory
flw f23, 0(x2) # load 0x2a6da216 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmsub.s f22, f25, f23, f20, dyn # perform operation
fnmsub.s f22, f25, f23, f20, rdn # perform operation
fnmsub.s f22, f25, f23, f20, rmm # perform operation
fnmsub.s f22, f25, f23, f20, rne # perform operation
fnmsub.s f22, f25, f23, f20, rtz # perform operation
fnmsub.s f22, f25, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x4, 0x1e68dcac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x293d1874 # load x3 with value 0x293d1874
sw x3, 0(x2) # store 0x293d1874 in memory
flw f2, 0(x2) # load 0x293d1874 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fnmsub.s f4, f14, f2, f20, dyn # perform operation
fnmsub.s f4, f14, f2, f20, rdn # perform operation
fnmsub.s f4, f14, f2, f20, rmm # perform operation
fnmsub.s f4, f14, f2, f20, rne # perform operation
fnmsub.s f4, f14, f2, f20, rtz # perform operation
fnmsub.s f4, f14, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f14, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x5, 0x10b60839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x875ced0d # load x3 with value 0x875ced0d
sw x3, 0(x2) # store 0x875ced0d in memory
flw f26, 0(x2) # load 0x875ced0d from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmsub.s f5, f9, f26, f11, dyn # perform operation
fnmsub.s f5, f9, f26, f11, rdn # perform operation
fnmsub.s f5, f9, f26, f11, rmm # perform operation
fnmsub.s f5, f9, f26, f11, rne # perform operation
fnmsub.s f5, f9, f26, f11, rtz # perform operation
fnmsub.s f5, f9, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f9, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f9, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f9, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f9, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f9, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x5, 0x8ec761f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x6a60af53 # load x3 with value 0x6a60af53
sw x3, 0(x2) # store 0x6a60af53 in memory
flw f2, 0(x2) # load 0x6a60af53 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fnmsub.s f5, f10, f2, f16, dyn # perform operation
fnmsub.s f5, f10, f2, f16, rdn # perform operation
fnmsub.s f5, f10, f2, f16, rmm # perform operation
fnmsub.s f5, f10, f2, f16, rne # perform operation
fnmsub.s f5, f10, f2, f16, rtz # perform operation
fnmsub.s f5, f10, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f10, f2, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x10, 0xfe37ae96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x91a24b07 # load x3 with value 0x91a24b07
sw x3, 0(x2) # store 0x91a24b07 in memory
flw f21, 0(x2) # load 0x91a24b07 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmsub.s f10, f20, f21, f19, dyn # perform operation
fnmsub.s f10, f20, f21, f19, rdn # perform operation
fnmsub.s f10, f20, f21, f19, rmm # perform operation
fnmsub.s f10, f20, f21, f19, rne # perform operation
fnmsub.s f10, f20, f21, f19, rtz # perform operation
fnmsub.s f10, f20, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x12, 0xeed4d900 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x2b9cc25d # load x3 with value 0x2b9cc25d
sw x3, 0(x2) # store 0x2b9cc25d in memory
flw f16, 0(x2) # load 0x2b9cc25d from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fnmsub.s f12, f31, f16, f30, dyn # perform operation
fnmsub.s f12, f31, f16, f30, rdn # perform operation
fnmsub.s f12, f31, f16, f30, rmm # perform operation
fnmsub.s f12, f31, f16, f30, rne # perform operation
fnmsub.s f12, f31, f16, f30, rtz # perform operation
fnmsub.s f12, f31, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f31, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f31, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f31, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f31, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f31, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x11, 0xb77fd511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x7f382460 # load x3 with value 0x7f382460
sw x3, 0(x2) # store 0x7f382460 in memory
flw f14, 0(x2) # load 0x7f382460 from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fnmsub.s f11, f20, f14, f19, dyn # perform operation
fnmsub.s f11, f20, f14, f19, rdn # perform operation
fnmsub.s f11, f20, f14, f19, rmm # perform operation
fnmsub.s f11, f20, f14, f19, rne # perform operation
fnmsub.s f11, f20, f14, f19, rtz # perform operation
fnmsub.s f11, f20, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f20, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x31, 0x2858d70e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x60cda5eb # load x3 with value 0x60cda5eb
sw x3, 0(x2) # store 0x60cda5eb in memory
flw f15, 0(x2) # load 0x60cda5eb from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fnmsub.s f31, f4, f15, f3, dyn # perform operation
fnmsub.s f31, f4, f15, f3, rdn # perform operation
fnmsub.s f31, f4, f15, f3, rmm # perform operation
fnmsub.s f31, f4, f15, f3, rne # perform operation
fnmsub.s f31, f4, f15, f3, rtz # perform operation
fnmsub.s f31, f4, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f4, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x29, 0x8d984e56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xe3270bb9 # load x3 with value 0xe3270bb9
sw x3, 0(x2) # store 0xe3270bb9 in memory
flw f27, 0(x2) # load 0xe3270bb9 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fnmsub.s f29, f22, f27, f18, dyn # perform operation
fnmsub.s f29, f22, f27, f18, rdn # perform operation
fnmsub.s f29, f22, f27, f18, rmm # perform operation
fnmsub.s f29, f22, f27, f18, rne # perform operation
fnmsub.s f29, f22, f27, f18, rtz # perform operation
fnmsub.s f29, f22, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x5, 0xc5998426 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x518a435b # load x3 with value 0x518a435b
sw x3, 0(x2) # store 0x518a435b in memory
flw f19, 0(x2) # load 0x518a435b from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmsub.s f5, f14, f19, f31, dyn # perform operation
fnmsub.s f5, f14, f19, f31, rdn # perform operation
fnmsub.s f5, f14, f19, f31, rmm # perform operation
fnmsub.s f5, f14, f19, f31, rne # perform operation
fnmsub.s f5, f14, f19, f31, rtz # perform operation
fnmsub.s f5, f14, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x5, 0x4e5b22e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x4156a3f3 # load x3 with value 0x4156a3f3
sw x3, 0(x2) # store 0x4156a3f3 in memory
flw f7, 0(x2) # load 0x4156a3f3 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fnmsub.s f5, f4, f7, f10, dyn # perform operation
fnmsub.s f5, f4, f7, f10, rdn # perform operation
fnmsub.s f5, f4, f7, f10, rmm # perform operation
fnmsub.s f5, f4, f7, f10, rne # perform operation
fnmsub.s f5, f4, f7, f10, rtz # perform operation
fnmsub.s f5, f4, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f4, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f4, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f4, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f4, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f4, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x4, 0xa201f84f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x26bbf2f5 # load x3 with value 0x26bbf2f5
sw x3, 0(x2) # store 0x26bbf2f5 in memory
flw f25, 0(x2) # load 0x26bbf2f5 from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmsub.s f4, f3, f25, f30, dyn # perform operation
fnmsub.s f4, f3, f25, f30, rdn # perform operation
fnmsub.s f4, f3, f25, f30, rmm # perform operation
fnmsub.s f4, f3, f25, f30, rne # perform operation
fnmsub.s f4, f3, f25, f30, rtz # perform operation
fnmsub.s f4, f3, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f3, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x8, 0x86783800 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x088e3317 # load x3 with value 0x088e3317
sw x3, 0(x2) # store 0x088e3317 in memory
flw f14, 0(x2) # load 0x088e3317 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmsub.s f8, f13, f14, f17, dyn # perform operation
fnmsub.s f8, f13, f14, f17, rdn # perform operation
fnmsub.s f8, f13, f14, f17, rmm # perform operation
fnmsub.s f8, f13, f14, f17, rne # perform operation
fnmsub.s f8, f13, f14, f17, rtz # perform operation
fnmsub.s f8, f13, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f13, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f13, f14, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x4, 0xbd5b54df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x09a303a3 # load x3 with value 0x09a303a3
sw x3, 0(x2) # store 0x09a303a3 in memory
flw f6, 0(x2) # load 0x09a303a3 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmsub.s f4, f1, f6, f19, dyn # perform operation
fnmsub.s f4, f1, f6, f19, rdn # perform operation
fnmsub.s f4, f1, f6, f19, rmm # perform operation
fnmsub.s f4, f1, f6, f19, rne # perform operation
fnmsub.s f4, f1, f6, f19, rtz # perform operation
fnmsub.s f4, f1, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f1, f6, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x11, 0xcad740e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x947ff29b # load x3 with value 0x947ff29b
sw x3, 0(x2) # store 0x947ff29b in memory
flw f16, 0(x2) # load 0x947ff29b from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmsub.s f11, f23, f16, f14, dyn # perform operation
fnmsub.s f11, f23, f16, f14, rdn # perform operation
fnmsub.s f11, f23, f16, f14, rmm # perform operation
fnmsub.s f11, f23, f16, f14, rne # perform operation
fnmsub.s f11, f23, f16, f14, rtz # perform operation
fnmsub.s f11, f23, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x9, 0x3374a938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x76b5bb19 # load x3 with value 0x76b5bb19
sw x3, 0(x2) # store 0x76b5bb19 in memory
flw f15, 0(x2) # load 0x76b5bb19 from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmsub.s f9, f5, f15, f13, dyn # perform operation
fnmsub.s f9, f5, f15, f13, rdn # perform operation
fnmsub.s f9, f5, f15, f13, rmm # perform operation
fnmsub.s f9, f5, f15, f13, rne # perform operation
fnmsub.s f9, f5, f15, f13, rtz # perform operation
fnmsub.s f9, f5, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f5, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x19, 0xd2b7fce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xefc738c6 # load x3 with value 0xefc738c6
sw x3, 0(x2) # store 0xefc738c6 in memory
flw f21, 0(x2) # load 0xefc738c6 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmsub.s f19, f5, f21, f27, dyn # perform operation
fnmsub.s f19, f5, f21, f27, rdn # perform operation
fnmsub.s f19, f5, f21, f27, rmm # perform operation
fnmsub.s f19, f5, f21, f27, rne # perform operation
fnmsub.s f19, f5, f21, f27, rtz # perform operation
fnmsub.s f19, f5, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x11, 0x5dea3717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x1d5ee889 # load x3 with value 0x1d5ee889
sw x3, 0(x2) # store 0x1d5ee889 in memory
flw f17, 0(x2) # load 0x1d5ee889 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmsub.s f11, f26, f17, f16, dyn # perform operation
fnmsub.s f11, f26, f17, f16, rdn # perform operation
fnmsub.s f11, f26, f17, f16, rmm # perform operation
fnmsub.s f11, f26, f17, f16, rne # perform operation
fnmsub.s f11, f26, f17, f16, rtz # perform operation
fnmsub.s f11, f26, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x8, 0x1d4d377d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0xa0c6c81c # load x3 with value 0xa0c6c81c
sw x3, 0(x2) # store 0xa0c6c81c in memory
flw f1, 0(x2) # load 0xa0c6c81c from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fnmsub.s f8, f15, f1, f7, dyn # perform operation
fnmsub.s f8, f15, f1, f7, rdn # perform operation
fnmsub.s f8, f15, f1, f7, rmm # perform operation
fnmsub.s f8, f15, f1, f7, rne # perform operation
fnmsub.s f8, f15, f1, f7, rtz # perform operation
fnmsub.s f8, f15, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x29, 0x2f728568 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xbf233ffe # load x3 with value 0xbf233ffe
sw x3, 0(x2) # store 0xbf233ffe in memory
flw f6, 0(x2) # load 0xbf233ffe from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmsub.s f29, f19, f6, f15, dyn # perform operation
fnmsub.s f29, f19, f6, f15, rdn # perform operation
fnmsub.s f29, f19, f6, f15, rmm # perform operation
fnmsub.s f29, f19, f6, f15, rne # perform operation
fnmsub.s f29, f19, f6, f15, rtz # perform operation
fnmsub.s f29, f19, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x27, 0x3663547c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x3fbd790f # load x3 with value 0x3fbd790f
sw x3, 0(x2) # store 0x3fbd790f in memory
flw f25, 0(x2) # load 0x3fbd790f from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fnmsub.s f27, f1, f25, f14, dyn # perform operation
fnmsub.s f27, f1, f25, f14, rdn # perform operation
fnmsub.s f27, f1, f25, f14, rmm # perform operation
fnmsub.s f27, f1, f25, f14, rne # perform operation
fnmsub.s f27, f1, f25, f14, rtz # perform operation
fnmsub.s f27, f1, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x22, 0x0b9f06a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0xf626e236 # load x3 with value 0xf626e236
sw x3, 0(x2) # store 0xf626e236 in memory
flw f13, 0(x2) # load 0xf626e236 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmsub.s f22, f27, f13, f14, dyn # perform operation
fnmsub.s f22, f27, f13, f14, rdn # perform operation
fnmsub.s f22, f27, f13, f14, rmm # perform operation
fnmsub.s f22, f27, f13, f14, rne # perform operation
fnmsub.s f22, f27, f13, f14, rtz # perform operation
fnmsub.s f22, f27, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f13, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x13, 0xfc75f066 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xcad6279d # load x3 with value 0xcad6279d
sw x3, 0(x2) # store 0xcad6279d in memory
flw f20, 0(x2) # load 0xcad6279d from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmsub.s f13, f18, f20, f28, dyn # perform operation
fnmsub.s f13, f18, f20, f28, rdn # perform operation
fnmsub.s f13, f18, f20, f28, rmm # perform operation
fnmsub.s f13, f18, f20, f28, rne # perform operation
fnmsub.s f13, f18, f20, f28, rtz # perform operation
fnmsub.s f13, f18, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x16, 0x2d3e79f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x140fc453 # load x3 with value 0x140fc453
sw x3, 0(x2) # store 0x140fc453 in memory
flw f28, 0(x2) # load 0x140fc453 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f16, f8, f28, f22, dyn # perform operation
fnmsub.s f16, f8, f28, f22, rdn # perform operation
fnmsub.s f16, f8, f28, f22, rmm # perform operation
fnmsub.s f16, f8, f28, f22, rne # perform operation
fnmsub.s f16, f8, f28, f22, rtz # perform operation
fnmsub.s f16, f8, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f8, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x19, 0x79e9110c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0xf4fd387b # load x3 with value 0xf4fd387b
sw x3, 0(x2) # store 0xf4fd387b in memory
flw f14, 0(x2) # load 0xf4fd387b from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmsub.s f19, f8, f14, f31, dyn # perform operation
fnmsub.s f19, f8, f14, f31, rdn # perform operation
fnmsub.s f19, f8, f14, f31, rmm # perform operation
fnmsub.s f19, f8, f14, f31, rne # perform operation
fnmsub.s f19, f8, f14, f31, rtz # perform operation
fnmsub.s f19, f8, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f8, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f8, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f8, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f8, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f8, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x29, 0x7bbae0c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x8c0d2b2a # load x3 with value 0x8c0d2b2a
sw x3, 0(x2) # store 0x8c0d2b2a in memory
flw f26, 0(x2) # load 0x8c0d2b2a from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fnmsub.s f29, f18, f26, f20, dyn # perform operation
fnmsub.s f29, f18, f26, f20, rdn # perform operation
fnmsub.s f29, f18, f26, f20, rmm # perform operation
fnmsub.s f29, f18, f26, f20, rne # perform operation
fnmsub.s f29, f18, f26, f20, rtz # perform operation
fnmsub.s f29, f18, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x26, 0x89346f77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xf3fd8bbe # load x3 with value 0xf3fd8bbe
sw x3, 0(x2) # store 0xf3fd8bbe in memory
flw f7, 0(x2) # load 0xf3fd8bbe from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f26, f2, f7, f28, dyn # perform operation
fnmsub.s f26, f2, f7, f28, rdn # perform operation
fnmsub.s f26, f2, f7, f28, rmm # perform operation
fnmsub.s f26, f2, f7, f28, rne # perform operation
fnmsub.s f26, f2, f7, f28, rtz # perform operation
fnmsub.s f26, f2, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x7, 0x61e56138 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x01fbdb89 # load x3 with value 0x01fbdb89
sw x3, 0(x2) # store 0x01fbdb89 in memory
flw f6, 0(x2) # load 0x01fbdb89 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f7, f1, f6, f12, dyn # perform operation
fnmsub.s f7, f1, f6, f12, rdn # perform operation
fnmsub.s f7, f1, f6, f12, rmm # perform operation
fnmsub.s f7, f1, f6, f12, rne # perform operation
fnmsub.s f7, f1, f6, f12, rtz # perform operation
fnmsub.s f7, f1, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f1, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f1, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x8, 0x0ae79601 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x71369ab6 # load x3 with value 0x71369ab6
sw x3, 0(x2) # store 0x71369ab6 in memory
flw f31, 0(x2) # load 0x71369ab6 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmsub.s f8, f13, f31, f22, dyn # perform operation
fnmsub.s f8, f13, f31, f22, rdn # perform operation
fnmsub.s f8, f13, f31, f22, rmm # perform operation
fnmsub.s f8, f13, f31, f22, rne # perform operation
fnmsub.s f8, f13, f31, f22, rtz # perform operation
fnmsub.s f8, f13, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f13, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f13, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f13, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f13, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f13, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x15, 0xf23b8ffe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x57ccdaa9 # load x3 with value 0x57ccdaa9
sw x3, 0(x2) # store 0x57ccdaa9 in memory
flw f20, 0(x2) # load 0x57ccdaa9 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmsub.s f15, f29, f20, f9, dyn # perform operation
fnmsub.s f15, f29, f20, f9, rdn # perform operation
fnmsub.s f15, f29, f20, f9, rmm # perform operation
fnmsub.s f15, f29, f20, f9, rne # perform operation
fnmsub.s f15, f29, f20, f9, rtz # perform operation
fnmsub.s f15, f29, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x9, 0x768c636a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x649f06ff # load x3 with value 0x649f06ff
sw x3, 0(x2) # store 0x649f06ff in memory
flw f30, 0(x2) # load 0x649f06ff from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
fnmsub.s f9, f27, f30, f4, dyn # perform operation
fnmsub.s f9, f27, f30, f4, rdn # perform operation
fnmsub.s f9, f27, f30, f4, rmm # perform operation
fnmsub.s f9, f27, f30, f4, rne # perform operation
fnmsub.s f9, f27, f30, f4, rtz # perform operation
fnmsub.s f9, f27, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f27, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f27, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x17, 0xdab19b57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xc75bdfe2 # load x3 with value 0xc75bdfe2
sw x3, 0(x2) # store 0xc75bdfe2 in memory
flw f23, 0(x2) # load 0xc75bdfe2 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmsub.s f17, f9, f23, f1, dyn # perform operation
fnmsub.s f17, f9, f23, f1, rdn # perform operation
fnmsub.s f17, f9, f23, f1, rmm # perform operation
fnmsub.s f17, f9, f23, f1, rne # perform operation
fnmsub.s f17, f9, f23, f1, rtz # perform operation
fnmsub.s f17, f9, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f9, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x2, 0x511c7efc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0xd75a953c # load x3 with value 0xd75a953c
sw x3, 0(x2) # store 0xd75a953c in memory
flw f1, 0(x2) # load 0xd75a953c from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fnmsub.s f2, f11, f1, f5, dyn # perform operation
fnmsub.s f2, f11, f1, f5, rdn # perform operation
fnmsub.s f2, f11, f1, f5, rmm # perform operation
fnmsub.s f2, f11, f1, f5, rne # perform operation
fnmsub.s f2, f11, f1, f5, rtz # perform operation
fnmsub.s f2, f11, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x5, 0x9a6aa359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x2199336e # load x3 with value 0x2199336e
sw x3, 0(x2) # store 0x2199336e in memory
flw f21, 0(x2) # load 0x2199336e from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmsub.s f5, f22, f21, f1, dyn # perform operation
fnmsub.s f5, f22, f21, f1, rdn # perform operation
fnmsub.s f5, f22, f21, f1, rmm # perform operation
fnmsub.s f5, f22, f21, f1, rne # perform operation
fnmsub.s f5, f22, f21, f1, rtz # perform operation
fnmsub.s f5, f22, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x1, 0x5772988b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xbbcb9ab8 # load x3 with value 0xbbcb9ab8
sw x3, 0(x2) # store 0xbbcb9ab8 in memory
flw f23, 0(x2) # load 0xbbcb9ab8 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmsub.s f1, f4, f23, f21, dyn # perform operation
fnmsub.s f1, f4, f23, f21, rdn # perform operation
fnmsub.s f1, f4, f23, f21, rmm # perform operation
fnmsub.s f1, f4, f23, f21, rne # perform operation
fnmsub.s f1, f4, f23, f21, rtz # perform operation
fnmsub.s f1, f4, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f4, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x2, 0xae83abc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x7d807df0 # load x3 with value 0x7d807df0
sw x3, 0(x2) # store 0x7d807df0 in memory
flw f21, 0(x2) # load 0x7d807df0 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fnmsub.s f2, f26, f21, f15, dyn # perform operation
fnmsub.s f2, f26, f21, f15, rdn # perform operation
fnmsub.s f2, f26, f21, f15, rmm # perform operation
fnmsub.s f2, f26, f21, f15, rne # perform operation
fnmsub.s f2, f26, f21, f15, rtz # perform operation
fnmsub.s f2, f26, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x11, 0x4a493956 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x141388c4 # load x3 with value 0x141388c4
sw x3, 0(x2) # store 0x141388c4 in memory
flw f20, 0(x2) # load 0x141388c4 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmsub.s f11, f6, f20, f14, dyn # perform operation
fnmsub.s f11, f6, f20, f14, rdn # perform operation
fnmsub.s f11, f6, f20, f14, rmm # perform operation
fnmsub.s f11, f6, f20, f14, rne # perform operation
fnmsub.s f11, f6, f20, f14, rtz # perform operation
fnmsub.s f11, f6, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x30, 0xc7193f37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0xe19d4f14 # load x3 with value 0xe19d4f14
sw x3, 0(x2) # store 0xe19d4f14 in memory
flw f28, 0(x2) # load 0xe19d4f14 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmsub.s f30, f26, f28, f15, dyn # perform operation
fnmsub.s f30, f26, f28, f15, rdn # perform operation
fnmsub.s f30, f26, f28, f15, rmm # perform operation
fnmsub.s f30, f26, f28, f15, rne # perform operation
fnmsub.s f30, f26, f28, f15, rtz # perform operation
fnmsub.s f30, f26, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f26, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x19, 0x147695db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x8380a4ef # load x3 with value 0x8380a4ef
sw x3, 0(x2) # store 0x8380a4ef in memory
flw f14, 0(x2) # load 0x8380a4ef from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fnmsub.s f19, f15, f14, f25, dyn # perform operation
fnmsub.s f19, f15, f14, f25, rdn # perform operation
fnmsub.s f19, f15, f14, f25, rmm # perform operation
fnmsub.s f19, f15, f14, f25, rne # perform operation
fnmsub.s f19, f15, f14, f25, rtz # perform operation
fnmsub.s f19, f15, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f15, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x7, 0xfdfa3329 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0xdf8973fd # load x3 with value 0xdf8973fd
sw x3, 0(x2) # store 0xdf8973fd in memory
flw f6, 0(x2) # load 0xdf8973fd from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmsub.s f7, f11, f6, f24, dyn # perform operation
fnmsub.s f7, f11, f6, f24, rdn # perform operation
fnmsub.s f7, f11, f6, f24, rmm # perform operation
fnmsub.s f7, f11, f6, f24, rne # perform operation
fnmsub.s f7, f11, f6, f24, rtz # perform operation
fnmsub.s f7, f11, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f11, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f11, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f11, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f11, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f11, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x4, 0x57c5a53f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x2dafb410 # load x3 with value 0x2dafb410
sw x3, 0(x2) # store 0x2dafb410 in memory
flw f27, 0(x2) # load 0x2dafb410 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fnmsub.s f4, f26, f27, f19, dyn # perform operation
fnmsub.s f4, f26, f27, f19, rdn # perform operation
fnmsub.s f4, f26, f27, f19, rmm # perform operation
fnmsub.s f4, f26, f27, f19, rne # perform operation
fnmsub.s f4, f26, f27, f19, rtz # perform operation
fnmsub.s f4, f26, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f4, f26, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f4, f26, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x10, 0xf6006978 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x92bf9b15 # load x3 with value 0x92bf9b15
sw x3, 0(x2) # store 0x92bf9b15 in memory
flw f19, 0(x2) # load 0x92bf9b15 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fnmsub.s f10, f14, f19, f5, dyn # perform operation
fnmsub.s f10, f14, f19, f5, rdn # perform operation
fnmsub.s f10, f14, f19, f5, rmm # perform operation
fnmsub.s f10, f14, f19, f5, rne # perform operation
fnmsub.s f10, f14, f19, f5, rtz # perform operation
fnmsub.s f10, f14, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x6, 0x9c159441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x3ade02af # load x3 with value 0x3ade02af
sw x3, 0(x2) # store 0x3ade02af in memory
flw f22, 0(x2) # load 0x3ade02af from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmsub.s f6, f21, f22, f7, dyn # perform operation
fnmsub.s f6, f21, f22, f7, rdn # perform operation
fnmsub.s f6, f21, f22, f7, rmm # perform operation
fnmsub.s f6, f21, f22, f7, rne # perform operation
fnmsub.s f6, f21, f22, f7, rtz # perform operation
fnmsub.s f6, f21, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f21, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f21, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x8, 0xf9f63327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x68b36549 # load x3 with value 0x68b36549
sw x3, 0(x2) # store 0x68b36549 in memory
flw f3, 0(x2) # load 0x68b36549 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fnmsub.s f8, f4, f3, f11, dyn # perform operation
fnmsub.s f8, f4, f3, f11, rdn # perform operation
fnmsub.s f8, f4, f3, f11, rmm # perform operation
fnmsub.s f8, f4, f3, f11, rne # perform operation
fnmsub.s f8, f4, f3, f11, rtz # perform operation
fnmsub.s f8, f4, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f4, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f4, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f4, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f4, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f4, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x5, 0x234a3314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x89bcb471 # load x3 with value 0x89bcb471
sw x3, 0(x2) # store 0x89bcb471 in memory
flw f4, 0(x2) # load 0x89bcb471 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmsub.s f5, f14, f4, f25, dyn # perform operation
fnmsub.s f5, f14, f4, f25, rdn # perform operation
fnmsub.s f5, f14, f4, f25, rmm # perform operation
fnmsub.s f5, f14, f4, f25, rne # perform operation
fnmsub.s f5, f14, f4, f25, rtz # perform operation
fnmsub.s f5, f14, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x7, 0x3fdbbeed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0xf83c4f1b # load x3 with value 0xf83c4f1b
sw x3, 0(x2) # store 0xf83c4f1b in memory
flw f21, 0(x2) # load 0xf83c4f1b from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmsub.s f7, f10, f21, f12, dyn # perform operation
fnmsub.s f7, f10, f21, f12, rdn # perform operation
fnmsub.s f7, f10, f21, f12, rmm # perform operation
fnmsub.s f7, f10, f21, f12, rne # perform operation
fnmsub.s f7, f10, f21, f12, rtz # perform operation
fnmsub.s f7, f10, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f10, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f10, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x16, 0x9df4b201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x2bb9636e # load x3 with value 0x2bb9636e
sw x3, 0(x2) # store 0x2bb9636e in memory
flw f14, 0(x2) # load 0x2bb9636e from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmsub.s f16, f25, f14, f31, dyn # perform operation
fnmsub.s f16, f25, f14, f31, rdn # perform operation
fnmsub.s f16, f25, f14, f31, rmm # perform operation
fnmsub.s f16, f25, f14, f31, rne # perform operation
fnmsub.s f16, f25, f14, f31, rtz # perform operation
fnmsub.s f16, f25, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x16, 0x231c5969 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x1b54a769 # load x3 with value 0x1b54a769
sw x3, 0(x2) # store 0x1b54a769 in memory
flw f10, 0(x2) # load 0x1b54a769 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmsub.s f16, f11, f10, f29, dyn # perform operation
fnmsub.s f16, f11, f10, f29, rdn # perform operation
fnmsub.s f16, f11, f10, f29, rmm # perform operation
fnmsub.s f16, f11, f10, f29, rne # perform operation
fnmsub.s f16, f11, f10, f29, rtz # perform operation
fnmsub.s f16, f11, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f11, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f11, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x8, 0x4c314962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x3e44520b # load x3 with value 0x3e44520b
sw x3, 0(x2) # store 0x3e44520b in memory
flw f26, 0(x2) # load 0x3e44520b from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmsub.s f8, f1, f26, f3, dyn # perform operation
fnmsub.s f8, f1, f26, f3, rdn # perform operation
fnmsub.s f8, f1, f26, f3, rmm # perform operation
fnmsub.s f8, f1, f26, f3, rne # perform operation
fnmsub.s f8, f1, f26, f3, rtz # perform operation
fnmsub.s f8, f1, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x10, 0xb3719226 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x18b8b2e6 # load x3 with value 0x18b8b2e6
sw x3, 0(x2) # store 0x18b8b2e6 in memory
flw f23, 0(x2) # load 0x18b8b2e6 from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmsub.s f10, f13, f23, f31, dyn # perform operation
fnmsub.s f10, f13, f23, f31, rdn # perform operation
fnmsub.s f10, f13, f23, f31, rmm # perform operation
fnmsub.s f10, f13, f23, f31, rne # perform operation
fnmsub.s f10, f13, f23, f31, rtz # perform operation
fnmsub.s f10, f13, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f13, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f13, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f13, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f13, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f13, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x7, 0x193b7015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x65b64773 # load x3 with value 0x65b64773
sw x3, 0(x2) # store 0x65b64773 in memory
flw f25, 0(x2) # load 0x65b64773 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmsub.s f7, f5, f25, f31, dyn # perform operation
fnmsub.s f7, f5, f25, f31, rdn # perform operation
fnmsub.s f7, f5, f25, f31, rmm # perform operation
fnmsub.s f7, f5, f25, f31, rne # perform operation
fnmsub.s f7, f5, f25, f31, rtz # perform operation
fnmsub.s f7, f5, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f5, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f5, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f5, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f5, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f5, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x20, 0x478614a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x9d2b36ca # load x3 with value 0x9d2b36ca
sw x3, 0(x2) # store 0x9d2b36ca in memory
flw f3, 0(x2) # load 0x9d2b36ca from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fnmsub.s f20, f19, f3, f8, dyn # perform operation
fnmsub.s f20, f19, f3, f8, rdn # perform operation
fnmsub.s f20, f19, f3, f8, rmm # perform operation
fnmsub.s f20, f19, f3, f8, rne # perform operation
fnmsub.s f20, f19, f3, f8, rtz # perform operation
fnmsub.s f20, f19, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f19, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f19, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f19, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f19, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f19, f3, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x18, 0xe6f55595 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x3bf6b4c1 # load x3 with value 0x3bf6b4c1
sw x3, 0(x2) # store 0x3bf6b4c1 in memory
flw f7, 0(x2) # load 0x3bf6b4c1 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fnmsub.s f18, f2, f7, f31, dyn # perform operation
fnmsub.s f18, f2, f7, f31, rdn # perform operation
fnmsub.s f18, f2, f7, f31, rmm # perform operation
fnmsub.s f18, f2, f7, f31, rne # perform operation
fnmsub.s f18, f2, f7, f31, rtz # perform operation
fnmsub.s f18, f2, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f2, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f2, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x27, 0x227ef5ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x1d2674a5 # load x3 with value 0x1d2674a5
sw x3, 0(x2) # store 0x1d2674a5 in memory
flw f24, 0(x2) # load 0x1d2674a5 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmsub.s f27, f5, f24, f15, dyn # perform operation
fnmsub.s f27, f5, f24, f15, rdn # perform operation
fnmsub.s f27, f5, f24, f15, rmm # perform operation
fnmsub.s f27, f5, f24, f15, rne # perform operation
fnmsub.s f27, f5, f24, f15, rtz # perform operation
fnmsub.s f27, f5, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x17, 0x54909728 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x54f81fc7 # load x3 with value 0x54f81fc7
sw x3, 0(x2) # store 0x54f81fc7 in memory
flw f5, 0(x2) # load 0x54f81fc7 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f17, f4, f5, f24, dyn # perform operation
fnmsub.s f17, f4, f5, f24, rdn # perform operation
fnmsub.s f17, f4, f5, f24, rmm # perform operation
fnmsub.s f17, f4, f5, f24, rne # perform operation
fnmsub.s f17, f4, f5, f24, rtz # perform operation
fnmsub.s f17, f4, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f4, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x19, 0x7ce9dab8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x5df92050 # load x3 with value 0x5df92050
sw x3, 0(x2) # store 0x5df92050 in memory
flw f4, 0(x2) # load 0x5df92050 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fnmsub.s f19, f5, f4, f25, dyn # perform operation
fnmsub.s f19, f5, f4, f25, rdn # perform operation
fnmsub.s f19, f5, f4, f25, rmm # perform operation
fnmsub.s f19, f5, f4, f25, rne # perform operation
fnmsub.s f19, f5, f4, f25, rtz # perform operation
fnmsub.s f19, f5, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x11, 0xa6e9e80a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x4836f253 # load x3 with value 0x4836f253
sw x3, 0(x2) # store 0x4836f253 in memory
flw f6, 0(x2) # load 0x4836f253 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmsub.s f11, f27, f6, f21, dyn # perform operation
fnmsub.s f11, f27, f6, f21, rdn # perform operation
fnmsub.s f11, f27, f6, f21, rmm # perform operation
fnmsub.s f11, f27, f6, f21, rne # perform operation
fnmsub.s f11, f27, f6, f21, rtz # perform operation
fnmsub.s f11, f27, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x16, 0x5c6028ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xf3c287c4 # load x3 with value 0xf3c287c4
sw x3, 0(x2) # store 0xf3c287c4 in memory
flw f23, 0(x2) # load 0xf3c287c4 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmsub.s f16, f12, f23, f28, dyn # perform operation
fnmsub.s f16, f12, f23, f28, rdn # perform operation
fnmsub.s f16, f12, f23, f28, rmm # perform operation
fnmsub.s f16, f12, f23, f28, rne # perform operation
fnmsub.s f16, f12, f23, f28, rtz # perform operation
fnmsub.s f16, f12, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f12, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x31, 0x2e9ec2d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x232c16ad # load x3 with value 0x232c16ad
sw x3, 0(x2) # store 0x232c16ad in memory
flw f13, 0(x2) # load 0x232c16ad from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmsub.s f31, f1, f13, f28, dyn # perform operation
fnmsub.s f31, f1, f13, f28, rdn # perform operation
fnmsub.s f31, f1, f13, f28, rmm # perform operation
fnmsub.s f31, f1, f13, f28, rne # perform operation
fnmsub.s f31, f1, f13, f28, rtz # perform operation
fnmsub.s f31, f1, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x10, 0xe111935b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xb2296b1d # load x3 with value 0xb2296b1d
sw x3, 0(x2) # store 0xb2296b1d in memory
flw f15, 0(x2) # load 0xb2296b1d from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fnmsub.s f10, f25, f15, f14, dyn # perform operation
fnmsub.s f10, f25, f15, f14, rdn # perform operation
fnmsub.s f10, f25, f15, f14, rmm # perform operation
fnmsub.s f10, f25, f15, f14, rne # perform operation
fnmsub.s f10, f25, f15, f14, rtz # perform operation
fnmsub.s f10, f25, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f25, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f25, f15, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x31, 0x0c7f0ec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xcf4907d6 # load x3 with value 0xcf4907d6
sw x3, 0(x2) # store 0xcf4907d6 in memory
flw f2, 0(x2) # load 0xcf4907d6 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmsub.s f31, f6, f2, f20, dyn # perform operation
fnmsub.s f31, f6, f2, f20, rdn # perform operation
fnmsub.s f31, f6, f2, f20, rmm # perform operation
fnmsub.s f31, f6, f2, f20, rne # perform operation
fnmsub.s f31, f6, f2, f20, rtz # perform operation
fnmsub.s f31, f6, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x10, 0x5594bac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0xca1c21e6 # load x3 with value 0xca1c21e6
sw x3, 0(x2) # store 0xca1c21e6 in memory
flw f26, 0(x2) # load 0xca1c21e6 from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fnmsub.s f10, f29, f26, f21, dyn # perform operation
fnmsub.s f10, f29, f26, f21, rdn # perform operation
fnmsub.s f10, f29, f26, f21, rmm # perform operation
fnmsub.s f10, f29, f26, f21, rne # perform operation
fnmsub.s f10, f29, f26, f21, rtz # perform operation
fnmsub.s f10, f29, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x23, 0x632300d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x0f06b157 # load x3 with value 0x0f06b157
sw x3, 0(x2) # store 0x0f06b157 in memory
flw f24, 0(x2) # load 0x0f06b157 from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fnmsub.s f23, f5, f24, f6, dyn # perform operation
fnmsub.s f23, f5, f24, f6, rdn # perform operation
fnmsub.s f23, f5, f24, f6, rmm # perform operation
fnmsub.s f23, f5, f24, f6, rne # perform operation
fnmsub.s f23, f5, f24, f6, rtz # perform operation
fnmsub.s f23, f5, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x7, 0x32874d60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xf06153d6 # load x3 with value 0xf06153d6
sw x3, 0(x2) # store 0xf06153d6 in memory
flw f3, 0(x2) # load 0xf06153d6 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmsub.s f7, f15, f3, f26, dyn # perform operation
fnmsub.s f7, f15, f3, f26, rdn # perform operation
fnmsub.s f7, f15, f3, f26, rmm # perform operation
fnmsub.s f7, f15, f3, f26, rne # perform operation
fnmsub.s f7, f15, f3, f26, rtz # perform operation
fnmsub.s f7, f15, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f15, f3, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x1, 0x88ab6d41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x27c16658 # load x3 with value 0x27c16658
sw x3, 0(x2) # store 0x27c16658 in memory
flw f13, 0(x2) # load 0x27c16658 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmsub.s f1, f29, f13, f16, dyn # perform operation
fnmsub.s f1, f29, f13, f16, rdn # perform operation
fnmsub.s f1, f29, f13, f16, rmm # perform operation
fnmsub.s f1, f29, f13, f16, rne # perform operation
fnmsub.s f1, f29, f13, f16, rtz # perform operation
fnmsub.s f1, f29, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f29, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f29, f13, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x13, 0x5b3b7b13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x07d3a31d # load x3 with value 0x07d3a31d
sw x3, 0(x2) # store 0x07d3a31d in memory
flw f3, 0(x2) # load 0x07d3a31d from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fnmsub.s f13, f19, f3, f12, dyn # perform operation
fnmsub.s f13, f19, f3, f12, rdn # perform operation
fnmsub.s f13, f19, f3, f12, rmm # perform operation
fnmsub.s f13, f19, f3, f12, rne # perform operation
fnmsub.s f13, f19, f3, f12, rtz # perform operation
fnmsub.s f13, f19, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f19, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f19, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x8, 0xc4cef657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x0c2e1dba # load x3 with value 0x0c2e1dba
sw x3, 0(x2) # store 0x0c2e1dba in memory
flw f27, 0(x2) # load 0x0c2e1dba from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fnmsub.s f8, f14, f27, f25, dyn # perform operation
fnmsub.s f8, f14, f27, f25, rdn # perform operation
fnmsub.s f8, f14, f27, f25, rmm # perform operation
fnmsub.s f8, f14, f27, f25, rne # perform operation
fnmsub.s f8, f14, f27, f25, rtz # perform operation
fnmsub.s f8, f14, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x16, 0x02f96302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x97efcadf # load x3 with value 0x97efcadf
sw x3, 0(x2) # store 0x97efcadf in memory
flw f9, 0(x2) # load 0x97efcadf from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fnmsub.s f16, f27, f9, f14, dyn # perform operation
fnmsub.s f16, f27, f9, f14, rdn # perform operation
fnmsub.s f16, f27, f9, f14, rmm # perform operation
fnmsub.s f16, f27, f9, f14, rne # perform operation
fnmsub.s f16, f27, f9, f14, rtz # perform operation
fnmsub.s f16, f27, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x10, 0x77c22957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x93680789 # load x3 with value 0x93680789
sw x3, 0(x2) # store 0x93680789 in memory
flw f30, 0(x2) # load 0x93680789 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmsub.s f10, f2, f30, f22, dyn # perform operation
fnmsub.s f10, f2, f30, f22, rdn # perform operation
fnmsub.s f10, f2, f30, f22, rmm # perform operation
fnmsub.s f10, f2, f30, f22, rne # perform operation
fnmsub.s f10, f2, f30, f22, rtz # perform operation
fnmsub.s f10, f2, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f2, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f2, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f2, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f2, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f2, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x27, 0x3a9fe32e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0xb0f2ef40 # load x3 with value 0xb0f2ef40
sw x3, 0(x2) # store 0xb0f2ef40 in memory
flw f26, 0(x2) # load 0xb0f2ef40 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f27, f1, f26, f3, dyn # perform operation
fnmsub.s f27, f1, f26, f3, rdn # perform operation
fnmsub.s f27, f1, f26, f3, rmm # perform operation
fnmsub.s f27, f1, f26, f3, rne # perform operation
fnmsub.s f27, f1, f26, f3, rtz # perform operation
fnmsub.s f27, f1, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x25, 0x8a51590d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xb18970c3 # load x3 with value 0xb18970c3
sw x3, 0(x2) # store 0xb18970c3 in memory
flw f30, 0(x2) # load 0xb18970c3 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fnmsub.s f25, f21, f30, f15, dyn # perform operation
fnmsub.s f25, f21, f30, f15, rdn # perform operation
fnmsub.s f25, f21, f30, f15, rmm # perform operation
fnmsub.s f25, f21, f30, f15, rne # perform operation
fnmsub.s f25, f21, f30, f15, rtz # perform operation
fnmsub.s f25, f21, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x15, 0x8be03c5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x52c9be43 # load x3 with value 0x52c9be43
sw x3, 0(x2) # store 0x52c9be43 in memory
flw f13, 0(x2) # load 0x52c9be43 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmsub.s f15, f20, f13, f16, dyn # perform operation
fnmsub.s f15, f20, f13, f16, rdn # perform operation
fnmsub.s f15, f20, f13, f16, rmm # perform operation
fnmsub.s f15, f20, f13, f16, rne # perform operation
fnmsub.s f15, f20, f13, f16, rtz # perform operation
fnmsub.s f15, f20, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f20, f13, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x31, 0x584b6a5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x9ca25a12 # load x3 with value 0x9ca25a12
sw x3, 0(x2) # store 0x9ca25a12 in memory
flw f24, 0(x2) # load 0x9ca25a12 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmsub.s f31, f17, f24, f18, dyn # perform operation
fnmsub.s f31, f17, f24, f18, rdn # perform operation
fnmsub.s f31, f17, f24, f18, rmm # perform operation
fnmsub.s f31, f17, f24, f18, rne # perform operation
fnmsub.s f31, f17, f24, f18, rtz # perform operation
fnmsub.s f31, f17, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x26, 0x48411171 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0xbf31eb87 # load x3 with value 0xbf31eb87
sw x3, 0(x2) # store 0xbf31eb87 in memory
flw f5, 0(x2) # load 0xbf31eb87 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fnmsub.s f26, f4, f5, f22, dyn # perform operation
fnmsub.s f26, f4, f5, f22, rdn # perform operation
fnmsub.s f26, f4, f5, f22, rmm # perform operation
fnmsub.s f26, f4, f5, f22, rne # perform operation
fnmsub.s f26, f4, f5, f22, rtz # perform operation
fnmsub.s f26, f4, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f4, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f4, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f4, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f4, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f4, f5, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x18, 0xf6ca9626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x2eb933ab # load x3 with value 0x2eb933ab
sw x3, 0(x2) # store 0x2eb933ab in memory
flw f22, 0(x2) # load 0x2eb933ab from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fnmsub.s f18, f11, f22, f25, dyn # perform operation
fnmsub.s f18, f11, f22, f25, rdn # perform operation
fnmsub.s f18, f11, f22, f25, rmm # perform operation
fnmsub.s f18, f11, f22, f25, rne # perform operation
fnmsub.s f18, f11, f22, f25, rtz # perform operation
fnmsub.s f18, f11, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x28, 0xb4e2f72d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xb0405188 # load x3 with value 0xb0405188
sw x3, 0(x2) # store 0xb0405188 in memory
flw f22, 0(x2) # load 0xb0405188 from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmsub.s f28, f26, f22, f14, dyn # perform operation
fnmsub.s f28, f26, f22, f14, rdn # perform operation
fnmsub.s f28, f26, f22, f14, rmm # perform operation
fnmsub.s f28, f26, f22, f14, rne # perform operation
fnmsub.s f28, f26, f22, f14, rtz # perform operation
fnmsub.s f28, f26, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f26, f22, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x18, 0xa29d2f24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x8166d96a # load x3 with value 0x8166d96a
sw x3, 0(x2) # store 0x8166d96a in memory
flw f21, 0(x2) # load 0x8166d96a from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f18, f6, f21, f19, dyn # perform operation
fnmsub.s f18, f6, f21, f19, rdn # perform operation
fnmsub.s f18, f6, f21, f19, rmm # perform operation
fnmsub.s f18, f6, f21, f19, rne # perform operation
fnmsub.s f18, f6, f21, f19, rtz # perform operation
fnmsub.s f18, f6, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x14, 0x4d4b5880 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x69b51d34 # load x3 with value 0x69b51d34
sw x3, 0(x2) # store 0x69b51d34 in memory
flw f24, 0(x2) # load 0x69b51d34 from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fnmsub.s f14, f10, f24, f8, dyn # perform operation
fnmsub.s f14, f10, f24, f8, rdn # perform operation
fnmsub.s f14, f10, f24, f8, rmm # perform operation
fnmsub.s f14, f10, f24, f8, rne # perform operation
fnmsub.s f14, f10, f24, f8, rtz # perform operation
fnmsub.s f14, f10, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f10, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x27, 0x9ef341a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0xea6ebc7e # load x3 with value 0xea6ebc7e
sw x3, 0(x2) # store 0xea6ebc7e in memory
flw f12, 0(x2) # load 0xea6ebc7e from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fnmsub.s f27, f20, f12, f30, dyn # perform operation
fnmsub.s f27, f20, f12, f30, rdn # perform operation
fnmsub.s f27, f20, f12, f30, rmm # perform operation
fnmsub.s f27, f20, f12, f30, rne # perform operation
fnmsub.s f27, f20, f12, f30, rtz # perform operation
fnmsub.s f27, f20, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x26, 0x7dc36ee7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xbd3e6eba # load x3 with value 0xbd3e6eba
sw x3, 0(x2) # store 0xbd3e6eba in memory
flw f21, 0(x2) # load 0xbd3e6eba from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f26, f23, f21, f12, dyn # perform operation
fnmsub.s f26, f23, f21, f12, rdn # perform operation
fnmsub.s f26, f23, f21, f12, rmm # perform operation
fnmsub.s f26, f23, f21, f12, rne # perform operation
fnmsub.s f26, f23, f21, f12, rtz # perform operation
fnmsub.s f26, f23, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f23, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f23, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f23, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f23, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f23, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x20, 0x28cad876 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x61edaed2 # load x3 with value 0x61edaed2
sw x3, 0(x2) # store 0x61edaed2 in memory
flw f22, 0(x2) # load 0x61edaed2 from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmsub.s f20, f23, f22, f9, dyn # perform operation
fnmsub.s f20, f23, f22, f9, rdn # perform operation
fnmsub.s f20, f23, f22, f9, rmm # perform operation
fnmsub.s f20, f23, f22, f9, rne # perform operation
fnmsub.s f20, f23, f22, f9, rtz # perform operation
fnmsub.s f20, f23, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x28, 0x33094bdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0x5ba08d46 # load x3 with value 0x5ba08d46
sw x3, 0(x2) # store 0x5ba08d46 in memory
flw f18, 0(x2) # load 0x5ba08d46 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
fnmsub.s f28, f8, f18, f4, dyn # perform operation
fnmsub.s f28, f8, f18, f4, rdn # perform operation
fnmsub.s f28, f8, f18, f4, rmm # perform operation
fnmsub.s f28, f8, f18, f4, rne # perform operation
fnmsub.s f28, f8, f18, f4, rtz # perform operation
fnmsub.s f28, f8, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f8, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f8, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f8, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f8, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f8, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x18, 0xcc105d00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x345cb84c # load x3 with value 0x345cb84c
sw x3, 0(x2) # store 0x345cb84c in memory
flw f7, 0(x2) # load 0x345cb84c from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fnmsub.s f18, f27, f7, f3, dyn # perform operation
fnmsub.s f18, f27, f7, f3, rdn # perform operation
fnmsub.s f18, f27, f7, f3, rmm # perform operation
fnmsub.s f18, f27, f7, f3, rne # perform operation
fnmsub.s f18, f27, f7, f3, rtz # perform operation
fnmsub.s f18, f27, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x7, 0x2eeddeb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x4c7f1ac7 # load x3 with value 0x4c7f1ac7
sw x3, 0(x2) # store 0x4c7f1ac7 in memory
flw f29, 0(x2) # load 0x4c7f1ac7 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmsub.s f7, f5, f29, f24, dyn # perform operation
fnmsub.s f7, f5, f29, f24, rdn # perform operation
fnmsub.s f7, f5, f29, f24, rmm # perform operation
fnmsub.s f7, f5, f29, f24, rne # perform operation
fnmsub.s f7, f5, f29, f24, rtz # perform operation
fnmsub.s f7, f5, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f5, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f5, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x20, 0x5bad8660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x76fb64ff # load x3 with value 0x76fb64ff
sw x3, 0(x2) # store 0x76fb64ff in memory
flw f25, 0(x2) # load 0x76fb64ff from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmsub.s f20, f13, f25, f24, dyn # perform operation
fnmsub.s f20, f13, f25, f24, rdn # perform operation
fnmsub.s f20, f13, f25, f24, rmm # perform operation
fnmsub.s f20, f13, f25, f24, rne # perform operation
fnmsub.s f20, f13, f25, f24, rtz # perform operation
fnmsub.s f20, f13, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x21, 0x011e9b19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0xcb3771bb # load x3 with value 0xcb3771bb
sw x3, 0(x2) # store 0xcb3771bb in memory
flw f24, 0(x2) # load 0xcb3771bb from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fnmsub.s f21, f1, f24, f18, dyn # perform operation
fnmsub.s f21, f1, f24, f18, rdn # perform operation
fnmsub.s f21, f1, f24, f18, rmm # perform operation
fnmsub.s f21, f1, f24, f18, rne # perform operation
fnmsub.s f21, f1, f24, f18, rtz # perform operation
fnmsub.s f21, f1, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x9, 0xbee35de7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x1083e62a # load x3 with value 0x1083e62a
sw x3, 0(x2) # store 0x1083e62a in memory
flw f27, 0(x2) # load 0x1083e62a from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmsub.s f9, f30, f27, f10, dyn # perform operation
fnmsub.s f9, f30, f27, f10, rdn # perform operation
fnmsub.s f9, f30, f27, f10, rmm # perform operation
fnmsub.s f9, f30, f27, f10, rne # perform operation
fnmsub.s f9, f30, f27, f10, rtz # perform operation
fnmsub.s f9, f30, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f30, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f30, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f30, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f30, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f30, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x13, 0x130a0b6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x0d4745c3 # load x3 with value 0x0d4745c3
sw x3, 0(x2) # store 0x0d4745c3 in memory
flw f28, 0(x2) # load 0x0d4745c3 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f13, f23, f28, f3, dyn # perform operation
fnmsub.s f13, f23, f28, f3, rdn # perform operation
fnmsub.s f13, f23, f28, f3, rmm # perform operation
fnmsub.s f13, f23, f28, f3, rne # perform operation
fnmsub.s f13, f23, f28, f3, rtz # perform operation
fnmsub.s f13, f23, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x3, 0x0931b14b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x3bfdd66b # load x3 with value 0x3bfdd66b
sw x3, 0(x2) # store 0x3bfdd66b in memory
flw f5, 0(x2) # load 0x3bfdd66b from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmsub.s f3, f22, f5, f18, dyn # perform operation
fnmsub.s f3, f22, f5, f18, rdn # perform operation
fnmsub.s f3, f22, f5, f18, rmm # perform operation
fnmsub.s f3, f22, f5, f18, rne # perform operation
fnmsub.s f3, f22, f5, f18, rtz # perform operation
fnmsub.s f3, f22, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f22, f5, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x27, 0x16d0e3ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xcd49a042 # load x3 with value 0xcd49a042
sw x3, 0(x2) # store 0xcd49a042 in memory
flw f16, 0(x2) # load 0xcd49a042 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fnmsub.s f27, f2, f16, f14, dyn # perform operation
fnmsub.s f27, f2, f16, f14, rdn # perform operation
fnmsub.s f27, f2, f16, f14, rmm # perform operation
fnmsub.s f27, f2, f16, f14, rne # perform operation
fnmsub.s f27, f2, f16, f14, rtz # perform operation
fnmsub.s f27, f2, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x24, 0x20b76e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x6ba89ee2 # load x3 with value 0x6ba89ee2
sw x3, 0(x2) # store 0x6ba89ee2 in memory
flw f1, 0(x2) # load 0x6ba89ee2 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmsub.s f24, f15, f1, f16, dyn # perform operation
fnmsub.s f24, f15, f1, f16, rdn # perform operation
fnmsub.s f24, f15, f1, f16, rmm # perform operation
fnmsub.s f24, f15, f1, f16, rne # perform operation
fnmsub.s f24, f15, f1, f16, rtz # perform operation
fnmsub.s f24, f15, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f15, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f15, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x9, 0x074ad744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x50cb3c71 # load x3 with value 0x50cb3c71
sw x3, 0(x2) # store 0x50cb3c71 in memory
flw f7, 0(x2) # load 0x50cb3c71 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fnmsub.s f9, f25, f7, f11, dyn # perform operation
fnmsub.s f9, f25, f7, f11, rdn # perform operation
fnmsub.s f9, f25, f7, f11, rmm # perform operation
fnmsub.s f9, f25, f7, f11, rne # perform operation
fnmsub.s f9, f25, f7, f11, rtz # perform operation
fnmsub.s f9, f25, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x7, 0x2ea7ad0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x093b0822 # load x3 with value 0x093b0822
sw x3, 0(x2) # store 0x093b0822 in memory
flw f24, 0(x2) # load 0x093b0822 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmsub.s f7, f30, f24, f22, dyn # perform operation
fnmsub.s f7, f30, f24, f22, rdn # perform operation
fnmsub.s f7, f30, f24, f22, rmm # perform operation
fnmsub.s f7, f30, f24, f22, rne # perform operation
fnmsub.s f7, f30, f24, f22, rtz # perform operation
fnmsub.s f7, f30, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x1, 0xfb8c5a32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xdf7019c9 # load x3 with value 0xdf7019c9
sw x3, 0(x2) # store 0xdf7019c9 in memory
flw f5, 0(x2) # load 0xdf7019c9 from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmsub.s f1, f25, f5, f23, dyn # perform operation
fnmsub.s f1, f25, f5, f23, rdn # perform operation
fnmsub.s f1, f25, f5, f23, rmm # perform operation
fnmsub.s f1, f25, f5, f23, rne # perform operation
fnmsub.s f1, f25, f5, f23, rtz # perform operation
fnmsub.s f1, f25, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f25, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f25, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f25, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f25, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f25, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x14, 0x424caa13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x8e065fa9 # load x3 with value 0x8e065fa9
sw x3, 0(x2) # store 0x8e065fa9 in memory
flw f24, 0(x2) # load 0x8e065fa9 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmsub.s f14, f8, f24, f31, dyn # perform operation
fnmsub.s f14, f8, f24, f31, rdn # perform operation
fnmsub.s f14, f8, f24, f31, rmm # perform operation
fnmsub.s f14, f8, f24, f31, rne # perform operation
fnmsub.s f14, f8, f24, f31, rtz # perform operation
fnmsub.s f14, f8, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f8, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f8, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f8, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f8, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f8, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x12, 0x66d4dcbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x9995a312 # load x3 with value 0x9995a312
sw x3, 0(x2) # store 0x9995a312 in memory
flw f20, 0(x2) # load 0x9995a312 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmsub.s f12, f17, f20, f21, dyn # perform operation
fnmsub.s f12, f17, f20, f21, rdn # perform operation
fnmsub.s f12, f17, f20, f21, rmm # perform operation
fnmsub.s f12, f17, f20, f21, rne # perform operation
fnmsub.s f12, f17, f20, f21, rtz # perform operation
fnmsub.s f12, f17, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f17, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x22, 0x453dfefc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x55079d3f # load x3 with value 0x55079d3f
sw x3, 0(x2) # store 0x55079d3f in memory
flw f6, 0(x2) # load 0x55079d3f from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fnmsub.s f22, f30, f6, f20, dyn # perform operation
fnmsub.s f22, f30, f6, f20, rdn # perform operation
fnmsub.s f22, f30, f6, f20, rmm # perform operation
fnmsub.s f22, f30, f6, f20, rne # perform operation
fnmsub.s f22, f30, f6, f20, rtz # perform operation
fnmsub.s f22, f30, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x6, 0x917146bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xa704549e # load x3 with value 0xa704549e
sw x3, 0(x2) # store 0xa704549e in memory
flw f15, 0(x2) # load 0xa704549e from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmsub.s f6, f26, f15, f12, dyn # perform operation
fnmsub.s f6, f26, f15, f12, rdn # perform operation
fnmsub.s f6, f26, f15, f12, rmm # perform operation
fnmsub.s f6, f26, f15, f12, rne # perform operation
fnmsub.s f6, f26, f15, f12, rtz # perform operation
fnmsub.s f6, f26, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f26, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x30, 0x8ae7b81e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x144f43a6 # load x3 with value 0x144f43a6
sw x3, 0(x2) # store 0x144f43a6 in memory
flw f12, 0(x2) # load 0x144f43a6 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmsub.s f30, f17, f12, f7, dyn # perform operation
fnmsub.s f30, f17, f12, f7, rdn # perform operation
fnmsub.s f30, f17, f12, f7, rmm # perform operation
fnmsub.s f30, f17, f12, f7, rne # perform operation
fnmsub.s f30, f17, f12, f7, rtz # perform operation
fnmsub.s f30, f17, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f17, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f17, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f17, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f17, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f17, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x27, 0x83ef29a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x8cf4b711 # load x3 with value 0x8cf4b711
sw x3, 0(x2) # store 0x8cf4b711 in memory
flw f11, 0(x2) # load 0x8cf4b711 from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f27, f28, f11, f18, dyn # perform operation
fnmsub.s f27, f28, f11, f18, rdn # perform operation
fnmsub.s f27, f28, f11, f18, rmm # perform operation
fnmsub.s f27, f28, f11, f18, rne # perform operation
fnmsub.s f27, f28, f11, f18, rtz # perform operation
fnmsub.s f27, f28, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x30, 0x1ff577ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x59fb2593 # load x3 with value 0x59fb2593
sw x3, 0(x2) # store 0x59fb2593 in memory
flw f9, 0(x2) # load 0x59fb2593 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmsub.s f30, f1, f9, f2, dyn # perform operation
fnmsub.s f30, f1, f9, f2, rdn # perform operation
fnmsub.s f30, f1, f9, f2, rmm # perform operation
fnmsub.s f30, f1, f9, f2, rne # perform operation
fnmsub.s f30, f1, f9, f2, rtz # perform operation
fnmsub.s f30, f1, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f1, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x30, 0x9c783c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x313e7cbf # load x3 with value 0x313e7cbf
sw x3, 0(x2) # store 0x313e7cbf in memory
flw f14, 0(x2) # load 0x313e7cbf from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fnmsub.s f30, f11, f14, f21, dyn # perform operation
fnmsub.s f30, f11, f14, f21, rdn # perform operation
fnmsub.s f30, f11, f14, f21, rmm # perform operation
fnmsub.s f30, f11, f14, f21, rne # perform operation
fnmsub.s f30, f11, f14, f21, rtz # perform operation
fnmsub.s f30, f11, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f11, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f11, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f11, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f11, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f11, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x12, 0xd1c32171 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0xdd27d6e8 # load x3 with value 0xdd27d6e8
sw x3, 0(x2) # store 0xdd27d6e8 in memory
flw f7, 0(x2) # load 0xdd27d6e8 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fnmsub.s f12, f30, f7, f13, dyn # perform operation
fnmsub.s f12, f30, f7, f13, rdn # perform operation
fnmsub.s f12, f30, f7, f13, rmm # perform operation
fnmsub.s f12, f30, f7, f13, rne # perform operation
fnmsub.s f12, f30, f7, f13, rtz # perform operation
fnmsub.s f12, f30, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f30, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f30, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x21, 0x10e8900c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x0c154e8c # load x3 with value 0x0c154e8c
sw x3, 0(x2) # store 0x0c154e8c in memory
flw f3, 0(x2) # load 0x0c154e8c from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fnmsub.s f21, f30, f3, f25, dyn # perform operation
fnmsub.s f21, f30, f3, f25, rdn # perform operation
fnmsub.s f21, f30, f3, f25, rmm # perform operation
fnmsub.s f21, f30, f3, f25, rne # perform operation
fnmsub.s f21, f30, f3, f25, rtz # perform operation
fnmsub.s f21, f30, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x7, 0xee02254d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xc61177ab # load x3 with value 0xc61177ab
sw x3, 0(x2) # store 0xc61177ab in memory
flw f13, 0(x2) # load 0xc61177ab from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmsub.s f7, f28, f13, f9, dyn # perform operation
fnmsub.s f7, f28, f13, f9, rdn # perform operation
fnmsub.s f7, f28, f13, f9, rmm # perform operation
fnmsub.s f7, f28, f13, f9, rne # perform operation
fnmsub.s f7, f28, f13, f9, rtz # perform operation
fnmsub.s f7, f28, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f28, f13, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x29, 0x1bf34e96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x3184e938 # load x3 with value 0x3184e938
sw x3, 0(x2) # store 0x3184e938 in memory
flw f19, 0(x2) # load 0x3184e938 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmsub.s f29, f21, f19, f6, dyn # perform operation
fnmsub.s f29, f21, f19, f6, rdn # perform operation
fnmsub.s f29, f21, f19, f6, rmm # perform operation
fnmsub.s f29, f21, f19, f6, rne # perform operation
fnmsub.s f29, f21, f19, f6, rtz # perform operation
fnmsub.s f29, f21, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f21, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x20, 0xd5c1e302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x5ce9d3ce # load x3 with value 0x5ce9d3ce
sw x3, 0(x2) # store 0x5ce9d3ce in memory
flw f8, 0(x2) # load 0x5ce9d3ce from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmsub.s f20, f4, f8, f17, dyn # perform operation
fnmsub.s f20, f4, f8, f17, rdn # perform operation
fnmsub.s f20, f4, f8, f17, rmm # perform operation
fnmsub.s f20, f4, f8, f17, rne # perform operation
fnmsub.s f20, f4, f8, f17, rtz # perform operation
fnmsub.s f20, f4, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f4, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x9, 0x2eff860c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0xe7d46574 # load x3 with value 0xe7d46574
sw x3, 0(x2) # store 0xe7d46574 in memory
flw f14, 0(x2) # load 0xe7d46574 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fnmsub.s f9, f19, f14, f18, dyn # perform operation
fnmsub.s f9, f19, f14, f18, rdn # perform operation
fnmsub.s f9, f19, f14, f18, rmm # perform operation
fnmsub.s f9, f19, f14, f18, rne # perform operation
fnmsub.s f9, f19, f14, f18, rtz # perform operation
fnmsub.s f9, f19, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f19, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f19, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f19, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f19, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f19, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x20, 0x50a5e7f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x37aea2d9 # load x3 with value 0x37aea2d9
sw x3, 0(x2) # store 0x37aea2d9 in memory
flw f21, 0(x2) # load 0x37aea2d9 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f20, f17, f21, f14, dyn # perform operation
fnmsub.s f20, f17, f21, f14, rdn # perform operation
fnmsub.s f20, f17, f21, f14, rmm # perform operation
fnmsub.s f20, f17, f21, f14, rne # perform operation
fnmsub.s f20, f17, f21, f14, rtz # perform operation
fnmsub.s f20, f17, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f17, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x10, 0xb2f1004b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x67a97ad1 # load x3 with value 0x67a97ad1
sw x3, 0(x2) # store 0x67a97ad1 in memory
flw f5, 0(x2) # load 0x67a97ad1 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmsub.s f10, f23, f5, f13, dyn # perform operation
fnmsub.s f10, f23, f5, f13, rdn # perform operation
fnmsub.s f10, f23, f5, f13, rmm # perform operation
fnmsub.s f10, f23, f5, f13, rne # perform operation
fnmsub.s f10, f23, f5, f13, rtz # perform operation
fnmsub.s f10, f23, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f23, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f23, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f23, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f23, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f23, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x1, 0x0b7760d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x76e66d18 # load x3 with value 0x76e66d18
sw x3, 0(x2) # store 0x76e66d18 in memory
flw f26, 0(x2) # load 0x76e66d18 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fnmsub.s f1, f14, f26, f18, dyn # perform operation
fnmsub.s f1, f14, f26, f18, rdn # perform operation
fnmsub.s f1, f14, f26, f18, rmm # perform operation
fnmsub.s f1, f14, f26, f18, rne # perform operation
fnmsub.s f1, f14, f26, f18, rtz # perform operation
fnmsub.s f1, f14, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f14, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x29, 0x79dfe0e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0xb4d50228 # load x3 with value 0xb4d50228
sw x3, 0(x2) # store 0xb4d50228 in memory
flw f21, 0(x2) # load 0xb4d50228 from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmsub.s f29, f3, f21, f17, dyn # perform operation
fnmsub.s f29, f3, f21, f17, rdn # perform operation
fnmsub.s f29, f3, f21, f17, rmm # perform operation
fnmsub.s f29, f3, f21, f17, rne # perform operation
fnmsub.s f29, f3, f21, f17, rtz # perform operation
fnmsub.s f29, f3, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x7, 0xc5f1d4aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x751d172a # load x3 with value 0x751d172a
sw x3, 0(x2) # store 0x751d172a in memory
flw f11, 0(x2) # load 0x751d172a from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmsub.s f7, f18, f11, f10, dyn # perform operation
fnmsub.s f7, f18, f11, f10, rdn # perform operation
fnmsub.s f7, f18, f11, f10, rmm # perform operation
fnmsub.s f7, f18, f11, f10, rne # perform operation
fnmsub.s f7, f18, f11, f10, rtz # perform operation
fnmsub.s f7, f18, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f18, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x28, 0x3e210a51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xa25d339b # load x3 with value 0xa25d339b
sw x3, 0(x2) # store 0xa25d339b in memory
flw f30, 0(x2) # load 0xa25d339b from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmsub.s f28, f22, f30, f2, dyn # perform operation
fnmsub.s f28, f22, f30, f2, rdn # perform operation
fnmsub.s f28, f22, f30, f2, rmm # perform operation
fnmsub.s f28, f22, f30, f2, rne # perform operation
fnmsub.s f28, f22, f30, f2, rtz # perform operation
fnmsub.s f28, f22, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f22, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f22, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x16, 0x7bdf27b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x19586d46 # load x3 with value 0x19586d46
sw x3, 0(x2) # store 0x19586d46 in memory
flw f29, 0(x2) # load 0x19586d46 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fnmsub.s f16, f27, f29, f20, dyn # perform operation
fnmsub.s f16, f27, f29, f20, rdn # perform operation
fnmsub.s f16, f27, f29, f20, rmm # perform operation
fnmsub.s f16, f27, f29, f20, rne # perform operation
fnmsub.s f16, f27, f29, f20, rtz # perform operation
fnmsub.s f16, f27, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f29, f20 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xe16228c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40e9be34 # load x3 with value 0x40e9be34
sw x3, 0(x2) # store 0x40e9be34 in memory
flw f7, 0(x2) # load 0x40e9be34 from memory into f7
li x3, 0x19a2f88d # load x3 with value 0x19a2f88d
sw x3, 0(x2) # store 0x19a2f88d in memory
flw f8, 0(x2) # load 0x19a2f88d from memory into f8
li x3, 0xb92488b6 # load x3 with value 0xb92488b6
sw x3, 0(x2) # store 0xb92488b6 in memory
flw f2, 0(x2) # load 0xb92488b6 from memory into f2
fnmsub.s f0, f7, f8, f2 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x1b4a18da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfcef8823 # load x3 with value 0xfcef8823
sw x3, 0(x2) # store 0xfcef8823 in memory
flw f31, 0(x2) # load 0xfcef8823 from memory into f31
li x3, 0xbef6833d # load x3 with value 0xbef6833d
sw x3, 0(x2) # store 0xbef6833d in memory
flw f13, 0(x2) # load 0xbef6833d from memory into f13
li x3, 0x55d9e55a # load x3 with value 0x55d9e55a
sw x3, 0(x2) # store 0x55d9e55a in memory
flw f18, 0(x2) # load 0x55d9e55a from memory into f18
fnmsub.s f1, f31, f13, f18 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xa33c2447 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95e2f0a5 # load x3 with value 0x95e2f0a5
sw x3, 0(x2) # store 0x95e2f0a5 in memory
flw f22, 0(x2) # load 0x95e2f0a5 from memory into f22
li x3, 0x65811482 # load x3 with value 0x65811482
sw x3, 0(x2) # store 0x65811482 in memory
flw f13, 0(x2) # load 0x65811482 from memory into f13
li x3, 0x00783a69 # load x3 with value 0x00783a69
sw x3, 0(x2) # store 0x00783a69 in memory
flw f3, 0(x2) # load 0x00783a69 from memory into f3
fnmsub.s f2, f22, f13, f3 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x1126e283 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf94d0ab7 # load x3 with value 0xf94d0ab7
sw x3, 0(x2) # store 0xf94d0ab7 in memory
flw f6, 0(x2) # load 0xf94d0ab7 from memory into f6
li x3, 0x35741238 # load x3 with value 0x35741238
sw x3, 0(x2) # store 0x35741238 in memory
flw f20, 0(x2) # load 0x35741238 from memory into f20
li x3, 0x5a53e0d5 # load x3 with value 0x5a53e0d5
sw x3, 0(x2) # store 0x5a53e0d5 in memory
flw f30, 0(x2) # load 0x5a53e0d5 from memory into f30
fnmsub.s f3, f6, f20, f30 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x4cc5af82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x780bea38 # load x3 with value 0x780bea38
sw x3, 0(x2) # store 0x780bea38 in memory
flw f28, 0(x2) # load 0x780bea38 from memory into f28
li x3, 0x41fdce92 # load x3 with value 0x41fdce92
sw x3, 0(x2) # store 0x41fdce92 in memory
flw f7, 0(x2) # load 0x41fdce92 from memory into f7
li x3, 0xde8271cf # load x3 with value 0xde8271cf
sw x3, 0(x2) # store 0xde8271cf in memory
flw f10, 0(x2) # load 0xde8271cf from memory into f10
fnmsub.s f4, f28, f7, f10 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x670f937c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e3c4fc3 # load x3 with value 0x1e3c4fc3
sw x3, 0(x2) # store 0x1e3c4fc3 in memory
flw f5, 0(x2) # load 0x1e3c4fc3 from memory into f5
li x3, 0xcba713d3 # load x3 with value 0xcba713d3
sw x3, 0(x2) # store 0xcba713d3 in memory
flw f4, 0(x2) # load 0xcba713d3 from memory into f4
li x3, 0x2d006404 # load x3 with value 0x2d006404
sw x3, 0(x2) # store 0x2d006404 in memory
flw f18, 0(x2) # load 0x2d006404 from memory into f18
fnmsub.s f5, f5, f4, f18 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x7bce6457 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e0434f1 # load x3 with value 0x4e0434f1
sw x3, 0(x2) # store 0x4e0434f1 in memory
flw f31, 0(x2) # load 0x4e0434f1 from memory into f31
li x3, 0xdb65b2c1 # load x3 with value 0xdb65b2c1
sw x3, 0(x2) # store 0xdb65b2c1 in memory
flw f19, 0(x2) # load 0xdb65b2c1 from memory into f19
li x3, 0xfc580648 # load x3 with value 0xfc580648
sw x3, 0(x2) # store 0xfc580648 in memory
flw f21, 0(x2) # load 0xfc580648 from memory into f21
fnmsub.s f6, f31, f19, f21 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0xd14c2b76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bc7b4e9 # load x3 with value 0x9bc7b4e9
sw x3, 0(x2) # store 0x9bc7b4e9 in memory
flw f20, 0(x2) # load 0x9bc7b4e9 from memory into f20
li x3, 0x4b986869 # load x3 with value 0x4b986869
sw x3, 0(x2) # store 0x4b986869 in memory
flw f16, 0(x2) # load 0x4b986869 from memory into f16
li x3, 0xe3b047fb # load x3 with value 0xe3b047fb
sw x3, 0(x2) # store 0xe3b047fb in memory
flw f15, 0(x2) # load 0xe3b047fb from memory into f15
fnmsub.s f7, f20, f16, f15 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x4a8d1c6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8cf885eb # load x3 with value 0x8cf885eb
sw x3, 0(x2) # store 0x8cf885eb in memory
flw f5, 0(x2) # load 0x8cf885eb from memory into f5
li x3, 0x5f9bde85 # load x3 with value 0x5f9bde85
sw x3, 0(x2) # store 0x5f9bde85 in memory
flw f17, 0(x2) # load 0x5f9bde85 from memory into f17
li x3, 0x80452439 # load x3 with value 0x80452439
sw x3, 0(x2) # store 0x80452439 in memory
flw f30, 0(x2) # load 0x80452439 from memory into f30
fnmsub.s f8, f5, f17, f30 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0xc10020f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5e893c55 # load x3 with value 0x5e893c55
sw x3, 0(x2) # store 0x5e893c55 in memory
flw f12, 0(x2) # load 0x5e893c55 from memory into f12
li x3, 0x693a63bd # load x3 with value 0x693a63bd
sw x3, 0(x2) # store 0x693a63bd in memory
flw f18, 0(x2) # load 0x693a63bd from memory into f18
li x3, 0x3b58dc09 # load x3 with value 0x3b58dc09
sw x3, 0(x2) # store 0x3b58dc09 in memory
flw f24, 0(x2) # load 0x3b58dc09 from memory into f24
fnmsub.s f9, f12, f18, f24 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x982dfa4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6423c538 # load x3 with value 0x6423c538
sw x3, 0(x2) # store 0x6423c538 in memory
flw f4, 0(x2) # load 0x6423c538 from memory into f4
li x3, 0x87c8b0db # load x3 with value 0x87c8b0db
sw x3, 0(x2) # store 0x87c8b0db in memory
flw f20, 0(x2) # load 0x87c8b0db from memory into f20
li x3, 0x6029588a # load x3 with value 0x6029588a
sw x3, 0(x2) # store 0x6029588a in memory
flw f6, 0(x2) # load 0x6029588a from memory into f6
fnmsub.s f10, f4, f20, f6 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x249eebf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6de08f63 # load x3 with value 0x6de08f63
sw x3, 0(x2) # store 0x6de08f63 in memory
flw f30, 0(x2) # load 0x6de08f63 from memory into f30
li x3, 0xd59a77d4 # load x3 with value 0xd59a77d4
sw x3, 0(x2) # store 0xd59a77d4 in memory
flw f11, 0(x2) # load 0xd59a77d4 from memory into f11
li x3, 0xafc79b4b # load x3 with value 0xafc79b4b
sw x3, 0(x2) # store 0xafc79b4b in memory
flw f19, 0(x2) # load 0xafc79b4b from memory into f19
fnmsub.s f11, f30, f11, f19 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x89d228be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5fa76acf # load x3 with value 0x5fa76acf
sw x3, 0(x2) # store 0x5fa76acf in memory
flw f10, 0(x2) # load 0x5fa76acf from memory into f10
li x3, 0x72cbe981 # load x3 with value 0x72cbe981
sw x3, 0(x2) # store 0x72cbe981 in memory
flw f21, 0(x2) # load 0x72cbe981 from memory into f21
li x3, 0xcb89bc29 # load x3 with value 0xcb89bc29
sw x3, 0(x2) # store 0xcb89bc29 in memory
flw f26, 0(x2) # load 0xcb89bc29 from memory into f26
fnmsub.s f12, f10, f21, f26 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x626a1f1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa74732a # load x3 with value 0xfa74732a
sw x3, 0(x2) # store 0xfa74732a in memory
flw f9, 0(x2) # load 0xfa74732a from memory into f9
li x3, 0x6d1f944d # load x3 with value 0x6d1f944d
sw x3, 0(x2) # store 0x6d1f944d in memory
flw f19, 0(x2) # load 0x6d1f944d from memory into f19
li x3, 0x3164f307 # load x3 with value 0x3164f307
sw x3, 0(x2) # store 0x3164f307 in memory
flw f21, 0(x2) # load 0x3164f307 from memory into f21
fnmsub.s f13, f9, f19, f21 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x32fc5da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd5377a8 # load x3 with value 0xfd5377a8
sw x3, 0(x2) # store 0xfd5377a8 in memory
flw f15, 0(x2) # load 0xfd5377a8 from memory into f15
li x3, 0x222ba307 # load x3 with value 0x222ba307
sw x3, 0(x2) # store 0x222ba307 in memory
flw f7, 0(x2) # load 0x222ba307 from memory into f7
li x3, 0x7fc22f8d # load x3 with value 0x7fc22f8d
sw x3, 0(x2) # store 0x7fc22f8d in memory
flw f12, 0(x2) # load 0x7fc22f8d from memory into f12
fnmsub.s f14, f15, f7, f12 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xf247d9d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0590c3a # load x3 with value 0xe0590c3a
sw x3, 0(x2) # store 0xe0590c3a in memory
flw f18, 0(x2) # load 0xe0590c3a from memory into f18
li x3, 0x4762ce55 # load x3 with value 0x4762ce55
sw x3, 0(x2) # store 0x4762ce55 in memory
flw f25, 0(x2) # load 0x4762ce55 from memory into f25
li x3, 0xd4726044 # load x3 with value 0xd4726044
sw x3, 0(x2) # store 0xd4726044 in memory
flw f21, 0(x2) # load 0xd4726044 from memory into f21
fnmsub.s f15, f18, f25, f21 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x059c43f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaec409cb # load x3 with value 0xaec409cb
sw x3, 0(x2) # store 0xaec409cb in memory
flw f20, 0(x2) # load 0xaec409cb from memory into f20
li x3, 0xda3637dd # load x3 with value 0xda3637dd
sw x3, 0(x2) # store 0xda3637dd in memory
flw f12, 0(x2) # load 0xda3637dd from memory into f12
li x3, 0x9f54a492 # load x3 with value 0x9f54a492
sw x3, 0(x2) # store 0x9f54a492 in memory
flw f25, 0(x2) # load 0x9f54a492 from memory into f25
fnmsub.s f16, f20, f12, f25 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x943cf282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd3872bfd # load x3 with value 0xd3872bfd
sw x3, 0(x2) # store 0xd3872bfd in memory
flw f22, 0(x2) # load 0xd3872bfd from memory into f22
li x3, 0x85f2ccd1 # load x3 with value 0x85f2ccd1
sw x3, 0(x2) # store 0x85f2ccd1 in memory
flw f31, 0(x2) # load 0x85f2ccd1 from memory into f31
li x3, 0x40da3147 # load x3 with value 0x40da3147
sw x3, 0(x2) # store 0x40da3147 in memory
flw f14, 0(x2) # load 0x40da3147 from memory into f14
fnmsub.s f17, f22, f31, f14 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0xd5ffb2f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x298bb36b # load x3 with value 0x298bb36b
sw x3, 0(x2) # store 0x298bb36b in memory
flw f22, 0(x2) # load 0x298bb36b from memory into f22
li x3, 0x75596a59 # load x3 with value 0x75596a59
sw x3, 0(x2) # store 0x75596a59 in memory
flw f13, 0(x2) # load 0x75596a59 from memory into f13
li x3, 0x43bff891 # load x3 with value 0x43bff891
sw x3, 0(x2) # store 0x43bff891 in memory
flw f23, 0(x2) # load 0x43bff891 from memory into f23
fnmsub.s f18, f22, f13, f23 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x9e957c1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87aa22f0 # load x3 with value 0x87aa22f0
sw x3, 0(x2) # store 0x87aa22f0 in memory
flw f2, 0(x2) # load 0x87aa22f0 from memory into f2
li x3, 0x2aa435f6 # load x3 with value 0x2aa435f6
sw x3, 0(x2) # store 0x2aa435f6 in memory
flw f16, 0(x2) # load 0x2aa435f6 from memory into f16
li x3, 0xa26abce8 # load x3 with value 0xa26abce8
sw x3, 0(x2) # store 0xa26abce8 in memory
flw f15, 0(x2) # load 0xa26abce8 from memory into f15
fnmsub.s f19, f2, f16, f15 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x78df205a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc62f29aa # load x3 with value 0xc62f29aa
sw x3, 0(x2) # store 0xc62f29aa in memory
flw f21, 0(x2) # load 0xc62f29aa from memory into f21
li x3, 0xd8394428 # load x3 with value 0xd8394428
sw x3, 0(x2) # store 0xd8394428 in memory
flw f7, 0(x2) # load 0xd8394428 from memory into f7
li x3, 0x13bec0d2 # load x3 with value 0x13bec0d2
sw x3, 0(x2) # store 0x13bec0d2 in memory
flw f4, 0(x2) # load 0x13bec0d2 from memory into f4
fnmsub.s f20, f21, f7, f4 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0xe88c021c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd8581c6 # load x3 with value 0xbd8581c6
sw x3, 0(x2) # store 0xbd8581c6 in memory
flw f17, 0(x2) # load 0xbd8581c6 from memory into f17
li x3, 0xf3353ab4 # load x3 with value 0xf3353ab4
sw x3, 0(x2) # store 0xf3353ab4 in memory
flw f6, 0(x2) # load 0xf3353ab4 from memory into f6
li x3, 0x56d97d7b # load x3 with value 0x56d97d7b
sw x3, 0(x2) # store 0x56d97d7b in memory
flw f19, 0(x2) # load 0x56d97d7b from memory into f19
fnmsub.s f21, f17, f6, f19 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x6bfcdcfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe9e886ae # load x3 with value 0xe9e886ae
sw x3, 0(x2) # store 0xe9e886ae in memory
flw f19, 0(x2) # load 0xe9e886ae from memory into f19
li x3, 0x6d9e57d6 # load x3 with value 0x6d9e57d6
sw x3, 0(x2) # store 0x6d9e57d6 in memory
flw f7, 0(x2) # load 0x6d9e57d6 from memory into f7
li x3, 0x46cae48f # load x3 with value 0x46cae48f
sw x3, 0(x2) # store 0x46cae48f in memory
flw f10, 0(x2) # load 0x46cae48f from memory into f10
fnmsub.s f22, f19, f7, f10 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x4c247fd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd4c20a4 # load x3 with value 0xbd4c20a4
sw x3, 0(x2) # store 0xbd4c20a4 in memory
flw f7, 0(x2) # load 0xbd4c20a4 from memory into f7
li x3, 0x12b2d73a # load x3 with value 0x12b2d73a
sw x3, 0(x2) # store 0x12b2d73a in memory
flw f6, 0(x2) # load 0x12b2d73a from memory into f6
li x3, 0xc420bf60 # load x3 with value 0xc420bf60
sw x3, 0(x2) # store 0xc420bf60 in memory
flw f13, 0(x2) # load 0xc420bf60 from memory into f13
fnmsub.s f23, f7, f6, f13 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0xb331a5e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b673386 # load x3 with value 0x6b673386
sw x3, 0(x2) # store 0x6b673386 in memory
flw f31, 0(x2) # load 0x6b673386 from memory into f31
li x3, 0xee7d6037 # load x3 with value 0xee7d6037
sw x3, 0(x2) # store 0xee7d6037 in memory
flw f18, 0(x2) # load 0xee7d6037 from memory into f18
li x3, 0x265aee3a # load x3 with value 0x265aee3a
sw x3, 0(x2) # store 0x265aee3a in memory
flw f22, 0(x2) # load 0x265aee3a from memory into f22
fnmsub.s f24, f31, f18, f22 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x999f696d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0ae0fa41 # load x3 with value 0x0ae0fa41
sw x3, 0(x2) # store 0x0ae0fa41 in memory
flw f17, 0(x2) # load 0x0ae0fa41 from memory into f17
li x3, 0x50a4bda4 # load x3 with value 0x50a4bda4
sw x3, 0(x2) # store 0x50a4bda4 in memory
flw f2, 0(x2) # load 0x50a4bda4 from memory into f2
li x3, 0xd344c2f7 # load x3 with value 0xd344c2f7
sw x3, 0(x2) # store 0xd344c2f7 in memory
flw f25, 0(x2) # load 0xd344c2f7 from memory into f25
fnmsub.s f25, f17, f2, f25 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0xe543631d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0ddd137 # load x3 with value 0xc0ddd137
sw x3, 0(x2) # store 0xc0ddd137 in memory
flw f29, 0(x2) # load 0xc0ddd137 from memory into f29
li x3, 0x6c2ae53a # load x3 with value 0x6c2ae53a
sw x3, 0(x2) # store 0x6c2ae53a in memory
flw f15, 0(x2) # load 0x6c2ae53a from memory into f15
li x3, 0x0c2f9760 # load x3 with value 0x0c2f9760
sw x3, 0(x2) # store 0x0c2f9760 in memory
flw f4, 0(x2) # load 0x0c2f9760 from memory into f4
fnmsub.s f26, f29, f15, f4 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xb1b84b65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5bbe26c5 # load x3 with value 0x5bbe26c5
sw x3, 0(x2) # store 0x5bbe26c5 in memory
flw f8, 0(x2) # load 0x5bbe26c5 from memory into f8
li x3, 0x47f3410e # load x3 with value 0x47f3410e
sw x3, 0(x2) # store 0x47f3410e in memory
flw f27, 0(x2) # load 0x47f3410e from memory into f27
li x3, 0x1801860d # load x3 with value 0x1801860d
sw x3, 0(x2) # store 0x1801860d in memory
flw f28, 0(x2) # load 0x1801860d from memory into f28
fnmsub.s f27, f8, f27, f28 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xdc0484ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe40d9420 # load x3 with value 0xe40d9420
sw x3, 0(x2) # store 0xe40d9420 in memory
flw f9, 0(x2) # load 0xe40d9420 from memory into f9
li x3, 0x542460e6 # load x3 with value 0x542460e6
sw x3, 0(x2) # store 0x542460e6 in memory
flw f2, 0(x2) # load 0x542460e6 from memory into f2
li x3, 0x99109b05 # load x3 with value 0x99109b05
sw x3, 0(x2) # store 0x99109b05 in memory
flw f26, 0(x2) # load 0x99109b05 from memory into f26
fnmsub.s f28, f9, f2, f26 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x65d9ec20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf181eb22 # load x3 with value 0xf181eb22
sw x3, 0(x2) # store 0xf181eb22 in memory
flw f21, 0(x2) # load 0xf181eb22 from memory into f21
li x3, 0x09e9a2ca # load x3 with value 0x09e9a2ca
sw x3, 0(x2) # store 0x09e9a2ca in memory
flw f27, 0(x2) # load 0x09e9a2ca from memory into f27
li x3, 0x3ccc2d1f # load x3 with value 0x3ccc2d1f
sw x3, 0(x2) # store 0x3ccc2d1f in memory
flw f29, 0(x2) # load 0x3ccc2d1f from memory into f29
fnmsub.s f29, f21, f27, f29 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x3b78d79a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6b47007 # load x3 with value 0xf6b47007
sw x3, 0(x2) # store 0xf6b47007 in memory
flw f20, 0(x2) # load 0xf6b47007 from memory into f20
li x3, 0x81a518a1 # load x3 with value 0x81a518a1
sw x3, 0(x2) # store 0x81a518a1 in memory
flw f11, 0(x2) # load 0x81a518a1 from memory into f11
li x3, 0xa86d5827 # load x3 with value 0xa86d5827
sw x3, 0(x2) # store 0xa86d5827 in memory
flw f8, 0(x2) # load 0xa86d5827 from memory into f8
fnmsub.s f30, f20, f11, f8 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x567baf19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x05e5b925 # load x3 with value 0x05e5b925
sw x3, 0(x2) # store 0x05e5b925 in memory
flw f25, 0(x2) # load 0x05e5b925 from memory into f25
li x3, 0x8954b231 # load x3 with value 0x8954b231
sw x3, 0(x2) # store 0x8954b231 in memory
flw f29, 0(x2) # load 0x8954b231 from memory into f29
li x3, 0xcf34c83c # load x3 with value 0xcf34c83c
sw x3, 0(x2) # store 0xcf34c83c in memory
flw f16, 0(x2) # load 0xcf34c83c from memory into f16
fnmsub.s f31, f25, f29, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x16, 0x6a8c5e00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62cf453f # load x3 with value 0x62cf453f
sw x3, 0(x2) # store 0x62cf453f in memory
flw f0, 0(x2) # load 0x62cf453f from memory into f0
li x3, 0xd796e8cf # load x3 with value 0xd796e8cf
sw x3, 0(x2) # store 0xd796e8cf in memory
flw f10, 0(x2) # load 0xd796e8cf from memory into f10
li x3, 0x1f6c8cb9 # load x3 with value 0x1f6c8cb9
sw x3, 0(x2) # store 0x1f6c8cb9 in memory
flw f9, 0(x2) # load 0x1f6c8cb9 from memory into f9
fnmsub.s f16, f0, f10, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x18, 0x23440916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x08ffe74f # load x3 with value 0x08ffe74f
sw x3, 0(x2) # store 0x08ffe74f in memory
flw f1, 0(x2) # load 0x08ffe74f from memory into f1
li x3, 0x6634c58e # load x3 with value 0x6634c58e
sw x3, 0(x2) # store 0x6634c58e in memory
flw f8, 0(x2) # load 0x6634c58e from memory into f8
li x3, 0x51ddf6cd # load x3 with value 0x51ddf6cd
sw x3, 0(x2) # store 0x51ddf6cd in memory
flw f19, 0(x2) # load 0x51ddf6cd from memory into f19
fnmsub.s f18, f1, f8, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x4, 0x7c9d37cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x005f753c # load x3 with value 0x005f753c
sw x3, 0(x2) # store 0x005f753c in memory
flw f2, 0(x2) # load 0x005f753c from memory into f2
li x3, 0x2886a049 # load x3 with value 0x2886a049
sw x3, 0(x2) # store 0x2886a049 in memory
flw f28, 0(x2) # load 0x2886a049 from memory into f28
li x3, 0x682ab6fd # load x3 with value 0x682ab6fd
sw x3, 0(x2) # store 0x682ab6fd in memory
flw f27, 0(x2) # load 0x682ab6fd from memory into f27
fnmsub.s f4, f2, f28, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x17, 0x4bdb687e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0e89d6bb # load x3 with value 0x0e89d6bb
sw x3, 0(x2) # store 0x0e89d6bb in memory
flw f3, 0(x2) # load 0x0e89d6bb from memory into f3
li x3, 0x360b9a3c # load x3 with value 0x360b9a3c
sw x3, 0(x2) # store 0x360b9a3c in memory
flw f9, 0(x2) # load 0x360b9a3c from memory into f9
li x3, 0x9a120447 # load x3 with value 0x9a120447
sw x3, 0(x2) # store 0x9a120447 in memory
flw f3, 0(x2) # load 0x9a120447 from memory into f3
fnmsub.s f17, f3, f9, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x16, 0xde6e34f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb01f9147 # load x3 with value 0xb01f9147
sw x3, 0(x2) # store 0xb01f9147 in memory
flw f4, 0(x2) # load 0xb01f9147 from memory into f4
li x3, 0xad048f08 # load x3 with value 0xad048f08
sw x3, 0(x2) # store 0xad048f08 in memory
flw f17, 0(x2) # load 0xad048f08 from memory into f17
li x3, 0xba571cb8 # load x3 with value 0xba571cb8
sw x3, 0(x2) # store 0xba571cb8 in memory
flw f19, 0(x2) # load 0xba571cb8 from memory into f19
fnmsub.s f16, f4, f17, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x15, 0xf6089cf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc921d469 # load x3 with value 0xc921d469
sw x3, 0(x2) # store 0xc921d469 in memory
flw f5, 0(x2) # load 0xc921d469 from memory into f5
li x3, 0x72852c74 # load x3 with value 0x72852c74
sw x3, 0(x2) # store 0x72852c74 in memory
flw f29, 0(x2) # load 0x72852c74 from memory into f29
li x3, 0x8eff7861 # load x3 with value 0x8eff7861
sw x3, 0(x2) # store 0x8eff7861 in memory
flw f3, 0(x2) # load 0x8eff7861 from memory into f3
fnmsub.s f15, f5, f29, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x16, 0xad3684fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44215808 # load x3 with value 0x44215808
sw x3, 0(x2) # store 0x44215808 in memory
flw f6, 0(x2) # load 0x44215808 from memory into f6
li x3, 0x7a5527cd # load x3 with value 0x7a5527cd
sw x3, 0(x2) # store 0x7a5527cd in memory
flw f13, 0(x2) # load 0x7a5527cd from memory into f13
li x3, 0x9cd6191c # load x3 with value 0x9cd6191c
sw x3, 0(x2) # store 0x9cd6191c in memory
flw f28, 0(x2) # load 0x9cd6191c from memory into f28
fnmsub.s f16, f6, f13, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x23, 0x7523cc94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x91344e06 # load x3 with value 0x91344e06
sw x3, 0(x2) # store 0x91344e06 in memory
flw f7, 0(x2) # load 0x91344e06 from memory into f7
li x3, 0x2c5754e9 # load x3 with value 0x2c5754e9
sw x3, 0(x2) # store 0x2c5754e9 in memory
flw f2, 0(x2) # load 0x2c5754e9 from memory into f2
li x3, 0x8495a457 # load x3 with value 0x8495a457
sw x3, 0(x2) # store 0x8495a457 in memory
flw f3, 0(x2) # load 0x8495a457 from memory into f3
fnmsub.s f23, f7, f2, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x9, 0x78b3b753 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xce21be4e # load x3 with value 0xce21be4e
sw x3, 0(x2) # store 0xce21be4e in memory
flw f8, 0(x2) # load 0xce21be4e from memory into f8
li x3, 0x4e06d597 # load x3 with value 0x4e06d597
sw x3, 0(x2) # store 0x4e06d597 in memory
flw f16, 0(x2) # load 0x4e06d597 from memory into f16
li x3, 0xb8a733e2 # load x3 with value 0xb8a733e2
sw x3, 0(x2) # store 0xb8a733e2 in memory
flw f20, 0(x2) # load 0xb8a733e2 from memory into f20
fnmsub.s f9, f8, f16, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x1, 0x0d6f85db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x471aacd9 # load x3 with value 0x471aacd9
sw x3, 0(x2) # store 0x471aacd9 in memory
flw f9, 0(x2) # load 0x471aacd9 from memory into f9
li x3, 0x79339da1 # load x3 with value 0x79339da1
sw x3, 0(x2) # store 0x79339da1 in memory
flw f25, 0(x2) # load 0x79339da1 from memory into f25
li x3, 0x1c45d333 # load x3 with value 0x1c45d333
sw x3, 0(x2) # store 0x1c45d333 in memory
flw f29, 0(x2) # load 0x1c45d333 from memory into f29
fnmsub.s f1, f9, f25, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x23, 0xcb0c48e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6662dd36 # load x3 with value 0x6662dd36
sw x3, 0(x2) # store 0x6662dd36 in memory
flw f10, 0(x2) # load 0x6662dd36 from memory into f10
li x3, 0xcf4ae57b # load x3 with value 0xcf4ae57b
sw x3, 0(x2) # store 0xcf4ae57b in memory
flw f24, 0(x2) # load 0xcf4ae57b from memory into f24
li x3, 0x86a2509c # load x3 with value 0x86a2509c
sw x3, 0(x2) # store 0x86a2509c in memory
flw f19, 0(x2) # load 0x86a2509c from memory into f19
fnmsub.s f23, f10, f24, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x28, 0x1a9d073f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x175df5e4 # load x3 with value 0x175df5e4
sw x3, 0(x2) # store 0x175df5e4 in memory
flw f11, 0(x2) # load 0x175df5e4 from memory into f11
li x3, 0xecaed5d6 # load x3 with value 0xecaed5d6
sw x3, 0(x2) # store 0xecaed5d6 in memory
flw f2, 0(x2) # load 0xecaed5d6 from memory into f2
li x3, 0x20ad6ef4 # load x3 with value 0x20ad6ef4
sw x3, 0(x2) # store 0x20ad6ef4 in memory
flw f21, 0(x2) # load 0x20ad6ef4 from memory into f21
fnmsub.s f28, f11, f2, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x22, 0x527acc38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93c8a7df # load x3 with value 0x93c8a7df
sw x3, 0(x2) # store 0x93c8a7df in memory
flw f12, 0(x2) # load 0x93c8a7df from memory into f12
li x3, 0x97932862 # load x3 with value 0x97932862
sw x3, 0(x2) # store 0x97932862 in memory
flw f20, 0(x2) # load 0x97932862 from memory into f20
li x3, 0x8e916c64 # load x3 with value 0x8e916c64
sw x3, 0(x2) # store 0x8e916c64 in memory
flw f25, 0(x2) # load 0x8e916c64 from memory into f25
fnmsub.s f22, f12, f20, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x4, 0x8c71c782 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ab1e4cb # load x3 with value 0x6ab1e4cb
sw x3, 0(x2) # store 0x6ab1e4cb in memory
flw f13, 0(x2) # load 0x6ab1e4cb from memory into f13
li x3, 0x4fa66b1c # load x3 with value 0x4fa66b1c
sw x3, 0(x2) # store 0x4fa66b1c in memory
flw f22, 0(x2) # load 0x4fa66b1c from memory into f22
li x3, 0xd05a05c6 # load x3 with value 0xd05a05c6
sw x3, 0(x2) # store 0xd05a05c6 in memory
flw f27, 0(x2) # load 0xd05a05c6 from memory into f27
fnmsub.s f4, f13, f22, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x5, 0x2888244f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf89333d3 # load x3 with value 0xf89333d3
sw x3, 0(x2) # store 0xf89333d3 in memory
flw f14, 0(x2) # load 0xf89333d3 from memory into f14
li x3, 0x519c9d0b # load x3 with value 0x519c9d0b
sw x3, 0(x2) # store 0x519c9d0b in memory
flw f8, 0(x2) # load 0x519c9d0b from memory into f8
li x3, 0xe8c0485a # load x3 with value 0xe8c0485a
sw x3, 0(x2) # store 0xe8c0485a in memory
flw f9, 0(x2) # load 0xe8c0485a from memory into f9
fnmsub.s f5, f14, f8, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x23, 0xf4838ca5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9cdd387 # load x3 with value 0xb9cdd387
sw x3, 0(x2) # store 0xb9cdd387 in memory
flw f15, 0(x2) # load 0xb9cdd387 from memory into f15
li x3, 0xf2b54983 # load x3 with value 0xf2b54983
sw x3, 0(x2) # store 0xf2b54983 in memory
flw f29, 0(x2) # load 0xf2b54983 from memory into f29
li x3, 0xc8d03d21 # load x3 with value 0xc8d03d21
sw x3, 0(x2) # store 0xc8d03d21 in memory
flw f20, 0(x2) # load 0xc8d03d21 from memory into f20
fnmsub.s f23, f15, f29, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x10, 0xca70e0cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf9364908 # load x3 with value 0xf9364908
sw x3, 0(x2) # store 0xf9364908 in memory
flw f16, 0(x2) # load 0xf9364908 from memory into f16
li x3, 0x2b9cd488 # load x3 with value 0x2b9cd488
sw x3, 0(x2) # store 0x2b9cd488 in memory
flw f6, 0(x2) # load 0x2b9cd488 from memory into f6
li x3, 0xb4407c8f # load x3 with value 0xb4407c8f
sw x3, 0(x2) # store 0xb4407c8f in memory
flw f18, 0(x2) # load 0xb4407c8f from memory into f18
fnmsub.s f10, f16, f6, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x14, 0xc3bbe6f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x403fb7e4 # load x3 with value 0x403fb7e4
sw x3, 0(x2) # store 0x403fb7e4 in memory
flw f17, 0(x2) # load 0x403fb7e4 from memory into f17
li x3, 0x957d0481 # load x3 with value 0x957d0481
sw x3, 0(x2) # store 0x957d0481 in memory
flw f25, 0(x2) # load 0x957d0481 from memory into f25
li x3, 0x39716215 # load x3 with value 0x39716215
sw x3, 0(x2) # store 0x39716215 in memory
flw f13, 0(x2) # load 0x39716215 from memory into f13
fnmsub.s f14, f17, f25, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x16, 0x57787f92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6126381f # load x3 with value 0x6126381f
sw x3, 0(x2) # store 0x6126381f in memory
flw f18, 0(x2) # load 0x6126381f from memory into f18
li x3, 0x0390a11e # load x3 with value 0x0390a11e
sw x3, 0(x2) # store 0x0390a11e in memory
flw f4, 0(x2) # load 0x0390a11e from memory into f4
li x3, 0x27f14282 # load x3 with value 0x27f14282
sw x3, 0(x2) # store 0x27f14282 in memory
flw f3, 0(x2) # load 0x27f14282 from memory into f3
fnmsub.s f16, f18, f4, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x4, 0x4d380c46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x30641cc0 # load x3 with value 0x30641cc0
sw x3, 0(x2) # store 0x30641cc0 in memory
flw f19, 0(x2) # load 0x30641cc0 from memory into f19
li x3, 0x7b06915f # load x3 with value 0x7b06915f
sw x3, 0(x2) # store 0x7b06915f in memory
flw f6, 0(x2) # load 0x7b06915f from memory into f6
li x3, 0x38f9bb6a # load x3 with value 0x38f9bb6a
sw x3, 0(x2) # store 0x38f9bb6a in memory
flw f10, 0(x2) # load 0x38f9bb6a from memory into f10
fnmsub.s f4, f19, f6, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x1, 0xe1362dd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x68de1395 # load x3 with value 0x68de1395
sw x3, 0(x2) # store 0x68de1395 in memory
flw f20, 0(x2) # load 0x68de1395 from memory into f20
li x3, 0x9f06e1e8 # load x3 with value 0x9f06e1e8
sw x3, 0(x2) # store 0x9f06e1e8 in memory
flw f28, 0(x2) # load 0x9f06e1e8 from memory into f28
li x3, 0xd60fc9a4 # load x3 with value 0xd60fc9a4
sw x3, 0(x2) # store 0xd60fc9a4 in memory
flw f30, 0(x2) # load 0xd60fc9a4 from memory into f30
fnmsub.s f1, f20, f28, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x20, 0xe04d409e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf58b23a7 # load x3 with value 0xf58b23a7
sw x3, 0(x2) # store 0xf58b23a7 in memory
flw f21, 0(x2) # load 0xf58b23a7 from memory into f21
li x3, 0x79956981 # load x3 with value 0x79956981
sw x3, 0(x2) # store 0x79956981 in memory
flw f2, 0(x2) # load 0x79956981 from memory into f2
li x3, 0x84892369 # load x3 with value 0x84892369
sw x3, 0(x2) # store 0x84892369 in memory
flw f5, 0(x2) # load 0x84892369 from memory into f5
fnmsub.s f20, f21, f2, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x14, 0x68abf04e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3bf97cd2 # load x3 with value 0x3bf97cd2
sw x3, 0(x2) # store 0x3bf97cd2 in memory
flw f22, 0(x2) # load 0x3bf97cd2 from memory into f22
li x3, 0xc53186c1 # load x3 with value 0xc53186c1
sw x3, 0(x2) # store 0xc53186c1 in memory
flw f28, 0(x2) # load 0xc53186c1 from memory into f28
li x3, 0x33aa1332 # load x3 with value 0x33aa1332
sw x3, 0(x2) # store 0x33aa1332 in memory
flw f6, 0(x2) # load 0x33aa1332 from memory into f6
fnmsub.s f14, f22, f28, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x31, 0x46a40e1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe9f2ad88 # load x3 with value 0xe9f2ad88
sw x3, 0(x2) # store 0xe9f2ad88 in memory
flw f23, 0(x2) # load 0xe9f2ad88 from memory into f23
li x3, 0x1c489a42 # load x3 with value 0x1c489a42
sw x3, 0(x2) # store 0x1c489a42 in memory
flw f27, 0(x2) # load 0x1c489a42 from memory into f27
li x3, 0x21b6bd07 # load x3 with value 0x21b6bd07
sw x3, 0(x2) # store 0x21b6bd07 in memory
flw f23, 0(x2) # load 0x21b6bd07 from memory into f23
fnmsub.s f31, f23, f27, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x10, 0x48b769b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a527aef # load x3 with value 0x0a527aef
sw x3, 0(x2) # store 0x0a527aef in memory
flw f24, 0(x2) # load 0x0a527aef from memory into f24
li x3, 0x25226b7c # load x3 with value 0x25226b7c
sw x3, 0(x2) # store 0x25226b7c in memory
flw f22, 0(x2) # load 0x25226b7c from memory into f22
li x3, 0xac0e862b # load x3 with value 0xac0e862b
sw x3, 0(x2) # store 0xac0e862b in memory
flw f30, 0(x2) # load 0xac0e862b from memory into f30
fnmsub.s f10, f24, f22, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x12, 0x9f14d77c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c0e3d72 # load x3 with value 0x8c0e3d72
sw x3, 0(x2) # store 0x8c0e3d72 in memory
flw f25, 0(x2) # load 0x8c0e3d72 from memory into f25
li x3, 0x3d6ea61e # load x3 with value 0x3d6ea61e
sw x3, 0(x2) # store 0x3d6ea61e in memory
flw f2, 0(x2) # load 0x3d6ea61e from memory into f2
li x3, 0xa25048ac # load x3 with value 0xa25048ac
sw x3, 0(x2) # store 0xa25048ac in memory
flw f7, 0(x2) # load 0xa25048ac from memory into f7
fnmsub.s f12, f25, f2, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x3, 0x233379f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9877a53a # load x3 with value 0x9877a53a
sw x3, 0(x2) # store 0x9877a53a in memory
flw f26, 0(x2) # load 0x9877a53a from memory into f26
li x3, 0x25a60fef # load x3 with value 0x25a60fef
sw x3, 0(x2) # store 0x25a60fef in memory
flw f17, 0(x2) # load 0x25a60fef from memory into f17
li x3, 0xeacefdf3 # load x3 with value 0xeacefdf3
sw x3, 0(x2) # store 0xeacefdf3 in memory
flw f12, 0(x2) # load 0xeacefdf3 from memory into f12
fnmsub.s f3, f26, f17, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x22, 0xbbf2039f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55d3fdea # load x3 with value 0x55d3fdea
sw x3, 0(x2) # store 0x55d3fdea in memory
flw f27, 0(x2) # load 0x55d3fdea from memory into f27
li x3, 0x79ac10c3 # load x3 with value 0x79ac10c3
sw x3, 0(x2) # store 0x79ac10c3 in memory
flw f23, 0(x2) # load 0x79ac10c3 from memory into f23
li x3, 0xf6eaaa86 # load x3 with value 0xf6eaaa86
sw x3, 0(x2) # store 0xf6eaaa86 in memory
flw f31, 0(x2) # load 0xf6eaaa86 from memory into f31
fnmsub.s f22, f27, f23, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x19, 0x9998b2a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8b92876 # load x3 with value 0xe8b92876
sw x3, 0(x2) # store 0xe8b92876 in memory
flw f28, 0(x2) # load 0xe8b92876 from memory into f28
li x3, 0x367aae9f # load x3 with value 0x367aae9f
sw x3, 0(x2) # store 0x367aae9f in memory
flw f15, 0(x2) # load 0x367aae9f from memory into f15
li x3, 0x9b73b127 # load x3 with value 0x9b73b127
sw x3, 0(x2) # store 0x9b73b127 in memory
flw f13, 0(x2) # load 0x9b73b127 from memory into f13
fnmsub.s f19, f28, f15, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x9, 0x72f209ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x56343665 # load x3 with value 0x56343665
sw x3, 0(x2) # store 0x56343665 in memory
flw f29, 0(x2) # load 0x56343665 from memory into f29
li x3, 0x33a1a97f # load x3 with value 0x33a1a97f
sw x3, 0(x2) # store 0x33a1a97f in memory
flw f22, 0(x2) # load 0x33a1a97f from memory into f22
li x3, 0x2f32144e # load x3 with value 0x2f32144e
sw x3, 0(x2) # store 0x2f32144e in memory
flw f14, 0(x2) # load 0x2f32144e from memory into f14
fnmsub.s f9, f29, f22, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x19, 0x7dacf3da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x770e1f01 # load x3 with value 0x770e1f01
sw x3, 0(x2) # store 0x770e1f01 in memory
flw f30, 0(x2) # load 0x770e1f01 from memory into f30
li x3, 0xde77109e # load x3 with value 0xde77109e
sw x3, 0(x2) # store 0xde77109e in memory
flw f22, 0(x2) # load 0xde77109e from memory into f22
li x3, 0xe5d4bac4 # load x3 with value 0xe5d4bac4
sw x3, 0(x2) # store 0xe5d4bac4 in memory
flw f9, 0(x2) # load 0xe5d4bac4 from memory into f9
fnmsub.s f19, f30, f22, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x27, 0x5d917648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d180353 # load x3 with value 0x7d180353
sw x3, 0(x2) # store 0x7d180353 in memory
flw f31, 0(x2) # load 0x7d180353 from memory into f31
li x3, 0x352c8349 # load x3 with value 0x352c8349
sw x3, 0(x2) # store 0x352c8349 in memory
flw f10, 0(x2) # load 0x352c8349 from memory into f10
li x3, 0xda411b64 # load x3 with value 0xda411b64
sw x3, 0(x2) # store 0xda411b64 in memory
flw f5, 0(x2) # load 0xda411b64 from memory into f5
fnmsub.s f27, f31, f10, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x11, 0x8cfff557 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2799a10a # load x3 with value 0x2799a10a
sw x3, 0(x2) # store 0x2799a10a in memory
flw f8, 0(x2) # load 0x2799a10a from memory into f8
li x3, 0xab4c0e66 # load x3 with value 0xab4c0e66
sw x3, 0(x2) # store 0xab4c0e66 in memory
flw f0, 0(x2) # load 0xab4c0e66 from memory into f0
li x3, 0x3a265b33 # load x3 with value 0x3a265b33
sw x3, 0(x2) # store 0x3a265b33 in memory
flw f21, 0(x2) # load 0x3a265b33 from memory into f21
fnmsub.s f11, f8, f0, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x1, 0xe0c4454e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x21953464 # load x3 with value 0x21953464
sw x3, 0(x2) # store 0x21953464 in memory
flw f23, 0(x2) # load 0x21953464 from memory into f23
li x3, 0xd6e94795 # load x3 with value 0xd6e94795
sw x3, 0(x2) # store 0xd6e94795 in memory
flw f1, 0(x2) # load 0xd6e94795 from memory into f1
li x3, 0xa5706c77 # load x3 with value 0xa5706c77
sw x3, 0(x2) # store 0xa5706c77 in memory
flw f5, 0(x2) # load 0xa5706c77 from memory into f5
fnmsub.s f1, f23, f1, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x1, 0x9b374c82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa48e3308 # load x3 with value 0xa48e3308
sw x3, 0(x2) # store 0xa48e3308 in memory
flw f14, 0(x2) # load 0xa48e3308 from memory into f14
li x3, 0x3df8ca82 # load x3 with value 0x3df8ca82
sw x3, 0(x2) # store 0x3df8ca82 in memory
flw f2, 0(x2) # load 0x3df8ca82 from memory into f2
li x3, 0x32ca0716 # load x3 with value 0x32ca0716
sw x3, 0(x2) # store 0x32ca0716 in memory
flw f15, 0(x2) # load 0x32ca0716 from memory into f15
fnmsub.s f1, f14, f2, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x3, 0x9ce82fff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0182b30 # load x3 with value 0xd0182b30
sw x3, 0(x2) # store 0xd0182b30 in memory
flw f22, 0(x2) # load 0xd0182b30 from memory into f22
li x3, 0xb9102c5c # load x3 with value 0xb9102c5c
sw x3, 0(x2) # store 0xb9102c5c in memory
flw f3, 0(x2) # load 0xb9102c5c from memory into f3
li x3, 0x367669e0 # load x3 with value 0x367669e0
sw x3, 0(x2) # store 0x367669e0 in memory
flw f14, 0(x2) # load 0x367669e0 from memory into f14
fnmsub.s f3, f22, f3, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x22, 0x32c5ebf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1959a9a9 # load x3 with value 0x1959a9a9
sw x3, 0(x2) # store 0x1959a9a9 in memory
flw f28, 0(x2) # load 0x1959a9a9 from memory into f28
li x3, 0xaa19eb23 # load x3 with value 0xaa19eb23
sw x3, 0(x2) # store 0xaa19eb23 in memory
flw f4, 0(x2) # load 0xaa19eb23 from memory into f4
li x3, 0x603d0b8e # load x3 with value 0x603d0b8e
sw x3, 0(x2) # store 0x603d0b8e in memory
flw f18, 0(x2) # load 0x603d0b8e from memory into f18
fnmsub.s f22, f28, f4, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x17, 0x0f05f909 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e6b41d6 # load x3 with value 0x1e6b41d6
sw x3, 0(x2) # store 0x1e6b41d6 in memory
flw f15, 0(x2) # load 0x1e6b41d6 from memory into f15
li x3, 0x427f9c21 # load x3 with value 0x427f9c21
sw x3, 0(x2) # store 0x427f9c21 in memory
flw f5, 0(x2) # load 0x427f9c21 from memory into f5
li x3, 0xfb2c25a7 # load x3 with value 0xfb2c25a7
sw x3, 0(x2) # store 0xfb2c25a7 in memory
flw f6, 0(x2) # load 0xfb2c25a7 from memory into f6
fnmsub.s f17, f15, f5, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x8, 0x0075d602 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x380a9080 # load x3 with value 0x380a9080
sw x3, 0(x2) # store 0x380a9080 in memory
flw f11, 0(x2) # load 0x380a9080 from memory into f11
li x3, 0x7b3408b7 # load x3 with value 0x7b3408b7
sw x3, 0(x2) # store 0x7b3408b7 in memory
flw f6, 0(x2) # load 0x7b3408b7 from memory into f6
li x3, 0x5207b5f0 # load x3 with value 0x5207b5f0
sw x3, 0(x2) # store 0x5207b5f0 in memory
flw f5, 0(x2) # load 0x5207b5f0 from memory into f5
fnmsub.s f8, f11, f6, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x16, 0xb2199b50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x82e40d5d # load x3 with value 0x82e40d5d
sw x3, 0(x2) # store 0x82e40d5d in memory
flw f20, 0(x2) # load 0x82e40d5d from memory into f20
li x3, 0xdf83bc3d # load x3 with value 0xdf83bc3d
sw x3, 0(x2) # store 0xdf83bc3d in memory
flw f7, 0(x2) # load 0xdf83bc3d from memory into f7
li x3, 0x78573649 # load x3 with value 0x78573649
sw x3, 0(x2) # store 0x78573649 in memory
flw f29, 0(x2) # load 0x78573649 from memory into f29
fnmsub.s f16, f20, f7, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x31, 0x0b7ed430 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a9e8466 # load x3 with value 0x8a9e8466
sw x3, 0(x2) # store 0x8a9e8466 in memory
flw f25, 0(x2) # load 0x8a9e8466 from memory into f25
li x3, 0xad43d650 # load x3 with value 0xad43d650
sw x3, 0(x2) # store 0xad43d650 in memory
flw f8, 0(x2) # load 0xad43d650 from memory into f8
li x3, 0x75f39015 # load x3 with value 0x75f39015
sw x3, 0(x2) # store 0x75f39015 in memory
flw f28, 0(x2) # load 0x75f39015 from memory into f28
fnmsub.s f31, f25, f8, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x4, 0xfb4c313c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x695d1621 # load x3 with value 0x695d1621
sw x3, 0(x2) # store 0x695d1621 in memory
flw f16, 0(x2) # load 0x695d1621 from memory into f16
li x3, 0x29d2568c # load x3 with value 0x29d2568c
sw x3, 0(x2) # store 0x29d2568c in memory
flw f9, 0(x2) # load 0x29d2568c from memory into f9
li x3, 0x288ce8c8 # load x3 with value 0x288ce8c8
sw x3, 0(x2) # store 0x288ce8c8 in memory
flw f8, 0(x2) # load 0x288ce8c8 from memory into f8
fnmsub.s f4, f16, f9, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x17, 0x557f3768 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf7f3ae6f # load x3 with value 0xf7f3ae6f
sw x3, 0(x2) # store 0xf7f3ae6f in memory
flw f7, 0(x2) # load 0xf7f3ae6f from memory into f7
li x3, 0x75316024 # load x3 with value 0x75316024
sw x3, 0(x2) # store 0x75316024 in memory
flw f10, 0(x2) # load 0x75316024 from memory into f10
li x3, 0x7515204c # load x3 with value 0x7515204c
sw x3, 0(x2) # store 0x7515204c in memory
flw f31, 0(x2) # load 0x7515204c from memory into f31
fnmsub.s f17, f7, f10, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x10, 0x6c260f4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaddd4c77 # load x3 with value 0xaddd4c77
sw x3, 0(x2) # store 0xaddd4c77 in memory
flw f30, 0(x2) # load 0xaddd4c77 from memory into f30
li x3, 0x698c3ba4 # load x3 with value 0x698c3ba4
sw x3, 0(x2) # store 0x698c3ba4 in memory
flw f11, 0(x2) # load 0x698c3ba4 from memory into f11
li x3, 0x0962d053 # load x3 with value 0x0962d053
sw x3, 0(x2) # store 0x0962d053 in memory
flw f1, 0(x2) # load 0x0962d053 from memory into f1
fnmsub.s f10, f30, f11, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x23, 0x956c8609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd37db736 # load x3 with value 0xd37db736
sw x3, 0(x2) # store 0xd37db736 in memory
flw f22, 0(x2) # load 0xd37db736 from memory into f22
li x3, 0x02acaafa # load x3 with value 0x02acaafa
sw x3, 0(x2) # store 0x02acaafa in memory
flw f12, 0(x2) # load 0x02acaafa from memory into f12
li x3, 0xf3a65020 # load x3 with value 0xf3a65020
sw x3, 0(x2) # store 0xf3a65020 in memory
flw f26, 0(x2) # load 0xf3a65020 from memory into f26
fnmsub.s f23, f22, f12, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x4, 0xe1911ad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfef9da6d # load x3 with value 0xfef9da6d
sw x3, 0(x2) # store 0xfef9da6d in memory
flw f29, 0(x2) # load 0xfef9da6d from memory into f29
li x3, 0xe87a9ec1 # load x3 with value 0xe87a9ec1
sw x3, 0(x2) # store 0xe87a9ec1 in memory
flw f13, 0(x2) # load 0xe87a9ec1 from memory into f13
li x3, 0xa0f7fcfd # load x3 with value 0xa0f7fcfd
sw x3, 0(x2) # store 0xa0f7fcfd in memory
flw f9, 0(x2) # load 0xa0f7fcfd from memory into f9
fnmsub.s f4, f29, f13, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x21, 0xa383a4cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0cfc36e # load x3 with value 0xe0cfc36e
sw x3, 0(x2) # store 0xe0cfc36e in memory
flw f23, 0(x2) # load 0xe0cfc36e from memory into f23
li x3, 0x085bbbd2 # load x3 with value 0x085bbbd2
sw x3, 0(x2) # store 0x085bbbd2 in memory
flw f14, 0(x2) # load 0x085bbbd2 from memory into f14
li x3, 0x0c399fb9 # load x3 with value 0x0c399fb9
sw x3, 0(x2) # store 0x0c399fb9 in memory
flw f18, 0(x2) # load 0x0c399fb9 from memory into f18
fnmsub.s f21, f23, f14, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x26, 0xfa572df5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d611ac5 # load x3 with value 0x7d611ac5
sw x3, 0(x2) # store 0x7d611ac5 in memory
flw f10, 0(x2) # load 0x7d611ac5 from memory into f10
li x3, 0xc559be0f # load x3 with value 0xc559be0f
sw x3, 0(x2) # store 0xc559be0f in memory
flw f15, 0(x2) # load 0xc559be0f from memory into f15
li x3, 0x0f9a609c # load x3 with value 0x0f9a609c
sw x3, 0(x2) # store 0x0f9a609c in memory
flw f6, 0(x2) # load 0x0f9a609c from memory into f6
fnmsub.s f26, f10, f15, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x26, 0x6aecac96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23026761 # load x3 with value 0x23026761
sw x3, 0(x2) # store 0x23026761 in memory
flw f30, 0(x2) # load 0x23026761 from memory into f30
li x3, 0x0c8bc685 # load x3 with value 0x0c8bc685
sw x3, 0(x2) # store 0x0c8bc685 in memory
flw f16, 0(x2) # load 0x0c8bc685 from memory into f16
li x3, 0xa2cfcc4c # load x3 with value 0xa2cfcc4c
sw x3, 0(x2) # store 0xa2cfcc4c in memory
flw f5, 0(x2) # load 0xa2cfcc4c from memory into f5
fnmsub.s f26, f30, f16, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x3, 0xcd5b6156 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x556acdaa # load x3 with value 0x556acdaa
sw x3, 0(x2) # store 0x556acdaa in memory
flw f19, 0(x2) # load 0x556acdaa from memory into f19
li x3, 0xb60db957 # load x3 with value 0xb60db957
sw x3, 0(x2) # store 0xb60db957 in memory
flw f17, 0(x2) # load 0xb60db957 from memory into f17
li x3, 0x7b998e5c # load x3 with value 0x7b998e5c
sw x3, 0(x2) # store 0x7b998e5c in memory
flw f13, 0(x2) # load 0x7b998e5c from memory into f13
fnmsub.s f3, f19, f17, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x1, 0x25e2859e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23e13dc2 # load x3 with value 0x23e13dc2
sw x3, 0(x2) # store 0x23e13dc2 in memory
flw f5, 0(x2) # load 0x23e13dc2 from memory into f5
li x3, 0x3448d350 # load x3 with value 0x3448d350
sw x3, 0(x2) # store 0x3448d350 in memory
flw f18, 0(x2) # load 0x3448d350 from memory into f18
li x3, 0xa8606ac6 # load x3 with value 0xa8606ac6
sw x3, 0(x2) # store 0xa8606ac6 in memory
flw f16, 0(x2) # load 0xa8606ac6 from memory into f16
fnmsub.s f1, f5, f18, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x19, 0xc5c9c4da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d7577b5 # load x3 with value 0x8d7577b5
sw x3, 0(x2) # store 0x8d7577b5 in memory
flw f11, 0(x2) # load 0x8d7577b5 from memory into f11
li x3, 0xaed6db59 # load x3 with value 0xaed6db59
sw x3, 0(x2) # store 0xaed6db59 in memory
flw f19, 0(x2) # load 0xaed6db59 from memory into f19
li x3, 0x43633e1d # load x3 with value 0x43633e1d
sw x3, 0(x2) # store 0x43633e1d in memory
flw f8, 0(x2) # load 0x43633e1d from memory into f8
fnmsub.s f19, f11, f19, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x18, 0x4184c7ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6922503 # load x3 with value 0xe6922503
sw x3, 0(x2) # store 0xe6922503 in memory
flw f19, 0(x2) # load 0xe6922503 from memory into f19
li x3, 0x727cb223 # load x3 with value 0x727cb223
sw x3, 0(x2) # store 0x727cb223 in memory
flw f20, 0(x2) # load 0x727cb223 from memory into f20
li x3, 0x95b9b134 # load x3 with value 0x95b9b134
sw x3, 0(x2) # store 0x95b9b134 in memory
flw f30, 0(x2) # load 0x95b9b134 from memory into f30
fnmsub.s f18, f19, f20, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x7, 0x837ebb6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4503abb2 # load x3 with value 0x4503abb2
sw x3, 0(x2) # store 0x4503abb2 in memory
flw f13, 0(x2) # load 0x4503abb2 from memory into f13
li x3, 0x43a8afd3 # load x3 with value 0x43a8afd3
sw x3, 0(x2) # store 0x43a8afd3 in memory
flw f21, 0(x2) # load 0x43a8afd3 from memory into f21
li x3, 0x76dbc58d # load x3 with value 0x76dbc58d
sw x3, 0(x2) # store 0x76dbc58d in memory
flw f1, 0(x2) # load 0x76dbc58d from memory into f1
fnmsub.s f7, f13, f21, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x9, 0x4fd35956 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b3c395f # load x3 with value 0x6b3c395f
sw x3, 0(x2) # store 0x6b3c395f in memory
flw f2, 0(x2) # load 0x6b3c395f from memory into f2
li x3, 0x8dc4e92f # load x3 with value 0x8dc4e92f
sw x3, 0(x2) # store 0x8dc4e92f in memory
flw f22, 0(x2) # load 0x8dc4e92f from memory into f22
li x3, 0x0b14e79f # load x3 with value 0x0b14e79f
sw x3, 0(x2) # store 0x0b14e79f in memory
flw f27, 0(x2) # load 0x0b14e79f from memory into f27
fnmsub.s f9, f2, f22, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x4, 0x2d48f81b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb34b714 # load x3 with value 0xdb34b714
sw x3, 0(x2) # store 0xdb34b714 in memory
flw f3, 0(x2) # load 0xdb34b714 from memory into f3
li x3, 0x68b1fbfc # load x3 with value 0x68b1fbfc
sw x3, 0(x2) # store 0x68b1fbfc in memory
flw f23, 0(x2) # load 0x68b1fbfc from memory into f23
li x3, 0xaf2e2233 # load x3 with value 0xaf2e2233
sw x3, 0(x2) # store 0xaf2e2233 in memory
flw f2, 0(x2) # load 0xaf2e2233 from memory into f2
fnmsub.s f4, f3, f23, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x20, 0x198adcea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff42d75d # load x3 with value 0xff42d75d
sw x3, 0(x2) # store 0xff42d75d in memory
flw f27, 0(x2) # load 0xff42d75d from memory into f27
li x3, 0x30db7334 # load x3 with value 0x30db7334
sw x3, 0(x2) # store 0x30db7334 in memory
flw f24, 0(x2) # load 0x30db7334 from memory into f24
li x3, 0x97ffe0b0 # load x3 with value 0x97ffe0b0
sw x3, 0(x2) # store 0x97ffe0b0 in memory
flw f31, 0(x2) # load 0x97ffe0b0 from memory into f31
fnmsub.s f20, f27, f24, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x22, 0xe81a3358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x94a95e61 # load x3 with value 0x94a95e61
sw x3, 0(x2) # store 0x94a95e61 in memory
flw f23, 0(x2) # load 0x94a95e61 from memory into f23
li x3, 0x50fb9820 # load x3 with value 0x50fb9820
sw x3, 0(x2) # store 0x50fb9820 in memory
flw f25, 0(x2) # load 0x50fb9820 from memory into f25
li x3, 0xe351987c # load x3 with value 0xe351987c
sw x3, 0(x2) # store 0xe351987c in memory
flw f9, 0(x2) # load 0xe351987c from memory into f9
fnmsub.s f22, f23, f25, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x11, 0x9f035d8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50463a94 # load x3 with value 0x50463a94
sw x3, 0(x2) # store 0x50463a94 in memory
flw f14, 0(x2) # load 0x50463a94 from memory into f14
li x3, 0x202a6807 # load x3 with value 0x202a6807
sw x3, 0(x2) # store 0x202a6807 in memory
flw f26, 0(x2) # load 0x202a6807 from memory into f26
li x3, 0x5bd27339 # load x3 with value 0x5bd27339
sw x3, 0(x2) # store 0x5bd27339 in memory
flw f7, 0(x2) # load 0x5bd27339 from memory into f7
fnmsub.s f11, f14, f26, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x22, 0xda5fb263 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x24b2a6e1 # load x3 with value 0x24b2a6e1
sw x3, 0(x2) # store 0x24b2a6e1 in memory
flw f9, 0(x2) # load 0x24b2a6e1 from memory into f9
li x3, 0xf2dcd968 # load x3 with value 0xf2dcd968
sw x3, 0(x2) # store 0xf2dcd968 in memory
flw f27, 0(x2) # load 0xf2dcd968 from memory into f27
li x3, 0xda0ec5cd # load x3 with value 0xda0ec5cd
sw x3, 0(x2) # store 0xda0ec5cd in memory
flw f30, 0(x2) # load 0xda0ec5cd from memory into f30
fnmsub.s f22, f9, f27, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x6, 0x2972cb4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef49359b # load x3 with value 0xef49359b
sw x3, 0(x2) # store 0xef49359b in memory
flw f23, 0(x2) # load 0xef49359b from memory into f23
li x3, 0xc306be4c # load x3 with value 0xc306be4c
sw x3, 0(x2) # store 0xc306be4c in memory
flw f28, 0(x2) # load 0xc306be4c from memory into f28
li x3, 0xfb2a4df0 # load x3 with value 0xfb2a4df0
sw x3, 0(x2) # store 0xfb2a4df0 in memory
flw f22, 0(x2) # load 0xfb2a4df0 from memory into f22
fnmsub.s f6, f23, f28, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x9, 0x575cfd0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4dbbec1f # load x3 with value 0x4dbbec1f
sw x3, 0(x2) # store 0x4dbbec1f in memory
flw f16, 0(x2) # load 0x4dbbec1f from memory into f16
li x3, 0x029ea63a # load x3 with value 0x029ea63a
sw x3, 0(x2) # store 0x029ea63a in memory
flw f29, 0(x2) # load 0x029ea63a from memory into f29
li x3, 0xeb6995e0 # load x3 with value 0xeb6995e0
sw x3, 0(x2) # store 0xeb6995e0 in memory
flw f29, 0(x2) # load 0xeb6995e0 from memory into f29
fnmsub.s f9, f16, f29, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x31, 0x04f9bc19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4af7e465 # load x3 with value 0x4af7e465
sw x3, 0(x2) # store 0x4af7e465 in memory
flw f12, 0(x2) # load 0x4af7e465 from memory into f12
li x3, 0x8738dd62 # load x3 with value 0x8738dd62
sw x3, 0(x2) # store 0x8738dd62 in memory
flw f30, 0(x2) # load 0x8738dd62 from memory into f30
li x3, 0x7976fb68 # load x3 with value 0x7976fb68
sw x3, 0(x2) # store 0x7976fb68 in memory
flw f2, 0(x2) # load 0x7976fb68 from memory into f2
fnmsub.s f31, f12, f30, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x22, 0x3e015f46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10fe5e10 # load x3 with value 0x10fe5e10
sw x3, 0(x2) # store 0x10fe5e10 in memory
flw f25, 0(x2) # load 0x10fe5e10 from memory into f25
li x3, 0x6a563e37 # load x3 with value 0x6a563e37
sw x3, 0(x2) # store 0x6a563e37 in memory
flw f31, 0(x2) # load 0x6a563e37 from memory into f31
li x3, 0x7fe6bcaf # load x3 with value 0x7fe6bcaf
sw x3, 0(x2) # store 0x7fe6bcaf in memory
flw f31, 0(x2) # load 0x7fe6bcaf from memory into f31
fnmsub.s f22, f25, f31, f31 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
