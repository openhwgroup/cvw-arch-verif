///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/D/WALLY-COV-fmul.d.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x28, x26, x15 # perform first operation
fmul.d f9, f13, f7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x24, x17, x1 # perform first operation
fmul.d f31, f12, f19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x11, x14, x31 # perform first operation
fmul.d f20, f16, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f13, f18, f25 # perform first operation
fmul.d f18, f13, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f28, f31, f19 # perform first operation
fmul.d f19, f11, f28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x8, x22, x12 # perform first operation
fmul.d f8, f19, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f11, f27, f24 # perform first operation
fmul.d f11, f2, f16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f1, f8, f31 # perform first operation
fmul.d f1, f28, f11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f1, f22, f7 # perform first operation
fmul.d f1, f14, f3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f11, f19, f17 # perform first operation
fmul.d f19, f15, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f20, f1, f15 # perform first operation
fmul.d f15, f2, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f31, f25, f16 # perform first operation
fmul.d f15, f3, f8 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0xe3745910 # load x3 with 32 MSBs 0x00000000e3745910
sw x3, 0(x2) # store x3 (0xe3745910) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e3745910
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000e3745910 from memory into f0
la x2, scratch
li x3, 0xde00a756 # load x3 with 32 MSBs 0x00000000de00a756
sw x3, 0(x2) # store x3 (0xde00a756) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000de00a756
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000de00a756 from memory into f19
fmul.d f21, f0, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0x98ede3ab # load x3 with 32 MSBs 0x0000000098ede3ab
sw x3, 0(x2) # store x3 (0x98ede3ab) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000098ede3ab
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000098ede3ab from memory into f1
la x2, scratch
li x3, 0xa6e8f9b2 # load x3 with 32 MSBs 0x00000000a6e8f9b2
sw x3, 0(x2) # store x3 (0xa6e8f9b2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a6e8f9b2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a6e8f9b2 from memory into f20
fmul.d f12, f1, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x497e1db7 # load x3 with 32 MSBs 0x00000000497e1db7
sw x3, 0(x2) # store x3 (0x497e1db7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000497e1db7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000497e1db7 from memory into f2
la x2, scratch
li x3, 0xd716848a # load x3 with 32 MSBs 0x00000000d716848a
sw x3, 0(x2) # store x3 (0xd716848a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d716848a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d716848a from memory into f22
fmul.d f31, f2, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0xabab6a48 # load x3 with 32 MSBs 0x00000000abab6a48
sw x3, 0(x2) # store x3 (0xabab6a48) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000abab6a48
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000abab6a48 from memory into f3
la x2, scratch
li x3, 0x7d8bce0e # load x3 with 32 MSBs 0x000000007d8bce0e
sw x3, 0(x2) # store x3 (0x7d8bce0e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007d8bce0e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007d8bce0e from memory into f27
fmul.d f5, f3, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xefa956ec # load x3 with 32 MSBs 0x00000000efa956ec
sw x3, 0(x2) # store x3 (0xefa956ec) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000efa956ec
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000efa956ec from memory into f4
la x2, scratch
li x3, 0xeaa0fa18 # load x3 with 32 MSBs 0x00000000eaa0fa18
sw x3, 0(x2) # store x3 (0xeaa0fa18) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000eaa0fa18
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000eaa0fa18 from memory into f5
fmul.d f26, f4, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
la x2, scratch
li x3, 0x9a1c61cf # load x3 with 32 MSBs 0x000000009a1c61cf
sw x3, 0(x2) # store x3 (0x9a1c61cf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009a1c61cf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009a1c61cf from memory into f5
la x2, scratch
li x3, 0xe80f57ae # load x3 with 32 MSBs 0x00000000e80f57ae
sw x3, 0(x2) # store x3 (0xe80f57ae) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e80f57ae
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e80f57ae from memory into f4
fmul.d f30, f5, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x206c2736 # load x3 with 32 MSBs 0x00000000206c2736
sw x3, 0(x2) # store x3 (0x206c2736) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000206c2736
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000206c2736 from memory into f6
la x2, scratch
li x3, 0x8f9c7cbc # load x3 with 32 MSBs 0x000000008f9c7cbc
sw x3, 0(x2) # store x3 (0x8f9c7cbc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008f9c7cbc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008f9c7cbc from memory into f31
fmul.d f21, f6, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf8250b66 # load x3 with 32 MSBs 0x00000000f8250b66
sw x3, 0(x2) # store x3 (0xf8250b66) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f8250b66
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f8250b66 from memory into f7
la x2, scratch
li x3, 0xf2e32210 # load x3 with 32 MSBs 0x00000000f2e32210
sw x3, 0(x2) # store x3 (0xf2e32210) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f2e32210
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f2e32210 from memory into f12
fmul.d f22, f7, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x1b15b7cb # load x3 with 32 MSBs 0x000000001b15b7cb
sw x3, 0(x2) # store x3 (0x1b15b7cb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001b15b7cb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001b15b7cb from memory into f8
la x2, scratch
li x3, 0xa2a28837 # load x3 with 32 MSBs 0x00000000a2a28837
sw x3, 0(x2) # store x3 (0xa2a28837) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a2a28837
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000a2a28837 from memory into f25
fmul.d f28, f8, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x27af98c2 # load x3 with 32 MSBs 0x0000000027af98c2
sw x3, 0(x2) # store x3 (0x27af98c2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000027af98c2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000027af98c2 from memory into f9
la x2, scratch
li x3, 0x4c50d55c # load x3 with 32 MSBs 0x000000004c50d55c
sw x3, 0(x2) # store x3 (0x4c50d55c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004c50d55c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004c50d55c from memory into f25
fmul.d f7, f9, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x850c5d8b # load x3 with 32 MSBs 0x00000000850c5d8b
sw x3, 0(x2) # store x3 (0x850c5d8b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000850c5d8b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000850c5d8b from memory into f10
la x2, scratch
li x3, 0xf3c7ed28 # load x3 with 32 MSBs 0x00000000f3c7ed28
sw x3, 0(x2) # store x3 (0xf3c7ed28) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f3c7ed28
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f3c7ed28 from memory into f21
fmul.d f6, f10, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0xe0a4ca24 # load x3 with 32 MSBs 0x00000000e0a4ca24
sw x3, 0(x2) # store x3 (0xe0a4ca24) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e0a4ca24
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e0a4ca24 from memory into f11
la x2, scratch
li x3, 0x93e77b65 # load x3 with 32 MSBs 0x0000000093e77b65
sw x3, 0(x2) # store x3 (0x93e77b65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000093e77b65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000093e77b65 from memory into f16
fmul.d f29, f11, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0xe75ca17d # load x3 with 32 MSBs 0x00000000e75ca17d
sw x3, 0(x2) # store x3 (0xe75ca17d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e75ca17d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e75ca17d from memory into f12
la x2, scratch
li x3, 0x9ffd9cff # load x3 with 32 MSBs 0x000000009ffd9cff
sw x3, 0(x2) # store x3 (0x9ffd9cff) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009ffd9cff
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009ffd9cff from memory into f15
fmul.d f27, f12, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xd8385fc1 # load x3 with 32 MSBs 0x00000000d8385fc1
sw x3, 0(x2) # store x3 (0xd8385fc1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d8385fc1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d8385fc1 from memory into f13
la x2, scratch
li x3, 0xfbeb7a07 # load x3 with 32 MSBs 0x00000000fbeb7a07
sw x3, 0(x2) # store x3 (0xfbeb7a07) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fbeb7a07
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000fbeb7a07 from memory into f26
fmul.d f14, f13, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x41027326 # load x3 with 32 MSBs 0x0000000041027326
sw x3, 0(x2) # store x3 (0x41027326) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000041027326
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000041027326 from memory into f14
la x2, scratch
li x3, 0x86b1ccd4 # load x3 with 32 MSBs 0x0000000086b1ccd4
sw x3, 0(x2) # store x3 (0x86b1ccd4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000086b1ccd4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000086b1ccd4 from memory into f23
fmul.d f22, f14, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x66dd25ce # load x3 with 32 MSBs 0x0000000066dd25ce
sw x3, 0(x2) # store x3 (0x66dd25ce) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000066dd25ce
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000066dd25ce from memory into f15
la x2, scratch
li x3, 0x1de2741c # load x3 with 32 MSBs 0x000000001de2741c
sw x3, 0(x2) # store x3 (0x1de2741c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001de2741c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001de2741c from memory into f13
fmul.d f23, f15, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0x0ecbe1a0 # load x3 with 32 MSBs 0x000000000ecbe1a0
sw x3, 0(x2) # store x3 (0x0ecbe1a0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000ecbe1a0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000ecbe1a0 from memory into f16
la x2, scratch
li x3, 0xd20c7bfb # load x3 with 32 MSBs 0x00000000d20c7bfb
sw x3, 0(x2) # store x3 (0xd20c7bfb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d20c7bfb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d20c7bfb from memory into f31
fmul.d f24, f16, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0x85fc141b # load x3 with 32 MSBs 0x0000000085fc141b
sw x3, 0(x2) # store x3 (0x85fc141b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000085fc141b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000085fc141b from memory into f17
la x2, scratch
li x3, 0x6aa99472 # load x3 with 32 MSBs 0x000000006aa99472
sw x3, 0(x2) # store x3 (0x6aa99472) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006aa99472
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006aa99472 from memory into f14
fmul.d f29, f17, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xd8274ac8 # load x3 with 32 MSBs 0x00000000d8274ac8
sw x3, 0(x2) # store x3 (0xd8274ac8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d8274ac8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d8274ac8 from memory into f18
la x2, scratch
li x3, 0xf41f4ad3 # load x3 with 32 MSBs 0x00000000f41f4ad3
sw x3, 0(x2) # store x3 (0xf41f4ad3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f41f4ad3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f41f4ad3 from memory into f17
fmul.d f3, f18, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0xcc49f466 # load x3 with 32 MSBs 0x00000000cc49f466
sw x3, 0(x2) # store x3 (0xcc49f466) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cc49f466
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000cc49f466 from memory into f19
la x2, scratch
li x3, 0x21f09985 # load x3 with 32 MSBs 0x0000000021f09985
sw x3, 0(x2) # store x3 (0x21f09985) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000021f09985
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000021f09985 from memory into f5
fmul.d f20, f19, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0x3377f117 # load x3 with 32 MSBs 0x000000003377f117
sw x3, 0(x2) # store x3 (0x3377f117) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003377f117
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003377f117 from memory into f20
la x2, scratch
li x3, 0xc9909079 # load x3 with 32 MSBs 0x00000000c9909079
sw x3, 0(x2) # store x3 (0xc9909079) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c9909079
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c9909079 from memory into f18
fmul.d f1, f20, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x75d8ef4b # load x3 with 32 MSBs 0x0000000075d8ef4b
sw x3, 0(x2) # store x3 (0x75d8ef4b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000075d8ef4b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000075d8ef4b from memory into f21
la x2, scratch
li x3, 0x23b6c767 # load x3 with 32 MSBs 0x0000000023b6c767
sw x3, 0(x2) # store x3 (0x23b6c767) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000023b6c767
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000023b6c767 from memory into f26
fmul.d f21, f21, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x89bcdd6e # load x3 with 32 MSBs 0x0000000089bcdd6e
sw x3, 0(x2) # store x3 (0x89bcdd6e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000089bcdd6e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000089bcdd6e from memory into f22
la x2, scratch
li x3, 0x20521b2d # load x3 with 32 MSBs 0x0000000020521b2d
sw x3, 0(x2) # store x3 (0x20521b2d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000020521b2d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000020521b2d from memory into f14
fmul.d f27, f22, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x113bb858 # load x3 with 32 MSBs 0x00000000113bb858
sw x3, 0(x2) # store x3 (0x113bb858) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000113bb858
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000113bb858 from memory into f23
la x2, scratch
li x3, 0x95a743d2 # load x3 with 32 MSBs 0x0000000095a743d2
sw x3, 0(x2) # store x3 (0x95a743d2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000095a743d2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000095a743d2 from memory into f9
fmul.d f22, f23, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x46425ede # load x3 with 32 MSBs 0x0000000046425ede
sw x3, 0(x2) # store x3 (0x46425ede) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000046425ede
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000046425ede from memory into f24
la x2, scratch
li x3, 0x7f4eee02 # load x3 with 32 MSBs 0x000000007f4eee02
sw x3, 0(x2) # store x3 (0x7f4eee02) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007f4eee02
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007f4eee02 from memory into f12
fmul.d f24, f24, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0xe52b187f # load x3 with 32 MSBs 0x00000000e52b187f
sw x3, 0(x2) # store x3 (0xe52b187f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e52b187f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e52b187f from memory into f25
la x2, scratch
li x3, 0xfbc03441 # load x3 with 32 MSBs 0x00000000fbc03441
sw x3, 0(x2) # store x3 (0xfbc03441) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fbc03441
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000fbc03441 from memory into f11
fmul.d f23, f25, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x9f52fcaf # load x3 with 32 MSBs 0x000000009f52fcaf
sw x3, 0(x2) # store x3 (0x9f52fcaf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009f52fcaf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009f52fcaf from memory into f26
la x2, scratch
li x3, 0xea916fd1 # load x3 with 32 MSBs 0x00000000ea916fd1
sw x3, 0(x2) # store x3 (0xea916fd1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ea916fd1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ea916fd1 from memory into f18
fmul.d f23, f26, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x1ba0b70b # load x3 with 32 MSBs 0x000000001ba0b70b
sw x3, 0(x2) # store x3 (0x1ba0b70b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001ba0b70b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001ba0b70b from memory into f27
la x2, scratch
li x3, 0xe3d44d86 # load x3 with 32 MSBs 0x00000000e3d44d86
sw x3, 0(x2) # store x3 (0xe3d44d86) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e3d44d86
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e3d44d86 from memory into f3
fmul.d f27, f27, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0x1f43569f # load x3 with 32 MSBs 0x000000001f43569f
sw x3, 0(x2) # store x3 (0x1f43569f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001f43569f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001f43569f from memory into f28
la x2, scratch
li x3, 0x4f86d4ed # load x3 with 32 MSBs 0x000000004f86d4ed
sw x3, 0(x2) # store x3 (0x4f86d4ed) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004f86d4ed
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004f86d4ed from memory into f1
fmul.d f20, f28, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xfda0618a # load x3 with 32 MSBs 0x00000000fda0618a
sw x3, 0(x2) # store x3 (0xfda0618a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fda0618a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000fda0618a from memory into f29
la x2, scratch
li x3, 0xd9710470 # load x3 with 32 MSBs 0x00000000d9710470
sw x3, 0(x2) # store x3 (0xd9710470) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d9710470
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d9710470 from memory into f18
fmul.d f30, f29, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x2206caec # load x3 with 32 MSBs 0x000000002206caec
sw x3, 0(x2) # store x3 (0x2206caec) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002206caec
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002206caec from memory into f30
la x2, scratch
li x3, 0xe636cbdd # load x3 with 32 MSBs 0x00000000e636cbdd
sw x3, 0(x2) # store x3 (0xe636cbdd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e636cbdd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000e636cbdd from memory into f31
fmul.d f14, f30, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0x99861145 # load x3 with 32 MSBs 0x0000000099861145
sw x3, 0(x2) # store x3 (0x99861145) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000099861145
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000099861145 from memory into f31
la x2, scratch
li x3, 0x93aa0cf7 # load x3 with 32 MSBs 0x0000000093aa0cf7
sw x3, 0(x2) # store x3 (0x93aa0cf7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000093aa0cf7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000093aa0cf7 from memory into f27
fmul.d f18, f31, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x36f03df0 # load x3 with 32 MSBs 0x0000000036f03df0
sw x3, 0(x2) # store x3 (0x36f03df0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000036f03df0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000036f03df0 from memory into f7
la x2, scratch
li x3, 0xac1a0fb3 # load x3 with 32 MSBs 0x00000000ac1a0fb3
sw x3, 0(x2) # store x3 (0xac1a0fb3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ac1a0fb3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000ac1a0fb3 from memory into f0
fmul.d f18, f7, f0 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0xe400c3ff # load x3 with 32 MSBs 0x00000000e400c3ff
sw x3, 0(x2) # store x3 (0xe400c3ff) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e400c3ff
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e400c3ff from memory into f16
la x2, scratch
li x3, 0xf22c50b9 # load x3 with 32 MSBs 0x00000000f22c50b9
sw x3, 0(x2) # store x3 (0xf22c50b9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f22c50b9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f22c50b9 from memory into f1
fmul.d f29, f16, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x87edb56f # load x3 with 32 MSBs 0x0000000087edb56f
sw x3, 0(x2) # store x3 (0x87edb56f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000087edb56f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000087edb56f from memory into f13
la x2, scratch
li x3, 0x48144d5f # load x3 with 32 MSBs 0x0000000048144d5f
sw x3, 0(x2) # store x3 (0x48144d5f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000048144d5f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000048144d5f from memory into f2
fmul.d f17, f13, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0xe2e0c114 # load x3 with 32 MSBs 0x00000000e2e0c114
sw x3, 0(x2) # store x3 (0xe2e0c114) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e2e0c114
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e2e0c114 from memory into f12
la x2, scratch
li x3, 0xa4a6b82c # load x3 with 32 MSBs 0x00000000a4a6b82c
sw x3, 0(x2) # store x3 (0xa4a6b82c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a4a6b82c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a4a6b82c from memory into f3
fmul.d f26, f12, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x7ef96e0d # load x3 with 32 MSBs 0x000000007ef96e0d
sw x3, 0(x2) # store x3 (0x7ef96e0d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007ef96e0d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000007ef96e0d from memory into f8
la x2, scratch
li x3, 0x9da57b5d # load x3 with 32 MSBs 0x000000009da57b5d
sw x3, 0(x2) # store x3 (0x9da57b5d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009da57b5d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009da57b5d from memory into f4
fmul.d f11, f8, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xdd8b44e4 # load x3 with 32 MSBs 0x00000000dd8b44e4
sw x3, 0(x2) # store x3 (0xdd8b44e4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dd8b44e4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000dd8b44e4 from memory into f28
la x2, scratch
li x3, 0x3e32083e # load x3 with 32 MSBs 0x000000003e32083e
sw x3, 0(x2) # store x3 (0x3e32083e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003e32083e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003e32083e from memory into f5
fmul.d f17, f28, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xd3910fac # load x3 with 32 MSBs 0x00000000d3910fac
sw x3, 0(x2) # store x3 (0xd3910fac) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d3910fac
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d3910fac from memory into f27
la x2, scratch
li x3, 0xab4b35d5 # load x3 with 32 MSBs 0x00000000ab4b35d5
sw x3, 0(x2) # store x3 (0xab4b35d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ab4b35d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ab4b35d5 from memory into f6
fmul.d f11, f27, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x4a70969d # load x3 with 32 MSBs 0x000000004a70969d
sw x3, 0(x2) # store x3 (0x4a70969d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004a70969d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004a70969d from memory into f13
la x2, scratch
li x3, 0x8337b5d3 # load x3 with 32 MSBs 0x000000008337b5d3
sw x3, 0(x2) # store x3 (0x8337b5d3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008337b5d3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008337b5d3 from memory into f7
fmul.d f19, f13, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0x59892b91 # load x3 with 32 MSBs 0x0000000059892b91
sw x3, 0(x2) # store x3 (0x59892b91) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000059892b91
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000059892b91 from memory into f11
la x2, scratch
li x3, 0x8188122b # load x3 with 32 MSBs 0x000000008188122b
sw x3, 0(x2) # store x3 (0x8188122b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008188122b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008188122b from memory into f8
fmul.d f7, f11, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0x75a5768c # load x3 with 32 MSBs 0x0000000075a5768c
sw x3, 0(x2) # store x3 (0x75a5768c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000075a5768c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000075a5768c from memory into f25
la x2, scratch
li x3, 0x23cf8cb2 # load x3 with 32 MSBs 0x0000000023cf8cb2
sw x3, 0(x2) # store x3 (0x23cf8cb2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000023cf8cb2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000023cf8cb2 from memory into f9
fmul.d f21, f25, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x9f8d50a7 # load x3 with 32 MSBs 0x000000009f8d50a7
sw x3, 0(x2) # store x3 (0x9f8d50a7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009f8d50a7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000009f8d50a7 from memory into f16
la x2, scratch
li x3, 0x3218786e # load x3 with 32 MSBs 0x000000003218786e
sw x3, 0(x2) # store x3 (0x3218786e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003218786e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003218786e from memory into f10
fmul.d f5, f16, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0xa96a59c4 # load x3 with 32 MSBs 0x00000000a96a59c4
sw x3, 0(x2) # store x3 (0xa96a59c4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a96a59c4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a96a59c4 from memory into f1
la x2, scratch
li x3, 0xdaea0ee0 # load x3 with 32 MSBs 0x00000000daea0ee0
sw x3, 0(x2) # store x3 (0xdaea0ee0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000daea0ee0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000daea0ee0 from memory into f11
fmul.d f5, f1, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0xdcc4262f # load x3 with 32 MSBs 0x00000000dcc4262f
sw x3, 0(x2) # store x3 (0xdcc4262f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dcc4262f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000dcc4262f from memory into f7
la x2, scratch
li x3, 0x0b02f4c5 # load x3 with 32 MSBs 0x000000000b02f4c5
sw x3, 0(x2) # store x3 (0x0b02f4c5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000b02f4c5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000b02f4c5 from memory into f12
fmul.d f14, f7, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0xd38666ec # load x3 with 32 MSBs 0x00000000d38666ec
sw x3, 0(x2) # store x3 (0xd38666ec) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d38666ec
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d38666ec from memory into f3
la x2, scratch
li x3, 0x23abfc60 # load x3 with 32 MSBs 0x0000000023abfc60
sw x3, 0(x2) # store x3 (0x23abfc60) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000023abfc60
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000023abfc60 from memory into f13
fmul.d f22, f3, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0xcdf34404 # load x3 with 32 MSBs 0x00000000cdf34404
sw x3, 0(x2) # store x3 (0xcdf34404) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cdf34404
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000cdf34404 from memory into f31
la x2, scratch
li x3, 0x44a537bf # load x3 with 32 MSBs 0x0000000044a537bf
sw x3, 0(x2) # store x3 (0x44a537bf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000044a537bf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000044a537bf from memory into f14
fmul.d f28, f31, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x4bae21e3 # load x3 with 32 MSBs 0x000000004bae21e3
sw x3, 0(x2) # store x3 (0x4bae21e3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004bae21e3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004bae21e3 from memory into f11
la x2, scratch
li x3, 0x43bf91d0 # load x3 with 32 MSBs 0x0000000043bf91d0
sw x3, 0(x2) # store x3 (0x43bf91d0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000043bf91d0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000043bf91d0 from memory into f15
fmul.d f31, f11, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x9cad4e90 # load x3 with 32 MSBs 0x000000009cad4e90
sw x3, 0(x2) # store x3 (0x9cad4e90) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009cad4e90
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009cad4e90 from memory into f11
la x2, scratch
li x3, 0x0d4ec7f8 # load x3 with 32 MSBs 0x000000000d4ec7f8
sw x3, 0(x2) # store x3 (0x0d4ec7f8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000d4ec7f8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000d4ec7f8 from memory into f16
fmul.d f12, f11, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0xcbd01791 # load x3 with 32 MSBs 0x00000000cbd01791
sw x3, 0(x2) # store x3 (0xcbd01791) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cbd01791
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cbd01791 from memory into f25
la x2, scratch
li x3, 0x98575f21 # load x3 with 32 MSBs 0x0000000098575f21
sw x3, 0(x2) # store x3 (0x98575f21) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000098575f21
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000098575f21 from memory into f17
fmul.d f18, f25, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0xccb68bfb # load x3 with 32 MSBs 0x00000000ccb68bfb
sw x3, 0(x2) # store x3 (0xccb68bfb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ccb68bfb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ccb68bfb from memory into f10
la x2, scratch
li x3, 0x5e5b0a2b # load x3 with 32 MSBs 0x000000005e5b0a2b
sw x3, 0(x2) # store x3 (0x5e5b0a2b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005e5b0a2b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005e5b0a2b from memory into f18
fmul.d f24, f10, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0x65b761d7 # load x3 with 32 MSBs 0x0000000065b761d7
sw x3, 0(x2) # store x3 (0x65b761d7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000065b761d7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000065b761d7 from memory into f27
la x2, scratch
li x3, 0x067fa008 # load x3 with 32 MSBs 0x00000000067fa008
sw x3, 0(x2) # store x3 (0x067fa008) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000067fa008
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000067fa008 from memory into f19
fmul.d f14, f27, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0xa098e7f8 # load x3 with 32 MSBs 0x00000000a098e7f8
sw x3, 0(x2) # store x3 (0xa098e7f8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a098e7f8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a098e7f8 from memory into f26
la x2, scratch
li x3, 0xa6878915 # load x3 with 32 MSBs 0x00000000a6878915
sw x3, 0(x2) # store x3 (0xa6878915) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a6878915
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a6878915 from memory into f20
fmul.d f14, f26, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x995fd94f # load x3 with 32 MSBs 0x00000000995fd94f
sw x3, 0(x2) # store x3 (0x995fd94f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000995fd94f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000995fd94f from memory into f25
la x2, scratch
li x3, 0xd317fffc # load x3 with 32 MSBs 0x00000000d317fffc
sw x3, 0(x2) # store x3 (0xd317fffc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d317fffc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d317fffc from memory into f21
fmul.d f1, f25, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x6bd26e82 # load x3 with 32 MSBs 0x000000006bd26e82
sw x3, 0(x2) # store x3 (0x6bd26e82) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006bd26e82
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006bd26e82 from memory into f16
la x2, scratch
li x3, 0x731f8e32 # load x3 with 32 MSBs 0x00000000731f8e32
sw x3, 0(x2) # store x3 (0x731f8e32) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000731f8e32
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000731f8e32 from memory into f22
fmul.d f17, f16, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0xc49209ed # load x3 with 32 MSBs 0x00000000c49209ed
sw x3, 0(x2) # store x3 (0xc49209ed) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c49209ed
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c49209ed from memory into f1
la x2, scratch
li x3, 0xcc660e2a # load x3 with 32 MSBs 0x00000000cc660e2a
sw x3, 0(x2) # store x3 (0xcc660e2a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cc660e2a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000cc660e2a from memory into f23
fmul.d f7, f1, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0xcd05cb8b # load x3 with 32 MSBs 0x00000000cd05cb8b
sw x3, 0(x2) # store x3 (0xcd05cb8b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cd05cb8b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000cd05cb8b from memory into f10
la x2, scratch
li x3, 0xacc88b02 # load x3 with 32 MSBs 0x00000000acc88b02
sw x3, 0(x2) # store x3 (0xacc88b02) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000acc88b02
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000acc88b02 from memory into f24
fmul.d f29, f10, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x8485d08a # load x3 with 32 MSBs 0x000000008485d08a
sw x3, 0(x2) # store x3 (0x8485d08a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008485d08a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008485d08a from memory into f22
la x2, scratch
li x3, 0x10eaff34 # load x3 with 32 MSBs 0x0000000010eaff34
sw x3, 0(x2) # store x3 (0x10eaff34) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000010eaff34
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000010eaff34 from memory into f25
fmul.d f10, f22, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x66e0124b # load x3 with 32 MSBs 0x0000000066e0124b
sw x3, 0(x2) # store x3 (0x66e0124b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000066e0124b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000066e0124b from memory into f30
la x2, scratch
li x3, 0x22de4271 # load x3 with 32 MSBs 0x0000000022de4271
sw x3, 0(x2) # store x3 (0x22de4271) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000022de4271
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000022de4271 from memory into f26
fmul.d f6, f30, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0xfe94a37d # load x3 with 32 MSBs 0x00000000fe94a37d
sw x3, 0(x2) # store x3 (0xfe94a37d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fe94a37d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000fe94a37d from memory into f9
la x2, scratch
li x3, 0xe1bf6d77 # load x3 with 32 MSBs 0x00000000e1bf6d77
sw x3, 0(x2) # store x3 (0xe1bf6d77) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e1bf6d77
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e1bf6d77 from memory into f27
fmul.d f19, f9, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0xcb4dfc58 # load x3 with 32 MSBs 0x00000000cb4dfc58
sw x3, 0(x2) # store x3 (0xcb4dfc58) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cb4dfc58
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cb4dfc58 from memory into f29
la x2, scratch
li x3, 0x758275cf # load x3 with 32 MSBs 0x00000000758275cf
sw x3, 0(x2) # store x3 (0x758275cf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000758275cf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000758275cf from memory into f28
fmul.d f30, f29, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0xf3980c35 # load x3 with 32 MSBs 0x00000000f3980c35
sw x3, 0(x2) # store x3 (0xf3980c35) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f3980c35
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f3980c35 from memory into f26
la x2, scratch
li x3, 0xf7b84c6f # load x3 with 32 MSBs 0x00000000f7b84c6f
sw x3, 0(x2) # store x3 (0xf7b84c6f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f7b84c6f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f7b84c6f from memory into f29
fmul.d f27, f26, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0xcb0c34e6 # load x3 with 32 MSBs 0x00000000cb0c34e6
sw x3, 0(x2) # store x3 (0xcb0c34e6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cb0c34e6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000cb0c34e6 from memory into f7
la x2, scratch
li x3, 0x06da7722 # load x3 with 32 MSBs 0x0000000006da7722
sw x3, 0(x2) # store x3 (0x06da7722) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000006da7722
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000006da7722 from memory into f30
fmul.d f11, f7, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x793ddb48 # load x3 with 32 MSBs 0x00000000793ddb48
sw x3, 0(x2) # store x3 (0x793ddb48) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000793ddb48
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000793ddb48 from memory into f28
la x2, scratch
li x3, 0x135e912b # load x3 with 32 MSBs 0x00000000135e912b
sw x3, 0(x2) # store x3 (0x135e912b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000135e912b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000135e912b from memory into f31
fmul.d f17, f28, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0xa30f5299 # load x3 with 32 MSBs 0x00000000a30f5299
sw x3, 0(x2) # store x3 (0xa30f5299) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a30f5299
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a30f5299 from memory into f29
la x2, scratch
li x3, 0x87ad2094 # load x3 with 32 MSBs 0x0000000087ad2094
sw x3, 0(x2) # store x3 (0x87ad2094) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000087ad2094
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000087ad2094 from memory into f19
fmul.d f0, f29, f19 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0xf8541704 # load x3 with 32 MSBs 0x00000000f8541704
sw x3, 0(x2) # store x3 (0xf8541704) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f8541704
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f8541704 from memory into f21
la x2, scratch
li x3, 0x6e43a922 # load x3 with 32 MSBs 0x000000006e43a922
sw x3, 0(x2) # store x3 (0x6e43a922) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006e43a922
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006e43a922 from memory into f27
fmul.d f1, f21, f27 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x7943d7d3 # load x3 with 32 MSBs 0x000000007943d7d3
sw x3, 0(x2) # store x3 (0x7943d7d3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007943d7d3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007943d7d3 from memory into f13
la x2, scratch
li x3, 0x5208a3bf # load x3 with 32 MSBs 0x000000005208a3bf
sw x3, 0(x2) # store x3 (0x5208a3bf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005208a3bf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000005208a3bf from memory into f11
fmul.d f2, f13, f11 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0xefce4b4f # load x3 with 32 MSBs 0x00000000efce4b4f
sw x3, 0(x2) # store x3 (0xefce4b4f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000efce4b4f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000efce4b4f from memory into f8
la x2, scratch
li x3, 0x4cba3da1 # load x3 with 32 MSBs 0x000000004cba3da1
sw x3, 0(x2) # store x3 (0x4cba3da1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004cba3da1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004cba3da1 from memory into f15
fmul.d f3, f8, f15 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x6a30adaf # load x3 with 32 MSBs 0x000000006a30adaf
sw x3, 0(x2) # store x3 (0x6a30adaf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006a30adaf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000006a30adaf from memory into f3
la x2, scratch
li x3, 0x9d81d900 # load x3 with 32 MSBs 0x000000009d81d900
sw x3, 0(x2) # store x3 (0x9d81d900) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009d81d900
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009d81d900 from memory into f13
fmul.d f4, f3, f13 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xd62d742a # load x3 with 32 MSBs 0x00000000d62d742a
sw x3, 0(x2) # store x3 (0xd62d742a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d62d742a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d62d742a from memory into f2
la x2, scratch
li x3, 0x766299cc # load x3 with 32 MSBs 0x00000000766299cc
sw x3, 0(x2) # store x3 (0x766299cc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000766299cc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000766299cc from memory into f4
fmul.d f5, f2, f4 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xca130dc1 # load x3 with 32 MSBs 0x00000000ca130dc1
sw x3, 0(x2) # store x3 (0xca130dc1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ca130dc1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ca130dc1 from memory into f22
la x2, scratch
li x3, 0x3d1fbe72 # load x3 with 32 MSBs 0x000000003d1fbe72
sw x3, 0(x2) # store x3 (0x3d1fbe72) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003d1fbe72
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003d1fbe72 from memory into f30
fmul.d f6, f22, f30 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x42cd2806 # load x3 with 32 MSBs 0x0000000042cd2806
sw x3, 0(x2) # store x3 (0x42cd2806) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000042cd2806
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000042cd2806 from memory into f25
la x2, scratch
li x3, 0x1a61a5fd # load x3 with 32 MSBs 0x000000001a61a5fd
sw x3, 0(x2) # store x3 (0x1a61a5fd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001a61a5fd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001a61a5fd from memory into f17
fmul.d f7, f25, f17 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x07303f48 # load x3 with 32 MSBs 0x0000000007303f48
sw x3, 0(x2) # store x3 (0x07303f48) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000007303f48
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000007303f48 from memory into f10
la x2, scratch
li x3, 0xc2e0003c # load x3 with 32 MSBs 0x00000000c2e0003c
sw x3, 0(x2) # store x3 (0xc2e0003c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c2e0003c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c2e0003c from memory into f31
fmul.d f8, f10, f31 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x45124d90 # load x3 with 32 MSBs 0x0000000045124d90
sw x3, 0(x2) # store x3 (0x45124d90) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000045124d90
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000045124d90 from memory into f25
la x2, scratch
li x3, 0xbd18d245 # load x3 with 32 MSBs 0x00000000bd18d245
sw x3, 0(x2) # store x3 (0xbd18d245) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bd18d245
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bd18d245 from memory into f12
fmul.d f9, f25, f12 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0x3aab8170 # load x3 with 32 MSBs 0x000000003aab8170
sw x3, 0(x2) # store x3 (0x3aab8170) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003aab8170
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003aab8170 from memory into f20
la x2, scratch
li x3, 0xd406fd0a # load x3 with 32 MSBs 0x00000000d406fd0a
sw x3, 0(x2) # store x3 (0xd406fd0a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d406fd0a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d406fd0a from memory into f8
fmul.d f10, f20, f8 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0x14f9f8f4 # load x3 with 32 MSBs 0x0000000014f9f8f4
sw x3, 0(x2) # store x3 (0x14f9f8f4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000014f9f8f4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000014f9f8f4 from memory into f10
la x2, scratch
li x3, 0x6b600fa3 # load x3 with 32 MSBs 0x000000006b600fa3
sw x3, 0(x2) # store x3 (0x6b600fa3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006b600fa3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006b600fa3 from memory into f27
fmul.d f11, f10, f27 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x53ad6c98 # load x3 with 32 MSBs 0x0000000053ad6c98
sw x3, 0(x2) # store x3 (0x53ad6c98) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000053ad6c98
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000053ad6c98 from memory into f23
la x2, scratch
li x3, 0xe2942652 # load x3 with 32 MSBs 0x00000000e2942652
sw x3, 0(x2) # store x3 (0xe2942652) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e2942652
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e2942652 from memory into f21
fmul.d f12, f23, f21 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0x70fe0635 # load x3 with 32 MSBs 0x0000000070fe0635
sw x3, 0(x2) # store x3 (0x70fe0635) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000070fe0635
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000070fe0635 from memory into f15
la x2, scratch
li x3, 0x4d459c4d # load x3 with 32 MSBs 0x000000004d459c4d
sw x3, 0(x2) # store x3 (0x4d459c4d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004d459c4d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004d459c4d from memory into f16
fmul.d f13, f15, f16 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0xd1260707 # load x3 with 32 MSBs 0x00000000d1260707
sw x3, 0(x2) # store x3 (0xd1260707) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d1260707
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d1260707 from memory into f25
la x2, scratch
li x3, 0xf281d5be # load x3 with 32 MSBs 0x00000000f281d5be
sw x3, 0(x2) # store x3 (0xf281d5be) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f281d5be
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f281d5be from memory into f31
fmul.d f14, f25, f31 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0x84784f64 # load x3 with 32 MSBs 0x0000000084784f64
sw x3, 0(x2) # store x3 (0x84784f64) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000084784f64
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000084784f64 from memory into f26
la x2, scratch
li x3, 0xdc3d2306 # load x3 with 32 MSBs 0x00000000dc3d2306
sw x3, 0(x2) # store x3 (0xdc3d2306) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dc3d2306
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000dc3d2306 from memory into f11
fmul.d f15, f26, f11 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0x67127315 # load x3 with 32 MSBs 0x0000000067127315
sw x3, 0(x2) # store x3 (0x67127315) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000067127315
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000067127315 from memory into f14
la x2, scratch
li x3, 0xd12286fc # load x3 with 32 MSBs 0x00000000d12286fc
sw x3, 0(x2) # store x3 (0xd12286fc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d12286fc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d12286fc from memory into f27
fmul.d f16, f14, f27 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0x82bf6612 # load x3 with 32 MSBs 0x0000000082bf6612
sw x3, 0(x2) # store x3 (0x82bf6612) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000082bf6612
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000082bf6612 from memory into f21
la x2, scratch
li x3, 0x86df3114 # load x3 with 32 MSBs 0x0000000086df3114
sw x3, 0(x2) # store x3 (0x86df3114) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000086df3114
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000086df3114 from memory into f16
fmul.d f17, f21, f16 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x95c36fb6 # load x3 with 32 MSBs 0x0000000095c36fb6
sw x3, 0(x2) # store x3 (0x95c36fb6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000095c36fb6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000095c36fb6 from memory into f1
la x2, scratch
li x3, 0x175bd929 # load x3 with 32 MSBs 0x00000000175bd929
sw x3, 0(x2) # store x3 (0x175bd929) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000175bd929
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000175bd929 from memory into f27
fmul.d f18, f1, f27 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x941cbdd1 # load x3 with 32 MSBs 0x00000000941cbdd1
sw x3, 0(x2) # store x3 (0x941cbdd1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000941cbdd1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000941cbdd1 from memory into f13
la x2, scratch
li x3, 0xcd9cfcbc # load x3 with 32 MSBs 0x00000000cd9cfcbc
sw x3, 0(x2) # store x3 (0xcd9cfcbc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cd9cfcbc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000cd9cfcbc from memory into f6
fmul.d f19, f13, f6 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x744ac404 # load x3 with 32 MSBs 0x00000000744ac404
sw x3, 0(x2) # store x3 (0x744ac404) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000744ac404
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000744ac404 from memory into f21
la x2, scratch
li x3, 0x7f672f52 # load x3 with 32 MSBs 0x000000007f672f52
sw x3, 0(x2) # store x3 (0x7f672f52) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007f672f52
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007f672f52 from memory into f27
fmul.d f20, f21, f27 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x3234409b # load x3 with 32 MSBs 0x000000003234409b
sw x3, 0(x2) # store x3 (0x3234409b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003234409b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003234409b from memory into f12
la x2, scratch
li x3, 0x6575f826 # load x3 with 32 MSBs 0x000000006575f826
sw x3, 0(x2) # store x3 (0x6575f826) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006575f826
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006575f826 from memory into f27
fmul.d f21, f12, f27 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x5fd324bc # load x3 with 32 MSBs 0x000000005fd324bc
sw x3, 0(x2) # store x3 (0x5fd324bc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005fd324bc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005fd324bc from memory into f26
la x2, scratch
li x3, 0xc6ec182d # load x3 with 32 MSBs 0x00000000c6ec182d
sw x3, 0(x2) # store x3 (0xc6ec182d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c6ec182d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c6ec182d from memory into f1
fmul.d f22, f26, f1 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x41b28593 # load x3 with 32 MSBs 0x0000000041b28593
sw x3, 0(x2) # store x3 (0x41b28593) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000041b28593
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000041b28593 from memory into f24
la x2, scratch
li x3, 0xd269885f # load x3 with 32 MSBs 0x00000000d269885f
sw x3, 0(x2) # store x3 (0xd269885f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d269885f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d269885f from memory into f25
fmul.d f23, f24, f25 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0x121fa54b # load x3 with 32 MSBs 0x00000000121fa54b
sw x3, 0(x2) # store x3 (0x121fa54b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000121fa54b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000121fa54b from memory into f21
la x2, scratch
li x3, 0x8ae676e6 # load x3 with 32 MSBs 0x000000008ae676e6
sw x3, 0(x2) # store x3 (0x8ae676e6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008ae676e6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008ae676e6 from memory into f6
fmul.d f24, f21, f6 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0x0db03b25 # load x3 with 32 MSBs 0x000000000db03b25
sw x3, 0(x2) # store x3 (0x0db03b25) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000db03b25
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000db03b25 from memory into f25
la x2, scratch
li x3, 0x30b52820 # load x3 with 32 MSBs 0x0000000030b52820
sw x3, 0(x2) # store x3 (0x30b52820) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000030b52820
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000030b52820 from memory into f28
fmul.d f25, f25, f28 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0x74a683bb # load x3 with 32 MSBs 0x0000000074a683bb
sw x3, 0(x2) # store x3 (0x74a683bb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000074a683bb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000074a683bb from memory into f9
la x2, scratch
li x3, 0x34295e74 # load x3 with 32 MSBs 0x0000000034295e74
sw x3, 0(x2) # store x3 (0x34295e74) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000034295e74
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000034295e74 from memory into f15
fmul.d f26, f9, f15 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0xf6d2c69e # load x3 with 32 MSBs 0x00000000f6d2c69e
sw x3, 0(x2) # store x3 (0xf6d2c69e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f6d2c69e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f6d2c69e from memory into f2
la x2, scratch
li x3, 0xeef9be55 # load x3 with 32 MSBs 0x00000000eef9be55
sw x3, 0(x2) # store x3 (0xeef9be55) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000eef9be55
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000eef9be55 from memory into f29
fmul.d f27, f2, f29 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0xda185937 # load x3 with 32 MSBs 0x00000000da185937
sw x3, 0(x2) # store x3 (0xda185937) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000da185937
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000da185937 from memory into f31
la x2, scratch
li x3, 0xfef9e903 # load x3 with 32 MSBs 0x00000000fef9e903
sw x3, 0(x2) # store x3 (0xfef9e903) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fef9e903
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000fef9e903 from memory into f29
fmul.d f28, f31, f29 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0xa91c71ec # load x3 with 32 MSBs 0x00000000a91c71ec
sw x3, 0(x2) # store x3 (0xa91c71ec) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a91c71ec
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a91c71ec from memory into f30
la x2, scratch
li x3, 0xede35bb5 # load x3 with 32 MSBs 0x00000000ede35bb5
sw x3, 0(x2) # store x3 (0xede35bb5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ede35bb5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ede35bb5 from memory into f10
fmul.d f29, f30, f10 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x3bc326ba # load x3 with 32 MSBs 0x000000003bc326ba
sw x3, 0(x2) # store x3 (0x3bc326ba) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003bc326ba
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000003bc326ba from memory into f27
la x2, scratch
li x3, 0x2dd872c1 # load x3 with 32 MSBs 0x000000002dd872c1
sw x3, 0(x2) # store x3 (0x2dd872c1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002dd872c1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000002dd872c1 from memory into f10
fmul.d f30, f27, f10 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0xbc99b5d5 # load x3 with 32 MSBs 0x00000000bc99b5d5
sw x3, 0(x2) # store x3 (0xbc99b5d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bc99b5d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000bc99b5d5 from memory into f30
la x2, scratch
li x3, 0xcf4c66fb # load x3 with 32 MSBs 0x00000000cf4c66fb
sw x3, 0(x2) # store x3 (0xcf4c66fb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cf4c66fb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000cf4c66fb from memory into f22
fmul.d f31, f30, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
la x2, scratch
li x3, 0x27a08766 # load x3 with 32 MSBs 0x0000000027a08766
sw x3, 0(x2) # store x3 (0x27a08766) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000027a08766
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000027a08766 from memory into f17
fmul.d f29, f3, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
la x2, scratch
li x3, 0x02451fa4 # load x3 with 32 MSBs 0x0000000002451fa4
sw x3, 0(x2) # store x3 (0x02451fa4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000002451fa4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000002451fa4 from memory into f31
fmul.d f16, f17, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x3263e6d1 # load x3 with 32 MSBs 0x000000003263e6d1
sw x3, 0(x2) # store x3 (0x3263e6d1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003263e6d1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003263e6d1 from memory into f7
fmul.d f26, f22, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
la x2, scratch
li x3, 0x082c0a65 # load x3 with 32 MSBs 0x00000000082c0a65
sw x3, 0(x2) # store x3 (0x082c0a65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000082c0a65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000082c0a65 from memory into f12
fmul.d f19, f18, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
la x2, scratch
li x3, 0x07e7e0c7 # load x3 with 32 MSBs 0x0000000007e7e0c7
sw x3, 0(x2) # store x3 (0x07e7e0c7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000007e7e0c7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000007e7e0c7 from memory into f22
fmul.d f5, f21, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
la x2, scratch
li x3, 0xc95a9a5b # load x3 with 32 MSBs 0x00000000c95a9a5b
sw x3, 0(x2) # store x3 (0xc95a9a5b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c95a9a5b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c95a9a5b from memory into f23
fmul.d f17, f6, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
la x2, scratch
li x3, 0x9363b462 # load x3 with 32 MSBs 0x000000009363b462
sw x3, 0(x2) # store x3 (0x9363b462) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009363b462
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000009363b462 from memory into f27
fmul.d f16, f15, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
la x2, scratch
li x3, 0x64ff6e0f # load x3 with 32 MSBs 0x0000000064ff6e0f
sw x3, 0(x2) # store x3 (0x64ff6e0f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000064ff6e0f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000064ff6e0f from memory into f3
fmul.d f31, f24, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
la x2, scratch
li x3, 0x3e336b24 # load x3 with 32 MSBs 0x000000003e336b24
sw x3, 0(x2) # store x3 (0x3e336b24) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003e336b24
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003e336b24 from memory into f31
fmul.d f1, f22, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
la x2, scratch
li x3, 0x2c5664f2 # load x3 with 32 MSBs 0x000000002c5664f2
sw x3, 0(x2) # store x3 (0x2c5664f2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002c5664f2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002c5664f2 from memory into f11
fmul.d f3, f16, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
la x2, scratch
li x3, 0x41f3147a # load x3 with 32 MSBs 0x0000000041f3147a
sw x3, 0(x2) # store x3 (0x41f3147a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000041f3147a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000041f3147a from memory into f27
fmul.d f6, f19, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
la x2, scratch
li x3, 0x659718bc # load x3 with 32 MSBs 0x00000000659718bc
sw x3, 0(x2) # store x3 (0x659718bc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000659718bc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000659718bc from memory into f8
fmul.d f27, f19, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
la x2, scratch
li x3, 0x6debdcd8 # load x3 with 32 MSBs 0x000000006debdcd8
sw x3, 0(x2) # store x3 (0x6debdcd8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006debdcd8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000006debdcd8 from memory into f30
fmul.d f17, f8, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
la x2, scratch
li x3, 0x2314c387 # load x3 with 32 MSBs 0x000000002314c387
sw x3, 0(x2) # store x3 (0x2314c387) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002314c387
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002314c387 from memory into f12
fmul.d f31, f30, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
la x2, scratch
li x3, 0xd74ff270 # load x3 with 32 MSBs 0x00000000d74ff270
sw x3, 0(x2) # store x3 (0xd74ff270) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d74ff270
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d74ff270 from memory into f2
fmul.d f12, f24, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
la x2, scratch
li x3, 0xc1faa933 # load x3 with 32 MSBs 0x00000000c1faa933
sw x3, 0(x2) # store x3 (0xc1faa933) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c1faa933
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c1faa933 from memory into f9
fmul.d f23, f1, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
la x2, scratch
li x3, 0x04ff377e # load x3 with 32 MSBs 0x0000000004ff377e
sw x3, 0(x2) # store x3 (0x04ff377e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000004ff377e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000004ff377e from memory into f23
fmul.d f21, f17, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
la x2, scratch
li x3, 0x8fb62673 # load x3 with 32 MSBs 0x000000008fb62673
sw x3, 0(x2) # store x3 (0x8fb62673) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008fb62673
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008fb62673 from memory into f16
fmul.d f25, f10, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x66d9a3ee # load x3 with 32 MSBs 0x0000000066d9a3ee
sw x3, 0(x2) # store x3 (0x66d9a3ee) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000066d9a3ee
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000066d9a3ee from memory into f11
fmul.d f16, f17, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
la x2, scratch
li x3, 0x3af3ec7b # load x3 with 32 MSBs 0x000000003af3ec7b
sw x3, 0(x2) # store x3 (0x3af3ec7b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003af3ec7b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003af3ec7b from memory into f23
fmul.d f21, f20, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
la x2, scratch
li x3, 0xebd05392 # load x3 with 32 MSBs 0x00000000ebd05392
sw x3, 0(x2) # store x3 (0xebd05392) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ebd05392
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ebd05392 from memory into f31
fmul.d f24, f21, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
la x2, scratch
li x3, 0xe12301a7 # load x3 with 32 MSBs 0x00000000e12301a7
sw x3, 0(x2) # store x3 (0xe12301a7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e12301a7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000e12301a7 from memory into f26
fmul.d f29, f24, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
la x2, scratch
li x3, 0x33c0ae08 # load x3 with 32 MSBs 0x0000000033c0ae08
sw x3, 0(x2) # store x3 (0x33c0ae08) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000033c0ae08
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000033c0ae08 from memory into f30
fmul.d f7, f15, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
la x2, scratch
li x3, 0x75ff156b # load x3 with 32 MSBs 0x0000000075ff156b
sw x3, 0(x2) # store x3 (0x75ff156b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000075ff156b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000075ff156b from memory into f27
fmul.d f6, f17, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
la x2, scratch
li x3, 0x9a1ab143 # load x3 with 32 MSBs 0x000000009a1ab143
sw x3, 0(x2) # store x3 (0x9a1ab143) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009a1ab143
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009a1ab143 from memory into f9
fmul.d f6, f18, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000001 from memory into f22
la x2, scratch
li x3, 0x4a6d0002 # load x3 with 32 MSBs 0x000000004a6d0002
sw x3, 0(x2) # store x3 (0x4a6d0002) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004a6d0002
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004a6d0002 from memory into f29
fmul.d f31, f22, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
la x2, scratch
li x3, 0x0fd8874a # load x3 with 32 MSBs 0x000000000fd8874a
sw x3, 0(x2) # store x3 (0x0fd8874a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000fd8874a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000fd8874a from memory into f22
fmul.d f2, f19, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
la x2, scratch
li x3, 0x598d4d7b # load x3 with 32 MSBs 0x00000000598d4d7b
sw x3, 0(x2) # store x3 (0x598d4d7b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000598d4d7b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000598d4d7b from memory into f12
fmul.d f9, f3, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0xddde2770 # load x3 with 32 MSBs 0x00000000ddde2770
sw x3, 0(x2) # store x3 (0xddde2770) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ddde2770
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ddde2770 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fmul.d f18, f22, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
la x2, scratch
li x3, 0x8e322c8e # load x3 with 32 MSBs 0x000000008e322c8e
sw x3, 0(x2) # store x3 (0x8e322c8e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008e322c8e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008e322c8e from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fmul.d f22, f6, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
la x2, scratch
li x3, 0xc599dab4 # load x3 with 32 MSBs 0x00000000c599dab4
sw x3, 0(x2) # store x3 (0xc599dab4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c599dab4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c599dab4 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fmul.d f21, f16, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
la x2, scratch
li x3, 0x9469c400 # load x3 with 32 MSBs 0x000000009469c400
sw x3, 0(x2) # store x3 (0x9469c400) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009469c400
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009469c400 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fmul.d f11, f18, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
la x2, scratch
li x3, 0x617e7c49 # load x3 with 32 MSBs 0x00000000617e7c49
sw x3, 0(x2) # store x3 (0x617e7c49) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000617e7c49
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000617e7c49 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fmul.d f3, f29, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
la x2, scratch
li x3, 0xe1beb74a # load x3 with 32 MSBs 0x00000000e1beb74a
sw x3, 0(x2) # store x3 (0xe1beb74a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e1beb74a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e1beb74a from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fmul.d f28, f21, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
la x2, scratch
li x3, 0x197bb158 # load x3 with 32 MSBs 0x00000000197bb158
sw x3, 0(x2) # store x3 (0x197bb158) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000197bb158
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000197bb158 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
fmul.d f22, f24, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
la x2, scratch
li x3, 0x80294b1b # load x3 with 32 MSBs 0x0000000080294b1b
sw x3, 0(x2) # store x3 (0x80294b1b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000080294b1b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000080294b1b from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fmul.d f9, f28, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
la x2, scratch
li x3, 0xbcd5e29d # load x3 with 32 MSBs 0x00000000bcd5e29d
sw x3, 0(x2) # store x3 (0xbcd5e29d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bcd5e29d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000bcd5e29d from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fmul.d f27, f10, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
la x2, scratch
li x3, 0x9980a51f # load x3 with 32 MSBs 0x000000009980a51f
sw x3, 0(x2) # store x3 (0x9980a51f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009980a51f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009980a51f from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fmul.d f30, f6, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
la x2, scratch
li x3, 0x03e07587 # load x3 with 32 MSBs 0x0000000003e07587
sw x3, 0(x2) # store x3 (0x03e07587) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000003e07587
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000003e07587 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fmul.d f28, f18, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
la x2, scratch
li x3, 0x215a2718 # load x3 with 32 MSBs 0x00000000215a2718
sw x3, 0(x2) # store x3 (0x215a2718) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000215a2718
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000215a2718 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fmul.d f23, f28, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
la x2, scratch
li x3, 0x02b49120 # load x3 with 32 MSBs 0x0000000002b49120
sw x3, 0(x2) # store x3 (0x02b49120) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000002b49120
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000002b49120 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fmul.d f14, f28, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
la x2, scratch
li x3, 0xaf29f378 # load x3 with 32 MSBs 0x00000000af29f378
sw x3, 0(x2) # store x3 (0xaf29f378) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000af29f378
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000af29f378 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
fmul.d f21, f10, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
la x2, scratch
li x3, 0x3125b799 # load x3 with 32 MSBs 0x000000003125b799
sw x3, 0(x2) # store x3 (0x3125b799) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003125b799
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000003125b799 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fmul.d f8, f14, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
la x2, scratch
li x3, 0x4e07b542 # load x3 with 32 MSBs 0x000000004e07b542
sw x3, 0(x2) # store x3 (0x4e07b542) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004e07b542
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004e07b542 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fmul.d f3, f17, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0xee7f8ebd # load x3 with 32 MSBs 0x00000000ee7f8ebd
sw x3, 0(x2) # store x3 (0xee7f8ebd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ee7f8ebd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ee7f8ebd from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fmul.d f10, f14, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
la x2, scratch
li x3, 0xb26498bf # load x3 with 32 MSBs 0x00000000b26498bf
sw x3, 0(x2) # store x3 (0xb26498bf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b26498bf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b26498bf from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fmul.d f27, f5, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
la x2, scratch
li x3, 0x76a41c10 # load x3 with 32 MSBs 0x0000000076a41c10
sw x3, 0(x2) # store x3 (0x76a41c10) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000076a41c10
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000076a41c10 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fmul.d f16, f20, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
la x2, scratch
li x3, 0x96cc58f9 # load x3 with 32 MSBs 0x0000000096cc58f9
sw x3, 0(x2) # store x3 (0x96cc58f9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000096cc58f9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000096cc58f9 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fmul.d f2, f29, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
la x2, scratch
li x3, 0x56225bf5 # load x3 with 32 MSBs 0x0000000056225bf5
sw x3, 0(x2) # store x3 (0x56225bf5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000056225bf5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000056225bf5 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fmul.d f18, f26, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
la x2, scratch
li x3, 0xc611c9ab # load x3 with 32 MSBs 0x00000000c611c9ab
sw x3, 0(x2) # store x3 (0xc611c9ab) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c611c9ab
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000c611c9ab from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fmul.d f10, f27, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff8000000000000)
la x2, scratch
li x3, 0xb4ea4f9f # load x3 with 32 MSBs 0x00000000b4ea4f9f
sw x3, 0(x2) # store x3 (0xb4ea4f9f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b4ea4f9f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b4ea4f9f from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff8000000000000 from memory into f17
fmul.d f1, f11, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
la x2, scratch
li x3, 0x0c692139 # load x3 with 32 MSBs 0x000000000c692139
sw x3, 0(x2) # store x3 (0x0c692139) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000c692139
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000c692139 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
fmul.d f15, f31, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
la x2, scratch
li x3, 0xb25944f0 # load x3 with 32 MSBs 0x00000000b25944f0
sw x3, 0(x2) # store x3 (0xb25944f0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b25944f0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b25944f0 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fmul.d f24, f7, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000001)
la x2, scratch
li x3, 0x7382f181 # load x3 with 32 MSBs 0x000000007382f181
sw x3, 0(x2) # store x3 (0x7382f181) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007382f181
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007382f181 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000001 from memory into f24
fmul.d f12, f31, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
la x2, scratch
li x3, 0x61c59393 # load x3 with 32 MSBs 0x0000000061c59393
sw x3, 0(x2) # store x3 (0x61c59393) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000061c59393
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000061c59393 from memory into f17
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
fmul.d f11, f17, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
la x2, scratch
li x3, 0x731ce6eb # load x3 with 32 MSBs 0x00000000731ce6eb
sw x3, 0(x2) # store x3 (0x731ce6eb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000731ce6eb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000731ce6eb from memory into f28
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fmul.d f20, f28, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0xfb4ed868 # load x3 with 32 MSBs 0x00000000fb4ed868
sw x3, 0(x2) # store x3 (0xfb4ed868) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fb4ed868
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000fb4ed868 from memory into f0
la x2, scratch
li x3, 0xe0375fca # load x3 with 32 MSBs 0x00000000e0375fca
sw x3, 0(x2) # store x3 (0xe0375fca) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e0375fca
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e0375fca from memory into f23
fmul.d f0, f0, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x41f464d6 # load x3 with 32 MSBs 0x0000000041f464d6
sw x3, 0(x2) # store x3 (0x41f464d6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000041f464d6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000041f464d6 from memory into f1
la x2, scratch
li x3, 0x0f9e3884 # load x3 with 32 MSBs 0x000000000f9e3884
sw x3, 0(x2) # store x3 (0x0f9e3884) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000f9e3884
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000f9e3884 from memory into f21
fmul.d f1, f1, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0xd399c5d5 # load x3 with 32 MSBs 0x00000000d399c5d5
sw x3, 0(x2) # store x3 (0xd399c5d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d399c5d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d399c5d5 from memory into f2
la x2, scratch
li x3, 0x6989f29e # load x3 with 32 MSBs 0x000000006989f29e
sw x3, 0(x2) # store x3 (0x6989f29e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006989f29e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006989f29e from memory into f7
fmul.d f2, f2, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x445dd820 # load x3 with 32 MSBs 0x00000000445dd820
sw x3, 0(x2) # store x3 (0x445dd820) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000445dd820
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000445dd820 from memory into f3
la x2, scratch
li x3, 0xd5bd1639 # load x3 with 32 MSBs 0x00000000d5bd1639
sw x3, 0(x2) # store x3 (0xd5bd1639) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d5bd1639
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d5bd1639 from memory into f17
fmul.d f3, f3, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2210a00b # load x3 with 32 MSBs 0x000000002210a00b
sw x3, 0(x2) # store x3 (0x2210a00b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002210a00b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002210a00b from memory into f4
la x2, scratch
li x3, 0xc85c9668 # load x3 with 32 MSBs 0x00000000c85c9668
sw x3, 0(x2) # store x3 (0xc85c9668) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c85c9668
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c85c9668 from memory into f6
fmul.d f4, f4, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x079405d5 # load x3 with 32 MSBs 0x00000000079405d5
sw x3, 0(x2) # store x3 (0x079405d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000079405d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000079405d5 from memory into f5
la x2, scratch
li x3, 0x413972d5 # load x3 with 32 MSBs 0x00000000413972d5
sw x3, 0(x2) # store x3 (0x413972d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000413972d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000413972d5 from memory into f3
fmul.d f5, f5, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xdbd40e0c # load x3 with 32 MSBs 0x00000000dbd40e0c
sw x3, 0(x2) # store x3 (0xdbd40e0c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dbd40e0c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000dbd40e0c from memory into f6
la x2, scratch
li x3, 0x5f40bb9c # load x3 with 32 MSBs 0x000000005f40bb9c
sw x3, 0(x2) # store x3 (0x5f40bb9c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005f40bb9c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005f40bb9c from memory into f8
fmul.d f6, f6, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9d23d7fe # load x3 with 32 MSBs 0x000000009d23d7fe
sw x3, 0(x2) # store x3 (0x9d23d7fe) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009d23d7fe
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009d23d7fe from memory into f7
la x2, scratch
li x3, 0x38b1b46f # load x3 with 32 MSBs 0x0000000038b1b46f
sw x3, 0(x2) # store x3 (0x38b1b46f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000038b1b46f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000038b1b46f from memory into f11
fmul.d f7, f7, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x32475ab7 # load x3 with 32 MSBs 0x0000000032475ab7
sw x3, 0(x2) # store x3 (0x32475ab7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000032475ab7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000032475ab7 from memory into f8
la x2, scratch
li x3, 0x37981462 # load x3 with 32 MSBs 0x0000000037981462
sw x3, 0(x2) # store x3 (0x37981462) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000037981462
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000037981462 from memory into f9
fmul.d f8, f8, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xe9edaf15 # load x3 with 32 MSBs 0x00000000e9edaf15
sw x3, 0(x2) # store x3 (0xe9edaf15) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e9edaf15
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e9edaf15 from memory into f9
la x2, scratch
li x3, 0x71c6b929 # load x3 with 32 MSBs 0x0000000071c6b929
sw x3, 0(x2) # store x3 (0x71c6b929) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000071c6b929
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000071c6b929 from memory into f2
fmul.d f9, f9, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x9c35574f # load x3 with 32 MSBs 0x000000009c35574f
sw x3, 0(x2) # store x3 (0x9c35574f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009c35574f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009c35574f from memory into f10
la x2, scratch
li x3, 0xcb4a820d # load x3 with 32 MSBs 0x00000000cb4a820d
sw x3, 0(x2) # store x3 (0xcb4a820d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cb4a820d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cb4a820d from memory into f25
fmul.d f10, f10, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0x8e753585 # load x3 with 32 MSBs 0x000000008e753585
sw x3, 0(x2) # store x3 (0x8e753585) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008e753585
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000008e753585 from memory into f11
la x2, scratch
li x3, 0xe3765787 # load x3 with 32 MSBs 0x00000000e3765787
sw x3, 0(x2) # store x3 (0xe3765787) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e3765787
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e3765787 from memory into f1
fmul.d f11, f11, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0x2190cbce # load x3 with 32 MSBs 0x000000002190cbce
sw x3, 0(x2) # store x3 (0x2190cbce) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002190cbce
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002190cbce from memory into f12
la x2, scratch
li x3, 0xb066229d # load x3 with 32 MSBs 0x00000000b066229d
sw x3, 0(x2) # store x3 (0xb066229d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b066229d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b066229d from memory into f11
fmul.d f12, f12, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x832a66af # load x3 with 32 MSBs 0x00000000832a66af
sw x3, 0(x2) # store x3 (0x832a66af) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000832a66af
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000832a66af from memory into f13
la x2, scratch
li x3, 0x6aca55bb # load x3 with 32 MSBs 0x000000006aca55bb
sw x3, 0(x2) # store x3 (0x6aca55bb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006aca55bb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006aca55bb from memory into f22
fmul.d f13, f13, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x5175dd37 # load x3 with 32 MSBs 0x000000005175dd37
sw x3, 0(x2) # store x3 (0x5175dd37) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005175dd37
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000005175dd37 from memory into f14
la x2, scratch
li x3, 0x81840ccb # load x3 with 32 MSBs 0x0000000081840ccb
sw x3, 0(x2) # store x3 (0x81840ccb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000081840ccb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000081840ccb from memory into f29
fmul.d f14, f14, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0x38316b57 # load x3 with 32 MSBs 0x0000000038316b57
sw x3, 0(x2) # store x3 (0x38316b57) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000038316b57
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000038316b57 from memory into f15
la x2, scratch
li x3, 0xb9460c79 # load x3 with 32 MSBs 0x00000000b9460c79
sw x3, 0(x2) # store x3 (0xb9460c79) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b9460c79
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b9460c79 from memory into f11
fmul.d f15, f15, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x34eda903 # load x3 with 32 MSBs 0x0000000034eda903
sw x3, 0(x2) # store x3 (0x34eda903) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000034eda903
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000034eda903 from memory into f16
la x2, scratch
li x3, 0x144d2834 # load x3 with 32 MSBs 0x00000000144d2834
sw x3, 0(x2) # store x3 (0x144d2834) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000144d2834
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000144d2834 from memory into f11
fmul.d f16, f16, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0x71b0efa0 # load x3 with 32 MSBs 0x0000000071b0efa0
sw x3, 0(x2) # store x3 (0x71b0efa0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000071b0efa0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000071b0efa0 from memory into f17
la x2, scratch
li x3, 0xdb6c9b5d # load x3 with 32 MSBs 0x00000000db6c9b5d
sw x3, 0(x2) # store x3 (0xdb6c9b5d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000db6c9b5d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000db6c9b5d from memory into f20
fmul.d f17, f17, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0xba4cc034 # load x3 with 32 MSBs 0x00000000ba4cc034
sw x3, 0(x2) # store x3 (0xba4cc034) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ba4cc034
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ba4cc034 from memory into f18
la x2, scratch
li x3, 0x90268333 # load x3 with 32 MSBs 0x0000000090268333
sw x3, 0(x2) # store x3 (0x90268333) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000090268333
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000090268333 from memory into f31
fmul.d f18, f18, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0xfe3c7c85 # load x3 with 32 MSBs 0x00000000fe3c7c85
sw x3, 0(x2) # store x3 (0xfe3c7c85) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fe3c7c85
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000fe3c7c85 from memory into f19
la x2, scratch
li x3, 0xb2704f11 # load x3 with 32 MSBs 0x00000000b2704f11
sw x3, 0(x2) # store x3 (0xb2704f11) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b2704f11
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b2704f11 from memory into f5
fmul.d f19, f19, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0x13925377 # load x3 with 32 MSBs 0x0000000013925377
sw x3, 0(x2) # store x3 (0x13925377) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000013925377
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000013925377 from memory into f20
la x2, scratch
li x3, 0xce57ad2f # load x3 with 32 MSBs 0x00000000ce57ad2f
sw x3, 0(x2) # store x3 (0xce57ad2f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ce57ad2f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ce57ad2f from memory into f17
fmul.d f20, f20, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x9719db6f # load x3 with 32 MSBs 0x000000009719db6f
sw x3, 0(x2) # store x3 (0x9719db6f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009719db6f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009719db6f from memory into f21
la x2, scratch
li x3, 0x045b69f3 # load x3 with 32 MSBs 0x00000000045b69f3
sw x3, 0(x2) # store x3 (0x045b69f3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000045b69f3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000045b69f3 from memory into f22
fmul.d f21, f21, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x3b9fabce # load x3 with 32 MSBs 0x000000003b9fabce
sw x3, 0(x2) # store x3 (0x3b9fabce) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003b9fabce
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003b9fabce from memory into f22
la x2, scratch
li x3, 0x2c3fddad # load x3 with 32 MSBs 0x000000002c3fddad
sw x3, 0(x2) # store x3 (0x2c3fddad) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002c3fddad
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000002c3fddad from memory into f15
fmul.d f22, f22, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x92793716 # load x3 with 32 MSBs 0x0000000092793716
sw x3, 0(x2) # store x3 (0x92793716) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000092793716
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000092793716 from memory into f23
la x2, scratch
li x3, 0x781629fd # load x3 with 32 MSBs 0x00000000781629fd
sw x3, 0(x2) # store x3 (0x781629fd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000781629fd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000781629fd from memory into f18
fmul.d f23, f23, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xbc203d2a # load x3 with 32 MSBs 0x00000000bc203d2a
sw x3, 0(x2) # store x3 (0xbc203d2a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bc203d2a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bc203d2a from memory into f24
la x2, scratch
li x3, 0x85656b15 # load x3 with 32 MSBs 0x0000000085656b15
sw x3, 0(x2) # store x3 (0x85656b15) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000085656b15
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000085656b15 from memory into f13
fmul.d f24, f24, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0xe888dc0d # load x3 with 32 MSBs 0x00000000e888dc0d
sw x3, 0(x2) # store x3 (0xe888dc0d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e888dc0d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e888dc0d from memory into f25
la x2, scratch
li x3, 0x93634d9d # load x3 with 32 MSBs 0x0000000093634d9d
sw x3, 0(x2) # store x3 (0x93634d9d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000093634d9d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000093634d9d from memory into f20
fmul.d f25, f25, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0xf1c96783 # load x3 with 32 MSBs 0x00000000f1c96783
sw x3, 0(x2) # store x3 (0xf1c96783) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f1c96783
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f1c96783 from memory into f26
la x2, scratch
li x3, 0x2fcfd197 # load x3 with 32 MSBs 0x000000002fcfd197
sw x3, 0(x2) # store x3 (0x2fcfd197) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002fcfd197
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000002fcfd197 from memory into f15
fmul.d f26, f26, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x28ebbba4 # load x3 with 32 MSBs 0x0000000028ebbba4
sw x3, 0(x2) # store x3 (0x28ebbba4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000028ebbba4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000028ebbba4 from memory into f27
la x2, scratch
li x3, 0xb92594e3 # load x3 with 32 MSBs 0x00000000b92594e3
sw x3, 0(x2) # store x3 (0xb92594e3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b92594e3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b92594e3 from memory into f31
fmul.d f27, f27, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x177aaee4 # load x3 with 32 MSBs 0x00000000177aaee4
sw x3, 0(x2) # store x3 (0x177aaee4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000177aaee4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000177aaee4 from memory into f28
la x2, scratch
li x3, 0x4f2ce90e # load x3 with 32 MSBs 0x000000004f2ce90e
sw x3, 0(x2) # store x3 (0x4f2ce90e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004f2ce90e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004f2ce90e from memory into f1
fmul.d f28, f28, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x8e65e4b2 # load x3 with 32 MSBs 0x000000008e65e4b2
sw x3, 0(x2) # store x3 (0x8e65e4b2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008e65e4b2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008e65e4b2 from memory into f29
la x2, scratch
li x3, 0x5c9e252b # load x3 with 32 MSBs 0x000000005c9e252b
sw x3, 0(x2) # store x3 (0x5c9e252b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005c9e252b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000005c9e252b from memory into f15
fmul.d f29, f29, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x77dc1251 # load x3 with 32 MSBs 0x0000000077dc1251
sw x3, 0(x2) # store x3 (0x77dc1251) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000077dc1251
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000077dc1251 from memory into f30
la x2, scratch
li x3, 0xaa63dc5b # load x3 with 32 MSBs 0x00000000aa63dc5b
sw x3, 0(x2) # store x3 (0xaa63dc5b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000aa63dc5b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000aa63dc5b from memory into f19
fmul.d f30, f30, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0xa0108be3 # load x3 with 32 MSBs 0x00000000a0108be3
sw x3, 0(x2) # store x3 (0xa0108be3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a0108be3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a0108be3 from memory into f31
la x2, scratch
li x3, 0xd84c9f97 # load x3 with 32 MSBs 0x00000000d84c9f97
sw x3, 0(x2) # store x3 (0xd84c9f97) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d84c9f97
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d84c9f97 from memory into f12
fmul.d f31, f31, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0xe35485f2 # load x3 with 32 MSBs 0x00000000e35485f2
sw x3, 0(x2) # store x3 (0xe35485f2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e35485f2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000e35485f2 from memory into f18
la x2, scratch
li x3, 0x4068703a # load x3 with 32 MSBs 0x000000004068703a
sw x3, 0(x2) # store x3 (0x4068703a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004068703a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000004068703a from memory into f0
fmul.d f0, f18, f0 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x1cd634da # load x3 with 32 MSBs 0x000000001cd634da
sw x3, 0(x2) # store x3 (0x1cd634da) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001cd634da
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001cd634da from memory into f20
la x2, scratch
li x3, 0x6675f5d8 # load x3 with 32 MSBs 0x000000006675f5d8
sw x3, 0(x2) # store x3 (0x6675f5d8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006675f5d8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006675f5d8 from memory into f1
fmul.d f1, f20, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x75535a47 # load x3 with 32 MSBs 0x0000000075535a47
sw x3, 0(x2) # store x3 (0x75535a47) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000075535a47
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000075535a47 from memory into f12
la x2, scratch
li x3, 0x5ca358b6 # load x3 with 32 MSBs 0x000000005ca358b6
sw x3, 0(x2) # store x3 (0x5ca358b6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005ca358b6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000005ca358b6 from memory into f2
fmul.d f2, f12, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x1980cf2b # load x3 with 32 MSBs 0x000000001980cf2b
sw x3, 0(x2) # store x3 (0x1980cf2b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001980cf2b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000001980cf2b from memory into f3
la x2, scratch
li x3, 0x389be6fc # load x3 with 32 MSBs 0x00000000389be6fc
sw x3, 0(x2) # store x3 (0x389be6fc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000389be6fc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000389be6fc from memory into f3
fmul.d f3, f3, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3b063f99 # load x3 with 32 MSBs 0x000000003b063f99
sw x3, 0(x2) # store x3 (0x3b063f99) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003b063f99
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003b063f99 from memory into f2
la x2, scratch
li x3, 0xa34cc1e4 # load x3 with 32 MSBs 0x00000000a34cc1e4
sw x3, 0(x2) # store x3 (0xa34cc1e4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a34cc1e4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a34cc1e4 from memory into f4
fmul.d f4, f2, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1499c1f6 # load x3 with 32 MSBs 0x000000001499c1f6
sw x3, 0(x2) # store x3 (0x1499c1f6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001499c1f6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001499c1f6 from memory into f20
la x2, scratch
li x3, 0x92c60e5e # load x3 with 32 MSBs 0x0000000092c60e5e
sw x3, 0(x2) # store x3 (0x92c60e5e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000092c60e5e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000092c60e5e from memory into f5
fmul.d f5, f20, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x67fba47f # load x3 with 32 MSBs 0x0000000067fba47f
sw x3, 0(x2) # store x3 (0x67fba47f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000067fba47f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000067fba47f from memory into f8
la x2, scratch
li x3, 0x5d5bfbad # load x3 with 32 MSBs 0x000000005d5bfbad
sw x3, 0(x2) # store x3 (0x5d5bfbad) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005d5bfbad
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005d5bfbad from memory into f6
fmul.d f6, f8, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xcd91d919 # load x3 with 32 MSBs 0x00000000cd91d919
sw x3, 0(x2) # store x3 (0xcd91d919) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cd91d919
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000cd91d919 from memory into f15
la x2, scratch
li x3, 0x549a15af # load x3 with 32 MSBs 0x00000000549a15af
sw x3, 0(x2) # store x3 (0x549a15af) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000549a15af
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000549a15af from memory into f7
fmul.d f7, f15, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x697cb2d6 # load x3 with 32 MSBs 0x00000000697cb2d6
sw x3, 0(x2) # store x3 (0x697cb2d6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000697cb2d6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000697cb2d6 from memory into f14
la x2, scratch
li x3, 0x5863316e # load x3 with 32 MSBs 0x000000005863316e
sw x3, 0(x2) # store x3 (0x5863316e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005863316e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005863316e from memory into f8
fmul.d f8, f14, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x092045ca # load x3 with 32 MSBs 0x00000000092045ca
sw x3, 0(x2) # store x3 (0x092045ca) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000092045ca
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000092045ca from memory into f19
la x2, scratch
li x3, 0x2e211ef7 # load x3 with 32 MSBs 0x000000002e211ef7
sw x3, 0(x2) # store x3 (0x2e211ef7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002e211ef7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000002e211ef7 from memory into f9
fmul.d f9, f19, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x45e39a15 # load x3 with 32 MSBs 0x0000000045e39a15
sw x3, 0(x2) # store x3 (0x45e39a15) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000045e39a15
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000045e39a15 from memory into f16
la x2, scratch
li x3, 0xe56e9376 # load x3 with 32 MSBs 0x00000000e56e9376
sw x3, 0(x2) # store x3 (0xe56e9376) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e56e9376
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e56e9376 from memory into f10
fmul.d f10, f16, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xc777c5e7 # load x3 with 32 MSBs 0x00000000c777c5e7
sw x3, 0(x2) # store x3 (0xc777c5e7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c777c5e7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c777c5e7 from memory into f31
la x2, scratch
li x3, 0xd99796a3 # load x3 with 32 MSBs 0x00000000d99796a3
sw x3, 0(x2) # store x3 (0xd99796a3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d99796a3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d99796a3 from memory into f11
fmul.d f11, f31, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x7e89ab9b # load x3 with 32 MSBs 0x000000007e89ab9b
sw x3, 0(x2) # store x3 (0x7e89ab9b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007e89ab9b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007e89ab9b from memory into f18
la x2, scratch
li x3, 0xbafc91dc # load x3 with 32 MSBs 0x00000000bafc91dc
sw x3, 0(x2) # store x3 (0xbafc91dc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bafc91dc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bafc91dc from memory into f12
fmul.d f12, f18, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0x800d6767 # load x3 with 32 MSBs 0x00000000800d6767
sw x3, 0(x2) # store x3 (0x800d6767) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000800d6767
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000800d6767 from memory into f25
la x2, scratch
li x3, 0x90f698d5 # load x3 with 32 MSBs 0x0000000090f698d5
sw x3, 0(x2) # store x3 (0x90f698d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000090f698d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000090f698d5 from memory into f13
fmul.d f13, f25, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0x172dee7a # load x3 with 32 MSBs 0x00000000172dee7a
sw x3, 0(x2) # store x3 (0x172dee7a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000172dee7a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000172dee7a from memory into f12
la x2, scratch
li x3, 0x245f783c # load x3 with 32 MSBs 0x00000000245f783c
sw x3, 0(x2) # store x3 (0x245f783c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000245f783c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000245f783c from memory into f14
fmul.d f14, f12, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x508b9dfb # load x3 with 32 MSBs 0x00000000508b9dfb
sw x3, 0(x2) # store x3 (0x508b9dfb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000508b9dfb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000508b9dfb from memory into f6
la x2, scratch
li x3, 0xe290eb19 # load x3 with 32 MSBs 0x00000000e290eb19
sw x3, 0(x2) # store x3 (0xe290eb19) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e290eb19
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e290eb19 from memory into f15
fmul.d f15, f6, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0xafa697c5 # load x3 with 32 MSBs 0x00000000afa697c5
sw x3, 0(x2) # store x3 (0xafa697c5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000afa697c5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000afa697c5 from memory into f22
la x2, scratch
li x3, 0xce019d36 # load x3 with 32 MSBs 0x00000000ce019d36
sw x3, 0(x2) # store x3 (0xce019d36) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ce019d36
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000ce019d36 from memory into f16
fmul.d f16, f22, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0x3ef4cbc6 # load x3 with 32 MSBs 0x000000003ef4cbc6
sw x3, 0(x2) # store x3 (0x3ef4cbc6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003ef4cbc6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003ef4cbc6 from memory into f23
la x2, scratch
li x3, 0x6d553c06 # load x3 with 32 MSBs 0x000000006d553c06
sw x3, 0(x2) # store x3 (0x6d553c06) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006d553c06
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000006d553c06 from memory into f17
fmul.d f17, f23, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0x9f9e9194 # load x3 with 32 MSBs 0x000000009f9e9194
sw x3, 0(x2) # store x3 (0x9f9e9194) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009f9e9194
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009f9e9194 from memory into f11
la x2, scratch
li x3, 0x6abcb456 # load x3 with 32 MSBs 0x000000006abcb456
sw x3, 0(x2) # store x3 (0x6abcb456) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006abcb456
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006abcb456 from memory into f18
fmul.d f18, f11, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x4d2a2b45 # load x3 with 32 MSBs 0x000000004d2a2b45
sw x3, 0(x2) # store x3 (0x4d2a2b45) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004d2a2b45
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004d2a2b45 from memory into f7
la x2, scratch
li x3, 0x2affa0e0 # load x3 with 32 MSBs 0x000000002affa0e0
sw x3, 0(x2) # store x3 (0x2affa0e0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002affa0e0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002affa0e0 from memory into f19
fmul.d f19, f7, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0xe91e1558 # load x3 with 32 MSBs 0x00000000e91e1558
sw x3, 0(x2) # store x3 (0xe91e1558) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e91e1558
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e91e1558 from memory into f30
la x2, scratch
li x3, 0xa51872b6 # load x3 with 32 MSBs 0x00000000a51872b6
sw x3, 0(x2) # store x3 (0xa51872b6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a51872b6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a51872b6 from memory into f20
fmul.d f20, f30, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0x980db44c # load x3 with 32 MSBs 0x00000000980db44c
sw x3, 0(x2) # store x3 (0x980db44c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000980db44c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000980db44c from memory into f3
la x2, scratch
li x3, 0x023f6e06 # load x3 with 32 MSBs 0x00000000023f6e06
sw x3, 0(x2) # store x3 (0x023f6e06) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000023f6e06
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000023f6e06 from memory into f21
fmul.d f21, f3, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0xe3fe4f32 # load x3 with 32 MSBs 0x00000000e3fe4f32
sw x3, 0(x2) # store x3 (0xe3fe4f32) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e3fe4f32
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e3fe4f32 from memory into f3
la x2, scratch
li x3, 0x252fc66c # load x3 with 32 MSBs 0x00000000252fc66c
sw x3, 0(x2) # store x3 (0x252fc66c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000252fc66c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000252fc66c from memory into f22
fmul.d f22, f3, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0xa5115c15 # load x3 with 32 MSBs 0x00000000a5115c15
sw x3, 0(x2) # store x3 (0xa5115c15) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a5115c15
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a5115c15 from memory into f10
la x2, scratch
li x3, 0xbef491c6 # load x3 with 32 MSBs 0x00000000bef491c6
sw x3, 0(x2) # store x3 (0xbef491c6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bef491c6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000bef491c6 from memory into f23
fmul.d f23, f10, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0xe04e29a9 # load x3 with 32 MSBs 0x00000000e04e29a9
sw x3, 0(x2) # store x3 (0xe04e29a9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e04e29a9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000e04e29a9 from memory into f31
la x2, scratch
li x3, 0x049d1ebf # load x3 with 32 MSBs 0x00000000049d1ebf
sw x3, 0(x2) # store x3 (0x049d1ebf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000049d1ebf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000049d1ebf from memory into f24
fmul.d f24, f31, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x7448898a # load x3 with 32 MSBs 0x000000007448898a
sw x3, 0(x2) # store x3 (0x7448898a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007448898a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007448898a from memory into f31
la x2, scratch
li x3, 0x569f259a # load x3 with 32 MSBs 0x00000000569f259a
sw x3, 0(x2) # store x3 (0x569f259a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000569f259a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000569f259a from memory into f25
fmul.d f25, f31, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x740e2733 # load x3 with 32 MSBs 0x00000000740e2733
sw x3, 0(x2) # store x3 (0x740e2733) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000740e2733
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000740e2733 from memory into f20
la x2, scratch
li x3, 0xdb92d1e5 # load x3 with 32 MSBs 0x00000000db92d1e5
sw x3, 0(x2) # store x3 (0xdb92d1e5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000db92d1e5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000db92d1e5 from memory into f26
fmul.d f26, f20, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0x217b3cd8 # load x3 with 32 MSBs 0x00000000217b3cd8
sw x3, 0(x2) # store x3 (0x217b3cd8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000217b3cd8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000217b3cd8 from memory into f30
la x2, scratch
li x3, 0x5f6251ee # load x3 with 32 MSBs 0x000000005f6251ee
sw x3, 0(x2) # store x3 (0x5f6251ee) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005f6251ee
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000005f6251ee from memory into f27
fmul.d f27, f30, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0xd7ec83e1 # load x3 with 32 MSBs 0x00000000d7ec83e1
sw x3, 0(x2) # store x3 (0xd7ec83e1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d7ec83e1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d7ec83e1 from memory into f30
la x2, scratch
li x3, 0xd2d38e43 # load x3 with 32 MSBs 0x00000000d2d38e43
sw x3, 0(x2) # store x3 (0xd2d38e43) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d2d38e43
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000d2d38e43 from memory into f28
fmul.d f28, f30, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xee260682 # load x3 with 32 MSBs 0x00000000ee260682
sw x3, 0(x2) # store x3 (0xee260682) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ee260682
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ee260682 from memory into f26
la x2, scratch
li x3, 0x8c9afcaf # load x3 with 32 MSBs 0x000000008c9afcaf
sw x3, 0(x2) # store x3 (0x8c9afcaf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008c9afcaf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008c9afcaf from memory into f29
fmul.d f29, f26, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x9ef83949 # load x3 with 32 MSBs 0x000000009ef83949
sw x3, 0(x2) # store x3 (0x9ef83949) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009ef83949
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009ef83949 from memory into f29
la x2, scratch
li x3, 0x73cb0e9c # load x3 with 32 MSBs 0x0000000073cb0e9c
sw x3, 0(x2) # store x3 (0x73cb0e9c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000073cb0e9c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000073cb0e9c from memory into f30
fmul.d f30, f29, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x7ca66d94 # load x3 with 32 MSBs 0x000000007ca66d94
sw x3, 0(x2) # store x3 (0x7ca66d94) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007ca66d94
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007ca66d94 from memory into f28
la x2, scratch
li x3, 0xfa7890f1 # load x3 with 32 MSBs 0x00000000fa7890f1
sw x3, 0(x2) # store x3 (0xfa7890f1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fa7890f1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000fa7890f1 from memory into f31
fmul.d f31, f28, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0xda3a3681 # load x3 with 32 MSBs 0x00000000da3a3681
sw x3, 0(x2) # store x3 (0xda3a3681) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000da3a3681
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000da3a3681 from memory into f3
la x2, scratch
li x3, 0x68a7d6bf # load x3 with 32 MSBs 0x0000000068a7d6bf
sw x3, 0(x2) # store x3 (0x68a7d6bf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000068a7d6bf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000068a7d6bf from memory into f15
fmul.d f16, f3, f15, dyn # perform operation
fmul.d f16, f3, f15, rdn # perform operation
fmul.d f16, f3, f15, rmm # perform operation
fmul.d f16, f3, f15, rne # perform operation
fmul.d f16, f3, f15, rtz # perform operation
fmul.d f16, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fmul.d f3, f1, f18, dyn # perform operation
fmul.d f3, f1, f18, rdn # perform operation
fmul.d f3, f1, f18, rmm # perform operation
fmul.d f3, f1, f18, rne # perform operation
fmul.d f3, f1, f18, rtz # perform operation
fmul.d f3, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fmul.d f11, f29, f9, dyn # perform operation
fmul.d f11, f29, f9, rdn # perform operation
fmul.d f11, f29, f9, rmm # perform operation
fmul.d f11, f29, f9, rne # perform operation
fmul.d f11, f29, f9, rtz # perform operation
fmul.d f11, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fmul.d f8, f2, f23, dyn # perform operation
fmul.d f8, f2, f23, rdn # perform operation
fmul.d f8, f2, f23, rmm # perform operation
fmul.d f8, f2, f23, rne # perform operation
fmul.d f8, f2, f23, rtz # perform operation
fmul.d f8, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fmul.d f2, f20, f7, dyn # perform operation
fmul.d f2, f20, f7, rdn # perform operation
fmul.d f2, f20, f7, rmm # perform operation
fmul.d f2, f20, f7, rne # perform operation
fmul.d f2, f20, f7, rtz # perform operation
fmul.d f2, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fmul.d f21, f8, f5, dyn # perform operation
fmul.d f21, f8, f5, rdn # perform operation
fmul.d f21, f8, f5, rmm # perform operation
fmul.d f21, f8, f5, rne # perform operation
fmul.d f21, f8, f5, rtz # perform operation
fmul.d f21, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fmul.d f13, f27, f10, dyn # perform operation
fmul.d f13, f27, f10, rdn # perform operation
fmul.d f13, f27, f10, rmm # perform operation
fmul.d f13, f27, f10, rne # perform operation
fmul.d f13, f27, f10, rtz # perform operation
fmul.d f13, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fmul.d f14, f7, f3, dyn # perform operation
fmul.d f14, f7, f3, rdn # perform operation
fmul.d f14, f7, f3, rmm # perform operation
fmul.d f14, f7, f3, rne # perform operation
fmul.d f14, f7, f3, rtz # perform operation
fmul.d f14, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
fmul.d f9, f8, f10, dyn # perform operation
fmul.d f9, f8, f10, rdn # perform operation
fmul.d f9, f8, f10, rmm # perform operation
fmul.d f9, f8, f10, rne # perform operation
fmul.d f9, f8, f10, rtz # perform operation
fmul.d f9, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
fmul.d f21, f2, f28, dyn # perform operation
fmul.d f21, f2, f28, rdn # perform operation
fmul.d f21, f2, f28, rmm # perform operation
fmul.d f21, f2, f28, rne # perform operation
fmul.d f21, f2, f28, rtz # perform operation
fmul.d f21, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
fmul.d f24, f20, f11, dyn # perform operation
fmul.d f24, f20, f11, rdn # perform operation
fmul.d f24, f20, f11, rmm # perform operation
fmul.d f24, f20, f11, rne # perform operation
fmul.d f24, f20, f11, rtz # perform operation
fmul.d f24, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fmul.d f21, f22, f25, dyn # perform operation
fmul.d f21, f22, f25, rdn # perform operation
fmul.d f21, f22, f25, rmm # perform operation
fmul.d f21, f22, f25, rne # perform operation
fmul.d f21, f22, f25, rtz # perform operation
fmul.d f21, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fmul.d f24, f11, f10, dyn # perform operation
fmul.d f24, f11, f10, rdn # perform operation
fmul.d f24, f11, f10, rmm # perform operation
fmul.d f24, f11, f10, rne # perform operation
fmul.d f24, f11, f10, rtz # perform operation
fmul.d f24, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fmul.d f5, f28, f15, dyn # perform operation
fmul.d f5, f28, f15, rdn # perform operation
fmul.d f5, f28, f15, rmm # perform operation
fmul.d f5, f28, f15, rne # perform operation
fmul.d f5, f28, f15, rtz # perform operation
fmul.d f5, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fmul.d f19, f25, f27, dyn # perform operation
fmul.d f19, f25, f27, rdn # perform operation
fmul.d f19, f25, f27, rmm # perform operation
fmul.d f19, f25, f27, rne # perform operation
fmul.d f19, f25, f27, rtz # perform operation
fmul.d f19, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fmul.d f29, f23, f1, dyn # perform operation
fmul.d f29, f23, f1, rdn # perform operation
fmul.d f29, f23, f1, rmm # perform operation
fmul.d f29, f23, f1, rne # perform operation
fmul.d f29, f23, f1, rtz # perform operation
fmul.d f29, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fmul.d f19, f9, f2, dyn # perform operation
fmul.d f19, f9, f2, rdn # perform operation
fmul.d f19, f9, f2, rmm # perform operation
fmul.d f19, f9, f2, rne # perform operation
fmul.d f19, f9, f2, rtz # perform operation
fmul.d f19, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fmul.d f27, f21, f22, dyn # perform operation
fmul.d f27, f21, f22, rdn # perform operation
fmul.d f27, f21, f22, rmm # perform operation
fmul.d f27, f21, f22, rne # perform operation
fmul.d f27, f21, f22, rtz # perform operation
fmul.d f27, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fmul.d f10, f31, f12, dyn # perform operation
fmul.d f10, f31, f12, rdn # perform operation
fmul.d f10, f31, f12, rmm # perform operation
fmul.d f10, f31, f12, rne # perform operation
fmul.d f10, f31, f12, rtz # perform operation
fmul.d f10, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fmul.d f10, f29, f3, dyn # perform operation
fmul.d f10, f29, f3, rdn # perform operation
fmul.d f10, f29, f3, rmm # perform operation
fmul.d f10, f29, f3, rne # perform operation
fmul.d f10, f29, f3, rtz # perform operation
fmul.d f10, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fmul.d f27, f19, f26, dyn # perform operation
fmul.d f27, f19, f26, rdn # perform operation
fmul.d f27, f19, f26, rmm # perform operation
fmul.d f27, f19, f26, rne # perform operation
fmul.d f27, f19, f26, rtz # perform operation
fmul.d f27, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fmul.d f28, f22, f16, dyn # perform operation
fmul.d f28, f22, f16, rdn # perform operation
fmul.d f28, f22, f16, rmm # perform operation
fmul.d f28, f22, f16, rne # perform operation
fmul.d f28, f22, f16, rtz # perform operation
fmul.d f28, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fmul.d f28, f25, f1, dyn # perform operation
fmul.d f28, f25, f1, rdn # perform operation
fmul.d f28, f25, f1, rmm # perform operation
fmul.d f28, f25, f1, rne # perform operation
fmul.d f28, f25, f1, rtz # perform operation
fmul.d f28, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
fmul.d f21, f30, f6, dyn # perform operation
fmul.d f21, f30, f6, rdn # perform operation
fmul.d f21, f30, f6, rmm # perform operation
fmul.d f21, f30, f6, rne # perform operation
fmul.d f21, f30, f6, rtz # perform operation
fmul.d f21, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fmul.d f18, f12, f19, dyn # perform operation
fmul.d f18, f12, f19, rdn # perform operation
fmul.d f18, f12, f19, rmm # perform operation
fmul.d f18, f12, f19, rne # perform operation
fmul.d f18, f12, f19, rtz # perform operation
fmul.d f18, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fmul.d f17, f5, f20, dyn # perform operation
fmul.d f17, f5, f20, rdn # perform operation
fmul.d f17, f5, f20, rmm # perform operation
fmul.d f17, f5, f20, rne # perform operation
fmul.d f17, f5, f20, rtz # perform operation
fmul.d f17, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000001 from memory into f31
fmul.d f24, f22, f31, dyn # perform operation
fmul.d f24, f22, f31, rdn # perform operation
fmul.d f24, f22, f31, rmm # perform operation
fmul.d f24, f22, f31, rne # perform operation
fmul.d f24, f22, f31, rtz # perform operation
fmul.d f24, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fmul.d f1, f19, f8, dyn # perform operation
fmul.d f1, f19, f8, rdn # perform operation
fmul.d f1, f19, f8, rmm # perform operation
fmul.d f1, f19, f8, rne # perform operation
fmul.d f1, f19, f8, rtz # perform operation
fmul.d f1, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fmul.d f7, f15, f2, dyn # perform operation
fmul.d f7, f15, f2, rdn # perform operation
fmul.d f7, f15, f2, rmm # perform operation
fmul.d f7, f15, f2, rne # perform operation
fmul.d f7, f15, f2, rtz # perform operation
fmul.d f7, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fmul.d f21, f22, f5, dyn # perform operation
fmul.d f21, f22, f5, rdn # perform operation
fmul.d f21, f22, f5, rmm # perform operation
fmul.d f21, f22, f5, rne # perform operation
fmul.d f21, f22, f5, rtz # perform operation
fmul.d f21, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f22, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fmul.d f3, f24, f31, dyn # perform operation
fmul.d f3, f24, f31, rdn # perform operation
fmul.d f3, f24, f31, rmm # perform operation
fmul.d f3, f24, f31, rne # perform operation
fmul.d f3, f24, f31, rtz # perform operation
fmul.d f3, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fmul.d f7, f10, f20, dyn # perform operation
fmul.d f7, f10, f20, rdn # perform operation
fmul.d f7, f10, f20, rmm # perform operation
fmul.d f7, f10, f20, rne # perform operation
fmul.d f7, f10, f20, rtz # perform operation
fmul.d f7, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fmul.d f8, f20, f27, dyn # perform operation
fmul.d f8, f20, f27, rdn # perform operation
fmul.d f8, f20, f27, rmm # perform operation
fmul.d f8, f20, f27, rne # perform operation
fmul.d f8, f20, f27, rtz # perform operation
fmul.d f8, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fmul.d f27, f25, f11, dyn # perform operation
fmul.d f27, f25, f11, rdn # perform operation
fmul.d f27, f25, f11, rmm # perform operation
fmul.d f27, f25, f11, rne # perform operation
fmul.d f27, f25, f11, rtz # perform operation
fmul.d f27, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
fmul.d f6, f1, f28, dyn # perform operation
fmul.d f6, f1, f28, rdn # perform operation
fmul.d f6, f1, f28, rmm # perform operation
fmul.d f6, f1, f28, rne # perform operation
fmul.d f6, f1, f28, rtz # perform operation
fmul.d f6, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fmul.d f12, f26, f22, dyn # perform operation
fmul.d f12, f26, f22, rdn # perform operation
fmul.d f12, f26, f22, rmm # perform operation
fmul.d f12, f26, f22, rne # perform operation
fmul.d f12, f26, f22, rtz # perform operation
fmul.d f12, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fmul.d f9, f2, f29, dyn # perform operation
fmul.d f9, f2, f29, rdn # perform operation
fmul.d f9, f2, f29, rmm # perform operation
fmul.d f9, f2, f29, rne # perform operation
fmul.d f9, f2, f29, rtz # perform operation
fmul.d f9, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fmul.d f29, f25, f19, dyn # perform operation
fmul.d f29, f25, f19, rdn # perform operation
fmul.d f29, f25, f19, rmm # perform operation
fmul.d f29, f25, f19, rne # perform operation
fmul.d f29, f25, f19, rtz # perform operation
fmul.d f29, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fmul.d f10, f16, f18, dyn # perform operation
fmul.d f10, f16, f18, rdn # perform operation
fmul.d f10, f16, f18, rmm # perform operation
fmul.d f10, f16, f18, rne # perform operation
fmul.d f10, f16, f18, rtz # perform operation
fmul.d f10, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fmul.d f29, f27, f12, dyn # perform operation
fmul.d f29, f27, f12, rdn # perform operation
fmul.d f29, f27, f12, rmm # perform operation
fmul.d f29, f27, f12, rne # perform operation
fmul.d f29, f27, f12, rtz # perform operation
fmul.d f29, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fmul.d f5, f3, f29, dyn # perform operation
fmul.d f5, f3, f29, rdn # perform operation
fmul.d f5, f3, f29, rmm # perform operation
fmul.d f5, f3, f29, rne # perform operation
fmul.d f5, f3, f29, rtz # perform operation
fmul.d f5, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fmul.d f27, f8, f14, dyn # perform operation
fmul.d f27, f8, f14, rdn # perform operation
fmul.d f27, f8, f14, rmm # perform operation
fmul.d f27, f8, f14, rne # perform operation
fmul.d f27, f8, f14, rtz # perform operation
fmul.d f27, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fmul.d f5, f30, f16, dyn # perform operation
fmul.d f5, f30, f16, rdn # perform operation
fmul.d f5, f30, f16, rmm # perform operation
fmul.d f5, f30, f16, rne # perform operation
fmul.d f5, f30, f16, rtz # perform operation
fmul.d f5, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fmul.d f1, f19, f31, dyn # perform operation
fmul.d f1, f19, f31, rdn # perform operation
fmul.d f1, f19, f31, rmm # perform operation
fmul.d f1, f19, f31, rne # perform operation
fmul.d f1, f19, f31, rtz # perform operation
fmul.d f1, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
fmul.d f1, f3, f6, dyn # perform operation
fmul.d f1, f3, f6, rdn # perform operation
fmul.d f1, f3, f6, rmm # perform operation
fmul.d f1, f3, f6, rne # perform operation
fmul.d f1, f3, f6, rtz # perform operation
fmul.d f1, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fmul.d f30, f18, f31, dyn # perform operation
fmul.d f30, f18, f31, rdn # perform operation
fmul.d f30, f18, f31, rmm # perform operation
fmul.d f30, f18, f31, rne # perform operation
fmul.d f30, f18, f31, rtz # perform operation
fmul.d f30, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fmul.d f14, f15, f9, dyn # perform operation
fmul.d f14, f15, f9, rdn # perform operation
fmul.d f14, f15, f9, rmm # perform operation
fmul.d f14, f15, f9, rne # perform operation
fmul.d f14, f15, f9, rtz # perform operation
fmul.d f14, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fmul.d f17, f12, f18, dyn # perform operation
fmul.d f17, f12, f18, rdn # perform operation
fmul.d f17, f12, f18, rmm # perform operation
fmul.d f17, f12, f18, rne # perform operation
fmul.d f17, f12, f18, rtz # perform operation
fmul.d f17, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
fmul.d f27, f16, f19, dyn # perform operation
fmul.d f27, f16, f19, rdn # perform operation
fmul.d f27, f16, f19, rmm # perform operation
fmul.d f27, f16, f19, rne # perform operation
fmul.d f27, f16, f19, rtz # perform operation
fmul.d f27, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f16, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fmul.d f16, f15, f20, dyn # perform operation
fmul.d f16, f15, f20, rdn # perform operation
fmul.d f16, f15, f20, rmm # perform operation
fmul.d f16, f15, f20, rne # perform operation
fmul.d f16, f15, f20, rtz # perform operation
fmul.d f16, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fmul.d f15, f7, f22, dyn # perform operation
fmul.d f15, f7, f22, rdn # perform operation
fmul.d f15, f7, f22, rmm # perform operation
fmul.d f15, f7, f22, rne # perform operation
fmul.d f15, f7, f22, rtz # perform operation
fmul.d f15, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff8000000000000 from memory into f16
fmul.d f14, f24, f16, dyn # perform operation
fmul.d f14, f24, f16, rdn # perform operation
fmul.d f14, f24, f16, rmm # perform operation
fmul.d f14, f24, f16, rne # perform operation
fmul.d f14, f24, f16, rtz # perform operation
fmul.d f14, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fmul.d f9, f6, f3, dyn # perform operation
fmul.d f9, f6, f3, rdn # perform operation
fmul.d f9, f6, f3, rmm # perform operation
fmul.d f9, f6, f3, rne # perform operation
fmul.d f9, f6, f3, rtz # perform operation
fmul.d f9, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
fmul.d f19, f6, f1, dyn # perform operation
fmul.d f19, f6, f1, rdn # perform operation
fmul.d f19, f6, f1, rmm # perform operation
fmul.d f19, f6, f1, rne # perform operation
fmul.d f19, f6, f1, rtz # perform operation
fmul.d f19, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000001 from memory into f21
fmul.d f3, f30, f21, dyn # perform operation
fmul.d f3, f30, f21, rdn # perform operation
fmul.d f3, f30, f21, rmm # perform operation
fmul.d f3, f30, f21, rne # perform operation
fmul.d f3, f30, f21, rtz # perform operation
fmul.d f3, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fmul.d f21, f24, f28, dyn # perform operation
fmul.d f21, f24, f28, rdn # perform operation
fmul.d f21, f24, f28, rmm # perform operation
fmul.d f21, f24, f28, rne # perform operation
fmul.d f21, f24, f28, rtz # perform operation
fmul.d f21, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fmul.d f24, f20, f29, dyn # perform operation
fmul.d f24, f20, f29, rdn # perform operation
fmul.d f24, f20, f29, rmm # perform operation
fmul.d f24, f20, f29, rne # perform operation
fmul.d f24, f20, f29, rtz # perform operation
fmul.d f24, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fmul.d f14, f10, f11, dyn # perform operation
fmul.d f14, f10, f11, rdn # perform operation
fmul.d f14, f10, f11, rmm # perform operation
fmul.d f14, f10, f11, rne # perform operation
fmul.d f14, f10, f11, rtz # perform operation
fmul.d f14, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f10, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fmul.d f14, f21, f25, dyn # perform operation
fmul.d f14, f21, f25, rdn # perform operation
fmul.d f14, f21, f25, rmm # perform operation
fmul.d f14, f21, f25, rne # perform operation
fmul.d f14, f21, f25, rtz # perform operation
fmul.d f14, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fmul.d f23, f6, f15, dyn # perform operation
fmul.d f23, f6, f15, rdn # perform operation
fmul.d f23, f6, f15, rmm # perform operation
fmul.d f23, f6, f15, rne # perform operation
fmul.d f23, f6, f15, rtz # perform operation
fmul.d f23, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fmul.d f16, f19, f22, dyn # perform operation
fmul.d f16, f19, f22, rdn # perform operation
fmul.d f16, f19, f22, rmm # perform operation
fmul.d f16, f19, f22, rne # perform operation
fmul.d f16, f19, f22, rtz # perform operation
fmul.d f16, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fmul.d f25, f30, f18, dyn # perform operation
fmul.d f25, f30, f18, rdn # perform operation
fmul.d f25, f30, f18, rmm # perform operation
fmul.d f25, f30, f18, rne # perform operation
fmul.d f25, f30, f18, rtz # perform operation
fmul.d f25, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fmul.d f1, f27, f10, dyn # perform operation
fmul.d f1, f27, f10, rdn # perform operation
fmul.d f1, f27, f10, rmm # perform operation
fmul.d f1, f27, f10, rne # perform operation
fmul.d f1, f27, f10, rtz # perform operation
fmul.d f1, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fmul.d f6, f13, f28, dyn # perform operation
fmul.d f6, f13, f28, rdn # perform operation
fmul.d f6, f13, f28, rmm # perform operation
fmul.d f6, f13, f28, rne # perform operation
fmul.d f6, f13, f28, rtz # perform operation
fmul.d f6, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fmul.d f24, f10, f1, dyn # perform operation
fmul.d f24, f10, f1, rdn # perform operation
fmul.d f24, f10, f1, rmm # perform operation
fmul.d f24, f10, f1, rne # perform operation
fmul.d f24, f10, f1, rtz # perform operation
fmul.d f24, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fmul.d f13, f17, f7, dyn # perform operation
fmul.d f13, f17, f7, rdn # perform operation
fmul.d f13, f17, f7, rmm # perform operation
fmul.d f13, f17, f7, rne # perform operation
fmul.d f13, f17, f7, rtz # perform operation
fmul.d f13, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fmul.d f1, f17, f8, dyn # perform operation
fmul.d f1, f17, f8, rdn # perform operation
fmul.d f1, f17, f8, rmm # perform operation
fmul.d f1, f17, f8, rne # perform operation
fmul.d f1, f17, f8, rtz # perform operation
fmul.d f1, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fmul.d f3, f1, f13, dyn # perform operation
fmul.d f3, f1, f13, rdn # perform operation
fmul.d f3, f1, f13, rmm # perform operation
fmul.d f3, f1, f13, rne # perform operation
fmul.d f3, f1, f13, rtz # perform operation
fmul.d f3, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fmul.d f1, f21, f8, dyn # perform operation
fmul.d f1, f21, f8, rdn # perform operation
fmul.d f1, f21, f8, rmm # perform operation
fmul.d f1, f21, f8, rne # perform operation
fmul.d f1, f21, f8, rtz # perform operation
fmul.d f1, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fmul.d f15, f26, f31, dyn # perform operation
fmul.d f15, f26, f31, rdn # perform operation
fmul.d f15, f26, f31, rmm # perform operation
fmul.d f15, f26, f31, rne # perform operation
fmul.d f15, f26, f31, rtz # perform operation
fmul.d f15, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fmul.d f11, f20, f3, dyn # perform operation
fmul.d f11, f20, f3, rdn # perform operation
fmul.d f11, f20, f3, rmm # perform operation
fmul.d f11, f20, f3, rne # perform operation
fmul.d f11, f20, f3, rtz # perform operation
fmul.d f11, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fmul.d f6, f7, f26, dyn # perform operation
fmul.d f6, f7, f26, rdn # perform operation
fmul.d f6, f7, f26, rmm # perform operation
fmul.d f6, f7, f26, rne # perform operation
fmul.d f6, f7, f26, rtz # perform operation
fmul.d f6, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f7, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fmul.d f15, f30, f8, dyn # perform operation
fmul.d f15, f30, f8, rdn # perform operation
fmul.d f15, f30, f8, rmm # perform operation
fmul.d f15, f30, f8, rne # perform operation
fmul.d f15, f30, f8, rtz # perform operation
fmul.d f15, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fmul.d f19, f29, f5, dyn # perform operation
fmul.d f19, f29, f5, rdn # perform operation
fmul.d f19, f29, f5, rmm # perform operation
fmul.d f19, f29, f5, rne # perform operation
fmul.d f19, f29, f5, rtz # perform operation
fmul.d f19, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fmul.d f13, f8, f21, dyn # perform operation
fmul.d f13, f8, f21, rdn # perform operation
fmul.d f13, f8, f21, rmm # perform operation
fmul.d f13, f8, f21, rne # perform operation
fmul.d f13, f8, f21, rtz # perform operation
fmul.d f13, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fmul.d f2, f17, f30, dyn # perform operation
fmul.d f2, f17, f30, rdn # perform operation
fmul.d f2, f17, f30, rmm # perform operation
fmul.d f2, f17, f30, rne # perform operation
fmul.d f2, f17, f30, rtz # perform operation
fmul.d f2, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fmul.d f6, f5, f17, dyn # perform operation
fmul.d f6, f5, f17, rdn # perform operation
fmul.d f6, f5, f17, rmm # perform operation
fmul.d f6, f5, f17, rne # perform operation
fmul.d f6, f5, f17, rtz # perform operation
fmul.d f6, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fmul.d f14, f29, f5, dyn # perform operation
fmul.d f14, f29, f5, rdn # perform operation
fmul.d f14, f29, f5, rmm # perform operation
fmul.d f14, f29, f5, rne # perform operation
fmul.d f14, f29, f5, rtz # perform operation
fmul.d f14, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fmul.d f28, f2, f26, dyn # perform operation
fmul.d f28, f2, f26, rdn # perform operation
fmul.d f28, f2, f26, rmm # perform operation
fmul.d f28, f2, f26, rne # perform operation
fmul.d f28, f2, f26, rtz # perform operation
fmul.d f28, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
fmul.d f20, f13, f3, dyn # perform operation
fmul.d f20, f13, f3, rdn # perform operation
fmul.d f20, f13, f3, rmm # perform operation
fmul.d f20, f13, f3, rne # perform operation
fmul.d f20, f13, f3, rtz # perform operation
fmul.d f20, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fmul.d f28, f1, f14, dyn # perform operation
fmul.d f28, f1, f14, rdn # perform operation
fmul.d f28, f1, f14, rmm # perform operation
fmul.d f28, f1, f14, rne # perform operation
fmul.d f28, f1, f14, rtz # perform operation
fmul.d f28, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fmul.d f9, f3, f31, dyn # perform operation
fmul.d f9, f3, f31, rdn # perform operation
fmul.d f9, f3, f31, rmm # perform operation
fmul.d f9, f3, f31, rne # perform operation
fmul.d f9, f3, f31, rtz # perform operation
fmul.d f9, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000001 from memory into f23
fmul.d f19, f10, f23, dyn # perform operation
fmul.d f19, f10, f23, rdn # perform operation
fmul.d f19, f10, f23, rmm # perform operation
fmul.d f19, f10, f23, rne # perform operation
fmul.d f19, f10, f23, rtz # perform operation
fmul.d f19, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fmul.d f31, f25, f16, dyn # perform operation
fmul.d f31, f25, f16, rdn # perform operation
fmul.d f31, f25, f16, rmm # perform operation
fmul.d f31, f25, f16, rne # perform operation
fmul.d f31, f25, f16, rtz # perform operation
fmul.d f31, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fmul.d f14, f5, f10, dyn # perform operation
fmul.d f14, f5, f10, rdn # perform operation
fmul.d f14, f5, f10, rmm # perform operation
fmul.d f14, f5, f10, rne # perform operation
fmul.d f14, f5, f10, rtz # perform operation
fmul.d f14, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fmul.d f18, f29, f13, dyn # perform operation
fmul.d f18, f29, f13, rdn # perform operation
fmul.d f18, f29, f13, rmm # perform operation
fmul.d f18, f29, f13, rne # perform operation
fmul.d f18, f29, f13, rtz # perform operation
fmul.d f18, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fmul.d f19, f30, f29, dyn # perform operation
fmul.d f19, f30, f29, rdn # perform operation
fmul.d f19, f30, f29, rmm # perform operation
fmul.d f19, f30, f29, rne # perform operation
fmul.d f19, f30, f29, rtz # perform operation
fmul.d f19, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f30, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
fmul.d f8, f3, f19, dyn # perform operation
fmul.d f8, f3, f19, rdn # perform operation
fmul.d f8, f3, f19, rmm # perform operation
fmul.d f8, f3, f19, rne # perform operation
fmul.d f8, f3, f19, rtz # perform operation
fmul.d f8, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fmul.d f31, f9, f23, dyn # perform operation
fmul.d f31, f9, f23, rdn # perform operation
fmul.d f31, f9, f23, rmm # perform operation
fmul.d f31, f9, f23, rne # perform operation
fmul.d f31, f9, f23, rtz # perform operation
fmul.d f31, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fmul.d f11, f18, f16, dyn # perform operation
fmul.d f11, f18, f16, rdn # perform operation
fmul.d f11, f18, f16, rmm # perform operation
fmul.d f11, f18, f16, rne # perform operation
fmul.d f11, f18, f16, rtz # perform operation
fmul.d f11, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fmul.d f22, f5, f1, dyn # perform operation
fmul.d f22, f5, f1, rdn # perform operation
fmul.d f22, f5, f1, rmm # perform operation
fmul.d f22, f5, f1, rne # perform operation
fmul.d f22, f5, f1, rtz # perform operation
fmul.d f22, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fmul.d f21, f19, f7, dyn # perform operation
fmul.d f21, f19, f7, rdn # perform operation
fmul.d f21, f19, f7, rmm # perform operation
fmul.d f21, f19, f7, rne # perform operation
fmul.d f21, f19, f7, rtz # perform operation
fmul.d f21, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f19, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fmul.d f31, f18, f25, dyn # perform operation
fmul.d f31, f18, f25, rdn # perform operation
fmul.d f31, f18, f25, rmm # perform operation
fmul.d f31, f18, f25, rne # perform operation
fmul.d f31, f18, f25, rtz # perform operation
fmul.d f31, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fmul.d f18, f3, f10, dyn # perform operation
fmul.d f18, f3, f10, rdn # perform operation
fmul.d f18, f3, f10, rmm # perform operation
fmul.d f18, f3, f10, rne # perform operation
fmul.d f18, f3, f10, rtz # perform operation
fmul.d f18, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fmul.d f13, f29, f30, dyn # perform operation
fmul.d f13, f29, f30, rdn # perform operation
fmul.d f13, f29, f30, rmm # perform operation
fmul.d f13, f29, f30, rne # perform operation
fmul.d f13, f29, f30, rtz # perform operation
fmul.d f13, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fmul.d f2, f27, f20, dyn # perform operation
fmul.d f2, f27, f20, rdn # perform operation
fmul.d f2, f27, f20, rmm # perform operation
fmul.d f2, f27, f20, rne # perform operation
fmul.d f2, f27, f20, rtz # perform operation
fmul.d f2, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fmul.d f11, f5, f15, dyn # perform operation
fmul.d f11, f5, f15, rdn # perform operation
fmul.d f11, f5, f15, rmm # perform operation
fmul.d f11, f5, f15, rne # perform operation
fmul.d f11, f5, f15, rtz # perform operation
fmul.d f11, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fmul.d f6, f22, f14, dyn # perform operation
fmul.d f6, f22, f14, rdn # perform operation
fmul.d f6, f22, f14, rmm # perform operation
fmul.d f6, f22, f14, rne # perform operation
fmul.d f6, f22, f14, rtz # perform operation
fmul.d f6, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fmul.d f2, f5, f10, dyn # perform operation
fmul.d f2, f5, f10, rdn # perform operation
fmul.d f2, f5, f10, rmm # perform operation
fmul.d f2, f5, f10, rne # perform operation
fmul.d f2, f5, f10, rtz # perform operation
fmul.d f2, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fmul.d f3, f18, f30, dyn # perform operation
fmul.d f3, f18, f30, rdn # perform operation
fmul.d f3, f18, f30, rmm # perform operation
fmul.d f3, f18, f30, rne # perform operation
fmul.d f3, f18, f30, rtz # perform operation
fmul.d f3, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fmul.d f14, f22, f30, dyn # perform operation
fmul.d f14, f22, f30, rdn # perform operation
fmul.d f14, f22, f30, rmm # perform operation
fmul.d f14, f22, f30, rne # perform operation
fmul.d f14, f22, f30, rtz # perform operation
fmul.d f14, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fmul.d f25, f20, f2, dyn # perform operation
fmul.d f25, f20, f2, rdn # perform operation
fmul.d f25, f20, f2, rmm # perform operation
fmul.d f25, f20, f2, rne # perform operation
fmul.d f25, f20, f2, rtz # perform operation
fmul.d f25, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fmul.d f7, f5, f11, dyn # perform operation
fmul.d f7, f5, f11, rdn # perform operation
fmul.d f7, f5, f11, rmm # perform operation
fmul.d f7, f5, f11, rne # perform operation
fmul.d f7, f5, f11, rtz # perform operation
fmul.d f7, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
fmul.d f19, f12, f28, dyn # perform operation
fmul.d f19, f12, f28, rdn # perform operation
fmul.d f19, f12, f28, rmm # perform operation
fmul.d f19, f12, f28, rne # perform operation
fmul.d f19, f12, f28, rtz # perform operation
fmul.d f19, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
fmul.d f14, f10, f31, dyn # perform operation
fmul.d f14, f10, f31, rdn # perform operation
fmul.d f14, f10, f31, rmm # perform operation
fmul.d f14, f10, f31, rne # perform operation
fmul.d f14, f10, f31, rtz # perform operation
fmul.d f14, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fmul.d f13, f17, f14, dyn # perform operation
fmul.d f13, f17, f14, rdn # perform operation
fmul.d f13, f17, f14, rmm # perform operation
fmul.d f13, f17, f14, rne # perform operation
fmul.d f13, f17, f14, rtz # perform operation
fmul.d f13, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fmul.d f24, f19, f11, dyn # perform operation
fmul.d f24, f19, f11, rdn # perform operation
fmul.d f24, f19, f11, rmm # perform operation
fmul.d f24, f19, f11, rne # perform operation
fmul.d f24, f19, f11, rtz # perform operation
fmul.d f24, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
fmul.d f2, f6, f1, dyn # perform operation
fmul.d f2, f6, f1, rdn # perform operation
fmul.d f2, f6, f1, rmm # perform operation
fmul.d f2, f6, f1, rne # perform operation
fmul.d f2, f6, f1, rtz # perform operation
fmul.d f2, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
fmul.d f16, f5, f24, dyn # perform operation
fmul.d f16, f5, f24, rdn # perform operation
fmul.d f16, f5, f24, rmm # perform operation
fmul.d f16, f5, f24, rne # perform operation
fmul.d f16, f5, f24, rtz # perform operation
fmul.d f16, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fmul.d f28, f18, f5, dyn # perform operation
fmul.d f28, f18, f5, rdn # perform operation
fmul.d f28, f18, f5, rmm # perform operation
fmul.d f28, f18, f5, rne # perform operation
fmul.d f28, f18, f5, rtz # perform operation
fmul.d f28, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
fmul.d f16, f22, f20, dyn # perform operation
fmul.d f16, f22, f20, rdn # perform operation
fmul.d f16, f22, f20, rmm # perform operation
fmul.d f16, f22, f20, rne # perform operation
fmul.d f16, f22, f20, rtz # perform operation
fmul.d f16, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fmul.d f14, f15, f11, dyn # perform operation
fmul.d f14, f15, f11, rdn # perform operation
fmul.d f14, f15, f11, rmm # perform operation
fmul.d f14, f15, f11, rne # perform operation
fmul.d f14, f15, f11, rtz # perform operation
fmul.d f14, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fmul.d f25, f26, f1, dyn # perform operation
fmul.d f25, f26, f1, rdn # perform operation
fmul.d f25, f26, f1, rmm # perform operation
fmul.d f25, f26, f1, rne # perform operation
fmul.d f25, f26, f1, rtz # perform operation
fmul.d f25, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fmul.d f24, f30, f12, dyn # perform operation
fmul.d f24, f30, f12, rdn # perform operation
fmul.d f24, f30, f12, rmm # perform operation
fmul.d f24, f30, f12, rne # perform operation
fmul.d f24, f30, f12, rtz # perform operation
fmul.d f24, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f30, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fmul.d f7, f6, f14, dyn # perform operation
fmul.d f7, f6, f14, rdn # perform operation
fmul.d f7, f6, f14, rmm # perform operation
fmul.d f7, f6, f14, rne # perform operation
fmul.d f7, f6, f14, rtz # perform operation
fmul.d f7, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f6, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fmul.d f22, f8, f3, dyn # perform operation
fmul.d f22, f8, f3, rdn # perform operation
fmul.d f22, f8, f3, rmm # perform operation
fmul.d f22, f8, f3, rne # perform operation
fmul.d f22, f8, f3, rtz # perform operation
fmul.d f22, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fmul.d f3, f11, f6, dyn # perform operation
fmul.d f3, f11, f6, rdn # perform operation
fmul.d f3, f11, f6, rmm # perform operation
fmul.d f3, f11, f6, rne # perform operation
fmul.d f3, f11, f6, rtz # perform operation
fmul.d f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fmul.d f15, f12, f29, dyn # perform operation
fmul.d f15, f12, f29, rdn # perform operation
fmul.d f15, f12, f29, rmm # perform operation
fmul.d f15, f12, f29, rne # perform operation
fmul.d f15, f12, f29, rtz # perform operation
fmul.d f15, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fmul.d f5, f8, f19, dyn # perform operation
fmul.d f5, f8, f19, rdn # perform operation
fmul.d f5, f8, f19, rmm # perform operation
fmul.d f5, f8, f19, rne # perform operation
fmul.d f5, f8, f19, rtz # perform operation
fmul.d f5, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fmul.d f15, f2, f19, dyn # perform operation
fmul.d f15, f2, f19, rdn # perform operation
fmul.d f15, f2, f19, rmm # perform operation
fmul.d f15, f2, f19, rne # perform operation
fmul.d f15, f2, f19, rtz # perform operation
fmul.d f15, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fmul.d f24, f9, f19, dyn # perform operation
fmul.d f24, f9, f19, rdn # perform operation
fmul.d f24, f9, f19, rmm # perform operation
fmul.d f24, f9, f19, rne # perform operation
fmul.d f24, f9, f19, rtz # perform operation
fmul.d f24, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fmul.d f28, f2, f5, dyn # perform operation
fmul.d f28, f2, f5, rdn # perform operation
fmul.d f28, f2, f5, rmm # perform operation
fmul.d f28, f2, f5, rne # perform operation
fmul.d f28, f2, f5, rtz # perform operation
fmul.d f28, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fmul.d f6, f24, f29, dyn # perform operation
fmul.d f6, f24, f29, rdn # perform operation
fmul.d f6, f24, f29, rmm # perform operation
fmul.d f6, f24, f29, rne # perform operation
fmul.d f6, f24, f29, rtz # perform operation
fmul.d f6, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fmul.d f21, f25, f19, dyn # perform operation
fmul.d f21, f25, f19, rdn # perform operation
fmul.d f21, f25, f19, rmm # perform operation
fmul.d f21, f25, f19, rne # perform operation
fmul.d f21, f25, f19, rtz # perform operation
fmul.d f21, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fmul.d f12, f11, f6, dyn # perform operation
fmul.d f12, f11, f6, rdn # perform operation
fmul.d f12, f11, f6, rmm # perform operation
fmul.d f12, f11, f6, rne # perform operation
fmul.d f12, f11, f6, rtz # perform operation
fmul.d f12, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
fmul.d f16, f17, f10, dyn # perform operation
fmul.d f16, f17, f10, rdn # perform operation
fmul.d f16, f17, f10, rmm # perform operation
fmul.d f16, f17, f10, rne # perform operation
fmul.d f16, f17, f10, rtz # perform operation
fmul.d f16, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fmul.d f5, f1, f31, dyn # perform operation
fmul.d f5, f1, f31, rdn # perform operation
fmul.d f5, f1, f31, rmm # perform operation
fmul.d f5, f1, f31, rne # perform operation
fmul.d f5, f1, f31, rtz # perform operation
fmul.d f5, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fmul.d f12, f18, f22, dyn # perform operation
fmul.d f12, f18, f22, rdn # perform operation
fmul.d f12, f18, f22, rmm # perform operation
fmul.d f12, f18, f22, rne # perform operation
fmul.d f12, f18, f22, rtz # perform operation
fmul.d f12, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fmul.d f5, f19, f1, dyn # perform operation
fmul.d f5, f19, f1, rdn # perform operation
fmul.d f5, f19, f1, rmm # perform operation
fmul.d f5, f19, f1, rne # perform operation
fmul.d f5, f19, f1, rtz # perform operation
fmul.d f5, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fmul.d f7, f20, f10, dyn # perform operation
fmul.d f7, f20, f10, rdn # perform operation
fmul.d f7, f20, f10, rmm # perform operation
fmul.d f7, f20, f10, rne # perform operation
fmul.d f7, f20, f10, rtz # perform operation
fmul.d f7, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fmul.d f16, f9, f14, dyn # perform operation
fmul.d f16, f9, f14, rdn # perform operation
fmul.d f16, f9, f14, rmm # perform operation
fmul.d f16, f9, f14, rne # perform operation
fmul.d f16, f9, f14, rtz # perform operation
fmul.d f16, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fmul.d f24, f2, f26, dyn # perform operation
fmul.d f24, f2, f26, rdn # perform operation
fmul.d f24, f2, f26, rmm # perform operation
fmul.d f24, f2, f26, rne # perform operation
fmul.d f24, f2, f26, rtz # perform operation
fmul.d f24, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fmul.d f29, f28, f18, dyn # perform operation
fmul.d f29, f28, f18, rdn # perform operation
fmul.d f29, f28, f18, rmm # perform operation
fmul.d f29, f28, f18, rne # perform operation
fmul.d f29, f28, f18, rtz # perform operation
fmul.d f29, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
fmul.d f29, f26, f9, dyn # perform operation
fmul.d f29, f26, f9, rdn # perform operation
fmul.d f29, f26, f9, rmm # perform operation
fmul.d f29, f26, f9, rne # perform operation
fmul.d f29, f26, f9, rtz # perform operation
fmul.d f29, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fmul.d f8, f13, f16, dyn # perform operation
fmul.d f8, f13, f16, rdn # perform operation
fmul.d f8, f13, f16, rmm # perform operation
fmul.d f8, f13, f16, rne # perform operation
fmul.d f8, f13, f16, rtz # perform operation
fmul.d f8, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff8000000000000 from memory into f17
fmul.d f16, f31, f17, dyn # perform operation
fmul.d f16, f31, f17, rdn # perform operation
fmul.d f16, f31, f17, rmm # perform operation
fmul.d f16, f31, f17, rne # perform operation
fmul.d f16, f31, f17, rtz # perform operation
fmul.d f16, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fmul.d f3, f12, f27, dyn # perform operation
fmul.d f3, f12, f27, rdn # perform operation
fmul.d f3, f12, f27, rmm # perform operation
fmul.d f3, f12, f27, rne # perform operation
fmul.d f3, f12, f27, rtz # perform operation
fmul.d f3, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmul.d f22, f24, f11, dyn # perform operation
fmul.d f22, f24, f11, rdn # perform operation
fmul.d f22, f24, f11, rmm # perform operation
fmul.d f22, f24, f11, rne # perform operation
fmul.d f22, f24, f11, rtz # perform operation
fmul.d f22, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000001 from memory into f15
fmul.d f23, f1, f15, dyn # perform operation
fmul.d f23, f1, f15, rdn # perform operation
fmul.d f23, f1, f15, rmm # perform operation
fmul.d f23, f1, f15, rne # perform operation
fmul.d f23, f1, f15, rtz # perform operation
fmul.d f23, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fmul.d f3, f13, f22, dyn # perform operation
fmul.d f3, f13, f22, rdn # perform operation
fmul.d f3, f13, f22, rmm # perform operation
fmul.d f3, f13, f22, rne # perform operation
fmul.d f3, f13, f22, rtz # perform operation
fmul.d f3, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
fmul.d f5, f12, f7, dyn # perform operation
fmul.d f5, f12, f7, rdn # perform operation
fmul.d f5, f12, f7, rmm # perform operation
fmul.d f5, f12, f7, rne # perform operation
fmul.d f5, f12, f7, rtz # perform operation
fmul.d f5, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
fmul.d f21, f24, f6, dyn # perform operation
fmul.d f21, f24, f6, rdn # perform operation
fmul.d f21, f24, f6, rmm # perform operation
fmul.d f21, f24, f6, rne # perform operation
fmul.d f21, f24, f6, rtz # perform operation
fmul.d f21, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fmul.d f17, f26, f2, dyn # perform operation
fmul.d f17, f26, f2, rdn # perform operation
fmul.d f17, f26, f2, rmm # perform operation
fmul.d f17, f26, f2, rne # perform operation
fmul.d f17, f26, f2, rtz # perform operation
fmul.d f17, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f26, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fmul.d f2, f26, f8, dyn # perform operation
fmul.d f2, f26, f8, rdn # perform operation
fmul.d f2, f26, f8, rmm # perform operation
fmul.d f2, f26, f8, rne # perform operation
fmul.d f2, f26, f8, rtz # perform operation
fmul.d f2, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fmul.d f24, f18, f22, dyn # perform operation
fmul.d f24, f18, f22, rdn # perform operation
fmul.d f24, f18, f22, rmm # perform operation
fmul.d f24, f18, f22, rne # perform operation
fmul.d f24, f18, f22, rtz # perform operation
fmul.d f24, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fmul.d f20, f11, f13, dyn # perform operation
fmul.d f20, f11, f13, rdn # perform operation
fmul.d f20, f11, f13, rmm # perform operation
fmul.d f20, f11, f13, rne # perform operation
fmul.d f20, f11, f13, rtz # perform operation
fmul.d f20, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fmul.d f24, f14, f23, dyn # perform operation
fmul.d f24, f14, f23, rdn # perform operation
fmul.d f24, f14, f23, rmm # perform operation
fmul.d f24, f14, f23, rne # perform operation
fmul.d f24, f14, f23, rtz # perform operation
fmul.d f24, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fmul.d f25, f28, f7, dyn # perform operation
fmul.d f25, f28, f7, rdn # perform operation
fmul.d f25, f28, f7, rmm # perform operation
fmul.d f25, f28, f7, rne # perform operation
fmul.d f25, f28, f7, rtz # perform operation
fmul.d f25, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fmul.d f21, f5, f17, dyn # perform operation
fmul.d f21, f5, f17, rdn # perform operation
fmul.d f21, f5, f17, rmm # perform operation
fmul.d f21, f5, f17, rne # perform operation
fmul.d f21, f5, f17, rtz # perform operation
fmul.d f21, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fmul.d f14, f22, f21, dyn # perform operation
fmul.d f14, f22, f21, rdn # perform operation
fmul.d f14, f22, f21, rmm # perform operation
fmul.d f14, f22, f21, rne # perform operation
fmul.d f14, f22, f21, rtz # perform operation
fmul.d f14, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fmul.d f18, f2, f7, dyn # perform operation
fmul.d f18, f2, f7, rdn # perform operation
fmul.d f18, f2, f7, rmm # perform operation
fmul.d f18, f2, f7, rne # perform operation
fmul.d f18, f2, f7, rtz # perform operation
fmul.d f18, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f2, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fmul.d f23, f10, f29, dyn # perform operation
fmul.d f23, f10, f29, rdn # perform operation
fmul.d f23, f10, f29, rmm # perform operation
fmul.d f23, f10, f29, rne # perform operation
fmul.d f23, f10, f29, rtz # perform operation
fmul.d f23, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fmul.d f13, f16, f2, dyn # perform operation
fmul.d f13, f16, f2, rdn # perform operation
fmul.d f13, f16, f2, rmm # perform operation
fmul.d f13, f16, f2, rne # perform operation
fmul.d f13, f16, f2, rtz # perform operation
fmul.d f13, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fmul.d f24, f17, f1, dyn # perform operation
fmul.d f24, f17, f1, rdn # perform operation
fmul.d f24, f17, f1, rmm # perform operation
fmul.d f24, f17, f1, rne # perform operation
fmul.d f24, f17, f1, rtz # perform operation
fmul.d f24, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fmul.d f25, f11, f1, dyn # perform operation
fmul.d f25, f11, f1, rdn # perform operation
fmul.d f25, f11, f1, rmm # perform operation
fmul.d f25, f11, f1, rne # perform operation
fmul.d f25, f11, f1, rtz # perform operation
fmul.d f25, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fmul.d f25, f29, f22, dyn # perform operation
fmul.d f25, f29, f22, rdn # perform operation
fmul.d f25, f29, f22, rmm # perform operation
fmul.d f25, f29, f22, rne # perform operation
fmul.d f25, f29, f22, rtz # perform operation
fmul.d f25, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
fmul.d f6, f14, f13, dyn # perform operation
fmul.d f6, f14, f13, rdn # perform operation
fmul.d f6, f14, f13, rmm # perform operation
fmul.d f6, f14, f13, rne # perform operation
fmul.d f6, f14, f13, rtz # perform operation
fmul.d f6, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fmul.d f7, f27, f12, dyn # perform operation
fmul.d f7, f27, f12, rdn # perform operation
fmul.d f7, f27, f12, rmm # perform operation
fmul.d f7, f27, f12, rne # perform operation
fmul.d f7, f27, f12, rtz # perform operation
fmul.d f7, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fmul.d f12, f18, f9, dyn # perform operation
fmul.d f12, f18, f9, rdn # perform operation
fmul.d f12, f18, f9, rmm # perform operation
fmul.d f12, f18, f9, rne # perform operation
fmul.d f12, f18, f9, rtz # perform operation
fmul.d f12, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fmul.d f31, f3, f13, dyn # perform operation
fmul.d f31, f3, f13, rdn # perform operation
fmul.d f31, f3, f13, rmm # perform operation
fmul.d f31, f3, f13, rne # perform operation
fmul.d f31, f3, f13, rtz # perform operation
fmul.d f31, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fmul.d f18, f13, f15, dyn # perform operation
fmul.d f18, f13, f15, rdn # perform operation
fmul.d f18, f13, f15, rmm # perform operation
fmul.d f18, f13, f15, rne # perform operation
fmul.d f18, f13, f15, rtz # perform operation
fmul.d f18, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
fmul.d f23, f8, f25, dyn # perform operation
fmul.d f23, f8, f25, rdn # perform operation
fmul.d f23, f8, f25, rmm # perform operation
fmul.d f23, f8, f25, rne # perform operation
fmul.d f23, f8, f25, rtz # perform operation
fmul.d f23, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fmul.d f1, f18, f12, dyn # perform operation
fmul.d f1, f18, f12, rdn # perform operation
fmul.d f1, f18, f12, rmm # perform operation
fmul.d f1, f18, f12, rne # perform operation
fmul.d f1, f18, f12, rtz # perform operation
fmul.d f1, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
fmul.d f22, f2, f1, dyn # perform operation
fmul.d f22, f2, f1, rdn # perform operation
fmul.d f22, f2, f1, rmm # perform operation
fmul.d f22, f2, f1, rne # perform operation
fmul.d f22, f2, f1, rtz # perform operation
fmul.d f22, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f2, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fmul.d f27, f29, f5, dyn # perform operation
fmul.d f27, f29, f5, rdn # perform operation
fmul.d f27, f29, f5, rmm # perform operation
fmul.d f27, f29, f5, rne # perform operation
fmul.d f27, f29, f5, rtz # perform operation
fmul.d f27, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fmul.d f17, f7, f3, dyn # perform operation
fmul.d f17, f7, f3, rdn # perform operation
fmul.d f17, f7, f3, rmm # perform operation
fmul.d f17, f7, f3, rne # perform operation
fmul.d f17, f7, f3, rtz # perform operation
fmul.d f17, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000001 from memory into f29
fmul.d f1, f24, f29, dyn # perform operation
fmul.d f1, f24, f29, rdn # perform operation
fmul.d f1, f24, f29, rmm # perform operation
fmul.d f1, f24, f29, rne # perform operation
fmul.d f1, f24, f29, rtz # perform operation
fmul.d f1, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fmul.d f14, f31, f10, dyn # perform operation
fmul.d f14, f31, f10, rdn # perform operation
fmul.d f14, f31, f10, rmm # perform operation
fmul.d f14, f31, f10, rne # perform operation
fmul.d f14, f31, f10, rtz # perform operation
fmul.d f14, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fmul.d f30, f24, f5, dyn # perform operation
fmul.d f30, f24, f5, rdn # perform operation
fmul.d f30, f24, f5, rmm # perform operation
fmul.d f30, f24, f5, rne # perform operation
fmul.d f30, f24, f5, rtz # perform operation
fmul.d f30, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fmul.d f3, f14, f20, dyn # perform operation
fmul.d f3, f14, f20, rdn # perform operation
fmul.d f3, f14, f20, rmm # perform operation
fmul.d f3, f14, f20, rne # perform operation
fmul.d f3, f14, f20, rtz # perform operation
fmul.d f3, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fmul.d f23, f14, f16, dyn # perform operation
fmul.d f23, f14, f16, rdn # perform operation
fmul.d f23, f14, f16, rmm # perform operation
fmul.d f23, f14, f16, rne # perform operation
fmul.d f23, f14, f16, rtz # perform operation
fmul.d f23, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fmul.d f11, f1, f8, dyn # perform operation
fmul.d f11, f1, f8, rdn # perform operation
fmul.d f11, f1, f8, rmm # perform operation
fmul.d f11, f1, f8, rne # perform operation
fmul.d f11, f1, f8, rtz # perform operation
fmul.d f11, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fmul.d f20, f26, f8, dyn # perform operation
fmul.d f20, f26, f8, rdn # perform operation
fmul.d f20, f26, f8, rmm # perform operation
fmul.d f20, f26, f8, rne # perform operation
fmul.d f20, f26, f8, rtz # perform operation
fmul.d f20, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fmul.d f15, f23, f12, dyn # perform operation
fmul.d f15, f23, f12, rdn # perform operation
fmul.d f15, f23, f12, rmm # perform operation
fmul.d f15, f23, f12, rne # perform operation
fmul.d f15, f23, f12, rtz # perform operation
fmul.d f15, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fmul.d f1, f19, f5, dyn # perform operation
fmul.d f1, f19, f5, rdn # perform operation
fmul.d f1, f19, f5, rmm # perform operation
fmul.d f1, f19, f5, rne # perform operation
fmul.d f1, f19, f5, rtz # perform operation
fmul.d f1, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fmul.d f16, f17, f14, dyn # perform operation
fmul.d f16, f17, f14, rdn # perform operation
fmul.d f16, f17, f14, rmm # perform operation
fmul.d f16, f17, f14, rne # perform operation
fmul.d f16, f17, f14, rtz # perform operation
fmul.d f16, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fmul.d f27, f1, f29, dyn # perform operation
fmul.d f27, f1, f29, rdn # perform operation
fmul.d f27, f1, f29, rmm # perform operation
fmul.d f27, f1, f29, rne # perform operation
fmul.d f27, f1, f29, rtz # perform operation
fmul.d f27, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fmul.d f23, f31, f20, dyn # perform operation
fmul.d f23, f31, f20, rdn # perform operation
fmul.d f23, f31, f20, rmm # perform operation
fmul.d f23, f31, f20, rne # perform operation
fmul.d f23, f31, f20, rtz # perform operation
fmul.d f23, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fmul.d f6, f30, f22, dyn # perform operation
fmul.d f6, f30, f22, rdn # perform operation
fmul.d f6, f30, f22, rmm # perform operation
fmul.d f6, f30, f22, rne # perform operation
fmul.d f6, f30, f22, rtz # perform operation
fmul.d f6, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f30, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fmul.d f13, f2, f19, dyn # perform operation
fmul.d f13, f2, f19, rdn # perform operation
fmul.d f13, f2, f19, rmm # perform operation
fmul.d f13, f2, f19, rne # perform operation
fmul.d f13, f2, f19, rtz # perform operation
fmul.d f13, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fmul.d f6, f28, f18, dyn # perform operation
fmul.d f6, f28, f18, rdn # perform operation
fmul.d f6, f28, f18, rmm # perform operation
fmul.d f6, f28, f18, rne # perform operation
fmul.d f6, f28, f18, rtz # perform operation
fmul.d f6, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fmul.d f31, f25, f8, dyn # perform operation
fmul.d f31, f25, f8, rdn # perform operation
fmul.d f31, f25, f8, rmm # perform operation
fmul.d f31, f25, f8, rne # perform operation
fmul.d f31, f25, f8, rtz # perform operation
fmul.d f31, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f25, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fmul.d f25, f23, f3, dyn # perform operation
fmul.d f25, f23, f3, rdn # perform operation
fmul.d f25, f23, f3, rmm # perform operation
fmul.d f25, f23, f3, rne # perform operation
fmul.d f25, f23, f3, rtz # perform operation
fmul.d f25, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fmul.d f17, f18, f12, dyn # perform operation
fmul.d f17, f18, f12, rdn # perform operation
fmul.d f17, f18, f12, rmm # perform operation
fmul.d f17, f18, f12, rne # perform operation
fmul.d f17, f18, f12, rtz # perform operation
fmul.d f17, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
fmul.d f18, f8, f5, dyn # perform operation
fmul.d f18, f8, f5, rdn # perform operation
fmul.d f18, f8, f5, rmm # perform operation
fmul.d f18, f8, f5, rne # perform operation
fmul.d f18, f8, f5, rtz # perform operation
fmul.d f18, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fmul.d f31, f1, f2, dyn # perform operation
fmul.d f31, f1, f2, rdn # perform operation
fmul.d f31, f1, f2, rmm # perform operation
fmul.d f31, f1, f2, rne # perform operation
fmul.d f31, f1, f2, rtz # perform operation
fmul.d f31, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fmul.d f20, f6, f8, dyn # perform operation
fmul.d f20, f6, f8, rdn # perform operation
fmul.d f20, f6, f8, rmm # perform operation
fmul.d f20, f6, f8, rne # perform operation
fmul.d f20, f6, f8, rtz # perform operation
fmul.d f20, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fmul.d f5, f6, f16, dyn # perform operation
fmul.d f5, f6, f16, rdn # perform operation
fmul.d f5, f6, f16, rmm # perform operation
fmul.d f5, f6, f16, rne # perform operation
fmul.d f5, f6, f16, rtz # perform operation
fmul.d f5, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fmul.d f3, f18, f15, dyn # perform operation
fmul.d f3, f18, f15, rdn # perform operation
fmul.d f3, f18, f15, rmm # perform operation
fmul.d f3, f18, f15, rne # perform operation
fmul.d f3, f18, f15, rtz # perform operation
fmul.d f3, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
fmul.d f23, f30, f1, dyn # perform operation
fmul.d f23, f30, f1, rdn # perform operation
fmul.d f23, f30, f1, rmm # perform operation
fmul.d f23, f30, f1, rne # perform operation
fmul.d f23, f30, f1, rtz # perform operation
fmul.d f23, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fmul.d f26, f6, f8, dyn # perform operation
fmul.d f26, f6, f8, rdn # perform operation
fmul.d f26, f6, f8, rmm # perform operation
fmul.d f26, f6, f8, rne # perform operation
fmul.d f26, f6, f8, rtz # perform operation
fmul.d f26, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff8000000000000 from memory into f28
fmul.d f24, f13, f28, dyn # perform operation
fmul.d f24, f13, f28, rdn # perform operation
fmul.d f24, f13, f28, rmm # perform operation
fmul.d f24, f13, f28, rne # perform operation
fmul.d f24, f13, f28, rtz # perform operation
fmul.d f24, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fmul.d f10, f12, f28, dyn # perform operation
fmul.d f10, f12, f28, rdn # perform operation
fmul.d f10, f12, f28, rmm # perform operation
fmul.d f10, f12, f28, rne # perform operation
fmul.d f10, f12, f28, rtz # perform operation
fmul.d f10, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fmul.d f19, f5, f23, dyn # perform operation
fmul.d f19, f5, f23, rdn # perform operation
fmul.d f19, f5, f23, rmm # perform operation
fmul.d f19, f5, f23, rne # perform operation
fmul.d f19, f5, f23, rtz # perform operation
fmul.d f19, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000001 from memory into f14
fmul.d f25, f27, f14, dyn # perform operation
fmul.d f25, f27, f14, rdn # perform operation
fmul.d f25, f27, f14, rmm # perform operation
fmul.d f25, f27, f14, rne # perform operation
fmul.d f25, f27, f14, rtz # perform operation
fmul.d f25, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
fmul.d f3, f22, f21, dyn # perform operation
fmul.d f3, f22, f21, rdn # perform operation
fmul.d f3, f22, f21, rmm # perform operation
fmul.d f3, f22, f21, rne # perform operation
fmul.d f3, f22, f21, rtz # perform operation
fmul.d f3, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fmul.d f5, f15, f10, dyn # perform operation
fmul.d f5, f15, f10, rdn # perform operation
fmul.d f5, f15, f10, rmm # perform operation
fmul.d f5, f15, f10, rne # perform operation
fmul.d f5, f15, f10, rtz # perform operation
fmul.d f5, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fmul.d f20, f1, f8, dyn # perform operation
fmul.d f20, f1, f8, rdn # perform operation
fmul.d f20, f1, f8, rmm # perform operation
fmul.d f20, f1, f8, rne # perform operation
fmul.d f20, f1, f8, rtz # perform operation
fmul.d f20, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fmul.d f21, f2, f17, dyn # perform operation
fmul.d f21, f2, f17, rdn # perform operation
fmul.d f21, f2, f17, rmm # perform operation
fmul.d f21, f2, f17, rne # perform operation
fmul.d f21, f2, f17, rtz # perform operation
fmul.d f21, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fmul.d f30, f13, f27, dyn # perform operation
fmul.d f30, f13, f27, rdn # perform operation
fmul.d f30, f13, f27, rmm # perform operation
fmul.d f30, f13, f27, rne # perform operation
fmul.d f30, f13, f27, rtz # perform operation
fmul.d f30, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fmul.d f15, f6, f12, dyn # perform operation
fmul.d f15, f6, f12, rdn # perform operation
fmul.d f15, f6, f12, rmm # perform operation
fmul.d f15, f6, f12, rne # perform operation
fmul.d f15, f6, f12, rtz # perform operation
fmul.d f15, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fmul.d f29, f22, f1, dyn # perform operation
fmul.d f29, f22, f1, rdn # perform operation
fmul.d f29, f22, f1, rmm # perform operation
fmul.d f29, f22, f1, rne # perform operation
fmul.d f29, f22, f1, rtz # perform operation
fmul.d f29, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fmul.d f28, f24, f13, dyn # perform operation
fmul.d f28, f24, f13, rdn # perform operation
fmul.d f28, f24, f13, rmm # perform operation
fmul.d f28, f24, f13, rne # perform operation
fmul.d f28, f24, f13, rtz # perform operation
fmul.d f28, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fmul.d f27, f26, f18, dyn # perform operation
fmul.d f27, f26, f18, rdn # perform operation
fmul.d f27, f26, f18, rmm # perform operation
fmul.d f27, f26, f18, rne # perform operation
fmul.d f27, f26, f18, rtz # perform operation
fmul.d f27, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fmul.d f12, f3, f27, dyn # perform operation
fmul.d f12, f3, f27, rdn # perform operation
fmul.d f12, f3, f27, rmm # perform operation
fmul.d f12, f3, f27, rne # perform operation
fmul.d f12, f3, f27, rtz # perform operation
fmul.d f12, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
fmul.d f27, f8, f15, dyn # perform operation
fmul.d f27, f8, f15, rdn # perform operation
fmul.d f27, f8, f15, rmm # perform operation
fmul.d f27, f8, f15, rne # perform operation
fmul.d f27, f8, f15, rtz # perform operation
fmul.d f27, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fmul.d f21, f22, f20, dyn # perform operation
fmul.d f21, f22, f20, rdn # perform operation
fmul.d f21, f22, f20, rmm # perform operation
fmul.d f21, f22, f20, rne # perform operation
fmul.d f21, f22, f20, rtz # perform operation
fmul.d f21, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fmul.d f21, f24, f25, dyn # perform operation
fmul.d f21, f24, f25, rdn # perform operation
fmul.d f21, f24, f25, rmm # perform operation
fmul.d f21, f24, f25, rne # perform operation
fmul.d f21, f24, f25, rtz # perform operation
fmul.d f21, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fmul.d f8, f17, f25, dyn # perform operation
fmul.d f8, f17, f25, rdn # perform operation
fmul.d f8, f17, f25, rmm # perform operation
fmul.d f8, f17, f25, rne # perform operation
fmul.d f8, f17, f25, rtz # perform operation
fmul.d f8, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f17, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fmul.d f20, f27, f3, dyn # perform operation
fmul.d f20, f27, f3, rdn # perform operation
fmul.d f20, f27, f3, rmm # perform operation
fmul.d f20, f27, f3, rne # perform operation
fmul.d f20, f27, f3, rtz # perform operation
fmul.d f20, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fmul.d f27, f20, f14, dyn # perform operation
fmul.d f27, f20, f14, rdn # perform operation
fmul.d f27, f20, f14, rmm # perform operation
fmul.d f27, f20, f14, rne # perform operation
fmul.d f27, f20, f14, rtz # perform operation
fmul.d f27, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fmul.d f26, f31, f16, dyn # perform operation
fmul.d f26, f31, f16, rdn # perform operation
fmul.d f26, f31, f16, rmm # perform operation
fmul.d f26, f31, f16, rne # perform operation
fmul.d f26, f31, f16, rtz # perform operation
fmul.d f26, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
fmul.d f15, f23, f24, dyn # perform operation
fmul.d f15, f23, f24, rdn # perform operation
fmul.d f15, f23, f24, rmm # perform operation
fmul.d f15, f23, f24, rne # perform operation
fmul.d f15, f23, f24, rtz # perform operation
fmul.d f15, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fmul.d f24, f5, f3, dyn # perform operation
fmul.d f24, f5, f3, rdn # perform operation
fmul.d f24, f5, f3, rmm # perform operation
fmul.d f24, f5, f3, rne # perform operation
fmul.d f24, f5, f3, rtz # perform operation
fmul.d f24, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
fmul.d f1, f15, f2, dyn # perform operation
fmul.d f1, f15, f2, rdn # perform operation
fmul.d f1, f15, f2, rmm # perform operation
fmul.d f1, f15, f2, rne # perform operation
fmul.d f1, f15, f2, rtz # perform operation
fmul.d f1, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
fmul.d f18, f24, f7, dyn # perform operation
fmul.d f18, f24, f7, rdn # perform operation
fmul.d f18, f24, f7, rmm # perform operation
fmul.d f18, f24, f7, rne # perform operation
fmul.d f18, f24, f7, rtz # perform operation
fmul.d f18, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fmul.d f26, f3, f17, dyn # perform operation
fmul.d f26, f3, f17, rdn # perform operation
fmul.d f26, f3, f17, rmm # perform operation
fmul.d f26, f3, f17, rne # perform operation
fmul.d f26, f3, f17, rtz # perform operation
fmul.d f26, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
fmul.d f12, f18, f1, dyn # perform operation
fmul.d f12, f18, f1, rdn # perform operation
fmul.d f12, f18, f1, rmm # perform operation
fmul.d f12, f18, f1, rne # perform operation
fmul.d f12, f18, f1, rtz # perform operation
fmul.d f12, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fmul.d f14, f12, f25, dyn # perform operation
fmul.d f14, f12, f25, rdn # perform operation
fmul.d f14, f12, f25, rmm # perform operation
fmul.d f14, f12, f25, rne # perform operation
fmul.d f14, f12, f25, rtz # perform operation
fmul.d f14, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff8000000000000 from memory into f12
fmul.d f11, f5, f12, dyn # perform operation
fmul.d f11, f5, f12, rdn # perform operation
fmul.d f11, f5, f12, rmm # perform operation
fmul.d f11, f5, f12, rne # perform operation
fmul.d f11, f5, f12, rtz # perform operation
fmul.d f11, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fmul.d f26, f12, f31, dyn # perform operation
fmul.d f26, f12, f31, rdn # perform operation
fmul.d f26, f12, f31, rmm # perform operation
fmul.d f26, f12, f31, rne # perform operation
fmul.d f26, f12, f31, rtz # perform operation
fmul.d f26, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fmul.d f31, f9, f26, dyn # perform operation
fmul.d f31, f9, f26, rdn # perform operation
fmul.d f31, f9, f26, rmm # perform operation
fmul.d f31, f9, f26, rne # perform operation
fmul.d f31, f9, f26, rtz # perform operation
fmul.d f31, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
fmul.d f5, f7, f19, dyn # perform operation
fmul.d f5, f7, f19, rdn # perform operation
fmul.d f5, f7, f19, rmm # perform operation
fmul.d f5, f7, f19, rne # perform operation
fmul.d f5, f7, f19, rtz # perform operation
fmul.d f5, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fmul.d f20, f18, f25, dyn # perform operation
fmul.d f20, f18, f25, rdn # perform operation
fmul.d f20, f18, f25, rmm # perform operation
fmul.d f20, f18, f25, rne # perform operation
fmul.d f20, f18, f25, rtz # perform operation
fmul.d f20, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fmul.d f15, f27, f6, dyn # perform operation
fmul.d f15, f27, f6, rdn # perform operation
fmul.d f15, f27, f6, rmm # perform operation
fmul.d f15, f27, f6, rne # perform operation
fmul.d f15, f27, f6, rtz # perform operation
fmul.d f15, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fmul.d f19, f17, f11, dyn # perform operation
fmul.d f19, f17, f11, rdn # perform operation
fmul.d f19, f17, f11, rmm # perform operation
fmul.d f19, f17, f11, rne # perform operation
fmul.d f19, f17, f11, rtz # perform operation
fmul.d f19, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fmul.d f7, f18, f25, dyn # perform operation
fmul.d f7, f18, f25, rdn # perform operation
fmul.d f7, f18, f25, rmm # perform operation
fmul.d f7, f18, f25, rne # perform operation
fmul.d f7, f18, f25, rtz # perform operation
fmul.d f7, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fmul.d f17, f27, f23, dyn # perform operation
fmul.d f17, f27, f23, rdn # perform operation
fmul.d f17, f27, f23, rmm # perform operation
fmul.d f17, f27, f23, rne # perform operation
fmul.d f17, f27, f23, rtz # perform operation
fmul.d f17, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
fmul.d f3, f28, f2, dyn # perform operation
fmul.d f3, f28, f2, rdn # perform operation
fmul.d f3, f28, f2, rmm # perform operation
fmul.d f3, f28, f2, rne # perform operation
fmul.d f3, f28, f2, rtz # perform operation
fmul.d f3, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fmul.d f22, f15, f7, dyn # perform operation
fmul.d f22, f15, f7, rdn # perform operation
fmul.d f22, f15, f7, rmm # perform operation
fmul.d f22, f15, f7, rne # perform operation
fmul.d f22, f15, f7, rtz # perform operation
fmul.d f22, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fmul.d f21, f19, f24, dyn # perform operation
fmul.d f21, f19, f24, rdn # perform operation
fmul.d f21, f19, f24, rmm # perform operation
fmul.d f21, f19, f24, rne # perform operation
fmul.d f21, f19, f24, rtz # perform operation
fmul.d f21, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fmul.d f13, f26, f16, dyn # perform operation
fmul.d f13, f26, f16, rdn # perform operation
fmul.d f13, f26, f16, rmm # perform operation
fmul.d f13, f26, f16, rne # perform operation
fmul.d f13, f26, f16, rtz # perform operation
fmul.d f13, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
fmul.d f7, f18, f23, dyn # perform operation
fmul.d f7, f18, f23, rdn # perform operation
fmul.d f7, f18, f23, rmm # perform operation
fmul.d f7, f18, f23, rne # perform operation
fmul.d f7, f18, f23, rtz # perform operation
fmul.d f7, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
fmul.d f17, f12, f15, dyn # perform operation
fmul.d f17, f12, f15, rdn # perform operation
fmul.d f17, f12, f15, rmm # perform operation
fmul.d f17, f12, f15, rne # perform operation
fmul.d f17, f12, f15, rtz # perform operation
fmul.d f17, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
fmul.d f19, f3, f11, dyn # perform operation
fmul.d f19, f3, f11, rdn # perform operation
fmul.d f19, f3, f11, rmm # perform operation
fmul.d f19, f3, f11, rne # perform operation
fmul.d f19, f3, f11, rtz # perform operation
fmul.d f19, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fmul.d f2, f18, f30, dyn # perform operation
fmul.d f2, f18, f30, rdn # perform operation
fmul.d f2, f18, f30, rmm # perform operation
fmul.d f2, f18, f30, rne # perform operation
fmul.d f2, f18, f30, rtz # perform operation
fmul.d f2, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fmul.d f21, f28, f24, dyn # perform operation
fmul.d f21, f28, f24, rdn # perform operation
fmul.d f21, f28, f24, rmm # perform operation
fmul.d f21, f28, f24, rne # perform operation
fmul.d f21, f28, f24, rtz # perform operation
fmul.d f21, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fmul.d f20, f23, f15, dyn # perform operation
fmul.d f20, f23, f15, rdn # perform operation
fmul.d f20, f23, f15, rmm # perform operation
fmul.d f20, f23, f15, rne # perform operation
fmul.d f20, f23, f15, rtz # perform operation
fmul.d f20, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fmul.d f19, f18, f11, dyn # perform operation
fmul.d f19, f18, f11, rdn # perform operation
fmul.d f19, f18, f11, rmm # perform operation
fmul.d f19, f18, f11, rne # perform operation
fmul.d f19, f18, f11, rtz # perform operation
fmul.d f19, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fmul.d f13, f31, f30, dyn # perform operation
fmul.d f13, f31, f30, rdn # perform operation
fmul.d f13, f31, f30, rmm # perform operation
fmul.d f13, f31, f30, rne # perform operation
fmul.d f13, f31, f30, rtz # perform operation
fmul.d f13, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fmul.d f22, f21, f30, dyn # perform operation
fmul.d f22, f21, f30, rdn # perform operation
fmul.d f22, f21, f30, rmm # perform operation
fmul.d f22, f21, f30, rne # perform operation
fmul.d f22, f21, f30, rtz # perform operation
fmul.d f22, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fmul.d f19, f30, f24, dyn # perform operation
fmul.d f19, f30, f24, rdn # perform operation
fmul.d f19, f30, f24, rmm # perform operation
fmul.d f19, f30, f24, rne # perform operation
fmul.d f19, f30, f24, rtz # perform operation
fmul.d f19, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
fmul.d f6, f31, f7, dyn # perform operation
fmul.d f6, f31, f7, rdn # perform operation
fmul.d f6, f31, f7, rmm # perform operation
fmul.d f6, f31, f7, rne # perform operation
fmul.d f6, f31, f7, rtz # perform operation
fmul.d f6, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fmul.d f18, f13, f24, dyn # perform operation
fmul.d f18, f13, f24, rdn # perform operation
fmul.d f18, f13, f24, rmm # perform operation
fmul.d f18, f13, f24, rne # perform operation
fmul.d f18, f13, f24, rtz # perform operation
fmul.d f18, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f13, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fmul.d f20, f13, f6, dyn # perform operation
fmul.d f20, f13, f6, rdn # perform operation
fmul.d f20, f13, f6, rmm # perform operation
fmul.d f20, f13, f6, rne # perform operation
fmul.d f20, f13, f6, rtz # perform operation
fmul.d f20, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fmul.d f22, f6, f3, dyn # perform operation
fmul.d f22, f6, f3, rdn # perform operation
fmul.d f22, f6, f3, rmm # perform operation
fmul.d f22, f6, f3, rne # perform operation
fmul.d f22, f6, f3, rtz # perform operation
fmul.d f22, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fmul.d f22, f5, f20, dyn # perform operation
fmul.d f22, f5, f20, rdn # perform operation
fmul.d f22, f5, f20, rmm # perform operation
fmul.d f22, f5, f20, rne # perform operation
fmul.d f22, f5, f20, rtz # perform operation
fmul.d f22, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff8000000000000 from memory into f8
fmul.d f18, f15, f8, dyn # perform operation
fmul.d f18, f15, f8, rdn # perform operation
fmul.d f18, f15, f8, rmm # perform operation
fmul.d f18, f15, f8, rne # perform operation
fmul.d f18, f15, f8, rtz # perform operation
fmul.d f18, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
fmul.d f27, f10, f13, dyn # perform operation
fmul.d f27, f10, f13, rdn # perform operation
fmul.d f27, f10, f13, rmm # perform operation
fmul.d f27, f10, f13, rne # perform operation
fmul.d f27, f10, f13, rtz # perform operation
fmul.d f27, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fmul.d f20, f23, f3, dyn # perform operation
fmul.d f20, f23, f3, rdn # perform operation
fmul.d f20, f23, f3, rmm # perform operation
fmul.d f20, f23, f3, rne # perform operation
fmul.d f20, f23, f3, rtz # perform operation
fmul.d f20, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000001 from memory into f1
fmul.d f20, f12, f1, dyn # perform operation
fmul.d f20, f12, f1, rdn # perform operation
fmul.d f20, f12, f1, rmm # perform operation
fmul.d f20, f12, f1, rne # perform operation
fmul.d f20, f12, f1, rtz # perform operation
fmul.d f20, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fmul.d f28, f9, f16, dyn # perform operation
fmul.d f28, f9, f16, rdn # perform operation
fmul.d f28, f9, f16, rmm # perform operation
fmul.d f28, f9, f16, rne # perform operation
fmul.d f28, f9, f16, rtz # perform operation
fmul.d f28, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fmul.d f6, f5, f25, dyn # perform operation
fmul.d f6, f5, f25, rdn # perform operation
fmul.d f6, f5, f25, rmm # perform operation
fmul.d f6, f5, f25, rne # perform operation
fmul.d f6, f5, f25, rtz # perform operation
fmul.d f6, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fmul.d f16, f30, f15, dyn # perform operation
fmul.d f16, f30, f15, rdn # perform operation
fmul.d f16, f30, f15, rmm # perform operation
fmul.d f16, f30, f15, rne # perform operation
fmul.d f16, f30, f15, rtz # perform operation
fmul.d f16, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
fmul.d f21, f27, f6, dyn # perform operation
fmul.d f21, f27, f6, rdn # perform operation
fmul.d f21, f27, f6, rmm # perform operation
fmul.d f21, f27, f6, rne # perform operation
fmul.d f21, f27, f6, rtz # perform operation
fmul.d f21, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
fmul.d f26, f14, f25, dyn # perform operation
fmul.d f26, f14, f25, rdn # perform operation
fmul.d f26, f14, f25, rmm # perform operation
fmul.d f26, f14, f25, rne # perform operation
fmul.d f26, f14, f25, rtz # perform operation
fmul.d f26, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
fmul.d f21, f1, f15, dyn # perform operation
fmul.d f21, f1, f15, rdn # perform operation
fmul.d f21, f1, f15, rmm # perform operation
fmul.d f21, f1, f15, rne # perform operation
fmul.d f21, f1, f15, rtz # perform operation
fmul.d f21, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fmul.d f22, f5, f23, dyn # perform operation
fmul.d f22, f5, f23, rdn # perform operation
fmul.d f22, f5, f23, rmm # perform operation
fmul.d f22, f5, f23, rne # perform operation
fmul.d f22, f5, f23, rtz # perform operation
fmul.d f22, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fmul.d f12, f18, f13, dyn # perform operation
fmul.d f12, f18, f13, rdn # perform operation
fmul.d f12, f18, f13, rmm # perform operation
fmul.d f12, f18, f13, rne # perform operation
fmul.d f12, f18, f13, rtz # perform operation
fmul.d f12, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fmul.d f15, f5, f12, dyn # perform operation
fmul.d f15, f5, f12, rdn # perform operation
fmul.d f15, f5, f12, rmm # perform operation
fmul.d f15, f5, f12, rne # perform operation
fmul.d f15, f5, f12, rtz # perform operation
fmul.d f15, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fmul.d f6, f19, f22, dyn # perform operation
fmul.d f6, f19, f22, rdn # perform operation
fmul.d f6, f19, f22, rmm # perform operation
fmul.d f6, f19, f22, rne # perform operation
fmul.d f6, f19, f22, rtz # perform operation
fmul.d f6, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fmul.d f8, f7, f5, dyn # perform operation
fmul.d f8, f7, f5, rdn # perform operation
fmul.d f8, f7, f5, rmm # perform operation
fmul.d f8, f7, f5, rne # perform operation
fmul.d f8, f7, f5, rtz # perform operation
fmul.d f8, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fmul.d f8, f11, f6, dyn # perform operation
fmul.d f8, f11, f6, rdn # perform operation
fmul.d f8, f11, f6, rmm # perform operation
fmul.d f8, f11, f6, rne # perform operation
fmul.d f8, f11, f6, rtz # perform operation
fmul.d f8, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fmul.d f1, f23, f20, dyn # perform operation
fmul.d f1, f23, f20, rdn # perform operation
fmul.d f1, f23, f20, rmm # perform operation
fmul.d f1, f23, f20, rne # perform operation
fmul.d f1, f23, f20, rtz # perform operation
fmul.d f1, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fmul.d f13, f29, f3, dyn # perform operation
fmul.d f13, f29, f3, rdn # perform operation
fmul.d f13, f29, f3, rmm # perform operation
fmul.d f13, f29, f3, rne # perform operation
fmul.d f13, f29, f3, rtz # perform operation
fmul.d f13, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fmul.d f10, f2, f28, dyn # perform operation
fmul.d f10, f2, f28, rdn # perform operation
fmul.d f10, f2, f28, rmm # perform operation
fmul.d f10, f2, f28, rne # perform operation
fmul.d f10, f2, f28, rtz # perform operation
fmul.d f10, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
fmul.d f14, f6, f25, dyn # perform operation
fmul.d f14, f6, f25, rdn # perform operation
fmul.d f14, f6, f25, rmm # perform operation
fmul.d f14, f6, f25, rne # perform operation
fmul.d f14, f6, f25, rtz # perform operation
fmul.d f14, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fmul.d f28, f7, f20, dyn # perform operation
fmul.d f28, f7, f20, rdn # perform operation
fmul.d f28, f7, f20, rmm # perform operation
fmul.d f28, f7, f20, rne # perform operation
fmul.d f28, f7, f20, rtz # perform operation
fmul.d f28, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fmul.d f1, f25, f7, dyn # perform operation
fmul.d f1, f25, f7, rdn # perform operation
fmul.d f1, f25, f7, rmm # perform operation
fmul.d f1, f25, f7, rne # perform operation
fmul.d f1, f25, f7, rtz # perform operation
fmul.d f1, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fmul.d f5, f9, f1, dyn # perform operation
fmul.d f5, f9, f1, rdn # perform operation
fmul.d f5, f9, f1, rmm # perform operation
fmul.d f5, f9, f1, rne # perform operation
fmul.d f5, f9, f1, rtz # perform operation
fmul.d f5, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
fmul.d f8, f20, f10, dyn # perform operation
fmul.d f8, f20, f10, rdn # perform operation
fmul.d f8, f20, f10, rmm # perform operation
fmul.d f8, f20, f10, rne # perform operation
fmul.d f8, f20, f10, rtz # perform operation
fmul.d f8, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fmul.d f3, f18, f22, dyn # perform operation
fmul.d f3, f18, f22, rdn # perform operation
fmul.d f3, f18, f22, rmm # perform operation
fmul.d f3, f18, f22, rne # perform operation
fmul.d f3, f18, f22, rtz # perform operation
fmul.d f3, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fmul.d f7, f16, f14, dyn # perform operation
fmul.d f7, f16, f14, rdn # perform operation
fmul.d f7, f16, f14, rmm # perform operation
fmul.d f7, f16, f14, rne # perform operation
fmul.d f7, f16, f14, rtz # perform operation
fmul.d f7, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
fmul.d f2, f22, f28, dyn # perform operation
fmul.d f2, f22, f28, rdn # perform operation
fmul.d f2, f22, f28, rmm # perform operation
fmul.d f2, f22, f28, rne # perform operation
fmul.d f2, f22, f28, rtz # perform operation
fmul.d f2, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fmul.d f12, f18, f23, dyn # perform operation
fmul.d f12, f18, f23, rdn # perform operation
fmul.d f12, f18, f23, rmm # perform operation
fmul.d f12, f18, f23, rne # perform operation
fmul.d f12, f18, f23, rtz # perform operation
fmul.d f12, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
fmul.d f15, f10, f23, dyn # perform operation
fmul.d f15, f10, f23, rdn # perform operation
fmul.d f15, f10, f23, rmm # perform operation
fmul.d f15, f10, f23, rne # perform operation
fmul.d f15, f10, f23, rtz # perform operation
fmul.d f15, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fmul.d f14, f2, f11, dyn # perform operation
fmul.d f14, f2, f11, rdn # perform operation
fmul.d f14, f2, f11, rmm # perform operation
fmul.d f14, f2, f11, rne # perform operation
fmul.d f14, f2, f11, rtz # perform operation
fmul.d f14, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmul.d f28, f3, f11, dyn # perform operation
fmul.d f28, f3, f11, rdn # perform operation
fmul.d f28, f3, f11, rmm # perform operation
fmul.d f28, f3, f11, rne # perform operation
fmul.d f28, f3, f11, rtz # perform operation
fmul.d f28, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000001 from memory into f29
fmul.d f25, f17, f29, dyn # perform operation
fmul.d f25, f17, f29, rdn # perform operation
fmul.d f25, f17, f29, rmm # perform operation
fmul.d f25, f17, f29, rne # perform operation
fmul.d f25, f17, f29, rtz # perform operation
fmul.d f25, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fmul.d f6, f10, f22, dyn # perform operation
fmul.d f6, f10, f22, rdn # perform operation
fmul.d f6, f10, f22, rmm # perform operation
fmul.d f6, f10, f22, rne # perform operation
fmul.d f6, f10, f22, rtz # perform operation
fmul.d f6, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
fmul.d f22, f21, f14, dyn # perform operation
fmul.d f22, f21, f14, rdn # perform operation
fmul.d f22, f21, f14, rmm # perform operation
fmul.d f22, f21, f14, rne # perform operation
fmul.d f22, f21, f14, rtz # perform operation
fmul.d f22, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fmul.d f27, f14, f15, dyn # perform operation
fmul.d f27, f14, f15, rdn # perform operation
fmul.d f27, f14, f15, rmm # perform operation
fmul.d f27, f14, f15, rne # perform operation
fmul.d f27, f14, f15, rtz # perform operation
fmul.d f27, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
fmul.d f11, f1, f19, dyn # perform operation
fmul.d f11, f1, f19, rdn # perform operation
fmul.d f11, f1, f19, rmm # perform operation
fmul.d f11, f1, f19, rne # perform operation
fmul.d f11, f1, f19, rtz # perform operation
fmul.d f11, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
fmul.d f21, f6, f2, dyn # perform operation
fmul.d f21, f6, f2, rdn # perform operation
fmul.d f21, f6, f2, rmm # perform operation
fmul.d f21, f6, f2, rne # perform operation
fmul.d f21, f6, f2, rtz # perform operation
fmul.d f21, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fmul.d f12, f8, f7, dyn # perform operation
fmul.d f12, f8, f7, rdn # perform operation
fmul.d f12, f8, f7, rmm # perform operation
fmul.d f12, f8, f7, rne # perform operation
fmul.d f12, f8, f7, rtz # perform operation
fmul.d f12, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fmul.d f13, f25, f30, dyn # perform operation
fmul.d f13, f25, f30, rdn # perform operation
fmul.d f13, f25, f30, rmm # perform operation
fmul.d f13, f25, f30, rne # perform operation
fmul.d f13, f25, f30, rtz # perform operation
fmul.d f13, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fmul.d f8, f1, f13, dyn # perform operation
fmul.d f8, f1, f13, rdn # perform operation
fmul.d f8, f1, f13, rmm # perform operation
fmul.d f8, f1, f13, rne # perform operation
fmul.d f8, f1, f13, rtz # perform operation
fmul.d f8, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fmul.d f7, f30, f25, dyn # perform operation
fmul.d f7, f30, f25, rdn # perform operation
fmul.d f7, f30, f25, rmm # perform operation
fmul.d f7, f30, f25, rne # perform operation
fmul.d f7, f30, f25, rtz # perform operation
fmul.d f7, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fmul.d f8, f5, f17, dyn # perform operation
fmul.d f8, f5, f17, rdn # perform operation
fmul.d f8, f5, f17, rmm # perform operation
fmul.d f8, f5, f17, rne # perform operation
fmul.d f8, f5, f17, rtz # perform operation
fmul.d f8, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fmul.d f17, f1, f22, dyn # perform operation
fmul.d f17, f1, f22, rdn # perform operation
fmul.d f17, f1, f22, rmm # perform operation
fmul.d f17, f1, f22, rne # perform operation
fmul.d f17, f1, f22, rtz # perform operation
fmul.d f17, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fmul.d f21, f27, f22, dyn # perform operation
fmul.d f21, f27, f22, rdn # perform operation
fmul.d f21, f27, f22, rmm # perform operation
fmul.d f21, f27, f22, rne # perform operation
fmul.d f21, f27, f22, rtz # perform operation
fmul.d f21, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fmul.d f6, f15, f19, dyn # perform operation
fmul.d f6, f15, f19, rdn # perform operation
fmul.d f6, f15, f19, rmm # perform operation
fmul.d f6, f15, f19, rne # perform operation
fmul.d f6, f15, f19, rtz # perform operation
fmul.d f6, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fmul.d f5, f29, f2, dyn # perform operation
fmul.d f5, f29, f2, rdn # perform operation
fmul.d f5, f29, f2, rmm # perform operation
fmul.d f5, f29, f2, rne # perform operation
fmul.d f5, f29, f2, rtz # perform operation
fmul.d f5, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fmul.d f16, f21, f6, dyn # perform operation
fmul.d f16, f21, f6, rdn # perform operation
fmul.d f16, f21, f6, rmm # perform operation
fmul.d f16, f21, f6, rne # perform operation
fmul.d f16, f21, f6, rtz # perform operation
fmul.d f16, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fmul.d f8, f23, f24, dyn # perform operation
fmul.d f8, f23, f24, rdn # perform operation
fmul.d f8, f23, f24, rmm # perform operation
fmul.d f8, f23, f24, rne # perform operation
fmul.d f8, f23, f24, rtz # perform operation
fmul.d f8, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fmul.d f30, f19, f24, dyn # perform operation
fmul.d f30, f19, f24, rdn # perform operation
fmul.d f30, f19, f24, rmm # perform operation
fmul.d f30, f19, f24, rne # perform operation
fmul.d f30, f19, f24, rtz # perform operation
fmul.d f30, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fmul.d f7, f13, f9, dyn # perform operation
fmul.d f7, f13, f9, rdn # perform operation
fmul.d f7, f13, f9, rmm # perform operation
fmul.d f7, f13, f9, rne # perform operation
fmul.d f7, f13, f9, rtz # perform operation
fmul.d f7, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
fmul.d f20, f14, f18, dyn # perform operation
fmul.d f20, f14, f18, rdn # perform operation
fmul.d f20, f14, f18, rmm # perform operation
fmul.d f20, f14, f18, rne # perform operation
fmul.d f20, f14, f18, rtz # perform operation
fmul.d f20, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fmul.d f18, f19, f9, dyn # perform operation
fmul.d f18, f19, f9, rdn # perform operation
fmul.d f18, f19, f9, rmm # perform operation
fmul.d f18, f19, f9, rne # perform operation
fmul.d f18, f19, f9, rtz # perform operation
fmul.d f18, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fmul.d f27, f26, f17, dyn # perform operation
fmul.d f27, f26, f17, rdn # perform operation
fmul.d f27, f26, f17, rmm # perform operation
fmul.d f27, f26, f17, rne # perform operation
fmul.d f27, f26, f17, rtz # perform operation
fmul.d f27, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fmul.d f8, f18, f26, dyn # perform operation
fmul.d f8, f18, f26, rdn # perform operation
fmul.d f8, f18, f26, rmm # perform operation
fmul.d f8, f18, f26, rne # perform operation
fmul.d f8, f18, f26, rtz # perform operation
fmul.d f8, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
fmul.d f29, f24, f1, dyn # perform operation
fmul.d f29, f24, f1, rdn # perform operation
fmul.d f29, f24, f1, rmm # perform operation
fmul.d f29, f24, f1, rne # perform operation
fmul.d f29, f24, f1, rtz # perform operation
fmul.d f29, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fmul.d f12, f7, f31, dyn # perform operation
fmul.d f12, f7, f31, rdn # perform operation
fmul.d f12, f7, f31, rmm # perform operation
fmul.d f12, f7, f31, rne # perform operation
fmul.d f12, f7, f31, rtz # perform operation
fmul.d f12, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fmul.d f23, f3, f25, dyn # perform operation
fmul.d f23, f3, f25, rdn # perform operation
fmul.d f23, f3, f25, rmm # perform operation
fmul.d f23, f3, f25, rne # perform operation
fmul.d f23, f3, f25, rtz # perform operation
fmul.d f23, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fmul.d f22, f14, f23, dyn # perform operation
fmul.d f22, f14, f23, rdn # perform operation
fmul.d f22, f14, f23, rmm # perform operation
fmul.d f22, f14, f23, rne # perform operation
fmul.d f22, f14, f23, rtz # perform operation
fmul.d f22, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fmul.d f21, f31, f26, dyn # perform operation
fmul.d f21, f31, f26, rdn # perform operation
fmul.d f21, f31, f26, rmm # perform operation
fmul.d f21, f31, f26, rne # perform operation
fmul.d f21, f31, f26, rtz # perform operation
fmul.d f21, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
fmul.d f1, f21, f30, dyn # perform operation
fmul.d f1, f21, f30, rdn # perform operation
fmul.d f1, f21, f30, rmm # perform operation
fmul.d f1, f21, f30, rne # perform operation
fmul.d f1, f21, f30, rtz # perform operation
fmul.d f1, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fmul.d f31, f5, f28, dyn # perform operation
fmul.d f31, f5, f28, rdn # perform operation
fmul.d f31, f5, f28, rmm # perform operation
fmul.d f31, f5, f28, rne # perform operation
fmul.d f31, f5, f28, rtz # perform operation
fmul.d f31, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fmul.d f9, f5, f29, dyn # perform operation
fmul.d f9, f5, f29, rdn # perform operation
fmul.d f9, f5, f29, rmm # perform operation
fmul.d f9, f5, f29, rne # perform operation
fmul.d f9, f5, f29, rtz # perform operation
fmul.d f9, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fmul.d f2, f16, f12, dyn # perform operation
fmul.d f2, f16, f12, rdn # perform operation
fmul.d f2, f16, f12, rmm # perform operation
fmul.d f2, f16, f12, rne # perform operation
fmul.d f2, f16, f12, rtz # perform operation
fmul.d f2, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fmul.d f23, f18, f16, dyn # perform operation
fmul.d f23, f18, f16, rdn # perform operation
fmul.d f23, f18, f16, rmm # perform operation
fmul.d f23, f18, f16, rne # perform operation
fmul.d f23, f18, f16, rtz # perform operation
fmul.d f23, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fmul.d f27, f2, f5, dyn # perform operation
fmul.d f27, f2, f5, rdn # perform operation
fmul.d f27, f2, f5, rmm # perform operation
fmul.d f27, f2, f5, rne # perform operation
fmul.d f27, f2, f5, rtz # perform operation
fmul.d f27, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fmul.d f21, f12, f22, dyn # perform operation
fmul.d f21, f12, f22, rdn # perform operation
fmul.d f21, f12, f22, rmm # perform operation
fmul.d f21, f12, f22, rne # perform operation
fmul.d f21, f12, f22, rtz # perform operation
fmul.d f21, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fmul.d f7, f20, f26, dyn # perform operation
fmul.d f7, f20, f26, rdn # perform operation
fmul.d f7, f20, f26, rmm # perform operation
fmul.d f7, f20, f26, rne # perform operation
fmul.d f7, f20, f26, rtz # perform operation
fmul.d f7, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fmul.d f28, f27, f17, dyn # perform operation
fmul.d f28, f27, f17, rdn # perform operation
fmul.d f28, f27, f17, rmm # perform operation
fmul.d f28, f27, f17, rne # perform operation
fmul.d f28, f27, f17, rtz # perform operation
fmul.d f28, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fmul.d f31, f15, f11, dyn # perform operation
fmul.d f31, f15, f11, rdn # perform operation
fmul.d f31, f15, f11, rmm # perform operation
fmul.d f31, f15, f11, rne # perform operation
fmul.d f31, f15, f11, rtz # perform operation
fmul.d f31, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fmul.d f26, f22, f15, dyn # perform operation
fmul.d f26, f22, f15, rdn # perform operation
fmul.d f26, f22, f15, rmm # perform operation
fmul.d f26, f22, f15, rne # perform operation
fmul.d f26, f22, f15, rtz # perform operation
fmul.d f26, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fmul.d f17, f5, f1, dyn # perform operation
fmul.d f17, f5, f1, rdn # perform operation
fmul.d f17, f5, f1, rmm # perform operation
fmul.d f17, f5, f1, rne # perform operation
fmul.d f17, f5, f1, rtz # perform operation
fmul.d f17, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fmul.d f7, f14, f24, dyn # perform operation
fmul.d f7, f14, f24, rdn # perform operation
fmul.d f7, f14, f24, rmm # perform operation
fmul.d f7, f14, f24, rne # perform operation
fmul.d f7, f14, f24, rtz # perform operation
fmul.d f7, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fmul.d f9, f23, f22, dyn # perform operation
fmul.d f9, f23, f22, rdn # perform operation
fmul.d f9, f23, f22, rmm # perform operation
fmul.d f9, f23, f22, rne # perform operation
fmul.d f9, f23, f22, rtz # perform operation
fmul.d f9, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fmul.d f11, f6, f24, dyn # perform operation
fmul.d f11, f6, f24, rdn # perform operation
fmul.d f11, f6, f24, rmm # perform operation
fmul.d f11, f6, f24, rne # perform operation
fmul.d f11, f6, f24, rtz # perform operation
fmul.d f11, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fmul.d f29, f12, f3, dyn # perform operation
fmul.d f29, f12, f3, rdn # perform operation
fmul.d f29, f12, f3, rmm # perform operation
fmul.d f29, f12, f3, rne # perform operation
fmul.d f29, f12, f3, rtz # perform operation
fmul.d f29, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fmul.d f16, f28, f1, dyn # perform operation
fmul.d f16, f28, f1, rdn # perform operation
fmul.d f16, f28, f1, rmm # perform operation
fmul.d f16, f28, f1, rne # perform operation
fmul.d f16, f28, f1, rtz # perform operation
fmul.d f16, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fmul.d f27, f9, f14, dyn # perform operation
fmul.d f27, f9, f14, rdn # perform operation
fmul.d f27, f9, f14, rmm # perform operation
fmul.d f27, f9, f14, rne # perform operation
fmul.d f27, f9, f14, rtz # perform operation
fmul.d f27, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fmul.d f26, f19, f17, dyn # perform operation
fmul.d f26, f19, f17, rdn # perform operation
fmul.d f26, f19, f17, rmm # perform operation
fmul.d f26, f19, f17, rne # perform operation
fmul.d f26, f19, f17, rtz # perform operation
fmul.d f26, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fmul.d f12, f24, f26, dyn # perform operation
fmul.d f12, f24, f26, rdn # perform operation
fmul.d f12, f24, f26, rmm # perform operation
fmul.d f12, f24, f26, rne # perform operation
fmul.d f12, f24, f26, rtz # perform operation
fmul.d f12, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fmul.d f29, f16, f1, dyn # perform operation
fmul.d f29, f16, f1, rdn # perform operation
fmul.d f29, f16, f1, rmm # perform operation
fmul.d f29, f16, f1, rne # perform operation
fmul.d f29, f16, f1, rtz # perform operation
fmul.d f29, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fmul.d f14, f3, f27, dyn # perform operation
fmul.d f14, f3, f27, rdn # perform operation
fmul.d f14, f3, f27, rmm # perform operation
fmul.d f14, f3, f27, rne # perform operation
fmul.d f14, f3, f27, rtz # perform operation
fmul.d f14, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
fmul.d f19, f20, f8, dyn # perform operation
fmul.d f19, f20, f8, rdn # perform operation
fmul.d f19, f20, f8, rmm # perform operation
fmul.d f19, f20, f8, rne # perform operation
fmul.d f19, f20, f8, rtz # perform operation
fmul.d f19, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fmul.d f13, f6, f21, dyn # perform operation
fmul.d f13, f6, f21, rdn # perform operation
fmul.d f13, f6, f21, rmm # perform operation
fmul.d f13, f6, f21, rne # perform operation
fmul.d f13, f6, f21, rtz # perform operation
fmul.d f13, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fmul.d f31, f2, f7, dyn # perform operation
fmul.d f31, f2, f7, rdn # perform operation
fmul.d f31, f2, f7, rmm # perform operation
fmul.d f31, f2, f7, rne # perform operation
fmul.d f31, f2, f7, rtz # perform operation
fmul.d f31, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f2, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff8000000000000 from memory into f22
fmul.d f18, f28, f22, dyn # perform operation
fmul.d f18, f28, f22, rdn # perform operation
fmul.d f18, f28, f22, rmm # perform operation
fmul.d f18, f28, f22, rne # perform operation
fmul.d f18, f28, f22, rtz # perform operation
fmul.d f18, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
fmul.d f19, f2, f30, dyn # perform operation
fmul.d f19, f2, f30, rdn # perform operation
fmul.d f19, f2, f30, rmm # perform operation
fmul.d f19, f2, f30, rne # perform operation
fmul.d f19, f2, f30, rtz # perform operation
fmul.d f19, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fmul.d f8, f27, f15, dyn # perform operation
fmul.d f8, f27, f15, rdn # perform operation
fmul.d f8, f27, f15, rmm # perform operation
fmul.d f8, f27, f15, rne # perform operation
fmul.d f8, f27, f15, rtz # perform operation
fmul.d f8, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000001 from memory into f24
fmul.d f19, f29, f24, dyn # perform operation
fmul.d f19, f29, f24, rdn # perform operation
fmul.d f19, f29, f24, rmm # perform operation
fmul.d f19, f29, f24, rne # perform operation
fmul.d f19, f29, f24, rtz # perform operation
fmul.d f19, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fmul.d f3, f1, f16, dyn # perform operation
fmul.d f3, f1, f16, rdn # perform operation
fmul.d f3, f1, f16, rmm # perform operation
fmul.d f3, f1, f16, rne # perform operation
fmul.d f3, f1, f16, rtz # perform operation
fmul.d f3, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fmul.d f15, f9, f6, dyn # perform operation
fmul.d f15, f9, f6, rdn # perform operation
fmul.d f15, f9, f6, rmm # perform operation
fmul.d f15, f9, f6, rne # perform operation
fmul.d f15, f9, f6, rtz # perform operation
fmul.d f15, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fmul.d f11, f7, f8, dyn # perform operation
fmul.d f11, f7, f8, rdn # perform operation
fmul.d f11, f7, f8, rmm # perform operation
fmul.d f11, f7, f8, rne # perform operation
fmul.d f11, f7, f8, rtz # perform operation
fmul.d f11, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fmul.d f10, f15, f2, dyn # perform operation
fmul.d f10, f15, f2, rdn # perform operation
fmul.d f10, f15, f2, rmm # perform operation
fmul.d f10, f15, f2, rne # perform operation
fmul.d f10, f15, f2, rtz # perform operation
fmul.d f10, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fmul.d f31, f14, f9, dyn # perform operation
fmul.d f31, f14, f9, rdn # perform operation
fmul.d f31, f14, f9, rmm # perform operation
fmul.d f31, f14, f9, rne # perform operation
fmul.d f31, f14, f9, rtz # perform operation
fmul.d f31, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fmul.d f31, f10, f29, dyn # perform operation
fmul.d f31, f10, f29, rdn # perform operation
fmul.d f31, f10, f29, rmm # perform operation
fmul.d f31, f10, f29, rne # perform operation
fmul.d f31, f10, f29, rtz # perform operation
fmul.d f31, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fmul.d f26, f22, f14, dyn # perform operation
fmul.d f26, f22, f14, rdn # perform operation
fmul.d f26, f22, f14, rmm # perform operation
fmul.d f26, f22, f14, rne # perform operation
fmul.d f26, f22, f14, rtz # perform operation
fmul.d f26, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fmul.d f27, f1, f6, dyn # perform operation
fmul.d f27, f1, f6, rdn # perform operation
fmul.d f27, f1, f6, rmm # perform operation
fmul.d f27, f1, f6, rne # perform operation
fmul.d f27, f1, f6, rtz # perform operation
fmul.d f27, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
fmul.d f9, f7, f1, dyn # perform operation
fmul.d f9, f7, f1, rdn # perform operation
fmul.d f9, f7, f1, rmm # perform operation
fmul.d f9, f7, f1, rne # perform operation
fmul.d f9, f7, f1, rtz # perform operation
fmul.d f9, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fmul.d f27, f15, f31, dyn # perform operation
fmul.d f27, f15, f31, rdn # perform operation
fmul.d f27, f15, f31, rmm # perform operation
fmul.d f27, f15, f31, rne # perform operation
fmul.d f27, f15, f31, rtz # perform operation
fmul.d f27, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fmul.d f3, f30, f27, dyn # perform operation
fmul.d f3, f30, f27, rdn # perform operation
fmul.d f3, f30, f27, rmm # perform operation
fmul.d f3, f30, f27, rne # perform operation
fmul.d f3, f30, f27, rtz # perform operation
fmul.d f3, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fmul.d f9, f29, f8, dyn # perform operation
fmul.d f9, f29, f8, rdn # perform operation
fmul.d f9, f29, f8, rmm # perform operation
fmul.d f9, f29, f8, rne # perform operation
fmul.d f9, f29, f8, rtz # perform operation
fmul.d f9, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fmul.d f23, f15, f5, dyn # perform operation
fmul.d f23, f15, f5, rdn # perform operation
fmul.d f23, f15, f5, rmm # perform operation
fmul.d f23, f15, f5, rne # perform operation
fmul.d f23, f15, f5, rtz # perform operation
fmul.d f23, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
fmul.d f23, f19, f12, dyn # perform operation
fmul.d f23, f19, f12, rdn # perform operation
fmul.d f23, f19, f12, rmm # perform operation
fmul.d f23, f19, f12, rne # perform operation
fmul.d f23, f19, f12, rtz # perform operation
fmul.d f23, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fmul.d f27, f2, f11, dyn # perform operation
fmul.d f27, f2, f11, rdn # perform operation
fmul.d f27, f2, f11, rmm # perform operation
fmul.d f27, f2, f11, rne # perform operation
fmul.d f27, f2, f11, rtz # perform operation
fmul.d f27, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fmul.d f31, f29, f5, dyn # perform operation
fmul.d f31, f29, f5, rdn # perform operation
fmul.d f31, f29, f5, rmm # perform operation
fmul.d f31, f29, f5, rne # perform operation
fmul.d f31, f29, f5, rtz # perform operation
fmul.d f31, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fmul.d f12, f25, f5, dyn # perform operation
fmul.d f12, f25, f5, rdn # perform operation
fmul.d f12, f25, f5, rmm # perform operation
fmul.d f12, f25, f5, rne # perform operation
fmul.d f12, f25, f5, rtz # perform operation
fmul.d f12, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fmul.d f27, f9, f12, dyn # perform operation
fmul.d f27, f9, f12, rdn # perform operation
fmul.d f27, f9, f12, rmm # perform operation
fmul.d f27, f9, f12, rne # perform operation
fmul.d f27, f9, f12, rtz # perform operation
fmul.d f27, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fmul.d f3, f17, f7, dyn # perform operation
fmul.d f3, f17, f7, rdn # perform operation
fmul.d f3, f17, f7, rmm # perform operation
fmul.d f3, f17, f7, rne # perform operation
fmul.d f3, f17, f7, rtz # perform operation
fmul.d f3, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fmul.d f16, f30, f24, dyn # perform operation
fmul.d f16, f30, f24, rdn # perform operation
fmul.d f16, f30, f24, rmm # perform operation
fmul.d f16, f30, f24, rne # perform operation
fmul.d f16, f30, f24, rtz # perform operation
fmul.d f16, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fmul.d f9, f5, f31, dyn # perform operation
fmul.d f9, f5, f31, rdn # perform operation
fmul.d f9, f5, f31, rmm # perform operation
fmul.d f9, f5, f31, rne # perform operation
fmul.d f9, f5, f31, rtz # perform operation
fmul.d f9, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fmul.d f12, f26, f6, dyn # perform operation
fmul.d f12, f26, f6, rdn # perform operation
fmul.d f12, f26, f6, rmm # perform operation
fmul.d f12, f26, f6, rne # perform operation
fmul.d f12, f26, f6, rtz # perform operation
fmul.d f12, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fmul.d f30, f18, f22, dyn # perform operation
fmul.d f30, f18, f22, rdn # perform operation
fmul.d f30, f18, f22, rmm # perform operation
fmul.d f30, f18, f22, rne # perform operation
fmul.d f30, f18, f22, rtz # perform operation
fmul.d f30, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fmul.d f10, f22, f23, dyn # perform operation
fmul.d f10, f22, f23, rdn # perform operation
fmul.d f10, f22, f23, rmm # perform operation
fmul.d f10, f22, f23, rne # perform operation
fmul.d f10, f22, f23, rtz # perform operation
fmul.d f10, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff8000000000000 from memory into f28
fmul.d f30, f27, f28, dyn # perform operation
fmul.d f30, f27, f28, rdn # perform operation
fmul.d f30, f27, f28, rmm # perform operation
fmul.d f30, f27, f28, rne # perform operation
fmul.d f30, f27, f28, rtz # perform operation
fmul.d f30, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f27, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fmul.d f21, f3, f2, dyn # perform operation
fmul.d f21, f3, f2, rdn # perform operation
fmul.d f21, f3, f2, rmm # perform operation
fmul.d f21, f3, f2, rne # perform operation
fmul.d f21, f3, f2, rtz # perform operation
fmul.d f21, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fmul.d f13, f3, f23, dyn # perform operation
fmul.d f13, f3, f23, rdn # perform operation
fmul.d f13, f3, f23, rmm # perform operation
fmul.d f13, f3, f23, rne # perform operation
fmul.d f13, f3, f23, rtz # perform operation
fmul.d f13, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
fmul.d f22, f5, f8, dyn # perform operation
fmul.d f22, f5, f8, rdn # perform operation
fmul.d f22, f5, f8, rmm # perform operation
fmul.d f22, f5, f8, rne # perform operation
fmul.d f22, f5, f8, rtz # perform operation
fmul.d f22, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f5, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fmul.d f30, f5, f2, dyn # perform operation
fmul.d f30, f5, f2, rdn # perform operation
fmul.d f30, f5, f2, rmm # perform operation
fmul.d f30, f5, f2, rne # perform operation
fmul.d f30, f5, f2, rtz # perform operation
fmul.d f30, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fmul.d f24, f21, f17, dyn # perform operation
fmul.d f24, f21, f17, rdn # perform operation
fmul.d f24, f21, f17, rmm # perform operation
fmul.d f24, f21, f17, rne # perform operation
fmul.d f24, f21, f17, rtz # perform operation
fmul.d f24, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f21, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fmul.d f10, f20, f2, dyn # perform operation
fmul.d f10, f20, f2, rdn # perform operation
fmul.d f10, f20, f2, rmm # perform operation
fmul.d f10, f20, f2, rne # perform operation
fmul.d f10, f20, f2, rtz # perform operation
fmul.d f10, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fmul.d f7, f23, f1, dyn # perform operation
fmul.d f7, f23, f1, rdn # perform operation
fmul.d f7, f23, f1, rmm # perform operation
fmul.d f7, f23, f1, rne # perform operation
fmul.d f7, f23, f1, rtz # perform operation
fmul.d f7, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fmul.d f13, f9, f23, dyn # perform operation
fmul.d f13, f9, f23, rdn # perform operation
fmul.d f13, f9, f23, rmm # perform operation
fmul.d f13, f9, f23, rne # perform operation
fmul.d f13, f9, f23, rtz # perform operation
fmul.d f13, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fmul.d f25, f31, f30, dyn # perform operation
fmul.d f25, f31, f30, rdn # perform operation
fmul.d f25, f31, f30, rmm # perform operation
fmul.d f25, f31, f30, rne # perform operation
fmul.d f25, f31, f30, rtz # perform operation
fmul.d f25, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fmul.d f24, f30, f5, dyn # perform operation
fmul.d f24, f30, f5, rdn # perform operation
fmul.d f24, f30, f5, rmm # perform operation
fmul.d f24, f30, f5, rne # perform operation
fmul.d f24, f30, f5, rtz # perform operation
fmul.d f24, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fmul.d f13, f5, f6, dyn # perform operation
fmul.d f13, f5, f6, rdn # perform operation
fmul.d f13, f5, f6, rmm # perform operation
fmul.d f13, f5, f6, rne # perform operation
fmul.d f13, f5, f6, rtz # perform operation
fmul.d f13, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fmul.d f24, f9, f7, dyn # perform operation
fmul.d f24, f9, f7, rdn # perform operation
fmul.d f24, f9, f7, rmm # perform operation
fmul.d f24, f9, f7, rne # perform operation
fmul.d f24, f9, f7, rtz # perform operation
fmul.d f24, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f9, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fmul.d f3, f31, f7, dyn # perform operation
fmul.d f3, f31, f7, rdn # perform operation
fmul.d f3, f31, f7, rmm # perform operation
fmul.d f3, f31, f7, rne # perform operation
fmul.d f3, f31, f7, rtz # perform operation
fmul.d f3, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
fmul.d f6, f22, f28, dyn # perform operation
fmul.d f6, f22, f28, rdn # perform operation
fmul.d f6, f22, f28, rmm # perform operation
fmul.d f6, f22, f28, rne # perform operation
fmul.d f6, f22, f28, rtz # perform operation
fmul.d f6, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fmul.d f6, f2, f19, dyn # perform operation
fmul.d f6, f2, f19, rdn # perform operation
fmul.d f6, f2, f19, rmm # perform operation
fmul.d f6, f2, f19, rne # perform operation
fmul.d f6, f2, f19, rtz # perform operation
fmul.d f6, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fmul.d f2, f1, f13, dyn # perform operation
fmul.d f2, f1, f13, rdn # perform operation
fmul.d f2, f1, f13, rmm # perform operation
fmul.d f2, f1, f13, rne # perform operation
fmul.d f2, f1, f13, rtz # perform operation
fmul.d f2, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fmul.d f13, f23, f26, dyn # perform operation
fmul.d f13, f23, f26, rdn # perform operation
fmul.d f13, f23, f26, rmm # perform operation
fmul.d f13, f23, f26, rne # perform operation
fmul.d f13, f23, f26, rtz # perform operation
fmul.d f13, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fmul.d f20, f10, f12, dyn # perform operation
fmul.d f20, f10, f12, rdn # perform operation
fmul.d f20, f10, f12, rmm # perform operation
fmul.d f20, f10, f12, rne # perform operation
fmul.d f20, f10, f12, rtz # perform operation
fmul.d f20, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fmul.d f8, f9, f6, dyn # perform operation
fmul.d f8, f9, f6, rdn # perform operation
fmul.d f8, f9, f6, rmm # perform operation
fmul.d f8, f9, f6, rne # perform operation
fmul.d f8, f9, f6, rtz # perform operation
fmul.d f8, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fmul.d f20, f16, f31, dyn # perform operation
fmul.d f20, f16, f31, rdn # perform operation
fmul.d f20, f16, f31, rmm # perform operation
fmul.d f20, f16, f31, rne # perform operation
fmul.d f20, f16, f31, rtz # perform operation
fmul.d f20, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fmul.d f15, f3, f21, dyn # perform operation
fmul.d f15, f3, f21, rdn # perform operation
fmul.d f15, f3, f21, rmm # perform operation
fmul.d f15, f3, f21, rne # perform operation
fmul.d f15, f3, f21, rtz # perform operation
fmul.d f15, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fmul.d f10, f5, f31, dyn # perform operation
fmul.d f10, f5, f31, rdn # perform operation
fmul.d f10, f5, f31, rmm # perform operation
fmul.d f10, f5, f31, rne # perform operation
fmul.d f10, f5, f31, rtz # perform operation
fmul.d f10, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmul.d f3, f14, f18, dyn # perform operation
fmul.d f3, f14, f18, rdn # perform operation
fmul.d f3, f14, f18, rmm # perform operation
fmul.d f3, f14, f18, rne # perform operation
fmul.d f3, f14, f18, rtz # perform operation
fmul.d f3, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fmul.d f2, f25, f14, dyn # perform operation
fmul.d f2, f25, f14, rdn # perform operation
fmul.d f2, f25, f14, rmm # perform operation
fmul.d f2, f25, f14, rne # perform operation
fmul.d f2, f25, f14, rtz # perform operation
fmul.d f2, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fmul.d f24, f31, f3, dyn # perform operation
fmul.d f24, f31, f3, rdn # perform operation
fmul.d f24, f31, f3, rmm # perform operation
fmul.d f24, f31, f3, rne # perform operation
fmul.d f24, f31, f3, rtz # perform operation
fmul.d f24, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fmul.d f26, f5, f10, dyn # perform operation
fmul.d f26, f5, f10, rdn # perform operation
fmul.d f26, f5, f10, rmm # perform operation
fmul.d f26, f5, f10, rne # perform operation
fmul.d f26, f5, f10, rtz # perform operation
fmul.d f26, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fmul.d f8, f7, f13, dyn # perform operation
fmul.d f8, f7, f13, rdn # perform operation
fmul.d f8, f7, f13, rmm # perform operation
fmul.d f8, f7, f13, rne # perform operation
fmul.d f8, f7, f13, rtz # perform operation
fmul.d f8, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fmul.d f11, f20, f25, dyn # perform operation
fmul.d f11, f20, f25, rdn # perform operation
fmul.d f11, f20, f25, rmm # perform operation
fmul.d f11, f20, f25, rne # perform operation
fmul.d f11, f20, f25, rtz # perform operation
fmul.d f11, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f20, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fmul.d f14, f13, f18, dyn # perform operation
fmul.d f14, f13, f18, rdn # perform operation
fmul.d f14, f13, f18, rmm # perform operation
fmul.d f14, f13, f18, rne # perform operation
fmul.d f14, f13, f18, rtz # perform operation
fmul.d f14, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
fmul.d f2, f3, f16, dyn # perform operation
fmul.d f2, f3, f16, rdn # perform operation
fmul.d f2, f3, f16, rmm # perform operation
fmul.d f2, f3, f16, rne # perform operation
fmul.d f2, f3, f16, rtz # perform operation
fmul.d f2, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000001 from memory into f23
fmul.d f16, f7, f23, dyn # perform operation
fmul.d f16, f7, f23, rdn # perform operation
fmul.d f16, f7, f23, rmm # perform operation
fmul.d f16, f7, f23, rne # perform operation
fmul.d f16, f7, f23, rtz # perform operation
fmul.d f16, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fmul.d f3, f25, f11, dyn # perform operation
fmul.d f3, f25, f11, rdn # perform operation
fmul.d f3, f25, f11, rmm # perform operation
fmul.d f3, f25, f11, rne # perform operation
fmul.d f3, f25, f11, rtz # perform operation
fmul.d f3, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fmul.d f24, f12, f19, dyn # perform operation
fmul.d f24, f12, f19, rdn # perform operation
fmul.d f24, f12, f19, rmm # perform operation
fmul.d f24, f12, f19, rne # perform operation
fmul.d f24, f12, f19, rtz # perform operation
fmul.d f24, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fmul.d f30, f20, f15, dyn # perform operation
fmul.d f30, f20, f15, rdn # perform operation
fmul.d f30, f20, f15, rmm # perform operation
fmul.d f30, f20, f15, rne # perform operation
fmul.d f30, f20, f15, rtz # perform operation
fmul.d f30, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fmul.d f11, f16, f22, dyn # perform operation
fmul.d f11, f16, f22, rdn # perform operation
fmul.d f11, f16, f22, rmm # perform operation
fmul.d f11, f16, f22, rne # perform operation
fmul.d f11, f16, f22, rtz # perform operation
fmul.d f11, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fmul.d f9, f19, f14, dyn # perform operation
fmul.d f9, f19, f14, rdn # perform operation
fmul.d f9, f19, f14, rmm # perform operation
fmul.d f9, f19, f14, rne # perform operation
fmul.d f9, f19, f14, rtz # perform operation
fmul.d f9, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fmul.d f18, f28, f20, dyn # perform operation
fmul.d f18, f28, f20, rdn # perform operation
fmul.d f18, f28, f20, rmm # perform operation
fmul.d f18, f28, f20, rne # perform operation
fmul.d f18, f28, f20, rtz # perform operation
fmul.d f18, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fmul.d f19, f21, f26, dyn # perform operation
fmul.d f19, f21, f26, rdn # perform operation
fmul.d f19, f21, f26, rmm # perform operation
fmul.d f19, f21, f26, rne # perform operation
fmul.d f19, f21, f26, rtz # perform operation
fmul.d f19, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fmul.d f13, f1, f8, dyn # perform operation
fmul.d f13, f1, f8, rdn # perform operation
fmul.d f13, f1, f8, rmm # perform operation
fmul.d f13, f1, f8, rne # perform operation
fmul.d f13, f1, f8, rtz # perform operation
fmul.d f13, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fmul.d f18, f9, f20, dyn # perform operation
fmul.d f18, f9, f20, rdn # perform operation
fmul.d f18, f9, f20, rmm # perform operation
fmul.d f18, f9, f20, rne # perform operation
fmul.d f18, f9, f20, rtz # perform operation
fmul.d f18, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fmul.d f6, f24, f16, dyn # perform operation
fmul.d f6, f24, f16, rdn # perform operation
fmul.d f6, f24, f16, rmm # perform operation
fmul.d f6, f24, f16, rne # perform operation
fmul.d f6, f24, f16, rtz # perform operation
fmul.d f6, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fmul.d f9, f28, f2, dyn # perform operation
fmul.d f9, f28, f2, rdn # perform operation
fmul.d f9, f28, f2, rmm # perform operation
fmul.d f9, f28, f2, rne # perform operation
fmul.d f9, f28, f2, rtz # perform operation
fmul.d f9, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fmul.d f25, f27, f31, dyn # perform operation
fmul.d f25, f27, f31, rdn # perform operation
fmul.d f25, f27, f31, rmm # perform operation
fmul.d f25, f27, f31, rne # perform operation
fmul.d f25, f27, f31, rtz # perform operation
fmul.d f25, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fmul.d f28, f8, f11, dyn # perform operation
fmul.d f28, f8, f11, rdn # perform operation
fmul.d f28, f8, f11, rmm # perform operation
fmul.d f28, f8, f11, rne # perform operation
fmul.d f28, f8, f11, rtz # perform operation
fmul.d f28, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fmul.d f30, f19, f17, dyn # perform operation
fmul.d f30, f19, f17, rdn # perform operation
fmul.d f30, f19, f17, rmm # perform operation
fmul.d f30, f19, f17, rne # perform operation
fmul.d f30, f19, f17, rtz # perform operation
fmul.d f30, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fmul.d f25, f23, f8, dyn # perform operation
fmul.d f25, f23, f8, rdn # perform operation
fmul.d f25, f23, f8, rmm # perform operation
fmul.d f25, f23, f8, rne # perform operation
fmul.d f25, f23, f8, rtz # perform operation
fmul.d f25, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fmul.d f13, f26, f9, dyn # perform operation
fmul.d f13, f26, f9, rdn # perform operation
fmul.d f13, f26, f9, rmm # perform operation
fmul.d f13, f26, f9, rne # perform operation
fmul.d f13, f26, f9, rtz # perform operation
fmul.d f13, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fmul.d f23, f1, f21, dyn # perform operation
fmul.d f23, f1, f21, rdn # perform operation
fmul.d f23, f1, f21, rmm # perform operation
fmul.d f23, f1, f21, rne # perform operation
fmul.d f23, f1, f21, rtz # perform operation
fmul.d f23, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fmul.d f23, f17, f31, dyn # perform operation
fmul.d f23, f17, f31, rdn # perform operation
fmul.d f23, f17, f31, rmm # perform operation
fmul.d f23, f17, f31, rne # perform operation
fmul.d f23, f17, f31, rtz # perform operation
fmul.d f23, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fmul.d f27, f5, f17, dyn # perform operation
fmul.d f27, f5, f17, rdn # perform operation
fmul.d f27, f5, f17, rmm # perform operation
fmul.d f27, f5, f17, rne # perform operation
fmul.d f27, f5, f17, rtz # perform operation
fmul.d f27, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fmul.d f25, f9, f8, dyn # perform operation
fmul.d f25, f9, f8, rdn # perform operation
fmul.d f25, f9, f8, rmm # perform operation
fmul.d f25, f9, f8, rne # perform operation
fmul.d f25, f9, f8, rtz # perform operation
fmul.d f25, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fmul.d f1, f29, f31, dyn # perform operation
fmul.d f1, f29, f31, rdn # perform operation
fmul.d f1, f29, f31, rmm # perform operation
fmul.d f1, f29, f31, rne # perform operation
fmul.d f1, f29, f31, rtz # perform operation
fmul.d f1, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fmul.d f23, f24, f9, dyn # perform operation
fmul.d f23, f24, f9, rdn # perform operation
fmul.d f23, f24, f9, rmm # perform operation
fmul.d f23, f24, f9, rne # perform operation
fmul.d f23, f24, f9, rtz # perform operation
fmul.d f23, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fmul.d f18, f22, f30, dyn # perform operation
fmul.d f18, f22, f30, rdn # perform operation
fmul.d f18, f22, f30, rmm # perform operation
fmul.d f18, f22, f30, rne # perform operation
fmul.d f18, f22, f30, rtz # perform operation
fmul.d f18, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fmul.d f28, f5, f16, dyn # perform operation
fmul.d f28, f5, f16, rdn # perform operation
fmul.d f28, f5, f16, rmm # perform operation
fmul.d f28, f5, f16, rne # perform operation
fmul.d f28, f5, f16, rtz # perform operation
fmul.d f28, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff8000000000000 from memory into f7
fmul.d f16, f5, f7, dyn # perform operation
fmul.d f16, f5, f7, rdn # perform operation
fmul.d f16, f5, f7, rmm # perform operation
fmul.d f16, f5, f7, rne # perform operation
fmul.d f16, f5, f7, rtz # perform operation
fmul.d f16, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f5, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fmul.d f26, f30, f1, dyn # perform operation
fmul.d f26, f30, f1, rdn # perform operation
fmul.d f26, f30, f1, rmm # perform operation
fmul.d f26, f30, f1, rne # perform operation
fmul.d f26, f30, f1, rtz # perform operation
fmul.d f26, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fmul.d f18, f28, f3, dyn # perform operation
fmul.d f18, f28, f3, rdn # perform operation
fmul.d f18, f28, f3, rmm # perform operation
fmul.d f18, f28, f3, rne # perform operation
fmul.d f18, f28, f3, rtz # perform operation
fmul.d f18, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000001 from memory into f25
fmul.d f21, f5, f25, dyn # perform operation
fmul.d f21, f5, f25, rdn # perform operation
fmul.d f21, f5, f25, rmm # perform operation
fmul.d f21, f5, f25, rne # perform operation
fmul.d f21, f5, f25, rtz # perform operation
fmul.d f21, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
fmul.d f22, f19, f23, dyn # perform operation
fmul.d f22, f19, f23, rdn # perform operation
fmul.d f22, f19, f23, rmm # perform operation
fmul.d f22, f19, f23, rne # perform operation
fmul.d f22, f19, f23, rtz # perform operation
fmul.d f22, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
fmul.d f14, f10, f11, dyn # perform operation
fmul.d f14, f10, f11, rdn # perform operation
fmul.d f14, f10, f11, rmm # perform operation
fmul.d f14, f10, f11, rne # perform operation
fmul.d f14, f10, f11, rtz # perform operation
fmul.d f14, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f10, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fmul.d f10, f12, f28, dyn # perform operation
fmul.d f10, f12, f28, rdn # perform operation
fmul.d f10, f12, f28, rmm # perform operation
fmul.d f10, f12, f28, rne # perform operation
fmul.d f10, f12, f28, rtz # perform operation
fmul.d f10, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fmul.d f16, f7, f21, dyn # perform operation
fmul.d f16, f7, f21, rdn # perform operation
fmul.d f16, f7, f21, rmm # perform operation
fmul.d f16, f7, f21, rne # perform operation
fmul.d f16, f7, f21, rtz # perform operation
fmul.d f16, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fmul.d f8, f29, f28, dyn # perform operation
fmul.d f8, f29, f28, rdn # perform operation
fmul.d f8, f29, f28, rmm # perform operation
fmul.d f8, f29, f28, rne # perform operation
fmul.d f8, f29, f28, rtz # perform operation
fmul.d f8, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fmul.d f7, f16, f17, dyn # perform operation
fmul.d f7, f16, f17, rdn # perform operation
fmul.d f7, f16, f17, rmm # perform operation
fmul.d f7, f16, f17, rne # perform operation
fmul.d f7, f16, f17, rtz # perform operation
fmul.d f7, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fmul.d f20, f3, f2, dyn # perform operation
fmul.d f20, f3, f2, rdn # perform operation
fmul.d f20, f3, f2, rmm # perform operation
fmul.d f20, f3, f2, rne # perform operation
fmul.d f20, f3, f2, rtz # perform operation
fmul.d f20, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fmul.d f14, f20, f30, dyn # perform operation
fmul.d f14, f20, f30, rdn # perform operation
fmul.d f14, f20, f30, rmm # perform operation
fmul.d f14, f20, f30, rne # perform operation
fmul.d f14, f20, f30, rtz # perform operation
fmul.d f14, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fmul.d f2, f31, f8, dyn # perform operation
fmul.d f2, f31, f8, rdn # perform operation
fmul.d f2, f31, f8, rmm # perform operation
fmul.d f2, f31, f8, rne # perform operation
fmul.d f2, f31, f8, rtz # perform operation
fmul.d f2, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
fmul.d f26, f11, f12, dyn # perform operation
fmul.d f26, f11, f12, rdn # perform operation
fmul.d f26, f11, f12, rmm # perform operation
fmul.d f26, f11, f12, rne # perform operation
fmul.d f26, f11, f12, rtz # perform operation
fmul.d f26, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fmul.d f3, f21, f24, dyn # perform operation
fmul.d f3, f21, f24, rdn # perform operation
fmul.d f3, f21, f24, rmm # perform operation
fmul.d f3, f21, f24, rne # perform operation
fmul.d f3, f21, f24, rtz # perform operation
fmul.d f3, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fmul.d f16, f25, f15, dyn # perform operation
fmul.d f16, f25, f15, rdn # perform operation
fmul.d f16, f25, f15, rmm # perform operation
fmul.d f16, f25, f15, rne # perform operation
fmul.d f16, f25, f15, rtz # perform operation
fmul.d f16, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fmul.d f22, f7, f2, dyn # perform operation
fmul.d f22, f7, f2, rdn # perform operation
fmul.d f22, f7, f2, rmm # perform operation
fmul.d f22, f7, f2, rne # perform operation
fmul.d f22, f7, f2, rtz # perform operation
fmul.d f22, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fmul.d f16, f18, f30, dyn # perform operation
fmul.d f16, f18, f30, rdn # perform operation
fmul.d f16, f18, f30, rmm # perform operation
fmul.d f16, f18, f30, rne # perform operation
fmul.d f16, f18, f30, rtz # perform operation
fmul.d f16, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fmul.d f15, f11, f7, dyn # perform operation
fmul.d f15, f11, f7, rdn # perform operation
fmul.d f15, f11, f7, rmm # perform operation
fmul.d f15, f11, f7, rne # perform operation
fmul.d f15, f11, f7, rtz # perform operation
fmul.d f15, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fmul.d f10, f19, f13, dyn # perform operation
fmul.d f10, f19, f13, rdn # perform operation
fmul.d f10, f19, f13, rmm # perform operation
fmul.d f10, f19, f13, rne # perform operation
fmul.d f10, f19, f13, rtz # perform operation
fmul.d f10, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fmul.d f24, f5, f30, dyn # perform operation
fmul.d f24, f5, f30, rdn # perform operation
fmul.d f24, f5, f30, rmm # perform operation
fmul.d f24, f5, f30, rne # perform operation
fmul.d f24, f5, f30, rtz # perform operation
fmul.d f24, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fmul.d f17, f12, f10, dyn # perform operation
fmul.d f17, f12, f10, rdn # perform operation
fmul.d f17, f12, f10, rmm # perform operation
fmul.d f17, f12, f10, rne # perform operation
fmul.d f17, f12, f10, rtz # perform operation
fmul.d f17, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fmul.d f30, f29, f23, dyn # perform operation
fmul.d f30, f29, f23, rdn # perform operation
fmul.d f30, f29, f23, rmm # perform operation
fmul.d f30, f29, f23, rne # perform operation
fmul.d f30, f29, f23, rtz # perform operation
fmul.d f30, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f29, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fmul.d f27, f5, f22, dyn # perform operation
fmul.d f27, f5, f22, rdn # perform operation
fmul.d f27, f5, f22, rmm # perform operation
fmul.d f27, f5, f22, rne # perform operation
fmul.d f27, f5, f22, rtz # perform operation
fmul.d f27, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fmul.d f13, f10, f16, dyn # perform operation
fmul.d f13, f10, f16, rdn # perform operation
fmul.d f13, f10, f16, rmm # perform operation
fmul.d f13, f10, f16, rne # perform operation
fmul.d f13, f10, f16, rtz # perform operation
fmul.d f13, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fmul.d f27, f3, f25, dyn # perform operation
fmul.d f27, f3, f25, rdn # perform operation
fmul.d f27, f3, f25, rmm # perform operation
fmul.d f27, f3, f25, rne # perform operation
fmul.d f27, f3, f25, rtz # perform operation
fmul.d f27, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fmul.d f17, f11, f5, dyn # perform operation
fmul.d f17, f11, f5, rdn # perform operation
fmul.d f17, f11, f5, rmm # perform operation
fmul.d f17, f11, f5, rne # perform operation
fmul.d f17, f11, f5, rtz # perform operation
fmul.d f17, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fmul.d f2, f28, f23, dyn # perform operation
fmul.d f2, f28, f23, rdn # perform operation
fmul.d f2, f28, f23, rmm # perform operation
fmul.d f2, f28, f23, rne # perform operation
fmul.d f2, f28, f23, rtz # perform operation
fmul.d f2, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff8000000000000 from memory into f13
fmul.d f19, f29, f13, dyn # perform operation
fmul.d f19, f29, f13, rdn # perform operation
fmul.d f19, f29, f13, rmm # perform operation
fmul.d f19, f29, f13, rne # perform operation
fmul.d f19, f29, f13, rtz # perform operation
fmul.d f19, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fmul.d f26, f20, f28, dyn # perform operation
fmul.d f26, f20, f28, rdn # perform operation
fmul.d f26, f20, f28, rmm # perform operation
fmul.d f26, f20, f28, rne # perform operation
fmul.d f26, f20, f28, rtz # perform operation
fmul.d f26, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fmul.d f8, f31, f10, dyn # perform operation
fmul.d f8, f31, f10, rdn # perform operation
fmul.d f8, f31, f10, rmm # perform operation
fmul.d f8, f31, f10, rne # perform operation
fmul.d f8, f31, f10, rtz # perform operation
fmul.d f8, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000001 from memory into f25
fmul.d f27, f26, f25, dyn # perform operation
fmul.d f27, f26, f25, rdn # perform operation
fmul.d f27, f26, f25, rmm # perform operation
fmul.d f27, f26, f25, rne # perform operation
fmul.d f27, f26, f25, rtz # perform operation
fmul.d f27, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f26, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fmul.d f19, f31, f17, dyn # perform operation
fmul.d f19, f31, f17, rdn # perform operation
fmul.d f19, f31, f17, rmm # perform operation
fmul.d f19, f31, f17, rne # perform operation
fmul.d f19, f31, f17, rtz # perform operation
fmul.d f19, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fmul.d f17, f5, f10, dyn # perform operation
fmul.d f17, f5, f10, rdn # perform operation
fmul.d f17, f5, f10, rmm # perform operation
fmul.d f17, f5, f10, rne # perform operation
fmul.d f17, f5, f10, rtz # perform operation
fmul.d f17, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fmul.d f16, f20, f8, dyn # perform operation
fmul.d f16, f20, f8, rdn # perform operation
fmul.d f16, f20, f8, rmm # perform operation
fmul.d f16, f20, f8, rne # perform operation
fmul.d f16, f20, f8, rtz # perform operation
fmul.d f16, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fmul.d f7, f27, f9, dyn # perform operation
fmul.d f7, f27, f9, rdn # perform operation
fmul.d f7, f27, f9, rmm # perform operation
fmul.d f7, f27, f9, rne # perform operation
fmul.d f7, f27, f9, rtz # perform operation
fmul.d f7, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fmul.d f6, f25, f15, dyn # perform operation
fmul.d f6, f25, f15, rdn # perform operation
fmul.d f6, f25, f15, rmm # perform operation
fmul.d f6, f25, f15, rne # perform operation
fmul.d f6, f25, f15, rtz # perform operation
fmul.d f6, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
fmul.d f30, f7, f14, dyn # perform operation
fmul.d f30, f7, f14, rdn # perform operation
fmul.d f30, f7, f14, rmm # perform operation
fmul.d f30, f7, f14, rne # perform operation
fmul.d f30, f7, f14, rtz # perform operation
fmul.d f30, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fmul.d f10, f31, f30, dyn # perform operation
fmul.d f10, f31, f30, rdn # perform operation
fmul.d f10, f31, f30, rmm # perform operation
fmul.d f10, f31, f30, rne # perform operation
fmul.d f10, f31, f30, rtz # perform operation
fmul.d f10, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fmul.d f20, f23, f8, dyn # perform operation
fmul.d f20, f23, f8, rdn # perform operation
fmul.d f20, f23, f8, rmm # perform operation
fmul.d f20, f23, f8, rne # perform operation
fmul.d f20, f23, f8, rtz # perform operation
fmul.d f20, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fmul.d f6, f7, f28, dyn # perform operation
fmul.d f6, f7, f28, rdn # perform operation
fmul.d f6, f7, f28, rmm # perform operation
fmul.d f6, f7, f28, rne # perform operation
fmul.d f6, f7, f28, rtz # perform operation
fmul.d f6, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fmul.d f19, f14, f20, dyn # perform operation
fmul.d f19, f14, f20, rdn # perform operation
fmul.d f19, f14, f20, rmm # perform operation
fmul.d f19, f14, f20, rne # perform operation
fmul.d f19, f14, f20, rtz # perform operation
fmul.d f19, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
fmul.d f14, f21, f30, dyn # perform operation
fmul.d f14, f21, f30, rdn # perform operation
fmul.d f14, f21, f30, rmm # perform operation
fmul.d f14, f21, f30, rne # perform operation
fmul.d f14, f21, f30, rtz # perform operation
fmul.d f14, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fmul.d f1, f21, f29, dyn # perform operation
fmul.d f1, f21, f29, rdn # perform operation
fmul.d f1, f21, f29, rmm # perform operation
fmul.d f1, f21, f29, rne # perform operation
fmul.d f1, f21, f29, rtz # perform operation
fmul.d f1, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fmul.d f24, f14, f26, dyn # perform operation
fmul.d f24, f14, f26, rdn # perform operation
fmul.d f24, f14, f26, rmm # perform operation
fmul.d f24, f14, f26, rne # perform operation
fmul.d f24, f14, f26, rtz # perform operation
fmul.d f24, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f14, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fmul.d f20, f10, f6, dyn # perform operation
fmul.d f20, f10, f6, rdn # perform operation
fmul.d f20, f10, f6, rmm # perform operation
fmul.d f20, f10, f6, rne # perform operation
fmul.d f20, f10, f6, rtz # perform operation
fmul.d f20, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fmul.d f18, f6, f8, dyn # perform operation
fmul.d f18, f6, f8, rdn # perform operation
fmul.d f18, f6, f8, rmm # perform operation
fmul.d f18, f6, f8, rne # perform operation
fmul.d f18, f6, f8, rtz # perform operation
fmul.d f18, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fmul.d f27, f30, f7, dyn # perform operation
fmul.d f27, f30, f7, rdn # perform operation
fmul.d f27, f30, f7, rmm # perform operation
fmul.d f27, f30, f7, rne # perform operation
fmul.d f27, f30, f7, rtz # perform operation
fmul.d f27, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fmul.d f11, f20, f24, dyn # perform operation
fmul.d f11, f20, f24, rdn # perform operation
fmul.d f11, f20, f24, rmm # perform operation
fmul.d f11, f20, f24, rne # perform operation
fmul.d f11, f20, f24, rtz # perform operation
fmul.d f11, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fmul.d f30, f6, f11, dyn # perform operation
fmul.d f30, f6, f11, rdn # perform operation
fmul.d f30, f6, f11, rmm # perform operation
fmul.d f30, f6, f11, rne # perform operation
fmul.d f30, f6, f11, rtz # perform operation
fmul.d f30, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fmul.d f31, f27, f22, dyn # perform operation
fmul.d f31, f27, f22, rdn # perform operation
fmul.d f31, f27, f22, rmm # perform operation
fmul.d f31, f27, f22, rne # perform operation
fmul.d f31, f27, f22, rtz # perform operation
fmul.d f31, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fmul.d f2, f27, f28, dyn # perform operation
fmul.d f2, f27, f28, rdn # perform operation
fmul.d f2, f27, f28, rmm # perform operation
fmul.d f2, f27, f28, rne # perform operation
fmul.d f2, f27, f28, rtz # perform operation
fmul.d f2, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f27, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fmul.d f16, f13, f1, dyn # perform operation
fmul.d f16, f13, f1, rdn # perform operation
fmul.d f16, f13, f1, rmm # perform operation
fmul.d f16, f13, f1, rne # perform operation
fmul.d f16, f13, f1, rtz # perform operation
fmul.d f16, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fmul.d f2, f12, f3, dyn # perform operation
fmul.d f2, f12, f3, rdn # perform operation
fmul.d f2, f12, f3, rmm # perform operation
fmul.d f2, f12, f3, rne # perform operation
fmul.d f2, f12, f3, rtz # perform operation
fmul.d f2, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fmul.d f15, f30, f14, dyn # perform operation
fmul.d f15, f30, f14, rdn # perform operation
fmul.d f15, f30, f14, rmm # perform operation
fmul.d f15, f30, f14, rne # perform operation
fmul.d f15, f30, f14, rtz # perform operation
fmul.d f15, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
fmul.d f30, f28, f21, dyn # perform operation
fmul.d f30, f28, f21, rdn # perform operation
fmul.d f30, f28, f21, rmm # perform operation
fmul.d f30, f28, f21, rne # perform operation
fmul.d f30, f28, f21, rtz # perform operation
fmul.d f30, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f28, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
fmul.d f21, f7, f15, dyn # perform operation
fmul.d f21, f7, f15, rdn # perform operation
fmul.d f21, f7, f15, rmm # perform operation
fmul.d f21, f7, f15, rne # perform operation
fmul.d f21, f7, f15, rtz # perform operation
fmul.d f21, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fmul.d f22, f8, f6, dyn # perform operation
fmul.d f22, f8, f6, rdn # perform operation
fmul.d f22, f8, f6, rmm # perform operation
fmul.d f22, f8, f6, rne # perform operation
fmul.d f22, f8, f6, rtz # perform operation
fmul.d f22, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f8, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fmul.d f16, f26, f5, dyn # perform operation
fmul.d f16, f26, f5, rdn # perform operation
fmul.d f16, f26, f5, rmm # perform operation
fmul.d f16, f26, f5, rne # perform operation
fmul.d f16, f26, f5, rtz # perform operation
fmul.d f16, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000001 from memory into f18
fmul.d f16, f5, f18, dyn # perform operation
fmul.d f16, f5, f18, rdn # perform operation
fmul.d f16, f5, f18, rmm # perform operation
fmul.d f16, f5, f18, rne # perform operation
fmul.d f16, f5, f18, rtz # perform operation
fmul.d f16, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fmul.d f5, f21, f8, dyn # perform operation
fmul.d f5, f21, f8, rdn # perform operation
fmul.d f5, f21, f8, rmm # perform operation
fmul.d f5, f21, f8, rne # perform operation
fmul.d f5, f21, f8, rtz # perform operation
fmul.d f5, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fmul.d f5, f11, f28, dyn # perform operation
fmul.d f5, f11, f28, rdn # perform operation
fmul.d f5, f11, f28, rmm # perform operation
fmul.d f5, f11, f28, rne # perform operation
fmul.d f5, f11, f28, rtz # perform operation
fmul.d f5, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fmul.d f10, f14, f28, dyn # perform operation
fmul.d f10, f14, f28, rdn # perform operation
fmul.d f10, f14, f28, rmm # perform operation
fmul.d f10, f14, f28, rne # perform operation
fmul.d f10, f14, f28, rtz # perform operation
fmul.d f10, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fmul.d f31, f19, f9, dyn # perform operation
fmul.d f31, f19, f9, rdn # perform operation
fmul.d f31, f19, f9, rmm # perform operation
fmul.d f31, f19, f9, rne # perform operation
fmul.d f31, f19, f9, rtz # perform operation
fmul.d f31, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fmul.d f20, f6, f17, dyn # perform operation
fmul.d f20, f6, f17, rdn # perform operation
fmul.d f20, f6, f17, rmm # perform operation
fmul.d f20, f6, f17, rne # perform operation
fmul.d f20, f6, f17, rtz # perform operation
fmul.d f20, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fmul.d f12, f2, f21, dyn # perform operation
fmul.d f12, f2, f21, rdn # perform operation
fmul.d f12, f2, f21, rmm # perform operation
fmul.d f12, f2, f21, rne # perform operation
fmul.d f12, f2, f21, rtz # perform operation
fmul.d f12, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f2, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fmul.d f26, f21, f8, dyn # perform operation
fmul.d f26, f21, f8, rdn # perform operation
fmul.d f26, f21, f8, rmm # perform operation
fmul.d f26, f21, f8, rne # perform operation
fmul.d f26, f21, f8, rtz # perform operation
fmul.d f26, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fmul.d f26, f24, f27, dyn # perform operation
fmul.d f26, f24, f27, rdn # perform operation
fmul.d f26, f24, f27, rmm # perform operation
fmul.d f26, f24, f27, rne # perform operation
fmul.d f26, f24, f27, rtz # perform operation
fmul.d f26, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fmul.d f28, f19, f26, dyn # perform operation
fmul.d f28, f19, f26, rdn # perform operation
fmul.d f28, f19, f26, rmm # perform operation
fmul.d f28, f19, f26, rne # perform operation
fmul.d f28, f19, f26, rtz # perform operation
fmul.d f28, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fmul.d f3, f11, f6, dyn # perform operation
fmul.d f3, f11, f6, rdn # perform operation
fmul.d f3, f11, f6, rmm # perform operation
fmul.d f3, f11, f6, rne # perform operation
fmul.d f3, f11, f6, rtz # perform operation
fmul.d f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fmul.d f7, f28, f20, dyn # perform operation
fmul.d f7, f28, f20, rdn # perform operation
fmul.d f7, f28, f20, rmm # perform operation
fmul.d f7, f28, f20, rne # perform operation
fmul.d f7, f28, f20, rtz # perform operation
fmul.d f7, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fmul.d f28, f13, f10, dyn # perform operation
fmul.d f28, f13, f10, rdn # perform operation
fmul.d f28, f13, f10, rmm # perform operation
fmul.d f28, f13, f10, rne # perform operation
fmul.d f28, f13, f10, rtz # perform operation
fmul.d f28, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fmul.d f23, f11, f12, dyn # perform operation
fmul.d f23, f11, f12, rdn # perform operation
fmul.d f23, f11, f12, rmm # perform operation
fmul.d f23, f11, f12, rne # perform operation
fmul.d f23, f11, f12, rtz # perform operation
fmul.d f23, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fmul.d f2, f19, f18, dyn # perform operation
fmul.d f2, f19, f18, rdn # perform operation
fmul.d f2, f19, f18, rmm # perform operation
fmul.d f2, f19, f18, rne # perform operation
fmul.d f2, f19, f18, rtz # perform operation
fmul.d f2, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fmul.d f18, f15, f29, dyn # perform operation
fmul.d f18, f15, f29, rdn # perform operation
fmul.d f18, f15, f29, rmm # perform operation
fmul.d f18, f15, f29, rne # perform operation
fmul.d f18, f15, f29, rtz # perform operation
fmul.d f18, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fmul.d f22, f30, f24, dyn # perform operation
fmul.d f22, f30, f24, rdn # perform operation
fmul.d f22, f30, f24, rmm # perform operation
fmul.d f22, f30, f24, rne # perform operation
fmul.d f22, f30, f24, rtz # perform operation
fmul.d f22, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fmul.d f3, f23, f13, dyn # perform operation
fmul.d f3, f23, f13, rdn # perform operation
fmul.d f3, f23, f13, rmm # perform operation
fmul.d f3, f23, f13, rne # perform operation
fmul.d f3, f23, f13, rtz # perform operation
fmul.d f3, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fmul.d f15, f19, f23, dyn # perform operation
fmul.d f15, f19, f23, rdn # perform operation
fmul.d f15, f19, f23, rmm # perform operation
fmul.d f15, f19, f23, rne # perform operation
fmul.d f15, f19, f23, rtz # perform operation
fmul.d f15, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
fmul.d f11, f26, f29, dyn # perform operation
fmul.d f11, f26, f29, rdn # perform operation
fmul.d f11, f26, f29, rmm # perform operation
fmul.d f11, f26, f29, rne # perform operation
fmul.d f11, f26, f29, rtz # perform operation
fmul.d f11, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fmul.d f9, f3, f31, dyn # perform operation
fmul.d f9, f3, f31, rdn # perform operation
fmul.d f9, f3, f31, rmm # perform operation
fmul.d f9, f3, f31, rne # perform operation
fmul.d f9, f3, f31, rtz # perform operation
fmul.d f9, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fmul.d f19, f29, f10, dyn # perform operation
fmul.d f19, f29, f10, rdn # perform operation
fmul.d f19, f29, f10, rmm # perform operation
fmul.d f19, f29, f10, rne # perform operation
fmul.d f19, f29, f10, rtz # perform operation
fmul.d f19, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fmul.d f18, f16, f30, dyn # perform operation
fmul.d f18, f16, f30, rdn # perform operation
fmul.d f18, f16, f30, rmm # perform operation
fmul.d f18, f16, f30, rne # perform operation
fmul.d f18, f16, f30, rtz # perform operation
fmul.d f18, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fmul.d f30, f17, f13, dyn # perform operation
fmul.d f30, f17, f13, rdn # perform operation
fmul.d f30, f17, f13, rmm # perform operation
fmul.d f30, f17, f13, rne # perform operation
fmul.d f30, f17, f13, rtz # perform operation
fmul.d f30, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fmul.d f21, f16, f29, dyn # perform operation
fmul.d f21, f16, f29, rdn # perform operation
fmul.d f21, f16, f29, rmm # perform operation
fmul.d f21, f16, f29, rne # perform operation
fmul.d f21, f16, f29, rtz # perform operation
fmul.d f21, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff8000000000000 from memory into f16
fmul.d f19, f3, f16, dyn # perform operation
fmul.d f19, f3, f16, rdn # perform operation
fmul.d f19, f3, f16, rmm # perform operation
fmul.d f19, f3, f16, rne # perform operation
fmul.d f19, f3, f16, rtz # perform operation
fmul.d f19, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fmul.d f27, f11, f3, dyn # perform operation
fmul.d f27, f11, f3, rdn # perform operation
fmul.d f27, f11, f3, rmm # perform operation
fmul.d f27, f11, f3, rne # perform operation
fmul.d f27, f11, f3, rtz # perform operation
fmul.d f27, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fmul.d f31, f7, f17, dyn # perform operation
fmul.d f31, f7, f17, rdn # perform operation
fmul.d f31, f7, f17, rmm # perform operation
fmul.d f31, f7, f17, rne # perform operation
fmul.d f31, f7, f17, rtz # perform operation
fmul.d f31, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
fmul.d f19, f26, f8, dyn # perform operation
fmul.d f19, f26, f8, rdn # perform operation
fmul.d f19, f26, f8, rmm # perform operation
fmul.d f19, f26, f8, rne # perform operation
fmul.d f19, f26, f8, rtz # perform operation
fmul.d f19, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fmul.d f11, f28, f25, dyn # perform operation
fmul.d f11, f28, f25, rdn # perform operation
fmul.d f11, f28, f25, rmm # perform operation
fmul.d f11, f28, f25, rne # perform operation
fmul.d f11, f28, f25, rtz # perform operation
fmul.d f11, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fmul.d f17, f9, f15, dyn # perform operation
fmul.d f17, f9, f15, rdn # perform operation
fmul.d f17, f9, f15, rmm # perform operation
fmul.d f17, f9, f15, rne # perform operation
fmul.d f17, f9, f15, rtz # perform operation
fmul.d f17, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
fmul.d f29, f24, f22, dyn # perform operation
fmul.d f29, f24, f22, rdn # perform operation
fmul.d f29, f24, f22, rmm # perform operation
fmul.d f29, f24, f22, rne # perform operation
fmul.d f29, f24, f22, rtz # perform operation
fmul.d f29, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fmul.d f19, f14, f10, dyn # perform operation
fmul.d f19, f14, f10, rdn # perform operation
fmul.d f19, f14, f10, rmm # perform operation
fmul.d f19, f14, f10, rne # perform operation
fmul.d f19, f14, f10, rtz # perform operation
fmul.d f19, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fmul.d f21, f23, f3, dyn # perform operation
fmul.d f21, f23, f3, rdn # perform operation
fmul.d f21, f23, f3, rmm # perform operation
fmul.d f21, f23, f3, rne # perform operation
fmul.d f21, f23, f3, rtz # perform operation
fmul.d f21, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fmul.d f15, f23, f22, dyn # perform operation
fmul.d f15, f23, f22, rdn # perform operation
fmul.d f15, f23, f22, rmm # perform operation
fmul.d f15, f23, f22, rne # perform operation
fmul.d f15, f23, f22, rtz # perform operation
fmul.d f15, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fmul.d f20, f16, f12, dyn # perform operation
fmul.d f20, f16, f12, rdn # perform operation
fmul.d f20, f16, f12, rmm # perform operation
fmul.d f20, f16, f12, rne # perform operation
fmul.d f20, f16, f12, rtz # perform operation
fmul.d f20, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fmul.d f27, f3, f1, dyn # perform operation
fmul.d f27, f3, f1, rdn # perform operation
fmul.d f27, f3, f1, rmm # perform operation
fmul.d f27, f3, f1, rne # perform operation
fmul.d f27, f3, f1, rtz # perform operation
fmul.d f27, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fmul.d f17, f19, f25, dyn # perform operation
fmul.d f17, f19, f25, rdn # perform operation
fmul.d f17, f19, f25, rmm # perform operation
fmul.d f17, f19, f25, rne # perform operation
fmul.d f17, f19, f25, rtz # perform operation
fmul.d f17, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fmul.d f23, f14, f28, dyn # perform operation
fmul.d f23, f14, f28, rdn # perform operation
fmul.d f23, f14, f28, rmm # perform operation
fmul.d f23, f14, f28, rne # perform operation
fmul.d f23, f14, f28, rtz # perform operation
fmul.d f23, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fmul.d f19, f26, f11, dyn # perform operation
fmul.d f19, f26, f11, rdn # perform operation
fmul.d f19, f26, f11, rmm # perform operation
fmul.d f19, f26, f11, rne # perform operation
fmul.d f19, f26, f11, rtz # perform operation
fmul.d f19, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
fmul.d f27, f6, f17, dyn # perform operation
fmul.d f27, f6, f17, rdn # perform operation
fmul.d f27, f6, f17, rmm # perform operation
fmul.d f27, f6, f17, rne # perform operation
fmul.d f27, f6, f17, rtz # perform operation
fmul.d f27, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fmul.d f3, f11, f23, dyn # perform operation
fmul.d f3, f11, f23, rdn # perform operation
fmul.d f3, f11, f23, rmm # perform operation
fmul.d f3, f11, f23, rne # perform operation
fmul.d f3, f11, f23, rtz # perform operation
fmul.d f3, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fmul.d f16, f29, f24, dyn # perform operation
fmul.d f16, f29, f24, rdn # perform operation
fmul.d f16, f29, f24, rmm # perform operation
fmul.d f16, f29, f24, rne # perform operation
fmul.d f16, f29, f24, rtz # perform operation
fmul.d f16, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
fmul.d f3, f10, f2, dyn # perform operation
fmul.d f3, f10, f2, rdn # perform operation
fmul.d f3, f10, f2, rmm # perform operation
fmul.d f3, f10, f2, rne # perform operation
fmul.d f3, f10, f2, rtz # perform operation
fmul.d f3, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
fmul.d f31, f27, f26, dyn # perform operation
fmul.d f31, f27, f26, rdn # perform operation
fmul.d f31, f27, f26, rmm # perform operation
fmul.d f31, f27, f26, rne # perform operation
fmul.d f31, f27, f26, rtz # perform operation
fmul.d f31, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fmul.d f24, f3, f11, dyn # perform operation
fmul.d f24, f3, f11, rdn # perform operation
fmul.d f24, f3, f11, rmm # perform operation
fmul.d f24, f3, f11, rne # perform operation
fmul.d f24, f3, f11, rtz # perform operation
fmul.d f24, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fmul.d f18, f30, f31, dyn # perform operation
fmul.d f18, f30, f31, rdn # perform operation
fmul.d f18, f30, f31, rmm # perform operation
fmul.d f18, f30, f31, rne # perform operation
fmul.d f18, f30, f31, rtz # perform operation
fmul.d f18, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fmul.d f24, f12, f20, dyn # perform operation
fmul.d f24, f12, f20, rdn # perform operation
fmul.d f24, f12, f20, rmm # perform operation
fmul.d f24, f12, f20, rne # perform operation
fmul.d f24, f12, f20, rtz # perform operation
fmul.d f24, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f12, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fmul.d f9, f3, f16, dyn # perform operation
fmul.d f9, f3, f16, rdn # perform operation
fmul.d f9, f3, f16, rmm # perform operation
fmul.d f9, f3, f16, rne # perform operation
fmul.d f9, f3, f16, rtz # perform operation
fmul.d f9, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fmul.d f31, f25, f10, dyn # perform operation
fmul.d f31, f25, f10, rdn # perform operation
fmul.d f31, f25, f10, rmm # perform operation
fmul.d f31, f25, f10, rne # perform operation
fmul.d f31, f25, f10, rtz # perform operation
fmul.d f31, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fmul.d f22, f30, f17, dyn # perform operation
fmul.d f22, f30, f17, rdn # perform operation
fmul.d f22, f30, f17, rmm # perform operation
fmul.d f22, f30, f17, rne # perform operation
fmul.d f22, f30, f17, rtz # perform operation
fmul.d f22, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fmul.d f27, f16, f20, dyn # perform operation
fmul.d f27, f16, f20, rdn # perform operation
fmul.d f27, f16, f20, rmm # perform operation
fmul.d f27, f16, f20, rne # perform operation
fmul.d f27, f16, f20, rtz # perform operation
fmul.d f27, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fmul.d f27, f21, f28, dyn # perform operation
fmul.d f27, f21, f28, rdn # perform operation
fmul.d f27, f21, f28, rmm # perform operation
fmul.d f27, f21, f28, rne # perform operation
fmul.d f27, f21, f28, rtz # perform operation
fmul.d f27, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
fmul.d f11, f6, f3, dyn # perform operation
fmul.d f11, f6, f3, rdn # perform operation
fmul.d f11, f6, f3, rmm # perform operation
fmul.d f11, f6, f3, rne # perform operation
fmul.d f11, f6, f3, rtz # perform operation
fmul.d f11, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
fmul.d f17, f23, f24, dyn # perform operation
fmul.d f17, f23, f24, rdn # perform operation
fmul.d f17, f23, f24, rmm # perform operation
fmul.d f17, f23, f24, rne # perform operation
fmul.d f17, f23, f24, rtz # perform operation
fmul.d f17, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fmul.d f24, f29, f2, dyn # perform operation
fmul.d f24, f29, f2, rdn # perform operation
fmul.d f24, f29, f2, rmm # perform operation
fmul.d f24, f29, f2, rne # perform operation
fmul.d f24, f29, f2, rtz # perform operation
fmul.d f24, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
fmul.d f27, f23, f30, dyn # perform operation
fmul.d f27, f23, f30, rdn # perform operation
fmul.d f27, f23, f30, rmm # perform operation
fmul.d f27, f23, f30, rne # perform operation
fmul.d f27, f23, f30, rtz # perform operation
fmul.d f27, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
fmul.d f20, f11, f5, dyn # perform operation
fmul.d f20, f11, f5, rdn # perform operation
fmul.d f20, f11, f5, rmm # perform operation
fmul.d f20, f11, f5, rne # perform operation
fmul.d f20, f11, f5, rtz # perform operation
fmul.d f20, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fmul.d f7, f22, f16, dyn # perform operation
fmul.d f7, f22, f16, rdn # perform operation
fmul.d f7, f22, f16, rmm # perform operation
fmul.d f7, f22, f16, rne # perform operation
fmul.d f7, f22, f16, rtz # perform operation
fmul.d f7, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fmul.d f20, f6, f12, dyn # perform operation
fmul.d f20, f6, f12, rdn # perform operation
fmul.d f20, f6, f12, rmm # perform operation
fmul.d f20, f6, f12, rne # perform operation
fmul.d f20, f6, f12, rtz # perform operation
fmul.d f20, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fmul.d f11, f3, f22, dyn # perform operation
fmul.d f11, f3, f22, rdn # perform operation
fmul.d f11, f3, f22, rmm # perform operation
fmul.d f11, f3, f22, rne # perform operation
fmul.d f11, f3, f22, rtz # perform operation
fmul.d f11, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fmul.d f23, f6, f18, dyn # perform operation
fmul.d f23, f6, f18, rdn # perform operation
fmul.d f23, f6, f18, rmm # perform operation
fmul.d f23, f6, f18, rne # perform operation
fmul.d f23, f6, f18, rtz # perform operation
fmul.d f23, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fmul.d f1, f29, f17, dyn # perform operation
fmul.d f1, f29, f17, rdn # perform operation
fmul.d f1, f29, f17, rmm # perform operation
fmul.d f1, f29, f17, rne # perform operation
fmul.d f1, f29, f17, rtz # perform operation
fmul.d f1, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fmul.d f8, f2, f24, dyn # perform operation
fmul.d f8, f2, f24, rdn # perform operation
fmul.d f8, f2, f24, rmm # perform operation
fmul.d f8, f2, f24, rne # perform operation
fmul.d f8, f2, f24, rtz # perform operation
fmul.d f8, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fmul.d f16, f7, f13, dyn # perform operation
fmul.d f16, f7, f13, rdn # perform operation
fmul.d f16, f7, f13, rmm # perform operation
fmul.d f16, f7, f13, rne # perform operation
fmul.d f16, f7, f13, rtz # perform operation
fmul.d f16, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fmul.d f16, f14, f31, dyn # perform operation
fmul.d f16, f14, f31, rdn # perform operation
fmul.d f16, f14, f31, rmm # perform operation
fmul.d f16, f14, f31, rne # perform operation
fmul.d f16, f14, f31, rtz # perform operation
fmul.d f16, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fmul.d f26, f11, f5, dyn # perform operation
fmul.d f26, f11, f5, rdn # perform operation
fmul.d f26, f11, f5, rmm # perform operation
fmul.d f26, f11, f5, rne # perform operation
fmul.d f26, f11, f5, rtz # perform operation
fmul.d f26, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
fmul.d f7, f2, f13, dyn # perform operation
fmul.d f7, f2, f13, rdn # perform operation
fmul.d f7, f2, f13, rmm # perform operation
fmul.d f7, f2, f13, rne # perform operation
fmul.d f7, f2, f13, rtz # perform operation
fmul.d f7, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
fmul.d f23, f21, f11, dyn # perform operation
fmul.d f23, f21, f11, rdn # perform operation
fmul.d f23, f21, f11, rmm # perform operation
fmul.d f23, f21, f11, rne # perform operation
fmul.d f23, f21, f11, rtz # perform operation
fmul.d f23, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fmul.d f12, f5, f10, dyn # perform operation
fmul.d f12, f5, f10, rdn # perform operation
fmul.d f12, f5, f10, rmm # perform operation
fmul.d f12, f5, f10, rne # perform operation
fmul.d f12, f5, f10, rtz # perform operation
fmul.d f12, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fmul.d f29, f17, f6, dyn # perform operation
fmul.d f29, f17, f6, rdn # perform operation
fmul.d f29, f17, f6, rmm # perform operation
fmul.d f29, f17, f6, rne # perform operation
fmul.d f29, f17, f6, rtz # perform operation
fmul.d f29, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fmul.d f16, f1, f28, dyn # perform operation
fmul.d f16, f1, f28, rdn # perform operation
fmul.d f16, f1, f28, rmm # perform operation
fmul.d f16, f1, f28, rne # perform operation
fmul.d f16, f1, f28, rtz # perform operation
fmul.d f16, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fmul.d f9, f5, f10, dyn # perform operation
fmul.d f9, f5, f10, rdn # perform operation
fmul.d f9, f5, f10, rmm # perform operation
fmul.d f9, f5, f10, rne # perform operation
fmul.d f9, f5, f10, rtz # perform operation
fmul.d f9, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fmul.d f29, f12, f3, dyn # perform operation
fmul.d f29, f12, f3, rdn # perform operation
fmul.d f29, f12, f3, rmm # perform operation
fmul.d f29, f12, f3, rne # perform operation
fmul.d f29, f12, f3, rtz # perform operation
fmul.d f29, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fmul.d f18, f20, f15, dyn # perform operation
fmul.d f18, f20, f15, rdn # perform operation
fmul.d f18, f20, f15, rmm # perform operation
fmul.d f18, f20, f15, rne # perform operation
fmul.d f18, f20, f15, rtz # perform operation
fmul.d f18, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
fmul.d f17, f3, f6, dyn # perform operation
fmul.d f17, f3, f6, rdn # perform operation
fmul.d f17, f3, f6, rmm # perform operation
fmul.d f17, f3, f6, rne # perform operation
fmul.d f17, f3, f6, rtz # perform operation
fmul.d f17, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fmul.d f22, f3, f11, dyn # perform operation
fmul.d f22, f3, f11, rdn # perform operation
fmul.d f22, f3, f11, rmm # perform operation
fmul.d f22, f3, f11, rne # perform operation
fmul.d f22, f3, f11, rtz # perform operation
fmul.d f22, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fmul.d f7, f15, f9, dyn # perform operation
fmul.d f7, f15, f9, rdn # perform operation
fmul.d f7, f15, f9, rmm # perform operation
fmul.d f7, f15, f9, rne # perform operation
fmul.d f7, f15, f9, rtz # perform operation
fmul.d f7, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fmul.d f30, f22, f20, dyn # perform operation
fmul.d f30, f22, f20, rdn # perform operation
fmul.d f30, f22, f20, rmm # perform operation
fmul.d f30, f22, f20, rne # perform operation
fmul.d f30, f22, f20, rtz # perform operation
fmul.d f30, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
fmul.d f3, f2, f26, dyn # perform operation
fmul.d f3, f2, f26, rdn # perform operation
fmul.d f3, f2, f26, rmm # perform operation
fmul.d f3, f2, f26, rne # perform operation
fmul.d f3, f2, f26, rtz # perform operation
fmul.d f3, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fmul.d f20, f14, f6, dyn # perform operation
fmul.d f20, f14, f6, rdn # perform operation
fmul.d f20, f14, f6, rmm # perform operation
fmul.d f20, f14, f6, rne # perform operation
fmul.d f20, f14, f6, rtz # perform operation
fmul.d f20, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
fmul.d f27, f8, f15, dyn # perform operation
fmul.d f27, f8, f15, rdn # perform operation
fmul.d f27, f8, f15, rmm # perform operation
fmul.d f27, f8, f15, rne # perform operation
fmul.d f27, f8, f15, rtz # perform operation
fmul.d f27, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fmul.d f6, f8, f11, dyn # perform operation
fmul.d f6, f8, f11, rdn # perform operation
fmul.d f6, f8, f11, rmm # perform operation
fmul.d f6, f8, f11, rne # perform operation
fmul.d f6, f8, f11, rtz # perform operation
fmul.d f6, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmul.d f28, f24, f11, dyn # perform operation
fmul.d f28, f24, f11, rdn # perform operation
fmul.d f28, f24, f11, rmm # perform operation
fmul.d f28, f24, f11, rne # perform operation
fmul.d f28, f24, f11, rtz # perform operation
fmul.d f28, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000001 from memory into f10
fmul.d f27, f31, f10, dyn # perform operation
fmul.d f27, f31, f10, rdn # perform operation
fmul.d f27, f31, f10, rmm # perform operation
fmul.d f27, f31, f10, rne # perform operation
fmul.d f27, f31, f10, rtz # perform operation
fmul.d f27, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fmul.d f26, f29, f6, dyn # perform operation
fmul.d f26, f29, f6, rdn # perform operation
fmul.d f26, f29, f6, rmm # perform operation
fmul.d f26, f29, f6, rne # perform operation
fmul.d f26, f29, f6, rtz # perform operation
fmul.d f26, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fmul.d f8, f30, f12, dyn # perform operation
fmul.d f8, f30, f12, rdn # perform operation
fmul.d f8, f30, f12, rmm # perform operation
fmul.d f8, f30, f12, rne # perform operation
fmul.d f8, f30, f12, rtz # perform operation
fmul.d f8, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f30, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
fmul.d f18, f3, f22, dyn # perform operation
fmul.d f18, f3, f22, rdn # perform operation
fmul.d f18, f3, f22, rmm # perform operation
fmul.d f18, f3, f22, rne # perform operation
fmul.d f18, f3, f22, rtz # perform operation
fmul.d f18, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fmul.d f8, f21, f24, dyn # perform operation
fmul.d f8, f21, f24, rdn # perform operation
fmul.d f8, f21, f24, rmm # perform operation
fmul.d f8, f21, f24, rne # perform operation
fmul.d f8, f21, f24, rtz # perform operation
fmul.d f8, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
fmul.d f14, f15, f25, dyn # perform operation
fmul.d f14, f15, f25, rdn # perform operation
fmul.d f14, f15, f25, rmm # perform operation
fmul.d f14, f15, f25, rne # perform operation
fmul.d f14, f15, f25, rtz # perform operation
fmul.d f14, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fmul.d f24, f26, f17, dyn # perform operation
fmul.d f24, f26, f17, rdn # perform operation
fmul.d f24, f26, f17, rmm # perform operation
fmul.d f24, f26, f17, rne # perform operation
fmul.d f24, f26, f17, rtz # perform operation
fmul.d f24, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fmul.d f15, f21, f26, dyn # perform operation
fmul.d f15, f21, f26, rdn # perform operation
fmul.d f15, f21, f26, rmm # perform operation
fmul.d f15, f21, f26, rne # perform operation
fmul.d f15, f21, f26, rtz # perform operation
fmul.d f15, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fmul.d f9, f26, f30, dyn # perform operation
fmul.d f9, f26, f30, rdn # perform operation
fmul.d f9, f26, f30, rmm # perform operation
fmul.d f9, f26, f30, rne # perform operation
fmul.d f9, f26, f30, rtz # perform operation
fmul.d f9, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fmul.d f31, f22, f30, dyn # perform operation
fmul.d f31, f22, f30, rdn # perform operation
fmul.d f31, f22, f30, rmm # perform operation
fmul.d f31, f22, f30, rne # perform operation
fmul.d f31, f22, f30, rtz # perform operation
fmul.d f31, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fmul.d f18, f8, f15, dyn # perform operation
fmul.d f18, f8, f15, rdn # perform operation
fmul.d f18, f8, f15, rmm # perform operation
fmul.d f18, f8, f15, rne # perform operation
fmul.d f18, f8, f15, rtz # perform operation
fmul.d f18, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fmul.d f26, f28, f22, dyn # perform operation
fmul.d f26, f28, f22, rdn # perform operation
fmul.d f26, f28, f22, rmm # perform operation
fmul.d f26, f28, f22, rne # perform operation
fmul.d f26, f28, f22, rtz # perform operation
fmul.d f26, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fmul.d f13, f15, f26, dyn # perform operation
fmul.d f13, f15, f26, rdn # perform operation
fmul.d f13, f15, f26, rmm # perform operation
fmul.d f13, f15, f26, rne # perform operation
fmul.d f13, f15, f26, rtz # perform operation
fmul.d f13, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fmul.d f31, f2, f25, dyn # perform operation
fmul.d f31, f2, f25, rdn # perform operation
fmul.d f31, f2, f25, rmm # perform operation
fmul.d f31, f2, f25, rne # perform operation
fmul.d f31, f2, f25, rtz # perform operation
fmul.d f31, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fmul.d f15, f12, f6, dyn # perform operation
fmul.d f15, f12, f6, rdn # perform operation
fmul.d f15, f12, f6, rmm # perform operation
fmul.d f15, f12, f6, rne # perform operation
fmul.d f15, f12, f6, rtz # perform operation
fmul.d f15, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fmul.d f26, f14, f25, dyn # perform operation
fmul.d f26, f14, f25, rdn # perform operation
fmul.d f26, f14, f25, rmm # perform operation
fmul.d f26, f14, f25, rne # perform operation
fmul.d f26, f14, f25, rtz # perform operation
fmul.d f26, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fmul.d f26, f25, f12, dyn # perform operation
fmul.d f26, f25, f12, rdn # perform operation
fmul.d f26, f25, f12, rmm # perform operation
fmul.d f26, f25, f12, rne # perform operation
fmul.d f26, f25, f12, rtz # perform operation
fmul.d f26, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fmul.d f29, f20, f16, dyn # perform operation
fmul.d f29, f20, f16, rdn # perform operation
fmul.d f29, f20, f16, rmm # perform operation
fmul.d f29, f20, f16, rne # perform operation
fmul.d f29, f20, f16, rtz # perform operation
fmul.d f29, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fmul.d f8, f19, f23, dyn # perform operation
fmul.d f8, f19, f23, rdn # perform operation
fmul.d f8, f19, f23, rmm # perform operation
fmul.d f8, f19, f23, rne # perform operation
fmul.d f8, f19, f23, rtz # perform operation
fmul.d f8, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fmul.d f5, f27, f14, dyn # perform operation
fmul.d f5, f27, f14, rdn # perform operation
fmul.d f5, f27, f14, rmm # perform operation
fmul.d f5, f27, f14, rne # perform operation
fmul.d f5, f27, f14, rtz # perform operation
fmul.d f5, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fmul.d f28, f29, f20, dyn # perform operation
fmul.d f28, f29, f20, rdn # perform operation
fmul.d f28, f29, f20, rmm # perform operation
fmul.d f28, f29, f20, rne # perform operation
fmul.d f28, f29, f20, rtz # perform operation
fmul.d f28, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
fmul.d f10, f28, f8, dyn # perform operation
fmul.d f10, f28, f8, rdn # perform operation
fmul.d f10, f28, f8, rmm # perform operation
fmul.d f10, f28, f8, rne # perform operation
fmul.d f10, f28, f8, rtz # perform operation
fmul.d f10, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fmul.d f26, f28, f5, dyn # perform operation
fmul.d f26, f28, f5, rdn # perform operation
fmul.d f26, f28, f5, rmm # perform operation
fmul.d f26, f28, f5, rne # perform operation
fmul.d f26, f28, f5, rtz # perform operation
fmul.d f26, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fmul.d f31, f5, f17, dyn # perform operation
fmul.d f31, f5, f17, rdn # perform operation
fmul.d f31, f5, f17, rmm # perform operation
fmul.d f31, f5, f17, rne # perform operation
fmul.d f31, f5, f17, rtz # perform operation
fmul.d f31, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fmul.d f21, f25, f15, dyn # perform operation
fmul.d f21, f25, f15, rdn # perform operation
fmul.d f21, f25, f15, rmm # perform operation
fmul.d f21, f25, f15, rne # perform operation
fmul.d f21, f25, f15, rtz # perform operation
fmul.d f21, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff8000000000000 from memory into f7
fmul.d f28, f12, f7, dyn # perform operation
fmul.d f28, f12, f7, rdn # perform operation
fmul.d f28, f12, f7, rmm # perform operation
fmul.d f28, f12, f7, rne # perform operation
fmul.d f28, f12, f7, rtz # perform operation
fmul.d f28, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fmul.d f3, f28, f6, dyn # perform operation
fmul.d f3, f28, f6, rdn # perform operation
fmul.d f3, f28, f6, rmm # perform operation
fmul.d f3, f28, f6, rne # perform operation
fmul.d f3, f28, f6, rtz # perform operation
fmul.d f3, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fmul.d f19, f1, f26, dyn # perform operation
fmul.d f19, f1, f26, rdn # perform operation
fmul.d f19, f1, f26, rmm # perform operation
fmul.d f19, f1, f26, rne # perform operation
fmul.d f19, f1, f26, rtz # perform operation
fmul.d f19, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000001 from memory into f11
fmul.d f21, f25, f11, dyn # perform operation
fmul.d f21, f25, f11, rdn # perform operation
fmul.d f21, f25, f11, rmm # perform operation
fmul.d f21, f25, f11, rne # perform operation
fmul.d f21, f25, f11, rtz # perform operation
fmul.d f21, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fmul.d f1, f10, f16, dyn # perform operation
fmul.d f1, f10, f16, rdn # perform operation
fmul.d f1, f10, f16, rmm # perform operation
fmul.d f1, f10, f16, rne # perform operation
fmul.d f1, f10, f16, rtz # perform operation
fmul.d f1, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fmul.d f17, f12, f28, dyn # perform operation
fmul.d f17, f12, f28, rdn # perform operation
fmul.d f17, f12, f28, rmm # perform operation
fmul.d f17, f12, f28, rne # perform operation
fmul.d f17, f12, f28, rtz # perform operation
fmul.d f17, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fmul.d f2, f9, f27, dyn # perform operation
fmul.d f2, f9, f27, rdn # perform operation
fmul.d f2, f9, f27, rmm # perform operation
fmul.d f2, f9, f27, rne # perform operation
fmul.d f2, f9, f27, rtz # perform operation
fmul.d f2, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fmul.d f29, f8, f27, dyn # perform operation
fmul.d f29, f8, f27, rdn # perform operation
fmul.d f29, f8, f27, rmm # perform operation
fmul.d f29, f8, f27, rne # perform operation
fmul.d f29, f8, f27, rtz # perform operation
fmul.d f29, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fmul.d f15, f8, f13, dyn # perform operation
fmul.d f15, f8, f13, rdn # perform operation
fmul.d f15, f8, f13, rmm # perform operation
fmul.d f15, f8, f13, rne # perform operation
fmul.d f15, f8, f13, rtz # perform operation
fmul.d f15, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fmul.d f14, f15, f19, dyn # perform operation
fmul.d f14, f15, f19, rdn # perform operation
fmul.d f14, f15, f19, rmm # perform operation
fmul.d f14, f15, f19, rne # perform operation
fmul.d f14, f15, f19, rtz # perform operation
fmul.d f14, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fmul.d f11, f3, f29, dyn # perform operation
fmul.d f11, f3, f29, rdn # perform operation
fmul.d f11, f3, f29, rmm # perform operation
fmul.d f11, f3, f29, rne # perform operation
fmul.d f11, f3, f29, rtz # perform operation
fmul.d f11, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
fmul.d f20, f11, f3, dyn # perform operation
fmul.d f20, f11, f3, rdn # perform operation
fmul.d f20, f11, f3, rmm # perform operation
fmul.d f20, f11, f3, rne # perform operation
fmul.d f20, f11, f3, rtz # perform operation
fmul.d f20, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fmul.d f5, f7, f20, dyn # perform operation
fmul.d f5, f7, f20, rdn # perform operation
fmul.d f5, f7, f20, rmm # perform operation
fmul.d f5, f7, f20, rne # perform operation
fmul.d f5, f7, f20, rtz # perform operation
fmul.d f5, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fmul.d f13, f29, f8, dyn # perform operation
fmul.d f13, f29, f8, rdn # perform operation
fmul.d f13, f29, f8, rmm # perform operation
fmul.d f13, f29, f8, rne # perform operation
fmul.d f13, f29, f8, rtz # perform operation
fmul.d f13, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fmul.d f13, f20, f19, dyn # perform operation
fmul.d f13, f20, f19, rdn # perform operation
fmul.d f13, f20, f19, rmm # perform operation
fmul.d f13, f20, f19, rne # perform operation
fmul.d f13, f20, f19, rtz # perform operation
fmul.d f13, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fmul.d f17, f31, f15, dyn # perform operation
fmul.d f17, f31, f15, rdn # perform operation
fmul.d f17, f31, f15, rmm # perform operation
fmul.d f17, f31, f15, rne # perform operation
fmul.d f17, f31, f15, rtz # perform operation
fmul.d f17, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fmul.d f23, f12, f6, dyn # perform operation
fmul.d f23, f12, f6, rdn # perform operation
fmul.d f23, f12, f6, rmm # perform operation
fmul.d f23, f12, f6, rne # perform operation
fmul.d f23, f12, f6, rtz # perform operation
fmul.d f23, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fmul.d f27, f31, f26, dyn # perform operation
fmul.d f27, f31, f26, rdn # perform operation
fmul.d f27, f31, f26, rmm # perform operation
fmul.d f27, f31, f26, rne # perform operation
fmul.d f27, f31, f26, rtz # perform operation
fmul.d f27, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fmul.d f26, f28, f17, dyn # perform operation
fmul.d f26, f28, f17, rdn # perform operation
fmul.d f26, f28, f17, rmm # perform operation
fmul.d f26, f28, f17, rne # perform operation
fmul.d f26, f28, f17, rtz # perform operation
fmul.d f26, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fmul.d f20, f10, f19, dyn # perform operation
fmul.d f20, f10, f19, rdn # perform operation
fmul.d f20, f10, f19, rmm # perform operation
fmul.d f20, f10, f19, rne # perform operation
fmul.d f20, f10, f19, rtz # perform operation
fmul.d f20, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fmul.d f1, f26, f31, dyn # perform operation
fmul.d f1, f26, f31, rdn # perform operation
fmul.d f1, f26, f31, rmm # perform operation
fmul.d f1, f26, f31, rne # perform operation
fmul.d f1, f26, f31, rtz # perform operation
fmul.d f1, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
fmul.d f11, f2, f6, dyn # perform operation
fmul.d f11, f2, f6, rdn # perform operation
fmul.d f11, f2, f6, rmm # perform operation
fmul.d f11, f2, f6, rne # perform operation
fmul.d f11, f2, f6, rtz # perform operation
fmul.d f11, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fmul.d f24, f29, f19, dyn # perform operation
fmul.d f24, f29, f19, rdn # perform operation
fmul.d f24, f29, f19, rmm # perform operation
fmul.d f24, f29, f19, rne # perform operation
fmul.d f24, f29, f19, rtz # perform operation
fmul.d f24, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fmul.d f9, f2, f20, dyn # perform operation
fmul.d f9, f2, f20, rdn # perform operation
fmul.d f9, f2, f20, rmm # perform operation
fmul.d f9, f2, f20, rne # perform operation
fmul.d f9, f2, f20, rtz # perform operation
fmul.d f9, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f2, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
fmul.d f3, f25, f6, dyn # perform operation
fmul.d f3, f25, f6, rdn # perform operation
fmul.d f3, f25, f6, rmm # perform operation
fmul.d f3, f25, f6, rne # perform operation
fmul.d f3, f25, f6, rtz # perform operation
fmul.d f3, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fmul.d f10, f14, f21, dyn # perform operation
fmul.d f10, f14, f21, rdn # perform operation
fmul.d f10, f14, f21, rmm # perform operation
fmul.d f10, f14, f21, rne # perform operation
fmul.d f10, f14, f21, rtz # perform operation
fmul.d f10, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fmul.d f25, f15, f3, dyn # perform operation
fmul.d f25, f15, f3, rdn # perform operation
fmul.d f25, f15, f3, rmm # perform operation
fmul.d f25, f15, f3, rne # perform operation
fmul.d f25, f15, f3, rtz # perform operation
fmul.d f25, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fmul.d f16, f6, f23, dyn # perform operation
fmul.d f16, f6, f23, rdn # perform operation
fmul.d f16, f6, f23, rmm # perform operation
fmul.d f16, f6, f23, rne # perform operation
fmul.d f16, f6, f23, rtz # perform operation
fmul.d f16, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff8000000000000 from memory into f27
fmul.d f2, f8, f27, dyn # perform operation
fmul.d f2, f8, f27, rdn # perform operation
fmul.d f2, f8, f27, rmm # perform operation
fmul.d f2, f8, f27, rne # perform operation
fmul.d f2, f8, f27, rtz # perform operation
fmul.d f2, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
fmul.d f24, f8, f26, dyn # perform operation
fmul.d f24, f8, f26, rdn # perform operation
fmul.d f24, f8, f26, rmm # perform operation
fmul.d f24, f8, f26, rne # perform operation
fmul.d f24, f8, f26, rtz # perform operation
fmul.d f24, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fmul.d f6, f1, f22, dyn # perform operation
fmul.d f6, f1, f22, rdn # perform operation
fmul.d f6, f1, f22, rmm # perform operation
fmul.d f6, f1, f22, rne # perform operation
fmul.d f6, f1, f22, rtz # perform operation
fmul.d f6, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
fmul.d f7, f21, f30, dyn # perform operation
fmul.d f7, f21, f30, rdn # perform operation
fmul.d f7, f21, f30, rmm # perform operation
fmul.d f7, f21, f30, rne # perform operation
fmul.d f7, f21, f30, rtz # perform operation
fmul.d f7, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fmul.d f13, f29, f18, dyn # perform operation
fmul.d f13, f29, f18, rdn # perform operation
fmul.d f13, f29, f18, rmm # perform operation
fmul.d f13, f29, f18, rne # perform operation
fmul.d f13, f29, f18, rtz # perform operation
fmul.d f13, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fmul.d f26, f27, f10, dyn # perform operation
fmul.d f26, f27, f10, rdn # perform operation
fmul.d f26, f27, f10, rmm # perform operation
fmul.d f26, f27, f10, rne # perform operation
fmul.d f26, f27, f10, rtz # perform operation
fmul.d f26, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff8000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fmul.d f3, f9, f15, dyn # perform operation
fmul.d f3, f9, f15, rdn # perform operation
fmul.d f3, f9, f15, rmm # perform operation
fmul.d f3, f9, f15, rne # perform operation
fmul.d f3, f9, f15, rtz # perform operation
fmul.d f3, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fmul.d f21, f7, f30, dyn # perform operation
fmul.d f21, f7, f30, rdn # perform operation
fmul.d f21, f7, f30, rmm # perform operation
fmul.d f21, f7, f30, rne # perform operation
fmul.d f21, f7, f30, rtz # perform operation
fmul.d f21, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fmul.d f15, f23, f3, dyn # perform operation
fmul.d f15, f23, f3, rdn # perform operation
fmul.d f15, f23, f3, rmm # perform operation
fmul.d f15, f23, f3, rne # perform operation
fmul.d f15, f23, f3, rtz # perform operation
fmul.d f15, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
fmul.d f30, f6, f26, dyn # perform operation
fmul.d f30, f6, f26, rdn # perform operation
fmul.d f30, f6, f26, rmm # perform operation
fmul.d f30, f6, f26, rne # perform operation
fmul.d f30, f6, f26, rtz # perform operation
fmul.d f30, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f6, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff8000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fmul.d f17, f10, f13, dyn # perform operation
fmul.d f17, f10, f13, rdn # perform operation
fmul.d f17, f10, f13, rmm # perform operation
fmul.d f17, f10, f13, rne # perform operation
fmul.d f17, f10, f13, rtz # perform operation
fmul.d f17, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fmul.d f25, f28, f17, dyn # perform operation
fmul.d f25, f28, f17, rdn # perform operation
fmul.d f25, f28, f17, rmm # perform operation
fmul.d f25, f28, f17, rne # perform operation
fmul.d f25, f28, f17, rtz # perform operation
fmul.d f25, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fmul.d f29, f26, f3, dyn # perform operation
fmul.d f29, f26, f3, rdn # perform operation
fmul.d f29, f26, f3, rmm # perform operation
fmul.d f29, f26, f3, rne # perform operation
fmul.d f29, f26, f3, rtz # perform operation
fmul.d f29, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fmul.d f13, f6, f1, dyn # perform operation
fmul.d f13, f6, f1, rdn # perform operation
fmul.d f13, f6, f1, rmm # perform operation
fmul.d f13, f6, f1, rne # perform operation
fmul.d f13, f6, f1, rtz # perform operation
fmul.d f13, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fmul.d f24, f15, f16, dyn # perform operation
fmul.d f24, f15, f16, rdn # perform operation
fmul.d f24, f15, f16, rmm # perform operation
fmul.d f24, f15, f16, rne # perform operation
fmul.d f24, f15, f16, rtz # perform operation
fmul.d f24, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fmul.d f22, f11, f28, dyn # perform operation
fmul.d f22, f11, f28, rdn # perform operation
fmul.d f22, f11, f28, rmm # perform operation
fmul.d f22, f11, f28, rne # perform operation
fmul.d f22, f11, f28, rtz # perform operation
fmul.d f22, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff8000000000000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fmul.d f29, f14, f5, dyn # perform operation
fmul.d f29, f14, f5, rdn # perform operation
fmul.d f29, f14, f5, rmm # perform operation
fmul.d f29, f14, f5, rne # perform operation
fmul.d f29, f14, f5, rtz # perform operation
fmul.d f29, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fmul.d f20, f1, f18, dyn # perform operation
fmul.d f20, f1, f18, rdn # perform operation
fmul.d f20, f1, f18, rmm # perform operation
fmul.d f20, f1, f18, rne # perform operation
fmul.d f20, f1, f18, rtz # perform operation
fmul.d f20, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff8000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fmul.d f7, f5, f31, dyn # perform operation
fmul.d f7, f5, f31, rdn # perform operation
fmul.d f7, f5, f31, rmm # perform operation
fmul.d f7, f5, f31, rne # perform operation
fmul.d f7, f5, f31, rtz # perform operation
fmul.d f7, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fmul.d f3, f6, f24, dyn # perform operation
fmul.d f3, f6, f24, rdn # perform operation
fmul.d f3, f6, f24, rmm # perform operation
fmul.d f3, f6, f24, rne # perform operation
fmul.d f3, f6, f24, rtz # perform operation
fmul.d f3, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fmul.d f26, f1, f14, dyn # perform operation
fmul.d f26, f1, f14, rdn # perform operation
fmul.d f26, f1, f14, rmm # perform operation
fmul.d f26, f1, f14, rne # perform operation
fmul.d f26, f1, f14, rtz # perform operation
fmul.d f26, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fmul.d f14, f23, f29, dyn # perform operation
fmul.d f14, f23, f29, rdn # perform operation
fmul.d f14, f23, f29, rmm # perform operation
fmul.d f14, f23, f29, rne # perform operation
fmul.d f14, f23, f29, rtz # perform operation
fmul.d f14, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fmul.d f18, f19, f27, dyn # perform operation
fmul.d f18, f19, f27, rdn # perform operation
fmul.d f18, f19, f27, rmm # perform operation
fmul.d f18, f19, f27, rne # perform operation
fmul.d f18, f19, f27, rtz # perform operation
fmul.d f18, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff8000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmul.d f22, f27, f18, dyn # perform operation
fmul.d f22, f27, f18, rdn # perform operation
fmul.d f22, f27, f18, rmm # perform operation
fmul.d f22, f27, f18, rne # perform operation
fmul.d f22, f27, f18, rtz # perform operation
fmul.d f22, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fmul.d f12, f26, f29, dyn # perform operation
fmul.d f12, f26, f29, rdn # perform operation
fmul.d f12, f26, f29, rmm # perform operation
fmul.d f12, f26, f29, rne # perform operation
fmul.d f12, f26, f29, rtz # perform operation
fmul.d f12, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff8000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
fmul.d f15, f30, f8, dyn # perform operation
fmul.d f15, f30, f8, rdn # perform operation
fmul.d f15, f30, f8, rmm # perform operation
fmul.d f15, f30, f8, rne # perform operation
fmul.d f15, f30, f8, rtz # perform operation
fmul.d f15, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
fmul.d f10, f29, f11, dyn # perform operation
fmul.d f10, f29, f11, rdn # perform operation
fmul.d f10, f29, f11, rmm # perform operation
fmul.d f10, f29, f11, rne # perform operation
fmul.d f10, f29, f11, rtz # perform operation
fmul.d f10, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff8000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fmul.d f16, f12, f14, dyn # perform operation
fmul.d f16, f12, f14, rdn # perform operation
fmul.d f16, f12, f14, rmm # perform operation
fmul.d f16, f12, f14, rne # perform operation
fmul.d f16, f12, f14, rtz # perform operation
fmul.d f16, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fmul.d f23, f22, f25, dyn # perform operation
fmul.d f23, f22, f25, rdn # perform operation
fmul.d f23, f22, f25, rmm # perform operation
fmul.d f23, f22, f25, rne # perform operation
fmul.d f23, f22, f25, rtz # perform operation
fmul.d f23, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fmul.d f12, f8, f19, dyn # perform operation
fmul.d f12, f8, f19, rdn # perform operation
fmul.d f12, f8, f19, rmm # perform operation
fmul.d f12, f8, f19, rne # perform operation
fmul.d f12, f8, f19, rtz # perform operation
fmul.d f12, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff8000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fmul.d f19, f20, f17, dyn # perform operation
fmul.d f19, f20, f17, rdn # perform operation
fmul.d f19, f20, f17, rmm # perform operation
fmul.d f19, f20, f17, rne # perform operation
fmul.d f19, f20, f17, rtz # perform operation
fmul.d f19, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000001 from memory into f10
fmul.d f25, f29, f10, dyn # perform operation
fmul.d f25, f29, f10, rdn # perform operation
fmul.d f25, f29, f10, rmm # perform operation
fmul.d f25, f29, f10, rne # perform operation
fmul.d f25, f29, f10, rtz # perform operation
fmul.d f25, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fmul.d f8, f23, f6, dyn # perform operation
fmul.d f8, f23, f6, rdn # perform operation
fmul.d f8, f23, f6, rmm # perform operation
fmul.d f8, f23, f6, rne # perform operation
fmul.d f8, f23, f6, rtz # perform operation
fmul.d f8, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff8000000000000 from memory into f30
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fmul.d f27, f30, f17, dyn # perform operation
fmul.d f27, f30, f17, rdn # perform operation
fmul.d f27, f30, f17, rmm # perform operation
fmul.d f27, f30, f17, rne # perform operation
fmul.d f27, f30, f17, rtz # perform operation
fmul.d f27, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fmul.d f9, f2, f26, dyn # perform operation
fmul.d f9, f2, f26, rdn # perform operation
fmul.d f9, f2, f26, rmm # perform operation
fmul.d f9, f2, f26, rne # perform operation
fmul.d f9, f2, f26, rtz # perform operation
fmul.d f9, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fmul.d f6, f2, f29, dyn # perform operation
fmul.d f6, f2, f29, rdn # perform operation
fmul.d f6, f2, f29, rmm # perform operation
fmul.d f6, f2, f29, rne # perform operation
fmul.d f6, f2, f29, rtz # perform operation
fmul.d f6, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fmul.d f29, f15, f8, dyn # perform operation
fmul.d f29, f15, f8, rdn # perform operation
fmul.d f29, f15, f8, rmm # perform operation
fmul.d f29, f15, f8, rne # perform operation
fmul.d f29, f15, f8, rtz # perform operation
fmul.d f29, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
fmul.d f13, f16, f14, dyn # perform operation
fmul.d f13, f16, f14, rdn # perform operation
fmul.d f13, f16, f14, rmm # perform operation
fmul.d f13, f16, f14, rne # perform operation
fmul.d f13, f16, f14, rtz # perform operation
fmul.d f13, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fmul.d f25, f5, f1, dyn # perform operation
fmul.d f25, f5, f1, rdn # perform operation
fmul.d f25, f5, f1, rmm # perform operation
fmul.d f25, f5, f1, rne # perform operation
fmul.d f25, f5, f1, rtz # perform operation
fmul.d f25, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fmul.d f14, f2, f15, dyn # perform operation
fmul.d f14, f2, f15, rdn # perform operation
fmul.d f14, f2, f15, rmm # perform operation
fmul.d f14, f2, f15, rne # perform operation
fmul.d f14, f2, f15, rtz # perform operation
fmul.d f14, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fmul.d f30, f31, f11, dyn # perform operation
fmul.d f30, f31, f11, rdn # perform operation
fmul.d f30, f31, f11, rmm # perform operation
fmul.d f30, f31, f11, rne # perform operation
fmul.d f30, f31, f11, rtz # perform operation
fmul.d f30, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fmul.d f25, f9, f15, dyn # perform operation
fmul.d f25, f9, f15, rdn # perform operation
fmul.d f25, f9, f15, rmm # perform operation
fmul.d f25, f9, f15, rne # perform operation
fmul.d f25, f9, f15, rtz # perform operation
fmul.d f25, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fmul.d f23, f14, f3, dyn # perform operation
fmul.d f23, f14, f3, rdn # perform operation
fmul.d f23, f14, f3, rmm # perform operation
fmul.d f23, f14, f3, rne # perform operation
fmul.d f23, f14, f3, rtz # perform operation
fmul.d f23, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fmul.d f14, f29, f9, dyn # perform operation
fmul.d f14, f29, f9, rdn # perform operation
fmul.d f14, f29, f9, rmm # perform operation
fmul.d f14, f29, f9, rne # perform operation
fmul.d f14, f29, f9, rtz # perform operation
fmul.d f14, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fmul.d f27, f23, f7, dyn # perform operation
fmul.d f27, f23, f7, rdn # perform operation
fmul.d f27, f23, f7, rmm # perform operation
fmul.d f27, f23, f7, rne # perform operation
fmul.d f27, f23, f7, rtz # perform operation
fmul.d f27, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
fmul.d f26, f19, f31, dyn # perform operation
fmul.d f26, f19, f31, rdn # perform operation
fmul.d f26, f19, f31, rmm # perform operation
fmul.d f26, f19, f31, rne # perform operation
fmul.d f26, f19, f31, rtz # perform operation
fmul.d f26, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fmul.d f21, f16, f15, dyn # perform operation
fmul.d f21, f16, f15, rdn # perform operation
fmul.d f21, f16, f15, rmm # perform operation
fmul.d f21, f16, f15, rne # perform operation
fmul.d f21, f16, f15, rtz # perform operation
fmul.d f21, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fmul.d f19, f10, f22, dyn # perform operation
fmul.d f19, f10, f22, rdn # perform operation
fmul.d f19, f10, f22, rmm # perform operation
fmul.d f19, f10, f22, rne # perform operation
fmul.d f19, f10, f22, rtz # perform operation
fmul.d f19, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fmul.d f29, f31, f2, dyn # perform operation
fmul.d f29, f31, f2, rdn # perform operation
fmul.d f29, f31, f2, rmm # perform operation
fmul.d f29, f31, f2, rne # perform operation
fmul.d f29, f31, f2, rtz # perform operation
fmul.d f29, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fmul.d f17, f5, f2, dyn # perform operation
fmul.d f17, f5, f2, rdn # perform operation
fmul.d f17, f5, f2, rmm # perform operation
fmul.d f17, f5, f2, rne # perform operation
fmul.d f17, f5, f2, rtz # perform operation
fmul.d f17, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
fmul.d f15, f10, f13, dyn # perform operation
fmul.d f15, f10, f13, rdn # perform operation
fmul.d f15, f10, f13, rmm # perform operation
fmul.d f15, f10, f13, rne # perform operation
fmul.d f15, f10, f13, rtz # perform operation
fmul.d f15, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fmul.d f23, f5, f24, dyn # perform operation
fmul.d f23, f5, f24, rdn # perform operation
fmul.d f23, f5, f24, rmm # perform operation
fmul.d f23, f5, f24, rne # perform operation
fmul.d f23, f5, f24, rtz # perform operation
fmul.d f23, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fmul.d f8, f30, f16, dyn # perform operation
fmul.d f8, f30, f16, rdn # perform operation
fmul.d f8, f30, f16, rmm # perform operation
fmul.d f8, f30, f16, rne # perform operation
fmul.d f8, f30, f16, rtz # perform operation
fmul.d f8, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fmul.d f28, f18, f27, dyn # perform operation
fmul.d f28, f18, f27, rdn # perform operation
fmul.d f28, f18, f27, rmm # perform operation
fmul.d f28, f18, f27, rne # perform operation
fmul.d f28, f18, f27, rtz # perform operation
fmul.d f28, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fmul.d f22, f18, f24, dyn # perform operation
fmul.d f22, f18, f24, rdn # perform operation
fmul.d f22, f18, f24, rmm # perform operation
fmul.d f22, f18, f24, rne # perform operation
fmul.d f22, f18, f24, rtz # perform operation
fmul.d f22, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fmul.d f20, f15, f13, dyn # perform operation
fmul.d f20, f15, f13, rdn # perform operation
fmul.d f20, f15, f13, rmm # perform operation
fmul.d f20, f15, f13, rne # perform operation
fmul.d f20, f15, f13, rtz # perform operation
fmul.d f20, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff8000000000000 from memory into f24
fmul.d f12, f28, f24, dyn # perform operation
fmul.d f12, f28, f24, rdn # perform operation
fmul.d f12, f28, f24, rmm # perform operation
fmul.d f12, f28, f24, rne # perform operation
fmul.d f12, f28, f24, rtz # perform operation
fmul.d f12, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fmul.d f3, f21, f16, dyn # perform operation
fmul.d f3, f21, f16, rdn # perform operation
fmul.d f3, f21, f16, rmm # perform operation
fmul.d f3, f21, f16, rne # perform operation
fmul.d f3, f21, f16, rtz # perform operation
fmul.d f3, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fmul.d f22, f5, f25, dyn # perform operation
fmul.d f22, f5, f25, rdn # perform operation
fmul.d f22, f5, f25, rmm # perform operation
fmul.d f22, f5, f25, rne # perform operation
fmul.d f22, f5, f25, rtz # perform operation
fmul.d f22, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000001 from memory into f6
fmul.d f25, f10, f6, dyn # perform operation
fmul.d f25, f10, f6, rdn # perform operation
fmul.d f25, f10, f6, rmm # perform operation
fmul.d f25, f10, f6, rne # perform operation
fmul.d f25, f10, f6, rtz # perform operation
fmul.d f25, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
fmul.d f22, f14, f26, dyn # perform operation
fmul.d f22, f14, f26, rdn # perform operation
fmul.d f22, f14, f26, rmm # perform operation
fmul.d f22, f14, f26, rne # perform operation
fmul.d f22, f14, f26, rtz # perform operation
fmul.d f22, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f14, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fmul.d f19, f1, f22, dyn # perform operation
fmul.d f19, f1, f22, rdn # perform operation
fmul.d f19, f1, f22, rmm # perform operation
fmul.d f19, f1, f22, rne # perform operation
fmul.d f19, f1, f22, rtz # perform operation
fmul.d f19, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
fmul.d f13, f12, f10, dyn # perform operation
fmul.d f13, f12, f10, rdn # perform operation
fmul.d f13, f12, f10, rmm # perform operation
fmul.d f13, f12, f10, rne # perform operation
fmul.d f13, f12, f10, rtz # perform operation
fmul.d f13, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fmul.d f7, f19, f22, dyn # perform operation
fmul.d f7, f19, f22, rdn # perform operation
fmul.d f7, f19, f22, rmm # perform operation
fmul.d f7, f19, f22, rne # perform operation
fmul.d f7, f19, f22, rtz # perform operation
fmul.d f7, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fmul.d f19, f30, f17, dyn # perform operation
fmul.d f19, f30, f17, rdn # perform operation
fmul.d f19, f30, f17, rmm # perform operation
fmul.d f19, f30, f17, rne # perform operation
fmul.d f19, f30, f17, rtz # perform operation
fmul.d f19, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fmul.d f1, f22, f27, dyn # perform operation
fmul.d f1, f22, f27, rdn # perform operation
fmul.d f1, f22, f27, rmm # perform operation
fmul.d f1, f22, f27, rne # perform operation
fmul.d f1, f22, f27, rtz # perform operation
fmul.d f1, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fmul.d f10, f26, f20, dyn # perform operation
fmul.d f10, f26, f20, rdn # perform operation
fmul.d f10, f26, f20, rmm # perform operation
fmul.d f10, f26, f20, rne # perform operation
fmul.d f10, f26, f20, rtz # perform operation
fmul.d f10, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fmul.d f21, f17, f11, dyn # perform operation
fmul.d f21, f17, f11, rdn # perform operation
fmul.d f21, f17, f11, rmm # perform operation
fmul.d f21, f17, f11, rne # perform operation
fmul.d f21, f17, f11, rtz # perform operation
fmul.d f21, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
fmul.d f22, f29, f13, dyn # perform operation
fmul.d f22, f29, f13, rdn # perform operation
fmul.d f22, f29, f13, rmm # perform operation
fmul.d f22, f29, f13, rne # perform operation
fmul.d f22, f29, f13, rtz # perform operation
fmul.d f22, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fmul.d f17, f24, f13, dyn # perform operation
fmul.d f17, f24, f13, rdn # perform operation
fmul.d f17, f24, f13, rmm # perform operation
fmul.d f17, f24, f13, rne # perform operation
fmul.d f17, f24, f13, rtz # perform operation
fmul.d f17, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fmul.d f10, f15, f26, dyn # perform operation
fmul.d f10, f15, f26, rdn # perform operation
fmul.d f10, f15, f26, rmm # perform operation
fmul.d f10, f15, f26, rne # perform operation
fmul.d f10, f15, f26, rtz # perform operation
fmul.d f10, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fmul.d f31, f30, f3, dyn # perform operation
fmul.d f31, f30, f3, rdn # perform operation
fmul.d f31, f30, f3, rmm # perform operation
fmul.d f31, f30, f3, rne # perform operation
fmul.d f31, f30, f3, rtz # perform operation
fmul.d f31, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fmul.d f8, f18, f24, dyn # perform operation
fmul.d f8, f18, f24, rdn # perform operation
fmul.d f8, f18, f24, rmm # perform operation
fmul.d f8, f18, f24, rne # perform operation
fmul.d f8, f18, f24, rtz # perform operation
fmul.d f8, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fmul.d f8, f31, f15, dyn # perform operation
fmul.d f8, f31, f15, rdn # perform operation
fmul.d f8, f31, f15, rmm # perform operation
fmul.d f8, f31, f15, rne # perform operation
fmul.d f8, f31, f15, rtz # perform operation
fmul.d f8, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
fmul.d f6, f27, f2, dyn # perform operation
fmul.d f6, f27, f2, rdn # perform operation
fmul.d f6, f27, f2, rmm # perform operation
fmul.d f6, f27, f2, rne # perform operation
fmul.d f6, f27, f2, rtz # perform operation
fmul.d f6, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fmul.d f14, f29, f11, dyn # perform operation
fmul.d f14, f29, f11, rdn # perform operation
fmul.d f14, f29, f11, rmm # perform operation
fmul.d f14, f29, f11, rne # perform operation
fmul.d f14, f29, f11, rtz # perform operation
fmul.d f14, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
fmul.d f16, f5, f17, dyn # perform operation
fmul.d f16, f5, f17, rdn # perform operation
fmul.d f16, f5, f17, rmm # perform operation
fmul.d f16, f5, f17, rne # perform operation
fmul.d f16, f5, f17, rtz # perform operation
fmul.d f16, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fmul.d f21, f17, f15, dyn # perform operation
fmul.d f21, f17, f15, rdn # perform operation
fmul.d f21, f17, f15, rmm # perform operation
fmul.d f21, f17, f15, rne # perform operation
fmul.d f21, f17, f15, rtz # perform operation
fmul.d f21, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fmul.d f30, f26, f31, dyn # perform operation
fmul.d f30, f26, f31, rdn # perform operation
fmul.d f30, f26, f31, rmm # perform operation
fmul.d f30, f26, f31, rne # perform operation
fmul.d f30, f26, f31, rtz # perform operation
fmul.d f30, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fmul.d f29, f19, f22, dyn # perform operation
fmul.d f29, f19, f22, rdn # perform operation
fmul.d f29, f19, f22, rmm # perform operation
fmul.d f29, f19, f22, rne # perform operation
fmul.d f29, f19, f22, rtz # perform operation
fmul.d f29, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fmul.d f13, f31, f20, dyn # perform operation
fmul.d f13, f31, f20, rdn # perform operation
fmul.d f13, f31, f20, rmm # perform operation
fmul.d f13, f31, f20, rne # perform operation
fmul.d f13, f31, f20, rtz # perform operation
fmul.d f13, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fmul.d f8, f19, f18, dyn # perform operation
fmul.d f8, f19, f18, rdn # perform operation
fmul.d f8, f19, f18, rmm # perform operation
fmul.d f8, f19, f18, rne # perform operation
fmul.d f8, f19, f18, rtz # perform operation
fmul.d f8, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fmul.d f10, f2, f16, dyn # perform operation
fmul.d f10, f2, f16, rdn # perform operation
fmul.d f10, f2, f16, rmm # perform operation
fmul.d f10, f2, f16, rne # perform operation
fmul.d f10, f2, f16, rtz # perform operation
fmul.d f10, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fmul.d f24, f31, f26, dyn # perform operation
fmul.d f24, f31, f26, rdn # perform operation
fmul.d f24, f31, f26, rmm # perform operation
fmul.d f24, f31, f26, rne # perform operation
fmul.d f24, f31, f26, rtz # perform operation
fmul.d f24, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff8000000000000 from memory into f30
fmul.d f15, f8, f30, dyn # perform operation
fmul.d f15, f8, f30, rdn # perform operation
fmul.d f15, f8, f30, rmm # perform operation
fmul.d f15, f8, f30, rne # perform operation
fmul.d f15, f8, f30, rtz # perform operation
fmul.d f15, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fmul.d f17, f8, f11, dyn # perform operation
fmul.d f17, f8, f11, rdn # perform operation
fmul.d f17, f8, f11, rmm # perform operation
fmul.d f17, f8, f11, rne # perform operation
fmul.d f17, f8, f11, rtz # perform operation
fmul.d f17, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fmul.d f13, f5, f3, dyn # perform operation
fmul.d f13, f5, f3, rdn # perform operation
fmul.d f13, f5, f3, rmm # perform operation
fmul.d f13, f5, f3, rne # perform operation
fmul.d f13, f5, f3, rtz # perform operation
fmul.d f13, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000001 from memory into f10
fmul.d f15, f11, f10, dyn # perform operation
fmul.d f15, f11, f10, rdn # perform operation
fmul.d f15, f11, f10, rmm # perform operation
fmul.d f15, f11, f10, rne # perform operation
fmul.d f15, f11, f10, rtz # perform operation
fmul.d f15, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fmul.d f3, f6, f10, dyn # perform operation
fmul.d f3, f6, f10, rdn # perform operation
fmul.d f3, f6, f10, rmm # perform operation
fmul.d f3, f6, f10, rne # perform operation
fmul.d f3, f6, f10, rtz # perform operation
fmul.d f3, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fmul.d f16, f3, f19, dyn # perform operation
fmul.d f16, f3, f19, rdn # perform operation
fmul.d f16, f3, f19, rmm # perform operation
fmul.d f16, f3, f19, rne # perform operation
fmul.d f16, f3, f19, rtz # perform operation
fmul.d f16, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
fmul.d f22, f19, f10, dyn # perform operation
fmul.d f22, f19, f10, rdn # perform operation
fmul.d f22, f19, f10, rmm # perform operation
fmul.d f22, f19, f10, rne # perform operation
fmul.d f22, f19, f10, rtz # perform operation
fmul.d f22, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000001 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fmul.d f11, f1, f14, dyn # perform operation
fmul.d f11, f1, f14, rdn # perform operation
fmul.d f11, f1, f14, rmm # perform operation
fmul.d f11, f1, f14, rne # perform operation
fmul.d f11, f1, f14, rtz # perform operation
fmul.d f11, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fmul.d f11, f18, f24, dyn # perform operation
fmul.d f11, f18, f24, rdn # perform operation
fmul.d f11, f18, f24, rmm # perform operation
fmul.d f11, f18, f24, rne # perform operation
fmul.d f11, f18, f24, rtz # perform operation
fmul.d f11, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000001 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fmul.d f5, f14, f7, dyn # perform operation
fmul.d f5, f14, f7, rdn # perform operation
fmul.d f5, f14, f7, rmm # perform operation
fmul.d f5, f14, f7, rne # perform operation
fmul.d f5, f14, f7, rtz # perform operation
fmul.d f5, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fmul.d f7, f20, f26, dyn # perform operation
fmul.d f7, f20, f26, rdn # perform operation
fmul.d f7, f20, f26, rmm # perform operation
fmul.d f7, f20, f26, rne # perform operation
fmul.d f7, f20, f26, rtz # perform operation
fmul.d f7, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fmul.d f24, f12, f23, dyn # perform operation
fmul.d f24, f12, f23, rdn # perform operation
fmul.d f24, f12, f23, rmm # perform operation
fmul.d f24, f12, f23, rne # perform operation
fmul.d f24, f12, f23, rtz # perform operation
fmul.d f24, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fmul.d f25, f7, f11, dyn # perform operation
fmul.d f25, f7, f11, rdn # perform operation
fmul.d f25, f7, f11, rmm # perform operation
fmul.d f25, f7, f11, rne # perform operation
fmul.d f25, f7, f11, rtz # perform operation
fmul.d f25, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fmul.d f1, f17, f7, dyn # perform operation
fmul.d f1, f17, f7, rdn # perform operation
fmul.d f1, f17, f7, rmm # perform operation
fmul.d f1, f17, f7, rne # perform operation
fmul.d f1, f17, f7, rtz # perform operation
fmul.d f1, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fmul.d f13, f2, f5, dyn # perform operation
fmul.d f13, f2, f5, rdn # perform operation
fmul.d f13, f2, f5, rmm # perform operation
fmul.d f13, f2, f5, rne # perform operation
fmul.d f13, f2, f5, rtz # perform operation
fmul.d f13, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fmul.d f10, f8, f30, dyn # perform operation
fmul.d f10, f8, f30, rdn # perform operation
fmul.d f10, f8, f30, rmm # perform operation
fmul.d f10, f8, f30, rne # perform operation
fmul.d f10, f8, f30, rtz # perform operation
fmul.d f10, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fmul.d f1, f7, f25, dyn # perform operation
fmul.d f1, f7, f25, rdn # perform operation
fmul.d f1, f7, f25, rmm # perform operation
fmul.d f1, f7, f25, rne # perform operation
fmul.d f1, f7, f25, rtz # perform operation
fmul.d f1, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f1, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f1, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f1, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f1, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f1, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fmul.d f27, f20, f11, dyn # perform operation
fmul.d f27, f20, f11, rdn # perform operation
fmul.d f27, f20, f11, rmm # perform operation
fmul.d f27, f20, f11, rne # perform operation
fmul.d f27, f20, f11, rtz # perform operation
fmul.d f27, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000001 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fmul.d f16, f18, f25, dyn # perform operation
fmul.d f16, f18, f25, rdn # perform operation
fmul.d f16, f18, f25, rmm # perform operation
fmul.d f16, f18, f25, rne # perform operation
fmul.d f16, f18, f25, rtz # perform operation
fmul.d f16, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000001 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fmul.d f28, f13, f3, dyn # perform operation
fmul.d f28, f13, f3, rdn # perform operation
fmul.d f28, f13, f3, rmm # perform operation
fmul.d f28, f13, f3, rne # perform operation
fmul.d f28, f13, f3, rtz # perform operation
fmul.d f28, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000001 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fmul.d f17, f9, f23, dyn # perform operation
fmul.d f17, f9, f23, rdn # perform operation
fmul.d f17, f9, f23, rmm # perform operation
fmul.d f17, f9, f23, rne # perform operation
fmul.d f17, f9, f23, rtz # perform operation
fmul.d f17, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000001 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fmul.d f14, f24, f11, dyn # perform operation
fmul.d f14, f24, f11, rdn # perform operation
fmul.d f14, f24, f11, rmm # perform operation
fmul.d f14, f24, f11, rne # perform operation
fmul.d f14, f24, f11, rtz # perform operation
fmul.d f14, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000001 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fmul.d f28, f31, f3, dyn # perform operation
fmul.d f28, f31, f3, rdn # perform operation
fmul.d f28, f31, f3, rmm # perform operation
fmul.d f28, f31, f3, rne # perform operation
fmul.d f28, f31, f3, rtz # perform operation
fmul.d f28, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000001 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fmul.d f2, f16, f21, dyn # perform operation
fmul.d f2, f16, f21, rdn # perform operation
fmul.d f2, f16, f21, rmm # perform operation
fmul.d f2, f16, f21, rne # perform operation
fmul.d f2, f16, f21, rtz # perform operation
fmul.d f2, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000001 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fmul.d f24, f22, f14, dyn # perform operation
fmul.d f24, f22, f14, rdn # perform operation
fmul.d f24, f22, f14, rmm # perform operation
fmul.d f24, f22, f14, rne # perform operation
fmul.d f24, f22, f14, rtz # perform operation
fmul.d f24, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fmul.d f23, f12, f16, dyn # perform operation
fmul.d f23, f12, f16, rdn # perform operation
fmul.d f23, f12, f16, rmm # perform operation
fmul.d f23, f12, f16, rne # perform operation
fmul.d f23, f12, f16, rtz # perform operation
fmul.d f23, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fmul.d f27, f30, f15, dyn # perform operation
fmul.d f27, f30, f15, rdn # perform operation
fmul.d f27, f30, f15, rmm # perform operation
fmul.d f27, f30, f15, rne # perform operation
fmul.d f27, f30, f15, rtz # perform operation
fmul.d f27, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000001 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fmul.d f27, f14, f25, dyn # perform operation
fmul.d f27, f14, f25, rdn # perform operation
fmul.d f27, f14, f25, rmm # perform operation
fmul.d f27, f14, f25, rne # perform operation
fmul.d f27, f14, f25, rtz # perform operation
fmul.d f27, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fmul.d f21, f18, f25, dyn # perform operation
fmul.d f21, f18, f25, rdn # perform operation
fmul.d f21, f18, f25, rmm # perform operation
fmul.d f21, f18, f25, rne # perform operation
fmul.d f21, f18, f25, rtz # perform operation
fmul.d f21, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000001 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fmul.d f18, f29, f17, dyn # perform operation
fmul.d f18, f29, f17, rdn # perform operation
fmul.d f18, f29, f17, rmm # perform operation
fmul.d f18, f29, f17, rne # perform operation
fmul.d f18, f29, f17, rtz # perform operation
fmul.d f18, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmul.d f17, f30, f11, dyn # perform operation
fmul.d f17, f30, f11, rdn # perform operation
fmul.d f17, f30, f11, rmm # perform operation
fmul.d f17, f30, f11, rne # perform operation
fmul.d f17, f30, f11, rtz # perform operation
fmul.d f17, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000001 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000001 from memory into f29
fmul.d f6, f1, f29, dyn # perform operation
fmul.d f6, f1, f29, rdn # perform operation
fmul.d f6, f1, f29, rmm # perform operation
fmul.d f6, f1, f29, rne # perform operation
fmul.d f6, f1, f29, rtz # perform operation
fmul.d f6, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f6, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000001 from memory into f15
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fmul.d f24, f15, f14, dyn # perform operation
fmul.d f24, f15, f14, rdn # perform operation
fmul.d f24, f15, f14, rmm # perform operation
fmul.d f24, f15, f14, rne # perform operation
fmul.d f24, f15, f14, rtz # perform operation
fmul.d f24, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f15, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fmul.d f8, f7, f5, dyn # perform operation
fmul.d f8, f7, f5, rdn # perform operation
fmul.d f8, f7, f5, rmm # perform operation
fmul.d f8, f7, f5, rne # perform operation
fmul.d f8, f7, f5, rtz # perform operation
fmul.d f8, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f8, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fmul.d f17, f14, f5, dyn # perform operation
fmul.d f17, f14, f5, rdn # perform operation
fmul.d f17, f14, f5, rmm # perform operation
fmul.d f17, f14, f5, rne # perform operation
fmul.d f17, f14, f5, rtz # perform operation
fmul.d f17, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fmul.d f27, f1, f8, dyn # perform operation
fmul.d f27, f1, f8, rdn # perform operation
fmul.d f27, f1, f8, rmm # perform operation
fmul.d f27, f1, f8, rne # perform operation
fmul.d f27, f1, f8, rtz # perform operation
fmul.d f27, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fmul.d f7, f5, f12, dyn # perform operation
fmul.d f7, f5, f12, rdn # perform operation
fmul.d f7, f5, f12, rmm # perform operation
fmul.d f7, f5, f12, rne # perform operation
fmul.d f7, f5, f12, rtz # perform operation
fmul.d f7, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fmul.d f13, f24, f11, dyn # perform operation
fmul.d f13, f24, f11, rdn # perform operation
fmul.d f13, f24, f11, rmm # perform operation
fmul.d f13, f24, f11, rne # perform operation
fmul.d f13, f24, f11, rtz # perform operation
fmul.d f13, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fmul.d f31, f13, f29, dyn # perform operation
fmul.d f31, f13, f29, rdn # perform operation
fmul.d f31, f13, f29, rmm # perform operation
fmul.d f31, f13, f29, rne # perform operation
fmul.d f31, f13, f29, rtz # perform operation
fmul.d f31, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fmul.d f21, f5, f20, dyn # perform operation
fmul.d f21, f5, f20, rdn # perform operation
fmul.d f21, f5, f20, rmm # perform operation
fmul.d f21, f5, f20, rne # perform operation
fmul.d f21, f5, f20, rtz # perform operation
fmul.d f21, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f21, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f21, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f21, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f21, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f21, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fmul.d f7, f19, f2, dyn # perform operation
fmul.d f7, f19, f2, rdn # perform operation
fmul.d f7, f19, f2, rmm # perform operation
fmul.d f7, f19, f2, rne # perform operation
fmul.d f7, f19, f2, rtz # perform operation
fmul.d f7, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fmul.d f5, f30, f17, dyn # perform operation
fmul.d f5, f30, f17, rdn # perform operation
fmul.d f5, f30, f17, rmm # perform operation
fmul.d f5, f30, f17, rne # perform operation
fmul.d f5, f30, f17, rtz # perform operation
fmul.d f5, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fmul.d f2, f13, f6, dyn # perform operation
fmul.d f2, f13, f6, rdn # perform operation
fmul.d f2, f13, f6, rmm # perform operation
fmul.d f2, f13, f6, rne # perform operation
fmul.d f2, f13, f6, rtz # perform operation
fmul.d f2, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fmul.d f7, f29, f19, dyn # perform operation
fmul.d f7, f29, f19, rdn # perform operation
fmul.d f7, f29, f19, rmm # perform operation
fmul.d f7, f29, f19, rne # perform operation
fmul.d f7, f29, f19, rtz # perform operation
fmul.d f7, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fmul.d f27, f25, f7, dyn # perform operation
fmul.d f27, f25, f7, rdn # perform operation
fmul.d f27, f25, f7, rmm # perform operation
fmul.d f27, f25, f7, rne # perform operation
fmul.d f27, f25, f7, rtz # perform operation
fmul.d f27, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fmul.d f12, f28, f19, dyn # perform operation
fmul.d f12, f28, f19, rdn # perform operation
fmul.d f12, f28, f19, rmm # perform operation
fmul.d f12, f28, f19, rne # perform operation
fmul.d f12, f28, f19, rtz # perform operation
fmul.d f12, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f12, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f12, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f12, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f12, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f12, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fmul.d f29, f15, f31, dyn # perform operation
fmul.d f29, f15, f31, rdn # perform operation
fmul.d f29, f15, f31, rmm # perform operation
fmul.d f29, f15, f31, rne # perform operation
fmul.d f29, f15, f31, rtz # perform operation
fmul.d f29, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
fmul.d f28, f27, f29, dyn # perform operation
fmul.d f28, f27, f29, rdn # perform operation
fmul.d f28, f27, f29, rmm # perform operation
fmul.d f28, f27, f29, rne # perform operation
fmul.d f28, f27, f29, rtz # perform operation
fmul.d f28, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fmul.d f10, f21, f25, dyn # perform operation
fmul.d f10, f21, f25, rdn # perform operation
fmul.d f10, f21, f25, rmm # perform operation
fmul.d f10, f21, f25, rne # perform operation
fmul.d f10, f21, f25, rtz # perform operation
fmul.d f10, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f10, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f10, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f10, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f10, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f10, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fmul.d f16, f27, f1, dyn # perform operation
fmul.d f16, f27, f1, rdn # perform operation
fmul.d f16, f27, f1, rmm # perform operation
fmul.d f16, f27, f1, rne # perform operation
fmul.d f16, f27, f1, rtz # perform operation
fmul.d f16, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fmul.d f25, f28, f12, dyn # perform operation
fmul.d f25, f28, f12, rdn # perform operation
fmul.d f25, f28, f12, rmm # perform operation
fmul.d f25, f28, f12, rne # perform operation
fmul.d f25, f28, f12, rtz # perform operation
fmul.d f25, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f25, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f25, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f25, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f25, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f25, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
fmul.d f20, f8, f15, dyn # perform operation
fmul.d f20, f8, f15, rdn # perform operation
fmul.d f20, f8, f15, rmm # perform operation
fmul.d f20, f8, f15, rne # perform operation
fmul.d f20, f8, f15, rtz # perform operation
fmul.d f20, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fmul.d f5, f25, f27, dyn # perform operation
fmul.d f5, f25, f27, rdn # perform operation
fmul.d f5, f25, f27, rmm # perform operation
fmul.d f5, f25, f27, rne # perform operation
fmul.d f5, f25, f27, rtz # perform operation
fmul.d f5, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fmul.d f19, f25, f24, dyn # perform operation
fmul.d f19, f25, f24, rdn # perform operation
fmul.d f19, f25, f24, rmm # perform operation
fmul.d f19, f25, f24, rne # perform operation
fmul.d f19, f25, f24, rtz # perform operation
fmul.d f19, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f19, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f19, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f19, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f19, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f19, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fmul.d f22, f8, f3, dyn # perform operation
fmul.d f22, f8, f3, rdn # perform operation
fmul.d f22, f8, f3, rmm # perform operation
fmul.d f22, f8, f3, rne # perform operation
fmul.d f22, f8, f3, rtz # perform operation
fmul.d f22, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f22, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f22, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fmul.d f24, f26, f7, dyn # perform operation
fmul.d f24, f26, f7, rdn # perform operation
fmul.d f24, f26, f7, rmm # perform operation
fmul.d f24, f26, f7, rne # perform operation
fmul.d f24, f26, f7, rtz # perform operation
fmul.d f24, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f24, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f24, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
fmul.d f17, f21, f19, dyn # perform operation
fmul.d f17, f21, f19, rdn # perform operation
fmul.d f17, f21, f19, rmm # perform operation
fmul.d f17, f21, f19, rne # perform operation
fmul.d f17, f21, f19, rtz # perform operation
fmul.d f17, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fmul.d f16, f14, f18, dyn # perform operation
fmul.d f16, f14, f18, rdn # perform operation
fmul.d f16, f14, f18, rmm # perform operation
fmul.d f16, f14, f18, rne # perform operation
fmul.d f16, f14, f18, rtz # perform operation
fmul.d f16, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
fmul.d f18, f26, f27, dyn # perform operation
fmul.d f18, f26, f27, rdn # perform operation
fmul.d f18, f26, f27, rmm # perform operation
fmul.d f18, f26, f27, rne # perform operation
fmul.d f18, f26, f27, rtz # perform operation
fmul.d f18, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f18, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f18, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f18, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f18, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f18, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000001 from memory into f23
fmul.d f27, f31, f23, dyn # perform operation
fmul.d f27, f31, f23, rdn # perform operation
fmul.d f27, f31, f23, rmm # perform operation
fmul.d f27, f31, f23, rne # perform operation
fmul.d f27, f31, f23, rtz # perform operation
fmul.d f27, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fmul.d f3, f10, f29, dyn # perform operation
fmul.d f3, f10, f29, rdn # perform operation
fmul.d f3, f10, f29, rmm # perform operation
fmul.d f3, f10, f29, rne # perform operation
fmul.d f3, f10, f29, rtz # perform operation
fmul.d f3, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fmul.d f9, f8, f28, dyn # perform operation
fmul.d f9, f8, f28, rdn # perform operation
fmul.d f9, f8, f28, rmm # perform operation
fmul.d f9, f8, f28, rne # perform operation
fmul.d f9, f8, f28, rtz # perform operation
fmul.d f9, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f8, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fmul.d f9, f25, f28, dyn # perform operation
fmul.d f9, f25, f28, rdn # perform operation
fmul.d f9, f25, f28, rmm # perform operation
fmul.d f9, f25, f28, rne # perform operation
fmul.d f9, f25, f28, rtz # perform operation
fmul.d f9, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fmul.d f5, f12, f16, dyn # perform operation
fmul.d f5, f12, f16, rdn # perform operation
fmul.d f5, f12, f16, rmm # perform operation
fmul.d f5, f12, f16, rne # perform operation
fmul.d f5, f12, f16, rtz # perform operation
fmul.d f5, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f5, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f5, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f5, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f5, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f5, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fmul.d f11, f5, f16, dyn # perform operation
fmul.d f11, f5, f16, rdn # perform operation
fmul.d f11, f5, f16, rmm # perform operation
fmul.d f11, f5, f16, rne # perform operation
fmul.d f11, f5, f16, rtz # perform operation
fmul.d f11, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
fmul.d f31, f26, f3, dyn # perform operation
fmul.d f31, f26, f3, rdn # perform operation
fmul.d f31, f26, f3, rmm # perform operation
fmul.d f31, f26, f3, rne # perform operation
fmul.d f31, f26, f3, rtz # perform operation
fmul.d f31, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f31, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f31, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f31, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f31, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f31, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fmul.d f20, f31, f29, dyn # perform operation
fmul.d f20, f31, f29, rdn # perform operation
fmul.d f20, f31, f29, rmm # perform operation
fmul.d f20, f31, f29, rne # perform operation
fmul.d f20, f31, f29, rtz # perform operation
fmul.d f20, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f31, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fmul.d f23, f6, f27, dyn # perform operation
fmul.d f23, f6, f27, rdn # perform operation
fmul.d f23, f6, f27, rmm # perform operation
fmul.d f23, f6, f27, rne # perform operation
fmul.d f23, f6, f27, rtz # perform operation
fmul.d f23, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fmul.d f3, f16, f2, dyn # perform operation
fmul.d f3, f16, f2, rdn # perform operation
fmul.d f3, f16, f2, rmm # perform operation
fmul.d f3, f16, f2, rne # perform operation
fmul.d f3, f16, f2, rtz # perform operation
fmul.d f3, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f3, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f3, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f3, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f3, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f3, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fmul.d f17, f6, f31, dyn # perform operation
fmul.d f17, f6, f31, rdn # perform operation
fmul.d f17, f6, f31, rmm # perform operation
fmul.d f17, f6, f31, rne # perform operation
fmul.d f17, f6, f31, rtz # perform operation
fmul.d f17, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f17, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f17, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f17, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f17, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f17, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
fmul.d f29, f26, f30, dyn # perform operation
fmul.d f29, f26, f30, rdn # perform operation
fmul.d f29, f26, f30, rmm # perform operation
fmul.d f29, f26, f30, rne # perform operation
fmul.d f29, f26, f30, rtz # perform operation
fmul.d f29, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fmul.d f14, f6, f21, dyn # perform operation
fmul.d f14, f6, f21, rdn # perform operation
fmul.d f14, f6, f21, rmm # perform operation
fmul.d f14, f6, f21, rne # perform operation
fmul.d f14, f6, f21, rtz # perform operation
fmul.d f14, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fmul.d f30, f18, f17, dyn # perform operation
fmul.d f30, f18, f17, rdn # perform operation
fmul.d f30, f18, f17, rmm # perform operation
fmul.d f30, f18, f17, rne # perform operation
fmul.d f30, f18, f17, rtz # perform operation
fmul.d f30, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fmul.d f26, f23, f19, dyn # perform operation
fmul.d f26, f23, f19, rdn # perform operation
fmul.d f26, f23, f19, rmm # perform operation
fmul.d f26, f23, f19, rne # perform operation
fmul.d f26, f23, f19, rtz # perform operation
fmul.d f26, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fmul.d f15, f1, f8, dyn # perform operation
fmul.d f15, f1, f8, rdn # perform operation
fmul.d f15, f1, f8, rmm # perform operation
fmul.d f15, f1, f8, rne # perform operation
fmul.d f15, f1, f8, rtz # perform operation
fmul.d f15, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f15, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f15, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f15, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f15, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f15, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fmul.d f20, f1, f3, dyn # perform operation
fmul.d f20, f1, f3, rdn # perform operation
fmul.d f20, f1, f3, rmm # perform operation
fmul.d f20, f1, f3, rne # perform operation
fmul.d f20, f1, f3, rtz # perform operation
fmul.d f20, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f20, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fmul.d f30, f20, f16, dyn # perform operation
fmul.d f30, f20, f16, rdn # perform operation
fmul.d f30, f20, f16, rmm # perform operation
fmul.d f30, f20, f16, rne # perform operation
fmul.d f30, f20, f16, rtz # perform operation
fmul.d f30, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f30, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f30, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f30, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f30, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f30, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
fmul.d f27, f15, f6, dyn # perform operation
fmul.d f27, f15, f6, rdn # perform operation
fmul.d f27, f15, f6, rmm # perform operation
fmul.d f27, f15, f6, rne # perform operation
fmul.d f27, f15, f6, rtz # perform operation
fmul.d f27, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fmul.d f13, f24, f3, dyn # perform operation
fmul.d f13, f24, f3, rdn # perform operation
fmul.d f13, f24, f3, rmm # perform operation
fmul.d f13, f24, f3, rne # perform operation
fmul.d f13, f24, f3, rtz # perform operation
fmul.d f13, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f13, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f13, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f13, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f13, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f13, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fmul.d f29, f22, f16, dyn # perform operation
fmul.d f29, f22, f16, rdn # perform operation
fmul.d f29, f22, f16, rmm # perform operation
fmul.d f29, f22, f16, rne # perform operation
fmul.d f29, f22, f16, rtz # perform operation
fmul.d f29, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f29, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f29, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f29, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f29, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f29, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fmul.d f26, f9, f25, dyn # perform operation
fmul.d f26, f9, f25, rdn # perform operation
fmul.d f26, f9, f25, rmm # perform operation
fmul.d f26, f9, f25, rne # perform operation
fmul.d f26, f9, f25, rtz # perform operation
fmul.d f26, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f26, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f26, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f26, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f26, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f26, f9, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fmul.d f11, f15, f13, dyn # perform operation
fmul.d f11, f15, f13, rdn # perform operation
fmul.d f11, f15, f13, rmm # perform operation
fmul.d f11, f15, f13, rne # perform operation
fmul.d f11, f15, f13, rtz # perform operation
fmul.d f11, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f11, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f11, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f11, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f11, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f11, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fmul.d f16, f7, f23, dyn # perform operation
fmul.d f16, f7, f23, rdn # perform operation
fmul.d f16, f7, f23, rmm # perform operation
fmul.d f16, f7, f23, rne # perform operation
fmul.d f16, f7, f23, rtz # perform operation
fmul.d f16, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f16, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f16, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fmul.d f7, f10, f27, dyn # perform operation
fmul.d f7, f10, f27, rdn # perform operation
fmul.d f7, f10, f27, rmm # perform operation
fmul.d f7, f10, f27, rne # perform operation
fmul.d f7, f10, f27, rtz # perform operation
fmul.d f7, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f7, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f7, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f7, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f7, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f7, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
fmul.d f14, f7, f19, dyn # perform operation
fmul.d f14, f7, f19, rdn # perform operation
fmul.d f14, f7, f19, rmm # perform operation
fmul.d f14, f7, f19, rne # perform operation
fmul.d f14, f7, f19, rtz # perform operation
fmul.d f14, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f14, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f14, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f14, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f14, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f14, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fmul.d f27, f9, f20, dyn # perform operation
fmul.d f27, f9, f20, rdn # perform operation
fmul.d f27, f9, f20, rmm # perform operation
fmul.d f27, f9, f20, rne # perform operation
fmul.d f27, f9, f20, rtz # perform operation
fmul.d f27, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f27, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f27, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f27, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f27, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f27, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fmul.d f9, f15, f19, dyn # perform operation
fmul.d f9, f15, f19, rdn # perform operation
fmul.d f9, f15, f19, rmm # perform operation
fmul.d f9, f15, f19, rne # perform operation
fmul.d f9, f15, f19, rtz # perform operation
fmul.d f9, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f9, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f9, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f9, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f9, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f9, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000001 from memory into f11
fmul.d f28, f19, f11, dyn # perform operation
fmul.d f28, f19, f11, rdn # perform operation
fmul.d f28, f19, f11, rmm # perform operation
fmul.d f28, f19, f11, rne # perform operation
fmul.d f28, f19, f11, rtz # perform operation
fmul.d f28, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f28, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f28, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f28, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f28, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f28, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fmul.d f23, f6, f1, dyn # perform operation
fmul.d f23, f6, f1, rdn # perform operation
fmul.d f23, f6, f1, rmm # perform operation
fmul.d f23, f6, f1, rne # perform operation
fmul.d f23, f6, f1, rtz # perform operation
fmul.d f23, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f23, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f23, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f23, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f23, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f23, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fmul.d f2, f14, f31, dyn # perform operation
fmul.d f2, f14, f31, rdn # perform operation
fmul.d f2, f14, f31, rmm # perform operation
fmul.d f2, f14, f31, rne # perform operation
fmul.d f2, f14, f31, rtz # perform operation
fmul.d f2, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmul.d f2, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmul.d f2, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmul.d f2, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmul.d f2, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmul.d f2, f14, f31 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
