///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/D//WALLY-COV-fsub.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:22.022077
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fsub.d f25, f11, f4 # perform first operation
fsub.d f3, f25, f21 # perform second operation

# Testcase cmp_gpr_hazard raw test
fsub.d f8, f9, f1 # perform first operation
fsub.d f8, f9, f8 # perform second operation

# Testcase cmp_gpr_hazard waw test
fsub.d f29, f28, f30 # perform first operation
fsub.d f29, f9, f26 # perform second operation

# Testcase cmp_gpr_hazard waw test
fsub.d f4, f17, f1 # perform first operation
fsub.d f4, f28, f8 # perform second operation

# Testcase cmp_gpr_hazard war test
fsub.d f5, f23, f12 # perform first operation
fsub.d f23, f22, f28 # perform second operation

# Testcase cmp_gpr_hazard war test
fsub.d f19, f29, f26 # perform first operation
fsub.d f26, f7, f19 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xfe646c73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3b02948 # load x3 with 32 MSBs 0x00000000b3b02948
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3b02948
sw x3, 0(x2) # store x3 (0xb3b02948) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000b3b02948 from memory into f0
li x3, 0xffcf5e32 # load x3 with 32 MSBs 0x00000000ffcf5e32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffcf5e32
sw x3, 0(x2) # store x3 (0xffcf5e32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ffcf5e32 from memory into f6
fsub.d f0, f0, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0xc297cba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x085a0e7d # load x3 with 32 MSBs 0x00000000085a0e7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000085a0e7d
sw x3, 0(x2) # store x3 (0x085a0e7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000085a0e7d from memory into f1
li x3, 0x50adfcd9 # load x3 with 32 MSBs 0x0000000050adfcd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050adfcd9
sw x3, 0(x2) # store x3 (0x50adfcd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000050adfcd9 from memory into f3
fsub.d f1, f1, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x5ce17fc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9079f919 # load x3 with 32 MSBs 0x000000009079f919
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009079f919
sw x3, 0(x2) # store x3 (0x9079f919) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009079f919 from memory into f2
li x3, 0xf70bc01d # load x3 with 32 MSBs 0x00000000f70bc01d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f70bc01d
sw x3, 0(x2) # store x3 (0xf70bc01d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f70bc01d from memory into f7
fsub.d f2, f2, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0xb5101b4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad631cdc # load x3 with 32 MSBs 0x00000000ad631cdc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad631cdc
sw x3, 0(x2) # store x3 (0xad631cdc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ad631cdc from memory into f3
li x3, 0xdc25e159 # load x3 with 32 MSBs 0x00000000dc25e159
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc25e159
sw x3, 0(x2) # store x3 (0xdc25e159) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000dc25e159 from memory into f16
fsub.d f3, f3, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xc4d50285 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2849681e # load x3 with 32 MSBs 0x000000002849681e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002849681e
sw x3, 0(x2) # store x3 (0x2849681e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002849681e from memory into f4
li x3, 0x8c30c3d0 # load x3 with 32 MSBs 0x000000008c30c3d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c30c3d0
sw x3, 0(x2) # store x3 (0x8c30c3d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008c30c3d0 from memory into f17
fsub.d f4, f4, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x793b072c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c555db5 # load x3 with 32 MSBs 0x000000003c555db5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c555db5
sw x3, 0(x2) # store x3 (0x3c555db5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003c555db5 from memory into f5
li x3, 0x703fcf2a # load x3 with 32 MSBs 0x00000000703fcf2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000703fcf2a
sw x3, 0(x2) # store x3 (0x703fcf2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000703fcf2a from memory into f14
fsub.d f5, f5, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xc165f0a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17d5144c # load x3 with 32 MSBs 0x0000000017d5144c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017d5144c
sw x3, 0(x2) # store x3 (0x17d5144c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000017d5144c from memory into f6
li x3, 0xdd8fe6f0 # load x3 with 32 MSBs 0x00000000dd8fe6f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd8fe6f0
sw x3, 0(x2) # store x3 (0xdd8fe6f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000dd8fe6f0 from memory into f14
fsub.d f6, f6, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x5736603e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4bcf3347 # load x3 with 32 MSBs 0x000000004bcf3347
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bcf3347
sw x3, 0(x2) # store x3 (0x4bcf3347) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004bcf3347 from memory into f7
li x3, 0xa000b130 # load x3 with 32 MSBs 0x00000000a000b130
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a000b130
sw x3, 0(x2) # store x3 (0xa000b130) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a000b130 from memory into f2
fsub.d f7, f7, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0xf2f373d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0525252 # load x3 with 32 MSBs 0x00000000e0525252
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0525252
sw x3, 0(x2) # store x3 (0xe0525252) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e0525252 from memory into f8
li x3, 0x67e86b37 # load x3 with 32 MSBs 0x0000000067e86b37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067e86b37
sw x3, 0(x2) # store x3 (0x67e86b37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000067e86b37 from memory into f22
fsub.d f8, f8, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x4917a19c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16e15902 # load x3 with 32 MSBs 0x0000000016e15902
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016e15902
sw x3, 0(x2) # store x3 (0x16e15902) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000016e15902 from memory into f9
li x3, 0xf3da1e7d # load x3 with 32 MSBs 0x00000000f3da1e7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3da1e7d
sw x3, 0(x2) # store x3 (0xf3da1e7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f3da1e7d from memory into f20
fsub.d f9, f9, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x2a2a1d4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x736ef91e # load x3 with 32 MSBs 0x00000000736ef91e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000736ef91e
sw x3, 0(x2) # store x3 (0x736ef91e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000736ef91e from memory into f10
li x3, 0x7e6be091 # load x3 with 32 MSBs 0x000000007e6be091
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e6be091
sw x3, 0(x2) # store x3 (0x7e6be091) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007e6be091 from memory into f10
fsub.d f10, f10, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x304ffef7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa548dfe0 # load x3 with 32 MSBs 0x00000000a548dfe0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a548dfe0
sw x3, 0(x2) # store x3 (0xa548dfe0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000a548dfe0 from memory into f11
li x3, 0xa131790f # load x3 with 32 MSBs 0x00000000a131790f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a131790f
sw x3, 0(x2) # store x3 (0xa131790f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a131790f from memory into f4
fsub.d f11, f11, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x883eb8c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd857966f # load x3 with 32 MSBs 0x00000000d857966f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d857966f
sw x3, 0(x2) # store x3 (0xd857966f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d857966f from memory into f12
li x3, 0x7e1c5382 # load x3 with 32 MSBs 0x000000007e1c5382
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e1c5382
sw x3, 0(x2) # store x3 (0x7e1c5382) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007e1c5382 from memory into f21
fsub.d f12, f12, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x5ec76853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa15f129b # load x3 with 32 MSBs 0x00000000a15f129b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a15f129b
sw x3, 0(x2) # store x3 (0xa15f129b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a15f129b from memory into f13
li x3, 0x804d1d2a # load x3 with 32 MSBs 0x00000000804d1d2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000804d1d2a
sw x3, 0(x2) # store x3 (0x804d1d2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000804d1d2a from memory into f5
fsub.d f13, f13, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0xbc524ae5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3de8d3c # load x3 with 32 MSBs 0x00000000f3de8d3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3de8d3c
sw x3, 0(x2) # store x3 (0xf3de8d3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f3de8d3c from memory into f14
li x3, 0xbc7c129e # load x3 with 32 MSBs 0x00000000bc7c129e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc7c129e
sw x3, 0(x2) # store x3 (0xbc7c129e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000bc7c129e from memory into f5
fsub.d f14, f14, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x0a7a0d27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8731724 # load x3 with 32 MSBs 0x00000000b8731724
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8731724
sw x3, 0(x2) # store x3 (0xb8731724) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b8731724 from memory into f15
li x3, 0xe49f9fbf # load x3 with 32 MSBs 0x00000000e49f9fbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e49f9fbf
sw x3, 0(x2) # store x3 (0xe49f9fbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e49f9fbf from memory into f27
fsub.d f15, f15, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x22e33737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc517ba81 # load x3 with 32 MSBs 0x00000000c517ba81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c517ba81
sw x3, 0(x2) # store x3 (0xc517ba81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c517ba81 from memory into f16
li x3, 0x8f3abbd5 # load x3 with 32 MSBs 0x000000008f3abbd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f3abbd5
sw x3, 0(x2) # store x3 (0x8f3abbd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008f3abbd5 from memory into f7
fsub.d f16, f16, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x1c0a0551 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x162b98f3 # load x3 with 32 MSBs 0x00000000162b98f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000162b98f3
sw x3, 0(x2) # store x3 (0x162b98f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000162b98f3 from memory into f17
li x3, 0xbe1db823 # load x3 with 32 MSBs 0x00000000be1db823
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be1db823
sw x3, 0(x2) # store x3 (0xbe1db823) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000be1db823 from memory into f26
fsub.d f17, f17, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x1b05d123 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf45fb062 # load x3 with 32 MSBs 0x00000000f45fb062
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f45fb062
sw x3, 0(x2) # store x3 (0xf45fb062) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f45fb062 from memory into f18
li x3, 0xe195691f # load x3 with 32 MSBs 0x00000000e195691f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e195691f
sw x3, 0(x2) # store x3 (0xe195691f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e195691f from memory into f30
fsub.d f18, f18, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x45441e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d1da020 # load x3 with 32 MSBs 0x000000005d1da020
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d1da020
sw x3, 0(x2) # store x3 (0x5d1da020) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000005d1da020 from memory into f19
li x3, 0x9b9ca7ce # load x3 with 32 MSBs 0x000000009b9ca7ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b9ca7ce
sw x3, 0(x2) # store x3 (0x9b9ca7ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009b9ca7ce from memory into f10
fsub.d f19, f19, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0xdd06877b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9fd84f14 # load x3 with 32 MSBs 0x000000009fd84f14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fd84f14
sw x3, 0(x2) # store x3 (0x9fd84f14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000009fd84f14 from memory into f20
li x3, 0xd3ce3825 # load x3 with 32 MSBs 0x00000000d3ce3825
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3ce3825
sw x3, 0(x2) # store x3 (0xd3ce3825) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d3ce3825 from memory into f30
fsub.d f20, f20, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x1d6cec85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff75e37a # load x3 with 32 MSBs 0x00000000ff75e37a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff75e37a
sw x3, 0(x2) # store x3 (0xff75e37a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ff75e37a from memory into f21
li x3, 0x92d87099 # load x3 with 32 MSBs 0x0000000092d87099
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092d87099
sw x3, 0(x2) # store x3 (0x92d87099) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000092d87099 from memory into f14
fsub.d f21, f21, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0x89876fd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa377abb7 # load x3 with 32 MSBs 0x00000000a377abb7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a377abb7
sw x3, 0(x2) # store x3 (0xa377abb7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000a377abb7 from memory into f22
li x3, 0x8c2b43a3 # load x3 with 32 MSBs 0x000000008c2b43a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c2b43a3
sw x3, 0(x2) # store x3 (0x8c2b43a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008c2b43a3 from memory into f23
fsub.d f22, f22, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x80f7b1bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe78c20e6 # load x3 with 32 MSBs 0x00000000e78c20e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e78c20e6
sw x3, 0(x2) # store x3 (0xe78c20e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e78c20e6 from memory into f23
li x3, 0xe8413639 # load x3 with 32 MSBs 0x00000000e8413639
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8413639
sw x3, 0(x2) # store x3 (0xe8413639) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e8413639 from memory into f5
fsub.d f23, f23, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x71aa6ece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98fc752c # load x3 with 32 MSBs 0x0000000098fc752c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098fc752c
sw x3, 0(x2) # store x3 (0x98fc752c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000098fc752c from memory into f24
li x3, 0x08284c24 # load x3 with 32 MSBs 0x0000000008284c24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008284c24
sw x3, 0(x2) # store x3 (0x08284c24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000008284c24 from memory into f20
fsub.d f24, f24, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x087808df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x04a797d3 # load x3 with 32 MSBs 0x0000000004a797d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004a797d3
sw x3, 0(x2) # store x3 (0x04a797d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000004a797d3 from memory into f25
li x3, 0x1e71bbed # load x3 with 32 MSBs 0x000000001e71bbed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e71bbed
sw x3, 0(x2) # store x3 (0x1e71bbed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001e71bbed from memory into f28
fsub.d f25, f25, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0xbb669113 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77dfa3da # load x3 with 32 MSBs 0x0000000077dfa3da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077dfa3da
sw x3, 0(x2) # store x3 (0x77dfa3da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000077dfa3da from memory into f26
li x3, 0x3a02f627 # load x3 with 32 MSBs 0x000000003a02f627
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a02f627
sw x3, 0(x2) # store x3 (0x3a02f627) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003a02f627 from memory into f9
fsub.d f26, f26, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x9b654b72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x65c85b01 # load x3 with 32 MSBs 0x0000000065c85b01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065c85b01
sw x3, 0(x2) # store x3 (0x65c85b01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000065c85b01 from memory into f27
li x3, 0xc6fd9f54 # load x3 with 32 MSBs 0x00000000c6fd9f54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6fd9f54
sw x3, 0(x2) # store x3 (0xc6fd9f54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c6fd9f54 from memory into f23
fsub.d f27, f27, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xd4482569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffa53793 # load x3 with 32 MSBs 0x00000000ffa53793
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffa53793
sw x3, 0(x2) # store x3 (0xffa53793) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ffa53793 from memory into f28
li x3, 0x483ad430 # load x3 with 32 MSBs 0x00000000483ad430
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000483ad430
sw x3, 0(x2) # store x3 (0x483ad430) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000483ad430 from memory into f24
fsub.d f28, f28, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xdbf49ac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd8fa24be # load x3 with 32 MSBs 0x00000000d8fa24be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8fa24be
sw x3, 0(x2) # store x3 (0xd8fa24be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d8fa24be from memory into f29
li x3, 0x1acb84d7 # load x3 with 32 MSBs 0x000000001acb84d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001acb84d7
sw x3, 0(x2) # store x3 (0x1acb84d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000001acb84d7 from memory into f3
fsub.d f29, f29, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x29296a67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x151f6116 # load x3 with 32 MSBs 0x00000000151f6116
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000151f6116
sw x3, 0(x2) # store x3 (0x151f6116) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000151f6116 from memory into f30
li x3, 0x33bb905e # load x3 with 32 MSBs 0x0000000033bb905e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033bb905e
sw x3, 0(x2) # store x3 (0x33bb905e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000033bb905e from memory into f30
fsub.d f30, f30, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xe47f6432 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e07c794 # load x3 with 32 MSBs 0x000000006e07c794
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e07c794
sw x3, 0(x2) # store x3 (0x6e07c794) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006e07c794 from memory into f31
li x3, 0x0f190663 # load x3 with 32 MSBs 0x000000000f190663
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f190663
sw x3, 0(x2) # store x3 (0x0f190663) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000f190663 from memory into f4
fsub.d f31, f31, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0xcb1da988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5fcb35e # load x3 with 32 MSBs 0x00000000d5fcb35e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5fcb35e
sw x3, 0(x2) # store x3 (0xd5fcb35e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d5fcb35e from memory into f5
li x3, 0x6ebb0a0b # load x3 with 32 MSBs 0x000000006ebb0a0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ebb0a0b
sw x3, 0(x2) # store x3 (0x6ebb0a0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000006ebb0a0b from memory into f0
fsub.d f0, f5, f0 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x35f178d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x07a777f0 # load x3 with 32 MSBs 0x0000000007a777f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007a777f0
sw x3, 0(x2) # store x3 (0x07a777f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000007a777f0 from memory into f29
li x3, 0x9185aa57 # load x3 with 32 MSBs 0x000000009185aa57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009185aa57
sw x3, 0(x2) # store x3 (0x9185aa57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009185aa57 from memory into f1
fsub.d f1, f29, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x07f94111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2d4a0b8 # load x3 with 32 MSBs 0x00000000a2d4a0b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2d4a0b8
sw x3, 0(x2) # store x3 (0xa2d4a0b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a2d4a0b8 from memory into f28
li x3, 0x37c0d280 # load x3 with 32 MSBs 0x0000000037c0d280
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037c0d280
sw x3, 0(x2) # store x3 (0x37c0d280) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000037c0d280 from memory into f2
fsub.d f2, f28, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x504546a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x818085d3 # load x3 with 32 MSBs 0x00000000818085d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000818085d3
sw x3, 0(x2) # store x3 (0x818085d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000818085d3 from memory into f20
li x3, 0xa4a15552 # load x3 with 32 MSBs 0x00000000a4a15552
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4a15552
sw x3, 0(x2) # store x3 (0xa4a15552) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a4a15552 from memory into f3
fsub.d f3, f20, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x802fd380 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xedd360e2 # load x3 with 32 MSBs 0x00000000edd360e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edd360e2
sw x3, 0(x2) # store x3 (0xedd360e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000edd360e2 from memory into f18
li x3, 0x98f2fffa # load x3 with 32 MSBs 0x0000000098f2fffa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098f2fffa
sw x3, 0(x2) # store x3 (0x98f2fffa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000098f2fffa from memory into f4
fsub.d f4, f18, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0xbdf86bfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x052a0eca # load x3 with 32 MSBs 0x00000000052a0eca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000052a0eca
sw x3, 0(x2) # store x3 (0x052a0eca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000052a0eca from memory into f24
li x3, 0x99629225 # load x3 with 32 MSBs 0x0000000099629225
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099629225
sw x3, 0(x2) # store x3 (0x99629225) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000099629225 from memory into f5
fsub.d f5, f24, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x10487324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x772793d0 # load x3 with 32 MSBs 0x00000000772793d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000772793d0
sw x3, 0(x2) # store x3 (0x772793d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000772793d0 from memory into f11
li x3, 0x609560c1 # load x3 with 32 MSBs 0x00000000609560c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000609560c1
sw x3, 0(x2) # store x3 (0x609560c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000609560c1 from memory into f6
fsub.d f6, f11, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x8f1c54d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17edafe6 # load x3 with 32 MSBs 0x0000000017edafe6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017edafe6
sw x3, 0(x2) # store x3 (0x17edafe6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000017edafe6 from memory into f5
li x3, 0x9028e67e # load x3 with 32 MSBs 0x000000009028e67e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009028e67e
sw x3, 0(x2) # store x3 (0x9028e67e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009028e67e from memory into f7
fsub.d f7, f5, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x2fcbb09a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x668a2020 # load x3 with 32 MSBs 0x00000000668a2020
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000668a2020
sw x3, 0(x2) # store x3 (0x668a2020) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000668a2020 from memory into f2
li x3, 0x605e5a07 # load x3 with 32 MSBs 0x00000000605e5a07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000605e5a07
sw x3, 0(x2) # store x3 (0x605e5a07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000605e5a07 from memory into f8
fsub.d f8, f2, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x2376ed4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0263cfa # load x3 with 32 MSBs 0x00000000c0263cfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0263cfa
sw x3, 0(x2) # store x3 (0xc0263cfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c0263cfa from memory into f31
li x3, 0x707b1aa7 # load x3 with 32 MSBs 0x00000000707b1aa7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000707b1aa7
sw x3, 0(x2) # store x3 (0x707b1aa7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000707b1aa7 from memory into f9
fsub.d f9, f31, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x082b8ec8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x892764d3 # load x3 with 32 MSBs 0x00000000892764d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000892764d3
sw x3, 0(x2) # store x3 (0x892764d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000892764d3 from memory into f7
li x3, 0x78f20629 # load x3 with 32 MSBs 0x0000000078f20629
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078f20629
sw x3, 0(x2) # store x3 (0x78f20629) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000078f20629 from memory into f10
fsub.d f10, f7, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x1744656f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d59de9d # load x3 with 32 MSBs 0x000000003d59de9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d59de9d
sw x3, 0(x2) # store x3 (0x3d59de9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003d59de9d from memory into f2
li x3, 0xbc03b7ae # load x3 with 32 MSBs 0x00000000bc03b7ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc03b7ae
sw x3, 0(x2) # store x3 (0xbc03b7ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bc03b7ae from memory into f11
fsub.d f11, f2, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x7965a4c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f1736fa # load x3 with 32 MSBs 0x000000006f1736fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f1736fa
sw x3, 0(x2) # store x3 (0x6f1736fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006f1736fa from memory into f24
li x3, 0x2bb8c262 # load x3 with 32 MSBs 0x000000002bb8c262
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bb8c262
sw x3, 0(x2) # store x3 (0x2bb8c262) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002bb8c262 from memory into f12
fsub.d f12, f24, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x3c436049 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x825bca2b # load x3 with 32 MSBs 0x00000000825bca2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000825bca2b
sw x3, 0(x2) # store x3 (0x825bca2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000825bca2b from memory into f28
li x3, 0x4daec9e9 # load x3 with 32 MSBs 0x000000004daec9e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004daec9e9
sw x3, 0(x2) # store x3 (0x4daec9e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004daec9e9 from memory into f13
fsub.d f13, f28, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xb9b19943 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb57440c # load x3 with 32 MSBs 0x00000000eb57440c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb57440c
sw x3, 0(x2) # store x3 (0xeb57440c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000eb57440c from memory into f7
li x3, 0x2a513902 # load x3 with 32 MSBs 0x000000002a513902
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a513902
sw x3, 0(x2) # store x3 (0x2a513902) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002a513902 from memory into f14
fsub.d f14, f7, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x68e02984 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8525a6cc # load x3 with 32 MSBs 0x000000008525a6cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008525a6cc
sw x3, 0(x2) # store x3 (0x8525a6cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008525a6cc from memory into f6
li x3, 0x4f639a03 # load x3 with 32 MSBs 0x000000004f639a03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f639a03
sw x3, 0(x2) # store x3 (0x4f639a03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004f639a03 from memory into f15
fsub.d f15, f6, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x3e64f1a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbab3b8b0 # load x3 with 32 MSBs 0x00000000bab3b8b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bab3b8b0
sw x3, 0(x2) # store x3 (0xbab3b8b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000bab3b8b0 from memory into f25
li x3, 0x076c1df3 # load x3 with 32 MSBs 0x00000000076c1df3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000076c1df3
sw x3, 0(x2) # store x3 (0x076c1df3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000076c1df3 from memory into f16
fsub.d f16, f25, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0xf3d5eef8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x056b92cb # load x3 with 32 MSBs 0x00000000056b92cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000056b92cb
sw x3, 0(x2) # store x3 (0x056b92cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000056b92cb from memory into f20
li x3, 0x95d823ff # load x3 with 32 MSBs 0x0000000095d823ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095d823ff
sw x3, 0(x2) # store x3 (0x95d823ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000095d823ff from memory into f17
fsub.d f17, f20, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x9525c94f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f880989 # load x3 with 32 MSBs 0x000000009f880989
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f880989
sw x3, 0(x2) # store x3 (0x9f880989) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009f880989 from memory into f22
li x3, 0x0fea0964 # load x3 with 32 MSBs 0x000000000fea0964
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fea0964
sw x3, 0(x2) # store x3 (0x0fea0964) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000000fea0964 from memory into f18
fsub.d f18, f22, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xd993a99d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3658527f # load x3 with 32 MSBs 0x000000003658527f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003658527f
sw x3, 0(x2) # store x3 (0x3658527f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003658527f from memory into f20
li x3, 0x6c489827 # load x3 with 32 MSBs 0x000000006c489827
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c489827
sw x3, 0(x2) # store x3 (0x6c489827) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000006c489827 from memory into f19
fsub.d f19, f20, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0xebf0a6fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6a7d61b # load x3 with 32 MSBs 0x00000000a6a7d61b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6a7d61b
sw x3, 0(x2) # store x3 (0xa6a7d61b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a6a7d61b from memory into f26
li x3, 0xbff6b856 # load x3 with 32 MSBs 0x00000000bff6b856
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bff6b856
sw x3, 0(x2) # store x3 (0xbff6b856) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000bff6b856 from memory into f20
fsub.d f20, f26, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x4b13c246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e99dce3 # load x3 with 32 MSBs 0x000000009e99dce3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e99dce3
sw x3, 0(x2) # store x3 (0x9e99dce3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000009e99dce3 from memory into f20
li x3, 0x51c11e9c # load x3 with 32 MSBs 0x0000000051c11e9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051c11e9c
sw x3, 0(x2) # store x3 (0x51c11e9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000051c11e9c from memory into f21
fsub.d f21, f20, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x1e684e4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb6768df5 # load x3 with 32 MSBs 0x00000000b6768df5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6768df5
sw x3, 0(x2) # store x3 (0xb6768df5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b6768df5 from memory into f5
li x3, 0xf566a9c8 # load x3 with 32 MSBs 0x00000000f566a9c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f566a9c8
sw x3, 0(x2) # store x3 (0xf566a9c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f566a9c8 from memory into f22
fsub.d f22, f5, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x2994e581 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa451fc79 # load x3 with 32 MSBs 0x00000000a451fc79
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a451fc79
sw x3, 0(x2) # store x3 (0xa451fc79) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a451fc79 from memory into f26
li x3, 0x982ed2c4 # load x3 with 32 MSBs 0x00000000982ed2c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000982ed2c4
sw x3, 0(x2) # store x3 (0x982ed2c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000982ed2c4 from memory into f23
fsub.d f23, f26, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x6b76b627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xccec22b2 # load x3 with 32 MSBs 0x00000000ccec22b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ccec22b2
sw x3, 0(x2) # store x3 (0xccec22b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ccec22b2 from memory into f7
li x3, 0x7f0a9f2d # load x3 with 32 MSBs 0x000000007f0a9f2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f0a9f2d
sw x3, 0(x2) # store x3 (0x7f0a9f2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007f0a9f2d from memory into f24
fsub.d f24, f7, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x7826b84c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa8653c34 # load x3 with 32 MSBs 0x00000000a8653c34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8653c34
sw x3, 0(x2) # store x3 (0xa8653c34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a8653c34 from memory into f9
li x3, 0x746149f3 # load x3 with 32 MSBs 0x00000000746149f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000746149f3
sw x3, 0(x2) # store x3 (0x746149f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000746149f3 from memory into f25
fsub.d f25, f9, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0xd715195b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x704f6ec5 # load x3 with 32 MSBs 0x00000000704f6ec5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000704f6ec5
sw x3, 0(x2) # store x3 (0x704f6ec5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000704f6ec5 from memory into f31
li x3, 0xcda8a5c7 # load x3 with 32 MSBs 0x00000000cda8a5c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cda8a5c7
sw x3, 0(x2) # store x3 (0xcda8a5c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000cda8a5c7 from memory into f26
fsub.d f26, f31, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xabb6fbef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x991c0d8c # load x3 with 32 MSBs 0x00000000991c0d8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000991c0d8c
sw x3, 0(x2) # store x3 (0x991c0d8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000991c0d8c from memory into f17
li x3, 0x63bafaa0 # load x3 with 32 MSBs 0x0000000063bafaa0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063bafaa0
sw x3, 0(x2) # store x3 (0x63bafaa0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000063bafaa0 from memory into f27
fsub.d f27, f17, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xd8fa3e97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0226d46a # load x3 with 32 MSBs 0x000000000226d46a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000226d46a
sw x3, 0(x2) # store x3 (0x0226d46a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000226d46a from memory into f7
li x3, 0xa34c98bb # load x3 with 32 MSBs 0x00000000a34c98bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a34c98bb
sw x3, 0(x2) # store x3 (0xa34c98bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a34c98bb from memory into f28
fsub.d f28, f7, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xb77fd8f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17db7b72 # load x3 with 32 MSBs 0x0000000017db7b72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017db7b72
sw x3, 0(x2) # store x3 (0x17db7b72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000017db7b72 from memory into f7
li x3, 0x80159136 # load x3 with 32 MSBs 0x0000000080159136
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080159136
sw x3, 0(x2) # store x3 (0x80159136) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000080159136 from memory into f29
fsub.d f29, f7, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0xf73e0e01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x72306a7c # load x3 with 32 MSBs 0x0000000072306a7c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072306a7c
sw x3, 0(x2) # store x3 (0x72306a7c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000072306a7c from memory into f16
li x3, 0x8e8de1fa # load x3 with 32 MSBs 0x000000008e8de1fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e8de1fa
sw x3, 0(x2) # store x3 (0x8e8de1fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008e8de1fa from memory into f30
fsub.d f30, f16, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x01592553 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfcd5a810 # load x3 with 32 MSBs 0x00000000fcd5a810
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcd5a810
sw x3, 0(x2) # store x3 (0xfcd5a810) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fcd5a810 from memory into f10
li x3, 0xbdf763e1 # load x3 with 32 MSBs 0x00000000bdf763e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdf763e1
sw x3, 0(x2) # store x3 (0xbdf763e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bdf763e1 from memory into f31
fsub.d f31, f10, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x23, 0x23e207d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x69825476 # load x3 with 32 MSBs 0x0000000069825476
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069825476
sw x3, 0(x2) # store x3 (0x69825476) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000069825476 from memory into f10
fsub.d f23, f29, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x7, 0x36d847d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0xced75fc8 # load x3 with 32 MSBs 0x00000000ced75fc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ced75fc8
sw x3, 0(x2) # store x3 (0xced75fc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ced75fc8 from memory into f18
fsub.d f7, f24, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x11, 0x514a04fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x1a0a309d # load x3 with 32 MSBs 0x000000001a0a309d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a0a309d
sw x3, 0(x2) # store x3 (0x1a0a309d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001a0a309d from memory into f17
fsub.d f11, f28, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x29, 0x9249a7e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x9d08575b # load x3 with 32 MSBs 0x000000009d08575b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d08575b
sw x3, 0(x2) # store x3 (0x9d08575b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009d08575b from memory into f18
fsub.d f29, f8, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x3, 0xe01c3d8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0xe9bc633d # load x3 with 32 MSBs 0x00000000e9bc633d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9bc633d
sw x3, 0(x2) # store x3 (0xe9bc633d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e9bc633d from memory into f9
fsub.d f3, f30, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x31, 0x90c563cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x1a3cc126 # load x3 with 32 MSBs 0x000000001a3cc126
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a3cc126
sw x3, 0(x2) # store x3 (0x1a3cc126) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000001a3cc126 from memory into f10
fsub.d f31, f8, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x23, 0xd8344610 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x530a9125 # load x3 with 32 MSBs 0x00000000530a9125
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000530a9125
sw x3, 0(x2) # store x3 (0x530a9125) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000530a9125 from memory into f8
fsub.d f23, f4, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x17, 0x4da22ef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x7137be53 # load x3 with 32 MSBs 0x000000007137be53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007137be53
sw x3, 0(x2) # store x3 (0x7137be53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007137be53 from memory into f20
fsub.d f17, f10, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x13, 0x7f0e8056 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0x80ad5ea9 # load x3 with 32 MSBs 0x0000000080ad5ea9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080ad5ea9
sw x3, 0(x2) # store x3 (0x80ad5ea9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000080ad5ea9 from memory into f16
fsub.d f13, f23, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x30, 0xafa77ddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0xef340483 # load x3 with 32 MSBs 0x00000000ef340483
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef340483
sw x3, 0(x2) # store x3 (0xef340483) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ef340483 from memory into f5
fsub.d f30, f4, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x2, 0x4a60fe01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x27d24c71 # load x3 with 32 MSBs 0x0000000027d24c71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027d24c71
sw x3, 0(x2) # store x3 (0x27d24c71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000027d24c71 from memory into f30
fsub.d f2, f15, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x11, 0xcaac519f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x134e0e61 # load x3 with 32 MSBs 0x00000000134e0e61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000134e0e61
sw x3, 0(x2) # store x3 (0x134e0e61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000134e0e61 from memory into f2
fsub.d f11, f29, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x5, 0xabb5f73b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0xeda18b5f # load x3 with 32 MSBs 0x00000000eda18b5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eda18b5f
sw x3, 0(x2) # store x3 (0xeda18b5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000eda18b5f from memory into f28
fsub.d f5, f23, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x3, 0x5876a6f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x15d38ea6 # load x3 with 32 MSBs 0x0000000015d38ea6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015d38ea6
sw x3, 0(x2) # store x3 (0x15d38ea6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000015d38ea6 from memory into f27
fsub.d f3, f22, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x4, 0x6f7c65cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xd4e704f6 # load x3 with 32 MSBs 0x00000000d4e704f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4e704f6
sw x3, 0(x2) # store x3 (0xd4e704f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000d4e704f6 from memory into f19
fsub.d f4, f9, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x6, 0x139b03c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x03af7679 # load x3 with 32 MSBs 0x0000000003af7679
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003af7679
sw x3, 0(x2) # store x3 (0x03af7679) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000003af7679 from memory into f27
fsub.d f6, f17, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x6, 0x2053435f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0x8d9ec26d # load x3 with 32 MSBs 0x000000008d9ec26d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d9ec26d
sw x3, 0(x2) # store x3 (0x8d9ec26d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008d9ec26d from memory into f4
fsub.d f6, f16, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x16, 0x3777b080 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x58fa96bd # load x3 with 32 MSBs 0x0000000058fa96bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058fa96bd
sw x3, 0(x2) # store x3 (0x58fa96bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000058fa96bd from memory into f8
fsub.d f16, f21, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x24, 0xa35468e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0xcf850b87 # load x3 with 32 MSBs 0x00000000cf850b87
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf850b87
sw x3, 0(x2) # store x3 (0xcf850b87) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000cf850b87 from memory into f13
fsub.d f24, f25, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x30, 0xff821397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0xf225674a # load x3 with 32 MSBs 0x00000000f225674a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f225674a
sw x3, 0(x2) # store x3 (0xf225674a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f225674a from memory into f5
fsub.d f30, f16, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x26, 0x85de56a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0x12e3a052 # load x3 with 32 MSBs 0x0000000012e3a052
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012e3a052
sw x3, 0(x2) # store x3 (0x12e3a052) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000012e3a052 from memory into f14
fsub.d f26, f5, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x22, 0x120723d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0xfcf5e179 # load x3 with 32 MSBs 0x00000000fcf5e179
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcf5e179
sw x3, 0(x2) # store x3 (0xfcf5e179) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000fcf5e179 from memory into f3
fsub.d f22, f5, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x20, 0x4e04fb91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0xbb09f956 # load x3 with 32 MSBs 0x00000000bb09f956
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb09f956
sw x3, 0(x2) # store x3 (0xbb09f956) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000bb09f956 from memory into f9
fsub.d f20, f11, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x9, 0xcee6ed72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0xbde1e837 # load x3 with 32 MSBs 0x00000000bde1e837
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bde1e837
sw x3, 0(x2) # store x3 (0xbde1e837) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bde1e837 from memory into f12
fsub.d f9, f15, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x10, 0x50840c35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x7035ec89 # load x3 with 32 MSBs 0x000000007035ec89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007035ec89
sw x3, 0(x2) # store x3 (0x7035ec89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007035ec89 from memory into f28
fsub.d f10, f22, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x3, 0x9da7f7cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0xda35eda6 # load x3 with 32 MSBs 0x00000000da35eda6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da35eda6
sw x3, 0(x2) # store x3 (0xda35eda6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000da35eda6 from memory into f23
fsub.d f3, f1, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x16, 0x1ccdee30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2515a7ed # load x3 with 32 MSBs 0x000000002515a7ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002515a7ed
sw x3, 0(x2) # store x3 (0x2515a7ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002515a7ed from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fsub.d f16, f26, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x19, 0x3b00df94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54a002c4 # load x3 with 32 MSBs 0x0000000054a002c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054a002c4
sw x3, 0(x2) # store x3 (0x54a002c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000054a002c4 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fsub.d f19, f29, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x28, 0xbfb53f0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27377007 # load x3 with 32 MSBs 0x0000000027377007
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027377007
sw x3, 0(x2) # store x3 (0x27377007) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000027377007 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fsub.d f28, f9, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x13, 0x59826e70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6874be18 # load x3 with 32 MSBs 0x000000006874be18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006874be18
sw x3, 0(x2) # store x3 (0x6874be18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006874be18 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fsub.d f13, f22, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x6, 0x3cd9b807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x700cba0b # load x3 with 32 MSBs 0x00000000700cba0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000700cba0b
sw x3, 0(x2) # store x3 (0x700cba0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000700cba0b from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fsub.d f6, f14, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x6, 0x774f18cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec8df791 # load x3 with 32 MSBs 0x00000000ec8df791
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec8df791
sw x3, 0(x2) # store x3 (0xec8df791) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ec8df791 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fsub.d f6, f17, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x20, 0x46637dc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16b90af9 # load x3 with 32 MSBs 0x0000000016b90af9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016b90af9
sw x3, 0(x2) # store x3 (0x16b90af9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000016b90af9 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fsub.d f20, f9, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x7, 0xdc3ffeef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7e706454 # load x3 with 32 MSBs 0x000000007e706454
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e706454
sw x3, 0(x2) # store x3 (0x7e706454) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000007e706454 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fsub.d f7, f2, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x7, 0x0a586037 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ee8aea2 # load x3 with 32 MSBs 0x000000009ee8aea2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ee8aea2
sw x3, 0(x2) # store x3 (0x9ee8aea2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009ee8aea2 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fsub.d f7, f10, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x17, 0xa9c829a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb1aa02f6 # load x3 with 32 MSBs 0x00000000b1aa02f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1aa02f6
sw x3, 0(x2) # store x3 (0xb1aa02f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000b1aa02f6 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fsub.d f17, f14, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x4, 0x43bb8a7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29179390 # load x3 with 32 MSBs 0x0000000029179390
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029179390
sw x3, 0(x2) # store x3 (0x29179390) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000029179390 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fsub.d f4, f28, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x2, 0x697e4089 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8906297 # load x3 with 32 MSBs 0x00000000f8906297
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8906297
sw x3, 0(x2) # store x3 (0xf8906297) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f8906297 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fsub.d f2, f29, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x19, 0x9a5e2582 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8f52ecd # load x3 with 32 MSBs 0x00000000f8f52ecd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8f52ecd
sw x3, 0(x2) # store x3 (0xf8f52ecd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f8f52ecd from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fsub.d f19, f3, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x22, 0xc3165521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc9fb7b0c # load x3 with 32 MSBs 0x00000000c9fb7b0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9fb7b0c
sw x3, 0(x2) # store x3 (0xc9fb7b0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c9fb7b0c from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fsub.d f22, f13, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x11, 0xde18c199 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d877e5e # load x3 with 32 MSBs 0x000000007d877e5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d877e5e
sw x3, 0(x2) # store x3 (0x7d877e5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007d877e5e from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fsub.d f11, f3, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x30, 0x195d01d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a11a4f8 # load x3 with 32 MSBs 0x000000004a11a4f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a11a4f8
sw x3, 0(x2) # store x3 (0x4a11a4f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004a11a4f8 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fsub.d f30, f9, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x9, 0x50137fe9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7375e03c # load x3 with 32 MSBs 0x000000007375e03c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007375e03c
sw x3, 0(x2) # store x3 (0x7375e03c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007375e03c from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
fsub.d f9, f21, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x23, 0x17e30866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f0c871e # load x3 with 32 MSBs 0x000000006f0c871e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f0c871e
sw x3, 0(x2) # store x3 (0x6f0c871e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006f0c871e from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fsub.d f23, f9, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x26, 0xf62fd654 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeda3faa1 # load x3 with 32 MSBs 0x00000000eda3faa1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eda3faa1
sw x3, 0(x2) # store x3 (0xeda3faa1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000eda3faa1 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fsub.d f26, f16, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x7, 0xeb1b74e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca20246c # load x3 with 32 MSBs 0x00000000ca20246c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca20246c
sw x3, 0(x2) # store x3 (0xca20246c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000ca20246c from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fsub.d f7, f20, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x8, 0xff229970 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3cbe628 # load x3 with 32 MSBs 0x00000000f3cbe628
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3cbe628
sw x3, 0(x2) # store x3 (0xf3cbe628) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f3cbe628 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fsub.d f8, f12, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x26, 0xd6e83b6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe95a4b20 # load x3 with 32 MSBs 0x00000000e95a4b20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e95a4b20
sw x3, 0(x2) # store x3 (0xe95a4b20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e95a4b20 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fsub.d f26, f22, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x23, 0x25438935 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x04bdf07f # load x3 with 32 MSBs 0x0000000004bdf07f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004bdf07f
sw x3, 0(x2) # store x3 (0x04bdf07f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000004bdf07f from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
fsub.d f23, f18, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x31, 0x124ca56e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81263ed3 # load x3 with 32 MSBs 0x0000000081263ed3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081263ed3
sw x3, 0(x2) # store x3 (0x81263ed3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000081263ed3 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fsub.d f31, f15, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x30, 0x6472a626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14ebb0f1 # load x3 with 32 MSBs 0x0000000014ebb0f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014ebb0f1
sw x3, 0(x2) # store x3 (0x14ebb0f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000014ebb0f1 from memory into f24
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fsub.d f30, f24, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x27, 0xdd0b1090 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x05e8c048 # load x3 with 32 MSBs 0x0000000005e8c048
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005e8c048
sw x3, 0(x2) # store x3 (0x05e8c048) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000005e8c048 from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fsub.d f27, f12, f31 # perform operation

# Testcase cp_frm
li x5, 0x603a423c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3656b2a6 # load x3 with 32 MSBs 0x000000003656b2a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003656b2a6
sw x3, 0(x2) # store x3 (0x3656b2a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003656b2a6 from memory into f10
li x3, 0x2d9a3e41 # load x3 with 32 MSBs 0x000000002d9a3e41
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d9a3e41
sw x3, 0(x2) # store x3 (0x2d9a3e41) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002d9a3e41 from memory into f31
fsub.d f5, f10, f31, dyn # perform operation
fsub.d f5, f10, f31, rdn # perform operation
fsub.d f5, f10, f31, rmm # perform operation
fsub.d f5, f10, f31, rne # perform operation
fsub.d f5, f10, f31, rtz # perform operation
fsub.d f5, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x23, 0x961db9f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fsub.d f23, f16, f11, dyn # perform operation
fsub.d f23, f16, f11, rdn # perform operation
fsub.d f23, f16, f11, rmm # perform operation
fsub.d f23, f16, f11, rne # perform operation
fsub.d f23, f16, f11, rtz # perform operation
fsub.d f23, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x21, 0x3843f2ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fsub.d f21, f7, f25, dyn # perform operation
fsub.d f21, f7, f25, rdn # perform operation
fsub.d f21, f7, f25, rmm # perform operation
fsub.d f21, f7, f25, rne # perform operation
fsub.d f21, f7, f25, rtz # perform operation
fsub.d f21, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x17, 0x68ad9b18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fsub.d f17, f4, f8, dyn # perform operation
fsub.d f17, f4, f8, rdn # perform operation
fsub.d f17, f4, f8, rmm # perform operation
fsub.d f17, f4, f8, rne # perform operation
fsub.d f17, f4, f8, rtz # perform operation
fsub.d f17, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x8, 0xfdf8aa20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fsub.d f8, f15, f21, dyn # perform operation
fsub.d f8, f15, f21, rdn # perform operation
fsub.d f8, f15, f21, rmm # perform operation
fsub.d f8, f15, f21, rne # perform operation
fsub.d f8, f15, f21, rtz # perform operation
fsub.d f8, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x11, 0x714941ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fsub.d f11, f20, f5, dyn # perform operation
fsub.d f11, f20, f5, rdn # perform operation
fsub.d f11, f20, f5, rmm # perform operation
fsub.d f11, f20, f5, rne # perform operation
fsub.d f11, f20, f5, rtz # perform operation
fsub.d f11, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x3, 0x594f98d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fsub.d f3, f5, f11, dyn # perform operation
fsub.d f3, f5, f11, rdn # perform operation
fsub.d f3, f5, f11, rmm # perform operation
fsub.d f3, f5, f11, rne # perform operation
fsub.d f3, f5, f11, rtz # perform operation
fsub.d f3, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x19, 0x971a6887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fsub.d f19, f16, f7, dyn # perform operation
fsub.d f19, f16, f7, rdn # perform operation
fsub.d f19, f16, f7, rmm # perform operation
fsub.d f19, f16, f7, rne # perform operation
fsub.d f19, f16, f7, rtz # perform operation
fsub.d f19, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x26, 0x8c907bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fsub.d f26, f23, f1, dyn # perform operation
fsub.d f26, f23, f1, rdn # perform operation
fsub.d f26, f23, f1, rmm # perform operation
fsub.d f26, f23, f1, rne # perform operation
fsub.d f26, f23, f1, rtz # perform operation
fsub.d f26, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x26, 0xcd128857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
fsub.d f26, f22, f13, dyn # perform operation
fsub.d f26, f22, f13, rdn # perform operation
fsub.d f26, f22, f13, rmm # perform operation
fsub.d f26, f22, f13, rne # perform operation
fsub.d f26, f22, f13, rtz # perform operation
fsub.d f26, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x15, 0x124ea1de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fsub.d f15, f19, f4, dyn # perform operation
fsub.d f15, f19, f4, rdn # perform operation
fsub.d f15, f19, f4, rmm # perform operation
fsub.d f15, f19, f4, rne # perform operation
fsub.d f15, f19, f4, rtz # perform operation
fsub.d f15, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x22, 0xcc781ade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fsub.d f22, f17, f15, dyn # perform operation
fsub.d f22, f17, f15, rdn # perform operation
fsub.d f22, f17, f15, rmm # perform operation
fsub.d f22, f17, f15, rne # perform operation
fsub.d f22, f17, f15, rtz # perform operation
fsub.d f22, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x13, 0x6ab0caf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fsub.d f13, f5, f22, dyn # perform operation
fsub.d f13, f5, f22, rdn # perform operation
fsub.d f13, f5, f22, rmm # perform operation
fsub.d f13, f5, f22, rne # perform operation
fsub.d f13, f5, f22, rtz # perform operation
fsub.d f13, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f5, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x29, 0x08e19c31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fsub.d f29, f28, f25, dyn # perform operation
fsub.d f29, f28, f25, rdn # perform operation
fsub.d f29, f28, f25, rmm # perform operation
fsub.d f29, f28, f25, rne # perform operation
fsub.d f29, f28, f25, rtz # perform operation
fsub.d f29, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x26, 0xe26d99ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fsub.d f26, f25, f6, dyn # perform operation
fsub.d f26, f25, f6, rdn # perform operation
fsub.d f26, f25, f6, rmm # perform operation
fsub.d f26, f25, f6, rne # perform operation
fsub.d f26, f25, f6, rtz # perform operation
fsub.d f26, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x12, 0x3dd4f688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fsub.d f12, f25, f16, dyn # perform operation
fsub.d f12, f25, f16, rdn # perform operation
fsub.d f12, f25, f16, rmm # perform operation
fsub.d f12, f25, f16, rne # perform operation
fsub.d f12, f25, f16, rtz # perform operation
fsub.d f12, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x10, 0x08715d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fsub.d f10, f19, f27, dyn # perform operation
fsub.d f10, f19, f27, rdn # perform operation
fsub.d f10, f19, f27, rmm # perform operation
fsub.d f10, f19, f27, rne # perform operation
fsub.d f10, f19, f27, rtz # perform operation
fsub.d f10, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x19, 0x5bdfeb12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fsub.d f19, f1, f10, dyn # perform operation
fsub.d f19, f1, f10, rdn # perform operation
fsub.d f19, f1, f10, rmm # perform operation
fsub.d f19, f1, f10, rne # perform operation
fsub.d f19, f1, f10, rtz # perform operation
fsub.d f19, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x13, 0xf2a2c997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fsub.d f13, f29, f8, dyn # perform operation
fsub.d f13, f29, f8, rdn # perform operation
fsub.d f13, f29, f8, rmm # perform operation
fsub.d f13, f29, f8, rne # perform operation
fsub.d f13, f29, f8, rtz # perform operation
fsub.d f13, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x27, 0xa012a22f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fsub.d f27, f31, f2, dyn # perform operation
fsub.d f27, f31, f2, rdn # perform operation
fsub.d f27, f31, f2, rmm # perform operation
fsub.d f27, f31, f2, rne # perform operation
fsub.d f27, f31, f2, rtz # perform operation
fsub.d f27, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x5, 0x86d4c738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
fsub.d f5, f15, f1, dyn # perform operation
fsub.d f5, f15, f1, rdn # perform operation
fsub.d f5, f15, f1, rmm # perform operation
fsub.d f5, f15, f1, rne # perform operation
fsub.d f5, f15, f1, rtz # perform operation
fsub.d f5, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x23, 0xfb147fa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fsub.d f23, f28, f30, dyn # perform operation
fsub.d f23, f28, f30, rdn # perform operation
fsub.d f23, f28, f30, rmm # perform operation
fsub.d f23, f28, f30, rne # perform operation
fsub.d f23, f28, f30, rtz # perform operation
fsub.d f23, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f28, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x24, 0x9d88423a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fsub.d f24, f26, f6, dyn # perform operation
fsub.d f24, f26, f6, rdn # perform operation
fsub.d f24, f26, f6, rmm # perform operation
fsub.d f24, f26, f6, rne # perform operation
fsub.d f24, f26, f6, rtz # perform operation
fsub.d f24, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x19, 0x46eb728f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fsub.d f19, f26, f23, dyn # perform operation
fsub.d f19, f26, f23, rdn # perform operation
fsub.d f19, f26, f23, rmm # perform operation
fsub.d f19, f26, f23, rne # perform operation
fsub.d f19, f26, f23, rtz # perform operation
fsub.d f19, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x18, 0x2907e9e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fsub.d f18, f14, f29, dyn # perform operation
fsub.d f18, f14, f29, rdn # perform operation
fsub.d f18, f14, f29, rmm # perform operation
fsub.d f18, f14, f29, rne # perform operation
fsub.d f18, f14, f29, rtz # perform operation
fsub.d f18, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x6, 0xdaaba34d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fsub.d f6, f31, f18, dyn # perform operation
fsub.d f6, f31, f18, rdn # perform operation
fsub.d f6, f31, f18, rmm # perform operation
fsub.d f6, f31, f18, rne # perform operation
fsub.d f6, f31, f18, rtz # perform operation
fsub.d f6, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x8, 0xb5afe410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fsub.d f8, f4, f3, dyn # perform operation
fsub.d f8, f4, f3, rdn # perform operation
fsub.d f8, f4, f3, rmm # perform operation
fsub.d f8, f4, f3, rne # perform operation
fsub.d f8, f4, f3, rtz # perform operation
fsub.d f8, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x16, 0xaa560668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fsub.d f16, f6, f2, dyn # perform operation
fsub.d f16, f6, f2, rdn # perform operation
fsub.d f16, f6, f2, rmm # perform operation
fsub.d f16, f6, f2, rne # perform operation
fsub.d f16, f6, f2, rtz # perform operation
fsub.d f16, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x28, 0x12c87b08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fsub.d f28, f29, f31, dyn # perform operation
fsub.d f28, f29, f31, rdn # perform operation
fsub.d f28, f29, f31, rmm # perform operation
fsub.d f28, f29, f31, rne # perform operation
fsub.d f28, f29, f31, rtz # perform operation
fsub.d f28, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x22, 0x3d4ab995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fsub.d f22, f4, f20, dyn # perform operation
fsub.d f22, f4, f20, rdn # perform operation
fsub.d f22, f4, f20, rmm # perform operation
fsub.d f22, f4, f20, rne # perform operation
fsub.d f22, f4, f20, rtz # perform operation
fsub.d f22, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x13, 0x80a1a39d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fsub.d f13, f12, f7, dyn # perform operation
fsub.d f13, f12, f7, rdn # perform operation
fsub.d f13, f12, f7, rmm # perform operation
fsub.d f13, f12, f7, rne # perform operation
fsub.d f13, f12, f7, rtz # perform operation
fsub.d f13, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x18, 0x1cdd9134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fsub.d f18, f21, f30, dyn # perform operation
fsub.d f18, f21, f30, rdn # perform operation
fsub.d f18, f21, f30, rmm # perform operation
fsub.d f18, f21, f30, rne # perform operation
fsub.d f18, f21, f30, rtz # perform operation
fsub.d f18, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x21, 0xe09f5ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fsub.d f21, f23, f31, dyn # perform operation
fsub.d f21, f23, f31, rdn # perform operation
fsub.d f21, f23, f31, rmm # perform operation
fsub.d f21, f23, f31, rne # perform operation
fsub.d f21, f23, f31, rtz # perform operation
fsub.d f21, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f23, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x20, 0x73832d31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fsub.d f20, f17, f9, dyn # perform operation
fsub.d f20, f17, f9, rdn # perform operation
fsub.d f20, f17, f9, rmm # perform operation
fsub.d f20, f17, f9, rne # perform operation
fsub.d f20, f17, f9, rtz # perform operation
fsub.d f20, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x15, 0x6a9dc593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fsub.d f15, f12, f5, dyn # perform operation
fsub.d f15, f12, f5, rdn # perform operation
fsub.d f15, f12, f5, rmm # perform operation
fsub.d f15, f12, f5, rne # perform operation
fsub.d f15, f12, f5, rtz # perform operation
fsub.d f15, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x9, 0x47757aef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fsub.d f9, f20, f2, dyn # perform operation
fsub.d f9, f20, f2, rdn # perform operation
fsub.d f9, f20, f2, rmm # perform operation
fsub.d f9, f20, f2, rne # perform operation
fsub.d f9, f20, f2, rtz # perform operation
fsub.d f9, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x6, 0x1ed91334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fsub.d f6, f26, f20, dyn # perform operation
fsub.d f6, f26, f20, rdn # perform operation
fsub.d f6, f26, f20, rmm # perform operation
fsub.d f6, f26, f20, rne # perform operation
fsub.d f6, f26, f20, rtz # perform operation
fsub.d f6, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x8, 0x0531d522 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fsub.d f8, f13, f15, dyn # perform operation
fsub.d f8, f13, f15, rdn # perform operation
fsub.d f8, f13, f15, rmm # perform operation
fsub.d f8, f13, f15, rne # perform operation
fsub.d f8, f13, f15, rtz # perform operation
fsub.d f8, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x23, 0x85773793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fsub.d f23, f14, f26, dyn # perform operation
fsub.d f23, f14, f26, rdn # perform operation
fsub.d f23, f14, f26, rmm # perform operation
fsub.d f23, f14, f26, rne # perform operation
fsub.d f23, f14, f26, rtz # perform operation
fsub.d f23, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x6, 0x358f68ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fsub.d f6, f7, f26, dyn # perform operation
fsub.d f6, f7, f26, rdn # perform operation
fsub.d f6, f7, f26, rmm # perform operation
fsub.d f6, f7, f26, rne # perform operation
fsub.d f6, f7, f26, rtz # perform operation
fsub.d f6, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x10, 0xd8ec22c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fsub.d f10, f24, f9, dyn # perform operation
fsub.d f10, f24, f9, rdn # perform operation
fsub.d f10, f24, f9, rmm # perform operation
fsub.d f10, f24, f9, rne # perform operation
fsub.d f10, f24, f9, rtz # perform operation
fsub.d f10, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x27, 0x44b2b0e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fsub.d f27, f17, f15, dyn # perform operation
fsub.d f27, f17, f15, rdn # perform operation
fsub.d f27, f17, f15, rmm # perform operation
fsub.d f27, f17, f15, rne # perform operation
fsub.d f27, f17, f15, rtz # perform operation
fsub.d f27, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x12, 0x28c4c613 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fsub.d f12, f9, f10, dyn # perform operation
fsub.d f12, f9, f10, rdn # perform operation
fsub.d f12, f9, f10, rmm # perform operation
fsub.d f12, f9, f10, rne # perform operation
fsub.d f12, f9, f10, rtz # perform operation
fsub.d f12, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x13, 0x566a396a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fsub.d f13, f4, f5, dyn # perform operation
fsub.d f13, f4, f5, rdn # perform operation
fsub.d f13, f4, f5, rmm # perform operation
fsub.d f13, f4, f5, rne # perform operation
fsub.d f13, f4, f5, rtz # perform operation
fsub.d f13, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x6, 0xd9bc9267 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fsub.d f6, f11, f1, dyn # perform operation
fsub.d f6, f11, f1, rdn # perform operation
fsub.d f6, f11, f1, rmm # perform operation
fsub.d f6, f11, f1, rne # perform operation
fsub.d f6, f11, f1, rtz # perform operation
fsub.d f6, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x12, 0xb0272f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fsub.d f12, f25, f13, dyn # perform operation
fsub.d f12, f25, f13, rdn # perform operation
fsub.d f12, f25, f13, rmm # perform operation
fsub.d f12, f25, f13, rne # perform operation
fsub.d f12, f25, f13, rtz # perform operation
fsub.d f12, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x4, 0x87e8a038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fsub.d f4, f21, f18, dyn # perform operation
fsub.d f4, f21, f18, rdn # perform operation
fsub.d f4, f21, f18, rmm # perform operation
fsub.d f4, f21, f18, rne # perform operation
fsub.d f4, f21, f18, rtz # perform operation
fsub.d f4, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x8, 0x77a1eed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
fsub.d f8, f23, f25, dyn # perform operation
fsub.d f8, f23, f25, rdn # perform operation
fsub.d f8, f23, f25, rmm # perform operation
fsub.d f8, f23, f25, rne # perform operation
fsub.d f8, f23, f25, rtz # perform operation
fsub.d f8, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x17, 0x7ad52d1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fsub.d f17, f2, f15, dyn # perform operation
fsub.d f17, f2, f15, rdn # perform operation
fsub.d f17, f2, f15, rmm # perform operation
fsub.d f17, f2, f15, rne # perform operation
fsub.d f17, f2, f15, rtz # perform operation
fsub.d f17, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x13, 0x110ef7e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fsub.d f13, f21, f11, dyn # perform operation
fsub.d f13, f21, f11, rdn # perform operation
fsub.d f13, f21, f11, rmm # perform operation
fsub.d f13, f21, f11, rne # perform operation
fsub.d f13, f21, f11, rtz # perform operation
fsub.d f13, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x31, 0xa56549fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fsub.d f31, f11, f28, dyn # perform operation
fsub.d f31, f11, f28, rdn # perform operation
fsub.d f31, f11, f28, rmm # perform operation
fsub.d f31, f11, f28, rne # perform operation
fsub.d f31, f11, f28, rtz # perform operation
fsub.d f31, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x24, 0xfc815a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fsub.d f24, f16, f31, dyn # perform operation
fsub.d f24, f16, f31, rdn # perform operation
fsub.d f24, f16, f31, rmm # perform operation
fsub.d f24, f16, f31, rne # perform operation
fsub.d f24, f16, f31, rtz # perform operation
fsub.d f24, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x19, 0xa7673ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fsub.d f19, f22, f12, dyn # perform operation
fsub.d f19, f22, f12, rdn # perform operation
fsub.d f19, f22, f12, rmm # perform operation
fsub.d f19, f22, f12, rne # perform operation
fsub.d f19, f22, f12, rtz # perform operation
fsub.d f19, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x24, 0x1fef49b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fsub.d f24, f5, f27, dyn # perform operation
fsub.d f24, f5, f27, rdn # perform operation
fsub.d f24, f5, f27, rmm # perform operation
fsub.d f24, f5, f27, rne # perform operation
fsub.d f24, f5, f27, rtz # perform operation
fsub.d f24, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x8, 0xd25223eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fsub.d f8, f31, f27, dyn # perform operation
fsub.d f8, f31, f27, rdn # perform operation
fsub.d f8, f31, f27, rmm # perform operation
fsub.d f8, f31, f27, rne # perform operation
fsub.d f8, f31, f27, rtz # perform operation
fsub.d f8, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x19, 0xfb174515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fsub.d f19, f31, f16, dyn # perform operation
fsub.d f19, f31, f16, rdn # perform operation
fsub.d f19, f31, f16, rmm # perform operation
fsub.d f19, f31, f16, rne # perform operation
fsub.d f19, f31, f16, rtz # perform operation
fsub.d f19, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x5, 0xcc0d0b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fsub.d f5, f1, f27, dyn # perform operation
fsub.d f5, f1, f27, rdn # perform operation
fsub.d f5, f1, f27, rmm # perform operation
fsub.d f5, f1, f27, rne # perform operation
fsub.d f5, f1, f27, rtz # perform operation
fsub.d f5, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x3, 0xf0b1456e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fsub.d f3, f10, f24, dyn # perform operation
fsub.d f3, f10, f24, rdn # perform operation
fsub.d f3, f10, f24, rmm # perform operation
fsub.d f3, f10, f24, rne # perform operation
fsub.d f3, f10, f24, rtz # perform operation
fsub.d f3, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x7, 0x0540396c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fsub.d f7, f15, f20, dyn # perform operation
fsub.d f7, f15, f20, rdn # perform operation
fsub.d f7, f15, f20, rmm # perform operation
fsub.d f7, f15, f20, rne # perform operation
fsub.d f7, f15, f20, rtz # perform operation
fsub.d f7, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x5, 0x9efd929d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fsub.d f5, f25, f15, dyn # perform operation
fsub.d f5, f25, f15, rdn # perform operation
fsub.d f5, f25, f15, rmm # perform operation
fsub.d f5, f25, f15, rne # perform operation
fsub.d f5, f25, f15, rtz # perform operation
fsub.d f5, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x1, 0x6f975cc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fsub.d f1, f11, f28, dyn # perform operation
fsub.d f1, f11, f28, rdn # perform operation
fsub.d f1, f11, f28, rmm # perform operation
fsub.d f1, f11, f28, rne # perform operation
fsub.d f1, f11, f28, rtz # perform operation
fsub.d f1, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x11, 0x3b4158fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fsub.d f11, f22, f10, dyn # perform operation
fsub.d f11, f22, f10, rdn # perform operation
fsub.d f11, f22, f10, rmm # perform operation
fsub.d f11, f22, f10, rne # perform operation
fsub.d f11, f22, f10, rtz # perform operation
fsub.d f11, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x27, 0xcc9e40e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fsub.d f27, f2, f6, dyn # perform operation
fsub.d f27, f2, f6, rdn # perform operation
fsub.d f27, f2, f6, rmm # perform operation
fsub.d f27, f2, f6, rne # perform operation
fsub.d f27, f2, f6, rtz # perform operation
fsub.d f27, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x14, 0x42568297 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fsub.d f14, f23, f7, dyn # perform operation
fsub.d f14, f23, f7, rdn # perform operation
fsub.d f14, f23, f7, rmm # perform operation
fsub.d f14, f23, f7, rne # perform operation
fsub.d f14, f23, f7, rtz # perform operation
fsub.d f14, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x18, 0x140ab2f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fsub.d f18, f24, f5, dyn # perform operation
fsub.d f18, f24, f5, rdn # perform operation
fsub.d f18, f24, f5, rmm # perform operation
fsub.d f18, f24, f5, rne # perform operation
fsub.d f18, f24, f5, rtz # perform operation
fsub.d f18, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x4, 0xc84db293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fsub.d f4, f17, f12, dyn # perform operation
fsub.d f4, f17, f12, rdn # perform operation
fsub.d f4, f17, f12, rmm # perform operation
fsub.d f4, f17, f12, rne # perform operation
fsub.d f4, f17, f12, rtz # perform operation
fsub.d f4, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x5, 0xd92d72b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fsub.d f5, f18, f14, dyn # perform operation
fsub.d f5, f18, f14, rdn # perform operation
fsub.d f5, f18, f14, rmm # perform operation
fsub.d f5, f18, f14, rne # perform operation
fsub.d f5, f18, f14, rtz # perform operation
fsub.d f5, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x17, 0xdfcaa79a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fsub.d f17, f1, f3, dyn # perform operation
fsub.d f17, f1, f3, rdn # perform operation
fsub.d f17, f1, f3, rmm # perform operation
fsub.d f17, f1, f3, rne # perform operation
fsub.d f17, f1, f3, rtz # perform operation
fsub.d f17, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x4, 0x891d1551 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fsub.d f4, f16, f3, dyn # perform operation
fsub.d f4, f16, f3, rdn # perform operation
fsub.d f4, f16, f3, rmm # perform operation
fsub.d f4, f16, f3, rne # perform operation
fsub.d f4, f16, f3, rtz # perform operation
fsub.d f4, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x17, 0x531f5da4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
fsub.d f17, f10, f25, dyn # perform operation
fsub.d f17, f10, f25, rdn # perform operation
fsub.d f17, f10, f25, rmm # perform operation
fsub.d f17, f10, f25, rne # perform operation
fsub.d f17, f10, f25, rtz # perform operation
fsub.d f17, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x18, 0x240a7822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fsub.d f18, f4, f14, dyn # perform operation
fsub.d f18, f4, f14, rdn # perform operation
fsub.d f18, f4, f14, rmm # perform operation
fsub.d f18, f4, f14, rne # perform operation
fsub.d f18, f4, f14, rtz # perform operation
fsub.d f18, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x7, 0xfc127c3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fsub.d f7, f30, f11, dyn # perform operation
fsub.d f7, f30, f11, rdn # perform operation
fsub.d f7, f30, f11, rmm # perform operation
fsub.d f7, f30, f11, rne # perform operation
fsub.d f7, f30, f11, rtz # perform operation
fsub.d f7, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x4, 0x56e9bcf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fsub.d f4, f27, f3, dyn # perform operation
fsub.d f4, f27, f3, rdn # perform operation
fsub.d f4, f27, f3, rmm # perform operation
fsub.d f4, f27, f3, rne # perform operation
fsub.d f4, f27, f3, rtz # perform operation
fsub.d f4, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x18, 0x96be4578 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fsub.d f18, f1, f13, dyn # perform operation
fsub.d f18, f1, f13, rdn # perform operation
fsub.d f18, f1, f13, rmm # perform operation
fsub.d f18, f1, f13, rne # perform operation
fsub.d f18, f1, f13, rtz # perform operation
fsub.d f18, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x7, 0x80e47738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fsub.d f7, f21, f20, dyn # perform operation
fsub.d f7, f21, f20, rdn # perform operation
fsub.d f7, f21, f20, rmm # perform operation
fsub.d f7, f21, f20, rne # perform operation
fsub.d f7, f21, f20, rtz # perform operation
fsub.d f7, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x22, 0x3bba48ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fsub.d f22, f23, f11, dyn # perform operation
fsub.d f22, f23, f11, rdn # perform operation
fsub.d f22, f23, f11, rmm # perform operation
fsub.d f22, f23, f11, rne # perform operation
fsub.d f22, f23, f11, rtz # perform operation
fsub.d f22, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x8, 0x0801b584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fsub.d f8, f28, f13, dyn # perform operation
fsub.d f8, f28, f13, rdn # perform operation
fsub.d f8, f28, f13, rmm # perform operation
fsub.d f8, f28, f13, rne # perform operation
fsub.d f8, f28, f13, rtz # perform operation
fsub.d f8, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x29, 0x23d4e3c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fsub.d f29, f31, f12, dyn # perform operation
fsub.d f29, f31, f12, rdn # perform operation
fsub.d f29, f31, f12, rmm # perform operation
fsub.d f29, f31, f12, rne # perform operation
fsub.d f29, f31, f12, rtz # perform operation
fsub.d f29, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x18, 0xdcb8786f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fsub.d f18, f31, f16, dyn # perform operation
fsub.d f18, f31, f16, rdn # perform operation
fsub.d f18, f31, f16, rmm # perform operation
fsub.d f18, f31, f16, rne # perform operation
fsub.d f18, f31, f16, rtz # perform operation
fsub.d f18, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x20, 0xf601bceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fsub.d f20, f12, f7, dyn # perform operation
fsub.d f20, f12, f7, rdn # perform operation
fsub.d f20, f12, f7, rmm # perform operation
fsub.d f20, f12, f7, rne # perform operation
fsub.d f20, f12, f7, rtz # perform operation
fsub.d f20, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x14, 0x1508401a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fsub.d f14, f24, f25, dyn # perform operation
fsub.d f14, f24, f25, rdn # perform operation
fsub.d f14, f24, f25, rmm # perform operation
fsub.d f14, f24, f25, rne # perform operation
fsub.d f14, f24, f25, rtz # perform operation
fsub.d f14, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x28, 0x8c29cd5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fsub.d f28, f27, f24, dyn # perform operation
fsub.d f28, f27, f24, rdn # perform operation
fsub.d f28, f27, f24, rmm # perform operation
fsub.d f28, f27, f24, rne # perform operation
fsub.d f28, f27, f24, rtz # perform operation
fsub.d f28, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x12, 0xf7fbb260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
fsub.d f12, f13, f2, dyn # perform operation
fsub.d f12, f13, f2, rdn # perform operation
fsub.d f12, f13, f2, rmm # perform operation
fsub.d f12, f13, f2, rne # perform operation
fsub.d f12, f13, f2, rtz # perform operation
fsub.d f12, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x1, 0xb1df407c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fsub.d f1, f13, f12, dyn # perform operation
fsub.d f1, f13, f12, rdn # perform operation
fsub.d f1, f13, f12, rmm # perform operation
fsub.d f1, f13, f12, rne # perform operation
fsub.d f1, f13, f12, rtz # perform operation
fsub.d f1, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x29, 0xad7dad74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fsub.d f29, f21, f17, dyn # perform operation
fsub.d f29, f21, f17, rdn # perform operation
fsub.d f29, f21, f17, rmm # perform operation
fsub.d f29, f21, f17, rne # perform operation
fsub.d f29, f21, f17, rtz # perform operation
fsub.d f29, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x14, 0xd4175fbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fsub.d f14, f5, f15, dyn # perform operation
fsub.d f14, f5, f15, rdn # perform operation
fsub.d f14, f5, f15, rmm # perform operation
fsub.d f14, f5, f15, rne # perform operation
fsub.d f14, f5, f15, rtz # perform operation
fsub.d f14, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x13, 0xf020d3a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fsub.d f13, f1, f15, dyn # perform operation
fsub.d f13, f1, f15, rdn # perform operation
fsub.d f13, f1, f15, rmm # perform operation
fsub.d f13, f1, f15, rne # perform operation
fsub.d f13, f1, f15, rtz # perform operation
fsub.d f13, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x18, 0xa37884bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fsub.d f18, f23, f9, dyn # perform operation
fsub.d f18, f23, f9, rdn # perform operation
fsub.d f18, f23, f9, rmm # perform operation
fsub.d f18, f23, f9, rne # perform operation
fsub.d f18, f23, f9, rtz # perform operation
fsub.d f18, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x6, 0x5325ca18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fsub.d f6, f21, f19, dyn # perform operation
fsub.d f6, f21, f19, rdn # perform operation
fsub.d f6, f21, f19, rmm # perform operation
fsub.d f6, f21, f19, rne # perform operation
fsub.d f6, f21, f19, rtz # perform operation
fsub.d f6, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x16, 0x7a82ce95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fsub.d f16, f30, f17, dyn # perform operation
fsub.d f16, f30, f17, rdn # perform operation
fsub.d f16, f30, f17, rmm # perform operation
fsub.d f16, f30, f17, rne # perform operation
fsub.d f16, f30, f17, rtz # perform operation
fsub.d f16, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x7, 0x8eef18c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fsub.d f7, f10, f8, dyn # perform operation
fsub.d f7, f10, f8, rdn # perform operation
fsub.d f7, f10, f8, rmm # perform operation
fsub.d f7, f10, f8, rne # perform operation
fsub.d f7, f10, f8, rtz # perform operation
fsub.d f7, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x20, 0xe846c0a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
fsub.d f20, f27, f2, dyn # perform operation
fsub.d f20, f27, f2, rdn # perform operation
fsub.d f20, f27, f2, rmm # perform operation
fsub.d f20, f27, f2, rne # perform operation
fsub.d f20, f27, f2, rtz # perform operation
fsub.d f20, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x10, 0xc6edfbad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fsub.d f10, f20, f9, dyn # perform operation
fsub.d f10, f20, f9, rdn # perform operation
fsub.d f10, f20, f9, rmm # perform operation
fsub.d f10, f20, f9, rne # perform operation
fsub.d f10, f20, f9, rtz # perform operation
fsub.d f10, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x15, 0xd5a3d5ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
fsub.d f15, f31, f6, dyn # perform operation
fsub.d f15, f31, f6, rdn # perform operation
fsub.d f15, f31, f6, rmm # perform operation
fsub.d f15, f31, f6, rne # perform operation
fsub.d f15, f31, f6, rtz # perform operation
fsub.d f15, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x14, 0x502cbaa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fsub.d f14, f20, f12, dyn # perform operation
fsub.d f14, f20, f12, rdn # perform operation
fsub.d f14, f20, f12, rmm # perform operation
fsub.d f14, f20, f12, rne # perform operation
fsub.d f14, f20, f12, rtz # perform operation
fsub.d f14, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x8, 0xf0176832 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fsub.d f8, f26, f10, dyn # perform operation
fsub.d f8, f26, f10, rdn # perform operation
fsub.d f8, f26, f10, rmm # perform operation
fsub.d f8, f26, f10, rne # perform operation
fsub.d f8, f26, f10, rtz # perform operation
fsub.d f8, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x28, 0x91370f78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fsub.d f28, f2, f22, dyn # perform operation
fsub.d f28, f2, f22, rdn # perform operation
fsub.d f28, f2, f22, rmm # perform operation
fsub.d f28, f2, f22, rne # perform operation
fsub.d f28, f2, f22, rtz # perform operation
fsub.d f28, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x6, 0xd763561c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fsub.d f6, f1, f3, dyn # perform operation
fsub.d f6, f1, f3, rdn # perform operation
fsub.d f6, f1, f3, rmm # perform operation
fsub.d f6, f1, f3, rne # perform operation
fsub.d f6, f1, f3, rtz # perform operation
fsub.d f6, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x29, 0x3dc5eded # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fsub.d f29, f31, f6, dyn # perform operation
fsub.d f29, f31, f6, rdn # perform operation
fsub.d f29, f31, f6, rmm # perform operation
fsub.d f29, f31, f6, rne # perform operation
fsub.d f29, f31, f6, rtz # perform operation
fsub.d f29, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x4, 0xd6b8254c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
fsub.d f4, f14, f11, dyn # perform operation
fsub.d f4, f14, f11, rdn # perform operation
fsub.d f4, f14, f11, rmm # perform operation
fsub.d f4, f14, f11, rne # perform operation
fsub.d f4, f14, f11, rtz # perform operation
fsub.d f4, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x13, 0x3f3c794b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fsub.d f13, f22, f9, dyn # perform operation
fsub.d f13, f22, f9, rdn # perform operation
fsub.d f13, f22, f9, rmm # perform operation
fsub.d f13, f22, f9, rne # perform operation
fsub.d f13, f22, f9, rtz # perform operation
fsub.d f13, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x9, 0xcbb3b998 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
fsub.d f9, f19, f24, dyn # perform operation
fsub.d f9, f19, f24, rdn # perform operation
fsub.d f9, f19, f24, rmm # perform operation
fsub.d f9, f19, f24, rne # perform operation
fsub.d f9, f19, f24, rtz # perform operation
fsub.d f9, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x16, 0x7048a3c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fsub.d f16, f18, f30, dyn # perform operation
fsub.d f16, f18, f30, rdn # perform operation
fsub.d f16, f18, f30, rmm # perform operation
fsub.d f16, f18, f30, rne # perform operation
fsub.d f16, f18, f30, rtz # perform operation
fsub.d f16, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x31, 0xc2861192 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
fsub.d f31, f2, f24, dyn # perform operation
fsub.d f31, f2, f24, rdn # perform operation
fsub.d f31, f2, f24, rmm # perform operation
fsub.d f31, f2, f24, rne # perform operation
fsub.d f31, f2, f24, rtz # perform operation
fsub.d f31, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x24, 0x19cb3f14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fsub.d f24, f30, f6, dyn # perform operation
fsub.d f24, f30, f6, rdn # perform operation
fsub.d f24, f30, f6, rmm # perform operation
fsub.d f24, f30, f6, rne # perform operation
fsub.d f24, f30, f6, rtz # perform operation
fsub.d f24, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x3, 0xb330508f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fsub.d f3, f26, f28, dyn # perform operation
fsub.d f3, f26, f28, rdn # perform operation
fsub.d f3, f26, f28, rmm # perform operation
fsub.d f3, f26, f28, rne # perform operation
fsub.d f3, f26, f28, rtz # perform operation
fsub.d f3, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x20, 0xf02fde91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fsub.d f20, f2, f8, dyn # perform operation
fsub.d f20, f2, f8, rdn # perform operation
fsub.d f20, f2, f8, rmm # perform operation
fsub.d f20, f2, f8, rne # perform operation
fsub.d f20, f2, f8, rtz # perform operation
fsub.d f20, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x11, 0x6a913067 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fsub.d f11, f31, f29, dyn # perform operation
fsub.d f11, f31, f29, rdn # perform operation
fsub.d f11, f31, f29, rmm # perform operation
fsub.d f11, f31, f29, rne # perform operation
fsub.d f11, f31, f29, rtz # perform operation
fsub.d f11, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x15, 0xfc03da0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
fsub.d f15, f12, f1, dyn # perform operation
fsub.d f15, f12, f1, rdn # perform operation
fsub.d f15, f12, f1, rmm # perform operation
fsub.d f15, f12, f1, rne # perform operation
fsub.d f15, f12, f1, rtz # perform operation
fsub.d f15, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x28, 0x7e430d2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fsub.d f28, f10, f9, dyn # perform operation
fsub.d f28, f10, f9, rdn # perform operation
fsub.d f28, f10, f9, rmm # perform operation
fsub.d f28, f10, f9, rne # perform operation
fsub.d f28, f10, f9, rtz # perform operation
fsub.d f28, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x6, 0x8e857f30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fsub.d f6, f7, f24, dyn # perform operation
fsub.d f6, f7, f24, rdn # perform operation
fsub.d f6, f7, f24, rmm # perform operation
fsub.d f6, f7, f24, rne # perform operation
fsub.d f6, f7, f24, rtz # perform operation
fsub.d f6, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x23, 0xf326d250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fsub.d f23, f26, f8, dyn # perform operation
fsub.d f23, f26, f8, rdn # perform operation
fsub.d f23, f26, f8, rmm # perform operation
fsub.d f23, f26, f8, rne # perform operation
fsub.d f23, f26, f8, rtz # perform operation
fsub.d f23, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x4, 0xaef7da95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fsub.d f4, f18, f15, dyn # perform operation
fsub.d f4, f18, f15, rdn # perform operation
fsub.d f4, f18, f15, rmm # perform operation
fsub.d f4, f18, f15, rne # perform operation
fsub.d f4, f18, f15, rtz # perform operation
fsub.d f4, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x8, 0xb50e645f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fsub.d f8, f12, f20, dyn # perform operation
fsub.d f8, f12, f20, rdn # perform operation
fsub.d f8, f12, f20, rmm # perform operation
fsub.d f8, f12, f20, rne # perform operation
fsub.d f8, f12, f20, rtz # perform operation
fsub.d f8, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x20, 0xd6e57dd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fsub.d f20, f27, f14, dyn # perform operation
fsub.d f20, f27, f14, rdn # perform operation
fsub.d f20, f27, f14, rmm # perform operation
fsub.d f20, f27, f14, rne # perform operation
fsub.d f20, f27, f14, rtz # perform operation
fsub.d f20, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x2, 0x89244127 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fsub.d f2, f14, f30, dyn # perform operation
fsub.d f2, f14, f30, rdn # perform operation
fsub.d f2, f14, f30, rmm # perform operation
fsub.d f2, f14, f30, rne # perform operation
fsub.d f2, f14, f30, rtz # perform operation
fsub.d f2, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x28, 0xd7ed18e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fsub.d f28, f18, f5, dyn # perform operation
fsub.d f28, f18, f5, rdn # perform operation
fsub.d f28, f18, f5, rmm # perform operation
fsub.d f28, f18, f5, rne # perform operation
fsub.d f28, f18, f5, rtz # perform operation
fsub.d f28, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x11, 0x84c41cc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
fsub.d f11, f13, f24, dyn # perform operation
fsub.d f11, f13, f24, rdn # perform operation
fsub.d f11, f13, f24, rmm # perform operation
fsub.d f11, f13, f24, rne # perform operation
fsub.d f11, f13, f24, rtz # perform operation
fsub.d f11, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x3, 0x4c04fa35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fsub.d f3, f24, f13, dyn # perform operation
fsub.d f3, f24, f13, rdn # perform operation
fsub.d f3, f24, f13, rmm # perform operation
fsub.d f3, f24, f13, rne # perform operation
fsub.d f3, f24, f13, rtz # perform operation
fsub.d f3, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x13, 0x01d0adee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fsub.d f13, f12, f3, dyn # perform operation
fsub.d f13, f12, f3, rdn # perform operation
fsub.d f13, f12, f3, rmm # perform operation
fsub.d f13, f12, f3, rne # perform operation
fsub.d f13, f12, f3, rtz # perform operation
fsub.d f13, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x11, 0x98b9e1f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fsub.d f11, f24, f19, dyn # perform operation
fsub.d f11, f24, f19, rdn # perform operation
fsub.d f11, f24, f19, rmm # perform operation
fsub.d f11, f24, f19, rne # perform operation
fsub.d f11, f24, f19, rtz # perform operation
fsub.d f11, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x31, 0x46b54bc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fsub.d f31, f24, f19, dyn # perform operation
fsub.d f31, f24, f19, rdn # perform operation
fsub.d f31, f24, f19, rmm # perform operation
fsub.d f31, f24, f19, rne # perform operation
fsub.d f31, f24, f19, rtz # perform operation
fsub.d f31, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x23, 0x8554d74c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fsub.d f23, f31, f8, dyn # perform operation
fsub.d f23, f31, f8, rdn # perform operation
fsub.d f23, f31, f8, rmm # perform operation
fsub.d f23, f31, f8, rne # perform operation
fsub.d f23, f31, f8, rtz # perform operation
fsub.d f23, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x6, 0x6f52ba9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
fsub.d f6, f8, f28, dyn # perform operation
fsub.d f6, f8, f28, rdn # perform operation
fsub.d f6, f8, f28, rmm # perform operation
fsub.d f6, f8, f28, rne # perform operation
fsub.d f6, f8, f28, rtz # perform operation
fsub.d f6, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x1, 0x64740f04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fsub.d f1, f17, f23, dyn # perform operation
fsub.d f1, f17, f23, rdn # perform operation
fsub.d f1, f17, f23, rmm # perform operation
fsub.d f1, f17, f23, rne # perform operation
fsub.d f1, f17, f23, rtz # perform operation
fsub.d f1, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x28, 0x76fb9d41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fsub.d f28, f8, f17, dyn # perform operation
fsub.d f28, f8, f17, rdn # perform operation
fsub.d f28, f8, f17, rmm # perform operation
fsub.d f28, f8, f17, rne # perform operation
fsub.d f28, f8, f17, rtz # perform operation
fsub.d f28, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x1, 0x7d721fe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fsub.d f1, f24, f23, dyn # perform operation
fsub.d f1, f24, f23, rdn # perform operation
fsub.d f1, f24, f23, rmm # perform operation
fsub.d f1, f24, f23, rne # perform operation
fsub.d f1, f24, f23, rtz # perform operation
fsub.d f1, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x3, 0xb4ba8211 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fsub.d f3, f24, f9, dyn # perform operation
fsub.d f3, f24, f9, rdn # perform operation
fsub.d f3, f24, f9, rmm # perform operation
fsub.d f3, f24, f9, rne # perform operation
fsub.d f3, f24, f9, rtz # perform operation
fsub.d f3, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x20, 0x0ea6c626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fsub.d f20, f7, f29, dyn # perform operation
fsub.d f20, f7, f29, rdn # perform operation
fsub.d f20, f7, f29, rmm # perform operation
fsub.d f20, f7, f29, rne # perform operation
fsub.d f20, f7, f29, rtz # perform operation
fsub.d f20, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x23, 0x3e7c07fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fsub.d f23, f15, f29, dyn # perform operation
fsub.d f23, f15, f29, rdn # perform operation
fsub.d f23, f15, f29, rmm # perform operation
fsub.d f23, f15, f29, rne # perform operation
fsub.d f23, f15, f29, rtz # perform operation
fsub.d f23, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x20, 0x046b513b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fsub.d f20, f2, f3, dyn # perform operation
fsub.d f20, f2, f3, rdn # perform operation
fsub.d f20, f2, f3, rmm # perform operation
fsub.d f20, f2, f3, rne # perform operation
fsub.d f20, f2, f3, rtz # perform operation
fsub.d f20, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x28, 0x5cec483d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fsub.d f28, f8, f14, dyn # perform operation
fsub.d f28, f8, f14, rdn # perform operation
fsub.d f28, f8, f14, rmm # perform operation
fsub.d f28, f8, f14, rne # perform operation
fsub.d f28, f8, f14, rtz # perform operation
fsub.d f28, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x11, 0xfe559258 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
fsub.d f11, f10, f28, dyn # perform operation
fsub.d f11, f10, f28, rdn # perform operation
fsub.d f11, f10, f28, rmm # perform operation
fsub.d f11, f10, f28, rne # perform operation
fsub.d f11, f10, f28, rtz # perform operation
fsub.d f11, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x14, 0x572e7ea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fsub.d f14, f10, f20, dyn # perform operation
fsub.d f14, f10, f20, rdn # perform operation
fsub.d f14, f10, f20, rmm # perform operation
fsub.d f14, f10, f20, rne # perform operation
fsub.d f14, f10, f20, rtz # perform operation
fsub.d f14, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x6, 0x4edd3557 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fsub.d f6, f20, f13, dyn # perform operation
fsub.d f6, f20, f13, rdn # perform operation
fsub.d f6, f20, f13, rmm # perform operation
fsub.d f6, f20, f13, rne # perform operation
fsub.d f6, f20, f13, rtz # perform operation
fsub.d f6, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x9, 0x08e44e55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fsub.d f9, f1, f29, dyn # perform operation
fsub.d f9, f1, f29, rdn # perform operation
fsub.d f9, f1, f29, rmm # perform operation
fsub.d f9, f1, f29, rne # perform operation
fsub.d f9, f1, f29, rtz # perform operation
fsub.d f9, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x21, 0xa92cbfe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fsub.d f21, f26, f29, dyn # perform operation
fsub.d f21, f26, f29, rdn # perform operation
fsub.d f21, f26, f29, rmm # perform operation
fsub.d f21, f26, f29, rne # perform operation
fsub.d f21, f26, f29, rtz # perform operation
fsub.d f21, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x25, 0xd5f22fda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fsub.d f25, f29, f15, dyn # perform operation
fsub.d f25, f29, f15, rdn # perform operation
fsub.d f25, f29, f15, rmm # perform operation
fsub.d f25, f29, f15, rne # perform operation
fsub.d f25, f29, f15, rtz # perform operation
fsub.d f25, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x21, 0xf0ff3465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fsub.d f21, f8, f17, dyn # perform operation
fsub.d f21, f8, f17, rdn # perform operation
fsub.d f21, f8, f17, rmm # perform operation
fsub.d f21, f8, f17, rne # perform operation
fsub.d f21, f8, f17, rtz # perform operation
fsub.d f21, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x22, 0x113c93b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fsub.d f22, f17, f1, dyn # perform operation
fsub.d f22, f17, f1, rdn # perform operation
fsub.d f22, f17, f1, rmm # perform operation
fsub.d f22, f17, f1, rne # perform operation
fsub.d f22, f17, f1, rtz # perform operation
fsub.d f22, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x13, 0xde1c7583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fsub.d f13, f20, f29, dyn # perform operation
fsub.d f13, f20, f29, rdn # perform operation
fsub.d f13, f20, f29, rmm # perform operation
fsub.d f13, f20, f29, rne # perform operation
fsub.d f13, f20, f29, rtz # perform operation
fsub.d f13, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x20, 0xcdbdd70c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fsub.d f20, f13, f1, dyn # perform operation
fsub.d f20, f13, f1, rdn # perform operation
fsub.d f20, f13, f1, rmm # perform operation
fsub.d f20, f13, f1, rne # perform operation
fsub.d f20, f13, f1, rtz # perform operation
fsub.d f20, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x7, 0xe81fa420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fsub.d f7, f22, f23, dyn # perform operation
fsub.d f7, f22, f23, rdn # perform operation
fsub.d f7, f22, f23, rmm # perform operation
fsub.d f7, f22, f23, rne # perform operation
fsub.d f7, f22, f23, rtz # perform operation
fsub.d f7, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x16, 0x171fa142 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fsub.d f16, f2, f18, dyn # perform operation
fsub.d f16, f2, f18, rdn # perform operation
fsub.d f16, f2, f18, rmm # perform operation
fsub.d f16, f2, f18, rne # perform operation
fsub.d f16, f2, f18, rtz # perform operation
fsub.d f16, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x11, 0x0410fa00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fsub.d f11, f30, f10, dyn # perform operation
fsub.d f11, f30, f10, rdn # perform operation
fsub.d f11, f30, f10, rmm # perform operation
fsub.d f11, f30, f10, rne # perform operation
fsub.d f11, f30, f10, rtz # perform operation
fsub.d f11, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x14, 0xc56e26d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fsub.d f14, f12, f5, dyn # perform operation
fsub.d f14, f12, f5, rdn # perform operation
fsub.d f14, f12, f5, rmm # perform operation
fsub.d f14, f12, f5, rne # perform operation
fsub.d f14, f12, f5, rtz # perform operation
fsub.d f14, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x30, 0x118696e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fsub.d f30, f22, f18, dyn # perform operation
fsub.d f30, f22, f18, rdn # perform operation
fsub.d f30, f22, f18, rmm # perform operation
fsub.d f30, f22, f18, rne # perform operation
fsub.d f30, f22, f18, rtz # perform operation
fsub.d f30, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x25, 0x80597838 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fsub.d f25, f9, f2, dyn # perform operation
fsub.d f25, f9, f2, rdn # perform operation
fsub.d f25, f9, f2, rmm # perform operation
fsub.d f25, f9, f2, rne # perform operation
fsub.d f25, f9, f2, rtz # perform operation
fsub.d f25, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x12, 0x0a96a9ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fsub.d f12, f22, f8, dyn # perform operation
fsub.d f12, f22, f8, rdn # perform operation
fsub.d f12, f22, f8, rmm # perform operation
fsub.d f12, f22, f8, rne # perform operation
fsub.d f12, f22, f8, rtz # perform operation
fsub.d f12, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x28, 0x25cb8b22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fsub.d f28, f26, f11, dyn # perform operation
fsub.d f28, f26, f11, rdn # perform operation
fsub.d f28, f26, f11, rmm # perform operation
fsub.d f28, f26, f11, rne # perform operation
fsub.d f28, f26, f11, rtz # perform operation
fsub.d f28, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x22, 0x0c7a4331 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fsub.d f22, f31, f13, dyn # perform operation
fsub.d f22, f31, f13, rdn # perform operation
fsub.d f22, f31, f13, rmm # perform operation
fsub.d f22, f31, f13, rne # perform operation
fsub.d f22, f31, f13, rtz # perform operation
fsub.d f22, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x5, 0x5f40819e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
fsub.d f5, f23, f25, dyn # perform operation
fsub.d f5, f23, f25, rdn # perform operation
fsub.d f5, f23, f25, rmm # perform operation
fsub.d f5, f23, f25, rne # perform operation
fsub.d f5, f23, f25, rtz # perform operation
fsub.d f5, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x5, 0x26f0c97b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
fsub.d f5, f25, f3, dyn # perform operation
fsub.d f5, f25, f3, rdn # perform operation
fsub.d f5, f25, f3, rmm # perform operation
fsub.d f5, f25, f3, rne # perform operation
fsub.d f5, f25, f3, rtz # perform operation
fsub.d f5, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x7, 0xb2b81a28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fsub.d f7, f14, f8, dyn # perform operation
fsub.d f7, f14, f8, rdn # perform operation
fsub.d f7, f14, f8, rmm # perform operation
fsub.d f7, f14, f8, rne # perform operation
fsub.d f7, f14, f8, rtz # perform operation
fsub.d f7, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x15, 0x126df246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
fsub.d f15, f17, f1, dyn # perform operation
fsub.d f15, f17, f1, rdn # perform operation
fsub.d f15, f17, f1, rmm # perform operation
fsub.d f15, f17, f1, rne # perform operation
fsub.d f15, f17, f1, rtz # perform operation
fsub.d f15, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x19, 0xec8007bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fsub.d f19, f25, f3, dyn # perform operation
fsub.d f19, f25, f3, rdn # perform operation
fsub.d f19, f25, f3, rmm # perform operation
fsub.d f19, f25, f3, rne # perform operation
fsub.d f19, f25, f3, rtz # perform operation
fsub.d f19, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x2, 0xdf8f6bf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
fsub.d f2, f30, f26, dyn # perform operation
fsub.d f2, f30, f26, rdn # perform operation
fsub.d f2, f30, f26, rmm # perform operation
fsub.d f2, f30, f26, rne # perform operation
fsub.d f2, f30, f26, rtz # perform operation
fsub.d f2, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x2, 0x44ecc945 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fsub.d f2, f28, f19, dyn # perform operation
fsub.d f2, f28, f19, rdn # perform operation
fsub.d f2, f28, f19, rmm # perform operation
fsub.d f2, f28, f19, rne # perform operation
fsub.d f2, f28, f19, rtz # perform operation
fsub.d f2, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x17, 0x081e0195 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fsub.d f17, f8, f22, dyn # perform operation
fsub.d f17, f8, f22, rdn # perform operation
fsub.d f17, f8, f22, rmm # perform operation
fsub.d f17, f8, f22, rne # perform operation
fsub.d f17, f8, f22, rtz # perform operation
fsub.d f17, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x2, 0xdbc345fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fsub.d f2, f5, f27, dyn # perform operation
fsub.d f2, f5, f27, rdn # perform operation
fsub.d f2, f5, f27, rmm # perform operation
fsub.d f2, f5, f27, rne # perform operation
fsub.d f2, f5, f27, rtz # perform operation
fsub.d f2, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x14, 0x3ed18b4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fsub.d f14, f12, f25, dyn # perform operation
fsub.d f14, f12, f25, rdn # perform operation
fsub.d f14, f12, f25, rmm # perform operation
fsub.d f14, f12, f25, rne # perform operation
fsub.d f14, f12, f25, rtz # perform operation
fsub.d f14, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x6, 0x93de4292 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
fsub.d f6, f1, f31, dyn # perform operation
fsub.d f6, f1, f31, rdn # perform operation
fsub.d f6, f1, f31, rmm # perform operation
fsub.d f6, f1, f31, rne # perform operation
fsub.d f6, f1, f31, rtz # perform operation
fsub.d f6, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x19, 0xd917ba66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fsub.d f19, f27, f14, dyn # perform operation
fsub.d f19, f27, f14, rdn # perform operation
fsub.d f19, f27, f14, rmm # perform operation
fsub.d f19, f27, f14, rne # perform operation
fsub.d f19, f27, f14, rtz # perform operation
fsub.d f19, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x9, 0xd76882b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
fsub.d f9, f12, f6, dyn # perform operation
fsub.d f9, f12, f6, rdn # perform operation
fsub.d f9, f12, f6, rmm # perform operation
fsub.d f9, f12, f6, rne # perform operation
fsub.d f9, f12, f6, rtz # perform operation
fsub.d f9, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x8, 0x876ab0be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fsub.d f8, f5, f6, dyn # perform operation
fsub.d f8, f5, f6, rdn # perform operation
fsub.d f8, f5, f6, rmm # perform operation
fsub.d f8, f5, f6, rne # perform operation
fsub.d f8, f5, f6, rtz # perform operation
fsub.d f8, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x13, 0xac57b6ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fsub.d f13, f15, f21, dyn # perform operation
fsub.d f13, f15, f21, rdn # perform operation
fsub.d f13, f15, f21, rmm # perform operation
fsub.d f13, f15, f21, rne # perform operation
fsub.d f13, f15, f21, rtz # perform operation
fsub.d f13, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x6, 0x33dfee8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fsub.d f6, f10, f31, dyn # perform operation
fsub.d f6, f10, f31, rdn # perform operation
fsub.d f6, f10, f31, rmm # perform operation
fsub.d f6, f10, f31, rne # perform operation
fsub.d f6, f10, f31, rtz # perform operation
fsub.d f6, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x22, 0x642f95f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fsub.d f22, f14, f11, dyn # perform operation
fsub.d f22, f14, f11, rdn # perform operation
fsub.d f22, f14, f11, rmm # perform operation
fsub.d f22, f14, f11, rne # perform operation
fsub.d f22, f14, f11, rtz # perform operation
fsub.d f22, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x19, 0xb2aff849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fsub.d f19, f1, f27, dyn # perform operation
fsub.d f19, f1, f27, rdn # perform operation
fsub.d f19, f1, f27, rmm # perform operation
fsub.d f19, f1, f27, rne # perform operation
fsub.d f19, f1, f27, rtz # perform operation
fsub.d f19, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x18, 0x8204be61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fsub.d f18, f26, f11, dyn # perform operation
fsub.d f18, f26, f11, rdn # perform operation
fsub.d f18, f26, f11, rmm # perform operation
fsub.d f18, f26, f11, rne # perform operation
fsub.d f18, f26, f11, rtz # perform operation
fsub.d f18, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x9, 0xe2ae36f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fsub.d f9, f25, f7, dyn # perform operation
fsub.d f9, f25, f7, rdn # perform operation
fsub.d f9, f25, f7, rmm # perform operation
fsub.d f9, f25, f7, rne # perform operation
fsub.d f9, f25, f7, rtz # perform operation
fsub.d f9, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x29, 0x88849510 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fsub.d f29, f7, f20, dyn # perform operation
fsub.d f29, f7, f20, rdn # perform operation
fsub.d f29, f7, f20, rmm # perform operation
fsub.d f29, f7, f20, rne # perform operation
fsub.d f29, f7, f20, rtz # perform operation
fsub.d f29, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x14, 0xf00fbfe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
fsub.d f14, f20, f4, dyn # perform operation
fsub.d f14, f20, f4, rdn # perform operation
fsub.d f14, f20, f4, rmm # perform operation
fsub.d f14, f20, f4, rne # perform operation
fsub.d f14, f20, f4, rtz # perform operation
fsub.d f14, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x23, 0x86f6896b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fsub.d f23, f13, f20, dyn # perform operation
fsub.d f23, f13, f20, rdn # perform operation
fsub.d f23, f13, f20, rmm # perform operation
fsub.d f23, f13, f20, rne # perform operation
fsub.d f23, f13, f20, rtz # perform operation
fsub.d f23, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x27, 0x7dd1ae64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fsub.d f27, f4, f3, dyn # perform operation
fsub.d f27, f4, f3, rdn # perform operation
fsub.d f27, f4, f3, rmm # perform operation
fsub.d f27, f4, f3, rne # perform operation
fsub.d f27, f4, f3, rtz # perform operation
fsub.d f27, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x27, 0xf3f7f1ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fsub.d f27, f10, f2, dyn # perform operation
fsub.d f27, f10, f2, rdn # perform operation
fsub.d f27, f10, f2, rmm # perform operation
fsub.d f27, f10, f2, rne # perform operation
fsub.d f27, f10, f2, rtz # perform operation
fsub.d f27, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x21, 0x4ca800c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fsub.d f21, f11, f27, dyn # perform operation
fsub.d f21, f11, f27, rdn # perform operation
fsub.d f21, f11, f27, rmm # perform operation
fsub.d f21, f11, f27, rne # perform operation
fsub.d f21, f11, f27, rtz # perform operation
fsub.d f21, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x16, 0x850dfebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fsub.d f16, f10, f22, dyn # perform operation
fsub.d f16, f10, f22, rdn # perform operation
fsub.d f16, f10, f22, rmm # perform operation
fsub.d f16, f10, f22, rne # perform operation
fsub.d f16, f10, f22, rtz # perform operation
fsub.d f16, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x8, 0xeaaab982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
fsub.d f8, f9, f3, dyn # perform operation
fsub.d f8, f9, f3, rdn # perform operation
fsub.d f8, f9, f3, rmm # perform operation
fsub.d f8, f9, f3, rne # perform operation
fsub.d f8, f9, f3, rtz # perform operation
fsub.d f8, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x13, 0x7a5078c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
fsub.d f13, f12, f15, dyn # perform operation
fsub.d f13, f12, f15, rdn # perform operation
fsub.d f13, f12, f15, rmm # perform operation
fsub.d f13, f12, f15, rne # perform operation
fsub.d f13, f12, f15, rtz # perform operation
fsub.d f13, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x15, 0xb5ed7ffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
fsub.d f15, f2, f6, dyn # perform operation
fsub.d f15, f2, f6, rdn # perform operation
fsub.d f15, f2, f6, rmm # perform operation
fsub.d f15, f2, f6, rne # perform operation
fsub.d f15, f2, f6, rtz # perform operation
fsub.d f15, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x8, 0x6e7189e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fsub.d f8, f11, f25, dyn # perform operation
fsub.d f8, f11, f25, rdn # perform operation
fsub.d f8, f11, f25, rmm # perform operation
fsub.d f8, f11, f25, rne # perform operation
fsub.d f8, f11, f25, rtz # perform operation
fsub.d f8, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x21, 0xf215efd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fsub.d f21, f20, f8, dyn # perform operation
fsub.d f21, f20, f8, rdn # perform operation
fsub.d f21, f20, f8, rmm # perform operation
fsub.d f21, f20, f8, rne # perform operation
fsub.d f21, f20, f8, rtz # perform operation
fsub.d f21, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x14, 0xe03818ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fsub.d f14, f28, f13, dyn # perform operation
fsub.d f14, f28, f13, rdn # perform operation
fsub.d f14, f28, f13, rmm # perform operation
fsub.d f14, f28, f13, rne # perform operation
fsub.d f14, f28, f13, rtz # perform operation
fsub.d f14, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x11, 0x1b82e19d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fsub.d f11, f13, f22, dyn # perform operation
fsub.d f11, f13, f22, rdn # perform operation
fsub.d f11, f13, f22, rmm # perform operation
fsub.d f11, f13, f22, rne # perform operation
fsub.d f11, f13, f22, rtz # perform operation
fsub.d f11, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x5, 0x6c93aa4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fsub.d f5, f15, f3, dyn # perform operation
fsub.d f5, f15, f3, rdn # perform operation
fsub.d f5, f15, f3, rmm # perform operation
fsub.d f5, f15, f3, rne # perform operation
fsub.d f5, f15, f3, rtz # perform operation
fsub.d f5, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x23, 0x873dbc74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fsub.d f23, f15, f13, dyn # perform operation
fsub.d f23, f15, f13, rdn # perform operation
fsub.d f23, f15, f13, rmm # perform operation
fsub.d f23, f15, f13, rne # perform operation
fsub.d f23, f15, f13, rtz # perform operation
fsub.d f23, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x19, 0x5239c6fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fsub.d f19, f7, f25, dyn # perform operation
fsub.d f19, f7, f25, rdn # perform operation
fsub.d f19, f7, f25, rmm # perform operation
fsub.d f19, f7, f25, rne # perform operation
fsub.d f19, f7, f25, rtz # perform operation
fsub.d f19, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x29, 0x8b57a6b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
fsub.d f29, f13, f2, dyn # perform operation
fsub.d f29, f13, f2, rdn # perform operation
fsub.d f29, f13, f2, rmm # perform operation
fsub.d f29, f13, f2, rne # perform operation
fsub.d f29, f13, f2, rtz # perform operation
fsub.d f29, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x21, 0x5664d997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fsub.d f21, f18, f19, dyn # perform operation
fsub.d f21, f18, f19, rdn # perform operation
fsub.d f21, f18, f19, rmm # perform operation
fsub.d f21, f18, f19, rne # perform operation
fsub.d f21, f18, f19, rtz # perform operation
fsub.d f21, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x7, 0x49659241 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fsub.d f7, f18, f1, dyn # perform operation
fsub.d f7, f18, f1, rdn # perform operation
fsub.d f7, f18, f1, rmm # perform operation
fsub.d f7, f18, f1, rne # perform operation
fsub.d f7, f18, f1, rtz # perform operation
fsub.d f7, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x30, 0x8896a55a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fsub.d f30, f2, f11, dyn # perform operation
fsub.d f30, f2, f11, rdn # perform operation
fsub.d f30, f2, f11, rmm # perform operation
fsub.d f30, f2, f11, rne # perform operation
fsub.d f30, f2, f11, rtz # perform operation
fsub.d f30, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x27, 0x7e88fd4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fsub.d f27, f19, f15, dyn # perform operation
fsub.d f27, f19, f15, rdn # perform operation
fsub.d f27, f19, f15, rmm # perform operation
fsub.d f27, f19, f15, rne # perform operation
fsub.d f27, f19, f15, rtz # perform operation
fsub.d f27, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x10, 0xae6728ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fsub.d f10, f16, f26, dyn # perform operation
fsub.d f10, f16, f26, rdn # perform operation
fsub.d f10, f16, f26, rmm # perform operation
fsub.d f10, f16, f26, rne # perform operation
fsub.d f10, f16, f26, rtz # perform operation
fsub.d f10, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x96a33015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fsub.d f29, f21, f27, dyn # perform operation
fsub.d f29, f21, f27, rdn # perform operation
fsub.d f29, f21, f27, rmm # perform operation
fsub.d f29, f21, f27, rne # perform operation
fsub.d f29, f21, f27, rtz # perform operation
fsub.d f29, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x31, 0xadbdf264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fsub.d f31, f8, f28, dyn # perform operation
fsub.d f31, f8, f28, rdn # perform operation
fsub.d f31, f8, f28, rmm # perform operation
fsub.d f31, f8, f28, rne # perform operation
fsub.d f31, f8, f28, rtz # perform operation
fsub.d f31, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x28, 0xea2a5c71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fsub.d f28, f5, f16, dyn # perform operation
fsub.d f28, f5, f16, rdn # perform operation
fsub.d f28, f5, f16, rmm # perform operation
fsub.d f28, f5, f16, rne # perform operation
fsub.d f28, f5, f16, rtz # perform operation
fsub.d f28, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x18, 0x593c4d33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fsub.d f18, f4, f13, dyn # perform operation
fsub.d f18, f4, f13, rdn # perform operation
fsub.d f18, f4, f13, rmm # perform operation
fsub.d f18, f4, f13, rne # perform operation
fsub.d f18, f4, f13, rtz # perform operation
fsub.d f18, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x12, 0x25ae7836 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
fsub.d f12, f15, f20, dyn # perform operation
fsub.d f12, f15, f20, rdn # perform operation
fsub.d f12, f15, f20, rmm # perform operation
fsub.d f12, f15, f20, rne # perform operation
fsub.d f12, f15, f20, rtz # perform operation
fsub.d f12, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x8, 0x2323360d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fsub.d f8, f7, f2, dyn # perform operation
fsub.d f8, f7, f2, rdn # perform operation
fsub.d f8, f7, f2, rmm # perform operation
fsub.d f8, f7, f2, rne # perform operation
fsub.d f8, f7, f2, rtz # perform operation
fsub.d f8, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x20, 0x69e479bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
fsub.d f20, f25, f2, dyn # perform operation
fsub.d f20, f25, f2, rdn # perform operation
fsub.d f20, f25, f2, rmm # perform operation
fsub.d f20, f25, f2, rne # perform operation
fsub.d f20, f25, f2, rtz # perform operation
fsub.d f20, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x28, 0xdfe6758e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fsub.d f28, f21, f9, dyn # perform operation
fsub.d f28, f21, f9, rdn # perform operation
fsub.d f28, f21, f9, rmm # perform operation
fsub.d f28, f21, f9, rne # perform operation
fsub.d f28, f21, f9, rtz # perform operation
fsub.d f28, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x23, 0xa97cb875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fsub.d f23, f22, f5, dyn # perform operation
fsub.d f23, f22, f5, rdn # perform operation
fsub.d f23, f22, f5, rmm # perform operation
fsub.d f23, f22, f5, rne # perform operation
fsub.d f23, f22, f5, rtz # perform operation
fsub.d f23, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x31, 0x84defe28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fsub.d f31, f10, f7, dyn # perform operation
fsub.d f31, f10, f7, rdn # perform operation
fsub.d f31, f10, f7, rmm # perform operation
fsub.d f31, f10, f7, rne # perform operation
fsub.d f31, f10, f7, rtz # perform operation
fsub.d f31, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x2, 0x6029ed64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fsub.d f2, f25, f20, dyn # perform operation
fsub.d f2, f25, f20, rdn # perform operation
fsub.d f2, f25, f20, rmm # perform operation
fsub.d f2, f25, f20, rne # perform operation
fsub.d f2, f25, f20, rtz # perform operation
fsub.d f2, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x24, 0xf9b25587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fsub.d f24, f15, f2, dyn # perform operation
fsub.d f24, f15, f2, rdn # perform operation
fsub.d f24, f15, f2, rmm # perform operation
fsub.d f24, f15, f2, rne # perform operation
fsub.d f24, f15, f2, rtz # perform operation
fsub.d f24, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x16, 0xadfa98d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fsub.d f16, f25, f15, dyn # perform operation
fsub.d f16, f25, f15, rdn # perform operation
fsub.d f16, f25, f15, rmm # perform operation
fsub.d f16, f25, f15, rne # perform operation
fsub.d f16, f25, f15, rtz # perform operation
fsub.d f16, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x13, 0xdc22f39e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fsub.d f13, f28, f15, dyn # perform operation
fsub.d f13, f28, f15, rdn # perform operation
fsub.d f13, f28, f15, rmm # perform operation
fsub.d f13, f28, f15, rne # perform operation
fsub.d f13, f28, f15, rtz # perform operation
fsub.d f13, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x20, 0x3fd8057e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fsub.d f20, f4, f21, dyn # perform operation
fsub.d f20, f4, f21, rdn # perform operation
fsub.d f20, f4, f21, rmm # perform operation
fsub.d f20, f4, f21, rne # perform operation
fsub.d f20, f4, f21, rtz # perform operation
fsub.d f20, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x1, 0x50b4c1d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fsub.d f1, f12, f13, dyn # perform operation
fsub.d f1, f12, f13, rdn # perform operation
fsub.d f1, f12, f13, rmm # perform operation
fsub.d f1, f12, f13, rne # perform operation
fsub.d f1, f12, f13, rtz # perform operation
fsub.d f1, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x3, 0xae2aeb85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fsub.d f3, f10, f2, dyn # perform operation
fsub.d f3, f10, f2, rdn # perform operation
fsub.d f3, f10, f2, rmm # perform operation
fsub.d f3, f10, f2, rne # perform operation
fsub.d f3, f10, f2, rtz # perform operation
fsub.d f3, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x11, 0xe33bfc9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
fsub.d f11, f17, f2, dyn # perform operation
fsub.d f11, f17, f2, rdn # perform operation
fsub.d f11, f17, f2, rmm # perform operation
fsub.d f11, f17, f2, rne # perform operation
fsub.d f11, f17, f2, rtz # perform operation
fsub.d f11, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x19, 0xafebafe0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
fsub.d f19, f17, f1, dyn # perform operation
fsub.d f19, f17, f1, rdn # perform operation
fsub.d f19, f17, f1, rmm # perform operation
fsub.d f19, f17, f1, rne # perform operation
fsub.d f19, f17, f1, rtz # perform operation
fsub.d f19, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x7, 0x3476debb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
fsub.d f7, f12, f4, dyn # perform operation
fsub.d f7, f12, f4, rdn # perform operation
fsub.d f7, f12, f4, rmm # perform operation
fsub.d f7, f12, f4, rne # perform operation
fsub.d f7, f12, f4, rtz # perform operation
fsub.d f7, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x31, 0x42ab556e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fsub.d f31, f21, f19, dyn # perform operation
fsub.d f31, f21, f19, rdn # perform operation
fsub.d f31, f21, f19, rmm # perform operation
fsub.d f31, f21, f19, rne # perform operation
fsub.d f31, f21, f19, rtz # perform operation
fsub.d f31, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x28, 0xdd093f50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
fsub.d f28, f2, f13, dyn # perform operation
fsub.d f28, f2, f13, rdn # perform operation
fsub.d f28, f2, f13, rmm # perform operation
fsub.d f28, f2, f13, rne # perform operation
fsub.d f28, f2, f13, rtz # perform operation
fsub.d f28, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x27, 0xa31fc603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fsub.d f27, f22, f5, dyn # perform operation
fsub.d f27, f22, f5, rdn # perform operation
fsub.d f27, f22, f5, rmm # perform operation
fsub.d f27, f22, f5, rne # perform operation
fsub.d f27, f22, f5, rtz # perform operation
fsub.d f27, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x20, 0xb65f509a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fsub.d f20, f25, f4, dyn # perform operation
fsub.d f20, f25, f4, rdn # perform operation
fsub.d f20, f25, f4, rmm # perform operation
fsub.d f20, f25, f4, rne # perform operation
fsub.d f20, f25, f4, rtz # perform operation
fsub.d f20, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x2, 0x3ebe9c26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fsub.d f2, f25, f28, dyn # perform operation
fsub.d f2, f25, f28, rdn # perform operation
fsub.d f2, f25, f28, rmm # perform operation
fsub.d f2, f25, f28, rne # perform operation
fsub.d f2, f25, f28, rtz # perform operation
fsub.d f2, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x17, 0x705114bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
fsub.d f17, f27, f21, dyn # perform operation
fsub.d f17, f27, f21, rdn # perform operation
fsub.d f17, f27, f21, rmm # perform operation
fsub.d f17, f27, f21, rne # perform operation
fsub.d f17, f27, f21, rtz # perform operation
fsub.d f17, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x9, 0xdabbaa70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fsub.d f9, f13, f6, dyn # perform operation
fsub.d f9, f13, f6, rdn # perform operation
fsub.d f9, f13, f6, rmm # perform operation
fsub.d f9, f13, f6, rne # perform operation
fsub.d f9, f13, f6, rtz # perform operation
fsub.d f9, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x22, 0x771d6ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fsub.d f22, f23, f12, dyn # perform operation
fsub.d f22, f23, f12, rdn # perform operation
fsub.d f22, f23, f12, rmm # perform operation
fsub.d f22, f23, f12, rne # perform operation
fsub.d f22, f23, f12, rtz # perform operation
fsub.d f22, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x30, 0x894a0a80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
fsub.d f30, f5, f28, dyn # perform operation
fsub.d f30, f5, f28, rdn # perform operation
fsub.d f30, f5, f28, rmm # perform operation
fsub.d f30, f5, f28, rne # perform operation
fsub.d f30, f5, f28, rtz # perform operation
fsub.d f30, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x29, 0xba1ff857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fsub.d f29, f21, f12, dyn # perform operation
fsub.d f29, f21, f12, rdn # perform operation
fsub.d f29, f21, f12, rmm # perform operation
fsub.d f29, f21, f12, rne # perform operation
fsub.d f29, f21, f12, rtz # perform operation
fsub.d f29, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x27, 0x80b678aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fsub.d f27, f30, f15, dyn # perform operation
fsub.d f27, f30, f15, rdn # perform operation
fsub.d f27, f30, f15, rmm # perform operation
fsub.d f27, f30, f15, rne # perform operation
fsub.d f27, f30, f15, rtz # perform operation
fsub.d f27, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x13, 0x5fb2a243 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fsub.d f13, f20, f24, dyn # perform operation
fsub.d f13, f20, f24, rdn # perform operation
fsub.d f13, f20, f24, rmm # perform operation
fsub.d f13, f20, f24, rne # perform operation
fsub.d f13, f20, f24, rtz # perform operation
fsub.d f13, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x15, 0x1320ce98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fsub.d f15, f16, f29, dyn # perform operation
fsub.d f15, f16, f29, rdn # perform operation
fsub.d f15, f16, f29, rmm # perform operation
fsub.d f15, f16, f29, rne # perform operation
fsub.d f15, f16, f29, rtz # perform operation
fsub.d f15, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x10, 0x597cec59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fsub.d f10, f1, f25, dyn # perform operation
fsub.d f10, f1, f25, rdn # perform operation
fsub.d f10, f1, f25, rmm # perform operation
fsub.d f10, f1, f25, rne # perform operation
fsub.d f10, f1, f25, rtz # perform operation
fsub.d f10, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x19, 0x59e58cbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fsub.d f19, f2, f12, dyn # perform operation
fsub.d f19, f2, f12, rdn # perform operation
fsub.d f19, f2, f12, rmm # perform operation
fsub.d f19, f2, f12, rne # perform operation
fsub.d f19, f2, f12, rtz # perform operation
fsub.d f19, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x12, 0x622e4f49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fsub.d f12, f9, f10, dyn # perform operation
fsub.d f12, f9, f10, rdn # perform operation
fsub.d f12, f9, f10, rmm # perform operation
fsub.d f12, f9, f10, rne # perform operation
fsub.d f12, f9, f10, rtz # perform operation
fsub.d f12, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x14, 0xc5be8812 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fsub.d f14, f3, f4, dyn # perform operation
fsub.d f14, f3, f4, rdn # perform operation
fsub.d f14, f3, f4, rmm # perform operation
fsub.d f14, f3, f4, rne # perform operation
fsub.d f14, f3, f4, rtz # perform operation
fsub.d f14, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x17, 0x80d406b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fsub.d f17, f23, f7, dyn # perform operation
fsub.d f17, f23, f7, rdn # perform operation
fsub.d f17, f23, f7, rmm # perform operation
fsub.d f17, f23, f7, rne # perform operation
fsub.d f17, f23, f7, rtz # perform operation
fsub.d f17, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x1, 0x912f595a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fsub.d f1, f12, f20, dyn # perform operation
fsub.d f1, f12, f20, rdn # perform operation
fsub.d f1, f12, f20, rmm # perform operation
fsub.d f1, f12, f20, rne # perform operation
fsub.d f1, f12, f20, rtz # perform operation
fsub.d f1, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x22, 0xfdd45733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
fsub.d f22, f17, f23, dyn # perform operation
fsub.d f22, f17, f23, rdn # perform operation
fsub.d f22, f17, f23, rmm # perform operation
fsub.d f22, f17, f23, rne # perform operation
fsub.d f22, f17, f23, rtz # perform operation
fsub.d f22, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x19, 0x5c37a53f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fsub.d f19, f9, f1, dyn # perform operation
fsub.d f19, f9, f1, rdn # perform operation
fsub.d f19, f9, f1, rmm # perform operation
fsub.d f19, f9, f1, rne # perform operation
fsub.d f19, f9, f1, rtz # perform operation
fsub.d f19, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x25, 0x6c10e73a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fsub.d f25, f1, f12, dyn # perform operation
fsub.d f25, f1, f12, rdn # perform operation
fsub.d f25, f1, f12, rmm # perform operation
fsub.d f25, f1, f12, rne # perform operation
fsub.d f25, f1, f12, rtz # perform operation
fsub.d f25, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x18, 0xab072535 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fsub.d f18, f4, f26, dyn # perform operation
fsub.d f18, f4, f26, rdn # perform operation
fsub.d f18, f4, f26, rmm # perform operation
fsub.d f18, f4, f26, rne # perform operation
fsub.d f18, f4, f26, rtz # perform operation
fsub.d f18, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f4, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x27, 0xc2cd3279 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fsub.d f27, f2, f14, dyn # perform operation
fsub.d f27, f2, f14, rdn # perform operation
fsub.d f27, f2, f14, rmm # perform operation
fsub.d f27, f2, f14, rne # perform operation
fsub.d f27, f2, f14, rtz # perform operation
fsub.d f27, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x12, 0x50c9732b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fsub.d f12, f31, f18, dyn # perform operation
fsub.d f12, f31, f18, rdn # perform operation
fsub.d f12, f31, f18, rmm # perform operation
fsub.d f12, f31, f18, rne # perform operation
fsub.d f12, f31, f18, rtz # perform operation
fsub.d f12, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x16, 0xfa471568 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fsub.d f16, f22, f24, dyn # perform operation
fsub.d f16, f22, f24, rdn # perform operation
fsub.d f16, f22, f24, rmm # perform operation
fsub.d f16, f22, f24, rne # perform operation
fsub.d f16, f22, f24, rtz # perform operation
fsub.d f16, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x2, 0x75367c71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fsub.d f2, f14, f24, dyn # perform operation
fsub.d f2, f14, f24, rdn # perform operation
fsub.d f2, f14, f24, rmm # perform operation
fsub.d f2, f14, f24, rne # perform operation
fsub.d f2, f14, f24, rtz # perform operation
fsub.d f2, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x5, 0xceacd669 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fsub.d f5, f2, f21, dyn # perform operation
fsub.d f5, f2, f21, rdn # perform operation
fsub.d f5, f2, f21, rmm # perform operation
fsub.d f5, f2, f21, rne # perform operation
fsub.d f5, f2, f21, rtz # perform operation
fsub.d f5, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x8, 0x41c4e846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fsub.d f8, f10, f9, dyn # perform operation
fsub.d f8, f10, f9, rdn # perform operation
fsub.d f8, f10, f9, rmm # perform operation
fsub.d f8, f10, f9, rne # perform operation
fsub.d f8, f10, f9, rtz # perform operation
fsub.d f8, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x6, 0x39d568f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fsub.d f6, f29, f18, dyn # perform operation
fsub.d f6, f29, f18, rdn # perform operation
fsub.d f6, f29, f18, rmm # perform operation
fsub.d f6, f29, f18, rne # perform operation
fsub.d f6, f29, f18, rtz # perform operation
fsub.d f6, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x4, 0x3b2fd26e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fsub.d f4, f24, f21, dyn # perform operation
fsub.d f4, f24, f21, rdn # perform operation
fsub.d f4, f24, f21, rmm # perform operation
fsub.d f4, f24, f21, rne # perform operation
fsub.d f4, f24, f21, rtz # perform operation
fsub.d f4, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x8, 0x07c02f7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
fsub.d f8, f21, f27, dyn # perform operation
fsub.d f8, f21, f27, rdn # perform operation
fsub.d f8, f21, f27, rmm # perform operation
fsub.d f8, f21, f27, rne # perform operation
fsub.d f8, f21, f27, rtz # perform operation
fsub.d f8, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x6, 0x1fccecd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fsub.d f6, f17, f22, dyn # perform operation
fsub.d f6, f17, f22, rdn # perform operation
fsub.d f6, f17, f22, rmm # perform operation
fsub.d f6, f17, f22, rne # perform operation
fsub.d f6, f17, f22, rtz # perform operation
fsub.d f6, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x8, 0x5f47b9ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fsub.d f8, f27, f31, dyn # perform operation
fsub.d f8, f27, f31, rdn # perform operation
fsub.d f8, f27, f31, rmm # perform operation
fsub.d f8, f27, f31, rne # perform operation
fsub.d f8, f27, f31, rtz # perform operation
fsub.d f8, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x24, 0xa3b77741 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fsub.d f24, f29, f18, dyn # perform operation
fsub.d f24, f29, f18, rdn # perform operation
fsub.d f24, f29, f18, rmm # perform operation
fsub.d f24, f29, f18, rne # perform operation
fsub.d f24, f29, f18, rtz # perform operation
fsub.d f24, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x21, 0x526fea33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fsub.d f21, f23, f7, dyn # perform operation
fsub.d f21, f23, f7, rdn # perform operation
fsub.d f21, f23, f7, rmm # perform operation
fsub.d f21, f23, f7, rne # perform operation
fsub.d f21, f23, f7, rtz # perform operation
fsub.d f21, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x2, 0x1e106f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fsub.d f2, f21, f30, dyn # perform operation
fsub.d f2, f21, f30, rdn # perform operation
fsub.d f2, f21, f30, rmm # perform operation
fsub.d f2, f21, f30, rne # perform operation
fsub.d f2, f21, f30, rtz # perform operation
fsub.d f2, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x21, 0xb069e128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fsub.d f21, f19, f7, dyn # perform operation
fsub.d f21, f19, f7, rdn # perform operation
fsub.d f21, f19, f7, rmm # perform operation
fsub.d f21, f19, f7, rne # perform operation
fsub.d f21, f19, f7, rtz # perform operation
fsub.d f21, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x16, 0x17eb1831 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fsub.d f16, f10, f11, dyn # perform operation
fsub.d f16, f10, f11, rdn # perform operation
fsub.d f16, f10, f11, rmm # perform operation
fsub.d f16, f10, f11, rne # perform operation
fsub.d f16, f10, f11, rtz # perform operation
fsub.d f16, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x22, 0xcccd060c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fsub.d f22, f21, f27, dyn # perform operation
fsub.d f22, f21, f27, rdn # perform operation
fsub.d f22, f21, f27, rmm # perform operation
fsub.d f22, f21, f27, rne # perform operation
fsub.d f22, f21, f27, rtz # perform operation
fsub.d f22, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x10, 0xca45c8ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fsub.d f10, f11, f30, dyn # perform operation
fsub.d f10, f11, f30, rdn # perform operation
fsub.d f10, f11, f30, rmm # perform operation
fsub.d f10, f11, f30, rne # perform operation
fsub.d f10, f11, f30, rtz # perform operation
fsub.d f10, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x11, 0xde1168cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fsub.d f11, f6, f23, dyn # perform operation
fsub.d f11, f6, f23, rdn # perform operation
fsub.d f11, f6, f23, rmm # perform operation
fsub.d f11, f6, f23, rne # perform operation
fsub.d f11, f6, f23, rtz # perform operation
fsub.d f11, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x11, 0xd6b274d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
fsub.d f11, f2, f17, dyn # perform operation
fsub.d f11, f2, f17, rdn # perform operation
fsub.d f11, f2, f17, rmm # perform operation
fsub.d f11, f2, f17, rne # perform operation
fsub.d f11, f2, f17, rtz # perform operation
fsub.d f11, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x14, 0x58c58af4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fsub.d f14, f23, f5, dyn # perform operation
fsub.d f14, f23, f5, rdn # perform operation
fsub.d f14, f23, f5, rmm # perform operation
fsub.d f14, f23, f5, rne # perform operation
fsub.d f14, f23, f5, rtz # perform operation
fsub.d f14, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x7, 0xecab440f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
fsub.d f7, f16, f21, dyn # perform operation
fsub.d f7, f16, f21, rdn # perform operation
fsub.d f7, f16, f21, rmm # perform operation
fsub.d f7, f16, f21, rne # perform operation
fsub.d f7, f16, f21, rtz # perform operation
fsub.d f7, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x27, 0xf7bcde4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fsub.d f27, f3, f4, dyn # perform operation
fsub.d f27, f3, f4, rdn # perform operation
fsub.d f27, f3, f4, rmm # perform operation
fsub.d f27, f3, f4, rne # perform operation
fsub.d f27, f3, f4, rtz # perform operation
fsub.d f27, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x6, 0x0dd02fe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fsub.d f6, f1, f25, dyn # perform operation
fsub.d f6, f1, f25, rdn # perform operation
fsub.d f6, f1, f25, rmm # perform operation
fsub.d f6, f1, f25, rne # perform operation
fsub.d f6, f1, f25, rtz # perform operation
fsub.d f6, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x22, 0x126cff00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fsub.d f22, f3, f18, dyn # perform operation
fsub.d f22, f3, f18, rdn # perform operation
fsub.d f22, f3, f18, rmm # perform operation
fsub.d f22, f3, f18, rne # perform operation
fsub.d f22, f3, f18, rtz # perform operation
fsub.d f22, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f3, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x15, 0xa945d155 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fsub.d f15, f23, f10, dyn # perform operation
fsub.d f15, f23, f10, rdn # perform operation
fsub.d f15, f23, f10, rmm # perform operation
fsub.d f15, f23, f10, rne # perform operation
fsub.d f15, f23, f10, rtz # perform operation
fsub.d f15, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x30, 0xa2f08d65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fsub.d f30, f16, f17, dyn # perform operation
fsub.d f30, f16, f17, rdn # perform operation
fsub.d f30, f16, f17, rmm # perform operation
fsub.d f30, f16, f17, rne # perform operation
fsub.d f30, f16, f17, rtz # perform operation
fsub.d f30, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x29, 0xbb70e4bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fsub.d f29, f10, f6, dyn # perform operation
fsub.d f29, f10, f6, rdn # perform operation
fsub.d f29, f10, f6, rmm # perform operation
fsub.d f29, f10, f6, rne # perform operation
fsub.d f29, f10, f6, rtz # perform operation
fsub.d f29, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x17, 0x941f38f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fsub.d f17, f23, f3, dyn # perform operation
fsub.d f17, f23, f3, rdn # perform operation
fsub.d f17, f23, f3, rmm # perform operation
fsub.d f17, f23, f3, rne # perform operation
fsub.d f17, f23, f3, rtz # perform operation
fsub.d f17, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x10, 0xad9a4061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fsub.d f10, f22, f29, dyn # perform operation
fsub.d f10, f22, f29, rdn # perform operation
fsub.d f10, f22, f29, rmm # perform operation
fsub.d f10, f22, f29, rne # perform operation
fsub.d f10, f22, f29, rtz # perform operation
fsub.d f10, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x22, 0xbd872f32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fsub.d f22, f20, f4, dyn # perform operation
fsub.d f22, f20, f4, rdn # perform operation
fsub.d f22, f20, f4, rmm # perform operation
fsub.d f22, f20, f4, rne # perform operation
fsub.d f22, f20, f4, rtz # perform operation
fsub.d f22, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x22, 0x65b2cda5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fsub.d f22, f15, f18, dyn # perform operation
fsub.d f22, f15, f18, rdn # perform operation
fsub.d f22, f15, f18, rmm # perform operation
fsub.d f22, f15, f18, rne # perform operation
fsub.d f22, f15, f18, rtz # perform operation
fsub.d f22, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x16, 0xbf094938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fsub.d f16, f18, f19, dyn # perform operation
fsub.d f16, f18, f19, rdn # perform operation
fsub.d f16, f18, f19, rmm # perform operation
fsub.d f16, f18, f19, rne # perform operation
fsub.d f16, f18, f19, rtz # perform operation
fsub.d f16, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x30, 0x79fc817c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
fsub.d f30, f9, f27, dyn # perform operation
fsub.d f30, f9, f27, rdn # perform operation
fsub.d f30, f9, f27, rmm # perform operation
fsub.d f30, f9, f27, rne # perform operation
fsub.d f30, f9, f27, rtz # perform operation
fsub.d f30, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x2, 0xda870c6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fsub.d f2, f9, f28, dyn # perform operation
fsub.d f2, f9, f28, rdn # perform operation
fsub.d f2, f9, f28, rmm # perform operation
fsub.d f2, f9, f28, rne # perform operation
fsub.d f2, f9, f28, rtz # perform operation
fsub.d f2, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x4, 0xe34106b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fsub.d f4, f1, f25, dyn # perform operation
fsub.d f4, f1, f25, rdn # perform operation
fsub.d f4, f1, f25, rmm # perform operation
fsub.d f4, f1, f25, rne # perform operation
fsub.d f4, f1, f25, rtz # perform operation
fsub.d f4, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x19, 0x60b60bd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fsub.d f19, f2, f28, dyn # perform operation
fsub.d f19, f2, f28, rdn # perform operation
fsub.d f19, f2, f28, rmm # perform operation
fsub.d f19, f2, f28, rne # perform operation
fsub.d f19, f2, f28, rtz # perform operation
fsub.d f19, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x28, 0x33d7092c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fsub.d f28, f9, f21, dyn # perform operation
fsub.d f28, f9, f21, rdn # perform operation
fsub.d f28, f9, f21, rmm # perform operation
fsub.d f28, f9, f21, rne # perform operation
fsub.d f28, f9, f21, rtz # perform operation
fsub.d f28, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x4, 0xdad581f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fsub.d f4, f31, f13, dyn # perform operation
fsub.d f4, f31, f13, rdn # perform operation
fsub.d f4, f31, f13, rmm # perform operation
fsub.d f4, f31, f13, rne # perform operation
fsub.d f4, f31, f13, rtz # perform operation
fsub.d f4, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x3, 0xae9c9a2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fsub.d f3, f5, f23, dyn # perform operation
fsub.d f3, f5, f23, rdn # perform operation
fsub.d f3, f5, f23, rmm # perform operation
fsub.d f3, f5, f23, rne # perform operation
fsub.d f3, f5, f23, rtz # perform operation
fsub.d f3, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x12, 0x58c41dc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fsub.d f12, f1, f17, dyn # perform operation
fsub.d f12, f1, f17, rdn # perform operation
fsub.d f12, f1, f17, rmm # perform operation
fsub.d f12, f1, f17, rne # perform operation
fsub.d f12, f1, f17, rtz # perform operation
fsub.d f12, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x4, 0x852618cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fsub.d f4, f11, f24, dyn # perform operation
fsub.d f4, f11, f24, rdn # perform operation
fsub.d f4, f11, f24, rmm # perform operation
fsub.d f4, f11, f24, rne # perform operation
fsub.d f4, f11, f24, rtz # perform operation
fsub.d f4, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x12, 0x6dd76ba9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fsub.d f12, f6, f13, dyn # perform operation
fsub.d f12, f6, f13, rdn # perform operation
fsub.d f12, f6, f13, rmm # perform operation
fsub.d f12, f6, f13, rne # perform operation
fsub.d f12, f6, f13, rtz # perform operation
fsub.d f12, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x27, 0x6ee021f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fsub.d f27, f18, f29, dyn # perform operation
fsub.d f27, f18, f29, rdn # perform operation
fsub.d f27, f18, f29, rmm # perform operation
fsub.d f27, f18, f29, rne # perform operation
fsub.d f27, f18, f29, rtz # perform operation
fsub.d f27, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x3, 0x805dcaec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fsub.d f3, f13, f8, dyn # perform operation
fsub.d f3, f13, f8, rdn # perform operation
fsub.d f3, f13, f8, rmm # perform operation
fsub.d f3, f13, f8, rne # perform operation
fsub.d f3, f13, f8, rtz # perform operation
fsub.d f3, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x15, 0xbabc4d25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fsub.d f15, f1, f28, dyn # perform operation
fsub.d f15, f1, f28, rdn # perform operation
fsub.d f15, f1, f28, rmm # perform operation
fsub.d f15, f1, f28, rne # perform operation
fsub.d f15, f1, f28, rtz # perform operation
fsub.d f15, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x19, 0x3ba01b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fsub.d f19, f6, f28, dyn # perform operation
fsub.d f19, f6, f28, rdn # perform operation
fsub.d f19, f6, f28, rmm # perform operation
fsub.d f19, f6, f28, rne # perform operation
fsub.d f19, f6, f28, rtz # perform operation
fsub.d f19, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x21, 0x089412d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fsub.d f21, f13, f18, dyn # perform operation
fsub.d f21, f13, f18, rdn # perform operation
fsub.d f21, f13, f18, rmm # perform operation
fsub.d f21, f13, f18, rne # perform operation
fsub.d f21, f13, f18, rtz # perform operation
fsub.d f21, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x14, 0x5f2a5515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fsub.d f14, f11, f8, dyn # perform operation
fsub.d f14, f11, f8, rdn # perform operation
fsub.d f14, f11, f8, rmm # perform operation
fsub.d f14, f11, f8, rne # perform operation
fsub.d f14, f11, f8, rtz # perform operation
fsub.d f14, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x28, 0xccfa8d52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
fsub.d f28, f9, f4, dyn # perform operation
fsub.d f28, f9, f4, rdn # perform operation
fsub.d f28, f9, f4, rmm # perform operation
fsub.d f28, f9, f4, rne # perform operation
fsub.d f28, f9, f4, rtz # perform operation
fsub.d f28, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x31, 0xb8d58314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fsub.d f31, f30, f14, dyn # perform operation
fsub.d f31, f30, f14, rdn # perform operation
fsub.d f31, f30, f14, rmm # perform operation
fsub.d f31, f30, f14, rne # perform operation
fsub.d f31, f30, f14, rtz # perform operation
fsub.d f31, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x31, 0x9fb24b24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
fsub.d f31, f25, f6, dyn # perform operation
fsub.d f31, f25, f6, rdn # perform operation
fsub.d f31, f25, f6, rmm # perform operation
fsub.d f31, f25, f6, rne # perform operation
fsub.d f31, f25, f6, rtz # perform operation
fsub.d f31, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x24, 0xbef9c039 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fsub.d f24, f16, f1, dyn # perform operation
fsub.d f24, f16, f1, rdn # perform operation
fsub.d f24, f16, f1, rmm # perform operation
fsub.d f24, f16, f1, rne # perform operation
fsub.d f24, f16, f1, rtz # perform operation
fsub.d f24, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x9, 0x04a94c8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
fsub.d f9, f17, f1, dyn # perform operation
fsub.d f9, f17, f1, rdn # perform operation
fsub.d f9, f17, f1, rmm # perform operation
fsub.d f9, f17, f1, rne # perform operation
fsub.d f9, f17, f1, rtz # perform operation
fsub.d f9, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x7, 0x256a220e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fsub.d f7, f23, f5, dyn # perform operation
fsub.d f7, f23, f5, rdn # perform operation
fsub.d f7, f23, f5, rmm # perform operation
fsub.d f7, f23, f5, rne # perform operation
fsub.d f7, f23, f5, rtz # perform operation
fsub.d f7, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x24, 0xa9186797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fsub.d f24, f27, f10, dyn # perform operation
fsub.d f24, f27, f10, rdn # perform operation
fsub.d f24, f27, f10, rmm # perform operation
fsub.d f24, f27, f10, rne # perform operation
fsub.d f24, f27, f10, rtz # perform operation
fsub.d f24, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x18, 0x9243dfeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fsub.d f18, f16, f26, dyn # perform operation
fsub.d f18, f16, f26, rdn # perform operation
fsub.d f18, f16, f26, rmm # perform operation
fsub.d f18, f16, f26, rne # perform operation
fsub.d f18, f16, f26, rtz # perform operation
fsub.d f18, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x31, 0x80eac09d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fsub.d f31, f25, f16, dyn # perform operation
fsub.d f31, f25, f16, rdn # perform operation
fsub.d f31, f25, f16, rmm # perform operation
fsub.d f31, f25, f16, rne # perform operation
fsub.d f31, f25, f16, rtz # perform operation
fsub.d f31, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x20, 0x0123ac6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fsub.d f20, f30, f7, dyn # perform operation
fsub.d f20, f30, f7, rdn # perform operation
fsub.d f20, f30, f7, rmm # perform operation
fsub.d f20, f30, f7, rne # perform operation
fsub.d f20, f30, f7, rtz # perform operation
fsub.d f20, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x5, 0x96e14719 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
fsub.d f5, f25, f12, dyn # perform operation
fsub.d f5, f25, f12, rdn # perform operation
fsub.d f5, f25, f12, rmm # perform operation
fsub.d f5, f25, f12, rne # perform operation
fsub.d f5, f25, f12, rtz # perform operation
fsub.d f5, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x15, 0xd5460a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
fsub.d f15, f2, f16, dyn # perform operation
fsub.d f15, f2, f16, rdn # perform operation
fsub.d f15, f2, f16, rmm # perform operation
fsub.d f15, f2, f16, rne # perform operation
fsub.d f15, f2, f16, rtz # perform operation
fsub.d f15, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x12, 0x3dfce9b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fsub.d f12, f10, f25, dyn # perform operation
fsub.d f12, f10, f25, rdn # perform operation
fsub.d f12, f10, f25, rmm # perform operation
fsub.d f12, f10, f25, rne # perform operation
fsub.d f12, f10, f25, rtz # perform operation
fsub.d f12, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x24, 0x97b5e7ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fsub.d f24, f30, f3, dyn # perform operation
fsub.d f24, f30, f3, rdn # perform operation
fsub.d f24, f30, f3, rmm # perform operation
fsub.d f24, f30, f3, rne # perform operation
fsub.d f24, f30, f3, rtz # perform operation
fsub.d f24, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x16, 0x7bbe04f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fsub.d f16, f3, f20, dyn # perform operation
fsub.d f16, f3, f20, rdn # perform operation
fsub.d f16, f3, f20, rmm # perform operation
fsub.d f16, f3, f20, rne # perform operation
fsub.d f16, f3, f20, rtz # perform operation
fsub.d f16, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x2, 0x17dff74a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fsub.d f2, f5, f15, dyn # perform operation
fsub.d f2, f5, f15, rdn # perform operation
fsub.d f2, f5, f15, rmm # perform operation
fsub.d f2, f5, f15, rne # perform operation
fsub.d f2, f5, f15, rtz # perform operation
fsub.d f2, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x2, 0xe5898590 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
fsub.d f2, f20, f13, dyn # perform operation
fsub.d f2, f20, f13, rdn # perform operation
fsub.d f2, f20, f13, rmm # perform operation
fsub.d f2, f20, f13, rne # perform operation
fsub.d f2, f20, f13, rtz # perform operation
fsub.d f2, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x18, 0xb327e554 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fsub.d f18, f3, f26, dyn # perform operation
fsub.d f18, f3, f26, rdn # perform operation
fsub.d f18, f3, f26, rmm # perform operation
fsub.d f18, f3, f26, rne # perform operation
fsub.d f18, f3, f26, rtz # perform operation
fsub.d f18, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x7, 0xdd91f16b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fsub.d f7, f23, f11, dyn # perform operation
fsub.d f7, f23, f11, rdn # perform operation
fsub.d f7, f23, f11, rmm # perform operation
fsub.d f7, f23, f11, rne # perform operation
fsub.d f7, f23, f11, rtz # perform operation
fsub.d f7, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x8, 0xd9c4c79b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
fsub.d f8, f15, f6, dyn # perform operation
fsub.d f8, f15, f6, rdn # perform operation
fsub.d f8, f15, f6, rmm # perform operation
fsub.d f8, f15, f6, rne # perform operation
fsub.d f8, f15, f6, rtz # perform operation
fsub.d f8, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x17, 0x6cbd90d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fsub.d f17, f6, f3, dyn # perform operation
fsub.d f17, f6, f3, rdn # perform operation
fsub.d f17, f6, f3, rmm # perform operation
fsub.d f17, f6, f3, rne # perform operation
fsub.d f17, f6, f3, rtz # perform operation
fsub.d f17, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x22, 0xa352e311 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fsub.d f22, f28, f16, dyn # perform operation
fsub.d f22, f28, f16, rdn # perform operation
fsub.d f22, f28, f16, rmm # perform operation
fsub.d f22, f28, f16, rne # perform operation
fsub.d f22, f28, f16, rtz # perform operation
fsub.d f22, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x8, 0xc6c93ab5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fsub.d f8, f16, f25, dyn # perform operation
fsub.d f8, f16, f25, rdn # perform operation
fsub.d f8, f16, f25, rmm # perform operation
fsub.d f8, f16, f25, rne # perform operation
fsub.d f8, f16, f25, rtz # perform operation
fsub.d f8, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x20, 0x3b3a63ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fsub.d f20, f5, f18, dyn # perform operation
fsub.d f20, f5, f18, rdn # perform operation
fsub.d f20, f5, f18, rmm # perform operation
fsub.d f20, f5, f18, rne # perform operation
fsub.d f20, f5, f18, rtz # perform operation
fsub.d f20, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x15, 0x35b6a0dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
fsub.d f15, f17, f21, dyn # perform operation
fsub.d f15, f17, f21, rdn # perform operation
fsub.d f15, f17, f21, rmm # perform operation
fsub.d f15, f17, f21, rne # perform operation
fsub.d f15, f17, f21, rtz # perform operation
fsub.d f15, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x19, 0xbe0a3eed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fsub.d f19, f22, f1, dyn # perform operation
fsub.d f19, f22, f1, rdn # perform operation
fsub.d f19, f22, f1, rmm # perform operation
fsub.d f19, f22, f1, rne # perform operation
fsub.d f19, f22, f1, rtz # perform operation
fsub.d f19, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x2, 0x9f4db6d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fsub.d f2, f8, f9, dyn # perform operation
fsub.d f2, f8, f9, rdn # perform operation
fsub.d f2, f8, f9, rmm # perform operation
fsub.d f2, f8, f9, rne # perform operation
fsub.d f2, f8, f9, rtz # perform operation
fsub.d f2, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x17, 0x9e37ce14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
fsub.d f17, f14, f16, dyn # perform operation
fsub.d f17, f14, f16, rdn # perform operation
fsub.d f17, f14, f16, rmm # perform operation
fsub.d f17, f14, f16, rne # perform operation
fsub.d f17, f14, f16, rtz # perform operation
fsub.d f17, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x25, 0x843056bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fsub.d f25, f21, f14, dyn # perform operation
fsub.d f25, f21, f14, rdn # perform operation
fsub.d f25, f21, f14, rmm # perform operation
fsub.d f25, f21, f14, rne # perform operation
fsub.d f25, f21, f14, rtz # perform operation
fsub.d f25, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x23, 0x98d419d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fsub.d f23, f30, f8, dyn # perform operation
fsub.d f23, f30, f8, rdn # perform operation
fsub.d f23, f30, f8, rmm # perform operation
fsub.d f23, f30, f8, rne # perform operation
fsub.d f23, f30, f8, rtz # perform operation
fsub.d f23, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x5, 0x6f60433a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fsub.d f5, f9, f31, dyn # perform operation
fsub.d f5, f9, f31, rdn # perform operation
fsub.d f5, f9, f31, rmm # perform operation
fsub.d f5, f9, f31, rne # perform operation
fsub.d f5, f9, f31, rtz # perform operation
fsub.d f5, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x15, 0x1d1a33e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fsub.d f15, f26, f16, dyn # perform operation
fsub.d f15, f26, f16, rdn # perform operation
fsub.d f15, f26, f16, rmm # perform operation
fsub.d f15, f26, f16, rne # perform operation
fsub.d f15, f26, f16, rtz # perform operation
fsub.d f15, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x21, 0xf88455d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fsub.d f21, f23, f5, dyn # perform operation
fsub.d f21, f23, f5, rdn # perform operation
fsub.d f21, f23, f5, rmm # perform operation
fsub.d f21, f23, f5, rne # perform operation
fsub.d f21, f23, f5, rtz # perform operation
fsub.d f21, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x14, 0x85b26c25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fsub.d f14, f12, f20, dyn # perform operation
fsub.d f14, f12, f20, rdn # perform operation
fsub.d f14, f12, f20, rmm # perform operation
fsub.d f14, f12, f20, rne # perform operation
fsub.d f14, f12, f20, rtz # perform operation
fsub.d f14, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x17, 0xe26c7eab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fsub.d f17, f24, f18, dyn # perform operation
fsub.d f17, f24, f18, rdn # perform operation
fsub.d f17, f24, f18, rmm # perform operation
fsub.d f17, f24, f18, rne # perform operation
fsub.d f17, f24, f18, rtz # perform operation
fsub.d f17, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x18, 0x979d1403 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fsub.d f18, f3, f1, dyn # perform operation
fsub.d f18, f3, f1, rdn # perform operation
fsub.d f18, f3, f1, rmm # perform operation
fsub.d f18, f3, f1, rne # perform operation
fsub.d f18, f3, f1, rtz # perform operation
fsub.d f18, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x3, 0x55b8f595 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fsub.d f3, f24, f30, dyn # perform operation
fsub.d f3, f24, f30, rdn # perform operation
fsub.d f3, f24, f30, rmm # perform operation
fsub.d f3, f24, f30, rne # perform operation
fsub.d f3, f24, f30, rtz # perform operation
fsub.d f3, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x20, 0x524a1e37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
fsub.d f20, f18, f4, dyn # perform operation
fsub.d f20, f18, f4, rdn # perform operation
fsub.d f20, f18, f4, rmm # perform operation
fsub.d f20, f18, f4, rne # perform operation
fsub.d f20, f18, f4, rtz # perform operation
fsub.d f20, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x19, 0x61a8e4bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fsub.d f19, f16, f9, dyn # perform operation
fsub.d f19, f16, f9, rdn # perform operation
fsub.d f19, f16, f9, rmm # perform operation
fsub.d f19, f16, f9, rne # perform operation
fsub.d f19, f16, f9, rtz # perform operation
fsub.d f19, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x23, 0xb059569f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
fsub.d f23, f5, f4, dyn # perform operation
fsub.d f23, f5, f4, rdn # perform operation
fsub.d f23, f5, f4, rmm # perform operation
fsub.d f23, f5, f4, rne # perform operation
fsub.d f23, f5, f4, rtz # perform operation
fsub.d f23, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x12, 0xca0dfc14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fsub.d f12, f15, f16, dyn # perform operation
fsub.d f12, f15, f16, rdn # perform operation
fsub.d f12, f15, f16, rmm # perform operation
fsub.d f12, f15, f16, rne # perform operation
fsub.d f12, f15, f16, rtz # perform operation
fsub.d f12, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x21, 0xa8efea86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fsub.d f21, f5, f25, dyn # perform operation
fsub.d f21, f5, f25, rdn # perform operation
fsub.d f21, f5, f25, rmm # perform operation
fsub.d f21, f5, f25, rne # perform operation
fsub.d f21, f5, f25, rtz # perform operation
fsub.d f21, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x29, 0x4b99ec3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fsub.d f29, f13, f17, dyn # perform operation
fsub.d f29, f13, f17, rdn # perform operation
fsub.d f29, f13, f17, rmm # perform operation
fsub.d f29, f13, f17, rne # perform operation
fsub.d f29, f13, f17, rtz # perform operation
fsub.d f29, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x18, 0x6b1a1f88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fsub.d f18, f3, f22, dyn # perform operation
fsub.d f18, f3, f22, rdn # perform operation
fsub.d f18, f3, f22, rmm # perform operation
fsub.d f18, f3, f22, rne # perform operation
fsub.d f18, f3, f22, rtz # perform operation
fsub.d f18, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x14, 0xe2167de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fsub.d f14, f31, f29, dyn # perform operation
fsub.d f14, f31, f29, rdn # perform operation
fsub.d f14, f31, f29, rmm # perform operation
fsub.d f14, f31, f29, rne # perform operation
fsub.d f14, f31, f29, rtz # perform operation
fsub.d f14, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x21, 0xd6a8fc64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fsub.d f21, f31, f16, dyn # perform operation
fsub.d f21, f31, f16, rdn # perform operation
fsub.d f21, f31, f16, rmm # perform operation
fsub.d f21, f31, f16, rne # perform operation
fsub.d f21, f31, f16, rtz # perform operation
fsub.d f21, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x2, 0x1e66f0e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fsub.d f2, f30, f3, dyn # perform operation
fsub.d f2, f30, f3, rdn # perform operation
fsub.d f2, f30, f3, rmm # perform operation
fsub.d f2, f30, f3, rne # perform operation
fsub.d f2, f30, f3, rtz # perform operation
fsub.d f2, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x23, 0x0f4300f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fsub.d f23, f3, f15, dyn # perform operation
fsub.d f23, f3, f15, rdn # perform operation
fsub.d f23, f3, f15, rmm # perform operation
fsub.d f23, f3, f15, rne # perform operation
fsub.d f23, f3, f15, rtz # perform operation
fsub.d f23, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x18, 0xbbf94b59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fsub.d f18, f30, f15, dyn # perform operation
fsub.d f18, f30, f15, rdn # perform operation
fsub.d f18, f30, f15, rmm # perform operation
fsub.d f18, f30, f15, rne # perform operation
fsub.d f18, f30, f15, rtz # perform operation
fsub.d f18, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x13, 0x9bb7af7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fsub.d f13, f10, f27, dyn # perform operation
fsub.d f13, f10, f27, rdn # perform operation
fsub.d f13, f10, f27, rmm # perform operation
fsub.d f13, f10, f27, rne # perform operation
fsub.d f13, f10, f27, rtz # perform operation
fsub.d f13, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x24, 0xc3fa5b41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fsub.d f24, f8, f23, dyn # perform operation
fsub.d f24, f8, f23, rdn # perform operation
fsub.d f24, f8, f23, rmm # perform operation
fsub.d f24, f8, f23, rne # perform operation
fsub.d f24, f8, f23, rtz # perform operation
fsub.d f24, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x9, 0x3f0879c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fsub.d f9, f31, f20, dyn # perform operation
fsub.d f9, f31, f20, rdn # perform operation
fsub.d f9, f31, f20, rmm # perform operation
fsub.d f9, f31, f20, rne # perform operation
fsub.d f9, f31, f20, rtz # perform operation
fsub.d f9, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x25, 0x67b96be5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fsub.d f25, f18, f6, dyn # perform operation
fsub.d f25, f18, f6, rdn # perform operation
fsub.d f25, f18, f6, rmm # perform operation
fsub.d f25, f18, f6, rne # perform operation
fsub.d f25, f18, f6, rtz # perform operation
fsub.d f25, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x7, 0xc46e9c65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
fsub.d f7, f26, f30, dyn # perform operation
fsub.d f7, f26, f30, rdn # perform operation
fsub.d f7, f26, f30, rmm # perform operation
fsub.d f7, f26, f30, rne # perform operation
fsub.d f7, f26, f30, rtz # perform operation
fsub.d f7, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f26, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x28, 0x3a4e910d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fsub.d f28, f20, f26, dyn # perform operation
fsub.d f28, f20, f26, rdn # perform operation
fsub.d f28, f20, f26, rmm # perform operation
fsub.d f28, f20, f26, rne # perform operation
fsub.d f28, f20, f26, rtz # perform operation
fsub.d f28, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x29, 0x371f8fb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fsub.d f29, f19, f20, dyn # perform operation
fsub.d f29, f19, f20, rdn # perform operation
fsub.d f29, f19, f20, rmm # perform operation
fsub.d f29, f19, f20, rne # perform operation
fsub.d f29, f19, f20, rtz # perform operation
fsub.d f29, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x15, 0x79325e04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fsub.d f15, f20, f6, dyn # perform operation
fsub.d f15, f20, f6, rdn # perform operation
fsub.d f15, f20, f6, rmm # perform operation
fsub.d f15, f20, f6, rne # perform operation
fsub.d f15, f20, f6, rtz # perform operation
fsub.d f15, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x17, 0x42699d95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fsub.d f17, f20, f3, dyn # perform operation
fsub.d f17, f20, f3, rdn # perform operation
fsub.d f17, f20, f3, rmm # perform operation
fsub.d f17, f20, f3, rne # perform operation
fsub.d f17, f20, f3, rtz # perform operation
fsub.d f17, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x16, 0x0fc36c9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
fsub.d f16, f31, f18, dyn # perform operation
fsub.d f16, f31, f18, rdn # perform operation
fsub.d f16, f31, f18, rmm # perform operation
fsub.d f16, f31, f18, rne # perform operation
fsub.d f16, f31, f18, rtz # perform operation
fsub.d f16, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x28, 0xdc91f6e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fsub.d f28, f26, f16, dyn # perform operation
fsub.d f28, f26, f16, rdn # perform operation
fsub.d f28, f26, f16, rmm # perform operation
fsub.d f28, f26, f16, rne # perform operation
fsub.d f28, f26, f16, rtz # perform operation
fsub.d f28, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x27, 0x24c2d309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fsub.d f27, f16, f22, dyn # perform operation
fsub.d f27, f16, f22, rdn # perform operation
fsub.d f27, f16, f22, rmm # perform operation
fsub.d f27, f16, f22, rne # perform operation
fsub.d f27, f16, f22, rtz # perform operation
fsub.d f27, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x24, 0x5e151e0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fsub.d f24, f21, f2, dyn # perform operation
fsub.d f24, f21, f2, rdn # perform operation
fsub.d f24, f21, f2, rmm # perform operation
fsub.d f24, f21, f2, rne # perform operation
fsub.d f24, f21, f2, rtz # perform operation
fsub.d f24, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x21, 0xd9ec45c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fsub.d f21, f27, f29, dyn # perform operation
fsub.d f21, f27, f29, rdn # perform operation
fsub.d f21, f27, f29, rmm # perform operation
fsub.d f21, f27, f29, rne # perform operation
fsub.d f21, f27, f29, rtz # perform operation
fsub.d f21, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x30, 0x22f11ba6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fsub.d f30, f15, f19, dyn # perform operation
fsub.d f30, f15, f19, rdn # perform operation
fsub.d f30, f15, f19, rmm # perform operation
fsub.d f30, f15, f19, rne # perform operation
fsub.d f30, f15, f19, rtz # perform operation
fsub.d f30, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x25, 0x687b21bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fsub.d f25, f17, f14, dyn # perform operation
fsub.d f25, f17, f14, rdn # perform operation
fsub.d f25, f17, f14, rmm # perform operation
fsub.d f25, f17, f14, rne # perform operation
fsub.d f25, f17, f14, rtz # perform operation
fsub.d f25, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x20, 0x3a76c0b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fsub.d f20, f11, f27, dyn # perform operation
fsub.d f20, f11, f27, rdn # perform operation
fsub.d f20, f11, f27, rmm # perform operation
fsub.d f20, f11, f27, rne # perform operation
fsub.d f20, f11, f27, rtz # perform operation
fsub.d f20, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x31, 0x03808feb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fsub.d f31, f8, f6, dyn # perform operation
fsub.d f31, f8, f6, rdn # perform operation
fsub.d f31, f8, f6, rmm # perform operation
fsub.d f31, f8, f6, rne # perform operation
fsub.d f31, f8, f6, rtz # perform operation
fsub.d f31, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x5, 0x73e661cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fsub.d f5, f17, f7, dyn # perform operation
fsub.d f5, f17, f7, rdn # perform operation
fsub.d f5, f17, f7, rmm # perform operation
fsub.d f5, f17, f7, rne # perform operation
fsub.d f5, f17, f7, rtz # perform operation
fsub.d f5, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x16, 0x37e5f04c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fsub.d f16, f31, f9, dyn # perform operation
fsub.d f16, f31, f9, rdn # perform operation
fsub.d f16, f31, f9, rmm # perform operation
fsub.d f16, f31, f9, rne # perform operation
fsub.d f16, f31, f9, rtz # perform operation
fsub.d f16, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x7, 0xfa051363 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fsub.d f7, f11, f23, dyn # perform operation
fsub.d f7, f11, f23, rdn # perform operation
fsub.d f7, f11, f23, rmm # perform operation
fsub.d f7, f11, f23, rne # perform operation
fsub.d f7, f11, f23, rtz # perform operation
fsub.d f7, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x29, 0x1cff2906 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fsub.d f29, f31, f25, dyn # perform operation
fsub.d f29, f31, f25, rdn # perform operation
fsub.d f29, f31, f25, rmm # perform operation
fsub.d f29, f31, f25, rne # perform operation
fsub.d f29, f31, f25, rtz # perform operation
fsub.d f29, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x10, 0xb5ebc30e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fsub.d f10, f4, f27, dyn # perform operation
fsub.d f10, f4, f27, rdn # perform operation
fsub.d f10, f4, f27, rmm # perform operation
fsub.d f10, f4, f27, rne # perform operation
fsub.d f10, f4, f27, rtz # perform operation
fsub.d f10, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x18, 0xc3f1e224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
fsub.d f18, f24, f19, dyn # perform operation
fsub.d f18, f24, f19, rdn # perform operation
fsub.d f18, f24, f19, rmm # perform operation
fsub.d f18, f24, f19, rne # perform operation
fsub.d f18, f24, f19, rtz # perform operation
fsub.d f18, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x4, 0x6ff9e31b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
fsub.d f4, f31, f26, dyn # perform operation
fsub.d f4, f31, f26, rdn # perform operation
fsub.d f4, f31, f26, rmm # perform operation
fsub.d f4, f31, f26, rne # perform operation
fsub.d f4, f31, f26, rtz # perform operation
fsub.d f4, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x19, 0x25617262 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fsub.d f19, f3, f8, dyn # perform operation
fsub.d f19, f3, f8, rdn # perform operation
fsub.d f19, f3, f8, rmm # perform operation
fsub.d f19, f3, f8, rne # perform operation
fsub.d f19, f3, f8, rtz # perform operation
fsub.d f19, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x29, 0xa104889d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fsub.d f29, f5, f20, dyn # perform operation
fsub.d f29, f5, f20, rdn # perform operation
fsub.d f29, f5, f20, rmm # perform operation
fsub.d f29, f5, f20, rne # perform operation
fsub.d f29, f5, f20, rtz # perform operation
fsub.d f29, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x30, 0x655ce97f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fsub.d f30, f29, f5, dyn # perform operation
fsub.d f30, f29, f5, rdn # perform operation
fsub.d f30, f29, f5, rmm # perform operation
fsub.d f30, f29, f5, rne # perform operation
fsub.d f30, f29, f5, rtz # perform operation
fsub.d f30, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f29, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x22, 0xa24629b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
fsub.d f22, f2, f7, dyn # perform operation
fsub.d f22, f2, f7, rdn # perform operation
fsub.d f22, f2, f7, rmm # perform operation
fsub.d f22, f2, f7, rne # perform operation
fsub.d f22, f2, f7, rtz # perform operation
fsub.d f22, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x17, 0x3287cead # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fsub.d f17, f23, f12, dyn # perform operation
fsub.d f17, f23, f12, rdn # perform operation
fsub.d f17, f23, f12, rmm # perform operation
fsub.d f17, f23, f12, rne # perform operation
fsub.d f17, f23, f12, rtz # perform operation
fsub.d f17, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x9, 0x785f3ce9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fsub.d f9, f12, f3, dyn # perform operation
fsub.d f9, f12, f3, rdn # perform operation
fsub.d f9, f12, f3, rmm # perform operation
fsub.d f9, f12, f3, rne # perform operation
fsub.d f9, f12, f3, rtz # perform operation
fsub.d f9, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x22, 0xf2521e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fsub.d f22, f29, f4, dyn # perform operation
fsub.d f22, f29, f4, rdn # perform operation
fsub.d f22, f29, f4, rmm # perform operation
fsub.d f22, f29, f4, rne # perform operation
fsub.d f22, f29, f4, rtz # perform operation
fsub.d f22, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x25, 0x2b99b129 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fsub.d f25, f23, f28, dyn # perform operation
fsub.d f25, f23, f28, rdn # perform operation
fsub.d f25, f23, f28, rmm # perform operation
fsub.d f25, f23, f28, rne # perform operation
fsub.d f25, f23, f28, rtz # perform operation
fsub.d f25, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x1, 0x90928f85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fsub.d f1, f11, f8, dyn # perform operation
fsub.d f1, f11, f8, rdn # perform operation
fsub.d f1, f11, f8, rmm # perform operation
fsub.d f1, f11, f8, rne # perform operation
fsub.d f1, f11, f8, rtz # perform operation
fsub.d f1, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x9, 0xf8b246da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fsub.d f9, f28, f13, dyn # perform operation
fsub.d f9, f28, f13, rdn # perform operation
fsub.d f9, f28, f13, rmm # perform operation
fsub.d f9, f28, f13, rne # perform operation
fsub.d f9, f28, f13, rtz # perform operation
fsub.d f9, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x12, 0xa3cf214b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fsub.d f12, f20, f22, dyn # perform operation
fsub.d f12, f20, f22, rdn # perform operation
fsub.d f12, f20, f22, rmm # perform operation
fsub.d f12, f20, f22, rne # perform operation
fsub.d f12, f20, f22, rtz # perform operation
fsub.d f12, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x8, 0xe4a67d3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
fsub.d f8, f21, f29, dyn # perform operation
fsub.d f8, f21, f29, rdn # perform operation
fsub.d f8, f21, f29, rmm # perform operation
fsub.d f8, f21, f29, rne # perform operation
fsub.d f8, f21, f29, rtz # perform operation
fsub.d f8, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x17, 0x153996bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fsub.d f17, f2, f5, dyn # perform operation
fsub.d f17, f2, f5, rdn # perform operation
fsub.d f17, f2, f5, rmm # perform operation
fsub.d f17, f2, f5, rne # perform operation
fsub.d f17, f2, f5, rtz # perform operation
fsub.d f17, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x26, 0xfccdb5e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fsub.d f26, f7, f5, dyn # perform operation
fsub.d f26, f7, f5, rdn # perform operation
fsub.d f26, f7, f5, rmm # perform operation
fsub.d f26, f7, f5, rne # perform operation
fsub.d f26, f7, f5, rtz # perform operation
fsub.d f26, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x12, 0x1ec306e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fsub.d f12, f16, f10, dyn # perform operation
fsub.d f12, f16, f10, rdn # perform operation
fsub.d f12, f16, f10, rmm # perform operation
fsub.d f12, f16, f10, rne # perform operation
fsub.d f12, f16, f10, rtz # perform operation
fsub.d f12, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x29, 0x31065824 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fsub.d f29, f16, f8, dyn # perform operation
fsub.d f29, f16, f8, rdn # perform operation
fsub.d f29, f16, f8, rmm # perform operation
fsub.d f29, f16, f8, rne # perform operation
fsub.d f29, f16, f8, rtz # perform operation
fsub.d f29, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x19, 0x0d4420f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fsub.d f19, f26, f15, dyn # perform operation
fsub.d f19, f26, f15, rdn # perform operation
fsub.d f19, f26, f15, rmm # perform operation
fsub.d f19, f26, f15, rne # perform operation
fsub.d f19, f26, f15, rtz # perform operation
fsub.d f19, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x11, 0x4a5d83db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
fsub.d f11, f19, f30, dyn # perform operation
fsub.d f11, f19, f30, rdn # perform operation
fsub.d f11, f19, f30, rmm # perform operation
fsub.d f11, f19, f30, rne # perform operation
fsub.d f11, f19, f30, rtz # perform operation
fsub.d f11, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x14, 0xc57cd45a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
fsub.d f14, f21, f8, dyn # perform operation
fsub.d f14, f21, f8, rdn # perform operation
fsub.d f14, f21, f8, rmm # perform operation
fsub.d f14, f21, f8, rne # perform operation
fsub.d f14, f21, f8, rtz # perform operation
fsub.d f14, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x27, 0xd1ea703a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fsub.d f27, f29, f31, dyn # perform operation
fsub.d f27, f29, f31, rdn # perform operation
fsub.d f27, f29, f31, rmm # perform operation
fsub.d f27, f29, f31, rne # perform operation
fsub.d f27, f29, f31, rtz # perform operation
fsub.d f27, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x27, 0x0eaded6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fsub.d f27, f26, f1, dyn # perform operation
fsub.d f27, f26, f1, rdn # perform operation
fsub.d f27, f26, f1, rmm # perform operation
fsub.d f27, f26, f1, rne # perform operation
fsub.d f27, f26, f1, rtz # perform operation
fsub.d f27, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x28, 0x0a397e92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fsub.d f28, f26, f5, dyn # perform operation
fsub.d f28, f26, f5, rdn # perform operation
fsub.d f28, f26, f5, rmm # perform operation
fsub.d f28, f26, f5, rne # perform operation
fsub.d f28, f26, f5, rtz # perform operation
fsub.d f28, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x24, 0x9cea9586 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fsub.d f24, f31, f22, dyn # perform operation
fsub.d f24, f31, f22, rdn # perform operation
fsub.d f24, f31, f22, rmm # perform operation
fsub.d f24, f31, f22, rne # perform operation
fsub.d f24, f31, f22, rtz # perform operation
fsub.d f24, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x25, 0xafa160c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fsub.d f25, f26, f27, dyn # perform operation
fsub.d f25, f26, f27, rdn # perform operation
fsub.d f25, f26, f27, rmm # perform operation
fsub.d f25, f26, f27, rne # perform operation
fsub.d f25, f26, f27, rtz # perform operation
fsub.d f25, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x31, 0x041eb2b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fsub.d f31, f21, f12, dyn # perform operation
fsub.d f31, f21, f12, rdn # perform operation
fsub.d f31, f21, f12, rmm # perform operation
fsub.d f31, f21, f12, rne # perform operation
fsub.d f31, f21, f12, rtz # perform operation
fsub.d f31, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x10, 0x56bd711d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fsub.d f10, f3, f17, dyn # perform operation
fsub.d f10, f3, f17, rdn # perform operation
fsub.d f10, f3, f17, rmm # perform operation
fsub.d f10, f3, f17, rne # perform operation
fsub.d f10, f3, f17, rtz # perform operation
fsub.d f10, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f3, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x19, 0xcdc94e9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fsub.d f19, f17, f15, dyn # perform operation
fsub.d f19, f17, f15, rdn # perform operation
fsub.d f19, f17, f15, rmm # perform operation
fsub.d f19, f17, f15, rne # perform operation
fsub.d f19, f17, f15, rtz # perform operation
fsub.d f19, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x25, 0xa600b0f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fsub.d f25, f14, f7, dyn # perform operation
fsub.d f25, f14, f7, rdn # perform operation
fsub.d f25, f14, f7, rmm # perform operation
fsub.d f25, f14, f7, rne # perform operation
fsub.d f25, f14, f7, rtz # perform operation
fsub.d f25, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x24, 0x13cfb303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
fsub.d f24, f28, f21, dyn # perform operation
fsub.d f24, f28, f21, rdn # perform operation
fsub.d f24, f28, f21, rmm # perform operation
fsub.d f24, f28, f21, rne # perform operation
fsub.d f24, f28, f21, rtz # perform operation
fsub.d f24, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x8, 0x55b2e2eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fsub.d f8, f17, f4, dyn # perform operation
fsub.d f8, f17, f4, rdn # perform operation
fsub.d f8, f17, f4, rmm # perform operation
fsub.d f8, f17, f4, rne # perform operation
fsub.d f8, f17, f4, rtz # perform operation
fsub.d f8, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x24, 0x27bb210b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fsub.d f24, f28, f9, dyn # perform operation
fsub.d f24, f28, f9, rdn # perform operation
fsub.d f24, f28, f9, rmm # perform operation
fsub.d f24, f28, f9, rne # perform operation
fsub.d f24, f28, f9, rtz # perform operation
fsub.d f24, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x16, 0x16d90520 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fsub.d f16, f13, f1, dyn # perform operation
fsub.d f16, f13, f1, rdn # perform operation
fsub.d f16, f13, f1, rmm # perform operation
fsub.d f16, f13, f1, rne # perform operation
fsub.d f16, f13, f1, rtz # perform operation
fsub.d f16, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x30, 0x4157137e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fsub.d f30, f3, f26, dyn # perform operation
fsub.d f30, f3, f26, rdn # perform operation
fsub.d f30, f3, f26, rmm # perform operation
fsub.d f30, f3, f26, rne # perform operation
fsub.d f30, f3, f26, rtz # perform operation
fsub.d f30, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x7, 0x7a58dcda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fsub.d f7, f11, f16, dyn # perform operation
fsub.d f7, f11, f16, rdn # perform operation
fsub.d f7, f11, f16, rmm # perform operation
fsub.d f7, f11, f16, rne # perform operation
fsub.d f7, f11, f16, rtz # perform operation
fsub.d f7, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x18, 0x30741963 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fsub.d f18, f4, f11, dyn # perform operation
fsub.d f18, f4, f11, rdn # perform operation
fsub.d f18, f4, f11, rmm # perform operation
fsub.d f18, f4, f11, rne # perform operation
fsub.d f18, f4, f11, rtz # perform operation
fsub.d f18, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x19, 0x63781a17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fsub.d f19, f27, f6, dyn # perform operation
fsub.d f19, f27, f6, rdn # perform operation
fsub.d f19, f27, f6, rmm # perform operation
fsub.d f19, f27, f6, rne # perform operation
fsub.d f19, f27, f6, rtz # perform operation
fsub.d f19, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x15, 0x264faf07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
fsub.d f15, f27, f28, dyn # perform operation
fsub.d f15, f27, f28, rdn # perform operation
fsub.d f15, f27, f28, rmm # perform operation
fsub.d f15, f27, f28, rne # perform operation
fsub.d f15, f27, f28, rtz # perform operation
fsub.d f15, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x25, 0x9d795aef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fsub.d f25, f10, f4, dyn # perform operation
fsub.d f25, f10, f4, rdn # perform operation
fsub.d f25, f10, f4, rmm # perform operation
fsub.d f25, f10, f4, rne # perform operation
fsub.d f25, f10, f4, rtz # perform operation
fsub.d f25, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x22, 0x2652fc7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fsub.d f22, f13, f31, dyn # perform operation
fsub.d f22, f13, f31, rdn # perform operation
fsub.d f22, f13, f31, rmm # perform operation
fsub.d f22, f13, f31, rne # perform operation
fsub.d f22, f13, f31, rtz # perform operation
fsub.d f22, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x21, 0x8e5b2b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fsub.d f21, f3, f5, dyn # perform operation
fsub.d f21, f3, f5, rdn # perform operation
fsub.d f21, f3, f5, rmm # perform operation
fsub.d f21, f3, f5, rne # perform operation
fsub.d f21, f3, f5, rtz # perform operation
fsub.d f21, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x9, 0x6f6c1274 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
fsub.d f9, f12, f27, dyn # perform operation
fsub.d f9, f12, f27, rdn # perform operation
fsub.d f9, f12, f27, rmm # perform operation
fsub.d f9, f12, f27, rne # perform operation
fsub.d f9, f12, f27, rtz # perform operation
fsub.d f9, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x5, 0x28a2b757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
fsub.d f5, f19, f4, dyn # perform operation
fsub.d f5, f19, f4, rdn # perform operation
fsub.d f5, f19, f4, rmm # perform operation
fsub.d f5, f19, f4, rne # perform operation
fsub.d f5, f19, f4, rtz # perform operation
fsub.d f5, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x21, 0x1a170ef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fsub.d f21, f15, f14, dyn # perform operation
fsub.d f21, f15, f14, rdn # perform operation
fsub.d f21, f15, f14, rmm # perform operation
fsub.d f21, f15, f14, rne # perform operation
fsub.d f21, f15, f14, rtz # perform operation
fsub.d f21, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x16, 0x340fef07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fsub.d f16, f19, f18, dyn # perform operation
fsub.d f16, f19, f18, rdn # perform operation
fsub.d f16, f19, f18, rmm # perform operation
fsub.d f16, f19, f18, rne # perform operation
fsub.d f16, f19, f18, rtz # perform operation
fsub.d f16, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x24, 0x1c358804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fsub.d f24, f8, f1, dyn # perform operation
fsub.d f24, f8, f1, rdn # perform operation
fsub.d f24, f8, f1, rmm # perform operation
fsub.d f24, f8, f1, rne # perform operation
fsub.d f24, f8, f1, rtz # perform operation
fsub.d f24, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x4, 0x938c84c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fsub.d f4, f8, f12, dyn # perform operation
fsub.d f4, f8, f12, rdn # perform operation
fsub.d f4, f8, f12, rmm # perform operation
fsub.d f4, f8, f12, rne # perform operation
fsub.d f4, f8, f12, rtz # perform operation
fsub.d f4, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x2, 0xaba383ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fsub.d f2, f22, f8, dyn # perform operation
fsub.d f2, f22, f8, rdn # perform operation
fsub.d f2, f22, f8, rmm # perform operation
fsub.d f2, f22, f8, rne # perform operation
fsub.d f2, f22, f8, rtz # perform operation
fsub.d f2, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x22, 0x9e0b42cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fsub.d f22, f20, f14, dyn # perform operation
fsub.d f22, f20, f14, rdn # perform operation
fsub.d f22, f20, f14, rmm # perform operation
fsub.d f22, f20, f14, rne # perform operation
fsub.d f22, f20, f14, rtz # perform operation
fsub.d f22, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x17, 0x6883c86d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fsub.d f17, f5, f23, dyn # perform operation
fsub.d f17, f5, f23, rdn # perform operation
fsub.d f17, f5, f23, rmm # perform operation
fsub.d f17, f5, f23, rne # perform operation
fsub.d f17, f5, f23, rtz # perform operation
fsub.d f17, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x2, 0x4e58b52d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fsub.d f2, f10, f18, dyn # perform operation
fsub.d f2, f10, f18, rdn # perform operation
fsub.d f2, f10, f18, rmm # perform operation
fsub.d f2, f10, f18, rne # perform operation
fsub.d f2, f10, f18, rtz # perform operation
fsub.d f2, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x25, 0x4c3f4543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fsub.d f25, f23, f17, dyn # perform operation
fsub.d f25, f23, f17, rdn # perform operation
fsub.d f25, f23, f17, rmm # perform operation
fsub.d f25, f23, f17, rne # perform operation
fsub.d f25, f23, f17, rtz # perform operation
fsub.d f25, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x20, 0x9b252294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fsub.d f20, f24, f5, dyn # perform operation
fsub.d f20, f24, f5, rdn # perform operation
fsub.d f20, f24, f5, rmm # perform operation
fsub.d f20, f24, f5, rne # perform operation
fsub.d f20, f24, f5, rtz # perform operation
fsub.d f20, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x27, 0xe8cd2464 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fsub.d f27, f3, f28, dyn # perform operation
fsub.d f27, f3, f28, rdn # perform operation
fsub.d f27, f3, f28, rmm # perform operation
fsub.d f27, f3, f28, rne # perform operation
fsub.d f27, f3, f28, rtz # perform operation
fsub.d f27, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x13, 0x9d033aed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fsub.d f13, f23, f8, dyn # perform operation
fsub.d f13, f23, f8, rdn # perform operation
fsub.d f13, f23, f8, rmm # perform operation
fsub.d f13, f23, f8, rne # perform operation
fsub.d f13, f23, f8, rtz # perform operation
fsub.d f13, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x18, 0x4a9f89f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fsub.d f18, f11, f8, dyn # perform operation
fsub.d f18, f11, f8, rdn # perform operation
fsub.d f18, f11, f8, rmm # perform operation
fsub.d f18, f11, f8, rne # perform operation
fsub.d f18, f11, f8, rtz # perform operation
fsub.d f18, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x31, 0xfd73b1db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fsub.d f31, f20, f22, dyn # perform operation
fsub.d f31, f20, f22, rdn # perform operation
fsub.d f31, f20, f22, rmm # perform operation
fsub.d f31, f20, f22, rne # perform operation
fsub.d f31, f20, f22, rtz # perform operation
fsub.d f31, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x8, 0xd74b5a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
fsub.d f8, f7, f13, dyn # perform operation
fsub.d f8, f7, f13, rdn # perform operation
fsub.d f8, f7, f13, rmm # perform operation
fsub.d f8, f7, f13, rne # perform operation
fsub.d f8, f7, f13, rtz # perform operation
fsub.d f8, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x23, 0xd3956ca4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
fsub.d f23, f20, f22, dyn # perform operation
fsub.d f23, f20, f22, rdn # perform operation
fsub.d f23, f20, f22, rmm # perform operation
fsub.d f23, f20, f22, rne # perform operation
fsub.d f23, f20, f22, rtz # perform operation
fsub.d f23, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x12, 0xa3b9eff2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fsub.d f12, f17, f5, dyn # perform operation
fsub.d f12, f17, f5, rdn # perform operation
fsub.d f12, f17, f5, rmm # perform operation
fsub.d f12, f17, f5, rne # perform operation
fsub.d f12, f17, f5, rtz # perform operation
fsub.d f12, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x25, 0x4ed9e677 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fsub.d f25, f24, f16, dyn # perform operation
fsub.d f25, f24, f16, rdn # perform operation
fsub.d f25, f24, f16, rmm # perform operation
fsub.d f25, f24, f16, rne # perform operation
fsub.d f25, f24, f16, rtz # perform operation
fsub.d f25, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x25, 0x0957dc5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
fsub.d f25, f15, f26, dyn # perform operation
fsub.d f25, f15, f26, rdn # perform operation
fsub.d f25, f15, f26, rmm # perform operation
fsub.d f25, f15, f26, rne # perform operation
fsub.d f25, f15, f26, rtz # perform operation
fsub.d f25, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x29, 0xf6204790 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fsub.d f29, f26, f11, dyn # perform operation
fsub.d f29, f26, f11, rdn # perform operation
fsub.d f29, f26, f11, rmm # perform operation
fsub.d f29, f26, f11, rne # perform operation
fsub.d f29, f26, f11, rtz # perform operation
fsub.d f29, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x22, 0xf7952179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fsub.d f22, f10, f16, dyn # perform operation
fsub.d f22, f10, f16, rdn # perform operation
fsub.d f22, f10, f16, rmm # perform operation
fsub.d f22, f10, f16, rne # perform operation
fsub.d f22, f10, f16, rtz # perform operation
fsub.d f22, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x1, 0xa71736a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fsub.d f1, f13, f8, dyn # perform operation
fsub.d f1, f13, f8, rdn # perform operation
fsub.d f1, f13, f8, rmm # perform operation
fsub.d f1, f13, f8, rne # perform operation
fsub.d f1, f13, f8, rtz # perform operation
fsub.d f1, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x1, 0xcb1e566b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fsub.d f1, f22, f5, dyn # perform operation
fsub.d f1, f22, f5, rdn # perform operation
fsub.d f1, f22, f5, rmm # perform operation
fsub.d f1, f22, f5, rne # perform operation
fsub.d f1, f22, f5, rtz # perform operation
fsub.d f1, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x14, 0x527de137 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fsub.d f14, f8, f31, dyn # perform operation
fsub.d f14, f8, f31, rdn # perform operation
fsub.d f14, f8, f31, rmm # perform operation
fsub.d f14, f8, f31, rne # perform operation
fsub.d f14, f8, f31, rtz # perform operation
fsub.d f14, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x7, 0x9d14e8a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fsub.d f7, f12, f25, dyn # perform operation
fsub.d f7, f12, f25, rdn # perform operation
fsub.d f7, f12, f25, rmm # perform operation
fsub.d f7, f12, f25, rne # perform operation
fsub.d f7, f12, f25, rtz # perform operation
fsub.d f7, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x20, 0x22df8f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fsub.d f20, f10, f8, dyn # perform operation
fsub.d f20, f10, f8, rdn # perform operation
fsub.d f20, f10, f8, rmm # perform operation
fsub.d f20, f10, f8, rne # perform operation
fsub.d f20, f10, f8, rtz # perform operation
fsub.d f20, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x28, 0x5ee662ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fsub.d f28, f23, f6, dyn # perform operation
fsub.d f28, f23, f6, rdn # perform operation
fsub.d f28, f23, f6, rmm # perform operation
fsub.d f28, f23, f6, rne # perform operation
fsub.d f28, f23, f6, rtz # perform operation
fsub.d f28, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x13, 0x42932df7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fsub.d f13, f17, f25, dyn # perform operation
fsub.d f13, f17, f25, rdn # perform operation
fsub.d f13, f17, f25, rmm # perform operation
fsub.d f13, f17, f25, rne # perform operation
fsub.d f13, f17, f25, rtz # perform operation
fsub.d f13, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x25, 0xfdfac7eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fsub.d f25, f4, f18, dyn # perform operation
fsub.d f25, f4, f18, rdn # perform operation
fsub.d f25, f4, f18, rmm # perform operation
fsub.d f25, f4, f18, rne # perform operation
fsub.d f25, f4, f18, rtz # perform operation
fsub.d f25, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x29, 0xc6181561 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
fsub.d f29, f13, f19, dyn # perform operation
fsub.d f29, f13, f19, rdn # perform operation
fsub.d f29, f13, f19, rmm # perform operation
fsub.d f29, f13, f19, rne # perform operation
fsub.d f29, f13, f19, rtz # perform operation
fsub.d f29, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x3, 0x9a2496d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fsub.d f3, f30, f11, dyn # perform operation
fsub.d f3, f30, f11, rdn # perform operation
fsub.d f3, f30, f11, rmm # perform operation
fsub.d f3, f30, f11, rne # perform operation
fsub.d f3, f30, f11, rtz # perform operation
fsub.d f3, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x29, 0xe435de79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fsub.d f29, f23, f26, dyn # perform operation
fsub.d f29, f23, f26, rdn # perform operation
fsub.d f29, f23, f26, rmm # perform operation
fsub.d f29, f23, f26, rne # perform operation
fsub.d f29, f23, f26, rtz # perform operation
fsub.d f29, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x1, 0xb9c2bdb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fsub.d f1, f14, f9, dyn # perform operation
fsub.d f1, f14, f9, rdn # perform operation
fsub.d f1, f14, f9, rmm # perform operation
fsub.d f1, f14, f9, rne # perform operation
fsub.d f1, f14, f9, rtz # perform operation
fsub.d f1, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x23, 0xb9d310b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fsub.d f23, f5, f21, dyn # perform operation
fsub.d f23, f5, f21, rdn # perform operation
fsub.d f23, f5, f21, rmm # perform operation
fsub.d f23, f5, f21, rne # perform operation
fsub.d f23, f5, f21, rtz # perform operation
fsub.d f23, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x11, 0xb97d3836 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fsub.d f11, f14, f20, dyn # perform operation
fsub.d f11, f14, f20, rdn # perform operation
fsub.d f11, f14, f20, rmm # perform operation
fsub.d f11, f14, f20, rne # perform operation
fsub.d f11, f14, f20, rtz # perform operation
fsub.d f11, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x11, 0xc2e9f149 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fsub.d f11, f14, f17, dyn # perform operation
fsub.d f11, f14, f17, rdn # perform operation
fsub.d f11, f14, f17, rmm # perform operation
fsub.d f11, f14, f17, rne # perform operation
fsub.d f11, f14, f17, rtz # perform operation
fsub.d f11, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f14, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x22, 0xc91e36e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fsub.d f22, f30, f20, dyn # perform operation
fsub.d f22, f30, f20, rdn # perform operation
fsub.d f22, f30, f20, rmm # perform operation
fsub.d f22, f30, f20, rne # perform operation
fsub.d f22, f30, f20, rtz # perform operation
fsub.d f22, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x8, 0x1662d42c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fsub.d f8, f31, f21, dyn # perform operation
fsub.d f8, f31, f21, rdn # perform operation
fsub.d f8, f31, f21, rmm # perform operation
fsub.d f8, f31, f21, rne # perform operation
fsub.d f8, f31, f21, rtz # perform operation
fsub.d f8, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x18, 0xfff9b6ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fsub.d f18, f20, f24, dyn # perform operation
fsub.d f18, f20, f24, rdn # perform operation
fsub.d f18, f20, f24, rmm # perform operation
fsub.d f18, f20, f24, rne # perform operation
fsub.d f18, f20, f24, rtz # perform operation
fsub.d f18, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x10, 0x0cfe133f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fsub.d f10, f23, f16, dyn # perform operation
fsub.d f10, f23, f16, rdn # perform operation
fsub.d f10, f23, f16, rmm # perform operation
fsub.d f10, f23, f16, rne # perform operation
fsub.d f10, f23, f16, rtz # perform operation
fsub.d f10, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x15, 0x147522c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fsub.d f15, f26, f10, dyn # perform operation
fsub.d f15, f26, f10, rdn # perform operation
fsub.d f15, f26, f10, rmm # perform operation
fsub.d f15, f26, f10, rne # perform operation
fsub.d f15, f26, f10, rtz # perform operation
fsub.d f15, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x24, 0xef862129 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
fsub.d f24, f2, f23, dyn # perform operation
fsub.d f24, f2, f23, rdn # perform operation
fsub.d f24, f2, f23, rmm # perform operation
fsub.d f24, f2, f23, rne # perform operation
fsub.d f24, f2, f23, rtz # perform operation
fsub.d f24, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x3, 0x4590b309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fsub.d f3, f19, f31, dyn # perform operation
fsub.d f3, f19, f31, rdn # perform operation
fsub.d f3, f19, f31, rmm # perform operation
fsub.d f3, f19, f31, rne # perform operation
fsub.d f3, f19, f31, rtz # perform operation
fsub.d f3, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x31, 0xcb8305cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fsub.d f31, f16, f30, dyn # perform operation
fsub.d f31, f16, f30, rdn # perform operation
fsub.d f31, f16, f30, rmm # perform operation
fsub.d f31, f16, f30, rne # perform operation
fsub.d f31, f16, f30, rtz # perform operation
fsub.d f31, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x10, 0xefb5ecb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fsub.d f10, f7, f20, dyn # perform operation
fsub.d f10, f7, f20, rdn # perform operation
fsub.d f10, f7, f20, rmm # perform operation
fsub.d f10, f7, f20, rne # perform operation
fsub.d f10, f7, f20, rtz # perform operation
fsub.d f10, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x14, 0x2273de07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fsub.d f14, f4, f6, dyn # perform operation
fsub.d f14, f4, f6, rdn # perform operation
fsub.d f14, f4, f6, rmm # perform operation
fsub.d f14, f4, f6, rne # perform operation
fsub.d f14, f4, f6, rtz # perform operation
fsub.d f14, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x26, 0x6962fd88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fsub.d f26, f5, f29, dyn # perform operation
fsub.d f26, f5, f29, rdn # perform operation
fsub.d f26, f5, f29, rmm # perform operation
fsub.d f26, f5, f29, rne # perform operation
fsub.d f26, f5, f29, rtz # perform operation
fsub.d f26, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x26, 0xf9de75a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fsub.d f26, f18, f7, dyn # perform operation
fsub.d f26, f18, f7, rdn # perform operation
fsub.d f26, f18, f7, rmm # perform operation
fsub.d f26, f18, f7, rne # perform operation
fsub.d f26, f18, f7, rtz # perform operation
fsub.d f26, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x11, 0x0c3186e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fsub.d f11, f27, f9, dyn # perform operation
fsub.d f11, f27, f9, rdn # perform operation
fsub.d f11, f27, f9, rmm # perform operation
fsub.d f11, f27, f9, rne # perform operation
fsub.d f11, f27, f9, rtz # perform operation
fsub.d f11, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x3, 0x71af6776 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fsub.d f3, f28, f24, dyn # perform operation
fsub.d f3, f28, f24, rdn # perform operation
fsub.d f3, f28, f24, rmm # perform operation
fsub.d f3, f28, f24, rne # perform operation
fsub.d f3, f28, f24, rtz # perform operation
fsub.d f3, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x13, 0xe7daba23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fsub.d f13, f19, f22, dyn # perform operation
fsub.d f13, f19, f22, rdn # perform operation
fsub.d f13, f19, f22, rmm # perform operation
fsub.d f13, f19, f22, rne # perform operation
fsub.d f13, f19, f22, rtz # perform operation
fsub.d f13, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x5, 0x24b8754c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fsub.d f5, f19, f26, dyn # perform operation
fsub.d f5, f19, f26, rdn # perform operation
fsub.d f5, f19, f26, rmm # perform operation
fsub.d f5, f19, f26, rne # perform operation
fsub.d f5, f19, f26, rtz # perform operation
fsub.d f5, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x10, 0xd5d82237 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fsub.d f10, f13, f27, dyn # perform operation
fsub.d f10, f13, f27, rdn # perform operation
fsub.d f10, f13, f27, rmm # perform operation
fsub.d f10, f13, f27, rne # perform operation
fsub.d f10, f13, f27, rtz # perform operation
fsub.d f10, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x27, 0x6faad204 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fsub.d f27, f22, f14, dyn # perform operation
fsub.d f27, f22, f14, rdn # perform operation
fsub.d f27, f22, f14, rmm # perform operation
fsub.d f27, f22, f14, rne # perform operation
fsub.d f27, f22, f14, rtz # perform operation
fsub.d f27, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x1, 0x6ef42cf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fsub.d f1, f30, f13, dyn # perform operation
fsub.d f1, f30, f13, rdn # perform operation
fsub.d f1, f30, f13, rmm # perform operation
fsub.d f1, f30, f13, rne # perform operation
fsub.d f1, f30, f13, rtz # perform operation
fsub.d f1, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x9, 0x6ead99d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fsub.d f9, f19, f11, dyn # perform operation
fsub.d f9, f19, f11, rdn # perform operation
fsub.d f9, f19, f11, rmm # perform operation
fsub.d f9, f19, f11, rne # perform operation
fsub.d f9, f19, f11, rtz # perform operation
fsub.d f9, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x18, 0x04a7df27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fsub.d f18, f10, f23, dyn # perform operation
fsub.d f18, f10, f23, rdn # perform operation
fsub.d f18, f10, f23, rmm # perform operation
fsub.d f18, f10, f23, rne # perform operation
fsub.d f18, f10, f23, rtz # perform operation
fsub.d f18, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x18, 0x129f65db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fsub.d f18, f6, f9, dyn # perform operation
fsub.d f18, f6, f9, rdn # perform operation
fsub.d f18, f6, f9, rmm # perform operation
fsub.d f18, f6, f9, rne # perform operation
fsub.d f18, f6, f9, rtz # perform operation
fsub.d f18, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x9, 0x2c5bbd65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fsub.d f9, f4, f8, dyn # perform operation
fsub.d f9, f4, f8, rdn # perform operation
fsub.d f9, f4, f8, rmm # perform operation
fsub.d f9, f4, f8, rne # perform operation
fsub.d f9, f4, f8, rtz # perform operation
fsub.d f9, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x16, 0xc9bdccd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fsub.d f16, f25, f10, dyn # perform operation
fsub.d f16, f25, f10, rdn # perform operation
fsub.d f16, f25, f10, rmm # perform operation
fsub.d f16, f25, f10, rne # perform operation
fsub.d f16, f25, f10, rtz # perform operation
fsub.d f16, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x15, 0xc4fb6d8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fsub.d f15, f23, f30, dyn # perform operation
fsub.d f15, f23, f30, rdn # perform operation
fsub.d f15, f23, f30, rmm # perform operation
fsub.d f15, f23, f30, rne # perform operation
fsub.d f15, f23, f30, rtz # perform operation
fsub.d f15, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x3, 0xda749e9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fsub.d f3, f14, f27, dyn # perform operation
fsub.d f3, f14, f27, rdn # perform operation
fsub.d f3, f14, f27, rmm # perform operation
fsub.d f3, f14, f27, rne # perform operation
fsub.d f3, f14, f27, rtz # perform operation
fsub.d f3, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x25, 0xb585961a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fsub.d f25, f19, f6, dyn # perform operation
fsub.d f25, f19, f6, rdn # perform operation
fsub.d f25, f19, f6, rmm # perform operation
fsub.d f25, f19, f6, rne # perform operation
fsub.d f25, f19, f6, rtz # perform operation
fsub.d f25, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x3, 0x916feed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fsub.d f3, f19, f6, dyn # perform operation
fsub.d f3, f19, f6, rdn # perform operation
fsub.d f3, f19, f6, rmm # perform operation
fsub.d f3, f19, f6, rne # perform operation
fsub.d f3, f19, f6, rtz # perform operation
fsub.d f3, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x16, 0x69c19aaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fsub.d f16, f11, f30, dyn # perform operation
fsub.d f16, f11, f30, rdn # perform operation
fsub.d f16, f11, f30, rmm # perform operation
fsub.d f16, f11, f30, rne # perform operation
fsub.d f16, f11, f30, rtz # perform operation
fsub.d f16, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x24, 0xe8e42fe3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fsub.d f24, f9, f20, dyn # perform operation
fsub.d f24, f9, f20, rdn # perform operation
fsub.d f24, f9, f20, rmm # perform operation
fsub.d f24, f9, f20, rne # perform operation
fsub.d f24, f9, f20, rtz # perform operation
fsub.d f24, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x30, 0xa94fd753 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fsub.d f30, f18, f1, dyn # perform operation
fsub.d f30, f18, f1, rdn # perform operation
fsub.d f30, f18, f1, rmm # perform operation
fsub.d f30, f18, f1, rne # perform operation
fsub.d f30, f18, f1, rtz # perform operation
fsub.d f30, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x15, 0x81edaeff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fsub.d f15, f27, f2, dyn # perform operation
fsub.d f15, f27, f2, rdn # perform operation
fsub.d f15, f27, f2, rmm # perform operation
fsub.d f15, f27, f2, rne # perform operation
fsub.d f15, f27, f2, rtz # perform operation
fsub.d f15, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x20, 0xab438597 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
fsub.d f20, f3, f28, dyn # perform operation
fsub.d f20, f3, f28, rdn # perform operation
fsub.d f20, f3, f28, rmm # perform operation
fsub.d f20, f3, f28, rne # perform operation
fsub.d f20, f3, f28, rtz # perform operation
fsub.d f20, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x29, 0x70a307e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fsub.d f29, f31, f7, dyn # perform operation
fsub.d f29, f31, f7, rdn # perform operation
fsub.d f29, f31, f7, rmm # perform operation
fsub.d f29, f31, f7, rne # perform operation
fsub.d f29, f31, f7, rtz # perform operation
fsub.d f29, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x1, 0x8f2d0189 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fsub.d f1, f6, f31, dyn # perform operation
fsub.d f1, f6, f31, rdn # perform operation
fsub.d f1, f6, f31, rmm # perform operation
fsub.d f1, f6, f31, rne # perform operation
fsub.d f1, f6, f31, rtz # perform operation
fsub.d f1, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x1, 0x93bcc155 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fsub.d f1, f15, f9, dyn # perform operation
fsub.d f1, f15, f9, rdn # perform operation
fsub.d f1, f15, f9, rmm # perform operation
fsub.d f1, f15, f9, rne # perform operation
fsub.d f1, f15, f9, rtz # perform operation
fsub.d f1, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x24, 0x811266f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fsub.d f24, f15, f5, dyn # perform operation
fsub.d f24, f15, f5, rdn # perform operation
fsub.d f24, f15, f5, rmm # perform operation
fsub.d f24, f15, f5, rne # perform operation
fsub.d f24, f15, f5, rtz # perform operation
fsub.d f24, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x3, 0x5eeb8fc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fsub.d f3, f6, f4, dyn # perform operation
fsub.d f3, f6, f4, rdn # perform operation
fsub.d f3, f6, f4, rmm # perform operation
fsub.d f3, f6, f4, rne # perform operation
fsub.d f3, f6, f4, rtz # perform operation
fsub.d f3, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x14, 0xa4a44456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fsub.d f14, f25, f1, dyn # perform operation
fsub.d f14, f25, f1, rdn # perform operation
fsub.d f14, f25, f1, rmm # perform operation
fsub.d f14, f25, f1, rne # perform operation
fsub.d f14, f25, f1, rtz # perform operation
fsub.d f14, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x25, 0x2a2e6a70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fsub.d f25, f11, f20, dyn # perform operation
fsub.d f25, f11, f20, rdn # perform operation
fsub.d f25, f11, f20, rmm # perform operation
fsub.d f25, f11, f20, rne # perform operation
fsub.d f25, f11, f20, rtz # perform operation
fsub.d f25, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x19, 0x0586ecf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fsub.d f19, f22, f15, dyn # perform operation
fsub.d f19, f22, f15, rdn # perform operation
fsub.d f19, f22, f15, rmm # perform operation
fsub.d f19, f22, f15, rne # perform operation
fsub.d f19, f22, f15, rtz # perform operation
fsub.d f19, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x24, 0x6bde140a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fsub.d f24, f4, f30, dyn # perform operation
fsub.d f24, f4, f30, rdn # perform operation
fsub.d f24, f4, f30, rmm # perform operation
fsub.d f24, f4, f30, rne # perform operation
fsub.d f24, f4, f30, rtz # perform operation
fsub.d f24, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x13, 0x997190f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fsub.d f13, f16, f25, dyn # perform operation
fsub.d f13, f16, f25, rdn # perform operation
fsub.d f13, f16, f25, rmm # perform operation
fsub.d f13, f16, f25, rne # perform operation
fsub.d f13, f16, f25, rtz # perform operation
fsub.d f13, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x2, 0x0801908d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fsub.d f2, f7, f8, dyn # perform operation
fsub.d f2, f7, f8, rdn # perform operation
fsub.d f2, f7, f8, rmm # perform operation
fsub.d f2, f7, f8, rne # perform operation
fsub.d f2, f7, f8, rtz # perform operation
fsub.d f2, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f7, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x14, 0x81a102bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fsub.d f14, f21, f17, dyn # perform operation
fsub.d f14, f21, f17, rdn # perform operation
fsub.d f14, f21, f17, rmm # perform operation
fsub.d f14, f21, f17, rne # perform operation
fsub.d f14, f21, f17, rtz # perform operation
fsub.d f14, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x8, 0x62465ad0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fsub.d f8, f20, f29, dyn # perform operation
fsub.d f8, f20, f29, rdn # perform operation
fsub.d f8, f20, f29, rmm # perform operation
fsub.d f8, f20, f29, rne # perform operation
fsub.d f8, f20, f29, rtz # perform operation
fsub.d f8, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x24, 0xbff6d53d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fsub.d f24, f17, f26, dyn # perform operation
fsub.d f24, f17, f26, rdn # perform operation
fsub.d f24, f17, f26, rmm # perform operation
fsub.d f24, f17, f26, rne # perform operation
fsub.d f24, f17, f26, rtz # perform operation
fsub.d f24, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x28, 0x8ef2d7cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fsub.d f28, f10, f19, dyn # perform operation
fsub.d f28, f10, f19, rdn # perform operation
fsub.d f28, f10, f19, rmm # perform operation
fsub.d f28, f10, f19, rne # perform operation
fsub.d f28, f10, f19, rtz # perform operation
fsub.d f28, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x14, 0xdc4b3f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fsub.d f14, f2, f9, dyn # perform operation
fsub.d f14, f2, f9, rdn # perform operation
fsub.d f14, f2, f9, rmm # perform operation
fsub.d f14, f2, f9, rne # perform operation
fsub.d f14, f2, f9, rtz # perform operation
fsub.d f14, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x1, 0x12156711 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fsub.d f1, f30, f25, dyn # perform operation
fsub.d f1, f30, f25, rdn # perform operation
fsub.d f1, f30, f25, rmm # perform operation
fsub.d f1, f30, f25, rne # perform operation
fsub.d f1, f30, f25, rtz # perform operation
fsub.d f1, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x8, 0xb2b62985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fsub.d f8, f9, f7, dyn # perform operation
fsub.d f8, f9, f7, rdn # perform operation
fsub.d f8, f9, f7, rmm # perform operation
fsub.d f8, f9, f7, rne # perform operation
fsub.d f8, f9, f7, rtz # perform operation
fsub.d f8, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x18, 0xdd379345 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fsub.d f18, f9, f22, dyn # perform operation
fsub.d f18, f9, f22, rdn # perform operation
fsub.d f18, f9, f22, rmm # perform operation
fsub.d f18, f9, f22, rne # perform operation
fsub.d f18, f9, f22, rtz # perform operation
fsub.d f18, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x30, 0x836e79c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fsub.d f30, f22, f4, dyn # perform operation
fsub.d f30, f22, f4, rdn # perform operation
fsub.d f30, f22, f4, rmm # perform operation
fsub.d f30, f22, f4, rne # perform operation
fsub.d f30, f22, f4, rtz # perform operation
fsub.d f30, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x18, 0x42edd4a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
fsub.d f18, f13, f4, dyn # perform operation
fsub.d f18, f13, f4, rdn # perform operation
fsub.d f18, f13, f4, rmm # perform operation
fsub.d f18, f13, f4, rne # perform operation
fsub.d f18, f13, f4, rtz # perform operation
fsub.d f18, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x9, 0x36368f5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fsub.d f9, f29, f17, dyn # perform operation
fsub.d f9, f29, f17, rdn # perform operation
fsub.d f9, f29, f17, rmm # perform operation
fsub.d f9, f29, f17, rne # perform operation
fsub.d f9, f29, f17, rtz # perform operation
fsub.d f9, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x30, 0x99741a26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fsub.d f30, f10, f29, dyn # perform operation
fsub.d f30, f10, f29, rdn # perform operation
fsub.d f30, f10, f29, rmm # perform operation
fsub.d f30, f10, f29, rne # perform operation
fsub.d f30, f10, f29, rtz # perform operation
fsub.d f30, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x27, 0xbc0b30e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fsub.d f27, f22, f19, dyn # perform operation
fsub.d f27, f22, f19, rdn # perform operation
fsub.d f27, f22, f19, rmm # perform operation
fsub.d f27, f22, f19, rne # perform operation
fsub.d f27, f22, f19, rtz # perform operation
fsub.d f27, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x13, 0x1c79c91f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fsub.d f13, f22, f27, dyn # perform operation
fsub.d f13, f22, f27, rdn # perform operation
fsub.d f13, f22, f27, rmm # perform operation
fsub.d f13, f22, f27, rne # perform operation
fsub.d f13, f22, f27, rtz # perform operation
fsub.d f13, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x22, 0xda48b730 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fsub.d f22, f5, f30, dyn # perform operation
fsub.d f22, f5, f30, rdn # perform operation
fsub.d f22, f5, f30, rmm # perform operation
fsub.d f22, f5, f30, rne # perform operation
fsub.d f22, f5, f30, rtz # perform operation
fsub.d f22, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x18, 0x8d23211c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fsub.d f18, f21, f12, dyn # perform operation
fsub.d f18, f21, f12, rdn # perform operation
fsub.d f18, f21, f12, rmm # perform operation
fsub.d f18, f21, f12, rne # perform operation
fsub.d f18, f21, f12, rtz # perform operation
fsub.d f18, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x14, 0xa958751e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
fsub.d f14, f6, f1, dyn # perform operation
fsub.d f14, f6, f1, rdn # perform operation
fsub.d f14, f6, f1, rmm # perform operation
fsub.d f14, f6, f1, rne # perform operation
fsub.d f14, f6, f1, rtz # perform operation
fsub.d f14, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x12, 0x77e4c7dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fsub.d f12, f24, f9, dyn # perform operation
fsub.d f12, f24, f9, rdn # perform operation
fsub.d f12, f24, f9, rmm # perform operation
fsub.d f12, f24, f9, rne # perform operation
fsub.d f12, f24, f9, rtz # perform operation
fsub.d f12, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x6, 0x07f7a914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fsub.d f6, f25, f23, dyn # perform operation
fsub.d f6, f25, f23, rdn # perform operation
fsub.d f6, f25, f23, rmm # perform operation
fsub.d f6, f25, f23, rne # perform operation
fsub.d f6, f25, f23, rtz # perform operation
fsub.d f6, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x1, 0xa76ae559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fsub.d f1, f19, f21, dyn # perform operation
fsub.d f1, f19, f21, rdn # perform operation
fsub.d f1, f19, f21, rmm # perform operation
fsub.d f1, f19, f21, rne # perform operation
fsub.d f1, f19, f21, rtz # perform operation
fsub.d f1, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x28, 0x9a1c9477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fsub.d f28, f6, f20, dyn # perform operation
fsub.d f28, f6, f20, rdn # perform operation
fsub.d f28, f6, f20, rmm # perform operation
fsub.d f28, f6, f20, rne # perform operation
fsub.d f28, f6, f20, rtz # perform operation
fsub.d f28, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x17, 0x2bf984be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
fsub.d f17, f4, f8, dyn # perform operation
fsub.d f17, f4, f8, rdn # perform operation
fsub.d f17, f4, f8, rmm # perform operation
fsub.d f17, f4, f8, rne # perform operation
fsub.d f17, f4, f8, rtz # perform operation
fsub.d f17, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x6, 0xa64bd8f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fsub.d f6, f31, f9, dyn # perform operation
fsub.d f6, f31, f9, rdn # perform operation
fsub.d f6, f31, f9, rmm # perform operation
fsub.d f6, f31, f9, rne # perform operation
fsub.d f6, f31, f9, rtz # perform operation
fsub.d f6, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x11, 0xf9414c8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fsub.d f11, f28, f20, dyn # perform operation
fsub.d f11, f28, f20, rdn # perform operation
fsub.d f11, f28, f20, rmm # perform operation
fsub.d f11, f28, f20, rne # perform operation
fsub.d f11, f28, f20, rtz # perform operation
fsub.d f11, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x16, 0xf3c68df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fsub.d f16, f20, f17, dyn # perform operation
fsub.d f16, f20, f17, rdn # perform operation
fsub.d f16, f20, f17, rmm # perform operation
fsub.d f16, f20, f17, rne # perform operation
fsub.d f16, f20, f17, rtz # perform operation
fsub.d f16, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x14, 0xd6ffff81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fsub.d f14, f23, f20, dyn # perform operation
fsub.d f14, f23, f20, rdn # perform operation
fsub.d f14, f23, f20, rmm # perform operation
fsub.d f14, f23, f20, rne # perform operation
fsub.d f14, f23, f20, rtz # perform operation
fsub.d f14, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x22, 0x53344875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fsub.d f22, f20, f3, dyn # perform operation
fsub.d f22, f20, f3, rdn # perform operation
fsub.d f22, f20, f3, rmm # perform operation
fsub.d f22, f20, f3, rne # perform operation
fsub.d f22, f20, f3, rtz # perform operation
fsub.d f22, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x22, 0x6eb4e41b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fsub.d f22, f26, f13, dyn # perform operation
fsub.d f22, f26, f13, rdn # perform operation
fsub.d f22, f26, f13, rmm # perform operation
fsub.d f22, f26, f13, rne # perform operation
fsub.d f22, f26, f13, rtz # perform operation
fsub.d f22, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x26, 0x2d4d8397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fsub.d f26, f1, f18, dyn # perform operation
fsub.d f26, f1, f18, rdn # perform operation
fsub.d f26, f1, f18, rmm # perform operation
fsub.d f26, f1, f18, rne # perform operation
fsub.d f26, f1, f18, rtz # perform operation
fsub.d f26, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x26, 0x6d395988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
fsub.d f26, f15, f6, dyn # perform operation
fsub.d f26, f15, f6, rdn # perform operation
fsub.d f26, f15, f6, rmm # perform operation
fsub.d f26, f15, f6, rne # perform operation
fsub.d f26, f15, f6, rtz # perform operation
fsub.d f26, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x22, 0xdd6c35f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fsub.d f22, f30, f3, dyn # perform operation
fsub.d f22, f30, f3, rdn # perform operation
fsub.d f22, f30, f3, rmm # perform operation
fsub.d f22, f30, f3, rne # perform operation
fsub.d f22, f30, f3, rtz # perform operation
fsub.d f22, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x6, 0xa2b4b3ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fsub.d f6, f31, f16, dyn # perform operation
fsub.d f6, f31, f16, rdn # perform operation
fsub.d f6, f31, f16, rmm # perform operation
fsub.d f6, f31, f16, rne # perform operation
fsub.d f6, f31, f16, rtz # perform operation
fsub.d f6, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x28, 0x722d319d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fsub.d f28, f11, f17, dyn # perform operation
fsub.d f28, f11, f17, rdn # perform operation
fsub.d f28, f11, f17, rmm # perform operation
fsub.d f28, f11, f17, rne # perform operation
fsub.d f28, f11, f17, rtz # perform operation
fsub.d f28, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x5, 0xf6f0745e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
fsub.d f5, f26, f25, dyn # perform operation
fsub.d f5, f26, f25, rdn # perform operation
fsub.d f5, f26, f25, rmm # perform operation
fsub.d f5, f26, f25, rne # perform operation
fsub.d f5, f26, f25, rtz # perform operation
fsub.d f5, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x26, 0x39be3cbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fsub.d f26, f13, f23, dyn # perform operation
fsub.d f26, f13, f23, rdn # perform operation
fsub.d f26, f13, f23, rmm # perform operation
fsub.d f26, f13, f23, rne # perform operation
fsub.d f26, f13, f23, rtz # perform operation
fsub.d f26, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x12, 0xd467d3da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fsub.d f12, f13, f16, dyn # perform operation
fsub.d f12, f13, f16, rdn # perform operation
fsub.d f12, f13, f16, rmm # perform operation
fsub.d f12, f13, f16, rne # perform operation
fsub.d f12, f13, f16, rtz # perform operation
fsub.d f12, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x11, 0xb75bedc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fsub.d f11, f2, f19, dyn # perform operation
fsub.d f11, f2, f19, rdn # perform operation
fsub.d f11, f2, f19, rmm # perform operation
fsub.d f11, f2, f19, rne # perform operation
fsub.d f11, f2, f19, rtz # perform operation
fsub.d f11, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x22, 0x704bcd78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fsub.d f22, f21, f8, dyn # perform operation
fsub.d f22, f21, f8, rdn # perform operation
fsub.d f22, f21, f8, rmm # perform operation
fsub.d f22, f21, f8, rne # perform operation
fsub.d f22, f21, f8, rtz # perform operation
fsub.d f22, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x6, 0xc925fe97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
fsub.d f6, f12, f14, dyn # perform operation
fsub.d f6, f12, f14, rdn # perform operation
fsub.d f6, f12, f14, rmm # perform operation
fsub.d f6, f12, f14, rne # perform operation
fsub.d f6, f12, f14, rtz # perform operation
fsub.d f6, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x18, 0xc682f424 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fsub.d f18, f23, f15, dyn # perform operation
fsub.d f18, f23, f15, rdn # perform operation
fsub.d f18, f23, f15, rmm # perform operation
fsub.d f18, f23, f15, rne # perform operation
fsub.d f18, f23, f15, rtz # perform operation
fsub.d f18, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x15, 0x0dc58be7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fsub.d f15, f26, f18, dyn # perform operation
fsub.d f15, f26, f18, rdn # perform operation
fsub.d f15, f26, f18, rmm # perform operation
fsub.d f15, f26, f18, rne # perform operation
fsub.d f15, f26, f18, rtz # perform operation
fsub.d f15, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x26, 0x724fab11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fsub.d f26, f20, f17, dyn # perform operation
fsub.d f26, f20, f17, rdn # perform operation
fsub.d f26, f20, f17, rmm # perform operation
fsub.d f26, f20, f17, rne # perform operation
fsub.d f26, f20, f17, rtz # perform operation
fsub.d f26, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x5, 0x6afaf2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fsub.d f5, f7, f13, dyn # perform operation
fsub.d f5, f7, f13, rdn # perform operation
fsub.d f5, f7, f13, rmm # perform operation
fsub.d f5, f7, f13, rne # perform operation
fsub.d f5, f7, f13, rtz # perform operation
fsub.d f5, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x16, 0xbc9d1a70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fsub.d f16, f6, f8, dyn # perform operation
fsub.d f16, f6, f8, rdn # perform operation
fsub.d f16, f6, f8, rmm # perform operation
fsub.d f16, f6, f8, rne # perform operation
fsub.d f16, f6, f8, rtz # perform operation
fsub.d f16, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x23, 0x9e695198 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
fsub.d f23, f30, f28, dyn # perform operation
fsub.d f23, f30, f28, rdn # perform operation
fsub.d f23, f30, f28, rmm # perform operation
fsub.d f23, f30, f28, rne # perform operation
fsub.d f23, f30, f28, rtz # perform operation
fsub.d f23, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x4, 0x8014c191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fsub.d f4, f25, f16, dyn # perform operation
fsub.d f4, f25, f16, rdn # perform operation
fsub.d f4, f25, f16, rmm # perform operation
fsub.d f4, f25, f16, rne # perform operation
fsub.d f4, f25, f16, rtz # perform operation
fsub.d f4, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x10, 0x8fa56636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fsub.d f10, f23, f30, dyn # perform operation
fsub.d f10, f23, f30, rdn # perform operation
fsub.d f10, f23, f30, rmm # perform operation
fsub.d f10, f23, f30, rne # perform operation
fsub.d f10, f23, f30, rtz # perform operation
fsub.d f10, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x15, 0xead15265 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fsub.d f15, f7, f17, dyn # perform operation
fsub.d f15, f7, f17, rdn # perform operation
fsub.d f15, f7, f17, rmm # perform operation
fsub.d f15, f7, f17, rne # perform operation
fsub.d f15, f7, f17, rtz # perform operation
fsub.d f15, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x23, 0x8a2226db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fsub.d f23, f24, f18, dyn # perform operation
fsub.d f23, f24, f18, rdn # perform operation
fsub.d f23, f24, f18, rmm # perform operation
fsub.d f23, f24, f18, rne # perform operation
fsub.d f23, f24, f18, rtz # perform operation
fsub.d f23, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0x2fba4ef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fsub.d f18, f24, f13, dyn # perform operation
fsub.d f18, f24, f13, rdn # perform operation
fsub.d f18, f24, f13, rmm # perform operation
fsub.d f18, f24, f13, rne # perform operation
fsub.d f18, f24, f13, rtz # perform operation
fsub.d f18, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x035ce439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fsub.d f29, f24, f9, dyn # perform operation
fsub.d f29, f24, f9, rdn # perform operation
fsub.d f29, f24, f9, rmm # perform operation
fsub.d f29, f24, f9, rne # perform operation
fsub.d f29, f24, f9, rtz # perform operation
fsub.d f29, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x1, 0x5fa8bac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fsub.d f1, f2, f26, dyn # perform operation
fsub.d f1, f2, f26, rdn # perform operation
fsub.d f1, f2, f26, rmm # perform operation
fsub.d f1, f2, f26, rne # perform operation
fsub.d f1, f2, f26, rtz # perform operation
fsub.d f1, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x15, 0x98e08460 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fsub.d f15, f1, f3, dyn # perform operation
fsub.d f15, f1, f3, rdn # perform operation
fsub.d f15, f1, f3, rmm # perform operation
fsub.d f15, f1, f3, rne # perform operation
fsub.d f15, f1, f3, rtz # perform operation
fsub.d f15, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x24, 0xb703f847 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
fsub.d f24, f7, f8, dyn # perform operation
fsub.d f24, f7, f8, rdn # perform operation
fsub.d f24, f7, f8, rmm # perform operation
fsub.d f24, f7, f8, rne # perform operation
fsub.d f24, f7, f8, rtz # perform operation
fsub.d f24, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f7, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x26, 0x48cbc3d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fsub.d f26, f28, f31, dyn # perform operation
fsub.d f26, f28, f31, rdn # perform operation
fsub.d f26, f28, f31, rmm # perform operation
fsub.d f26, f28, f31, rne # perform operation
fsub.d f26, f28, f31, rtz # perform operation
fsub.d f26, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x22, 0x3734581a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fsub.d f22, f25, f28, dyn # perform operation
fsub.d f22, f25, f28, rdn # perform operation
fsub.d f22, f25, f28, rmm # perform operation
fsub.d f22, f25, f28, rne # perform operation
fsub.d f22, f25, f28, rtz # perform operation
fsub.d f22, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x31, 0x9a697cfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
fsub.d f31, f27, f15, dyn # perform operation
fsub.d f31, f27, f15, rdn # perform operation
fsub.d f31, f27, f15, rmm # perform operation
fsub.d f31, f27, f15, rne # perform operation
fsub.d f31, f27, f15, rtz # perform operation
fsub.d f31, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x28, 0x523192e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fsub.d f28, f31, f4, dyn # perform operation
fsub.d f28, f31, f4, rdn # perform operation
fsub.d f28, f31, f4, rmm # perform operation
fsub.d f28, f31, f4, rne # perform operation
fsub.d f28, f31, f4, rtz # perform operation
fsub.d f28, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x5, 0x3fc0dd31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fsub.d f5, f16, f30, dyn # perform operation
fsub.d f5, f16, f30, rdn # perform operation
fsub.d f5, f16, f30, rmm # perform operation
fsub.d f5, f16, f30, rne # perform operation
fsub.d f5, f16, f30, rtz # perform operation
fsub.d f5, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x10, 0xad653835 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fsub.d f10, f31, f30, dyn # perform operation
fsub.d f10, f31, f30, rdn # perform operation
fsub.d f10, f31, f30, rmm # perform operation
fsub.d f10, f31, f30, rne # perform operation
fsub.d f10, f31, f30, rtz # perform operation
fsub.d f10, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x18, 0xb853059d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fsub.d f18, f10, f31, dyn # perform operation
fsub.d f18, f10, f31, rdn # perform operation
fsub.d f18, f10, f31, rmm # perform operation
fsub.d f18, f10, f31, rne # perform operation
fsub.d f18, f10, f31, rtz # perform operation
fsub.d f18, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x28, 0x7665014d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fsub.d f28, f4, f18, dyn # perform operation
fsub.d f28, f4, f18, rdn # perform operation
fsub.d f28, f4, f18, rmm # perform operation
fsub.d f28, f4, f18, rne # perform operation
fsub.d f28, f4, f18, rtz # perform operation
fsub.d f28, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x28, 0x9b28cd2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fsub.d f28, f24, f17, dyn # perform operation
fsub.d f28, f24, f17, rdn # perform operation
fsub.d f28, f24, f17, rmm # perform operation
fsub.d f28, f24, f17, rne # perform operation
fsub.d f28, f24, f17, rtz # perform operation
fsub.d f28, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x13, 0x21490699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fsub.d f13, f3, f31, dyn # perform operation
fsub.d f13, f3, f31, rdn # perform operation
fsub.d f13, f3, f31, rmm # perform operation
fsub.d f13, f3, f31, rne # perform operation
fsub.d f13, f3, f31, rtz # perform operation
fsub.d f13, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x18, 0x1ee667cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fsub.d f18, f5, f25, dyn # perform operation
fsub.d f18, f5, f25, rdn # perform operation
fsub.d f18, f5, f25, rmm # perform operation
fsub.d f18, f5, f25, rne # perform operation
fsub.d f18, f5, f25, rtz # perform operation
fsub.d f18, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x15, 0xa999d855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fsub.d f15, f28, f2, dyn # perform operation
fsub.d f15, f28, f2, rdn # perform operation
fsub.d f15, f28, f2, rmm # perform operation
fsub.d f15, f28, f2, rne # perform operation
fsub.d f15, f28, f2, rtz # perform operation
fsub.d f15, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x20, 0x359d4bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fsub.d f20, f2, f1, dyn # perform operation
fsub.d f20, f2, f1, rdn # perform operation
fsub.d f20, f2, f1, rmm # perform operation
fsub.d f20, f2, f1, rne # perform operation
fsub.d f20, f2, f1, rtz # perform operation
fsub.d f20, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x25, 0x45dc0da3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fsub.d f25, f4, f17, dyn # perform operation
fsub.d f25, f4, f17, rdn # perform operation
fsub.d f25, f4, f17, rmm # perform operation
fsub.d f25, f4, f17, rne # perform operation
fsub.d f25, f4, f17, rtz # perform operation
fsub.d f25, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x5, 0xb6c34bc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fsub.d f5, f9, f21, dyn # perform operation
fsub.d f5, f9, f21, rdn # perform operation
fsub.d f5, f9, f21, rmm # perform operation
fsub.d f5, f9, f21, rne # perform operation
fsub.d f5, f9, f21, rtz # perform operation
fsub.d f5, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x31, 0x6d8ab40e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fsub.d f31, f24, f26, dyn # perform operation
fsub.d f31, f24, f26, rdn # perform operation
fsub.d f31, f24, f26, rmm # perform operation
fsub.d f31, f24, f26, rne # perform operation
fsub.d f31, f24, f26, rtz # perform operation
fsub.d f31, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x6, 0xe10fc7d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fsub.d f6, f30, f12, dyn # perform operation
fsub.d f6, f30, f12, rdn # perform operation
fsub.d f6, f30, f12, rmm # perform operation
fsub.d f6, f30, f12, rne # perform operation
fsub.d f6, f30, f12, rtz # perform operation
fsub.d f6, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x6, 0x4888344c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fsub.d f6, f30, f2, dyn # perform operation
fsub.d f6, f30, f2, rdn # perform operation
fsub.d f6, f30, f2, rmm # perform operation
fsub.d f6, f30, f2, rne # perform operation
fsub.d f6, f30, f2, rtz # perform operation
fsub.d f6, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f30, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x9, 0xccffd4f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fsub.d f9, f22, f5, dyn # perform operation
fsub.d f9, f22, f5, rdn # perform operation
fsub.d f9, f22, f5, rmm # perform operation
fsub.d f9, f22, f5, rne # perform operation
fsub.d f9, f22, f5, rtz # perform operation
fsub.d f9, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x6, 0xde8c4bb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
fsub.d f6, f23, f30, dyn # perform operation
fsub.d f6, f23, f30, rdn # perform operation
fsub.d f6, f23, f30, rmm # perform operation
fsub.d f6, f23, f30, rne # perform operation
fsub.d f6, f23, f30, rtz # perform operation
fsub.d f6, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x30, 0xdacc2dca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fsub.d f30, f7, f8, dyn # perform operation
fsub.d f30, f7, f8, rdn # perform operation
fsub.d f30, f7, f8, rmm # perform operation
fsub.d f30, f7, f8, rne # perform operation
fsub.d f30, f7, f8, rtz # perform operation
fsub.d f30, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f7, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x12, 0x25c49d84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
fsub.d f12, f8, f4, dyn # perform operation
fsub.d f12, f8, f4, rdn # perform operation
fsub.d f12, f8, f4, rmm # perform operation
fsub.d f12, f8, f4, rne # perform operation
fsub.d f12, f8, f4, rtz # perform operation
fsub.d f12, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x5, 0x941d5243 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
fsub.d f5, f11, f12, dyn # perform operation
fsub.d f5, f11, f12, rdn # perform operation
fsub.d f5, f11, f12, rmm # perform operation
fsub.d f5, f11, f12, rne # perform operation
fsub.d f5, f11, f12, rtz # perform operation
fsub.d f5, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x26, 0x93aefed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fsub.d f26, f21, f31, dyn # perform operation
fsub.d f26, f21, f31, rdn # perform operation
fsub.d f26, f21, f31, rmm # perform operation
fsub.d f26, f21, f31, rne # perform operation
fsub.d f26, f21, f31, rtz # perform operation
fsub.d f26, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x19, 0x22e565e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fsub.d f19, f12, f4, dyn # perform operation
fsub.d f19, f12, f4, rdn # perform operation
fsub.d f19, f12, f4, rmm # perform operation
fsub.d f19, f12, f4, rne # perform operation
fsub.d f19, f12, f4, rtz # perform operation
fsub.d f19, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x25, 0xb07c02e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fsub.d f25, f2, f28, dyn # perform operation
fsub.d f25, f2, f28, rdn # perform operation
fsub.d f25, f2, f28, rmm # perform operation
fsub.d f25, f2, f28, rne # perform operation
fsub.d f25, f2, f28, rtz # perform operation
fsub.d f25, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x7, 0x14ba8eba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fsub.d f7, f5, f10, dyn # perform operation
fsub.d f7, f5, f10, rdn # perform operation
fsub.d f7, f5, f10, rmm # perform operation
fsub.d f7, f5, f10, rne # perform operation
fsub.d f7, f5, f10, rtz # perform operation
fsub.d f7, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x11, 0x0a2b855a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fsub.d f11, f2, f21, dyn # perform operation
fsub.d f11, f2, f21, rdn # perform operation
fsub.d f11, f2, f21, rmm # perform operation
fsub.d f11, f2, f21, rne # perform operation
fsub.d f11, f2, f21, rtz # perform operation
fsub.d f11, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x26, 0xb78e7d49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fsub.d f26, f13, f3, dyn # perform operation
fsub.d f26, f13, f3, rdn # perform operation
fsub.d f26, f13, f3, rmm # perform operation
fsub.d f26, f13, f3, rne # perform operation
fsub.d f26, f13, f3, rtz # perform operation
fsub.d f26, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x13, 0xf3e9003f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fsub.d f13, f21, f4, dyn # perform operation
fsub.d f13, f21, f4, rdn # perform operation
fsub.d f13, f21, f4, rmm # perform operation
fsub.d f13, f21, f4, rne # perform operation
fsub.d f13, f21, f4, rtz # perform operation
fsub.d f13, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x25, 0x2f8aa71b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
fsub.d f25, f3, f4, dyn # perform operation
fsub.d f25, f3, f4, rdn # perform operation
fsub.d f25, f3, f4, rmm # perform operation
fsub.d f25, f3, f4, rne # perform operation
fsub.d f25, f3, f4, rtz # perform operation
fsub.d f25, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x23, 0x809a876d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fsub.d f23, f31, f2, dyn # perform operation
fsub.d f23, f31, f2, rdn # perform operation
fsub.d f23, f31, f2, rmm # perform operation
fsub.d f23, f31, f2, rne # perform operation
fsub.d f23, f31, f2, rtz # perform operation
fsub.d f23, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x30, 0xd6738a5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fsub.d f30, f1, f19, dyn # perform operation
fsub.d f30, f1, f19, rdn # perform operation
fsub.d f30, f1, f19, rmm # perform operation
fsub.d f30, f1, f19, rne # perform operation
fsub.d f30, f1, f19, rtz # perform operation
fsub.d f30, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x11, 0xd1fdcf86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
fsub.d f11, f16, f4, dyn # perform operation
fsub.d f11, f16, f4, rdn # perform operation
fsub.d f11, f16, f4, rmm # perform operation
fsub.d f11, f16, f4, rne # perform operation
fsub.d f11, f16, f4, rtz # perform operation
fsub.d f11, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x5, 0x99233d7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fsub.d f5, f19, f17, dyn # perform operation
fsub.d f5, f19, f17, rdn # perform operation
fsub.d f5, f19, f17, rmm # perform operation
fsub.d f5, f19, f17, rne # perform operation
fsub.d f5, f19, f17, rtz # perform operation
fsub.d f5, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x20, 0xb368dcf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fsub.d f20, f2, f22, dyn # perform operation
fsub.d f20, f2, f22, rdn # perform operation
fsub.d f20, f2, f22, rmm # perform operation
fsub.d f20, f2, f22, rne # perform operation
fsub.d f20, f2, f22, rtz # perform operation
fsub.d f20, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x17, 0xe1781163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
fsub.d f17, f6, f26, dyn # perform operation
fsub.d f17, f6, f26, rdn # perform operation
fsub.d f17, f6, f26, rmm # perform operation
fsub.d f17, f6, f26, rne # perform operation
fsub.d f17, f6, f26, rtz # perform operation
fsub.d f17, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x8, 0xfb7081a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
fsub.d f8, f19, f21, dyn # perform operation
fsub.d f8, f19, f21, rdn # perform operation
fsub.d f8, f19, f21, rmm # perform operation
fsub.d f8, f19, f21, rne # perform operation
fsub.d f8, f19, f21, rtz # perform operation
fsub.d f8, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x28, 0x8e6f8f65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fsub.d f28, f26, f5, dyn # perform operation
fsub.d f28, f26, f5, rdn # perform operation
fsub.d f28, f26, f5, rmm # perform operation
fsub.d f28, f26, f5, rne # perform operation
fsub.d f28, f26, f5, rtz # perform operation
fsub.d f28, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x9, 0xdd20e2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fsub.d f9, f15, f6, dyn # perform operation
fsub.d f9, f15, f6, rdn # perform operation
fsub.d f9, f15, f6, rmm # perform operation
fsub.d f9, f15, f6, rne # perform operation
fsub.d f9, f15, f6, rtz # perform operation
fsub.d f9, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x18, 0xbb9bc599 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
fsub.d f18, f7, f3, dyn # perform operation
fsub.d f18, f7, f3, rdn # perform operation
fsub.d f18, f7, f3, rmm # perform operation
fsub.d f18, f7, f3, rne # perform operation
fsub.d f18, f7, f3, rtz # perform operation
fsub.d f18, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x1, 0xac05b2fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fsub.d f1, f26, f25, dyn # perform operation
fsub.d f1, f26, f25, rdn # perform operation
fsub.d f1, f26, f25, rmm # perform operation
fsub.d f1, f26, f25, rne # perform operation
fsub.d f1, f26, f25, rtz # perform operation
fsub.d f1, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x29, 0xf98e859c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fsub.d f29, f7, f24, dyn # perform operation
fsub.d f29, f7, f24, rdn # perform operation
fsub.d f29, f7, f24, rmm # perform operation
fsub.d f29, f7, f24, rne # perform operation
fsub.d f29, f7, f24, rtz # perform operation
fsub.d f29, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x27, 0x6cd064a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fsub.d f27, f11, f31, dyn # perform operation
fsub.d f27, f11, f31, rdn # perform operation
fsub.d f27, f11, f31, rmm # perform operation
fsub.d f27, f11, f31, rne # perform operation
fsub.d f27, f11, f31, rtz # perform operation
fsub.d f27, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x6, 0xca761604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
fsub.d f6, f19, f21, dyn # perform operation
fsub.d f6, f19, f21, rdn # perform operation
fsub.d f6, f19, f21, rmm # perform operation
fsub.d f6, f19, f21, rne # perform operation
fsub.d f6, f19, f21, rtz # perform operation
fsub.d f6, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x29, 0xf5bf4500 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fsub.d f29, f4, f5, dyn # perform operation
fsub.d f29, f4, f5, rdn # perform operation
fsub.d f29, f4, f5, rmm # perform operation
fsub.d f29, f4, f5, rne # perform operation
fsub.d f29, f4, f5, rtz # perform operation
fsub.d f29, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x12, 0xfaa1c065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fsub.d f12, f25, f8, dyn # perform operation
fsub.d f12, f25, f8, rdn # perform operation
fsub.d f12, f25, f8, rmm # perform operation
fsub.d f12, f25, f8, rne # perform operation
fsub.d f12, f25, f8, rtz # perform operation
fsub.d f12, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x2, 0xc690ebfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fsub.d f2, f4, f24, dyn # perform operation
fsub.d f2, f4, f24, rdn # perform operation
fsub.d f2, f4, f24, rmm # perform operation
fsub.d f2, f4, f24, rne # perform operation
fsub.d f2, f4, f24, rtz # perform operation
fsub.d f2, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x2, 0xe805db20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fsub.d f2, f9, f17, dyn # perform operation
fsub.d f2, f9, f17, rdn # perform operation
fsub.d f2, f9, f17, rmm # perform operation
fsub.d f2, f9, f17, rne # perform operation
fsub.d f2, f9, f17, rtz # perform operation
fsub.d f2, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x21, 0xe72f275e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fsub.d f21, f7, f19, dyn # perform operation
fsub.d f21, f7, f19, rdn # perform operation
fsub.d f21, f7, f19, rmm # perform operation
fsub.d f21, f7, f19, rne # perform operation
fsub.d f21, f7, f19, rtz # perform operation
fsub.d f21, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x19, 0xb75e752e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fsub.d f19, f28, f7, dyn # perform operation
fsub.d f19, f28, f7, rdn # perform operation
fsub.d f19, f28, f7, rmm # perform operation
fsub.d f19, f28, f7, rne # perform operation
fsub.d f19, f28, f7, rtz # perform operation
fsub.d f19, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x24, 0x86cd0317 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fsub.d f24, f10, f4, dyn # perform operation
fsub.d f24, f10, f4, rdn # perform operation
fsub.d f24, f10, f4, rmm # perform operation
fsub.d f24, f10, f4, rne # perform operation
fsub.d f24, f10, f4, rtz # perform operation
fsub.d f24, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x31, 0xbe6e240b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
fsub.d f31, f17, f20, dyn # perform operation
fsub.d f31, f17, f20, rdn # perform operation
fsub.d f31, f17, f20, rmm # perform operation
fsub.d f31, f17, f20, rne # perform operation
fsub.d f31, f17, f20, rtz # perform operation
fsub.d f31, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x3, 0x2a7571d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fsub.d f3, f18, f16, dyn # perform operation
fsub.d f3, f18, f16, rdn # perform operation
fsub.d f3, f18, f16, rmm # perform operation
fsub.d f3, f18, f16, rne # perform operation
fsub.d f3, f18, f16, rtz # perform operation
fsub.d f3, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x20, 0x8162e35e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fsub.d f20, f18, f30, dyn # perform operation
fsub.d f20, f18, f30, rdn # perform operation
fsub.d f20, f18, f30, rmm # perform operation
fsub.d f20, f18, f30, rne # perform operation
fsub.d f20, f18, f30, rtz # perform operation
fsub.d f20, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x23, 0xa18cda21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
fsub.d f23, f18, f7, dyn # perform operation
fsub.d f23, f18, f7, rdn # perform operation
fsub.d f23, f18, f7, rmm # perform operation
fsub.d f23, f18, f7, rne # perform operation
fsub.d f23, f18, f7, rtz # perform operation
fsub.d f23, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x15, 0x08cfb786 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
fsub.d f15, f5, f2, dyn # perform operation
fsub.d f15, f5, f2, rdn # perform operation
fsub.d f15, f5, f2, rmm # perform operation
fsub.d f15, f5, f2, rne # perform operation
fsub.d f15, f5, f2, rtz # perform operation
fsub.d f15, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x1, 0x8b9ac171 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fsub.d f1, f11, f5, dyn # perform operation
fsub.d f1, f11, f5, rdn # perform operation
fsub.d f1, f11, f5, rmm # perform operation
fsub.d f1, f11, f5, rne # perform operation
fsub.d f1, f11, f5, rtz # perform operation
fsub.d f1, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x4, 0x5cd6f73b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
fsub.d f4, f6, f5, dyn # perform operation
fsub.d f4, f6, f5, rdn # perform operation
fsub.d f4, f6, f5, rmm # perform operation
fsub.d f4, f6, f5, rne # perform operation
fsub.d f4, f6, f5, rtz # perform operation
fsub.d f4, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x20, 0x62bc2144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fsub.d f20, f29, f3, dyn # perform operation
fsub.d f20, f29, f3, rdn # perform operation
fsub.d f20, f29, f3, rmm # perform operation
fsub.d f20, f29, f3, rne # perform operation
fsub.d f20, f29, f3, rtz # perform operation
fsub.d f20, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x25, 0xb2b38aa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
fsub.d f25, f10, f27, dyn # perform operation
fsub.d f25, f10, f27, rdn # perform operation
fsub.d f25, f10, f27, rmm # perform operation
fsub.d f25, f10, f27, rne # perform operation
fsub.d f25, f10, f27, rtz # perform operation
fsub.d f25, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x1, 0xae6f9021 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
fsub.d f1, f16, f21, dyn # perform operation
fsub.d f1, f16, f21, rdn # perform operation
fsub.d f1, f16, f21, rmm # perform operation
fsub.d f1, f16, f21, rne # perform operation
fsub.d f1, f16, f21, rtz # perform operation
fsub.d f1, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x13, 0xcdf6dbd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fsub.d f13, f20, f22, dyn # perform operation
fsub.d f13, f20, f22, rdn # perform operation
fsub.d f13, f20, f22, rmm # perform operation
fsub.d f13, f20, f22, rne # perform operation
fsub.d f13, f20, f22, rtz # perform operation
fsub.d f13, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x25, 0x24092683 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fsub.d f25, f6, f1, dyn # perform operation
fsub.d f25, f6, f1, rdn # perform operation
fsub.d f25, f6, f1, rmm # perform operation
fsub.d f25, f6, f1, rne # perform operation
fsub.d f25, f6, f1, rtz # perform operation
fsub.d f25, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x13, 0x67acb9c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fsub.d f13, f3, f20, dyn # perform operation
fsub.d f13, f3, f20, rdn # perform operation
fsub.d f13, f3, f20, rmm # perform operation
fsub.d f13, f3, f20, rne # perform operation
fsub.d f13, f3, f20, rtz # perform operation
fsub.d f13, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x26, 0xa9d595d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fsub.d f26, f17, f14, dyn # perform operation
fsub.d f26, f17, f14, rdn # perform operation
fsub.d f26, f17, f14, rmm # perform operation
fsub.d f26, f17, f14, rne # perform operation
fsub.d f26, f17, f14, rtz # perform operation
fsub.d f26, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x24, 0x59ac91d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fsub.d f24, f27, f12, dyn # perform operation
fsub.d f24, f27, f12, rdn # perform operation
fsub.d f24, f27, f12, rmm # perform operation
fsub.d f24, f27, f12, rne # perform operation
fsub.d f24, f27, f12, rtz # perform operation
fsub.d f24, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x15, 0x803cb9e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
fsub.d f15, f11, f31, dyn # perform operation
fsub.d f15, f11, f31, rdn # perform operation
fsub.d f15, f11, f31, rmm # perform operation
fsub.d f15, f11, f31, rne # perform operation
fsub.d f15, f11, f31, rtz # perform operation
fsub.d f15, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x12, 0xa6040530 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fsub.d f12, f11, f9, dyn # perform operation
fsub.d f12, f11, f9, rdn # perform operation
fsub.d f12, f11, f9, rmm # perform operation
fsub.d f12, f11, f9, rne # perform operation
fsub.d f12, f11, f9, rtz # perform operation
fsub.d f12, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x10, 0xd2e6aebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fsub.d f10, f8, f9, dyn # perform operation
fsub.d f10, f8, f9, rdn # perform operation
fsub.d f10, f8, f9, rmm # perform operation
fsub.d f10, f8, f9, rne # perform operation
fsub.d f10, f8, f9, rtz # perform operation
fsub.d f10, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x8, 0x7ff0cea6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fsub.d f8, f9, f11, dyn # perform operation
fsub.d f8, f9, f11, rdn # perform operation
fsub.d f8, f9, f11, rmm # perform operation
fsub.d f8, f9, f11, rne # perform operation
fsub.d f8, f9, f11, rtz # perform operation
fsub.d f8, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x22, 0xf5335a69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fsub.d f22, f24, f5, dyn # perform operation
fsub.d f22, f24, f5, rdn # perform operation
fsub.d f22, f24, f5, rmm # perform operation
fsub.d f22, f24, f5, rne # perform operation
fsub.d f22, f24, f5, rtz # perform operation
fsub.d f22, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x18, 0x5a9fbcce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fsub.d f18, f14, f13, dyn # perform operation
fsub.d f18, f14, f13, rdn # perform operation
fsub.d f18, f14, f13, rmm # perform operation
fsub.d f18, f14, f13, rne # perform operation
fsub.d f18, f14, f13, rtz # perform operation
fsub.d f18, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x7, 0xb132b875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fsub.d f7, f19, f23, dyn # perform operation
fsub.d f7, f19, f23, rdn # perform operation
fsub.d f7, f19, f23, rmm # perform operation
fsub.d f7, f19, f23, rne # perform operation
fsub.d f7, f19, f23, rtz # perform operation
fsub.d f7, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x19, 0x3b787ff8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fsub.d f19, f27, f8, dyn # perform operation
fsub.d f19, f27, f8, rdn # perform operation
fsub.d f19, f27, f8, rmm # perform operation
fsub.d f19, f27, f8, rne # perform operation
fsub.d f19, f27, f8, rtz # perform operation
fsub.d f19, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x13, 0xb2f6d99f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fsub.d f13, f9, f19, dyn # perform operation
fsub.d f13, f9, f19, rdn # perform operation
fsub.d f13, f9, f19, rmm # perform operation
fsub.d f13, f9, f19, rne # perform operation
fsub.d f13, f9, f19, rtz # perform operation
fsub.d f13, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x24, 0x95f814df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fsub.d f24, f14, f31, dyn # perform operation
fsub.d f24, f14, f31, rdn # perform operation
fsub.d f24, f14, f31, rmm # perform operation
fsub.d f24, f14, f31, rne # perform operation
fsub.d f24, f14, f31, rtz # perform operation
fsub.d f24, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x6, 0x58502a78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fsub.d f6, f17, f20, dyn # perform operation
fsub.d f6, f17, f20, rdn # perform operation
fsub.d f6, f17, f20, rmm # perform operation
fsub.d f6, f17, f20, rne # perform operation
fsub.d f6, f17, f20, rtz # perform operation
fsub.d f6, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x30, 0x78afb0ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fsub.d f30, f25, f11, dyn # perform operation
fsub.d f30, f25, f11, rdn # perform operation
fsub.d f30, f25, f11, rmm # perform operation
fsub.d f30, f25, f11, rne # perform operation
fsub.d f30, f25, f11, rtz # perform operation
fsub.d f30, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x26, 0x9c8c23a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
fsub.d f26, f24, f4, dyn # perform operation
fsub.d f26, f24, f4, rdn # perform operation
fsub.d f26, f24, f4, rmm # perform operation
fsub.d f26, f24, f4, rne # perform operation
fsub.d f26, f24, f4, rtz # perform operation
fsub.d f26, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x4, 0x84280e8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fsub.d f4, f19, f8, dyn # perform operation
fsub.d f4, f19, f8, rdn # perform operation
fsub.d f4, f19, f8, rmm # perform operation
fsub.d f4, f19, f8, rne # perform operation
fsub.d f4, f19, f8, rtz # perform operation
fsub.d f4, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x14, 0x6bff510d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fsub.d f14, f9, f20, dyn # perform operation
fsub.d f14, f9, f20, rdn # perform operation
fsub.d f14, f9, f20, rmm # perform operation
fsub.d f14, f9, f20, rne # perform operation
fsub.d f14, f9, f20, rtz # perform operation
fsub.d f14, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x29, 0x320b4850 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fsub.d f29, f22, f13, dyn # perform operation
fsub.d f29, f22, f13, rdn # perform operation
fsub.d f29, f22, f13, rmm # perform operation
fsub.d f29, f22, f13, rne # perform operation
fsub.d f29, f22, f13, rtz # perform operation
fsub.d f29, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x30, 0xcfd314a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fsub.d f30, f21, f23, dyn # perform operation
fsub.d f30, f21, f23, rdn # perform operation
fsub.d f30, f21, f23, rmm # perform operation
fsub.d f30, f21, f23, rne # perform operation
fsub.d f30, f21, f23, rtz # perform operation
fsub.d f30, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x8, 0x386f1015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fsub.d f8, f26, f20, dyn # perform operation
fsub.d f8, f26, f20, rdn # perform operation
fsub.d f8, f26, f20, rmm # perform operation
fsub.d f8, f26, f20, rne # perform operation
fsub.d f8, f26, f20, rtz # perform operation
fsub.d f8, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x15, 0x6c1b7de1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fsub.d f15, f12, f14, dyn # perform operation
fsub.d f15, f12, f14, rdn # perform operation
fsub.d f15, f12, f14, rmm # perform operation
fsub.d f15, f12, f14, rne # perform operation
fsub.d f15, f12, f14, rtz # perform operation
fsub.d f15, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x28, 0xdd110855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
fsub.d f28, f23, f14, dyn # perform operation
fsub.d f28, f23, f14, rdn # perform operation
fsub.d f28, f23, f14, rmm # perform operation
fsub.d f28, f23, f14, rne # perform operation
fsub.d f28, f23, f14, rtz # perform operation
fsub.d f28, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x5, 0xd0c20e47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fsub.d f5, f24, f17, dyn # perform operation
fsub.d f5, f24, f17, rdn # perform operation
fsub.d f5, f24, f17, rmm # perform operation
fsub.d f5, f24, f17, rne # perform operation
fsub.d f5, f24, f17, rtz # perform operation
fsub.d f5, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x7, 0x4b72ff80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fsub.d f7, f29, f12, dyn # perform operation
fsub.d f7, f29, f12, rdn # perform operation
fsub.d f7, f29, f12, rmm # perform operation
fsub.d f7, f29, f12, rne # perform operation
fsub.d f7, f29, f12, rtz # perform operation
fsub.d f7, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x25, 0xb472d9e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fsub.d f25, f31, f4, dyn # perform operation
fsub.d f25, f31, f4, rdn # perform operation
fsub.d f25, f31, f4, rmm # perform operation
fsub.d f25, f31, f4, rne # perform operation
fsub.d f25, f31, f4, rtz # perform operation
fsub.d f25, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x3, 0x15e5a4d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fsub.d f3, f14, f16, dyn # perform operation
fsub.d f3, f14, f16, rdn # perform operation
fsub.d f3, f14, f16, rmm # perform operation
fsub.d f3, f14, f16, rne # perform operation
fsub.d f3, f14, f16, rtz # perform operation
fsub.d f3, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x3, 0xa5de67ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
fsub.d f3, f9, f25, dyn # perform operation
fsub.d f3, f9, f25, rdn # perform operation
fsub.d f3, f9, f25, rmm # perform operation
fsub.d f3, f9, f25, rne # perform operation
fsub.d f3, f9, f25, rtz # perform operation
fsub.d f3, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x18, 0x88ac5ee5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
fsub.d f18, f31, f9, dyn # perform operation
fsub.d f18, f31, f9, rdn # perform operation
fsub.d f18, f31, f9, rmm # perform operation
fsub.d f18, f31, f9, rne # perform operation
fsub.d f18, f31, f9, rtz # perform operation
fsub.d f18, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x20, 0x207a6a66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
fsub.d f20, f29, f28, dyn # perform operation
fsub.d f20, f29, f28, rdn # perform operation
fsub.d f20, f29, f28, rmm # perform operation
fsub.d f20, f29, f28, rne # perform operation
fsub.d f20, f29, f28, rtz # perform operation
fsub.d f20, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x6, 0x7f6ccdb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fsub.d f6, f19, f26, dyn # perform operation
fsub.d f6, f19, f26, rdn # perform operation
fsub.d f6, f19, f26, rmm # perform operation
fsub.d f6, f19, f26, rne # perform operation
fsub.d f6, f19, f26, rtz # perform operation
fsub.d f6, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x4, 0x8d435960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fsub.d f4, f31, f22, dyn # perform operation
fsub.d f4, f31, f22, rdn # perform operation
fsub.d f4, f31, f22, rmm # perform operation
fsub.d f4, f31, f22, rne # perform operation
fsub.d f4, f31, f22, rtz # perform operation
fsub.d f4, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f4, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f4, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f4, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f4, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f4, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x24, 0x2065e720 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fsub.d f24, f11, f9, dyn # perform operation
fsub.d f24, f11, f9, rdn # perform operation
fsub.d f24, f11, f9, rmm # perform operation
fsub.d f24, f11, f9, rne # perform operation
fsub.d f24, f11, f9, rtz # perform operation
fsub.d f24, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x25, 0x94b7de71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fsub.d f25, f17, f18, dyn # perform operation
fsub.d f25, f17, f18, rdn # perform operation
fsub.d f25, f17, f18, rmm # perform operation
fsub.d f25, f17, f18, rne # perform operation
fsub.d f25, f17, f18, rtz # perform operation
fsub.d f25, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x28, 0xe1df4a50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
fsub.d f28, f15, f27, dyn # perform operation
fsub.d f28, f15, f27, rdn # perform operation
fsub.d f28, f15, f27, rmm # perform operation
fsub.d f28, f15, f27, rne # perform operation
fsub.d f28, f15, f27, rtz # perform operation
fsub.d f28, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x2, 0xded9ce03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fsub.d f2, f12, f24, dyn # perform operation
fsub.d f2, f12, f24, rdn # perform operation
fsub.d f2, f12, f24, rmm # perform operation
fsub.d f2, f12, f24, rne # perform operation
fsub.d f2, f12, f24, rtz # perform operation
fsub.d f2, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x25, 0x4c0cb1a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fsub.d f25, f30, f16, dyn # perform operation
fsub.d f25, f30, f16, rdn # perform operation
fsub.d f25, f30, f16, rmm # perform operation
fsub.d f25, f30, f16, rne # perform operation
fsub.d f25, f30, f16, rtz # perform operation
fsub.d f25, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x11, 0xf446c041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fsub.d f11, f30, f12, dyn # perform operation
fsub.d f11, f30, f12, rdn # perform operation
fsub.d f11, f30, f12, rmm # perform operation
fsub.d f11, f30, f12, rne # perform operation
fsub.d f11, f30, f12, rtz # perform operation
fsub.d f11, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x3, 0x4e7742b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
fsub.d f3, f9, f29, dyn # perform operation
fsub.d f3, f9, f29, rdn # perform operation
fsub.d f3, f9, f29, rmm # perform operation
fsub.d f3, f9, f29, rne # perform operation
fsub.d f3, f9, f29, rtz # perform operation
fsub.d f3, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f9, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x2, 0x069c2dce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
fsub.d f2, f18, f17, dyn # perform operation
fsub.d f2, f18, f17, rdn # perform operation
fsub.d f2, f18, f17, rmm # perform operation
fsub.d f2, f18, f17, rne # perform operation
fsub.d f2, f18, f17, rtz # perform operation
fsub.d f2, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x24, 0xe8dd17a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fsub.d f24, f2, f26, dyn # perform operation
fsub.d f24, f2, f26, rdn # perform operation
fsub.d f24, f2, f26, rmm # perform operation
fsub.d f24, f2, f26, rne # perform operation
fsub.d f24, f2, f26, rtz # perform operation
fsub.d f24, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x31, 0xba21620f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fsub.d f31, f29, f14, dyn # perform operation
fsub.d f31, f29, f14, rdn # perform operation
fsub.d f31, f29, f14, rmm # perform operation
fsub.d f31, f29, f14, rne # perform operation
fsub.d f31, f29, f14, rtz # perform operation
fsub.d f31, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x1, 0x759c1a20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fsub.d f1, f3, f18, dyn # perform operation
fsub.d f1, f3, f18, rdn # perform operation
fsub.d f1, f3, f18, rmm # perform operation
fsub.d f1, f3, f18, rne # perform operation
fsub.d f1, f3, f18, rtz # perform operation
fsub.d f1, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f3, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x22, 0x20f6b0a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fsub.d f22, f10, f31, dyn # perform operation
fsub.d f22, f10, f31, rdn # perform operation
fsub.d f22, f10, f31, rmm # perform operation
fsub.d f22, f10, f31, rne # perform operation
fsub.d f22, f10, f31, rtz # perform operation
fsub.d f22, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x5, 0xeb5590e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fsub.d f5, f24, f25, dyn # perform operation
fsub.d f5, f24, f25, rdn # perform operation
fsub.d f5, f24, f25, rmm # perform operation
fsub.d f5, f24, f25, rne # perform operation
fsub.d f5, f24, f25, rtz # perform operation
fsub.d f5, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x10, 0xbae5e851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fsub.d f10, f30, f6, dyn # perform operation
fsub.d f10, f30, f6, rdn # perform operation
fsub.d f10, f30, f6, rmm # perform operation
fsub.d f10, f30, f6, rne # perform operation
fsub.d f10, f30, f6, rtz # perform operation
fsub.d f10, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x5, 0x58599819 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fsub.d f5, f22, f23, dyn # perform operation
fsub.d f5, f22, f23, rdn # perform operation
fsub.d f5, f22, f23, rmm # perform operation
fsub.d f5, f22, f23, rne # perform operation
fsub.d f5, f22, f23, rtz # perform operation
fsub.d f5, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x1, 0xbaedffb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fsub.d f1, f26, f21, dyn # perform operation
fsub.d f1, f26, f21, rdn # perform operation
fsub.d f1, f26, f21, rmm # perform operation
fsub.d f1, f26, f21, rne # perform operation
fsub.d f1, f26, f21, rtz # perform operation
fsub.d f1, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x6, 0xf1b31322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fsub.d f6, f22, f26, dyn # perform operation
fsub.d f6, f22, f26, rdn # perform operation
fsub.d f6, f22, f26, rmm # perform operation
fsub.d f6, f22, f26, rne # perform operation
fsub.d f6, f22, f26, rtz # perform operation
fsub.d f6, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x17, 0xda39daf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
fsub.d f17, f26, f5, dyn # perform operation
fsub.d f17, f26, f5, rdn # perform operation
fsub.d f17, f26, f5, rmm # perform operation
fsub.d f17, f26, f5, rne # perform operation
fsub.d f17, f26, f5, rtz # perform operation
fsub.d f17, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x7, 0x49372229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fsub.d f7, f4, f5, dyn # perform operation
fsub.d f7, f4, f5, rdn # perform operation
fsub.d f7, f4, f5, rmm # perform operation
fsub.d f7, f4, f5, rne # perform operation
fsub.d f7, f4, f5, rtz # perform operation
fsub.d f7, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x27, 0x7ecb2915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fsub.d f27, f1, f14, dyn # perform operation
fsub.d f27, f1, f14, rdn # perform operation
fsub.d f27, f1, f14, rmm # perform operation
fsub.d f27, f1, f14, rne # perform operation
fsub.d f27, f1, f14, rtz # perform operation
fsub.d f27, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x6, 0x1d7871a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
fsub.d f6, f30, f28, dyn # perform operation
fsub.d f6, f30, f28, rdn # perform operation
fsub.d f6, f30, f28, rmm # perform operation
fsub.d f6, f30, f28, rne # perform operation
fsub.d f6, f30, f28, rtz # perform operation
fsub.d f6, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x19, 0x2d9534df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fsub.d f19, f6, f28, dyn # perform operation
fsub.d f19, f6, f28, rdn # perform operation
fsub.d f19, f6, f28, rmm # perform operation
fsub.d f19, f6, f28, rne # perform operation
fsub.d f19, f6, f28, rtz # perform operation
fsub.d f19, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x28, 0x7134a741 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fsub.d f28, f18, f6, dyn # perform operation
fsub.d f28, f18, f6, rdn # perform operation
fsub.d f28, f18, f6, rmm # perform operation
fsub.d f28, f18, f6, rne # perform operation
fsub.d f28, f18, f6, rtz # perform operation
fsub.d f28, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x22, 0xa08f6d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fsub.d f22, f27, f7, dyn # perform operation
fsub.d f22, f27, f7, rdn # perform operation
fsub.d f22, f27, f7, rmm # perform operation
fsub.d f22, f27, f7, rne # perform operation
fsub.d f22, f27, f7, rtz # perform operation
fsub.d f22, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x8, 0xdc06e128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fsub.d f8, f22, f27, dyn # perform operation
fsub.d f8, f22, f27, rdn # perform operation
fsub.d f8, f22, f27, rmm # perform operation
fsub.d f8, f22, f27, rne # perform operation
fsub.d f8, f22, f27, rtz # perform operation
fsub.d f8, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x13, 0xc629c2e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fsub.d f13, f22, f20, dyn # perform operation
fsub.d f13, f22, f20, rdn # perform operation
fsub.d f13, f22, f20, rmm # perform operation
fsub.d f13, f22, f20, rne # perform operation
fsub.d f13, f22, f20, rtz # perform operation
fsub.d f13, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x19, 0xf9f6ced0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fsub.d f19, f6, f17, dyn # perform operation
fsub.d f19, f6, f17, rdn # perform operation
fsub.d f19, f6, f17, rmm # perform operation
fsub.d f19, f6, f17, rne # perform operation
fsub.d f19, f6, f17, rtz # perform operation
fsub.d f19, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x5, 0x8a177f57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
fsub.d f5, f17, f28, dyn # perform operation
fsub.d f5, f17, f28, rdn # perform operation
fsub.d f5, f17, f28, rmm # perform operation
fsub.d f5, f17, f28, rne # perform operation
fsub.d f5, f17, f28, rtz # perform operation
fsub.d f5, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x19, 0x9fdf6903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fsub.d f19, f13, f21, dyn # perform operation
fsub.d f19, f13, f21, rdn # perform operation
fsub.d f19, f13, f21, rmm # perform operation
fsub.d f19, f13, f21, rne # perform operation
fsub.d f19, f13, f21, rtz # perform operation
fsub.d f19, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x20, 0x009e86c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fsub.d f20, f25, f29, dyn # perform operation
fsub.d f20, f25, f29, rdn # perform operation
fsub.d f20, f25, f29, rmm # perform operation
fsub.d f20, f25, f29, rne # perform operation
fsub.d f20, f25, f29, rtz # perform operation
fsub.d f20, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x14, 0x48699a06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fsub.d f14, f13, f20, dyn # perform operation
fsub.d f14, f13, f20, rdn # perform operation
fsub.d f14, f13, f20, rmm # perform operation
fsub.d f14, f13, f20, rne # perform operation
fsub.d f14, f13, f20, rtz # perform operation
fsub.d f14, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x30, 0x1aa30ef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fsub.d f30, f6, f22, dyn # perform operation
fsub.d f30, f6, f22, rdn # perform operation
fsub.d f30, f6, f22, rmm # perform operation
fsub.d f30, f6, f22, rne # perform operation
fsub.d f30, f6, f22, rtz # perform operation
fsub.d f30, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x24, 0xe61286be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fsub.d f24, f13, f23, dyn # perform operation
fsub.d f24, f13, f23, rdn # perform operation
fsub.d f24, f13, f23, rmm # perform operation
fsub.d f24, f13, f23, rne # perform operation
fsub.d f24, f13, f23, rtz # perform operation
fsub.d f24, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x20, 0x3f8dbb47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
fsub.d f20, f28, f17, dyn # perform operation
fsub.d f20, f28, f17, rdn # perform operation
fsub.d f20, f28, f17, rmm # perform operation
fsub.d f20, f28, f17, rne # perform operation
fsub.d f20, f28, f17, rtz # perform operation
fsub.d f20, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x13, 0xefc3f5ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fsub.d f13, f2, f19, dyn # perform operation
fsub.d f13, f2, f19, rdn # perform operation
fsub.d f13, f2, f19, rmm # perform operation
fsub.d f13, f2, f19, rne # perform operation
fsub.d f13, f2, f19, rtz # perform operation
fsub.d f13, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x27, 0xc84a5ff5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fsub.d f27, f21, f14, dyn # perform operation
fsub.d f27, f21, f14, rdn # perform operation
fsub.d f27, f21, f14, rmm # perform operation
fsub.d f27, f21, f14, rne # perform operation
fsub.d f27, f21, f14, rtz # perform operation
fsub.d f27, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x6, 0x16ce3c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fsub.d f6, f12, f23, dyn # perform operation
fsub.d f6, f12, f23, rdn # perform operation
fsub.d f6, f12, f23, rmm # perform operation
fsub.d f6, f12, f23, rne # perform operation
fsub.d f6, f12, f23, rtz # perform operation
fsub.d f6, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x22, 0xd09e85d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fsub.d f22, f26, f17, dyn # perform operation
fsub.d f22, f26, f17, rdn # perform operation
fsub.d f22, f26, f17, rmm # perform operation
fsub.d f22, f26, f17, rne # perform operation
fsub.d f22, f26, f17, rtz # perform operation
fsub.d f22, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x18, 0xde3a7e6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fsub.d f18, f20, f23, dyn # perform operation
fsub.d f18, f20, f23, rdn # perform operation
fsub.d f18, f20, f23, rmm # perform operation
fsub.d f18, f20, f23, rne # perform operation
fsub.d f18, f20, f23, rtz # perform operation
fsub.d f18, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x15, 0x69d95e8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fsub.d f15, f5, f24, dyn # perform operation
fsub.d f15, f5, f24, rdn # perform operation
fsub.d f15, f5, f24, rmm # perform operation
fsub.d f15, f5, f24, rne # perform operation
fsub.d f15, f5, f24, rtz # perform operation
fsub.d f15, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x30, 0x2fb6d9df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fsub.d f30, f31, f4, dyn # perform operation
fsub.d f30, f31, f4, rdn # perform operation
fsub.d f30, f31, f4, rmm # perform operation
fsub.d f30, f31, f4, rne # perform operation
fsub.d f30, f31, f4, rtz # perform operation
fsub.d f30, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x10, 0xf7c4d96f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fsub.d f10, f11, f1, dyn # perform operation
fsub.d f10, f11, f1, rdn # perform operation
fsub.d f10, f11, f1, rmm # perform operation
fsub.d f10, f11, f1, rne # perform operation
fsub.d f10, f11, f1, rtz # perform operation
fsub.d f10, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x23, 0xf23c1d41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fsub.d f23, f4, f25, dyn # perform operation
fsub.d f23, f4, f25, rdn # perform operation
fsub.d f23, f4, f25, rmm # perform operation
fsub.d f23, f4, f25, rne # perform operation
fsub.d f23, f4, f25, rtz # perform operation
fsub.d f23, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x9, 0x01c163d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
fsub.d f9, f21, f27, dyn # perform operation
fsub.d f9, f21, f27, rdn # perform operation
fsub.d f9, f21, f27, rmm # perform operation
fsub.d f9, f21, f27, rne # perform operation
fsub.d f9, f21, f27, rtz # perform operation
fsub.d f9, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x1, 0x299b3a1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fsub.d f1, f16, f20, dyn # perform operation
fsub.d f1, f16, f20, rdn # perform operation
fsub.d f1, f16, f20, rmm # perform operation
fsub.d f1, f16, f20, rne # perform operation
fsub.d f1, f16, f20, rtz # perform operation
fsub.d f1, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f16, f20 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xd5f17438 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc8904cde # load x3 with 32 MSBs 0x00000000c8904cde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8904cde
sw x3, 0(x2) # store x3 (0xc8904cde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c8904cde from memory into f19
li x3, 0x0225e675 # load x3 with 32 MSBs 0x000000000225e675
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000225e675
sw x3, 0(x2) # store x3 (0x0225e675) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000225e675 from memory into f11
fsub.d f0, f19, f11 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0xa991807f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9c656698 # load x3 with 32 MSBs 0x000000009c656698
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c656698
sw x3, 0(x2) # store x3 (0x9c656698) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000009c656698 from memory into f8
li x3, 0x8902f0b5 # load x3 with 32 MSBs 0x000000008902f0b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008902f0b5
sw x3, 0(x2) # store x3 (0x8902f0b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008902f0b5 from memory into f17
fsub.d f1, f8, f17 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x49a147e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3cf4db01 # load x3 with 32 MSBs 0x000000003cf4db01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cf4db01
sw x3, 0(x2) # store x3 (0x3cf4db01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003cf4db01 from memory into f28
li x3, 0x4db59e10 # load x3 with 32 MSBs 0x000000004db59e10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004db59e10
sw x3, 0(x2) # store x3 (0x4db59e10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004db59e10 from memory into f11
fsub.d f2, f28, f11 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xa3858f93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e380b74 # load x3 with 32 MSBs 0x000000009e380b74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e380b74
sw x3, 0(x2) # store x3 (0x9e380b74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009e380b74 from memory into f9
li x3, 0x75ab499d # load x3 with 32 MSBs 0x0000000075ab499d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075ab499d
sw x3, 0(x2) # store x3 (0x75ab499d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000075ab499d from memory into f27
fsub.d f3, f9, f27 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x961fa1ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa7c44ada # load x3 with 32 MSBs 0x00000000a7c44ada
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7c44ada
sw x3, 0(x2) # store x3 (0xa7c44ada) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a7c44ada from memory into f6
li x3, 0x9f2499a4 # load x3 with 32 MSBs 0x000000009f2499a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f2499a4
sw x3, 0(x2) # store x3 (0x9f2499a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009f2499a4 from memory into f29
fsub.d f4, f6, f29 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x2b5969fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x02a86005 # load x3 with 32 MSBs 0x0000000002a86005
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002a86005
sw x3, 0(x2) # store x3 (0x02a86005) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000002a86005 from memory into f12
li x3, 0x84ebc383 # load x3 with 32 MSBs 0x0000000084ebc383
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084ebc383
sw x3, 0(x2) # store x3 (0x84ebc383) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000084ebc383 from memory into f13
fsub.d f5, f12, f13 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0xf76541cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d956faf # load x3 with 32 MSBs 0x000000001d956faf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d956faf
sw x3, 0(x2) # store x3 (0x1d956faf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001d956faf from memory into f31
li x3, 0xa78f28cd # load x3 with 32 MSBs 0x00000000a78f28cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a78f28cd
sw x3, 0(x2) # store x3 (0xa78f28cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a78f28cd from memory into f18
fsub.d f6, f31, f18 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x1da61698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x752efb18 # load x3 with 32 MSBs 0x00000000752efb18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000752efb18
sw x3, 0(x2) # store x3 (0x752efb18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000752efb18 from memory into f2
li x3, 0xe7476a53 # load x3 with 32 MSBs 0x00000000e7476a53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7476a53
sw x3, 0(x2) # store x3 (0xe7476a53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e7476a53 from memory into f5
fsub.d f7, f2, f5 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x1b7f5461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7a880144 # load x3 with 32 MSBs 0x000000007a880144
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a880144
sw x3, 0(x2) # store x3 (0x7a880144) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007a880144 from memory into f11
li x3, 0x165b543d # load x3 with 32 MSBs 0x00000000165b543d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000165b543d
sw x3, 0(x2) # store x3 (0x165b543d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000165b543d from memory into f22
fsub.d f8, f11, f22 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0xb0317ad7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11e92a43 # load x3 with 32 MSBs 0x0000000011e92a43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011e92a43
sw x3, 0(x2) # store x3 (0x11e92a43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000011e92a43 from memory into f25
li x3, 0x3e7ffeaf # load x3 with 32 MSBs 0x000000003e7ffeaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e7ffeaf
sw x3, 0(x2) # store x3 (0x3e7ffeaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000003e7ffeaf from memory into f24
fsub.d f9, f25, f24 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x141cdaf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b0328c6 # load x3 with 32 MSBs 0x000000004b0328c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b0328c6
sw x3, 0(x2) # store x3 (0x4b0328c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004b0328c6 from memory into f15
li x3, 0xbc9d23fd # load x3 with 32 MSBs 0x00000000bc9d23fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc9d23fd
sw x3, 0(x2) # store x3 (0xbc9d23fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000bc9d23fd from memory into f25
fsub.d f10, f15, f25 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x98c40744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xae5b9f93 # load x3 with 32 MSBs 0x00000000ae5b9f93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae5b9f93
sw x3, 0(x2) # store x3 (0xae5b9f93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ae5b9f93 from memory into f4
li x3, 0x79e28a32 # load x3 with 32 MSBs 0x0000000079e28a32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079e28a32
sw x3, 0(x2) # store x3 (0x79e28a32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000079e28a32 from memory into f22
fsub.d f11, f4, f22 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x17bb4f6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c15adee # load x3 with 32 MSBs 0x000000002c15adee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c15adee
sw x3, 0(x2) # store x3 (0x2c15adee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002c15adee from memory into f29
li x3, 0xc9ac678b # load x3 with 32 MSBs 0x00000000c9ac678b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9ac678b
sw x3, 0(x2) # store x3 (0xc9ac678b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c9ac678b from memory into f9
fsub.d f12, f29, f9 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x3e738c51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7cf015db # load x3 with 32 MSBs 0x000000007cf015db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cf015db
sw x3, 0(x2) # store x3 (0x7cf015db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007cf015db from memory into f6
li x3, 0x88bad8a0 # load x3 with 32 MSBs 0x0000000088bad8a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088bad8a0
sw x3, 0(x2) # store x3 (0x88bad8a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000088bad8a0 from memory into f18
fsub.d f13, f6, f18 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xe7bd063e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5043b011 # load x3 with 32 MSBs 0x000000005043b011
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005043b011
sw x3, 0(x2) # store x3 (0x5043b011) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005043b011 from memory into f22
li x3, 0x3615ea1e # load x3 with 32 MSBs 0x000000003615ea1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003615ea1e
sw x3, 0(x2) # store x3 (0x3615ea1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003615ea1e from memory into f21
fsub.d f14, f22, f21 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x11a637d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe491f6d6 # load x3 with 32 MSBs 0x00000000e491f6d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e491f6d6
sw x3, 0(x2) # store x3 (0xe491f6d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e491f6d6 from memory into f1
li x3, 0x810848e4 # load x3 with 32 MSBs 0x00000000810848e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000810848e4
sw x3, 0(x2) # store x3 (0x810848e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000810848e4 from memory into f2
fsub.d f15, f1, f2 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x67d7a4a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81c96f08 # load x3 with 32 MSBs 0x0000000081c96f08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081c96f08
sw x3, 0(x2) # store x3 (0x81c96f08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000081c96f08 from memory into f8
li x3, 0xf542fb06 # load x3 with 32 MSBs 0x00000000f542fb06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f542fb06
sw x3, 0(x2) # store x3 (0xf542fb06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000f542fb06 from memory into f13
fsub.d f16, f8, f13 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x75b0d0ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60e27c76 # load x3 with 32 MSBs 0x0000000060e27c76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060e27c76
sw x3, 0(x2) # store x3 (0x60e27c76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000060e27c76 from memory into f1
li x3, 0x9e77314b # load x3 with 32 MSBs 0x000000009e77314b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e77314b
sw x3, 0(x2) # store x3 (0x9e77314b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009e77314b from memory into f24
fsub.d f17, f1, f24 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x56c34441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8420e49b # load x3 with 32 MSBs 0x000000008420e49b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008420e49b
sw x3, 0(x2) # store x3 (0x8420e49b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008420e49b from memory into f28
li x3, 0xf47b1c55 # load x3 with 32 MSBs 0x00000000f47b1c55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f47b1c55
sw x3, 0(x2) # store x3 (0xf47b1c55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f47b1c55 from memory into f7
fsub.d f18, f28, f7 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x34a725ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14af4f9f # load x3 with 32 MSBs 0x0000000014af4f9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014af4f9f
sw x3, 0(x2) # store x3 (0x14af4f9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000014af4f9f from memory into f29
li x3, 0x49cd0043 # load x3 with 32 MSBs 0x0000000049cd0043
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049cd0043
sw x3, 0(x2) # store x3 (0x49cd0043) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000049cd0043 from memory into f28
fsub.d f19, f29, f28 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0xb96d41f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc23adfa5 # load x3 with 32 MSBs 0x00000000c23adfa5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c23adfa5
sw x3, 0(x2) # store x3 (0xc23adfa5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c23adfa5 from memory into f6
li x3, 0xccfbe21e # load x3 with 32 MSBs 0x00000000ccfbe21e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ccfbe21e
sw x3, 0(x2) # store x3 (0xccfbe21e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ccfbe21e from memory into f5
fsub.d f20, f6, f5 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x5afcf2f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8781ea0 # load x3 with 32 MSBs 0x00000000e8781ea0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8781ea0
sw x3, 0(x2) # store x3 (0xe8781ea0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e8781ea0 from memory into f25
li x3, 0x50181766 # load x3 with 32 MSBs 0x0000000050181766
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050181766
sw x3, 0(x2) # store x3 (0x50181766) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000050181766 from memory into f6
fsub.d f21, f25, f6 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0xfe54e29c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8af508d # load x3 with 32 MSBs 0x00000000b8af508d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8af508d
sw x3, 0(x2) # store x3 (0xb8af508d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b8af508d from memory into f12
li x3, 0x25c70300 # load x3 with 32 MSBs 0x0000000025c70300
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025c70300
sw x3, 0(x2) # store x3 (0x25c70300) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000025c70300 from memory into f24
fsub.d f22, f12, f24 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x377532d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdaa6e6f4 # load x3 with 32 MSBs 0x00000000daa6e6f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000daa6e6f4
sw x3, 0(x2) # store x3 (0xdaa6e6f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000daa6e6f4 from memory into f17
li x3, 0xc99b014c # load x3 with 32 MSBs 0x00000000c99b014c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c99b014c
sw x3, 0(x2) # store x3 (0xc99b014c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c99b014c from memory into f1
fsub.d f23, f17, f1 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x67961ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5e8a21f5 # load x3 with 32 MSBs 0x000000005e8a21f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e8a21f5
sw x3, 0(x2) # store x3 (0x5e8a21f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000005e8a21f5 from memory into f15
li x3, 0x75397d73 # load x3 with 32 MSBs 0x0000000075397d73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075397d73
sw x3, 0(x2) # store x3 (0x75397d73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000075397d73 from memory into f16
fsub.d f24, f15, f16 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xe2a2387d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa527434 # load x3 with 32 MSBs 0x00000000aa527434
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa527434
sw x3, 0(x2) # store x3 (0xaa527434) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000aa527434 from memory into f23
li x3, 0x651b4fbf # load x3 with 32 MSBs 0x00000000651b4fbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000651b4fbf
sw x3, 0(x2) # store x3 (0x651b4fbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000651b4fbf from memory into f3
fsub.d f25, f23, f3 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x70982723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0bcfb9ec # load x3 with 32 MSBs 0x000000000bcfb9ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000bcfb9ec
sw x3, 0(x2) # store x3 (0x0bcfb9ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000bcfb9ec from memory into f19
li x3, 0xcab912ba # load x3 with 32 MSBs 0x00000000cab912ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cab912ba
sw x3, 0(x2) # store x3 (0xcab912ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cab912ba from memory into f29
fsub.d f26, f19, f29 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xb356d014 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d5d6888 # load x3 with 32 MSBs 0x000000004d5d6888
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d5d6888
sw x3, 0(x2) # store x3 (0x4d5d6888) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004d5d6888 from memory into f23
li x3, 0x747e6448 # load x3 with 32 MSBs 0x00000000747e6448
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000747e6448
sw x3, 0(x2) # store x3 (0x747e6448) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000747e6448 from memory into f19
fsub.d f27, f23, f19 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x2ec09554 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa56f6000 # load x3 with 32 MSBs 0x00000000a56f6000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a56f6000
sw x3, 0(x2) # store x3 (0xa56f6000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000a56f6000 from memory into f12
li x3, 0x5fe79441 # load x3 with 32 MSBs 0x000000005fe79441
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fe79441
sw x3, 0(x2) # store x3 (0x5fe79441) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005fe79441 from memory into f30
fsub.d f28, f12, f30 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x7edcd028 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03b3db70 # load x3 with 32 MSBs 0x0000000003b3db70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003b3db70
sw x3, 0(x2) # store x3 (0x03b3db70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000003b3db70 from memory into f22
li x3, 0x28f984d0 # load x3 with 32 MSBs 0x0000000028f984d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028f984d0
sw x3, 0(x2) # store x3 (0x28f984d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000028f984d0 from memory into f20
fsub.d f29, f22, f20 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x5d48518e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x59e9db57 # load x3 with 32 MSBs 0x0000000059e9db57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059e9db57
sw x3, 0(x2) # store x3 (0x59e9db57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000059e9db57 from memory into f5
li x3, 0xbfc34f48 # load x3 with 32 MSBs 0x00000000bfc34f48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfc34f48
sw x3, 0(x2) # store x3 (0xbfc34f48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000bfc34f48 from memory into f21
fsub.d f30, f5, f21 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xa72bd58b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa88cc69e # load x3 with 32 MSBs 0x00000000a88cc69e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a88cc69e
sw x3, 0(x2) # store x3 (0xa88cc69e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a88cc69e from memory into f29
li x3, 0x901ffed1 # load x3 with 32 MSBs 0x00000000901ffed1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000901ffed1
sw x3, 0(x2) # store x3 (0x901ffed1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000901ffed1 from memory into f25
fsub.d f31, f29, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x21, 0x62a77ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6fdcc1fb # load x3 with 32 MSBs 0x000000006fdcc1fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fdcc1fb
sw x3, 0(x2) # store x3 (0x6fdcc1fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000006fdcc1fb from memory into f0
li x3, 0x68f16db7 # load x3 with 32 MSBs 0x0000000068f16db7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068f16db7
sw x3, 0(x2) # store x3 (0x68f16db7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000068f16db7 from memory into f30
fsub.d f21, f0, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x13, 0x1a69a64d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x35f861b8 # load x3 with 32 MSBs 0x0000000035f861b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035f861b8
sw x3, 0(x2) # store x3 (0x35f861b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000035f861b8 from memory into f1
li x3, 0x1724c716 # load x3 with 32 MSBs 0x000000001724c716
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001724c716
sw x3, 0(x2) # store x3 (0x1724c716) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001724c716 from memory into f25
fsub.d f13, f1, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x18, 0xbe5d91a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9dc7fde0 # load x3 with 32 MSBs 0x000000009dc7fde0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009dc7fde0
sw x3, 0(x2) # store x3 (0x9dc7fde0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009dc7fde0 from memory into f2
li x3, 0xd37765b1 # load x3 with 32 MSBs 0x00000000d37765b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d37765b1
sw x3, 0(x2) # store x3 (0xd37765b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d37765b1 from memory into f5
fsub.d f18, f2, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x27, 0x39f8d6b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe25e004d # load x3 with 32 MSBs 0x00000000e25e004d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e25e004d
sw x3, 0(x2) # store x3 (0xe25e004d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e25e004d from memory into f3
li x3, 0xd0359547 # load x3 with 32 MSBs 0x00000000d0359547
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0359547
sw x3, 0(x2) # store x3 (0xd0359547) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d0359547 from memory into f7
fsub.d f27, f3, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x24, 0xb15cf64d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x777b7463 # load x3 with 32 MSBs 0x00000000777b7463
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000777b7463
sw x3, 0(x2) # store x3 (0x777b7463) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000777b7463 from memory into f4
li x3, 0x008b83ca # load x3 with 32 MSBs 0x00000000008b83ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000008b83ca
sw x3, 0(x2) # store x3 (0x008b83ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000008b83ca from memory into f22
fsub.d f24, f4, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x8, 0x5ce0cb20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x328d5f4e # load x3 with 32 MSBs 0x00000000328d5f4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000328d5f4e
sw x3, 0(x2) # store x3 (0x328d5f4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000328d5f4e from memory into f5
li x3, 0xdaab949e # load x3 with 32 MSBs 0x00000000daab949e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000daab949e
sw x3, 0(x2) # store x3 (0xdaab949e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000daab949e from memory into f23
fsub.d f8, f5, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x19, 0xfc8c6227 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x08ba1e7d # load x3 with 32 MSBs 0x0000000008ba1e7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008ba1e7d
sw x3, 0(x2) # store x3 (0x08ba1e7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000008ba1e7d from memory into f6
li x3, 0xa0adf5e1 # load x3 with 32 MSBs 0x00000000a0adf5e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0adf5e1
sw x3, 0(x2) # store x3 (0xa0adf5e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a0adf5e1 from memory into f28
fsub.d f19, f6, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x16, 0x5044de6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd8b79d57 # load x3 with 32 MSBs 0x00000000d8b79d57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8b79d57
sw x3, 0(x2) # store x3 (0xd8b79d57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d8b79d57 from memory into f7
li x3, 0x8235ca04 # load x3 with 32 MSBs 0x000000008235ca04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008235ca04
sw x3, 0(x2) # store x3 (0x8235ca04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008235ca04 from memory into f5
fsub.d f16, f7, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x28, 0x74cc952d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6079dbfe # load x3 with 32 MSBs 0x000000006079dbfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006079dbfe
sw x3, 0(x2) # store x3 (0x6079dbfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006079dbfe from memory into f8
li x3, 0xad2ae1df # load x3 with 32 MSBs 0x00000000ad2ae1df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad2ae1df
sw x3, 0(x2) # store x3 (0xad2ae1df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ad2ae1df from memory into f7
fsub.d f28, f8, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x7, 0xae1ae736 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdfc7c800 # load x3 with 32 MSBs 0x00000000dfc7c800
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dfc7c800
sw x3, 0(x2) # store x3 (0xdfc7c800) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000dfc7c800 from memory into f9
li x3, 0x42576019 # load x3 with 32 MSBs 0x0000000042576019
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042576019
sw x3, 0(x2) # store x3 (0x42576019) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000042576019 from memory into f31
fsub.d f7, f9, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x26, 0x079f31eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x642be172 # load x3 with 32 MSBs 0x00000000642be172
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000642be172
sw x3, 0(x2) # store x3 (0x642be172) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000642be172 from memory into f10
li x3, 0x6ea104be # load x3 with 32 MSBs 0x000000006ea104be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ea104be
sw x3, 0(x2) # store x3 (0x6ea104be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000006ea104be from memory into f21
fsub.d f26, f10, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x4, 0xc658a2e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x338197c0 # load x3 with 32 MSBs 0x00000000338197c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000338197c0
sw x3, 0(x2) # store x3 (0x338197c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000338197c0 from memory into f11
li x3, 0x9cadbf82 # load x3 with 32 MSBs 0x000000009cadbf82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cadbf82
sw x3, 0(x2) # store x3 (0x9cadbf82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009cadbf82 from memory into f10
fsub.d f4, f11, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x9, 0x63268f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaf9a3be4 # load x3 with 32 MSBs 0x00000000af9a3be4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af9a3be4
sw x3, 0(x2) # store x3 (0xaf9a3be4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000af9a3be4 from memory into f12
li x3, 0xdc777890 # load x3 with 32 MSBs 0x00000000dc777890
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc777890
sw x3, 0(x2) # store x3 (0xdc777890) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000dc777890 from memory into f31
fsub.d f9, f12, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x30, 0x371e1ddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x123e842c # load x3 with 32 MSBs 0x00000000123e842c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000123e842c
sw x3, 0(x2) # store x3 (0x123e842c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000123e842c from memory into f13
li x3, 0x694a0864 # load x3 with 32 MSBs 0x00000000694a0864
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000694a0864
sw x3, 0(x2) # store x3 (0x694a0864) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000694a0864 from memory into f18
fsub.d f30, f13, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x21, 0xa745cb64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ae50ac3 # load x3 with 32 MSBs 0x000000006ae50ac3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ae50ac3
sw x3, 0(x2) # store x3 (0x6ae50ac3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006ae50ac3 from memory into f14
li x3, 0x9619b3ef # load x3 with 32 MSBs 0x000000009619b3ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009619b3ef
sw x3, 0(x2) # store x3 (0x9619b3ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009619b3ef from memory into f17
fsub.d f21, f14, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x27, 0x858da52f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf87cc59f # load x3 with 32 MSBs 0x00000000f87cc59f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f87cc59f
sw x3, 0(x2) # store x3 (0xf87cc59f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f87cc59f from memory into f15
li x3, 0x477465a9 # load x3 with 32 MSBs 0x00000000477465a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000477465a9
sw x3, 0(x2) # store x3 (0x477465a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000477465a9 from memory into f5
fsub.d f27, f15, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x3, 0x36b93a82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a58956f # load x3 with 32 MSBs 0x000000003a58956f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a58956f
sw x3, 0(x2) # store x3 (0x3a58956f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003a58956f from memory into f16
li x3, 0x45fca356 # load x3 with 32 MSBs 0x0000000045fca356
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045fca356
sw x3, 0(x2) # store x3 (0x45fca356) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000045fca356 from memory into f30
fsub.d f3, f16, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x1, 0x144896dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48b498e0 # load x3 with 32 MSBs 0x0000000048b498e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048b498e0
sw x3, 0(x2) # store x3 (0x48b498e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000048b498e0 from memory into f17
li x3, 0xb1ef0460 # load x3 with 32 MSBs 0x00000000b1ef0460
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1ef0460
sw x3, 0(x2) # store x3 (0xb1ef0460) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b1ef0460 from memory into f24
fsub.d f1, f17, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x25, 0x63929ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7305e33 # load x3 with 32 MSBs 0x00000000b7305e33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7305e33
sw x3, 0(x2) # store x3 (0xb7305e33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b7305e33 from memory into f18
li x3, 0x4659e58e # load x3 with 32 MSBs 0x000000004659e58e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004659e58e
sw x3, 0(x2) # store x3 (0x4659e58e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000004659e58e from memory into f30
fsub.d f25, f18, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x6, 0xb5a45a4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc3dd6bcd # load x3 with 32 MSBs 0x00000000c3dd6bcd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3dd6bcd
sw x3, 0(x2) # store x3 (0xc3dd6bcd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c3dd6bcd from memory into f19
li x3, 0x4be0fedd # load x3 with 32 MSBs 0x000000004be0fedd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004be0fedd
sw x3, 0(x2) # store x3 (0x4be0fedd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004be0fedd from memory into f13
fsub.d f6, f19, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x31, 0x4dcba218 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2943bcb6 # load x3 with 32 MSBs 0x000000002943bcb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002943bcb6
sw x3, 0(x2) # store x3 (0x2943bcb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000002943bcb6 from memory into f20
li x3, 0x4313dddd # load x3 with 32 MSBs 0x000000004313dddd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004313dddd
sw x3, 0(x2) # store x3 (0x4313dddd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000004313dddd from memory into f12
fsub.d f31, f20, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x13, 0xef289a38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7180b89 # load x3 with 32 MSBs 0x00000000d7180b89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7180b89
sw x3, 0(x2) # store x3 (0xd7180b89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d7180b89 from memory into f21
li x3, 0x14d04109 # load x3 with 32 MSBs 0x0000000014d04109
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014d04109
sw x3, 0(x2) # store x3 (0x14d04109) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000014d04109 from memory into f27
fsub.d f13, f21, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x4, 0xb954bb9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7982a5d7 # load x3 with 32 MSBs 0x000000007982a5d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007982a5d7
sw x3, 0(x2) # store x3 (0x7982a5d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000007982a5d7 from memory into f22
li x3, 0xed5a67c7 # load x3 with 32 MSBs 0x00000000ed5a67c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed5a67c7
sw x3, 0(x2) # store x3 (0xed5a67c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ed5a67c7 from memory into f18
fsub.d f4, f22, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x14, 0x305068c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb72c6525 # load x3 with 32 MSBs 0x00000000b72c6525
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b72c6525
sw x3, 0(x2) # store x3 (0xb72c6525) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b72c6525 from memory into f23
li x3, 0xe2c20fab # load x3 with 32 MSBs 0x00000000e2c20fab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2c20fab
sw x3, 0(x2) # store x3 (0xe2c20fab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e2c20fab from memory into f12
fsub.d f14, f23, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x9, 0xb03a0efd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb489760d # load x3 with 32 MSBs 0x00000000b489760d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b489760d
sw x3, 0(x2) # store x3 (0xb489760d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b489760d from memory into f24
li x3, 0xc922b47b # load x3 with 32 MSBs 0x00000000c922b47b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c922b47b
sw x3, 0(x2) # store x3 (0xc922b47b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c922b47b from memory into f5
fsub.d f9, f24, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x4, 0x5c68b282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ca6dfb2 # load x3 with 32 MSBs 0x000000006ca6dfb2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ca6dfb2
sw x3, 0(x2) # store x3 (0x6ca6dfb2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006ca6dfb2 from memory into f25
li x3, 0x63a240c3 # load x3 with 32 MSBs 0x0000000063a240c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063a240c3
sw x3, 0(x2) # store x3 (0x63a240c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000063a240c3 from memory into f7
fsub.d f4, f25, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x26, 0xb4a18e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x68588ad6 # load x3 with 32 MSBs 0x0000000068588ad6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068588ad6
sw x3, 0(x2) # store x3 (0x68588ad6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000068588ad6 from memory into f26
li x3, 0x7c9f741e # load x3 with 32 MSBs 0x000000007c9f741e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c9f741e
sw x3, 0(x2) # store x3 (0x7c9f741e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000007c9f741e from memory into f14
fsub.d f26, f26, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x13, 0x3bb3bfa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4be96585 # load x3 with 32 MSBs 0x000000004be96585
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004be96585
sw x3, 0(x2) # store x3 (0x4be96585) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000004be96585 from memory into f27
li x3, 0x52294b1e # load x3 with 32 MSBs 0x0000000052294b1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052294b1e
sw x3, 0(x2) # store x3 (0x52294b1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000052294b1e from memory into f26
fsub.d f13, f27, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x10, 0x21a3304e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15eee331 # load x3 with 32 MSBs 0x0000000015eee331
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015eee331
sw x3, 0(x2) # store x3 (0x15eee331) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000015eee331 from memory into f28
li x3, 0xb765cc07 # load x3 with 32 MSBs 0x00000000b765cc07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b765cc07
sw x3, 0(x2) # store x3 (0xb765cc07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b765cc07 from memory into f5
fsub.d f10, f28, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x1, 0x72a2f1ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75d00f7f # load x3 with 32 MSBs 0x0000000075d00f7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075d00f7f
sw x3, 0(x2) # store x3 (0x75d00f7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000075d00f7f from memory into f29
li x3, 0xc74e6fb3 # load x3 with 32 MSBs 0x00000000c74e6fb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c74e6fb3
sw x3, 0(x2) # store x3 (0xc74e6fb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c74e6fb3 from memory into f8
fsub.d f1, f29, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x20, 0xeb652ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a1f76af # load x3 with 32 MSBs 0x000000009a1f76af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a1f76af
sw x3, 0(x2) # store x3 (0x9a1f76af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009a1f76af from memory into f30
li x3, 0xc2dbccf8 # load x3 with 32 MSBs 0x00000000c2dbccf8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2dbccf8
sw x3, 0(x2) # store x3 (0xc2dbccf8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000c2dbccf8 from memory into f7
fsub.d f20, f30, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x16, 0xa506dc66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a4b7685 # load x3 with 32 MSBs 0x000000006a4b7685
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a4b7685
sw x3, 0(x2) # store x3 (0x6a4b7685) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006a4b7685 from memory into f31
li x3, 0xeb98b022 # load x3 with 32 MSBs 0x00000000eb98b022
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb98b022
sw x3, 0(x2) # store x3 (0xeb98b022) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000eb98b022 from memory into f7
fsub.d f16, f31, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x18, 0xc21b887b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6bfeaa9f # load x3 with 32 MSBs 0x000000006bfeaa9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006bfeaa9f
sw x3, 0(x2) # store x3 (0x6bfeaa9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006bfeaa9f from memory into f31
li x3, 0xa9f726cd # load x3 with 32 MSBs 0x00000000a9f726cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9f726cd
sw x3, 0(x2) # store x3 (0xa9f726cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000a9f726cd from memory into f0
fsub.d f18, f31, f0 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x27, 0xba08f4c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48c8099d # load x3 with 32 MSBs 0x0000000048c8099d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048c8099d
sw x3, 0(x2) # store x3 (0x48c8099d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000048c8099d from memory into f10
li x3, 0x9b487401 # load x3 with 32 MSBs 0x000000009b487401
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b487401
sw x3, 0(x2) # store x3 (0x9b487401) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009b487401 from memory into f1
fsub.d f27, f10, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x14, 0x4f1f8563 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x90325ee5 # load x3 with 32 MSBs 0x0000000090325ee5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090325ee5
sw x3, 0(x2) # store x3 (0x90325ee5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000090325ee5 from memory into f17
li x3, 0x477b5ff5 # load x3 with 32 MSBs 0x00000000477b5ff5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000477b5ff5
sw x3, 0(x2) # store x3 (0x477b5ff5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000477b5ff5 from memory into f2
fsub.d f14, f17, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x7, 0x91c62ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0d4b1bd # load x3 with 32 MSBs 0x00000000f0d4b1bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0d4b1bd
sw x3, 0(x2) # store x3 (0xf0d4b1bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f0d4b1bd from memory into f5
li x3, 0x48d64acb # load x3 with 32 MSBs 0x0000000048d64acb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048d64acb
sw x3, 0(x2) # store x3 (0x48d64acb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000048d64acb from memory into f3
fsub.d f7, f5, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x31, 0x04fdc3da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2e6e09cf # load x3 with 32 MSBs 0x000000002e6e09cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e6e09cf
sw x3, 0(x2) # store x3 (0x2e6e09cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000002e6e09cf from memory into f15
li x3, 0xcf1637e5 # load x3 with 32 MSBs 0x00000000cf1637e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf1637e5
sw x3, 0(x2) # store x3 (0xcf1637e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000cf1637e5 from memory into f4
fsub.d f31, f15, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x10, 0x94bd5fd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0888747d # load x3 with 32 MSBs 0x000000000888747d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000888747d
sw x3, 0(x2) # store x3 (0x0888747d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000000888747d from memory into f15
li x3, 0x24c7243d # load x3 with 32 MSBs 0x0000000024c7243d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024c7243d
sw x3, 0(x2) # store x3 (0x24c7243d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000024c7243d from memory into f5
fsub.d f10, f15, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x15, 0x0c5d1d63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd14c3331 # load x3 with 32 MSBs 0x00000000d14c3331
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d14c3331
sw x3, 0(x2) # store x3 (0xd14c3331) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d14c3331 from memory into f29
li x3, 0x072ede24 # load x3 with 32 MSBs 0x00000000072ede24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000072ede24
sw x3, 0(x2) # store x3 (0x072ede24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000072ede24 from memory into f6
fsub.d f15, f29, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x12, 0x2c758b96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4bf2d5ad # load x3 with 32 MSBs 0x000000004bf2d5ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bf2d5ad
sw x3, 0(x2) # store x3 (0x4bf2d5ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004bf2d5ad from memory into f18
li x3, 0x8f197045 # load x3 with 32 MSBs 0x000000008f197045
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f197045
sw x3, 0(x2) # store x3 (0x8f197045) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008f197045 from memory into f7
fsub.d f12, f18, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x23, 0x4ea8fb90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x064799df # load x3 with 32 MSBs 0x00000000064799df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000064799df
sw x3, 0(x2) # store x3 (0x064799df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000064799df from memory into f29
li x3, 0x1ec147d9 # load x3 with 32 MSBs 0x000000001ec147d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ec147d9
sw x3, 0(x2) # store x3 (0x1ec147d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001ec147d9 from memory into f8
fsub.d f23, f29, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x11, 0xfba0faaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98a34170 # load x3 with 32 MSBs 0x0000000098a34170
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098a34170
sw x3, 0(x2) # store x3 (0x98a34170) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000098a34170 from memory into f10
li x3, 0x86a23e7f # load x3 with 32 MSBs 0x0000000086a23e7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086a23e7f
sw x3, 0(x2) # store x3 (0x86a23e7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000086a23e7f from memory into f9
fsub.d f11, f10, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x21, 0xa29e1562 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcfac8003 # load x3 with 32 MSBs 0x00000000cfac8003
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfac8003
sw x3, 0(x2) # store x3 (0xcfac8003) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000cfac8003 from memory into f5
li x3, 0xc2b27d63 # load x3 with 32 MSBs 0x00000000c2b27d63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2b27d63
sw x3, 0(x2) # store x3 (0xc2b27d63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c2b27d63 from memory into f10
fsub.d f21, f5, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x20, 0xb0850d2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d34d1e6 # load x3 with 32 MSBs 0x000000000d34d1e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d34d1e6
sw x3, 0(x2) # store x3 (0x0d34d1e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000d34d1e6 from memory into f22
li x3, 0xcf14cffd # load x3 with 32 MSBs 0x00000000cf14cffd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf14cffd
sw x3, 0(x2) # store x3 (0xcf14cffd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000cf14cffd from memory into f11
fsub.d f20, f22, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x28, 0xc3a64d7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc59d2b7 # load x3 with 32 MSBs 0x00000000fc59d2b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc59d2b7
sw x3, 0(x2) # store x3 (0xfc59d2b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fc59d2b7 from memory into f10
li x3, 0xf27562d9 # load x3 with 32 MSBs 0x00000000f27562d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f27562d9
sw x3, 0(x2) # store x3 (0xf27562d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f27562d9 from memory into f12
fsub.d f28, f10, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x29, 0x2cd073b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe5ae06aa # load x3 with 32 MSBs 0x00000000e5ae06aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5ae06aa
sw x3, 0(x2) # store x3 (0xe5ae06aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e5ae06aa from memory into f3
li x3, 0xf2bfead4 # load x3 with 32 MSBs 0x00000000f2bfead4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2bfead4
sw x3, 0(x2) # store x3 (0xf2bfead4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000f2bfead4 from memory into f13
fsub.d f29, f3, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x7, 0x5549e76a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x132f4392 # load x3 with 32 MSBs 0x00000000132f4392
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000132f4392
sw x3, 0(x2) # store x3 (0x132f4392) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000132f4392 from memory into f21
li x3, 0xf7433ce8 # load x3 with 32 MSBs 0x00000000f7433ce8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7433ce8
sw x3, 0(x2) # store x3 (0xf7433ce8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f7433ce8 from memory into f14
fsub.d f7, f21, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x18, 0xeac6ef7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16f8328e # load x3 with 32 MSBs 0x0000000016f8328e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016f8328e
sw x3, 0(x2) # store x3 (0x16f8328e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000016f8328e from memory into f17
li x3, 0x4963b17a # load x3 with 32 MSBs 0x000000004963b17a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004963b17a
sw x3, 0(x2) # store x3 (0x4963b17a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004963b17a from memory into f15
fsub.d f18, f17, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x10, 0xf6289d1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x790a3ec9 # load x3 with 32 MSBs 0x00000000790a3ec9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000790a3ec9
sw x3, 0(x2) # store x3 (0x790a3ec9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000790a3ec9 from memory into f15
li x3, 0xda43c4e1 # load x3 with 32 MSBs 0x00000000da43c4e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da43c4e1
sw x3, 0(x2) # store x3 (0xda43c4e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000da43c4e1 from memory into f16
fsub.d f10, f15, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x9, 0x3433624a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5755584f # load x3 with 32 MSBs 0x000000005755584f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005755584f
sw x3, 0(x2) # store x3 (0x5755584f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005755584f from memory into f6
li x3, 0x5d191854 # load x3 with 32 MSBs 0x000000005d191854
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d191854
sw x3, 0(x2) # store x3 (0x5d191854) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005d191854 from memory into f17
fsub.d f9, f6, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x6, 0xce3c9465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x368d6877 # load x3 with 32 MSBs 0x00000000368d6877
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000368d6877
sw x3, 0(x2) # store x3 (0x368d6877) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000368d6877 from memory into f28
li x3, 0x78962225 # load x3 with 32 MSBs 0x0000000078962225
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078962225
sw x3, 0(x2) # store x3 (0x78962225) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000078962225 from memory into f18
fsub.d f6, f28, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x2, 0x9c893fd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b7c6df2 # load x3 with 32 MSBs 0x000000002b7c6df2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b7c6df2
sw x3, 0(x2) # store x3 (0x2b7c6df2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002b7c6df2 from memory into f17
li x3, 0x64f79183 # load x3 with 32 MSBs 0x0000000064f79183
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064f79183
sw x3, 0(x2) # store x3 (0x64f79183) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000064f79183 from memory into f19
fsub.d f2, f17, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x12, 0x0ff2505e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x704e3a5b # load x3 with 32 MSBs 0x00000000704e3a5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000704e3a5b
sw x3, 0(x2) # store x3 (0x704e3a5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000704e3a5b from memory into f9
li x3, 0xc30f28a2 # load x3 with 32 MSBs 0x00000000c30f28a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c30f28a2
sw x3, 0(x2) # store x3 (0xc30f28a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c30f28a2 from memory into f20
fsub.d f12, f9, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x4, 0x642d3584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa9fb76f # load x3 with 32 MSBs 0x00000000aa9fb76f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa9fb76f
sw x3, 0(x2) # store x3 (0xaa9fb76f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000aa9fb76f from memory into f15
li x3, 0xb3403c48 # load x3 with 32 MSBs 0x00000000b3403c48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3403c48
sw x3, 0(x2) # store x3 (0xb3403c48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b3403c48 from memory into f21
fsub.d f4, f15, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x18, 0x14db0f26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4acae4ad # load x3 with 32 MSBs 0x000000004acae4ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004acae4ad
sw x3, 0(x2) # store x3 (0x4acae4ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004acae4ad from memory into f13
li x3, 0xf228d5df # load x3 with 32 MSBs 0x00000000f228d5df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f228d5df
sw x3, 0(x2) # store x3 (0xf228d5df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f228d5df from memory into f22
fsub.d f18, f13, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x5, 0xc969c822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x324d9848 # load x3 with 32 MSBs 0x00000000324d9848
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000324d9848
sw x3, 0(x2) # store x3 (0x324d9848) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000324d9848 from memory into f2
li x3, 0x14d1cbbb # load x3 with 32 MSBs 0x0000000014d1cbbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014d1cbbb
sw x3, 0(x2) # store x3 (0x14d1cbbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000014d1cbbb from memory into f23
fsub.d f5, f2, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x4, 0x7fda6b6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe88d6319 # load x3 with 32 MSBs 0x00000000e88d6319
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e88d6319
sw x3, 0(x2) # store x3 (0xe88d6319) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e88d6319 from memory into f10
li x3, 0xe1c28d82 # load x3 with 32 MSBs 0x00000000e1c28d82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1c28d82
sw x3, 0(x2) # store x3 (0xe1c28d82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e1c28d82 from memory into f24
fsub.d f4, f10, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x31, 0x29f4f921 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x611162fe # load x3 with 32 MSBs 0x00000000611162fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000611162fe
sw x3, 0(x2) # store x3 (0x611162fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000611162fe from memory into f13
li x3, 0x73241f6c # load x3 with 32 MSBs 0x0000000073241f6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073241f6c
sw x3, 0(x2) # store x3 (0x73241f6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000073241f6c from memory into f25
fsub.d f31, f13, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x20, 0xfd0e46d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d39f133 # load x3 with 32 MSBs 0x000000001d39f133
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d39f133
sw x3, 0(x2) # store x3 (0x1d39f133) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000001d39f133 from memory into f23
li x3, 0x9092bb98 # load x3 with 32 MSBs 0x000000009092bb98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009092bb98
sw x3, 0(x2) # store x3 (0x9092bb98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009092bb98 from memory into f26
fsub.d f20, f23, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x19, 0x42d9bcc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x37a2642e # load x3 with 32 MSBs 0x0000000037a2642e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037a2642e
sw x3, 0(x2) # store x3 (0x37a2642e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000037a2642e from memory into f23
li x3, 0xbb9ea259 # load x3 with 32 MSBs 0x00000000bb9ea259
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb9ea259
sw x3, 0(x2) # store x3 (0xbb9ea259) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000bb9ea259 from memory into f27
fsub.d f19, f23, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x21, 0x1aa940ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31abcb45 # load x3 with 32 MSBs 0x0000000031abcb45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031abcb45
sw x3, 0(x2) # store x3 (0x31abcb45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000031abcb45 from memory into f1
li x3, 0x8a48057b # load x3 with 32 MSBs 0x000000008a48057b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a48057b
sw x3, 0(x2) # store x3 (0x8a48057b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008a48057b from memory into f28
fsub.d f21, f1, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x27, 0x5591ff6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc644f02 # load x3 with 32 MSBs 0x00000000cc644f02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc644f02
sw x3, 0(x2) # store x3 (0xcc644f02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000cc644f02 from memory into f16
li x3, 0x040529ad # load x3 with 32 MSBs 0x00000000040529ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000040529ad
sw x3, 0(x2) # store x3 (0x040529ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000040529ad from memory into f29
fsub.d f27, f16, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x4, 0x381ba59b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75355f45 # load x3 with 32 MSBs 0x0000000075355f45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075355f45
sw x3, 0(x2) # store x3 (0x75355f45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000075355f45 from memory into f27
li x3, 0x4ec067e3 # load x3 with 32 MSBs 0x000000004ec067e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ec067e3
sw x3, 0(x2) # store x3 (0x4ec067e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000004ec067e3 from memory into f30
fsub.d f4, f27, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x24, 0x80c814b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c6cef68 # load x3 with 32 MSBs 0x000000002c6cef68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c6cef68
sw x3, 0(x2) # store x3 (0x2c6cef68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002c6cef68 from memory into f25
li x3, 0x8180ec85 # load x3 with 32 MSBs 0x000000008180ec85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008180ec85
sw x3, 0(x2) # store x3 (0x8180ec85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008180ec85 from memory into f31
fsub.d f24, f25, f31 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
