///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/D//WALLY-COV-fmadd.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.891139
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x544c5d9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d68fa20 # load x3 with 32 MSBs 0x000000007d68fa20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d68fa20
sw x3, 0(x2) # store x3 (0x7d68fa20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000007d68fa20 from memory into f0
li x3, 0xe0fd816d # load x3 with 32 MSBs 0x00000000e0fd816d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0fd816d
sw x3, 0(x2) # store x3 (0xe0fd816d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e0fd816d from memory into f3
li x3, 0x675b7920 # load x3 with 32 MSBs 0x00000000675b7920
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000675b7920
sw x3, 0(x2) # store x3 (0x675b7920) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000675b7920 from memory into f16
fmadd.d f0, f0, f3, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0xed2e690e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4dcf2e1b # load x3 with 32 MSBs 0x000000004dcf2e1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dcf2e1b
sw x3, 0(x2) # store x3 (0x4dcf2e1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004dcf2e1b from memory into f1
li x3, 0xcd261474 # load x3 with 32 MSBs 0x00000000cd261474
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd261474
sw x3, 0(x2) # store x3 (0xcd261474) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cd261474 from memory into f24
li x3, 0x85676ede # load x3 with 32 MSBs 0x0000000085676ede
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085676ede
sw x3, 0(x2) # store x3 (0x85676ede) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000085676ede from memory into f22
fmadd.d f1, f1, f24, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x4b41c572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd657cada # load x3 with 32 MSBs 0x00000000d657cada
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d657cada
sw x3, 0(x2) # store x3 (0xd657cada) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d657cada from memory into f2
li x3, 0x9bcf0515 # load x3 with 32 MSBs 0x000000009bcf0515
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bcf0515
sw x3, 0(x2) # store x3 (0x9bcf0515) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009bcf0515 from memory into f15
li x3, 0x4054f4dd # load x3 with 32 MSBs 0x000000004054f4dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004054f4dd
sw x3, 0(x2) # store x3 (0x4054f4dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004054f4dd from memory into f20
fmadd.d f2, f2, f15, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0xd8d7837b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x599bc630 # load x3 with 32 MSBs 0x00000000599bc630
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000599bc630
sw x3, 0(x2) # store x3 (0x599bc630) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000599bc630 from memory into f3
li x3, 0xc2e5359a # load x3 with 32 MSBs 0x00000000c2e5359a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2e5359a
sw x3, 0(x2) # store x3 (0xc2e5359a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c2e5359a from memory into f2
li x3, 0x2832429b # load x3 with 32 MSBs 0x000000002832429b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002832429b
sw x3, 0(x2) # store x3 (0x2832429b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002832429b from memory into f16
fmadd.d f3, f3, f2, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xb3dde604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22472526 # load x3 with 32 MSBs 0x0000000022472526
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022472526
sw x3, 0(x2) # store x3 (0x22472526) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000022472526 from memory into f4
li x3, 0xec7f27ce # load x3 with 32 MSBs 0x00000000ec7f27ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec7f27ce
sw x3, 0(x2) # store x3 (0xec7f27ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ec7f27ce from memory into f29
li x3, 0x6916f61e # load x3 with 32 MSBs 0x000000006916f61e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006916f61e
sw x3, 0(x2) # store x3 (0x6916f61e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000006916f61e from memory into f21
fmadd.d f4, f4, f29, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x2eab6b81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60735112 # load x3 with 32 MSBs 0x0000000060735112
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060735112
sw x3, 0(x2) # store x3 (0x60735112) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000060735112 from memory into f5
li x3, 0xc2fec34f # load x3 with 32 MSBs 0x00000000c2fec34f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2fec34f
sw x3, 0(x2) # store x3 (0xc2fec34f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c2fec34f from memory into f13
li x3, 0x2ddd6f6e # load x3 with 32 MSBs 0x000000002ddd6f6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ddd6f6e
sw x3, 0(x2) # store x3 (0x2ddd6f6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002ddd6f6e from memory into f16
fmadd.d f5, f5, f13, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x0aa23a46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x768f55ee # load x3 with 32 MSBs 0x00000000768f55ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000768f55ee
sw x3, 0(x2) # store x3 (0x768f55ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000768f55ee from memory into f6
li x3, 0x3cc33fc1 # load x3 with 32 MSBs 0x000000003cc33fc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cc33fc1
sw x3, 0(x2) # store x3 (0x3cc33fc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003cc33fc1 from memory into f30
li x3, 0x8a8e6569 # load x3 with 32 MSBs 0x000000008a8e6569
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a8e6569
sw x3, 0(x2) # store x3 (0x8a8e6569) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008a8e6569 from memory into f18
fmadd.d f6, f6, f30, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0xb56db34a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xceecd472 # load x3 with 32 MSBs 0x00000000ceecd472
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ceecd472
sw x3, 0(x2) # store x3 (0xceecd472) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ceecd472 from memory into f7
li x3, 0x8494f9aa # load x3 with 32 MSBs 0x000000008494f9aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008494f9aa
sw x3, 0(x2) # store x3 (0x8494f9aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008494f9aa from memory into f28
li x3, 0x927a6613 # load x3 with 32 MSBs 0x00000000927a6613
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000927a6613
sw x3, 0(x2) # store x3 (0x927a6613) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000927a6613 from memory into f14
fmadd.d f7, f7, f28, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x39b6ae63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc716dc0a # load x3 with 32 MSBs 0x00000000c716dc0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c716dc0a
sw x3, 0(x2) # store x3 (0xc716dc0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c716dc0a from memory into f8
li x3, 0x4164a8e6 # load x3 with 32 MSBs 0x000000004164a8e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004164a8e6
sw x3, 0(x2) # store x3 (0x4164a8e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004164a8e6 from memory into f24
li x3, 0x6769c88b # load x3 with 32 MSBs 0x000000006769c88b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006769c88b
sw x3, 0(x2) # store x3 (0x6769c88b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006769c88b from memory into f12
fmadd.d f8, f8, f24, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x74e67a59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87f53185 # load x3 with 32 MSBs 0x0000000087f53185
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087f53185
sw x3, 0(x2) # store x3 (0x87f53185) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000087f53185 from memory into f9
li x3, 0x79fb31c5 # load x3 with 32 MSBs 0x0000000079fb31c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079fb31c5
sw x3, 0(x2) # store x3 (0x79fb31c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000079fb31c5 from memory into f21
li x3, 0x366c6cac # load x3 with 32 MSBs 0x00000000366c6cac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000366c6cac
sw x3, 0(x2) # store x3 (0x366c6cac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000366c6cac from memory into f2
fmadd.d f9, f9, f21, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x65ad10fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0c7de02e # load x3 with 32 MSBs 0x000000000c7de02e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c7de02e
sw x3, 0(x2) # store x3 (0x0c7de02e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000000c7de02e from memory into f10
li x3, 0x95f70b4a # load x3 with 32 MSBs 0x0000000095f70b4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095f70b4a
sw x3, 0(x2) # store x3 (0x95f70b4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000095f70b4a from memory into f23
li x3, 0x5d173ec1 # load x3 with 32 MSBs 0x000000005d173ec1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d173ec1
sw x3, 0(x2) # store x3 (0x5d173ec1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005d173ec1 from memory into f25
fmadd.d f10, f10, f23, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x48822278 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7458eb6 # load x3 with 32 MSBs 0x00000000c7458eb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7458eb6
sw x3, 0(x2) # store x3 (0xc7458eb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c7458eb6 from memory into f11
li x3, 0x756579bb # load x3 with 32 MSBs 0x00000000756579bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000756579bb
sw x3, 0(x2) # store x3 (0x756579bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000756579bb from memory into f29
li x3, 0xec45c79d # load x3 with 32 MSBs 0x00000000ec45c79d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec45c79d
sw x3, 0(x2) # store x3 (0xec45c79d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ec45c79d from memory into f15
fmadd.d f11, f11, f29, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x36b11d69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fb20071 # load x3 with 32 MSBs 0x000000003fb20071
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003fb20071
sw x3, 0(x2) # store x3 (0x3fb20071) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003fb20071 from memory into f12
li x3, 0x285f39bf # load x3 with 32 MSBs 0x00000000285f39bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000285f39bf
sw x3, 0(x2) # store x3 (0x285f39bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000285f39bf from memory into f19
li x3, 0xc35593c2 # load x3 with 32 MSBs 0x00000000c35593c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c35593c2
sw x3, 0(x2) # store x3 (0xc35593c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c35593c2 from memory into f13
fmadd.d f12, f12, f19, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0xb37abf5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf84a2512 # load x3 with 32 MSBs 0x00000000f84a2512
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f84a2512
sw x3, 0(x2) # store x3 (0xf84a2512) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000f84a2512 from memory into f13
li x3, 0xc3288b94 # load x3 with 32 MSBs 0x00000000c3288b94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3288b94
sw x3, 0(x2) # store x3 (0xc3288b94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c3288b94 from memory into f8
li x3, 0xb2ea4929 # load x3 with 32 MSBs 0x00000000b2ea4929
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2ea4929
sw x3, 0(x2) # store x3 (0xb2ea4929) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b2ea4929 from memory into f18
fmadd.d f13, f13, f8, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x79b6b9e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4223b8ec # load x3 with 32 MSBs 0x000000004223b8ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004223b8ec
sw x3, 0(x2) # store x3 (0x4223b8ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004223b8ec from memory into f14
li x3, 0xf6eb2da1 # load x3 with 32 MSBs 0x00000000f6eb2da1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6eb2da1
sw x3, 0(x2) # store x3 (0xf6eb2da1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f6eb2da1 from memory into f19
li x3, 0xee883541 # load x3 with 32 MSBs 0x00000000ee883541
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee883541
sw x3, 0(x2) # store x3 (0xee883541) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ee883541 from memory into f31
fmadd.d f14, f14, f19, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0xfdf15f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x376c9202 # load x3 with 32 MSBs 0x00000000376c9202
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000376c9202
sw x3, 0(x2) # store x3 (0x376c9202) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000376c9202 from memory into f15
li x3, 0xf5e2e4e0 # load x3 with 32 MSBs 0x00000000f5e2e4e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5e2e4e0
sw x3, 0(x2) # store x3 (0xf5e2e4e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f5e2e4e0 from memory into f15
li x3, 0x9dd66874 # load x3 with 32 MSBs 0x000000009dd66874
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009dd66874
sw x3, 0(x2) # store x3 (0x9dd66874) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000009dd66874 from memory into f20
fmadd.d f15, f15, f15, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x50d8c5cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb0ff4f98 # load x3 with 32 MSBs 0x00000000b0ff4f98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0ff4f98
sw x3, 0(x2) # store x3 (0xb0ff4f98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b0ff4f98 from memory into f16
li x3, 0x6a84d6e3 # load x3 with 32 MSBs 0x000000006a84d6e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a84d6e3
sw x3, 0(x2) # store x3 (0x6a84d6e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006a84d6e3 from memory into f27
li x3, 0xe8422253 # load x3 with 32 MSBs 0x00000000e8422253
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8422253
sw x3, 0(x2) # store x3 (0xe8422253) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e8422253 from memory into f12
fmadd.d f16, f16, f27, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x265c75ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf619d644 # load x3 with 32 MSBs 0x00000000f619d644
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f619d644
sw x3, 0(x2) # store x3 (0xf619d644) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f619d644 from memory into f17
li x3, 0x96781cbd # load x3 with 32 MSBs 0x0000000096781cbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096781cbd
sw x3, 0(x2) # store x3 (0x96781cbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000096781cbd from memory into f24
li x3, 0x5d1da784 # load x3 with 32 MSBs 0x000000005d1da784
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d1da784
sw x3, 0(x2) # store x3 (0x5d1da784) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005d1da784 from memory into f8
fmadd.d f17, f17, f24, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x59cc03ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x36017585 # load x3 with 32 MSBs 0x0000000036017585
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000036017585
sw x3, 0(x2) # store x3 (0x36017585) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000036017585 from memory into f18
li x3, 0x058248ea # load x3 with 32 MSBs 0x00000000058248ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000058248ea
sw x3, 0(x2) # store x3 (0x058248ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000058248ea from memory into f6
li x3, 0xa3333078 # load x3 with 32 MSBs 0x00000000a3333078
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3333078
sw x3, 0(x2) # store x3 (0xa3333078) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a3333078 from memory into f14
fmadd.d f18, f18, f6, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x31f32ffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8dc6490c # load x3 with 32 MSBs 0x000000008dc6490c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008dc6490c
sw x3, 0(x2) # store x3 (0x8dc6490c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008dc6490c from memory into f19
li x3, 0xf01292d2 # load x3 with 32 MSBs 0x00000000f01292d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f01292d2
sw x3, 0(x2) # store x3 (0xf01292d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f01292d2 from memory into f19
li x3, 0xbd501f7d # load x3 with 32 MSBs 0x00000000bd501f7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd501f7d
sw x3, 0(x2) # store x3 (0xbd501f7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bd501f7d from memory into f22
fmadd.d f19, f19, f19, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x650e53b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70efbf37 # load x3 with 32 MSBs 0x0000000070efbf37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070efbf37
sw x3, 0(x2) # store x3 (0x70efbf37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000070efbf37 from memory into f20
li x3, 0x7398d228 # load x3 with 32 MSBs 0x000000007398d228
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007398d228
sw x3, 0(x2) # store x3 (0x7398d228) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007398d228 from memory into f1
li x3, 0x2a35745a # load x3 with 32 MSBs 0x000000002a35745a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a35745a
sw x3, 0(x2) # store x3 (0x2a35745a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002a35745a from memory into f18
fmadd.d f20, f20, f1, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x530435a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80ff5fdf # load x3 with 32 MSBs 0x0000000080ff5fdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080ff5fdf
sw x3, 0(x2) # store x3 (0x80ff5fdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000080ff5fdf from memory into f21
li x3, 0x533014a3 # load x3 with 32 MSBs 0x00000000533014a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000533014a3
sw x3, 0(x2) # store x3 (0x533014a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000533014a3 from memory into f17
li x3, 0x1bc84cca # load x3 with 32 MSBs 0x000000001bc84cca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bc84cca
sw x3, 0(x2) # store x3 (0x1bc84cca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001bc84cca from memory into f8
fmadd.d f21, f21, f17, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xfc231d53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb6ee8ff # load x3 with 32 MSBs 0x00000000db6ee8ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db6ee8ff
sw x3, 0(x2) # store x3 (0xdb6ee8ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000db6ee8ff from memory into f22
li x3, 0x2996d33c # load x3 with 32 MSBs 0x000000002996d33c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002996d33c
sw x3, 0(x2) # store x3 (0x2996d33c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002996d33c from memory into f26
li x3, 0xb7a52bc1 # load x3 with 32 MSBs 0x00000000b7a52bc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7a52bc1
sw x3, 0(x2) # store x3 (0xb7a52bc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b7a52bc1 from memory into f6
fmadd.d f22, f22, f26, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x965d8a62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f2c59e9 # load x3 with 32 MSBs 0x000000002f2c59e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f2c59e9
sw x3, 0(x2) # store x3 (0x2f2c59e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000002f2c59e9 from memory into f23
li x3, 0x602c8c90 # load x3 with 32 MSBs 0x00000000602c8c90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000602c8c90
sw x3, 0(x2) # store x3 (0x602c8c90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000602c8c90 from memory into f11
li x3, 0x744ca2dc # load x3 with 32 MSBs 0x00000000744ca2dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000744ca2dc
sw x3, 0(x2) # store x3 (0x744ca2dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000744ca2dc from memory into f19
fmadd.d f23, f23, f11, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x1ec323fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcec3add4 # load x3 with 32 MSBs 0x00000000cec3add4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cec3add4
sw x3, 0(x2) # store x3 (0xcec3add4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cec3add4 from memory into f24
li x3, 0x942f1079 # load x3 with 32 MSBs 0x00000000942f1079
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000942f1079
sw x3, 0(x2) # store x3 (0x942f1079) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000942f1079 from memory into f18
li x3, 0x73999d28 # load x3 with 32 MSBs 0x0000000073999d28
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073999d28
sw x3, 0(x2) # store x3 (0x73999d28) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000073999d28 from memory into f31
fmadd.d f24, f24, f18, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x294dd8d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x801f2746 # load x3 with 32 MSBs 0x00000000801f2746
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000801f2746
sw x3, 0(x2) # store x3 (0x801f2746) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000801f2746 from memory into f25
li x3, 0xac06c7e6 # load x3 with 32 MSBs 0x00000000ac06c7e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac06c7e6
sw x3, 0(x2) # store x3 (0xac06c7e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ac06c7e6 from memory into f17
li x3, 0xc15ac8ec # load x3 with 32 MSBs 0x00000000c15ac8ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c15ac8ec
sw x3, 0(x2) # store x3 (0xc15ac8ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c15ac8ec from memory into f11
fmadd.d f25, f25, f17, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0xb4911649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x59238e8d # load x3 with 32 MSBs 0x0000000059238e8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059238e8d
sw x3, 0(x2) # store x3 (0x59238e8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000059238e8d from memory into f26
li x3, 0xbc30ec7f # load x3 with 32 MSBs 0x00000000bc30ec7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc30ec7f
sw x3, 0(x2) # store x3 (0xbc30ec7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bc30ec7f from memory into f11
li x3, 0x991abf2a # load x3 with 32 MSBs 0x00000000991abf2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000991abf2a
sw x3, 0(x2) # store x3 (0x991abf2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000991abf2a from memory into f12
fmadd.d f26, f26, f11, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x354da765 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2466cea9 # load x3 with 32 MSBs 0x000000002466cea9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002466cea9
sw x3, 0(x2) # store x3 (0x2466cea9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000002466cea9 from memory into f27
li x3, 0xbd6bb878 # load x3 with 32 MSBs 0x00000000bd6bb878
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd6bb878
sw x3, 0(x2) # store x3 (0xbd6bb878) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000bd6bb878 from memory into f3
li x3, 0x1b4eefba # load x3 with 32 MSBs 0x000000001b4eefba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b4eefba
sw x3, 0(x2) # store x3 (0x1b4eefba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001b4eefba from memory into f13
fmadd.d f27, f27, f3, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xee0a47a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1b27fb2c # load x3 with 32 MSBs 0x000000001b27fb2c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b27fb2c
sw x3, 0(x2) # store x3 (0x1b27fb2c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001b27fb2c from memory into f28
li x3, 0x2bde9bde # load x3 with 32 MSBs 0x000000002bde9bde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bde9bde
sw x3, 0(x2) # store x3 (0x2bde9bde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002bde9bde from memory into f25
li x3, 0xe922afb1 # load x3 with 32 MSBs 0x00000000e922afb1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e922afb1
sw x3, 0(x2) # store x3 (0xe922afb1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e922afb1 from memory into f24
fmadd.d f28, f28, f25, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x801dd601 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xce7cc4e7 # load x3 with 32 MSBs 0x00000000ce7cc4e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ce7cc4e7
sw x3, 0(x2) # store x3 (0xce7cc4e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ce7cc4e7 from memory into f29
li x3, 0xed6699fa # load x3 with 32 MSBs 0x00000000ed6699fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed6699fa
sw x3, 0(x2) # store x3 (0xed6699fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ed6699fa from memory into f9
li x3, 0x2ea94b5c # load x3 with 32 MSBs 0x000000002ea94b5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ea94b5c
sw x3, 0(x2) # store x3 (0x2ea94b5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000002ea94b5c from memory into f6
fmadd.d f29, f29, f9, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0xf3b8736c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67a0a2bd # load x3 with 32 MSBs 0x0000000067a0a2bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067a0a2bd
sw x3, 0(x2) # store x3 (0x67a0a2bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000067a0a2bd from memory into f30
li x3, 0xf8cb19af # load x3 with 32 MSBs 0x00000000f8cb19af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8cb19af
sw x3, 0(x2) # store x3 (0xf8cb19af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f8cb19af from memory into f30
li x3, 0x618302d5 # load x3 with 32 MSBs 0x00000000618302d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000618302d5
sw x3, 0(x2) # store x3 (0x618302d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000618302d5 from memory into f23
fmadd.d f30, f30, f30, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x215fbe7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f8cbbcd # load x3 with 32 MSBs 0x000000007f8cbbcd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f8cbbcd
sw x3, 0(x2) # store x3 (0x7f8cbbcd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007f8cbbcd from memory into f31
li x3, 0xc06ed947 # load x3 with 32 MSBs 0x00000000c06ed947
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c06ed947
sw x3, 0(x2) # store x3 (0xc06ed947) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c06ed947 from memory into f8
li x3, 0xe11d8d8c # load x3 with 32 MSBs 0x00000000e11d8d8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e11d8d8c
sw x3, 0(x2) # store x3 (0xe11d8d8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e11d8d8c from memory into f28
fmadd.d f31, f31, f8, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x947a5f7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca66cfd0 # load x3 with 32 MSBs 0x00000000ca66cfd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca66cfd0
sw x3, 0(x2) # store x3 (0xca66cfd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ca66cfd0 from memory into f12
li x3, 0x915a8c3f # load x3 with 32 MSBs 0x00000000915a8c3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000915a8c3f
sw x3, 0(x2) # store x3 (0x915a8c3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000915a8c3f from memory into f0
li x3, 0x84656733 # load x3 with 32 MSBs 0x0000000084656733
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084656733
sw x3, 0(x2) # store x3 (0x84656733) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000084656733 from memory into f6
fmadd.d f0, f12, f0, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x065d17fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8688ccf3 # load x3 with 32 MSBs 0x000000008688ccf3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008688ccf3
sw x3, 0(x2) # store x3 (0x8688ccf3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008688ccf3 from memory into f16
li x3, 0x7bb3bbea # load x3 with 32 MSBs 0x000000007bb3bbea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bb3bbea
sw x3, 0(x2) # store x3 (0x7bb3bbea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007bb3bbea from memory into f1
li x3, 0x1cf77ad7 # load x3 with 32 MSBs 0x000000001cf77ad7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cf77ad7
sw x3, 0(x2) # store x3 (0x1cf77ad7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001cf77ad7 from memory into f17
fmadd.d f1, f16, f1, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0xf5aa26b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa8b7acb # load x3 with 32 MSBs 0x00000000fa8b7acb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa8b7acb
sw x3, 0(x2) # store x3 (0xfa8b7acb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000fa8b7acb from memory into f27
li x3, 0xfe3c365c # load x3 with 32 MSBs 0x00000000fe3c365c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe3c365c
sw x3, 0(x2) # store x3 (0xfe3c365c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000fe3c365c from memory into f2
li x3, 0xaded77b8 # load x3 with 32 MSBs 0x00000000aded77b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aded77b8
sw x3, 0(x2) # store x3 (0xaded77b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000aded77b8 from memory into f13
fmadd.d f2, f27, f2, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x1c75b36a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac3a3d31 # load x3 with 32 MSBs 0x00000000ac3a3d31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac3a3d31
sw x3, 0(x2) # store x3 (0xac3a3d31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000ac3a3d31 from memory into f8
li x3, 0xfea02546 # load x3 with 32 MSBs 0x00000000fea02546
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fea02546
sw x3, 0(x2) # store x3 (0xfea02546) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000fea02546 from memory into f3
li x3, 0xa221b6ee # load x3 with 32 MSBs 0x00000000a221b6ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a221b6ee
sw x3, 0(x2) # store x3 (0xa221b6ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a221b6ee from memory into f6
fmadd.d f3, f8, f3, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x0e92e1fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x64ceeffd # load x3 with 32 MSBs 0x0000000064ceeffd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064ceeffd
sw x3, 0(x2) # store x3 (0x64ceeffd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000064ceeffd from memory into f14
li x3, 0x48777f76 # load x3 with 32 MSBs 0x0000000048777f76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048777f76
sw x3, 0(x2) # store x3 (0x48777f76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000048777f76 from memory into f4
li x3, 0x3b326c74 # load x3 with 32 MSBs 0x000000003b326c74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b326c74
sw x3, 0(x2) # store x3 (0x3b326c74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003b326c74 from memory into f26
fmadd.d f4, f14, f4, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x91a2e569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50769235 # load x3 with 32 MSBs 0x0000000050769235
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050769235
sw x3, 0(x2) # store x3 (0x50769235) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000050769235 from memory into f9
li x3, 0x62878627 # load x3 with 32 MSBs 0x0000000062878627
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062878627
sw x3, 0(x2) # store x3 (0x62878627) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000062878627 from memory into f5
li x3, 0xd8c8fa77 # load x3 with 32 MSBs 0x00000000d8c8fa77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8c8fa77
sw x3, 0(x2) # store x3 (0xd8c8fa77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d8c8fa77 from memory into f20
fmadd.d f5, f9, f5, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xbf84b46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69b83450 # load x3 with 32 MSBs 0x0000000069b83450
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069b83450
sw x3, 0(x2) # store x3 (0x69b83450) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000069b83450 from memory into f18
li x3, 0xaf0f6780 # load x3 with 32 MSBs 0x00000000af0f6780
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af0f6780
sw x3, 0(x2) # store x3 (0xaf0f6780) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000af0f6780 from memory into f6
li x3, 0x92583c1b # load x3 with 32 MSBs 0x0000000092583c1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092583c1b
sw x3, 0(x2) # store x3 (0x92583c1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000092583c1b from memory into f3
fmadd.d f6, f18, f6, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x193068fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e7166ac # load x3 with 32 MSBs 0x000000008e7166ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e7166ac
sw x3, 0(x2) # store x3 (0x8e7166ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008e7166ac from memory into f4
li x3, 0x9015e39a # load x3 with 32 MSBs 0x000000009015e39a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009015e39a
sw x3, 0(x2) # store x3 (0x9015e39a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009015e39a from memory into f7
li x3, 0x6210eb2b # load x3 with 32 MSBs 0x000000006210eb2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006210eb2b
sw x3, 0(x2) # store x3 (0x6210eb2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006210eb2b from memory into f14
fmadd.d f7, f4, f7, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0xef63c93e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9393d8b # load x3 with 32 MSBs 0x00000000a9393d8b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9393d8b
sw x3, 0(x2) # store x3 (0xa9393d8b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a9393d8b from memory into f8
li x3, 0x77214a03 # load x3 with 32 MSBs 0x0000000077214a03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077214a03
sw x3, 0(x2) # store x3 (0x77214a03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000077214a03 from memory into f8
li x3, 0xef2f64bf # load x3 with 32 MSBs 0x00000000ef2f64bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef2f64bf
sw x3, 0(x2) # store x3 (0xef2f64bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000ef2f64bf from memory into f16
fmadd.d f8, f8, f8, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xc9bc2b69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2647fcbc # load x3 with 32 MSBs 0x000000002647fcbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002647fcbc
sw x3, 0(x2) # store x3 (0x2647fcbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002647fcbc from memory into f11
li x3, 0xda73a6e6 # load x3 with 32 MSBs 0x00000000da73a6e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da73a6e6
sw x3, 0(x2) # store x3 (0xda73a6e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000da73a6e6 from memory into f9
li x3, 0xea2e2a62 # load x3 with 32 MSBs 0x00000000ea2e2a62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea2e2a62
sw x3, 0(x2) # store x3 (0xea2e2a62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ea2e2a62 from memory into f1
fmadd.d f9, f11, f9, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x24596ea3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73176e81 # load x3 with 32 MSBs 0x0000000073176e81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073176e81
sw x3, 0(x2) # store x3 (0x73176e81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000073176e81 from memory into f13
li x3, 0xfd1b13fd # load x3 with 32 MSBs 0x00000000fd1b13fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd1b13fd
sw x3, 0(x2) # store x3 (0xfd1b13fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fd1b13fd from memory into f10
li x3, 0xbbd39565 # load x3 with 32 MSBs 0x00000000bbd39565
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbd39565
sw x3, 0(x2) # store x3 (0xbbd39565) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000bbd39565 from memory into f18
fmadd.d f10, f13, f10, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x73eb1ef8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x58db58f4 # load x3 with 32 MSBs 0x0000000058db58f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058db58f4
sw x3, 0(x2) # store x3 (0x58db58f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000058db58f4 from memory into f18
li x3, 0x9197eb8f # load x3 with 32 MSBs 0x000000009197eb8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009197eb8f
sw x3, 0(x2) # store x3 (0x9197eb8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009197eb8f from memory into f11
li x3, 0x65f3d3de # load x3 with 32 MSBs 0x0000000065f3d3de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065f3d3de
sw x3, 0(x2) # store x3 (0x65f3d3de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000065f3d3de from memory into f3
fmadd.d f11, f18, f11, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x3e4a5cd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1b126d4 # load x3 with 32 MSBs 0x00000000c1b126d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1b126d4
sw x3, 0(x2) # store x3 (0xc1b126d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c1b126d4 from memory into f21
li x3, 0xe4a39e70 # load x3 with 32 MSBs 0x00000000e4a39e70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4a39e70
sw x3, 0(x2) # store x3 (0xe4a39e70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e4a39e70 from memory into f12
li x3, 0x8335e777 # load x3 with 32 MSBs 0x000000008335e777
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008335e777
sw x3, 0(x2) # store x3 (0x8335e777) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008335e777 from memory into f15
fmadd.d f12, f21, f12, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x4b031c29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf019805c # load x3 with 32 MSBs 0x00000000f019805c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f019805c
sw x3, 0(x2) # store x3 (0xf019805c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000f019805c from memory into f24
li x3, 0xff1ead8d # load x3 with 32 MSBs 0x00000000ff1ead8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff1ead8d
sw x3, 0(x2) # store x3 (0xff1ead8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ff1ead8d from memory into f13
li x3, 0xc1c01029 # load x3 with 32 MSBs 0x00000000c1c01029
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1c01029
sw x3, 0(x2) # store x3 (0xc1c01029) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c1c01029 from memory into f29
fmadd.d f13, f24, f13, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xf815e1cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95d03e52 # load x3 with 32 MSBs 0x0000000095d03e52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095d03e52
sw x3, 0(x2) # store x3 (0x95d03e52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000095d03e52 from memory into f29
li x3, 0x65a527ff # load x3 with 32 MSBs 0x0000000065a527ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065a527ff
sw x3, 0(x2) # store x3 (0x65a527ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000065a527ff from memory into f14
li x3, 0xeaea058a # load x3 with 32 MSBs 0x00000000eaea058a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eaea058a
sw x3, 0(x2) # store x3 (0xeaea058a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000eaea058a from memory into f12
fmadd.d f14, f29, f14, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x2e1156c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c39996c # load x3 with 32 MSBs 0x000000007c39996c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c39996c
sw x3, 0(x2) # store x3 (0x7c39996c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000007c39996c from memory into f29
li x3, 0x778b65d0 # load x3 with 32 MSBs 0x00000000778b65d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000778b65d0
sw x3, 0(x2) # store x3 (0x778b65d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000778b65d0 from memory into f15
li x3, 0x534dd468 # load x3 with 32 MSBs 0x00000000534dd468
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000534dd468
sw x3, 0(x2) # store x3 (0x534dd468) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000534dd468 from memory into f16
fmadd.d f15, f29, f15, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x5036847a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5f74ab56 # load x3 with 32 MSBs 0x000000005f74ab56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f74ab56
sw x3, 0(x2) # store x3 (0x5f74ab56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005f74ab56 from memory into f6
li x3, 0x93d8096f # load x3 with 32 MSBs 0x0000000093d8096f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093d8096f
sw x3, 0(x2) # store x3 (0x93d8096f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000093d8096f from memory into f16
li x3, 0x3301c703 # load x3 with 32 MSBs 0x000000003301c703
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003301c703
sw x3, 0(x2) # store x3 (0x3301c703) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003301c703 from memory into f22
fmadd.d f16, f6, f16, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x7445faf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7001dfea # load x3 with 32 MSBs 0x000000007001dfea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007001dfea
sw x3, 0(x2) # store x3 (0x7001dfea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007001dfea from memory into f20
li x3, 0x1a0b8488 # load x3 with 32 MSBs 0x000000001a0b8488
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a0b8488
sw x3, 0(x2) # store x3 (0x1a0b8488) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001a0b8488 from memory into f17
li x3, 0x63596e94 # load x3 with 32 MSBs 0x0000000063596e94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063596e94
sw x3, 0(x2) # store x3 (0x63596e94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000063596e94 from memory into f13
fmadd.d f17, f20, f17, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0xad29db40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdf13ca33 # load x3 with 32 MSBs 0x00000000df13ca33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df13ca33
sw x3, 0(x2) # store x3 (0xdf13ca33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000df13ca33 from memory into f15
li x3, 0xfd73bc74 # load x3 with 32 MSBs 0x00000000fd73bc74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd73bc74
sw x3, 0(x2) # store x3 (0xfd73bc74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fd73bc74 from memory into f18
li x3, 0x49464e87 # load x3 with 32 MSBs 0x0000000049464e87
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049464e87
sw x3, 0(x2) # store x3 (0x49464e87) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000049464e87 from memory into f13
fmadd.d f18, f15, f18, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xf77975a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf111bcb # load x3 with 32 MSBs 0x00000000bf111bcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf111bcb
sw x3, 0(x2) # store x3 (0xbf111bcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000bf111bcb from memory into f26
li x3, 0xe4788821 # load x3 with 32 MSBs 0x00000000e4788821
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4788821
sw x3, 0(x2) # store x3 (0xe4788821) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e4788821 from memory into f19
li x3, 0x2556cdb6 # load x3 with 32 MSBs 0x000000002556cdb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002556cdb6
sw x3, 0(x2) # store x3 (0x2556cdb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002556cdb6 from memory into f7
fmadd.d f19, f26, f19, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0xca89aa45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ca7121c # load x3 with 32 MSBs 0x000000005ca7121c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ca7121c
sw x3, 0(x2) # store x3 (0x5ca7121c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005ca7121c from memory into f16
li x3, 0x32d1d8c9 # load x3 with 32 MSBs 0x0000000032d1d8c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032d1d8c9
sw x3, 0(x2) # store x3 (0x32d1d8c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000032d1d8c9 from memory into f20
li x3, 0x355d7e21 # load x3 with 32 MSBs 0x00000000355d7e21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000355d7e21
sw x3, 0(x2) # store x3 (0x355d7e21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000355d7e21 from memory into f10
fmadd.d f20, f16, f20, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x07126c38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x88f8ed1b # load x3 with 32 MSBs 0x0000000088f8ed1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088f8ed1b
sw x3, 0(x2) # store x3 (0x88f8ed1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000088f8ed1b from memory into f1
li x3, 0x146ecc66 # load x3 with 32 MSBs 0x00000000146ecc66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000146ecc66
sw x3, 0(x2) # store x3 (0x146ecc66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000146ecc66 from memory into f21
li x3, 0x10c05538 # load x3 with 32 MSBs 0x0000000010c05538
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010c05538
sw x3, 0(x2) # store x3 (0x10c05538) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000010c05538 from memory into f16
fmadd.d f21, f1, f21, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0xf710367e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb1ba3244 # load x3 with 32 MSBs 0x00000000b1ba3244
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1ba3244
sw x3, 0(x2) # store x3 (0xb1ba3244) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b1ba3244 from memory into f13
li x3, 0x1d29a295 # load x3 with 32 MSBs 0x000000001d29a295
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d29a295
sw x3, 0(x2) # store x3 (0x1d29a295) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001d29a295 from memory into f22
li x3, 0xf064dbc8 # load x3 with 32 MSBs 0x00000000f064dbc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f064dbc8
sw x3, 0(x2) # store x3 (0xf064dbc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f064dbc8 from memory into f20
fmadd.d f22, f13, f22, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0xd441af51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d5612ca # load x3 with 32 MSBs 0x000000006d5612ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d5612ca
sw x3, 0(x2) # store x3 (0x6d5612ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006d5612ca from memory into f31
li x3, 0x71854fa9 # load x3 with 32 MSBs 0x0000000071854fa9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071854fa9
sw x3, 0(x2) # store x3 (0x71854fa9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000071854fa9 from memory into f23
li x3, 0xb3e83372 # load x3 with 32 MSBs 0x00000000b3e83372
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3e83372
sw x3, 0(x2) # store x3 (0xb3e83372) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b3e83372 from memory into f10
fmadd.d f23, f31, f23, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x07e8e751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffda3ac0 # load x3 with 32 MSBs 0x00000000ffda3ac0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffda3ac0
sw x3, 0(x2) # store x3 (0xffda3ac0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ffda3ac0 from memory into f10
li x3, 0x8b7fe5ec # load x3 with 32 MSBs 0x000000008b7fe5ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b7fe5ec
sw x3, 0(x2) # store x3 (0x8b7fe5ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000008b7fe5ec from memory into f24
li x3, 0x3d5f0221 # load x3 with 32 MSBs 0x000000003d5f0221
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d5f0221
sw x3, 0(x2) # store x3 (0x3d5f0221) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003d5f0221 from memory into f3
fmadd.d f24, f10, f24, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x16884f91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e140ad1 # load x3 with 32 MSBs 0x000000003e140ad1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e140ad1
sw x3, 0(x2) # store x3 (0x3e140ad1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003e140ad1 from memory into f25
li x3, 0xe515d54f # load x3 with 32 MSBs 0x00000000e515d54f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e515d54f
sw x3, 0(x2) # store x3 (0xe515d54f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e515d54f from memory into f25
li x3, 0x1a70d2af # load x3 with 32 MSBs 0x000000001a70d2af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a70d2af
sw x3, 0(x2) # store x3 (0x1a70d2af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001a70d2af from memory into f22
fmadd.d f25, f25, f25, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0xf431d6f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4dfe4f61 # load x3 with 32 MSBs 0x000000004dfe4f61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dfe4f61
sw x3, 0(x2) # store x3 (0x4dfe4f61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004dfe4f61 from memory into f2
li x3, 0xe3af88c2 # load x3 with 32 MSBs 0x00000000e3af88c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3af88c2
sw x3, 0(x2) # store x3 (0xe3af88c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000e3af88c2 from memory into f26
li x3, 0x85ee0285 # load x3 with 32 MSBs 0x0000000085ee0285
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085ee0285
sw x3, 0(x2) # store x3 (0x85ee0285) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000085ee0285 from memory into f25
fmadd.d f26, f2, f26, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xbdbfd051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x096bd095 # load x3 with 32 MSBs 0x00000000096bd095
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000096bd095
sw x3, 0(x2) # store x3 (0x096bd095) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000096bd095 from memory into f14
li x3, 0x719ca703 # load x3 with 32 MSBs 0x00000000719ca703
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000719ca703
sw x3, 0(x2) # store x3 (0x719ca703) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000719ca703 from memory into f27
li x3, 0x557074d5 # load x3 with 32 MSBs 0x00000000557074d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000557074d5
sw x3, 0(x2) # store x3 (0x557074d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000557074d5 from memory into f25
fmadd.d f27, f14, f27, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xad1533b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb5072ffd # load x3 with 32 MSBs 0x00000000b5072ffd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5072ffd
sw x3, 0(x2) # store x3 (0xb5072ffd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b5072ffd from memory into f3
li x3, 0x7ef08bab # load x3 with 32 MSBs 0x000000007ef08bab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ef08bab
sw x3, 0(x2) # store x3 (0x7ef08bab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007ef08bab from memory into f28
li x3, 0x6b2199d8 # load x3 with 32 MSBs 0x000000006b2199d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b2199d8
sw x3, 0(x2) # store x3 (0x6b2199d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006b2199d8 from memory into f18
fmadd.d f28, f3, f28, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xac7c3baf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29f4d367 # load x3 with 32 MSBs 0x0000000029f4d367
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029f4d367
sw x3, 0(x2) # store x3 (0x29f4d367) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000029f4d367 from memory into f9
li x3, 0x4baa3d70 # load x3 with 32 MSBs 0x000000004baa3d70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004baa3d70
sw x3, 0(x2) # store x3 (0x4baa3d70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004baa3d70 from memory into f29
li x3, 0x3ffbb6d6 # load x3 with 32 MSBs 0x000000003ffbb6d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ffbb6d6
sw x3, 0(x2) # store x3 (0x3ffbb6d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003ffbb6d6 from memory into f22
fmadd.d f29, f9, f29, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x75f0ebdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd73858ae # load x3 with 32 MSBs 0x00000000d73858ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d73858ae
sw x3, 0(x2) # store x3 (0xd73858ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d73858ae from memory into f10
li x3, 0xa307d5bb # load x3 with 32 MSBs 0x00000000a307d5bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a307d5bb
sw x3, 0(x2) # store x3 (0xa307d5bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a307d5bb from memory into f30
li x3, 0x56d33be7 # load x3 with 32 MSBs 0x0000000056d33be7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056d33be7
sw x3, 0(x2) # store x3 (0x56d33be7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000056d33be7 from memory into f12
fmadd.d f30, f10, f30, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x02425916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67354bfe # load x3 with 32 MSBs 0x0000000067354bfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067354bfe
sw x3, 0(x2) # store x3 (0x67354bfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000067354bfe from memory into f3
li x3, 0xbc78945c # load x3 with 32 MSBs 0x00000000bc78945c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc78945c
sw x3, 0(x2) # store x3 (0xbc78945c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bc78945c from memory into f31
li x3, 0xdd5c73fb # load x3 with 32 MSBs 0x00000000dd5c73fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd5c73fb
sw x3, 0(x2) # store x3 (0xdd5c73fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000dd5c73fb from memory into f14
fmadd.d f31, f3, f31, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x26, 0x5e0cccc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x4d02efad # load x3 with 32 MSBs 0x000000004d02efad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d02efad
sw x3, 0(x2) # store x3 (0x4d02efad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004d02efad from memory into f28
li x3, 0xb31fb912 # load x3 with 32 MSBs 0x00000000b31fb912
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b31fb912
sw x3, 0(x2) # store x3 (0xb31fb912) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b31fb912 from memory into f4
fmadd.d f26, f20, f28, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x29, 0x8999f4fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0xf88b75d2 # load x3 with 32 MSBs 0x00000000f88b75d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f88b75d2
sw x3, 0(x2) # store x3 (0xf88b75d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f88b75d2 from memory into f15
li x3, 0xa0e134bd # load x3 with 32 MSBs 0x00000000a0e134bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0e134bd
sw x3, 0(x2) # store x3 (0xa0e134bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a0e134bd from memory into f31
fmadd.d f29, f20, f15, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x7, 0xb516071c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0x81f532af # load x3 with 32 MSBs 0x0000000081f532af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081f532af
sw x3, 0(x2) # store x3 (0x81f532af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000081f532af from memory into f4
li x3, 0x9ba0160e # load x3 with 32 MSBs 0x000000009ba0160e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ba0160e
sw x3, 0(x2) # store x3 (0x9ba0160e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009ba0160e from memory into f14
fmadd.d f7, f5, f4, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x14, 0xfc1b7930 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x1836b046 # load x3 with 32 MSBs 0x000000001836b046
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001836b046
sw x3, 0(x2) # store x3 (0x1836b046) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000001836b046 from memory into f6
li x3, 0x0f234c9f # load x3 with 32 MSBs 0x000000000f234c9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f234c9f
sw x3, 0(x2) # store x3 (0x0f234c9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000f234c9f from memory into f30
fmadd.d f14, f21, f6, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x20, 0x77936be2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x67454491 # load x3 with 32 MSBs 0x0000000067454491
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067454491
sw x3, 0(x2) # store x3 (0x67454491) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000067454491 from memory into f9
li x3, 0xad50d136 # load x3 with 32 MSBs 0x00000000ad50d136
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad50d136
sw x3, 0(x2) # store x3 (0xad50d136) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000ad50d136 from memory into f25
fmadd.d f20, f2, f9, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x6, 0xce43375e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x6117e044 # load x3 with 32 MSBs 0x000000006117e044
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006117e044
sw x3, 0(x2) # store x3 (0x6117e044) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000006117e044 from memory into f23
li x3, 0x8f41e75a # load x3 with 32 MSBs 0x000000008f41e75a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f41e75a
sw x3, 0(x2) # store x3 (0x8f41e75a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008f41e75a from memory into f28
fmadd.d f6, f8, f23, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x16, 0x460a2583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x59184e6f # load x3 with 32 MSBs 0x0000000059184e6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059184e6f
sw x3, 0(x2) # store x3 (0x59184e6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000059184e6f from memory into f1
li x3, 0x9f8634a7 # load x3 with 32 MSBs 0x000000009f8634a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f8634a7
sw x3, 0(x2) # store x3 (0x9f8634a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009f8634a7 from memory into f12
fmadd.d f16, f5, f1, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x19, 0x36eb35f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x4a3fddaf # load x3 with 32 MSBs 0x000000004a3fddaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a3fddaf
sw x3, 0(x2) # store x3 (0x4a3fddaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004a3fddaf from memory into f18
li x3, 0x6393a955 # load x3 with 32 MSBs 0x000000006393a955
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006393a955
sw x3, 0(x2) # store x3 (0x6393a955) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006393a955 from memory into f8
fmadd.d f19, f17, f18, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x21, 0x6da00bac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0xe69a225f # load x3 with 32 MSBs 0x00000000e69a225f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e69a225f
sw x3, 0(x2) # store x3 (0xe69a225f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e69a225f from memory into f13
li x3, 0x73c57b9c # load x3 with 32 MSBs 0x0000000073c57b9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073c57b9c
sw x3, 0(x2) # store x3 (0x73c57b9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000073c57b9c from memory into f19
fmadd.d f21, f9, f13, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x30, 0x58d914ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x1ffb8ef0 # load x3 with 32 MSBs 0x000000001ffb8ef0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ffb8ef0
sw x3, 0(x2) # store x3 (0x1ffb8ef0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001ffb8ef0 from memory into f1
li x3, 0x84fa185a # load x3 with 32 MSBs 0x0000000084fa185a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084fa185a
sw x3, 0(x2) # store x3 (0x84fa185a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000084fa185a from memory into f21
fmadd.d f30, f13, f1, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x28, 0xacc499e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0xf7082095 # load x3 with 32 MSBs 0x00000000f7082095
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7082095
sw x3, 0(x2) # store x3 (0xf7082095) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f7082095 from memory into f10
li x3, 0x41f1d54a # load x3 with 32 MSBs 0x0000000041f1d54a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041f1d54a
sw x3, 0(x2) # store x3 (0x41f1d54a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000041f1d54a from memory into f9
fmadd.d f28, f18, f10, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x8, 0x35affa0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0xf5b06488 # load x3 with 32 MSBs 0x00000000f5b06488
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5b06488
sw x3, 0(x2) # store x3 (0xf5b06488) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f5b06488 from memory into f6
li x3, 0x0d005521 # load x3 with 32 MSBs 0x000000000d005521
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d005521
sw x3, 0(x2) # store x3 (0x0d005521) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000d005521 from memory into f31
fmadd.d f8, f24, f6, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x25, 0x0c2d1124 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x3c72d6c2 # load x3 with 32 MSBs 0x000000003c72d6c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c72d6c2
sw x3, 0(x2) # store x3 (0x3c72d6c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003c72d6c2 from memory into f15
li x3, 0xc4fee379 # load x3 with 32 MSBs 0x00000000c4fee379
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4fee379
sw x3, 0(x2) # store x3 (0xc4fee379) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c4fee379 from memory into f10
fmadd.d f25, f27, f15, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x31, 0xcb6720f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0xbdb64466 # load x3 with 32 MSBs 0x00000000bdb64466
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdb64466
sw x3, 0(x2) # store x3 (0xbdb64466) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bdb64466 from memory into f22
li x3, 0xbd71fff2 # load x3 with 32 MSBs 0x00000000bd71fff2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd71fff2
sw x3, 0(x2) # store x3 (0xbd71fff2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000bd71fff2 from memory into f28
fmadd.d f31, f6, f22, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x10, 0xc3347ab7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0xf6ebc862 # load x3 with 32 MSBs 0x00000000f6ebc862
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6ebc862
sw x3, 0(x2) # store x3 (0xf6ebc862) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f6ebc862 from memory into f18
li x3, 0xa0327d56 # load x3 with 32 MSBs 0x00000000a0327d56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0327d56
sw x3, 0(x2) # store x3 (0xa0327d56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a0327d56 from memory into f1
fmadd.d f10, f24, f18, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x24, 0x7189c03e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x08a0e72a # load x3 with 32 MSBs 0x0000000008a0e72a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008a0e72a
sw x3, 0(x2) # store x3 (0x08a0e72a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000008a0e72a from memory into f13
li x3, 0x45bab089 # load x3 with 32 MSBs 0x0000000045bab089
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045bab089
sw x3, 0(x2) # store x3 (0x45bab089) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000045bab089 from memory into f31
fmadd.d f24, f27, f13, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x29, 0x7206694c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x37a8213a # load x3 with 32 MSBs 0x0000000037a8213a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037a8213a
sw x3, 0(x2) # store x3 (0x37a8213a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000037a8213a from memory into f14
li x3, 0xb34705f7 # load x3 with 32 MSBs 0x00000000b34705f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b34705f7
sw x3, 0(x2) # store x3 (0xb34705f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000b34705f7 from memory into f17
fmadd.d f29, f6, f14, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x14, 0x9cb21b8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x9064b43b # load x3 with 32 MSBs 0x000000009064b43b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009064b43b
sw x3, 0(x2) # store x3 (0x9064b43b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009064b43b from memory into f19
li x3, 0xdf03369b # load x3 with 32 MSBs 0x00000000df03369b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df03369b
sw x3, 0(x2) # store x3 (0xdf03369b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000df03369b from memory into f26
fmadd.d f14, f29, f19, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x4, 0xb4781aa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x600a8480 # load x3 with 32 MSBs 0x00000000600a8480
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000600a8480
sw x3, 0(x2) # store x3 (0x600a8480) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000600a8480 from memory into f8
li x3, 0x63dc1ea2 # load x3 with 32 MSBs 0x0000000063dc1ea2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063dc1ea2
sw x3, 0(x2) # store x3 (0x63dc1ea2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000063dc1ea2 from memory into f30
fmadd.d f4, f6, f8, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x10, 0x6aad7724 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x9871468c # load x3 with 32 MSBs 0x000000009871468c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009871468c
sw x3, 0(x2) # store x3 (0x9871468c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009871468c from memory into f6
li x3, 0x31da07bf # load x3 with 32 MSBs 0x0000000031da07bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031da07bf
sw x3, 0(x2) # store x3 (0x31da07bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000031da07bf from memory into f17
fmadd.d f10, f2, f6, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x3, 0x1d44c504 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x3278efdf # load x3 with 32 MSBs 0x000000003278efdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003278efdf
sw x3, 0(x2) # store x3 (0x3278efdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000003278efdf from memory into f14
li x3, 0x951dfca1 # load x3 with 32 MSBs 0x00000000951dfca1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000951dfca1
sw x3, 0(x2) # store x3 (0x951dfca1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000951dfca1 from memory into f27
fmadd.d f3, f13, f14, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x22, 0xef80fedd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0xbf8d3dab # load x3 with 32 MSBs 0x00000000bf8d3dab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf8d3dab
sw x3, 0(x2) # store x3 (0xbf8d3dab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000bf8d3dab from memory into f4
li x3, 0x876d9537 # load x3 with 32 MSBs 0x00000000876d9537
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000876d9537
sw x3, 0(x2) # store x3 (0x876d9537) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000876d9537 from memory into f9
fmadd.d f22, f24, f4, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x23, 0xe82e0936 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x20c2c589 # load x3 with 32 MSBs 0x0000000020c2c589
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020c2c589
sw x3, 0(x2) # store x3 (0x20c2c589) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000020c2c589 from memory into f4
li x3, 0x1af83d93 # load x3 with 32 MSBs 0x000000001af83d93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001af83d93
sw x3, 0(x2) # store x3 (0x1af83d93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000001af83d93 from memory into f7
fmadd.d f23, f29, f4, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x7, 0x16cc64ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0xa4a6f2cf # load x3 with 32 MSBs 0x00000000a4a6f2cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4a6f2cf
sw x3, 0(x2) # store x3 (0xa4a6f2cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a4a6f2cf from memory into f2
li x3, 0xa62b6c18 # load x3 with 32 MSBs 0x00000000a62b6c18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a62b6c18
sw x3, 0(x2) # store x3 (0xa62b6c18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a62b6c18 from memory into f24
fmadd.d f7, f23, f2, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x27, 0x652771c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x4d874652 # load x3 with 32 MSBs 0x000000004d874652
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d874652
sw x3, 0(x2) # store x3 (0x4d874652) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004d874652 from memory into f3
li x3, 0xc1d375a6 # load x3 with 32 MSBs 0x00000000c1d375a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1d375a6
sw x3, 0(x2) # store x3 (0xc1d375a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c1d375a6 from memory into f1
fmadd.d f27, f20, f3, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x3, 0x9f7453cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x77a85e33 # load x3 with 32 MSBs 0x0000000077a85e33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077a85e33
sw x3, 0(x2) # store x3 (0x77a85e33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000077a85e33 from memory into f4
li x3, 0x912ae6df # load x3 with 32 MSBs 0x00000000912ae6df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000912ae6df
sw x3, 0(x2) # store x3 (0x912ae6df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000912ae6df from memory into f25
fmadd.d f3, f9, f4, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x29, 0x0fa46ed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa948b89e # load x3 with 32 MSBs 0x00000000a948b89e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a948b89e
sw x3, 0(x2) # store x3 (0xa948b89e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a948b89e from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x30d6a309 # load x3 with 32 MSBs 0x0000000030d6a309
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030d6a309
sw x3, 0(x2) # store x3 (0x30d6a309) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000030d6a309 from memory into f12
fmadd.d f29, f26, f23, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x22, 0x1ad9a5de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x09f6f544 # load x3 with 32 MSBs 0x0000000009f6f544
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009f6f544
sw x3, 0(x2) # store x3 (0x09f6f544) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000009f6f544 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0x0df2e7ae # load x3 with 32 MSBs 0x000000000df2e7ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000df2e7ae
sw x3, 0(x2) # store x3 (0x0df2e7ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000df2e7ae from memory into f9
fmadd.d f22, f11, f5, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x15, 0xb6c795eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7b544873 # load x3 with 32 MSBs 0x000000007b544873
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b544873
sw x3, 0(x2) # store x3 (0x7b544873) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000007b544873 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0xd7f7ada5 # load x3 with 32 MSBs 0x00000000d7f7ada5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7f7ada5
sw x3, 0(x2) # store x3 (0xd7f7ada5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d7f7ada5 from memory into f20
fmadd.d f15, f26, f18, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x2, 0xd42f4d91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03d8d0d7 # load x3 with 32 MSBs 0x0000000003d8d0d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003d8d0d7
sw x3, 0(x2) # store x3 (0x03d8d0d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000003d8d0d7 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x866f15bb # load x3 with 32 MSBs 0x00000000866f15bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000866f15bb
sw x3, 0(x2) # store x3 (0x866f15bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000866f15bb from memory into f22
fmadd.d f2, f15, f31, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x13, 0xfebda4ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0127aff # load x3 with 32 MSBs 0x00000000d0127aff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0127aff
sw x3, 0(x2) # store x3 (0xd0127aff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d0127aff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x4680c2b9 # load x3 with 32 MSBs 0x000000004680c2b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004680c2b9
sw x3, 0(x2) # store x3 (0x4680c2b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004680c2b9 from memory into f21
fmadd.d f13, f1, f12, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x7, 0x825049a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5614ead7 # load x3 with 32 MSBs 0x000000005614ead7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005614ead7
sw x3, 0(x2) # store x3 (0x5614ead7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000005614ead7 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x2403bc4e # load x3 with 32 MSBs 0x000000002403bc4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002403bc4e
sw x3, 0(x2) # store x3 (0x2403bc4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002403bc4e from memory into f8
fmadd.d f7, f12, f26, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x27, 0xe8211c9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0f6cfac # load x3 with 32 MSBs 0x00000000a0f6cfac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0f6cfac
sw x3, 0(x2) # store x3 (0xa0f6cfac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a0f6cfac from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0x8331f890 # load x3 with 32 MSBs 0x000000008331f890
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008331f890
sw x3, 0(x2) # store x3 (0x8331f890) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008331f890 from memory into f4
fmadd.d f27, f6, f2, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x21, 0xcd3508ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9fe4a7fa # load x3 with 32 MSBs 0x000000009fe4a7fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fe4a7fa
sw x3, 0(x2) # store x3 (0x9fe4a7fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009fe4a7fa from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0xd1f32e0b # load x3 with 32 MSBs 0x00000000d1f32e0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1f32e0b
sw x3, 0(x2) # store x3 (0xd1f32e0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d1f32e0b from memory into f13
fmadd.d f21, f28, f4, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x21, 0x99d75a81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87277d60 # load x3 with 32 MSBs 0x0000000087277d60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087277d60
sw x3, 0(x2) # store x3 (0x87277d60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000087277d60 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0xe4dcbe10 # load x3 with 32 MSBs 0x00000000e4dcbe10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4dcbe10
sw x3, 0(x2) # store x3 (0xe4dcbe10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e4dcbe10 from memory into f15
fmadd.d f21, f28, f1, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x4, 0x9e7ccf3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x240bb65c # load x3 with 32 MSBs 0x00000000240bb65c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000240bb65c
sw x3, 0(x2) # store x3 (0x240bb65c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000240bb65c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x21f1861c # load x3 with 32 MSBs 0x0000000021f1861c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021f1861c
sw x3, 0(x2) # store x3 (0x21f1861c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000021f1861c from memory into f6
fmadd.d f4, f18, f14, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x18, 0x9f1c9dac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb6303a4a # load x3 with 32 MSBs 0x00000000b6303a4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6303a4a
sw x3, 0(x2) # store x3 (0xb6303a4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b6303a4a from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x34ba41de # load x3 with 32 MSBs 0x0000000034ba41de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034ba41de
sw x3, 0(x2) # store x3 (0x34ba41de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000034ba41de from memory into f2
fmadd.d f18, f15, f3, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x22, 0x5bcfe26b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x589b8bc7 # load x3 with 32 MSBs 0x00000000589b8bc7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000589b8bc7
sw x3, 0(x2) # store x3 (0x589b8bc7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000589b8bc7 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xb1c7db18 # load x3 with 32 MSBs 0x00000000b1c7db18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1c7db18
sw x3, 0(x2) # store x3 (0xb1c7db18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000b1c7db18 from memory into f14
fmadd.d f22, f3, f11, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x26, 0x21cd8d21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xab01526f # load x3 with 32 MSBs 0x00000000ab01526f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab01526f
sw x3, 0(x2) # store x3 (0xab01526f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000ab01526f from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
li x3, 0xf6fa1c28 # load x3 with 32 MSBs 0x00000000f6fa1c28
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6fa1c28
sw x3, 0(x2) # store x3 (0xf6fa1c28) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f6fa1c28 from memory into f14
fmadd.d f26, f11, f15, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x28, 0x6ac8f54d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x413553d3 # load x3 with 32 MSBs 0x00000000413553d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000413553d3
sw x3, 0(x2) # store x3 (0x413553d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000413553d3 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x95422092 # load x3 with 32 MSBs 0x0000000095422092
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095422092
sw x3, 0(x2) # store x3 (0x95422092) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000095422092 from memory into f11
fmadd.d f28, f16, f10, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x14, 0x0d95c9f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf33c4eea # load x3 with 32 MSBs 0x00000000f33c4eea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f33c4eea
sw x3, 0(x2) # store x3 (0xf33c4eea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f33c4eea from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x75c87307 # load x3 with 32 MSBs 0x0000000075c87307
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075c87307
sw x3, 0(x2) # store x3 (0x75c87307) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000075c87307 from memory into f16
fmadd.d f14, f30, f26, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x31, 0xc3b779c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb43c5245 # load x3 with 32 MSBs 0x00000000b43c5245
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b43c5245
sw x3, 0(x2) # store x3 (0xb43c5245) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b43c5245 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0xbd776f99 # load x3 with 32 MSBs 0x00000000bd776f99
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd776f99
sw x3, 0(x2) # store x3 (0xbd776f99) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000bd776f99 from memory into f25
fmadd.d f31, f5, f2, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x9, 0x051b222d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d1cf5ac # load x3 with 32 MSBs 0x000000001d1cf5ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d1cf5ac
sw x3, 0(x2) # store x3 (0x1d1cf5ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000001d1cf5ac from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0xde761831 # load x3 with 32 MSBs 0x00000000de761831
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de761831
sw x3, 0(x2) # store x3 (0xde761831) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000de761831 from memory into f4
fmadd.d f9, f7, f13, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x17, 0x2dc9982c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x84f3659b # load x3 with 32 MSBs 0x0000000084f3659b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084f3659b
sw x3, 0(x2) # store x3 (0x84f3659b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000084f3659b from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x462605ce # load x3 with 32 MSBs 0x00000000462605ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000462605ce
sw x3, 0(x2) # store x3 (0x462605ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000462605ce from memory into f26
fmadd.d f17, f27, f28, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x13, 0x27f864e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3396b31d # load x3 with 32 MSBs 0x000000003396b31d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003396b31d
sw x3, 0(x2) # store x3 (0x3396b31d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003396b31d from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x8f297783 # load x3 with 32 MSBs 0x000000008f297783
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f297783
sw x3, 0(x2) # store x3 (0x8f297783) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008f297783 from memory into f22
fmadd.d f13, f18, f27, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x27, 0xfdc9d7bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc51b184c # load x3 with 32 MSBs 0x00000000c51b184c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c51b184c
sw x3, 0(x2) # store x3 (0xc51b184c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c51b184c from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x775b165e # load x3 with 32 MSBs 0x00000000775b165e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000775b165e
sw x3, 0(x2) # store x3 (0x775b165e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000775b165e from memory into f11
fmadd.d f27, f9, f5, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x5, 0x4d3ea3a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10ef5993 # load x3 with 32 MSBs 0x0000000010ef5993
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010ef5993
sw x3, 0(x2) # store x3 (0x10ef5993) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000010ef5993 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xc3bc6b1d # load x3 with 32 MSBs 0x00000000c3bc6b1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3bc6b1d
sw x3, 0(x2) # store x3 (0xc3bc6b1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c3bc6b1d from memory into f30
fmadd.d f5, f19, f8, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x18, 0x2ec1e5fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdff44312 # load x3 with 32 MSBs 0x00000000dff44312
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dff44312
sw x3, 0(x2) # store x3 (0xdff44312) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000dff44312 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0xc2246508 # load x3 with 32 MSBs 0x00000000c2246508
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2246508
sw x3, 0(x2) # store x3 (0xc2246508) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c2246508 from memory into f16
fmadd.d f18, f25, f2, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x11, 0x9c491344 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x43fa7a5f # load x3 with 32 MSBs 0x0000000043fa7a5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043fa7a5f
sw x3, 0(x2) # store x3 (0x43fa7a5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000043fa7a5f from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0xcca3bea1 # load x3 with 32 MSBs 0x00000000cca3bea1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cca3bea1
sw x3, 0(x2) # store x3 (0xcca3bea1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000cca3bea1 from memory into f12
fmadd.d f11, f18, f30, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x31, 0x158bb680 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff38d02b # load x3 with 32 MSBs 0x00000000ff38d02b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff38d02b
sw x3, 0(x2) # store x3 (0xff38d02b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ff38d02b from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0x7c981019 # load x3 with 32 MSBs 0x000000007c981019
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c981019
sw x3, 0(x2) # store x3 (0x7c981019) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007c981019 from memory into f6
fmadd.d f31, f5, f3, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x14, 0xac14a6a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x33d91a24 # load x3 with 32 MSBs 0x0000000033d91a24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033d91a24
sw x3, 0(x2) # store x3 (0x33d91a24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000033d91a24 from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xe784ec7f # load x3 with 32 MSBs 0x00000000e784ec7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e784ec7f
sw x3, 0(x2) # store x3 (0xe784ec7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e784ec7f from memory into f29
fmadd.d f14, f19, f1, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x31, 0xb9dca6eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2608cb91 # load x3 with 32 MSBs 0x000000002608cb91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002608cb91
sw x3, 0(x2) # store x3 (0x2608cb91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002608cb91 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0xd5619218 # load x3 with 32 MSBs 0x00000000d5619218
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5619218
sw x3, 0(x2) # store x3 (0xd5619218) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d5619218 from memory into f9
fmadd.d f31, f25, f30, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x16, 0xdff794c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd173b3a9 # load x3 with 32 MSBs 0x00000000d173b3a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d173b3a9
sw x3, 0(x2) # store x3 (0xd173b3a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d173b3a9 from memory into f14
li x3, 0x5dda568b # load x3 with 32 MSBs 0x000000005dda568b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005dda568b
sw x3, 0(x2) # store x3 (0x5dda568b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005dda568b from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fmadd.d f16, f14, f18, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000000)
li x17, 0x9580baeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf1e94946 # load x3 with 32 MSBs 0x00000000f1e94946
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1e94946
sw x3, 0(x2) # store x3 (0xf1e94946) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f1e94946 from memory into f4
li x3, 0x3d818f7f # load x3 with 32 MSBs 0x000000003d818f7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d818f7f
sw x3, 0(x2) # store x3 (0x3d818f7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003d818f7f from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fmadd.d f17, f4, f30, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff0000000000000)
li x29, 0x2d58c3bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x76274b8b # load x3 with 32 MSBs 0x0000000076274b8b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076274b8b
sw x3, 0(x2) # store x3 (0x76274b8b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000076274b8b from memory into f24
li x3, 0xc61f63be # load x3 with 32 MSBs 0x00000000c61f63be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c61f63be
sw x3, 0(x2) # store x3 (0xc61f63be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c61f63be from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fmadd.d f29, f24, f1, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff0000000000000)
li x13, 0x52aef107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03565dc0 # load x3 with 32 MSBs 0x0000000003565dc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003565dc0
sw x3, 0(x2) # store x3 (0x03565dc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000003565dc0 from memory into f2
li x3, 0xabcb0d88 # load x3 with 32 MSBs 0x00000000abcb0d88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000abcb0d88
sw x3, 0(x2) # store x3 (0xabcb0d88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000abcb0d88 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fmadd.d f13, f2, f15, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff8000000000000)
li x31, 0x2bc658e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe687f868 # load x3 with 32 MSBs 0x00000000e687f868
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e687f868
sw x3, 0(x2) # store x3 (0xe687f868) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e687f868 from memory into f19
li x3, 0x9f2942a6 # load x3 with 32 MSBs 0x000000009f2942a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f2942a6
sw x3, 0(x2) # store x3 (0x9f2942a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000009f2942a6 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fmadd.d f31, f19, f16, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff8000000000000)
li x17, 0x72ae22e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f74ded1 # load x3 with 32 MSBs 0x000000006f74ded1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f74ded1
sw x3, 0(x2) # store x3 (0x6f74ded1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006f74ded1 from memory into f18
li x3, 0x2e9857b3 # load x3 with 32 MSBs 0x000000002e9857b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e9857b3
sw x3, 0(x2) # store x3 (0x2e9857b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002e9857b3 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fmadd.d f17, f18, f2, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000000000000000)
li x9, 0xb5d8c5ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdce1dd22 # load x3 with 32 MSBs 0x00000000dce1dd22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dce1dd22
sw x3, 0(x2) # store x3 (0xdce1dd22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000dce1dd22 from memory into f24
li x3, 0xc2f61ed5 # load x3 with 32 MSBs 0x00000000c2f61ed5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2f61ed5
sw x3, 0(x2) # store x3 (0xc2f61ed5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c2f61ed5 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fmadd.d f9, f24, f10, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000000000000000)
li x19, 0x7be6b421 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfef2043 # load x3 with 32 MSBs 0x00000000bfef2043
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfef2043
sw x3, 0(x2) # store x3 (0xbfef2043) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000bfef2043 from memory into f15
li x3, 0x4efca4e8 # load x3 with 32 MSBs 0x000000004efca4e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004efca4e8
sw x3, 0(x2) # store x3 (0x4efca4e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004efca4e8 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fmadd.d f19, f15, f11, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x10000000000000)
li x9, 0xf5adb853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x103e152e # load x3 with 32 MSBs 0x00000000103e152e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000103e152e
sw x3, 0(x2) # store x3 (0x103e152e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000103e152e from memory into f15
li x3, 0x89af534a # load x3 with 32 MSBs 0x0000000089af534a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089af534a
sw x3, 0(x2) # store x3 (0x89af534a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000089af534a from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fmadd.d f9, f15, f6, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8010000000000000)
li x30, 0xc1e91045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d6d85d4 # load x3 with 32 MSBs 0x000000006d6d85d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d6d85d4
sw x3, 0(x2) # store x3 (0x6d6d85d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006d6d85d4 from memory into f14
li x3, 0x734f33ce # load x3 with 32 MSBs 0x00000000734f33ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000734f33ce
sw x3, 0(x2) # store x3 (0x734f33ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000734f33ce from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fmadd.d f30, f14, f2, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fefffffffffffff)
li x1, 0xce18c41d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x63eaaed5 # load x3 with 32 MSBs 0x0000000063eaaed5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063eaaed5
sw x3, 0(x2) # store x3 (0x63eaaed5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000063eaaed5 from memory into f27
li x3, 0xa980531a # load x3 with 32 MSBs 0x00000000a980531a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a980531a
sw x3, 0(x2) # store x3 (0xa980531a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a980531a from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fmadd.d f1, f27, f21, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffefffffffffffff)
li x22, 0xcf4605b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xadce44c8 # load x3 with 32 MSBs 0x00000000adce44c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000adce44c8
sw x3, 0(x2) # store x3 (0xadce44c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000adce44c8 from memory into f23
li x3, 0x92e50582 # load x3 with 32 MSBs 0x0000000092e50582
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092e50582
sw x3, 0(x2) # store x3 (0x92e50582) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000092e50582 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fmadd.d f22, f23, f14, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfffffffffffff)
li x12, 0x44dbbcc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x298fcc65 # load x3 with 32 MSBs 0x00000000298fcc65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000298fcc65
sw x3, 0(x2) # store x3 (0x298fcc65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000298fcc65 from memory into f18
li x3, 0x841cd660 # load x3 with 32 MSBs 0x00000000841cd660
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000841cd660
sw x3, 0(x2) # store x3 (0x841cd660) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000841cd660 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fmadd.d f12, f18, f29, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800fffffffffffff)
li x24, 0x225b2893 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44c0aac0 # load x3 with 32 MSBs 0x0000000044c0aac0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044c0aac0
sw x3, 0(x2) # store x3 (0x44c0aac0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000044c0aac0 from memory into f9
li x3, 0xda0a5925 # load x3 with 32 MSBs 0x00000000da0a5925
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da0a5925
sw x3, 0(x2) # store x3 (0xda0a5925) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000da0a5925 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fmadd.d f24, f9, f13, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000)
li x20, 0x77d9c18a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca588854 # load x3 with 32 MSBs 0x00000000ca588854
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca588854
sw x3, 0(x2) # store x3 (0xca588854) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ca588854 from memory into f21
li x3, 0x1589e4f7 # load x3 with 32 MSBs 0x000000001589e4f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001589e4f7
sw x3, 0(x2) # store x3 (0x1589e4f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001589e4f7 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fmadd.d f20, f21, f29, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8008000000000000)
li x11, 0xa2498fa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e9070e0 # load x3 with 32 MSBs 0x000000008e9070e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e9070e0
sw x3, 0(x2) # store x3 (0x8e9070e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000008e9070e0 from memory into f14
li x3, 0xec824140 # load x3 with 32 MSBs 0x00000000ec824140
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec824140
sw x3, 0(x2) # store x3 (0xec824140) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ec824140 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fmadd.d f11, f14, f1, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x17, 0xbad9499a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98154a73 # load x3 with 32 MSBs 0x0000000098154a73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098154a73
sw x3, 0(x2) # store x3 (0x98154a73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000098154a73 from memory into f4
li x3, 0x193bb9e9 # load x3 with 32 MSBs 0x00000000193bb9e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000193bb9e9
sw x3, 0(x2) # store x3 (0x193bb9e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000193bb9e9 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fmadd.d f17, f4, f27, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000001)
li x24, 0xf04ba31a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb822c001 # load x3 with 32 MSBs 0x00000000b822c001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b822c001
sw x3, 0(x2) # store x3 (0xb822c001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b822c001 from memory into f21
li x3, 0xa113d42c # load x3 with 32 MSBs 0x00000000a113d42c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a113d42c
sw x3, 0(x2) # store x3 (0xa113d42c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a113d42c from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fmadd.d f24, f21, f13, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000000)
li x13, 0x06aa726a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73bd8e12 # load x3 with 32 MSBs 0x0000000073bd8e12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073bd8e12
sw x3, 0(x2) # store x3 (0x73bd8e12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000073bd8e12 from memory into f9
li x3, 0x0af9aec5 # load x3 with 32 MSBs 0x000000000af9aec5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000af9aec5
sw x3, 0(x2) # store x3 (0x0af9aec5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000af9aec5 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fmadd.d f13, f9, f31, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfff0000000000000)
li x30, 0x04658445 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe140ac10 # load x3 with 32 MSBs 0x00000000e140ac10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e140ac10
sw x3, 0(x2) # store x3 (0xe140ac10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e140ac10 from memory into f24
li x3, 0xbc1a3ce5 # load x3 with 32 MSBs 0x00000000bc1a3ce5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc1a3ce5
sw x3, 0(x2) # store x3 (0xbc1a3ce5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000bc1a3ce5 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fmadd.d f30, f24, f16, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff8000000000000)
li x26, 0x5df869de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9f510cf # load x3 with 32 MSBs 0x00000000a9f510cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9f510cf
sw x3, 0(x2) # store x3 (0xa9f510cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a9f510cf from memory into f7
li x3, 0x5223981e # load x3 with 32 MSBs 0x000000005223981e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005223981e
sw x3, 0(x2) # store x3 (0x5223981e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005223981e from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fmadd.d f26, f7, f22, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffffffffffff)
li x3, 0xb6fca7d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x983f7d47 # load x3 with 32 MSBs 0x00000000983f7d47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000983f7d47
sw x3, 0(x2) # store x3 (0x983f7d47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000983f7d47 from memory into f15
li x3, 0x6408a460 # load x3 with 32 MSBs 0x000000006408a460
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006408a460
sw x3, 0(x2) # store x3 (0x6408a460) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000006408a460 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fmadd.d f3, f15, f10, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000001)
li x31, 0xa4f37757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c381188 # load x3 with 32 MSBs 0x000000004c381188
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c381188
sw x3, 0(x2) # store x3 (0x4c381188) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004c381188 from memory into f13
li x3, 0x1399ab82 # load x3 with 32 MSBs 0x000000001399ab82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001399ab82
sw x3, 0(x2) # store x3 (0x1399ab82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000001399ab82 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fmadd.d f31, f13, f9, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff7ffffffffffff)
li x31, 0x696c3709 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb1e42d2b # load x3 with 32 MSBs 0x00000000b1e42d2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1e42d2b
sw x3, 0(x2) # store x3 (0xb1e42d2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b1e42d2b from memory into f23
li x3, 0xeb10eee5 # load x3 with 32 MSBs 0x00000000eb10eee5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb10eee5
sw x3, 0(x2) # store x3 (0xeb10eee5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000eb10eee5 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fmadd.d f31, f23, f20, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x5a392534a57711ad)
li x30, 0x76cb1c16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3fdefaa # load x3 with 32 MSBs 0x00000000b3fdefaa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3fdefaa
sw x3, 0(x2) # store x3 (0xb3fdefaa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b3fdefaa from memory into f20
li x3, 0xeb616384 # load x3 with 32 MSBs 0x00000000eb616384
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb616384
sw x3, 0(x2) # store x3 (0xeb616384) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000eb616384 from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fmadd.d f30, f20, f19, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xa6e895993737426c)
li x10, 0xe90c2346 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf55321f1 # load x3 with 32 MSBs 0x00000000f55321f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f55321f1
sw x3, 0(x2) # store x3 (0xf55321f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f55321f1 from memory into f11
li x3, 0x282899b3 # load x3 with 32 MSBs 0x00000000282899b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000282899b3
sw x3, 0(x2) # store x3 (0x282899b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000282899b3 from memory into f13
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fmadd.d f10, f11, f13, f19 # perform operation

# Testcase cp_frm
li x23, 0x88a0c93a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f5ef3ba # load x3 with 32 MSBs 0x000000003f5ef3ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f5ef3ba
sw x3, 0(x2) # store x3 (0x3f5ef3ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003f5ef3ba from memory into f16
li x3, 0xceeddcde # load x3 with 32 MSBs 0x00000000ceeddcde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ceeddcde
sw x3, 0(x2) # store x3 (0xceeddcde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ceeddcde from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fmadd.d f23, f16, f12, f1, dyn # perform operation
fmadd.d f23, f16, f12, f1, rdn # perform operation
fmadd.d f23, f16, f12, f1, rmm # perform operation
fmadd.d f23, f16, f12, f1, rne # perform operation
fmadd.d f23, f16, f12, f1, rtz # perform operation
fmadd.d f23, f16, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f16, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x12, 0xe307acad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0x375a21ab # load x3 with 32 MSBs 0x00000000375a21ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000375a21ab
sw x3, 0(x2) # store x3 (0x375a21ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000375a21ab from memory into f24
fmadd.d f12, f3, f17, f24, dyn # perform operation
fmadd.d f12, f3, f17, f24, rdn # perform operation
fmadd.d f12, f3, f17, f24, rmm # perform operation
fmadd.d f12, f3, f17, f24, rne # perform operation
fmadd.d f12, f3, f17, f24, rtz # perform operation
fmadd.d f12, f3, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f3, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f3, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x12, 0x3258e823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x95aa7af2 # load x3 with 32 MSBs 0x0000000095aa7af2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095aa7af2
sw x3, 0(x2) # store x3 (0x95aa7af2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000095aa7af2 from memory into f10
fmadd.d f12, f3, f21, f10, dyn # perform operation
fmadd.d f12, f3, f21, f10, rdn # perform operation
fmadd.d f12, f3, f21, f10, rmm # perform operation
fmadd.d f12, f3, f21, f10, rne # perform operation
fmadd.d f12, f3, f21, f10, rtz # perform operation
fmadd.d f12, f3, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f3, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x22, 0xa22f0b32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0x0e81d3ea # load x3 with 32 MSBs 0x000000000e81d3ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e81d3ea
sw x3, 0(x2) # store x3 (0x0e81d3ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000e81d3ea from memory into f5
fmadd.d f22, f17, f30, f5, dyn # perform operation
fmadd.d f22, f17, f30, f5, rdn # perform operation
fmadd.d f22, f17, f30, f5, rmm # perform operation
fmadd.d f22, f17, f30, f5, rne # perform operation
fmadd.d f22, f17, f30, f5, rtz # perform operation
fmadd.d f22, f17, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f17, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x30, 0xf308f603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x28aa573b # load x3 with 32 MSBs 0x0000000028aa573b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028aa573b
sw x3, 0(x2) # store x3 (0x28aa573b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000028aa573b from memory into f20
fmadd.d f30, f19, f28, f20, dyn # perform operation
fmadd.d f30, f19, f28, f20, rdn # perform operation
fmadd.d f30, f19, f28, f20, rmm # perform operation
fmadd.d f30, f19, f28, f20, rne # perform operation
fmadd.d f30, f19, f28, f20, rtz # perform operation
fmadd.d f30, f19, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f19, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f19, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x1, 0x340cb891 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0xb522fa55 # load x3 with 32 MSBs 0x00000000b522fa55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b522fa55
sw x3, 0(x2) # store x3 (0xb522fa55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b522fa55 from memory into f13
fmadd.d f1, f8, f12, f13, dyn # perform operation
fmadd.d f1, f8, f12, f13, rdn # perform operation
fmadd.d f1, f8, f12, f13, rmm # perform operation
fmadd.d f1, f8, f12, f13, rne # perform operation
fmadd.d f1, f8, f12, f13, rtz # perform operation
fmadd.d f1, f8, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f8, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x23, 0xb00ca11a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x14cac6e4 # load x3 with 32 MSBs 0x0000000014cac6e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014cac6e4
sw x3, 0(x2) # store x3 (0x14cac6e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000014cac6e4 from memory into f20
fmadd.d f23, f26, f15, f20, dyn # perform operation
fmadd.d f23, f26, f15, f20, rdn # perform operation
fmadd.d f23, f26, f15, f20, rmm # perform operation
fmadd.d f23, f26, f15, f20, rne # perform operation
fmadd.d f23, f26, f15, f20, rtz # perform operation
fmadd.d f23, f26, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f26, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x23, 0x5cd8a7c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x44b5c728 # load x3 with 32 MSBs 0x0000000044b5c728
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044b5c728
sw x3, 0(x2) # store x3 (0x44b5c728) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000044b5c728 from memory into f10
fmadd.d f23, f2, f12, f10, dyn # perform operation
fmadd.d f23, f2, f12, f10, rdn # perform operation
fmadd.d f23, f2, f12, f10, rmm # perform operation
fmadd.d f23, f2, f12, f10, rne # perform operation
fmadd.d f23, f2, f12, f10, rtz # perform operation
fmadd.d f23, f2, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f2, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x23, 0x3ed3d974 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x7b6fec0b # load x3 with 32 MSBs 0x000000007b6fec0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b6fec0b
sw x3, 0(x2) # store x3 (0x7b6fec0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007b6fec0b from memory into f12
fmadd.d f23, f15, f28, f12, dyn # perform operation
fmadd.d f23, f15, f28, f12, rdn # perform operation
fmadd.d f23, f15, f28, f12, rmm # perform operation
fmadd.d f23, f15, f28, f12, rne # perform operation
fmadd.d f23, f15, f28, f12, rtz # perform operation
fmadd.d f23, f15, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f15, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x22, 0x769d29d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x9c50d426 # load x3 with 32 MSBs 0x000000009c50d426
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c50d426
sw x3, 0(x2) # store x3 (0x9c50d426) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009c50d426 from memory into f7
fmadd.d f22, f24, f14, f7, dyn # perform operation
fmadd.d f22, f24, f14, f7, rdn # perform operation
fmadd.d f22, f24, f14, f7, rmm # perform operation
fmadd.d f22, f24, f14, f7, rne # perform operation
fmadd.d f22, f24, f14, f7, rtz # perform operation
fmadd.d f22, f24, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f24, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f24, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f24, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f24, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f24, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x25, 0x29786f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0xb06e1bae # load x3 with 32 MSBs 0x00000000b06e1bae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b06e1bae
sw x3, 0(x2) # store x3 (0xb06e1bae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b06e1bae from memory into f2
fmadd.d f25, f31, f22, f2, dyn # perform operation
fmadd.d f25, f31, f22, f2, rdn # perform operation
fmadd.d f25, f31, f22, f2, rmm # perform operation
fmadd.d f25, f31, f22, f2, rne # perform operation
fmadd.d f25, f31, f22, f2, rtz # perform operation
fmadd.d f25, f31, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f31, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f31, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f31, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f31, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f31, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x22, 0xa8d01306 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0x35909acf # load x3 with 32 MSBs 0x0000000035909acf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035909acf
sw x3, 0(x2) # store x3 (0x35909acf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000035909acf from memory into f13
fmadd.d f22, f30, f20, f13, dyn # perform operation
fmadd.d f22, f30, f20, f13, rdn # perform operation
fmadd.d f22, f30, f20, f13, rmm # perform operation
fmadd.d f22, f30, f20, f13, rne # perform operation
fmadd.d f22, f30, f20, f13, rtz # perform operation
fmadd.d f22, f30, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f30, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x1, 0x5e246ba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0xb8b5c21e # load x3 with 32 MSBs 0x00000000b8b5c21e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8b5c21e
sw x3, 0(x2) # store x3 (0xb8b5c21e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b8b5c21e from memory into f3
fmadd.d f1, f18, f29, f3, dyn # perform operation
fmadd.d f1, f18, f29, f3, rdn # perform operation
fmadd.d f1, f18, f29, f3, rmm # perform operation
fmadd.d f1, f18, f29, f3, rne # perform operation
fmadd.d f1, f18, f29, f3, rtz # perform operation
fmadd.d f1, f18, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f18, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f18, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f18, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f18, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f18, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x3, 0xb552662d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0xd6a518d1 # load x3 with 32 MSBs 0x00000000d6a518d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6a518d1
sw x3, 0(x2) # store x3 (0xd6a518d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d6a518d1 from memory into f2
fmadd.d f3, f27, f29, f2, dyn # perform operation
fmadd.d f3, f27, f29, f2, rdn # perform operation
fmadd.d f3, f27, f29, f2, rmm # perform operation
fmadd.d f3, f27, f29, f2, rne # perform operation
fmadd.d f3, f27, f29, f2, rtz # perform operation
fmadd.d f3, f27, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f27, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x27, 0x16e04248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xcd17e14d # load x3 with 32 MSBs 0x00000000cd17e14d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd17e14d
sw x3, 0(x2) # store x3 (0xcd17e14d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000cd17e14d from memory into f22
fmadd.d f27, f25, f15, f22, dyn # perform operation
fmadd.d f27, f25, f15, f22, rdn # perform operation
fmadd.d f27, f25, f15, f22, rmm # perform operation
fmadd.d f27, f25, f15, f22, rne # perform operation
fmadd.d f27, f25, f15, f22, rtz # perform operation
fmadd.d f27, f25, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f25, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x5, 0x4a95f988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x17ed2cb2 # load x3 with 32 MSBs 0x0000000017ed2cb2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017ed2cb2
sw x3, 0(x2) # store x3 (0x17ed2cb2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000017ed2cb2 from memory into f13
fmadd.d f5, f9, f8, f13, dyn # perform operation
fmadd.d f5, f9, f8, f13, rdn # perform operation
fmadd.d f5, f9, f8, f13, rmm # perform operation
fmadd.d f5, f9, f8, f13, rne # perform operation
fmadd.d f5, f9, f8, f13, rtz # perform operation
fmadd.d f5, f9, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f9, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f9, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x21, 0x5e3f8fb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x33d973f5 # load x3 with 32 MSBs 0x0000000033d973f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033d973f5
sw x3, 0(x2) # store x3 (0x33d973f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000033d973f5 from memory into f8
fmadd.d f21, f6, f5, f8, dyn # perform operation
fmadd.d f21, f6, f5, f8, rdn # perform operation
fmadd.d f21, f6, f5, f8, rmm # perform operation
fmadd.d f21, f6, f5, f8, rne # perform operation
fmadd.d f21, f6, f5, f8, rtz # perform operation
fmadd.d f21, f6, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f6, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f6, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f6, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f6, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f6, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x4, 0x7db542fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x9d4340e5 # load x3 with 32 MSBs 0x000000009d4340e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d4340e5
sw x3, 0(x2) # store x3 (0x9d4340e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000009d4340e5 from memory into f16
fmadd.d f4, f23, f20, f16, dyn # perform operation
fmadd.d f4, f23, f20, f16, rdn # perform operation
fmadd.d f4, f23, f20, f16, rmm # perform operation
fmadd.d f4, f23, f20, f16, rne # perform operation
fmadd.d f4, f23, f20, f16, rtz # perform operation
fmadd.d f4, f23, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f23, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x6, 0x736ba85c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0xce503245 # load x3 with 32 MSBs 0x00000000ce503245
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ce503245
sw x3, 0(x2) # store x3 (0xce503245) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000ce503245 from memory into f25
fmadd.d f6, f27, f12, f25, dyn # perform operation
fmadd.d f6, f27, f12, f25, rdn # perform operation
fmadd.d f6, f27, f12, f25, rmm # perform operation
fmadd.d f6, f27, f12, f25, rne # perform operation
fmadd.d f6, f27, f12, f25, rtz # perform operation
fmadd.d f6, f27, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f27, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x14, 0xc4f77234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0xfaecf00a # load x3 with 32 MSBs 0x00000000faecf00a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000faecf00a
sw x3, 0(x2) # store x3 (0xfaecf00a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000faecf00a from memory into f4
fmadd.d f14, f10, f22, f4, dyn # perform operation
fmadd.d f14, f10, f22, f4, rdn # perform operation
fmadd.d f14, f10, f22, f4, rmm # perform operation
fmadd.d f14, f10, f22, f4, rne # perform operation
fmadd.d f14, f10, f22, f4, rtz # perform operation
fmadd.d f14, f10, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f10, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x21, 0xa7b1e804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0xc22ef4f0 # load x3 with 32 MSBs 0x00000000c22ef4f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c22ef4f0
sw x3, 0(x2) # store x3 (0xc22ef4f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c22ef4f0 from memory into f23
fmadd.d f21, f3, f27, f23, dyn # perform operation
fmadd.d f21, f3, f27, f23, rdn # perform operation
fmadd.d f21, f3, f27, f23, rmm # perform operation
fmadd.d f21, f3, f27, f23, rne # perform operation
fmadd.d f21, f3, f27, f23, rtz # perform operation
fmadd.d f21, f3, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f3, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x29, 0x4470c103 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x687e197a # load x3 with 32 MSBs 0x00000000687e197a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000687e197a
sw x3, 0(x2) # store x3 (0x687e197a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000687e197a from memory into f28
fmadd.d f29, f22, f6, f28, dyn # perform operation
fmadd.d f29, f22, f6, f28, rdn # perform operation
fmadd.d f29, f22, f6, f28, rmm # perform operation
fmadd.d f29, f22, f6, f28, rne # perform operation
fmadd.d f29, f22, f6, f28, rtz # perform operation
fmadd.d f29, f22, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f22, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f22, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x12, 0x2ebf670a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x68ca3e5c # load x3 with 32 MSBs 0x0000000068ca3e5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068ca3e5c
sw x3, 0(x2) # store x3 (0x68ca3e5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000068ca3e5c from memory into f24
fmadd.d f12, f31, f18, f24, dyn # perform operation
fmadd.d f12, f31, f18, f24, rdn # perform operation
fmadd.d f12, f31, f18, f24, rmm # perform operation
fmadd.d f12, f31, f18, f24, rne # perform operation
fmadd.d f12, f31, f18, f24, rtz # perform operation
fmadd.d f12, f31, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f31, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x6, 0x26301ef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0x60851b25 # load x3 with 32 MSBs 0x0000000060851b25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060851b25
sw x3, 0(x2) # store x3 (0x60851b25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000060851b25 from memory into f29
fmadd.d f6, f22, f2, f29, dyn # perform operation
fmadd.d f6, f22, f2, f29, rdn # perform operation
fmadd.d f6, f22, f2, f29, rmm # perform operation
fmadd.d f6, f22, f2, f29, rne # perform operation
fmadd.d f6, f22, f2, f29, rtz # perform operation
fmadd.d f6, f22, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f22, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x2, 0xbf2e9873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0x190f193f # load x3 with 32 MSBs 0x00000000190f193f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000190f193f
sw x3, 0(x2) # store x3 (0x190f193f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000190f193f from memory into f18
fmadd.d f2, f11, f7, f18, dyn # perform operation
fmadd.d f2, f11, f7, f18, rdn # perform operation
fmadd.d f2, f11, f7, f18, rmm # perform operation
fmadd.d f2, f11, f7, f18, rne # perform operation
fmadd.d f2, f11, f7, f18, rtz # perform operation
fmadd.d f2, f11, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f11, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f11, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f11, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f11, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f11, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x12, 0x493aa14f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x7d36098c # load x3 with 32 MSBs 0x000000007d36098c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d36098c
sw x3, 0(x2) # store x3 (0x7d36098c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000007d36098c from memory into f30
fmadd.d f12, f28, f2, f30, dyn # perform operation
fmadd.d f12, f28, f2, f30, rdn # perform operation
fmadd.d f12, f28, f2, f30, rmm # perform operation
fmadd.d f12, f28, f2, f30, rne # perform operation
fmadd.d f12, f28, f2, f30, rtz # perform operation
fmadd.d f12, f28, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f28, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f28, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x30, 0xc82b1899 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0xaa96dbdc # load x3 with 32 MSBs 0x00000000aa96dbdc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa96dbdc
sw x3, 0(x2) # store x3 (0xaa96dbdc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000aa96dbdc from memory into f5
fmadd.d f30, f10, f20, f5, dyn # perform operation
fmadd.d f30, f10, f20, f5, rdn # perform operation
fmadd.d f30, f10, f20, f5, rmm # perform operation
fmadd.d f30, f10, f20, f5, rne # perform operation
fmadd.d f30, f10, f20, f5, rtz # perform operation
fmadd.d f30, f10, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f10, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f10, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f10, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f10, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f10, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x2, 0x6e8effb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x1a46f717 # load x3 with 32 MSBs 0x000000001a46f717
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a46f717
sw x3, 0(x2) # store x3 (0x1a46f717) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000001a46f717 from memory into f18
fmadd.d f2, f17, f4, f18, dyn # perform operation
fmadd.d f2, f17, f4, f18, rdn # perform operation
fmadd.d f2, f17, f4, f18, rmm # perform operation
fmadd.d f2, f17, f4, f18, rne # perform operation
fmadd.d f2, f17, f4, f18, rtz # perform operation
fmadd.d f2, f17, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f17, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f17, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f17, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f17, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f17, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x7, 0x41b3395e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x72c9d253 # load x3 with 32 MSBs 0x0000000072c9d253
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072c9d253
sw x3, 0(x2) # store x3 (0x72c9d253) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000072c9d253 from memory into f22
fmadd.d f7, f24, f31, f22, dyn # perform operation
fmadd.d f7, f24, f31, f22, rdn # perform operation
fmadd.d f7, f24, f31, f22, rmm # perform operation
fmadd.d f7, f24, f31, f22, rne # perform operation
fmadd.d f7, f24, f31, f22, rtz # perform operation
fmadd.d f7, f24, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f24, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f24, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x12, 0x58865752 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x3a4876c0 # load x3 with 32 MSBs 0x000000003a4876c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a4876c0
sw x3, 0(x2) # store x3 (0x3a4876c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003a4876c0 from memory into f23
fmadd.d f12, f30, f18, f23, dyn # perform operation
fmadd.d f12, f30, f18, f23, rdn # perform operation
fmadd.d f12, f30, f18, f23, rmm # perform operation
fmadd.d f12, f30, f18, f23, rne # perform operation
fmadd.d f12, f30, f18, f23, rtz # perform operation
fmadd.d f12, f30, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f30, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f30, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f30, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f30, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f30, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x12, 0x1c6df626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x1ed86bf1 # load x3 with 32 MSBs 0x000000001ed86bf1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ed86bf1
sw x3, 0(x2) # store x3 (0x1ed86bf1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001ed86bf1 from memory into f25
fmadd.d f12, f1, f27, f25, dyn # perform operation
fmadd.d f12, f1, f27, f25, rdn # perform operation
fmadd.d f12, f1, f27, f25, rmm # perform operation
fmadd.d f12, f1, f27, f25, rne # perform operation
fmadd.d f12, f1, f27, f25, rtz # perform operation
fmadd.d f12, f1, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f1, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f1, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x5, 0x1ad4f3db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x7054a4f4 # load x3 with 32 MSBs 0x000000007054a4f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007054a4f4
sw x3, 0(x2) # store x3 (0x7054a4f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000007054a4f4 from memory into f26
fmadd.d f5, f2, f10, f26, dyn # perform operation
fmadd.d f5, f2, f10, f26, rdn # perform operation
fmadd.d f5, f2, f10, f26, rmm # perform operation
fmadd.d f5, f2, f10, f26, rne # perform operation
fmadd.d f5, f2, f10, f26, rtz # perform operation
fmadd.d f5, f2, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f2, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x21, 0x971c56b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0x0c42e810 # load x3 with 32 MSBs 0x000000000c42e810
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c42e810
sw x3, 0(x2) # store x3 (0x0c42e810) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000c42e810 from memory into f7
fmadd.d f21, f15, f12, f7, dyn # perform operation
fmadd.d f21, f15, f12, f7, rdn # perform operation
fmadd.d f21, f15, f12, f7, rmm # perform operation
fmadd.d f21, f15, f12, f7, rne # perform operation
fmadd.d f21, f15, f12, f7, rtz # perform operation
fmadd.d f21, f15, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f15, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f15, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f15, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f15, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f15, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x13, 0x6f923588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0xc800595c # load x3 with 32 MSBs 0x00000000c800595c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c800595c
sw x3, 0(x2) # store x3 (0xc800595c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c800595c from memory into f9
fmadd.d f13, f7, f17, f9, dyn # perform operation
fmadd.d f13, f7, f17, f9, rdn # perform operation
fmadd.d f13, f7, f17, f9, rmm # perform operation
fmadd.d f13, f7, f17, f9, rne # perform operation
fmadd.d f13, f7, f17, f9, rtz # perform operation
fmadd.d f13, f7, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f7, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x11, 0x58d38e00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0xf83e2330 # load x3 with 32 MSBs 0x00000000f83e2330
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f83e2330
sw x3, 0(x2) # store x3 (0xf83e2330) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f83e2330 from memory into f27
fmadd.d f11, f17, f1, f27, dyn # perform operation
fmadd.d f11, f17, f1, f27, rdn # perform operation
fmadd.d f11, f17, f1, f27, rmm # perform operation
fmadd.d f11, f17, f1, f27, rne # perform operation
fmadd.d f11, f17, f1, f27, rtz # perform operation
fmadd.d f11, f17, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f17, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x12, 0xcfd8ef62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x38a920e3 # load x3 with 32 MSBs 0x0000000038a920e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038a920e3
sw x3, 0(x2) # store x3 (0x38a920e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000038a920e3 from memory into f11
fmadd.d f12, f7, f16, f11, dyn # perform operation
fmadd.d f12, f7, f16, f11, rdn # perform operation
fmadd.d f12, f7, f16, f11, rmm # perform operation
fmadd.d f12, f7, f16, f11, rne # perform operation
fmadd.d f12, f7, f16, f11, rtz # perform operation
fmadd.d f12, f7, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f7, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f7, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f7, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f7, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f7, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x8, 0xe79a4ad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x5adcdeb6 # load x3 with 32 MSBs 0x000000005adcdeb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005adcdeb6
sw x3, 0(x2) # store x3 (0x5adcdeb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005adcdeb6 from memory into f7
fmadd.d f8, f9, f29, f7, dyn # perform operation
fmadd.d f8, f9, f29, f7, rdn # perform operation
fmadd.d f8, f9, f29, f7, rmm # perform operation
fmadd.d f8, f9, f29, f7, rne # perform operation
fmadd.d f8, f9, f29, f7, rtz # perform operation
fmadd.d f8, f9, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f9, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f9, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f9, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f9, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f9, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x7, 0x390c9f1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0xd91f84ef # load x3 with 32 MSBs 0x00000000d91f84ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d91f84ef
sw x3, 0(x2) # store x3 (0xd91f84ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d91f84ef from memory into f16
fmadd.d f7, f25, f3, f16, dyn # perform operation
fmadd.d f7, f25, f3, f16, rdn # perform operation
fmadd.d f7, f25, f3, f16, rmm # perform operation
fmadd.d f7, f25, f3, f16, rne # perform operation
fmadd.d f7, f25, f3, f16, rtz # perform operation
fmadd.d f7, f25, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f25, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x8, 0x37d22fdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x001a3f81 # load x3 with 32 MSBs 0x00000000001a3f81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000001a3f81
sw x3, 0(x2) # store x3 (0x001a3f81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000001a3f81 from memory into f14
fmadd.d f8, f18, f6, f14, dyn # perform operation
fmadd.d f8, f18, f6, f14, rdn # perform operation
fmadd.d f8, f18, f6, f14, rmm # perform operation
fmadd.d f8, f18, f6, f14, rne # perform operation
fmadd.d f8, f18, f6, f14, rtz # perform operation
fmadd.d f8, f18, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f18, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f18, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x27, 0xa11f65ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xeb159f09 # load x3 with 32 MSBs 0x00000000eb159f09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb159f09
sw x3, 0(x2) # store x3 (0xeb159f09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000eb159f09 from memory into f25
fmadd.d f27, f19, f31, f25, dyn # perform operation
fmadd.d f27, f19, f31, f25, rdn # perform operation
fmadd.d f27, f19, f31, f25, rmm # perform operation
fmadd.d f27, f19, f31, f25, rne # perform operation
fmadd.d f27, f19, f31, f25, rtz # perform operation
fmadd.d f27, f19, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f19, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f19, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x27, 0x2904a2a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0xdcf8dae9 # load x3 with 32 MSBs 0x00000000dcf8dae9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dcf8dae9
sw x3, 0(x2) # store x3 (0xdcf8dae9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000dcf8dae9 from memory into f2
fmadd.d f27, f16, f19, f2, dyn # perform operation
fmadd.d f27, f16, f19, f2, rdn # perform operation
fmadd.d f27, f16, f19, f2, rmm # perform operation
fmadd.d f27, f16, f19, f2, rne # perform operation
fmadd.d f27, f16, f19, f2, rtz # perform operation
fmadd.d f27, f16, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f16, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x26, 0xd5569e5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x8eb08f7d # load x3 with 32 MSBs 0x000000008eb08f7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008eb08f7d
sw x3, 0(x2) # store x3 (0x8eb08f7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000008eb08f7d from memory into f3
fmadd.d f26, f28, f8, f3, dyn # perform operation
fmadd.d f26, f28, f8, f3, rdn # perform operation
fmadd.d f26, f28, f8, f3, rmm # perform operation
fmadd.d f26, f28, f8, f3, rne # perform operation
fmadd.d f26, f28, f8, f3, rtz # perform operation
fmadd.d f26, f28, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f28, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x25, 0xe9f3db32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x83d3da9c # load x3 with 32 MSBs 0x0000000083d3da9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083d3da9c
sw x3, 0(x2) # store x3 (0x83d3da9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000083d3da9c from memory into f17
fmadd.d f25, f4, f8, f17, dyn # perform operation
fmadd.d f25, f4, f8, f17, rdn # perform operation
fmadd.d f25, f4, f8, f17, rmm # perform operation
fmadd.d f25, f4, f8, f17, rne # perform operation
fmadd.d f25, f4, f8, f17, rtz # perform operation
fmadd.d f25, f4, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f4, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f4, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x21, 0xaa6bb4f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x260069f3 # load x3 with 32 MSBs 0x00000000260069f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000260069f3
sw x3, 0(x2) # store x3 (0x260069f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000260069f3 from memory into f14
fmadd.d f21, f16, f24, f14, dyn # perform operation
fmadd.d f21, f16, f24, f14, rdn # perform operation
fmadd.d f21, f16, f24, f14, rmm # perform operation
fmadd.d f21, f16, f24, f14, rne # perform operation
fmadd.d f21, f16, f24, f14, rtz # perform operation
fmadd.d f21, f16, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f16, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x2, 0xfa023a61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x63924b05 # load x3 with 32 MSBs 0x0000000063924b05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063924b05
sw x3, 0(x2) # store x3 (0x63924b05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000063924b05 from memory into f8
fmadd.d f2, f10, f30, f8, dyn # perform operation
fmadd.d f2, f10, f30, f8, rdn # perform operation
fmadd.d f2, f10, f30, f8, rmm # perform operation
fmadd.d f2, f10, f30, f8, rne # perform operation
fmadd.d f2, f10, f30, f8, rtz # perform operation
fmadd.d f2, f10, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f10, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x10, 0xa91a4d3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x18cc5551 # load x3 with 32 MSBs 0x0000000018cc5551
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018cc5551
sw x3, 0(x2) # store x3 (0x18cc5551) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000018cc5551 from memory into f3
fmadd.d f10, f25, f7, f3, dyn # perform operation
fmadd.d f10, f25, f7, f3, rdn # perform operation
fmadd.d f10, f25, f7, f3, rmm # perform operation
fmadd.d f10, f25, f7, f3, rne # perform operation
fmadd.d f10, f25, f7, f3, rtz # perform operation
fmadd.d f10, f25, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f25, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x13, 0x53914ff1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x3448ca5b # load x3 with 32 MSBs 0x000000003448ca5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003448ca5b
sw x3, 0(x2) # store x3 (0x3448ca5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003448ca5b from memory into f31
fmadd.d f13, f12, f1, f31, dyn # perform operation
fmadd.d f13, f12, f1, f31, rdn # perform operation
fmadd.d f13, f12, f1, f31, rmm # perform operation
fmadd.d f13, f12, f1, f31, rne # perform operation
fmadd.d f13, f12, f1, f31, rtz # perform operation
fmadd.d f13, f12, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f12, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f12, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f12, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f12, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f12, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x24, 0x9fffe06c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x3a4e4058 # load x3 with 32 MSBs 0x000000003a4e4058
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a4e4058
sw x3, 0(x2) # store x3 (0x3a4e4058) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003a4e4058 from memory into f22
fmadd.d f24, f2, f1, f22, dyn # perform operation
fmadd.d f24, f2, f1, f22, rdn # perform operation
fmadd.d f24, f2, f1, f22, rmm # perform operation
fmadd.d f24, f2, f1, f22, rne # perform operation
fmadd.d f24, f2, f1, f22, rtz # perform operation
fmadd.d f24, f2, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f2, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x27, 0x293ad879 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x2196ab48 # load x3 with 32 MSBs 0x000000002196ab48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002196ab48
sw x3, 0(x2) # store x3 (0x2196ab48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000002196ab48 from memory into f15
fmadd.d f27, f10, f9, f15, dyn # perform operation
fmadd.d f27, f10, f9, f15, rdn # perform operation
fmadd.d f27, f10, f9, f15, rmm # perform operation
fmadd.d f27, f10, f9, f15, rne # perform operation
fmadd.d f27, f10, f9, f15, rtz # perform operation
fmadd.d f27, f10, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f10, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x3, 0x9fa6208a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0x4d5998fa # load x3 with 32 MSBs 0x000000004d5998fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d5998fa
sw x3, 0(x2) # store x3 (0x4d5998fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004d5998fa from memory into f15
fmadd.d f3, f31, f28, f15, dyn # perform operation
fmadd.d f3, f31, f28, f15, rdn # perform operation
fmadd.d f3, f31, f28, f15, rmm # perform operation
fmadd.d f3, f31, f28, f15, rne # perform operation
fmadd.d f3, f31, f28, f15, rtz # perform operation
fmadd.d f3, f31, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f31, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f31, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x3, 0x141398df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x2d117e59 # load x3 with 32 MSBs 0x000000002d117e59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d117e59
sw x3, 0(x2) # store x3 (0x2d117e59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000002d117e59 from memory into f9
fmadd.d f3, f25, f19, f9, dyn # perform operation
fmadd.d f3, f25, f19, f9, rdn # perform operation
fmadd.d f3, f25, f19, f9, rmm # perform operation
fmadd.d f3, f25, f19, f9, rne # perform operation
fmadd.d f3, f25, f19, f9, rtz # perform operation
fmadd.d f3, f25, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f25, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x16, 0xc75f2c94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0x0268a591 # load x3 with 32 MSBs 0x000000000268a591
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000268a591
sw x3, 0(x2) # store x3 (0x0268a591) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000268a591 from memory into f5
fmadd.d f16, f11, f9, f5, dyn # perform operation
fmadd.d f16, f11, f9, f5, rdn # perform operation
fmadd.d f16, f11, f9, f5, rmm # perform operation
fmadd.d f16, f11, f9, f5, rne # perform operation
fmadd.d f16, f11, f9, f5, rtz # perform operation
fmadd.d f16, f11, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f11, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x29, 0x1ff0bd89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x91da8b6a # load x3 with 32 MSBs 0x0000000091da8b6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091da8b6a
sw x3, 0(x2) # store x3 (0x91da8b6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000091da8b6a from memory into f30
fmadd.d f29, f3, f9, f30, dyn # perform operation
fmadd.d f29, f3, f9, f30, rdn # perform operation
fmadd.d f29, f3, f9, f30, rmm # perform operation
fmadd.d f29, f3, f9, f30, rne # perform operation
fmadd.d f29, f3, f9, f30, rtz # perform operation
fmadd.d f29, f3, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f3, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f3, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x28, 0x51b63c4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x98853481 # load x3 with 32 MSBs 0x0000000098853481
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098853481
sw x3, 0(x2) # store x3 (0x98853481) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000098853481 from memory into f17
fmadd.d f28, f31, f19, f17, dyn # perform operation
fmadd.d f28, f31, f19, f17, rdn # perform operation
fmadd.d f28, f31, f19, f17, rmm # perform operation
fmadd.d f28, f31, f19, f17, rne # perform operation
fmadd.d f28, f31, f19, f17, rtz # perform operation
fmadd.d f28, f31, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f31, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f31, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x24, 0xdf3b8ab4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x1393681e # load x3 with 32 MSBs 0x000000001393681e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001393681e
sw x3, 0(x2) # store x3 (0x1393681e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001393681e from memory into f8
fmadd.d f24, f17, f16, f8, dyn # perform operation
fmadd.d f24, f17, f16, f8, rdn # perform operation
fmadd.d f24, f17, f16, f8, rmm # perform operation
fmadd.d f24, f17, f16, f8, rne # perform operation
fmadd.d f24, f17, f16, f8, rtz # perform operation
fmadd.d f24, f17, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f17, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x11, 0xecb8f6ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xbe2531f7 # load x3 with 32 MSBs 0x00000000be2531f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be2531f7
sw x3, 0(x2) # store x3 (0xbe2531f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000be2531f7 from memory into f31
fmadd.d f11, f2, f1, f31, dyn # perform operation
fmadd.d f11, f2, f1, f31, rdn # perform operation
fmadd.d f11, f2, f1, f31, rmm # perform operation
fmadd.d f11, f2, f1, f31, rne # perform operation
fmadd.d f11, f2, f1, f31, rtz # perform operation
fmadd.d f11, f2, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f2, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x29, 0xcb508830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x3327360a # load x3 with 32 MSBs 0x000000003327360a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003327360a
sw x3, 0(x2) # store x3 (0x3327360a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003327360a from memory into f20
fmadd.d f29, f11, f3, f20, dyn # perform operation
fmadd.d f29, f11, f3, f20, rdn # perform operation
fmadd.d f29, f11, f3, f20, rmm # perform operation
fmadd.d f29, f11, f3, f20, rne # perform operation
fmadd.d f29, f11, f3, f20, rtz # perform operation
fmadd.d f29, f11, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f11, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x5, 0x7d5a9609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0xab80338b # load x3 with 32 MSBs 0x00000000ab80338b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab80338b
sw x3, 0(x2) # store x3 (0xab80338b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ab80338b from memory into f31
fmadd.d f5, f12, f10, f31, dyn # perform operation
fmadd.d f5, f12, f10, f31, rdn # perform operation
fmadd.d f5, f12, f10, f31, rmm # perform operation
fmadd.d f5, f12, f10, f31, rne # perform operation
fmadd.d f5, f12, f10, f31, rtz # perform operation
fmadd.d f5, f12, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f12, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f12, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x16, 0x3f3550d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0xf8a4d62d # load x3 with 32 MSBs 0x00000000f8a4d62d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8a4d62d
sw x3, 0(x2) # store x3 (0xf8a4d62d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f8a4d62d from memory into f7
fmadd.d f16, f15, f17, f7, dyn # perform operation
fmadd.d f16, f15, f17, f7, rdn # perform operation
fmadd.d f16, f15, f17, f7, rmm # perform operation
fmadd.d f16, f15, f17, f7, rne # perform operation
fmadd.d f16, f15, f17, f7, rtz # perform operation
fmadd.d f16, f15, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f15, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f15, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x29, 0x498c1784 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0xf54413b0 # load x3 with 32 MSBs 0x00000000f54413b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f54413b0
sw x3, 0(x2) # store x3 (0xf54413b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f54413b0 from memory into f2
fmadd.d f29, f28, f14, f2, dyn # perform operation
fmadd.d f29, f28, f14, f2, rdn # perform operation
fmadd.d f29, f28, f14, f2, rmm # perform operation
fmadd.d f29, f28, f14, f2, rne # perform operation
fmadd.d f29, f28, f14, f2, rtz # perform operation
fmadd.d f29, f28, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f28, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f28, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f28, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f28, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f28, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x26, 0x75f4263b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0xf15b35c1 # load x3 with 32 MSBs 0x00000000f15b35c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f15b35c1
sw x3, 0(x2) # store x3 (0xf15b35c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f15b35c1 from memory into f10
fmadd.d f26, f31, f21, f10, dyn # perform operation
fmadd.d f26, f31, f21, f10, rdn # perform operation
fmadd.d f26, f31, f21, f10, rmm # perform operation
fmadd.d f26, f31, f21, f10, rne # perform operation
fmadd.d f26, f31, f21, f10, rtz # perform operation
fmadd.d f26, f31, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f31, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x21, 0x6f97705b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0xcb938f85 # load x3 with 32 MSBs 0x00000000cb938f85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb938f85
sw x3, 0(x2) # store x3 (0xcb938f85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000cb938f85 from memory into f23
fmadd.d f21, f31, f25, f23, dyn # perform operation
fmadd.d f21, f31, f25, f23, rdn # perform operation
fmadd.d f21, f31, f25, f23, rmm # perform operation
fmadd.d f21, f31, f25, f23, rne # perform operation
fmadd.d f21, f31, f25, f23, rtz # perform operation
fmadd.d f21, f31, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f31, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x21, 0x878ee597 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x8ffa9bc1 # load x3 with 32 MSBs 0x000000008ffa9bc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ffa9bc1
sw x3, 0(x2) # store x3 (0x8ffa9bc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008ffa9bc1 from memory into f17
fmadd.d f21, f13, f22, f17, dyn # perform operation
fmadd.d f21, f13, f22, f17, rdn # perform operation
fmadd.d f21, f13, f22, f17, rmm # perform operation
fmadd.d f21, f13, f22, f17, rne # perform operation
fmadd.d f21, f13, f22, f17, rtz # perform operation
fmadd.d f21, f13, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f13, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f13, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x20, 0x753843f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x51b258c1 # load x3 with 32 MSBs 0x0000000051b258c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051b258c1
sw x3, 0(x2) # store x3 (0x51b258c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000051b258c1 from memory into f23
fmadd.d f20, f14, f11, f23, dyn # perform operation
fmadd.d f20, f14, f11, f23, rdn # perform operation
fmadd.d f20, f14, f11, f23, rmm # perform operation
fmadd.d f20, f14, f11, f23, rne # perform operation
fmadd.d f20, f14, f11, f23, rtz # perform operation
fmadd.d f20, f14, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f14, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f14, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f14, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f14, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f14, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x9, 0x4dabc593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x2ec290f6 # load x3 with 32 MSBs 0x000000002ec290f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ec290f6
sw x3, 0(x2) # store x3 (0x2ec290f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002ec290f6 from memory into f29
fmadd.d f9, f6, f18, f29, dyn # perform operation
fmadd.d f9, f6, f18, f29, rdn # perform operation
fmadd.d f9, f6, f18, f29, rmm # perform operation
fmadd.d f9, f6, f18, f29, rne # perform operation
fmadd.d f9, f6, f18, f29, rtz # perform operation
fmadd.d f9, f6, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f6, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x25, 0x8ee468fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0xf8bbd169 # load x3 with 32 MSBs 0x00000000f8bbd169
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8bbd169
sw x3, 0(x2) # store x3 (0xf8bbd169) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f8bbd169 from memory into f29
fmadd.d f25, f10, f5, f29, dyn # perform operation
fmadd.d f25, f10, f5, f29, rdn # perform operation
fmadd.d f25, f10, f5, f29, rmm # perform operation
fmadd.d f25, f10, f5, f29, rne # perform operation
fmadd.d f25, f10, f5, f29, rtz # perform operation
fmadd.d f25, f10, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f10, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f10, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x18, 0x384c3000 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0xfa49ebf7 # load x3 with 32 MSBs 0x00000000fa49ebf7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa49ebf7
sw x3, 0(x2) # store x3 (0xfa49ebf7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000fa49ebf7 from memory into f16
fmadd.d f18, f28, f8, f16, dyn # perform operation
fmadd.d f18, f28, f8, f16, rdn # perform operation
fmadd.d f18, f28, f8, f16, rmm # perform operation
fmadd.d f18, f28, f8, f16, rne # perform operation
fmadd.d f18, f28, f8, f16, rtz # perform operation
fmadd.d f18, f28, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f28, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f28, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x22, 0x4df2992a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0xade32852 # load x3 with 32 MSBs 0x00000000ade32852
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ade32852
sw x3, 0(x2) # store x3 (0xade32852) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ade32852 from memory into f27
fmadd.d f22, f18, f31, f27, dyn # perform operation
fmadd.d f22, f18, f31, f27, rdn # perform operation
fmadd.d f22, f18, f31, f27, rmm # perform operation
fmadd.d f22, f18, f31, f27, rne # perform operation
fmadd.d f22, f18, f31, f27, rtz # perform operation
fmadd.d f22, f18, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f18, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f18, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f18, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f18, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f18, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x5, 0x84821675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x31ac16a9 # load x3 with 32 MSBs 0x0000000031ac16a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031ac16a9
sw x3, 0(x2) # store x3 (0x31ac16a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000031ac16a9 from memory into f24
fmadd.d f5, f11, f15, f24, dyn # perform operation
fmadd.d f5, f11, f15, f24, rdn # perform operation
fmadd.d f5, f11, f15, f24, rmm # perform operation
fmadd.d f5, f11, f15, f24, rne # perform operation
fmadd.d f5, f11, f15, f24, rtz # perform operation
fmadd.d f5, f11, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f11, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x23, 0xac8cd9c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x7557c1c0 # load x3 with 32 MSBs 0x000000007557c1c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007557c1c0
sw x3, 0(x2) # store x3 (0x7557c1c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000007557c1c0 from memory into f17
fmadd.d f23, f26, f30, f17, dyn # perform operation
fmadd.d f23, f26, f30, f17, rdn # perform operation
fmadd.d f23, f26, f30, f17, rmm # perform operation
fmadd.d f23, f26, f30, f17, rne # perform operation
fmadd.d f23, f26, f30, f17, rtz # perform operation
fmadd.d f23, f26, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f26, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f26, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x19, 0x8f8529c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x025c9607 # load x3 with 32 MSBs 0x00000000025c9607
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000025c9607
sw x3, 0(x2) # store x3 (0x025c9607) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000025c9607 from memory into f22
fmadd.d f19, f23, f27, f22, dyn # perform operation
fmadd.d f19, f23, f27, f22, rdn # perform operation
fmadd.d f19, f23, f27, f22, rmm # perform operation
fmadd.d f19, f23, f27, f22, rne # perform operation
fmadd.d f19, f23, f27, f22, rtz # perform operation
fmadd.d f19, f23, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f23, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x11, 0x563803f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x0efba7cd # load x3 with 32 MSBs 0x000000000efba7cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000efba7cd
sw x3, 0(x2) # store x3 (0x0efba7cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000efba7cd from memory into f4
fmadd.d f11, f7, f12, f4, dyn # perform operation
fmadd.d f11, f7, f12, f4, rdn # perform operation
fmadd.d f11, f7, f12, f4, rmm # perform operation
fmadd.d f11, f7, f12, f4, rne # perform operation
fmadd.d f11, f7, f12, f4, rtz # perform operation
fmadd.d f11, f7, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f7, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f7, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f7, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f7, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f7, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x5, 0x9af3ff9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0xf11de5d8 # load x3 with 32 MSBs 0x00000000f11de5d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f11de5d8
sw x3, 0(x2) # store x3 (0xf11de5d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f11de5d8 from memory into f10
fmadd.d f5, f6, f20, f10, dyn # perform operation
fmadd.d f5, f6, f20, f10, rdn # perform operation
fmadd.d f5, f6, f20, f10, rmm # perform operation
fmadd.d f5, f6, f20, f10, rne # perform operation
fmadd.d f5, f6, f20, f10, rtz # perform operation
fmadd.d f5, f6, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f6, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x7, 0x8fdd48f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xd6dabd56 # load x3 with 32 MSBs 0x00000000d6dabd56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6dabd56
sw x3, 0(x2) # store x3 (0xd6dabd56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d6dabd56 from memory into f26
fmadd.d f7, f1, f24, f26, dyn # perform operation
fmadd.d f7, f1, f24, f26, rdn # perform operation
fmadd.d f7, f1, f24, f26, rmm # perform operation
fmadd.d f7, f1, f24, f26, rne # perform operation
fmadd.d f7, f1, f24, f26, rtz # perform operation
fmadd.d f7, f1, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f1, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x31, 0x5246babd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0x529979e6 # load x3 with 32 MSBs 0x00000000529979e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000529979e6
sw x3, 0(x2) # store x3 (0x529979e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000529979e6 from memory into f17
fmadd.d f31, f1, f30, f17, dyn # perform operation
fmadd.d f31, f1, f30, f17, rdn # perform operation
fmadd.d f31, f1, f30, f17, rmm # perform operation
fmadd.d f31, f1, f30, f17, rne # perform operation
fmadd.d f31, f1, f30, f17, rtz # perform operation
fmadd.d f31, f1, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f1, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f1, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x12, 0x6cdf2324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0xba5ecc98 # load x3 with 32 MSBs 0x00000000ba5ecc98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba5ecc98
sw x3, 0(x2) # store x3 (0xba5ecc98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000ba5ecc98 from memory into f16
fmadd.d f12, f6, f3, f16, dyn # perform operation
fmadd.d f12, f6, f3, f16, rdn # perform operation
fmadd.d f12, f6, f3, f16, rmm # perform operation
fmadd.d f12, f6, f3, f16, rne # perform operation
fmadd.d f12, f6, f3, f16, rtz # perform operation
fmadd.d f12, f6, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f6, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f6, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f6, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f6, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f6, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x10, 0xe84325e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0xf6f6f1c0 # load x3 with 32 MSBs 0x00000000f6f6f1c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6f6f1c0
sw x3, 0(x2) # store x3 (0xf6f6f1c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f6f6f1c0 from memory into f23
fmadd.d f10, f9, f16, f23, dyn # perform operation
fmadd.d f10, f9, f16, f23, rdn # perform operation
fmadd.d f10, f9, f16, f23, rmm # perform operation
fmadd.d f10, f9, f16, f23, rne # perform operation
fmadd.d f10, f9, f16, f23, rtz # perform operation
fmadd.d f10, f9, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f9, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f9, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x19, 0xb03e4845 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0xfbd0448e # load x3 with 32 MSBs 0x00000000fbd0448e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbd0448e
sw x3, 0(x2) # store x3 (0xfbd0448e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fbd0448e from memory into f17
fmadd.d f19, f30, f23, f17, dyn # perform operation
fmadd.d f19, f30, f23, f17, rdn # perform operation
fmadd.d f19, f30, f23, f17, rmm # perform operation
fmadd.d f19, f30, f23, f17, rne # perform operation
fmadd.d f19, f30, f23, f17, rtz # perform operation
fmadd.d f19, f30, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f30, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x27, 0x6779c067 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x546f9317 # load x3 with 32 MSBs 0x00000000546f9317
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000546f9317
sw x3, 0(x2) # store x3 (0x546f9317) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000546f9317 from memory into f7
fmadd.d f27, f5, f15, f7, dyn # perform operation
fmadd.d f27, f5, f15, f7, rdn # perform operation
fmadd.d f27, f5, f15, f7, rmm # perform operation
fmadd.d f27, f5, f15, f7, rne # perform operation
fmadd.d f27, f5, f15, f7, rtz # perform operation
fmadd.d f27, f5, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f5, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f5, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f5, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f5, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f5, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x2, 0x30836e5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x7f3e5209 # load x3 with 32 MSBs 0x000000007f3e5209
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f3e5209
sw x3, 0(x2) # store x3 (0x7f3e5209) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000007f3e5209 from memory into f26
fmadd.d f2, f4, f19, f26, dyn # perform operation
fmadd.d f2, f4, f19, f26, rdn # perform operation
fmadd.d f2, f4, f19, f26, rmm # perform operation
fmadd.d f2, f4, f19, f26, rne # perform operation
fmadd.d f2, f4, f19, f26, rtz # perform operation
fmadd.d f2, f4, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f4, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f4, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f4, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f4, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f4, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x12, 0x18747f4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x3962c106 # load x3 with 32 MSBs 0x000000003962c106
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003962c106
sw x3, 0(x2) # store x3 (0x3962c106) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003962c106 from memory into f21
fmadd.d f12, f24, f27, f21, dyn # perform operation
fmadd.d f12, f24, f27, f21, rdn # perform operation
fmadd.d f12, f24, f27, f21, rmm # perform operation
fmadd.d f12, f24, f27, f21, rne # perform operation
fmadd.d f12, f24, f27, f21, rtz # perform operation
fmadd.d f12, f24, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f24, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x24, 0xe2e0c777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0xa3f2a3b5 # load x3 with 32 MSBs 0x00000000a3f2a3b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3f2a3b5
sw x3, 0(x2) # store x3 (0xa3f2a3b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a3f2a3b5 from memory into f20
fmadd.d f24, f23, f16, f20, dyn # perform operation
fmadd.d f24, f23, f16, f20, rdn # perform operation
fmadd.d f24, f23, f16, f20, rmm # perform operation
fmadd.d f24, f23, f16, f20, rne # perform operation
fmadd.d f24, f23, f16, f20, rtz # perform operation
fmadd.d f24, f23, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f23, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x17, 0xd2d0cfd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x647be1c2 # load x3 with 32 MSBs 0x00000000647be1c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000647be1c2
sw x3, 0(x2) # store x3 (0x647be1c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000647be1c2 from memory into f4
fmadd.d f17, f16, f31, f4, dyn # perform operation
fmadd.d f17, f16, f31, f4, rdn # perform operation
fmadd.d f17, f16, f31, f4, rmm # perform operation
fmadd.d f17, f16, f31, f4, rne # perform operation
fmadd.d f17, f16, f31, f4, rtz # perform operation
fmadd.d f17, f16, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f16, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x16, 0x733ef8ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x319b0eba # load x3 with 32 MSBs 0x00000000319b0eba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000319b0eba
sw x3, 0(x2) # store x3 (0x319b0eba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000319b0eba from memory into f1
fmadd.d f16, f7, f20, f1, dyn # perform operation
fmadd.d f16, f7, f20, f1, rdn # perform operation
fmadd.d f16, f7, f20, f1, rmm # perform operation
fmadd.d f16, f7, f20, f1, rne # perform operation
fmadd.d f16, f7, f20, f1, rtz # perform operation
fmadd.d f16, f7, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f7, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f7, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x10, 0xf98c7973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0xb629653a # load x3 with 32 MSBs 0x00000000b629653a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b629653a
sw x3, 0(x2) # store x3 (0xb629653a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b629653a from memory into f26
fmadd.d f10, f1, f23, f26, dyn # perform operation
fmadd.d f10, f1, f23, f26, rdn # perform operation
fmadd.d f10, f1, f23, f26, rmm # perform operation
fmadd.d f10, f1, f23, f26, rne # perform operation
fmadd.d f10, f1, f23, f26, rtz # perform operation
fmadd.d f10, f1, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f1, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f1, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x26, 0xa56e74b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x230d5dec # load x3 with 32 MSBs 0x00000000230d5dec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000230d5dec
sw x3, 0(x2) # store x3 (0x230d5dec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000230d5dec from memory into f21
fmadd.d f26, f2, f7, f21, dyn # perform operation
fmadd.d f26, f2, f7, f21, rdn # perform operation
fmadd.d f26, f2, f7, f21, rmm # perform operation
fmadd.d f26, f2, f7, f21, rne # perform operation
fmadd.d f26, f2, f7, f21, rtz # perform operation
fmadd.d f26, f2, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f2, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f2, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x10, 0x192e7ab7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0xd2904425 # load x3 with 32 MSBs 0x00000000d2904425
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2904425
sw x3, 0(x2) # store x3 (0xd2904425) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000d2904425 from memory into f28
fmadd.d f10, f18, f5, f28, dyn # perform operation
fmadd.d f10, f18, f5, f28, rdn # perform operation
fmadd.d f10, f18, f5, f28, rmm # perform operation
fmadd.d f10, f18, f5, f28, rne # perform operation
fmadd.d f10, f18, f5, f28, rtz # perform operation
fmadd.d f10, f18, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f18, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x9, 0x6b613704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x2c0dc78c # load x3 with 32 MSBs 0x000000002c0dc78c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c0dc78c
sw x3, 0(x2) # store x3 (0x2c0dc78c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002c0dc78c from memory into f30
fmadd.d f9, f27, f6, f30, dyn # perform operation
fmadd.d f9, f27, f6, f30, rdn # perform operation
fmadd.d f9, f27, f6, f30, rmm # perform operation
fmadd.d f9, f27, f6, f30, rne # perform operation
fmadd.d f9, f27, f6, f30, rtz # perform operation
fmadd.d f9, f27, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f27, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x3, 0xc10068ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x53e95734 # load x3 with 32 MSBs 0x0000000053e95734
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053e95734
sw x3, 0(x2) # store x3 (0x53e95734) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000053e95734 from memory into f16
fmadd.d f3, f12, f13, f16, dyn # perform operation
fmadd.d f3, f12, f13, f16, rdn # perform operation
fmadd.d f3, f12, f13, f16, rmm # perform operation
fmadd.d f3, f12, f13, f16, rne # perform operation
fmadd.d f3, f12, f13, f16, rtz # perform operation
fmadd.d f3, f12, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f12, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f12, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x25, 0x55e66f82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0x7ed1ad0d # load x3 with 32 MSBs 0x000000007ed1ad0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ed1ad0d
sw x3, 0(x2) # store x3 (0x7ed1ad0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007ed1ad0d from memory into f20
fmadd.d f25, f1, f28, f20, dyn # perform operation
fmadd.d f25, f1, f28, f20, rdn # perform operation
fmadd.d f25, f1, f28, f20, rmm # perform operation
fmadd.d f25, f1, f28, f20, rne # perform operation
fmadd.d f25, f1, f28, f20, rtz # perform operation
fmadd.d f25, f1, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f1, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f1, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x25, 0x6816a81a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x2d641408 # load x3 with 32 MSBs 0x000000002d641408
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d641408
sw x3, 0(x2) # store x3 (0x2d641408) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000002d641408 from memory into f24
fmadd.d f25, f18, f2, f24, dyn # perform operation
fmadd.d f25, f18, f2, f24, rdn # perform operation
fmadd.d f25, f18, f2, f24, rmm # perform operation
fmadd.d f25, f18, f2, f24, rne # perform operation
fmadd.d f25, f18, f2, f24, rtz # perform operation
fmadd.d f25, f18, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f18, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f18, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f18, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f18, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f18, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x18, 0xc0bb21f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x41227d01 # load x3 with 32 MSBs 0x0000000041227d01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041227d01
sw x3, 0(x2) # store x3 (0x41227d01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000041227d01 from memory into f7
fmadd.d f18, f10, f2, f7, dyn # perform operation
fmadd.d f18, f10, f2, f7, rdn # perform operation
fmadd.d f18, f10, f2, f7, rmm # perform operation
fmadd.d f18, f10, f2, f7, rne # perform operation
fmadd.d f18, f10, f2, f7, rtz # perform operation
fmadd.d f18, f10, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f10, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x19, 0xfbd97c05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x98a24798 # load x3 with 32 MSBs 0x0000000098a24798
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098a24798
sw x3, 0(x2) # store x3 (0x98a24798) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000098a24798 from memory into f8
fmadd.d f19, f7, f29, f8, dyn # perform operation
fmadd.d f19, f7, f29, f8, rdn # perform operation
fmadd.d f19, f7, f29, f8, rmm # perform operation
fmadd.d f19, f7, f29, f8, rne # perform operation
fmadd.d f19, f7, f29, f8, rtz # perform operation
fmadd.d f19, f7, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f7, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f7, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f7, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f7, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f7, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x8, 0x9812b807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x7c59ba9d # load x3 with 32 MSBs 0x000000007c59ba9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c59ba9d
sw x3, 0(x2) # store x3 (0x7c59ba9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000007c59ba9d from memory into f9
fmadd.d f8, f25, f12, f9, dyn # perform operation
fmadd.d f8, f25, f12, f9, rdn # perform operation
fmadd.d f8, f25, f12, f9, rmm # perform operation
fmadd.d f8, f25, f12, f9, rne # perform operation
fmadd.d f8, f25, f12, f9, rtz # perform operation
fmadd.d f8, f25, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f25, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f25, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x2, 0x5769d9aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x83e617ee # load x3 with 32 MSBs 0x0000000083e617ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083e617ee
sw x3, 0(x2) # store x3 (0x83e617ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000083e617ee from memory into f30
fmadd.d f2, f13, f17, f30, dyn # perform operation
fmadd.d f2, f13, f17, f30, rdn # perform operation
fmadd.d f2, f13, f17, f30, rmm # perform operation
fmadd.d f2, f13, f17, f30, rne # perform operation
fmadd.d f2, f13, f17, f30, rtz # perform operation
fmadd.d f2, f13, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f13, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x15, 0xe1fac288 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0x205275e2 # load x3 with 32 MSBs 0x00000000205275e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000205275e2
sw x3, 0(x2) # store x3 (0x205275e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000205275e2 from memory into f4
fmadd.d f15, f29, f9, f4, dyn # perform operation
fmadd.d f15, f29, f9, f4, rdn # perform operation
fmadd.d f15, f29, f9, f4, rmm # perform operation
fmadd.d f15, f29, f9, f4, rne # perform operation
fmadd.d f15, f29, f9, f4, rtz # perform operation
fmadd.d f15, f29, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f29, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x18, 0xdd9d25aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x2fa0b73e # load x3 with 32 MSBs 0x000000002fa0b73e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fa0b73e
sw x3, 0(x2) # store x3 (0x2fa0b73e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002fa0b73e from memory into f14
fmadd.d f18, f27, f20, f14, dyn # perform operation
fmadd.d f18, f27, f20, f14, rdn # perform operation
fmadd.d f18, f27, f20, f14, rmm # perform operation
fmadd.d f18, f27, f20, f14, rne # perform operation
fmadd.d f18, f27, f20, f14, rtz # perform operation
fmadd.d f18, f27, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f27, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x15, 0x47458bdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0xcb4e1c3e # load x3 with 32 MSBs 0x00000000cb4e1c3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb4e1c3e
sw x3, 0(x2) # store x3 (0xcb4e1c3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cb4e1c3e from memory into f24
fmadd.d f15, f10, f12, f24, dyn # perform operation
fmadd.d f15, f10, f12, f24, rdn # perform operation
fmadd.d f15, f10, f12, f24, rmm # perform operation
fmadd.d f15, f10, f12, f24, rne # perform operation
fmadd.d f15, f10, f12, f24, rtz # perform operation
fmadd.d f15, f10, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f10, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x15, 0xd054cae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x0aa09c6c # load x3 with 32 MSBs 0x000000000aa09c6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000aa09c6c
sw x3, 0(x2) # store x3 (0x0aa09c6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000aa09c6c from memory into f19
fmadd.d f15, f4, f14, f19, dyn # perform operation
fmadd.d f15, f4, f14, f19, rdn # perform operation
fmadd.d f15, f4, f14, f19, rmm # perform operation
fmadd.d f15, f4, f14, f19, rne # perform operation
fmadd.d f15, f4, f14, f19, rtz # perform operation
fmadd.d f15, f4, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f4, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f4, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f4, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f4, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f4, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x1, 0x642a4269 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0xcb0d842c # load x3 with 32 MSBs 0x00000000cb0d842c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb0d842c
sw x3, 0(x2) # store x3 (0xcb0d842c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cb0d842c from memory into f29
fmadd.d f1, f13, f30, f29, dyn # perform operation
fmadd.d f1, f13, f30, f29, rdn # perform operation
fmadd.d f1, f13, f30, f29, rmm # perform operation
fmadd.d f1, f13, f30, f29, rne # perform operation
fmadd.d f1, f13, f30, f29, rtz # perform operation
fmadd.d f1, f13, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f13, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f13, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f13, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f13, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f13, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x23, 0x644197a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x24905bb5 # load x3 with 32 MSBs 0x0000000024905bb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024905bb5
sw x3, 0(x2) # store x3 (0x24905bb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000024905bb5 from memory into f6
fmadd.d f23, f31, f16, f6, dyn # perform operation
fmadd.d f23, f31, f16, f6, rdn # perform operation
fmadd.d f23, f31, f16, f6, rmm # perform operation
fmadd.d f23, f31, f16, f6, rne # perform operation
fmadd.d f23, f31, f16, f6, rtz # perform operation
fmadd.d f23, f31, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f31, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x24, 0x5e6de1ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x1f2495a6 # load x3 with 32 MSBs 0x000000001f2495a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f2495a6
sw x3, 0(x2) # store x3 (0x1f2495a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001f2495a6 from memory into f12
fmadd.d f24, f2, f19, f12, dyn # perform operation
fmadd.d f24, f2, f19, f12, rdn # perform operation
fmadd.d f24, f2, f19, f12, rmm # perform operation
fmadd.d f24, f2, f19, f12, rne # perform operation
fmadd.d f24, f2, f19, f12, rtz # perform operation
fmadd.d f24, f2, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f2, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x8, 0xa2500ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
li x3, 0xa09f6cd1 # load x3 with 32 MSBs 0x00000000a09f6cd1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a09f6cd1
sw x3, 0(x2) # store x3 (0xa09f6cd1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a09f6cd1 from memory into f4
fmadd.d f8, f21, f22, f4, dyn # perform operation
fmadd.d f8, f21, f22, f4, rdn # perform operation
fmadd.d f8, f21, f22, f4, rmm # perform operation
fmadd.d f8, f21, f22, f4, rne # perform operation
fmadd.d f8, f21, f22, f4, rtz # perform operation
fmadd.d f8, f21, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f21, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f21, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f21, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f21, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f21, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x20, 0x09c32e3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x844ee22b # load x3 with 32 MSBs 0x00000000844ee22b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000844ee22b
sw x3, 0(x2) # store x3 (0x844ee22b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000844ee22b from memory into f24
fmadd.d f20, f16, f8, f24, dyn # perform operation
fmadd.d f20, f16, f8, f24, rdn # perform operation
fmadd.d f20, f16, f8, f24, rmm # perform operation
fmadd.d f20, f16, f8, f24, rne # perform operation
fmadd.d f20, f16, f8, f24, rtz # perform operation
fmadd.d f20, f16, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f16, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f16, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f16, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f16, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f16, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x14, 0xe4c42fa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0x08ae56a0 # load x3 with 32 MSBs 0x0000000008ae56a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008ae56a0
sw x3, 0(x2) # store x3 (0x08ae56a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000008ae56a0 from memory into f21
fmadd.d f14, f12, f17, f21, dyn # perform operation
fmadd.d f14, f12, f17, f21, rdn # perform operation
fmadd.d f14, f12, f17, f21, rmm # perform operation
fmadd.d f14, f12, f17, f21, rne # perform operation
fmadd.d f14, f12, f17, f21, rtz # perform operation
fmadd.d f14, f12, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f12, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x9, 0x216febdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xf13eca36 # load x3 with 32 MSBs 0x00000000f13eca36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f13eca36
sw x3, 0(x2) # store x3 (0xf13eca36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f13eca36 from memory into f20
fmadd.d f9, f25, f30, f20, dyn # perform operation
fmadd.d f9, f25, f30, f20, rdn # perform operation
fmadd.d f9, f25, f30, f20, rmm # perform operation
fmadd.d f9, f25, f30, f20, rne # perform operation
fmadd.d f9, f25, f30, f20, rtz # perform operation
fmadd.d f9, f25, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f25, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x28, 0x1dda10d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x80cc7488 # load x3 with 32 MSBs 0x0000000080cc7488
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080cc7488
sw x3, 0(x2) # store x3 (0x80cc7488) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000080cc7488 from memory into f19
fmadd.d f28, f2, f27, f19, dyn # perform operation
fmadd.d f28, f2, f27, f19, rdn # perform operation
fmadd.d f28, f2, f27, f19, rmm # perform operation
fmadd.d f28, f2, f27, f19, rne # perform operation
fmadd.d f28, f2, f27, f19, rtz # perform operation
fmadd.d f28, f2, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f2, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x14, 0x5f4c7bb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x5b2c224c # load x3 with 32 MSBs 0x000000005b2c224c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b2c224c
sw x3, 0(x2) # store x3 (0x5b2c224c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000005b2c224c from memory into f4
fmadd.d f14, f10, f18, f4, dyn # perform operation
fmadd.d f14, f10, f18, f4, rdn # perform operation
fmadd.d f14, f10, f18, f4, rmm # perform operation
fmadd.d f14, f10, f18, f4, rne # perform operation
fmadd.d f14, f10, f18, f4, rtz # perform operation
fmadd.d f14, f10, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f10, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f10, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f10, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f10, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f10, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x2, 0x3b518bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x5f2af37c # load x3 with 32 MSBs 0x000000005f2af37c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f2af37c
sw x3, 0(x2) # store x3 (0x5f2af37c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000005f2af37c from memory into f31
fmadd.d f2, f14, f30, f31, dyn # perform operation
fmadd.d f2, f14, f30, f31, rdn # perform operation
fmadd.d f2, f14, f30, f31, rmm # perform operation
fmadd.d f2, f14, f30, f31, rne # perform operation
fmadd.d f2, f14, f30, f31, rtz # perform operation
fmadd.d f2, f14, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f14, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x6, 0x81212e24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0xace08d5d # load x3 with 32 MSBs 0x00000000ace08d5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ace08d5d
sw x3, 0(x2) # store x3 (0xace08d5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ace08d5d from memory into f27
fmadd.d f6, f10, f26, f27, dyn # perform operation
fmadd.d f6, f10, f26, f27, rdn # perform operation
fmadd.d f6, f10, f26, f27, rmm # perform operation
fmadd.d f6, f10, f26, f27, rne # perform operation
fmadd.d f6, f10, f26, f27, rtz # perform operation
fmadd.d f6, f10, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f10, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f10, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f10, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f10, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f10, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x26, 0x4e9e5020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0xe40576ff # load x3 with 32 MSBs 0x00000000e40576ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e40576ff
sw x3, 0(x2) # store x3 (0xe40576ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e40576ff from memory into f30
fmadd.d f26, f6, f14, f30, dyn # perform operation
fmadd.d f26, f6, f14, f30, rdn # perform operation
fmadd.d f26, f6, f14, f30, rmm # perform operation
fmadd.d f26, f6, f14, f30, rne # perform operation
fmadd.d f26, f6, f14, f30, rtz # perform operation
fmadd.d f26, f6, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f6, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x3, 0xeedb4da0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0xf0162067 # load x3 with 32 MSBs 0x00000000f0162067
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0162067
sw x3, 0(x2) # store x3 (0xf0162067) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f0162067 from memory into f30
fmadd.d f3, f2, f27, f30, dyn # perform operation
fmadd.d f3, f2, f27, f30, rdn # perform operation
fmadd.d f3, f2, f27, f30, rmm # perform operation
fmadd.d f3, f2, f27, f30, rne # perform operation
fmadd.d f3, f2, f27, f30, rtz # perform operation
fmadd.d f3, f2, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f2, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f2, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f2, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f2, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f2, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x10, 0x156924dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x0f2d34dc # load x3 with 32 MSBs 0x000000000f2d34dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f2d34dc
sw x3, 0(x2) # store x3 (0x0f2d34dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000f2d34dc from memory into f22
fmadd.d f10, f6, f17, f22, dyn # perform operation
fmadd.d f10, f6, f17, f22, rdn # perform operation
fmadd.d f10, f6, f17, f22, rmm # perform operation
fmadd.d f10, f6, f17, f22, rne # perform operation
fmadd.d f10, f6, f17, f22, rtz # perform operation
fmadd.d f10, f6, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f6, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f6, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x11, 0x2ba7a1aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x9b2520ea # load x3 with 32 MSBs 0x000000009b2520ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b2520ea
sw x3, 0(x2) # store x3 (0x9b2520ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009b2520ea from memory into f2
fmadd.d f11, f9, f15, f2, dyn # perform operation
fmadd.d f11, f9, f15, f2, rdn # perform operation
fmadd.d f11, f9, f15, f2, rmm # perform operation
fmadd.d f11, f9, f15, f2, rne # perform operation
fmadd.d f11, f9, f15, f2, rtz # perform operation
fmadd.d f11, f9, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f9, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f9, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x12, 0x50b42676 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x994f6ce5 # load x3 with 32 MSBs 0x00000000994f6ce5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000994f6ce5
sw x3, 0(x2) # store x3 (0x994f6ce5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000994f6ce5 from memory into f14
fmadd.d f12, f21, f26, f14, dyn # perform operation
fmadd.d f12, f21, f26, f14, rdn # perform operation
fmadd.d f12, f21, f26, f14, rmm # perform operation
fmadd.d f12, f21, f26, f14, rne # perform operation
fmadd.d f12, f21, f26, f14, rtz # perform operation
fmadd.d f12, f21, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f21, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x3, 0xf058ad34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0xf8a40ca0 # load x3 with 32 MSBs 0x00000000f8a40ca0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8a40ca0
sw x3, 0(x2) # store x3 (0xf8a40ca0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f8a40ca0 from memory into f11
fmadd.d f3, f16, f5, f11, dyn # perform operation
fmadd.d f3, f16, f5, f11, rdn # perform operation
fmadd.d f3, f16, f5, f11, rmm # perform operation
fmadd.d f3, f16, f5, f11, rne # perform operation
fmadd.d f3, f16, f5, f11, rtz # perform operation
fmadd.d f3, f16, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f16, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x8, 0x563035d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x0e334be9 # load x3 with 32 MSBs 0x000000000e334be9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e334be9
sw x3, 0(x2) # store x3 (0x0e334be9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000e334be9 from memory into f16
fmadd.d f8, f31, f4, f16, dyn # perform operation
fmadd.d f8, f31, f4, f16, rdn # perform operation
fmadd.d f8, f31, f4, f16, rmm # perform operation
fmadd.d f8, f31, f4, f16, rne # perform operation
fmadd.d f8, f31, f4, f16, rtz # perform operation
fmadd.d f8, f31, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f31, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f31, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x27, 0x32a8d51c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0xe9717088 # load x3 with 32 MSBs 0x00000000e9717088
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9717088
sw x3, 0(x2) # store x3 (0xe9717088) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e9717088 from memory into f8
fmadd.d f27, f18, f23, f8, dyn # perform operation
fmadd.d f27, f18, f23, f8, rdn # perform operation
fmadd.d f27, f18, f23, f8, rmm # perform operation
fmadd.d f27, f18, f23, f8, rne # perform operation
fmadd.d f27, f18, f23, f8, rtz # perform operation
fmadd.d f27, f18, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f18, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x21, 0x7118abb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x998e98bc # load x3 with 32 MSBs 0x00000000998e98bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000998e98bc
sw x3, 0(x2) # store x3 (0x998e98bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000998e98bc from memory into f20
fmadd.d f21, f10, f19, f20, dyn # perform operation
fmadd.d f21, f10, f19, f20, rdn # perform operation
fmadd.d f21, f10, f19, f20, rmm # perform operation
fmadd.d f21, f10, f19, f20, rne # perform operation
fmadd.d f21, f10, f19, f20, rtz # perform operation
fmadd.d f21, f10, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f10, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f10, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x15, 0xdc0b8397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x65a9ab1a # load x3 with 32 MSBs 0x0000000065a9ab1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065a9ab1a
sw x3, 0(x2) # store x3 (0x65a9ab1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000065a9ab1a from memory into f19
fmadd.d f15, f9, f31, f19, dyn # perform operation
fmadd.d f15, f9, f31, f19, rdn # perform operation
fmadd.d f15, f9, f31, f19, rmm # perform operation
fmadd.d f15, f9, f31, f19, rne # perform operation
fmadd.d f15, f9, f31, f19, rtz # perform operation
fmadd.d f15, f9, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f9, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x6, 0x2e531812 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0xb50af1e5 # load x3 with 32 MSBs 0x00000000b50af1e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b50af1e5
sw x3, 0(x2) # store x3 (0xb50af1e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b50af1e5 from memory into f1
fmadd.d f6, f15, f14, f1, dyn # perform operation
fmadd.d f6, f15, f14, f1, rdn # perform operation
fmadd.d f6, f15, f14, f1, rmm # perform operation
fmadd.d f6, f15, f14, f1, rne # perform operation
fmadd.d f6, f15, f14, f1, rtz # perform operation
fmadd.d f6, f15, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f15, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x6, 0x1043bc6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0x04894f33 # load x3 with 32 MSBs 0x0000000004894f33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004894f33
sw x3, 0(x2) # store x3 (0x04894f33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000004894f33 from memory into f24
fmadd.d f6, f7, f27, f24, dyn # perform operation
fmadd.d f6, f7, f27, f24, rdn # perform operation
fmadd.d f6, f7, f27, f24, rmm # perform operation
fmadd.d f6, f7, f27, f24, rne # perform operation
fmadd.d f6, f7, f27, f24, rtz # perform operation
fmadd.d f6, f7, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f7, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f7, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x21, 0xfb0eb52b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0x379e9307 # load x3 with 32 MSBs 0x00000000379e9307
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000379e9307
sw x3, 0(x2) # store x3 (0x379e9307) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000379e9307 from memory into f28
fmadd.d f21, f7, f17, f28, dyn # perform operation
fmadd.d f21, f7, f17, f28, rdn # perform operation
fmadd.d f21, f7, f17, f28, rmm # perform operation
fmadd.d f21, f7, f17, f28, rne # perform operation
fmadd.d f21, f7, f17, f28, rtz # perform operation
fmadd.d f21, f7, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f7, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f7, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x21, 0x61dfdcc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0xef5c4d06 # load x3 with 32 MSBs 0x00000000ef5c4d06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef5c4d06
sw x3, 0(x2) # store x3 (0xef5c4d06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ef5c4d06 from memory into f17
fmadd.d f21, f3, f24, f17, dyn # perform operation
fmadd.d f21, f3, f24, f17, rdn # perform operation
fmadd.d f21, f3, f24, f17, rmm # perform operation
fmadd.d f21, f3, f24, f17, rne # perform operation
fmadd.d f21, f3, f24, f17, rtz # perform operation
fmadd.d f21, f3, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f3, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x17, 0x1c639f4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x70347b69 # load x3 with 32 MSBs 0x0000000070347b69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070347b69
sw x3, 0(x2) # store x3 (0x70347b69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000070347b69 from memory into f10
fmadd.d f17, f22, f13, f10, dyn # perform operation
fmadd.d f17, f22, f13, f10, rdn # perform operation
fmadd.d f17, f22, f13, f10, rmm # perform operation
fmadd.d f17, f22, f13, f10, rne # perform operation
fmadd.d f17, f22, f13, f10, rtz # perform operation
fmadd.d f17, f22, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f22, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x9, 0x9db7989c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x8f8d8bc4 # load x3 with 32 MSBs 0x000000008f8d8bc4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f8d8bc4
sw x3, 0(x2) # store x3 (0x8f8d8bc4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008f8d8bc4 from memory into f5
fmadd.d f9, f24, f14, f5, dyn # perform operation
fmadd.d f9, f24, f14, f5, rdn # perform operation
fmadd.d f9, f24, f14, f5, rmm # perform operation
fmadd.d f9, f24, f14, f5, rne # perform operation
fmadd.d f9, f24, f14, f5, rtz # perform operation
fmadd.d f9, f24, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f24, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x15, 0xbb6719ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0x1c1d79ef # load x3 with 32 MSBs 0x000000001c1d79ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c1d79ef
sw x3, 0(x2) # store x3 (0x1c1d79ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001c1d79ef from memory into f27
fmadd.d f15, f3, f30, f27, dyn # perform operation
fmadd.d f15, f3, f30, f27, rdn # perform operation
fmadd.d f15, f3, f30, f27, rmm # perform operation
fmadd.d f15, f3, f30, f27, rne # perform operation
fmadd.d f15, f3, f30, f27, rtz # perform operation
fmadd.d f15, f3, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f3, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f3, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f3, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f3, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f3, f30, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x23, 0x63453b62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x8c2fa3d3 # load x3 with 32 MSBs 0x000000008c2fa3d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c2fa3d3
sw x3, 0(x2) # store x3 (0x8c2fa3d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008c2fa3d3 from memory into f16
fmadd.d f23, f30, f7, f16, dyn # perform operation
fmadd.d f23, f30, f7, f16, rdn # perform operation
fmadd.d f23, f30, f7, f16, rmm # perform operation
fmadd.d f23, f30, f7, f16, rne # perform operation
fmadd.d f23, f30, f7, f16, rtz # perform operation
fmadd.d f23, f30, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f30, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x18, 0x94aef02a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0x881a8d10 # load x3 with 32 MSBs 0x00000000881a8d10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000881a8d10
sw x3, 0(x2) # store x3 (0x881a8d10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000881a8d10 from memory into f22
fmadd.d f18, f23, f24, f22, dyn # perform operation
fmadd.d f18, f23, f24, f22, rdn # perform operation
fmadd.d f18, f23, f24, f22, rmm # perform operation
fmadd.d f18, f23, f24, f22, rne # perform operation
fmadd.d f18, f23, f24, f22, rtz # perform operation
fmadd.d f18, f23, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f23, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x10, 0x55eb9a17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x4d48bcf1 # load x3 with 32 MSBs 0x000000004d48bcf1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d48bcf1
sw x3, 0(x2) # store x3 (0x4d48bcf1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004d48bcf1 from memory into f14
fmadd.d f10, f8, f13, f14, dyn # perform operation
fmadd.d f10, f8, f13, f14, rdn # perform operation
fmadd.d f10, f8, f13, f14, rmm # perform operation
fmadd.d f10, f8, f13, f14, rne # perform operation
fmadd.d f10, f8, f13, f14, rtz # perform operation
fmadd.d f10, f8, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f8, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f8, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x27, 0xae3edba9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x5433478a # load x3 with 32 MSBs 0x000000005433478a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005433478a
sw x3, 0(x2) # store x3 (0x5433478a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005433478a from memory into f8
fmadd.d f27, f10, f20, f8, dyn # perform operation
fmadd.d f27, f10, f20, f8, rdn # perform operation
fmadd.d f27, f10, f20, f8, rmm # perform operation
fmadd.d f27, f10, f20, f8, rne # perform operation
fmadd.d f27, f10, f20, f8, rtz # perform operation
fmadd.d f27, f10, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f10, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x26, 0x3c348f81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x7d9863f6 # load x3 with 32 MSBs 0x000000007d9863f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d9863f6
sw x3, 0(x2) # store x3 (0x7d9863f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007d9863f6 from memory into f7
fmadd.d f26, f1, f11, f7, dyn # perform operation
fmadd.d f26, f1, f11, f7, rdn # perform operation
fmadd.d f26, f1, f11, f7, rmm # perform operation
fmadd.d f26, f1, f11, f7, rne # perform operation
fmadd.d f26, f1, f11, f7, rtz # perform operation
fmadd.d f26, f1, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f1, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x11, 0xf8ce74cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x8ab2d79c # load x3 with 32 MSBs 0x000000008ab2d79c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ab2d79c
sw x3, 0(x2) # store x3 (0x8ab2d79c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008ab2d79c from memory into f19
fmadd.d f11, f3, f26, f19, dyn # perform operation
fmadd.d f11, f3, f26, f19, rdn # perform operation
fmadd.d f11, f3, f26, f19, rmm # perform operation
fmadd.d f11, f3, f26, f19, rne # perform operation
fmadd.d f11, f3, f26, f19, rtz # perform operation
fmadd.d f11, f3, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f3, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x22, 0xff474ddc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x4d8b290e # load x3 with 32 MSBs 0x000000004d8b290e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d8b290e
sw x3, 0(x2) # store x3 (0x4d8b290e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004d8b290e from memory into f11
fmadd.d f22, f31, f23, f11, dyn # perform operation
fmadd.d f22, f31, f23, f11, rdn # perform operation
fmadd.d f22, f31, f23, f11, rmm # perform operation
fmadd.d f22, f31, f23, f11, rne # perform operation
fmadd.d f22, f31, f23, f11, rtz # perform operation
fmadd.d f22, f31, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f31, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x5, 0x603cbf9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0x5f118014 # load x3 with 32 MSBs 0x000000005f118014
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f118014
sw x3, 0(x2) # store x3 (0x5f118014) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005f118014 from memory into f22
fmadd.d f5, f23, f7, f22, dyn # perform operation
fmadd.d f5, f23, f7, f22, rdn # perform operation
fmadd.d f5, f23, f7, f22, rmm # perform operation
fmadd.d f5, f23, f7, f22, rne # perform operation
fmadd.d f5, f23, f7, f22, rtz # perform operation
fmadd.d f5, f23, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f23, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x10, 0xe3c922a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0xc52ecc04 # load x3 with 32 MSBs 0x00000000c52ecc04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c52ecc04
sw x3, 0(x2) # store x3 (0xc52ecc04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c52ecc04 from memory into f18
fmadd.d f10, f6, f8, f18, dyn # perform operation
fmadd.d f10, f6, f8, f18, rdn # perform operation
fmadd.d f10, f6, f8, f18, rmm # perform operation
fmadd.d f10, f6, f8, f18, rne # perform operation
fmadd.d f10, f6, f8, f18, rtz # perform operation
fmadd.d f10, f6, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f6, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x19, 0xc831862e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x7b94aff3 # load x3 with 32 MSBs 0x000000007b94aff3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b94aff3
sw x3, 0(x2) # store x3 (0x7b94aff3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007b94aff3 from memory into f1
fmadd.d f19, f17, f24, f1, dyn # perform operation
fmadd.d f19, f17, f24, f1, rdn # perform operation
fmadd.d f19, f17, f24, f1, rmm # perform operation
fmadd.d f19, f17, f24, f1, rne # perform operation
fmadd.d f19, f17, f24, f1, rtz # perform operation
fmadd.d f19, f17, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f17, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f17, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f17, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f17, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f17, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x25, 0xcbbe3f2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x9e738c46 # load x3 with 32 MSBs 0x000000009e738c46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e738c46
sw x3, 0(x2) # store x3 (0x9e738c46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009e738c46 from memory into f6
fmadd.d f25, f4, f28, f6, dyn # perform operation
fmadd.d f25, f4, f28, f6, rdn # perform operation
fmadd.d f25, f4, f28, f6, rmm # perform operation
fmadd.d f25, f4, f28, f6, rne # perform operation
fmadd.d f25, f4, f28, f6, rtz # perform operation
fmadd.d f25, f4, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f4, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f4, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f4, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f4, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f4, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x16, 0x50654202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0xda443ff9 # load x3 with 32 MSBs 0x00000000da443ff9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da443ff9
sw x3, 0(x2) # store x3 (0xda443ff9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000da443ff9 from memory into f9
fmadd.d f16, f15, f3, f9, dyn # perform operation
fmadd.d f16, f15, f3, f9, rdn # perform operation
fmadd.d f16, f15, f3, f9, rmm # perform operation
fmadd.d f16, f15, f3, f9, rne # perform operation
fmadd.d f16, f15, f3, f9, rtz # perform operation
fmadd.d f16, f15, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f15, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x11, 0xe6cd65f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x29b75080 # load x3 with 32 MSBs 0x0000000029b75080
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029b75080
sw x3, 0(x2) # store x3 (0x29b75080) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000029b75080 from memory into f13
fmadd.d f11, f25, f4, f13, dyn # perform operation
fmadd.d f11, f25, f4, f13, rdn # perform operation
fmadd.d f11, f25, f4, f13, rmm # perform operation
fmadd.d f11, f25, f4, f13, rne # perform operation
fmadd.d f11, f25, f4, f13, rtz # perform operation
fmadd.d f11, f25, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f25, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x26, 0xbe875530 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x9f20726a # load x3 with 32 MSBs 0x000000009f20726a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f20726a
sw x3, 0(x2) # store x3 (0x9f20726a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000009f20726a from memory into f31
fmadd.d f26, f21, f24, f31, dyn # perform operation
fmadd.d f26, f21, f24, f31, rdn # perform operation
fmadd.d f26, f21, f24, f31, rmm # perform operation
fmadd.d f26, f21, f24, f31, rne # perform operation
fmadd.d f26, f21, f24, f31, rtz # perform operation
fmadd.d f26, f21, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f21, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f21, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x25, 0x68ac2cd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0xec03ad20 # load x3 with 32 MSBs 0x00000000ec03ad20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec03ad20
sw x3, 0(x2) # store x3 (0xec03ad20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ec03ad20 from memory into f7
fmadd.d f25, f28, f20, f7, dyn # perform operation
fmadd.d f25, f28, f20, f7, rdn # perform operation
fmadd.d f25, f28, f20, f7, rmm # perform operation
fmadd.d f25, f28, f20, f7, rne # perform operation
fmadd.d f25, f28, f20, f7, rtz # perform operation
fmadd.d f25, f28, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f28, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x18, 0xdbda211e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xe5aefe85 # load x3 with 32 MSBs 0x00000000e5aefe85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5aefe85
sw x3, 0(x2) # store x3 (0xe5aefe85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000e5aefe85 from memory into f26
fmadd.d f18, f19, f25, f26, dyn # perform operation
fmadd.d f18, f19, f25, f26, rdn # perform operation
fmadd.d f18, f19, f25, f26, rmm # perform operation
fmadd.d f18, f19, f25, f26, rne # perform operation
fmadd.d f18, f19, f25, f26, rtz # perform operation
fmadd.d f18, f19, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f19, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x3, 0x94698323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x27fbd9ec # load x3 with 32 MSBs 0x0000000027fbd9ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027fbd9ec
sw x3, 0(x2) # store x3 (0x27fbd9ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000027fbd9ec from memory into f25
fmadd.d f3, f30, f10, f25, dyn # perform operation
fmadd.d f3, f30, f10, f25, rdn # perform operation
fmadd.d f3, f30, f10, f25, rmm # perform operation
fmadd.d f3, f30, f10, f25, rne # perform operation
fmadd.d f3, f30, f10, f25, rtz # perform operation
fmadd.d f3, f30, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f30, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x6, 0x452c2e4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0xf2b4d59c # load x3 with 32 MSBs 0x00000000f2b4d59c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2b4d59c
sw x3, 0(x2) # store x3 (0xf2b4d59c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f2b4d59c from memory into f11
fmadd.d f6, f10, f25, f11, dyn # perform operation
fmadd.d f6, f10, f25, f11, rdn # perform operation
fmadd.d f6, f10, f25, f11, rmm # perform operation
fmadd.d f6, f10, f25, f11, rne # perform operation
fmadd.d f6, f10, f25, f11, rtz # perform operation
fmadd.d f6, f10, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f10, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f10, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f10, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f10, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f10, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x3, 0x535e81b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0xeb0e9913 # load x3 with 32 MSBs 0x00000000eb0e9913
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb0e9913
sw x3, 0(x2) # store x3 (0xeb0e9913) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000eb0e9913 from memory into f16
fmadd.d f3, f1, f24, f16, dyn # perform operation
fmadd.d f3, f1, f24, f16, rdn # perform operation
fmadd.d f3, f1, f24, f16, rmm # perform operation
fmadd.d f3, f1, f24, f16, rne # perform operation
fmadd.d f3, f1, f24, f16, rtz # perform operation
fmadd.d f3, f1, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f1, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x13, 0x2dfc8ed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0xe9249a89 # load x3 with 32 MSBs 0x00000000e9249a89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9249a89
sw x3, 0(x2) # store x3 (0xe9249a89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e9249a89 from memory into f27
fmadd.d f13, f6, f12, f27, dyn # perform operation
fmadd.d f13, f6, f12, f27, rdn # perform operation
fmadd.d f13, f6, f12, f27, rmm # perform operation
fmadd.d f13, f6, f12, f27, rne # perform operation
fmadd.d f13, f6, f12, f27, rtz # perform operation
fmadd.d f13, f6, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f6, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x5, 0x4b7e7a9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x6ff4d816 # load x3 with 32 MSBs 0x000000006ff4d816
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ff4d816
sw x3, 0(x2) # store x3 (0x6ff4d816) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006ff4d816 from memory into f15
fmadd.d f5, f31, f7, f15, dyn # perform operation
fmadd.d f5, f31, f7, f15, rdn # perform operation
fmadd.d f5, f31, f7, f15, rmm # perform operation
fmadd.d f5, f31, f7, f15, rne # perform operation
fmadd.d f5, f31, f7, f15, rtz # perform operation
fmadd.d f5, f31, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f31, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f31, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x5, 0xc26986bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x960020ed # load x3 with 32 MSBs 0x00000000960020ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000960020ed
sw x3, 0(x2) # store x3 (0x960020ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000960020ed from memory into f18
fmadd.d f5, f3, f7, f18, dyn # perform operation
fmadd.d f5, f3, f7, f18, rdn # perform operation
fmadd.d f5, f3, f7, f18, rmm # perform operation
fmadd.d f5, f3, f7, f18, rne # perform operation
fmadd.d f5, f3, f7, f18, rtz # perform operation
fmadd.d f5, f3, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f3, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x22, 0x121623e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x330fc5c9 # load x3 with 32 MSBs 0x00000000330fc5c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000330fc5c9
sw x3, 0(x2) # store x3 (0x330fc5c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000330fc5c9 from memory into f27
fmadd.d f22, f19, f3, f27, dyn # perform operation
fmadd.d f22, f19, f3, f27, rdn # perform operation
fmadd.d f22, f19, f3, f27, rmm # perform operation
fmadd.d f22, f19, f3, f27, rne # perform operation
fmadd.d f22, f19, f3, f27, rtz # perform operation
fmadd.d f22, f19, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f19, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x19, 0x35f44b5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0xefe8c622 # load x3 with 32 MSBs 0x00000000efe8c622
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efe8c622
sw x3, 0(x2) # store x3 (0xefe8c622) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000efe8c622 from memory into f17
fmadd.d f19, f25, f12, f17, dyn # perform operation
fmadd.d f19, f25, f12, f17, rdn # perform operation
fmadd.d f19, f25, f12, f17, rmm # perform operation
fmadd.d f19, f25, f12, f17, rne # perform operation
fmadd.d f19, f25, f12, f17, rtz # perform operation
fmadd.d f19, f25, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f25, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x12, 0x7e103c42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x4445b4a7 # load x3 with 32 MSBs 0x000000004445b4a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004445b4a7
sw x3, 0(x2) # store x3 (0x4445b4a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004445b4a7 from memory into f13
fmadd.d f12, f23, f6, f13, dyn # perform operation
fmadd.d f12, f23, f6, f13, rdn # perform operation
fmadd.d f12, f23, f6, f13, rmm # perform operation
fmadd.d f12, f23, f6, f13, rne # perform operation
fmadd.d f12, f23, f6, f13, rtz # perform operation
fmadd.d f12, f23, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f23, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f23, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x14, 0x3ce72681 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x4b0631e3 # load x3 with 32 MSBs 0x000000004b0631e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b0631e3
sw x3, 0(x2) # store x3 (0x4b0631e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004b0631e3 from memory into f8
fmadd.d f14, f1, f9, f8, dyn # perform operation
fmadd.d f14, f1, f9, f8, rdn # perform operation
fmadd.d f14, f1, f9, f8, rmm # perform operation
fmadd.d f14, f1, f9, f8, rne # perform operation
fmadd.d f14, f1, f9, f8, rtz # perform operation
fmadd.d f14, f1, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f1, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f1, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x17, 0x3b9dd32d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x1eee3659 # load x3 with 32 MSBs 0x000000001eee3659
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001eee3659
sw x3, 0(x2) # store x3 (0x1eee3659) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001eee3659 from memory into f1
fmadd.d f17, f8, f26, f1, dyn # perform operation
fmadd.d f17, f8, f26, f1, rdn # perform operation
fmadd.d f17, f8, f26, f1, rmm # perform operation
fmadd.d f17, f8, f26, f1, rne # perform operation
fmadd.d f17, f8, f26, f1, rtz # perform operation
fmadd.d f17, f8, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f8, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x19, 0x1263a26c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0xb1c50abc # load x3 with 32 MSBs 0x00000000b1c50abc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1c50abc
sw x3, 0(x2) # store x3 (0xb1c50abc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b1c50abc from memory into f15
fmadd.d f19, f28, f3, f15, dyn # perform operation
fmadd.d f19, f28, f3, f15, rdn # perform operation
fmadd.d f19, f28, f3, f15, rmm # perform operation
fmadd.d f19, f28, f3, f15, rne # perform operation
fmadd.d f19, f28, f3, f15, rtz # perform operation
fmadd.d f19, f28, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f28, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f28, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f28, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f28, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f28, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x23, 0x04bed238 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x03e99877 # load x3 with 32 MSBs 0x0000000003e99877
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003e99877
sw x3, 0(x2) # store x3 (0x03e99877) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000003e99877 from memory into f27
fmadd.d f23, f13, f14, f27, dyn # perform operation
fmadd.d f23, f13, f14, f27, rdn # perform operation
fmadd.d f23, f13, f14, f27, rmm # perform operation
fmadd.d f23, f13, f14, f27, rne # perform operation
fmadd.d f23, f13, f14, f27, rtz # perform operation
fmadd.d f23, f13, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f13, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x10, 0x2b99e795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x384f49cb # load x3 with 32 MSBs 0x00000000384f49cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000384f49cb
sw x3, 0(x2) # store x3 (0x384f49cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000384f49cb from memory into f4
fmadd.d f10, f1, f24, f4, dyn # perform operation
fmadd.d f10, f1, f24, f4, rdn # perform operation
fmadd.d f10, f1, f24, f4, rmm # perform operation
fmadd.d f10, f1, f24, f4, rne # perform operation
fmadd.d f10, f1, f24, f4, rtz # perform operation
fmadd.d f10, f1, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f1, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f1, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x16, 0x8f559c23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x9d8513e1 # load x3 with 32 MSBs 0x000000009d8513e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d8513e1
sw x3, 0(x2) # store x3 (0x9d8513e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009d8513e1 from memory into f13
fmadd.d f16, f1, f29, f13, dyn # perform operation
fmadd.d f16, f1, f29, f13, rdn # perform operation
fmadd.d f16, f1, f29, f13, rmm # perform operation
fmadd.d f16, f1, f29, f13, rne # perform operation
fmadd.d f16, f1, f29, f13, rtz # perform operation
fmadd.d f16, f1, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f1, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f1, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f1, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f1, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f1, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x8, 0x8a645823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0xd0f7d7d4 # load x3 with 32 MSBs 0x00000000d0f7d7d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0f7d7d4
sw x3, 0(x2) # store x3 (0xd0f7d7d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000d0f7d7d4 from memory into f15
fmadd.d f8, f19, f10, f15, dyn # perform operation
fmadd.d f8, f19, f10, f15, rdn # perform operation
fmadd.d f8, f19, f10, f15, rmm # perform operation
fmadd.d f8, f19, f10, f15, rne # perform operation
fmadd.d f8, f19, f10, f15, rtz # perform operation
fmadd.d f8, f19, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f19, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x6, 0xb44ba8e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
li x3, 0x3a730d21 # load x3 with 32 MSBs 0x000000003a730d21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a730d21
sw x3, 0(x2) # store x3 (0x3a730d21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003a730d21 from memory into f9
fmadd.d f6, f30, f24, f9, dyn # perform operation
fmadd.d f6, f30, f24, f9, rdn # perform operation
fmadd.d f6, f30, f24, f9, rmm # perform operation
fmadd.d f6, f30, f24, f9, rne # perform operation
fmadd.d f6, f30, f24, f9, rtz # perform operation
fmadd.d f6, f30, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f30, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f30, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f30, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f30, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f30, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x2, 0x0da6a663 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x98d5e40e # load x3 with 32 MSBs 0x0000000098d5e40e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098d5e40e
sw x3, 0(x2) # store x3 (0x98d5e40e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000098d5e40e from memory into f19
fmadd.d f2, f11, f4, f19, dyn # perform operation
fmadd.d f2, f11, f4, f19, rdn # perform operation
fmadd.d f2, f11, f4, f19, rmm # perform operation
fmadd.d f2, f11, f4, f19, rne # perform operation
fmadd.d f2, f11, f4, f19, rtz # perform operation
fmadd.d f2, f11, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f11, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x3, 0x07c97f09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x26f282a1 # load x3 with 32 MSBs 0x0000000026f282a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026f282a1
sw x3, 0(x2) # store x3 (0x26f282a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000026f282a1 from memory into f21
fmadd.d f3, f11, f4, f21, dyn # perform operation
fmadd.d f3, f11, f4, f21, rdn # perform operation
fmadd.d f3, f11, f4, f21, rmm # perform operation
fmadd.d f3, f11, f4, f21, rne # perform operation
fmadd.d f3, f11, f4, f21, rtz # perform operation
fmadd.d f3, f11, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f11, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f11, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f11, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f11, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f11, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x24, 0x2da6cfb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x6e605c77 # load x3 with 32 MSBs 0x000000006e605c77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e605c77
sw x3, 0(x2) # store x3 (0x6e605c77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000006e605c77 from memory into f4
fmadd.d f24, f17, f27, f4, dyn # perform operation
fmadd.d f24, f17, f27, f4, rdn # perform operation
fmadd.d f24, f17, f27, f4, rmm # perform operation
fmadd.d f24, f17, f27, f4, rne # perform operation
fmadd.d f24, f17, f27, f4, rtz # perform operation
fmadd.d f24, f17, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f17, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x25, 0x6f5bc951 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x480a8c0a # load x3 with 32 MSBs 0x00000000480a8c0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000480a8c0a
sw x3, 0(x2) # store x3 (0x480a8c0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000480a8c0a from memory into f8
fmadd.d f25, f22, f16, f8, dyn # perform operation
fmadd.d f25, f22, f16, f8, rdn # perform operation
fmadd.d f25, f22, f16, f8, rmm # perform operation
fmadd.d f25, f22, f16, f8, rne # perform operation
fmadd.d f25, f22, f16, f8, rtz # perform operation
fmadd.d f25, f22, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f22, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f22, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x29, 0x987d6d2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x37fd3995 # load x3 with 32 MSBs 0x0000000037fd3995
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037fd3995
sw x3, 0(x2) # store x3 (0x37fd3995) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000037fd3995 from memory into f4
fmadd.d f29, f31, f28, f4, dyn # perform operation
fmadd.d f29, f31, f28, f4, rdn # perform operation
fmadd.d f29, f31, f28, f4, rmm # perform operation
fmadd.d f29, f31, f28, f4, rne # perform operation
fmadd.d f29, f31, f28, f4, rtz # perform operation
fmadd.d f29, f31, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f31, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f31, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f31, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f31, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f31, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x29, 0xc41ae5b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0xf3f5147d # load x3 with 32 MSBs 0x00000000f3f5147d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3f5147d
sw x3, 0(x2) # store x3 (0xf3f5147d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f3f5147d from memory into f4
fmadd.d f29, f16, f26, f4, dyn # perform operation
fmadd.d f29, f16, f26, f4, rdn # perform operation
fmadd.d f29, f16, f26, f4, rmm # perform operation
fmadd.d f29, f16, f26, f4, rne # perform operation
fmadd.d f29, f16, f26, f4, rtz # perform operation
fmadd.d f29, f16, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f16, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x9, 0xad7d8830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0x7c758ee3 # load x3 with 32 MSBs 0x000000007c758ee3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c758ee3
sw x3, 0(x2) # store x3 (0x7c758ee3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007c758ee3 from memory into f24
fmadd.d f9, f18, f17, f24, dyn # perform operation
fmadd.d f9, f18, f17, f24, rdn # perform operation
fmadd.d f9, f18, f17, f24, rmm # perform operation
fmadd.d f9, f18, f17, f24, rne # perform operation
fmadd.d f9, f18, f17, f24, rtz # perform operation
fmadd.d f9, f18, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f18, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f18, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x29, 0x823f4925 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x6a558154 # load x3 with 32 MSBs 0x000000006a558154
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a558154
sw x3, 0(x2) # store x3 (0x6a558154) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000006a558154 from memory into f4
fmadd.d f29, f27, f26, f4, dyn # perform operation
fmadd.d f29, f27, f26, f4, rdn # perform operation
fmadd.d f29, f27, f26, f4, rmm # perform operation
fmadd.d f29, f27, f26, f4, rne # perform operation
fmadd.d f29, f27, f26, f4, rtz # perform operation
fmadd.d f29, f27, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f27, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f27, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f27, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f27, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f27, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x20, 0x380bcb2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x5743bfcd # load x3 with 32 MSBs 0x000000005743bfcd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005743bfcd
sw x3, 0(x2) # store x3 (0x5743bfcd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005743bfcd from memory into f9
fmadd.d f20, f21, f2, f9, dyn # perform operation
fmadd.d f20, f21, f2, f9, rdn # perform operation
fmadd.d f20, f21, f2, f9, rmm # perform operation
fmadd.d f20, f21, f2, f9, rne # perform operation
fmadd.d f20, f21, f2, f9, rtz # perform operation
fmadd.d f20, f21, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f21, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f21, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x14, 0xedaec5d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x92e4292b # load x3 with 32 MSBs 0x0000000092e4292b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092e4292b
sw x3, 0(x2) # store x3 (0x92e4292b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000092e4292b from memory into f13
fmadd.d f14, f26, f30, f13, dyn # perform operation
fmadd.d f14, f26, f30, f13, rdn # perform operation
fmadd.d f14, f26, f30, f13, rmm # perform operation
fmadd.d f14, f26, f30, f13, rne # perform operation
fmadd.d f14, f26, f30, f13, rtz # perform operation
fmadd.d f14, f26, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f26, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x19, 0xa9943fa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0xdd45581e # load x3 with 32 MSBs 0x00000000dd45581e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd45581e
sw x3, 0(x2) # store x3 (0xdd45581e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000dd45581e from memory into f21
fmadd.d f19, f26, f6, f21, dyn # perform operation
fmadd.d f19, f26, f6, f21, rdn # perform operation
fmadd.d f19, f26, f6, f21, rmm # perform operation
fmadd.d f19, f26, f6, f21, rne # perform operation
fmadd.d f19, f26, f6, f21, rtz # perform operation
fmadd.d f19, f26, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f26, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x12, 0x80b5443e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0xdea66db1 # load x3 with 32 MSBs 0x00000000dea66db1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dea66db1
sw x3, 0(x2) # store x3 (0xdea66db1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000dea66db1 from memory into f24
fmadd.d f12, f5, f19, f24, dyn # perform operation
fmadd.d f12, f5, f19, f24, rdn # perform operation
fmadd.d f12, f5, f19, f24, rmm # perform operation
fmadd.d f12, f5, f19, f24, rne # perform operation
fmadd.d f12, f5, f19, f24, rtz # perform operation
fmadd.d f12, f5, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f5, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f5, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f5, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f5, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f5, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x11, 0xc7baf2bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0xa5c62249 # load x3 with 32 MSBs 0x00000000a5c62249
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5c62249
sw x3, 0(x2) # store x3 (0xa5c62249) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a5c62249 from memory into f14
fmadd.d f11, f20, f24, f14, dyn # perform operation
fmadd.d f11, f20, f24, f14, rdn # perform operation
fmadd.d f11, f20, f24, f14, rmm # perform operation
fmadd.d f11, f20, f24, f14, rne # perform operation
fmadd.d f11, f20, f24, f14, rtz # perform operation
fmadd.d f11, f20, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f20, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x6, 0xa307b084 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x080a4551 # load x3 with 32 MSBs 0x00000000080a4551
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000080a4551
sw x3, 0(x2) # store x3 (0x080a4551) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000080a4551 from memory into f23
fmadd.d f6, f25, f3, f23, dyn # perform operation
fmadd.d f6, f25, f3, f23, rdn # perform operation
fmadd.d f6, f25, f3, f23, rmm # perform operation
fmadd.d f6, f25, f3, f23, rne # perform operation
fmadd.d f6, f25, f3, f23, rtz # perform operation
fmadd.d f6, f25, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f25, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f25, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f25, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f25, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f25, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x14, 0x9acc1478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x2faf29f2 # load x3 with 32 MSBs 0x000000002faf29f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002faf29f2
sw x3, 0(x2) # store x3 (0x2faf29f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002faf29f2 from memory into f21
fmadd.d f14, f20, f7, f21, dyn # perform operation
fmadd.d f14, f20, f7, f21, rdn # perform operation
fmadd.d f14, f20, f7, f21, rmm # perform operation
fmadd.d f14, f20, f7, f21, rne # perform operation
fmadd.d f14, f20, f7, f21, rtz # perform operation
fmadd.d f14, f20, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f20, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f20, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x10, 0xf9383d9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0xa070a40d # load x3 with 32 MSBs 0x00000000a070a40d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a070a40d
sw x3, 0(x2) # store x3 (0xa070a40d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a070a40d from memory into f8
fmadd.d f10, f22, f11, f8, dyn # perform operation
fmadd.d f10, f22, f11, f8, rdn # perform operation
fmadd.d f10, f22, f11, f8, rmm # perform operation
fmadd.d f10, f22, f11, f8, rne # perform operation
fmadd.d f10, f22, f11, f8, rtz # perform operation
fmadd.d f10, f22, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f22, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x18, 0xcb999068 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0xef80bc87 # load x3 with 32 MSBs 0x00000000ef80bc87
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef80bc87
sw x3, 0(x2) # store x3 (0xef80bc87) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ef80bc87 from memory into f24
fmadd.d f18, f29, f12, f24, dyn # perform operation
fmadd.d f18, f29, f12, f24, rdn # perform operation
fmadd.d f18, f29, f12, f24, rmm # perform operation
fmadd.d f18, f29, f12, f24, rne # perform operation
fmadd.d f18, f29, f12, f24, rtz # perform operation
fmadd.d f18, f29, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f29, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f29, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f29, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f29, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f29, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x20, 0x9110a58b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x1b4274ba # load x3 with 32 MSBs 0x000000001b4274ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b4274ba
sw x3, 0(x2) # store x3 (0x1b4274ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000001b4274ba from memory into f16
fmadd.d f20, f15, f17, f16, dyn # perform operation
fmadd.d f20, f15, f17, f16, rdn # perform operation
fmadd.d f20, f15, f17, f16, rmm # perform operation
fmadd.d f20, f15, f17, f16, rne # perform operation
fmadd.d f20, f15, f17, f16, rtz # perform operation
fmadd.d f20, f15, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f15, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x31, 0xb15cc6f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0xa09518e9 # load x3 with 32 MSBs 0x00000000a09518e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a09518e9
sw x3, 0(x2) # store x3 (0xa09518e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a09518e9 from memory into f3
fmadd.d f31, f30, f5, f3, dyn # perform operation
fmadd.d f31, f30, f5, f3, rdn # perform operation
fmadd.d f31, f30, f5, f3, rmm # perform operation
fmadd.d f31, f30, f5, f3, rne # perform operation
fmadd.d f31, f30, f5, f3, rtz # perform operation
fmadd.d f31, f30, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f30, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x14, 0x96461b07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x484a44e7 # load x3 with 32 MSBs 0x00000000484a44e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000484a44e7
sw x3, 0(x2) # store x3 (0x484a44e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000484a44e7 from memory into f18
fmadd.d f14, f22, f7, f18, dyn # perform operation
fmadd.d f14, f22, f7, f18, rdn # perform operation
fmadd.d f14, f22, f7, f18, rmm # perform operation
fmadd.d f14, f22, f7, f18, rne # perform operation
fmadd.d f14, f22, f7, f18, rtz # perform operation
fmadd.d f14, f22, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f22, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f22, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f22, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f22, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f22, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x16, 0x5cda3fb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x8fca80d0 # load x3 with 32 MSBs 0x000000008fca80d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008fca80d0
sw x3, 0(x2) # store x3 (0x8fca80d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000008fca80d0 from memory into f27
fmadd.d f16, f13, f12, f27, dyn # perform operation
fmadd.d f16, f13, f12, f27, rdn # perform operation
fmadd.d f16, f13, f12, f27, rmm # perform operation
fmadd.d f16, f13, f12, f27, rne # perform operation
fmadd.d f16, f13, f12, f27, rtz # perform operation
fmadd.d f16, f13, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f13, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x12, 0xdc32ad73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x396c1b9a # load x3 with 32 MSBs 0x00000000396c1b9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000396c1b9a
sw x3, 0(x2) # store x3 (0x396c1b9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000396c1b9a from memory into f6
fmadd.d f12, f10, f31, f6, dyn # perform operation
fmadd.d f12, f10, f31, f6, rdn # perform operation
fmadd.d f12, f10, f31, f6, rmm # perform operation
fmadd.d f12, f10, f31, f6, rne # perform operation
fmadd.d f12, f10, f31, f6, rtz # perform operation
fmadd.d f12, f10, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f10, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x21, 0xb6db377c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0xb3429c84 # load x3 with 32 MSBs 0x00000000b3429c84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3429c84
sw x3, 0(x2) # store x3 (0xb3429c84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b3429c84 from memory into f4
fmadd.d f21, f2, f5, f4, dyn # perform operation
fmadd.d f21, f2, f5, f4, rdn # perform operation
fmadd.d f21, f2, f5, f4, rmm # perform operation
fmadd.d f21, f2, f5, f4, rne # perform operation
fmadd.d f21, f2, f5, f4, rtz # perform operation
fmadd.d f21, f2, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f2, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f2, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f2, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f2, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f2, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x18, 0x8eea99ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0xe80979e1 # load x3 with 32 MSBs 0x00000000e80979e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e80979e1
sw x3, 0(x2) # store x3 (0xe80979e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e80979e1 from memory into f2
fmadd.d f18, f19, f9, f2, dyn # perform operation
fmadd.d f18, f19, f9, f2, rdn # perform operation
fmadd.d f18, f19, f9, f2, rmm # perform operation
fmadd.d f18, f19, f9, f2, rne # perform operation
fmadd.d f18, f19, f9, f2, rtz # perform operation
fmadd.d f18, f19, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f19, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f19, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f19, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f19, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f19, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x7, 0x4e3e42a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0xa05bffba # load x3 with 32 MSBs 0x00000000a05bffba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a05bffba
sw x3, 0(x2) # store x3 (0xa05bffba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a05bffba from memory into f18
fmadd.d f7, f1, f31, f18, dyn # perform operation
fmadd.d f7, f1, f31, f18, rdn # perform operation
fmadd.d f7, f1, f31, f18, rmm # perform operation
fmadd.d f7, f1, f31, f18, rne # perform operation
fmadd.d f7, f1, f31, f18, rtz # perform operation
fmadd.d f7, f1, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f1, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f1, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x17, 0x2617df73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0x8e85b7ae # load x3 with 32 MSBs 0x000000008e85b7ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e85b7ae
sw x3, 0(x2) # store x3 (0x8e85b7ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008e85b7ae from memory into f7
fmadd.d f17, f1, f26, f7, dyn # perform operation
fmadd.d f17, f1, f26, f7, rdn # perform operation
fmadd.d f17, f1, f26, f7, rmm # perform operation
fmadd.d f17, f1, f26, f7, rne # perform operation
fmadd.d f17, f1, f26, f7, rtz # perform operation
fmadd.d f17, f1, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f1, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f1, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f1, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f1, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f1, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x5, 0xf31d5bdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x70f9a730 # load x3 with 32 MSBs 0x0000000070f9a730
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070f9a730
sw x3, 0(x2) # store x3 (0x70f9a730) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000070f9a730 from memory into f6
fmadd.d f5, f10, f4, f6, dyn # perform operation
fmadd.d f5, f10, f4, f6, rdn # perform operation
fmadd.d f5, f10, f4, f6, rmm # perform operation
fmadd.d f5, f10, f4, f6, rne # perform operation
fmadd.d f5, f10, f4, f6, rtz # perform operation
fmadd.d f5, f10, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f10, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f10, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f10, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f10, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f10, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x5, 0x91d81478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0xe5bcc7e2 # load x3 with 32 MSBs 0x00000000e5bcc7e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5bcc7e2
sw x3, 0(x2) # store x3 (0xe5bcc7e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e5bcc7e2 from memory into f2
fmadd.d f5, f19, f17, f2, dyn # perform operation
fmadd.d f5, f19, f17, f2, rdn # perform operation
fmadd.d f5, f19, f17, f2, rmm # perform operation
fmadd.d f5, f19, f17, f2, rne # perform operation
fmadd.d f5, f19, f17, f2, rtz # perform operation
fmadd.d f5, f19, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f19, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x30, 0xc75a5b10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x06cd8107 # load x3 with 32 MSBs 0x0000000006cd8107
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006cd8107
sw x3, 0(x2) # store x3 (0x06cd8107) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000006cd8107 from memory into f31
fmadd.d f30, f14, f16, f31, dyn # perform operation
fmadd.d f30, f14, f16, f31, rdn # perform operation
fmadd.d f30, f14, f16, f31, rmm # perform operation
fmadd.d f30, f14, f16, f31, rne # perform operation
fmadd.d f30, f14, f16, f31, rtz # perform operation
fmadd.d f30, f14, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f14, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f14, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f14, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f14, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f14, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x13, 0x2169bc57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x243b1dcd # load x3 with 32 MSBs 0x00000000243b1dcd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000243b1dcd
sw x3, 0(x2) # store x3 (0x243b1dcd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000243b1dcd from memory into f27
fmadd.d f13, f10, f31, f27, dyn # perform operation
fmadd.d f13, f10, f31, f27, rdn # perform operation
fmadd.d f13, f10, f31, f27, rmm # perform operation
fmadd.d f13, f10, f31, f27, rne # perform operation
fmadd.d f13, f10, f31, f27, rtz # perform operation
fmadd.d f13, f10, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f10, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f10, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f10, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f10, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f10, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x11, 0xbc875625 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x08437200 # load x3 with 32 MSBs 0x0000000008437200
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008437200
sw x3, 0(x2) # store x3 (0x08437200) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000008437200 from memory into f20
fmadd.d f11, f6, f1, f20, dyn # perform operation
fmadd.d f11, f6, f1, f20, rdn # perform operation
fmadd.d f11, f6, f1, f20, rmm # perform operation
fmadd.d f11, f6, f1, f20, rne # perform operation
fmadd.d f11, f6, f1, f20, rtz # perform operation
fmadd.d f11, f6, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f6, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x23, 0x7fa7082f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x72ce8241 # load x3 with 32 MSBs 0x0000000072ce8241
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072ce8241
sw x3, 0(x2) # store x3 (0x72ce8241) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000072ce8241 from memory into f8
fmadd.d f23, f24, f18, f8, dyn # perform operation
fmadd.d f23, f24, f18, f8, rdn # perform operation
fmadd.d f23, f24, f18, f8, rmm # perform operation
fmadd.d f23, f24, f18, f8, rne # perform operation
fmadd.d f23, f24, f18, f8, rtz # perform operation
fmadd.d f23, f24, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f24, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x12, 0x7cf885ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x716cdd80 # load x3 with 32 MSBs 0x00000000716cdd80
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000716cdd80
sw x3, 0(x2) # store x3 (0x716cdd80) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000716cdd80 from memory into f19
fmadd.d f12, f22, f26, f19, dyn # perform operation
fmadd.d f12, f22, f26, f19, rdn # perform operation
fmadd.d f12, f22, f26, f19, rmm # perform operation
fmadd.d f12, f22, f26, f19, rne # perform operation
fmadd.d f12, f22, f26, f19, rtz # perform operation
fmadd.d f12, f22, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f22, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x27, 0xc6909c17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0xfeb51c4d # load x3 with 32 MSBs 0x00000000feb51c4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000feb51c4d
sw x3, 0(x2) # store x3 (0xfeb51c4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000feb51c4d from memory into f8
fmadd.d f27, f30, f23, f8, dyn # perform operation
fmadd.d f27, f30, f23, f8, rdn # perform operation
fmadd.d f27, f30, f23, f8, rmm # perform operation
fmadd.d f27, f30, f23, f8, rne # perform operation
fmadd.d f27, f30, f23, f8, rtz # perform operation
fmadd.d f27, f30, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f30, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x26, 0x9d5a7182 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x39056b0d # load x3 with 32 MSBs 0x0000000039056b0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039056b0d
sw x3, 0(x2) # store x3 (0x39056b0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000039056b0d from memory into f5
fmadd.d f26, f20, f10, f5, dyn # perform operation
fmadd.d f26, f20, f10, f5, rdn # perform operation
fmadd.d f26, f20, f10, f5, rmm # perform operation
fmadd.d f26, f20, f10, f5, rne # perform operation
fmadd.d f26, f20, f10, f5, rtz # perform operation
fmadd.d f26, f20, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f20, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f20, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f20, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f20, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f20, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x7, 0xe5e8b287 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0x034870d0 # load x3 with 32 MSBs 0x00000000034870d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000034870d0
sw x3, 0(x2) # store x3 (0x034870d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000034870d0 from memory into f19
fmadd.d f7, f18, f22, f19, dyn # perform operation
fmadd.d f7, f18, f22, f19, rdn # perform operation
fmadd.d f7, f18, f22, f19, rmm # perform operation
fmadd.d f7, f18, f22, f19, rne # perform operation
fmadd.d f7, f18, f22, f19, rtz # perform operation
fmadd.d f7, f18, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f18, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x27, 0xd7149b32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0x0b4c4ff0 # load x3 with 32 MSBs 0x000000000b4c4ff0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b4c4ff0
sw x3, 0(x2) # store x3 (0x0b4c4ff0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000b4c4ff0 from memory into f5
fmadd.d f27, f30, f24, f5, dyn # perform operation
fmadd.d f27, f30, f24, f5, rdn # perform operation
fmadd.d f27, f30, f24, f5, rmm # perform operation
fmadd.d f27, f30, f24, f5, rne # perform operation
fmadd.d f27, f30, f24, f5, rtz # perform operation
fmadd.d f27, f30, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f30, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x28, 0xbacb9c7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x805807d1 # load x3 with 32 MSBs 0x00000000805807d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000805807d1
sw x3, 0(x2) # store x3 (0x805807d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000805807d1 from memory into f14
fmadd.d f28, f21, f13, f14, dyn # perform operation
fmadd.d f28, f21, f13, f14, rdn # perform operation
fmadd.d f28, f21, f13, f14, rmm # perform operation
fmadd.d f28, f21, f13, f14, rne # perform operation
fmadd.d f28, f21, f13, f14, rtz # perform operation
fmadd.d f28, f21, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f21, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x7, 0xb2ecc10d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x39e1c474 # load x3 with 32 MSBs 0x0000000039e1c474
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039e1c474
sw x3, 0(x2) # store x3 (0x39e1c474) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000039e1c474 from memory into f29
fmadd.d f7, f24, f21, f29, dyn # perform operation
fmadd.d f7, f24, f21, f29, rdn # perform operation
fmadd.d f7, f24, f21, f29, rmm # perform operation
fmadd.d f7, f24, f21, f29, rne # perform operation
fmadd.d f7, f24, f21, f29, rtz # perform operation
fmadd.d f7, f24, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f24, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x24, 0x2652e494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x476fb855 # load x3 with 32 MSBs 0x00000000476fb855
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000476fb855
sw x3, 0(x2) # store x3 (0x476fb855) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000476fb855 from memory into f6
fmadd.d f24, f28, f21, f6, dyn # perform operation
fmadd.d f24, f28, f21, f6, rdn # perform operation
fmadd.d f24, f28, f21, f6, rmm # perform operation
fmadd.d f24, f28, f21, f6, rne # perform operation
fmadd.d f24, f28, f21, f6, rtz # perform operation
fmadd.d f24, f28, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f28, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x5, 0xad9193a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x734a7d92 # load x3 with 32 MSBs 0x00000000734a7d92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000734a7d92
sw x3, 0(x2) # store x3 (0x734a7d92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000734a7d92 from memory into f27
fmadd.d f5, f2, f29, f27, dyn # perform operation
fmadd.d f5, f2, f29, f27, rdn # perform operation
fmadd.d f5, f2, f29, f27, rmm # perform operation
fmadd.d f5, f2, f29, f27, rne # perform operation
fmadd.d f5, f2, f29, f27, rtz # perform operation
fmadd.d f5, f2, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f2, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x23, 0xedb60bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x3a964612 # load x3 with 32 MSBs 0x000000003a964612
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a964612
sw x3, 0(x2) # store x3 (0x3a964612) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003a964612 from memory into f28
fmadd.d f23, f11, f5, f28, dyn # perform operation
fmadd.d f23, f11, f5, f28, rdn # perform operation
fmadd.d f23, f11, f5, f28, rmm # perform operation
fmadd.d f23, f11, f5, f28, rne # perform operation
fmadd.d f23, f11, f5, f28, rtz # perform operation
fmadd.d f23, f11, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f11, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f11, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f11, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f11, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f11, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x22, 0xa4e51dde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x5b289e75 # load x3 with 32 MSBs 0x000000005b289e75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b289e75
sw x3, 0(x2) # store x3 (0x5b289e75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000005b289e75 from memory into f31
fmadd.d f22, f14, f13, f31, dyn # perform operation
fmadd.d f22, f14, f13, f31, rdn # perform operation
fmadd.d f22, f14, f13, f31, rmm # perform operation
fmadd.d f22, f14, f13, f31, rne # perform operation
fmadd.d f22, f14, f13, f31, rtz # perform operation
fmadd.d f22, f14, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f14, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f14, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f14, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f14, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f14, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x8, 0x9cf82e25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0xb3164bbc # load x3 with 32 MSBs 0x00000000b3164bbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3164bbc
sw x3, 0(x2) # store x3 (0xb3164bbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b3164bbc from memory into f18
fmadd.d f8, f21, f26, f18, dyn # perform operation
fmadd.d f8, f21, f26, f18, rdn # perform operation
fmadd.d f8, f21, f26, f18, rmm # perform operation
fmadd.d f8, f21, f26, f18, rne # perform operation
fmadd.d f8, f21, f26, f18, rtz # perform operation
fmadd.d f8, f21, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f21, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f21, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0x4a644f42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0xe95a6be8 # load x3 with 32 MSBs 0x00000000e95a6be8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e95a6be8
sw x3, 0(x2) # store x3 (0xe95a6be8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e95a6be8 from memory into f22
fmadd.d f12, f14, f7, f22, dyn # perform operation
fmadd.d f12, f14, f7, f22, rdn # perform operation
fmadd.d f12, f14, f7, f22, rmm # perform operation
fmadd.d f12, f14, f7, f22, rne # perform operation
fmadd.d f12, f14, f7, f22, rtz # perform operation
fmadd.d f12, f14, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f14, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f14, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f14, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f14, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f14, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x5, 0xfaaa927f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xad083fe4 # load x3 with 32 MSBs 0x00000000ad083fe4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad083fe4
sw x3, 0(x2) # store x3 (0xad083fe4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ad083fe4 from memory into f9
fmadd.d f5, f6, f14, f9, dyn # perform operation
fmadd.d f5, f6, f14, f9, rdn # perform operation
fmadd.d f5, f6, f14, f9, rmm # perform operation
fmadd.d f5, f6, f14, f9, rne # perform operation
fmadd.d f5, f6, f14, f9, rtz # perform operation
fmadd.d f5, f6, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f6, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x13, 0x72cc66e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0xf33a8ec5 # load x3 with 32 MSBs 0x00000000f33a8ec5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f33a8ec5
sw x3, 0(x2) # store x3 (0xf33a8ec5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f33a8ec5 from memory into f6
fmadd.d f13, f25, f31, f6, dyn # perform operation
fmadd.d f13, f25, f31, f6, rdn # perform operation
fmadd.d f13, f25, f31, f6, rmm # perform operation
fmadd.d f13, f25, f31, f6, rne # perform operation
fmadd.d f13, f25, f31, f6, rtz # perform operation
fmadd.d f13, f25, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f25, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f25, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x29, 0xfacc20a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0xb9a8d10f # load x3 with 32 MSBs 0x00000000b9a8d10f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9a8d10f
sw x3, 0(x2) # store x3 (0xb9a8d10f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b9a8d10f from memory into f23
fmadd.d f29, f28, f31, f23, dyn # perform operation
fmadd.d f29, f28, f31, f23, rdn # perform operation
fmadd.d f29, f28, f31, f23, rmm # perform operation
fmadd.d f29, f28, f31, f23, rne # perform operation
fmadd.d f29, f28, f31, f23, rtz # perform operation
fmadd.d f29, f28, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f28, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f28, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x20, 0x4bd7f596 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x7b827fe9 # load x3 with 32 MSBs 0x000000007b827fe9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b827fe9
sw x3, 0(x2) # store x3 (0x7b827fe9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007b827fe9 from memory into f28
fmadd.d f20, f1, f11, f28, dyn # perform operation
fmadd.d f20, f1, f11, f28, rdn # perform operation
fmadd.d f20, f1, f11, f28, rmm # perform operation
fmadd.d f20, f1, f11, f28, rne # perform operation
fmadd.d f20, f1, f11, f28, rtz # perform operation
fmadd.d f20, f1, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f1, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x11, 0xa5451e58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0xb0cfb16d # load x3 with 32 MSBs 0x00000000b0cfb16d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0cfb16d
sw x3, 0(x2) # store x3 (0xb0cfb16d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b0cfb16d from memory into f26
fmadd.d f11, f21, f13, f26, dyn # perform operation
fmadd.d f11, f21, f13, f26, rdn # perform operation
fmadd.d f11, f21, f13, f26, rmm # perform operation
fmadd.d f11, f21, f13, f26, rne # perform operation
fmadd.d f11, f21, f13, f26, rtz # perform operation
fmadd.d f11, f21, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f21, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x14, 0xef2b5b7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0xe73ebbb3 # load x3 with 32 MSBs 0x00000000e73ebbb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e73ebbb3
sw x3, 0(x2) # store x3 (0xe73ebbb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e73ebbb3 from memory into f17
fmadd.d f14, f24, f20, f17, dyn # perform operation
fmadd.d f14, f24, f20, f17, rdn # perform operation
fmadd.d f14, f24, f20, f17, rmm # perform operation
fmadd.d f14, f24, f20, f17, rne # perform operation
fmadd.d f14, f24, f20, f17, rtz # perform operation
fmadd.d f14, f24, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f24, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f24, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f24, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f24, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f24, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x15, 0x890ba95c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0xb1ca2498 # load x3 with 32 MSBs 0x00000000b1ca2498
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1ca2498
sw x3, 0(x2) # store x3 (0xb1ca2498) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b1ca2498 from memory into f16
fmadd.d f15, f12, f14, f16, dyn # perform operation
fmadd.d f15, f12, f14, f16, rdn # perform operation
fmadd.d f15, f12, f14, f16, rmm # perform operation
fmadd.d f15, f12, f14, f16, rne # perform operation
fmadd.d f15, f12, f14, f16, rtz # perform operation
fmadd.d f15, f12, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f12, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x7, 0xf9826179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
li x3, 0x889e7b4e # load x3 with 32 MSBs 0x00000000889e7b4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000889e7b4e
sw x3, 0(x2) # store x3 (0x889e7b4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000889e7b4e from memory into f20
fmadd.d f7, f24, f14, f20, dyn # perform operation
fmadd.d f7, f24, f14, f20, rdn # perform operation
fmadd.d f7, f24, f14, f20, rmm # perform operation
fmadd.d f7, f24, f14, f20, rne # perform operation
fmadd.d f7, f24, f14, f20, rtz # perform operation
fmadd.d f7, f24, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f24, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x1, 0xb9a47212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x08860053 # load x3 with 32 MSBs 0x0000000008860053
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008860053
sw x3, 0(x2) # store x3 (0x08860053) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000008860053 from memory into f29
fmadd.d f1, f14, f25, f29, dyn # perform operation
fmadd.d f1, f14, f25, f29, rdn # perform operation
fmadd.d f1, f14, f25, f29, rmm # perform operation
fmadd.d f1, f14, f25, f29, rne # perform operation
fmadd.d f1, f14, f25, f29, rtz # perform operation
fmadd.d f1, f14, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f14, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f14, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f14, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f14, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f14, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x1, 0x0f58686c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0x48898b30 # load x3 with 32 MSBs 0x0000000048898b30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048898b30
sw x3, 0(x2) # store x3 (0x48898b30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000048898b30 from memory into f19
fmadd.d f1, f26, f12, f19, dyn # perform operation
fmadd.d f1, f26, f12, f19, rdn # perform operation
fmadd.d f1, f26, f12, f19, rmm # perform operation
fmadd.d f1, f26, f12, f19, rne # perform operation
fmadd.d f1, f26, f12, f19, rtz # perform operation
fmadd.d f1, f26, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f26, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x30, 0xa6de4f8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x9674cf68 # load x3 with 32 MSBs 0x000000009674cf68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009674cf68
sw x3, 0(x2) # store x3 (0x9674cf68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009674cf68 from memory into f13
fmadd.d f30, f4, f22, f13, dyn # perform operation
fmadd.d f30, f4, f22, f13, rdn # perform operation
fmadd.d f30, f4, f22, f13, rmm # perform operation
fmadd.d f30, f4, f22, f13, rne # perform operation
fmadd.d f30, f4, f22, f13, rtz # perform operation
fmadd.d f30, f4, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f4, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f4, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x16, 0xb11fcafe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0x340b9849 # load x3 with 32 MSBs 0x00000000340b9849
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000340b9849
sw x3, 0(x2) # store x3 (0x340b9849) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000340b9849 from memory into f28
fmadd.d f16, f30, f20, f28, dyn # perform operation
fmadd.d f16, f30, f20, f28, rdn # perform operation
fmadd.d f16, f30, f20, f28, rmm # perform operation
fmadd.d f16, f30, f20, f28, rne # perform operation
fmadd.d f16, f30, f20, f28, rtz # perform operation
fmadd.d f16, f30, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f30, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x4, 0x4258256a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0x3c64d10b # load x3 with 32 MSBs 0x000000003c64d10b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c64d10b
sw x3, 0(x2) # store x3 (0x3c64d10b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003c64d10b from memory into f25
fmadd.d f4, f3, f28, f25, dyn # perform operation
fmadd.d f4, f3, f28, f25, rdn # perform operation
fmadd.d f4, f3, f28, f25, rmm # perform operation
fmadd.d f4, f3, f28, f25, rne # perform operation
fmadd.d f4, f3, f28, f25, rtz # perform operation
fmadd.d f4, f3, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f3, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f3, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x29, 0x47d8dd09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x58050b82 # load x3 with 32 MSBs 0x0000000058050b82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058050b82
sw x3, 0(x2) # store x3 (0x58050b82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000058050b82 from memory into f3
fmadd.d f29, f20, f10, f3, dyn # perform operation
fmadd.d f29, f20, f10, f3, rdn # perform operation
fmadd.d f29, f20, f10, f3, rmm # perform operation
fmadd.d f29, f20, f10, f3, rne # perform operation
fmadd.d f29, f20, f10, f3, rtz # perform operation
fmadd.d f29, f20, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f20, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x16, 0xd4a7ae85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x1e821298 # load x3 with 32 MSBs 0x000000001e821298
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e821298
sw x3, 0(x2) # store x3 (0x1e821298) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000001e821298 from memory into f9
fmadd.d f16, f10, f15, f9, dyn # perform operation
fmadd.d f16, f10, f15, f9, rdn # perform operation
fmadd.d f16, f10, f15, f9, rmm # perform operation
fmadd.d f16, f10, f15, f9, rne # perform operation
fmadd.d f16, f10, f15, f9, rtz # perform operation
fmadd.d f16, f10, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f10, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f10, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x22, 0xe37f9404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x8ace3fa0 # load x3 with 32 MSBs 0x000000008ace3fa0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ace3fa0
sw x3, 0(x2) # store x3 (0x8ace3fa0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008ace3fa0 from memory into f31
fmadd.d f22, f27, f23, f31, dyn # perform operation
fmadd.d f22, f27, f23, f31, rdn # perform operation
fmadd.d f22, f27, f23, f31, rmm # perform operation
fmadd.d f22, f27, f23, f31, rne # perform operation
fmadd.d f22, f27, f23, f31, rtz # perform operation
fmadd.d f22, f27, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f27, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f27, f23, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x31, 0x6ad3d765 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x7ff06d94 # load x3 with 32 MSBs 0x000000007ff06d94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ff06d94
sw x3, 0(x2) # store x3 (0x7ff06d94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007ff06d94 from memory into f5
fmadd.d f31, f12, f30, f5, dyn # perform operation
fmadd.d f31, f12, f30, f5, rdn # perform operation
fmadd.d f31, f12, f30, f5, rmm # perform operation
fmadd.d f31, f12, f30, f5, rne # perform operation
fmadd.d f31, f12, f30, f5, rtz # perform operation
fmadd.d f31, f12, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f12, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f12, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x11, 0xf421db4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x946b6d76 # load x3 with 32 MSBs 0x00000000946b6d76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000946b6d76
sw x3, 0(x2) # store x3 (0x946b6d76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000946b6d76 from memory into f17
fmadd.d f11, f25, f23, f17, dyn # perform operation
fmadd.d f11, f25, f23, f17, rdn # perform operation
fmadd.d f11, f25, f23, f17, rmm # perform operation
fmadd.d f11, f25, f23, f17, rne # perform operation
fmadd.d f11, f25, f23, f17, rtz # perform operation
fmadd.d f11, f25, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f25, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f25, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x23, 0x744cea22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x5344eefd # load x3 with 32 MSBs 0x000000005344eefd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005344eefd
sw x3, 0(x2) # store x3 (0x5344eefd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005344eefd from memory into f17
fmadd.d f23, f21, f26, f17, dyn # perform operation
fmadd.d f23, f21, f26, f17, rdn # perform operation
fmadd.d f23, f21, f26, f17, rmm # perform operation
fmadd.d f23, f21, f26, f17, rne # perform operation
fmadd.d f23, f21, f26, f17, rtz # perform operation
fmadd.d f23, f21, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f21, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f21, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f21, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f21, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f21, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x18, 0xeae5de3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0xada61f4c # load x3 with 32 MSBs 0x00000000ada61f4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ada61f4c
sw x3, 0(x2) # store x3 (0xada61f4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ada61f4c from memory into f9
fmadd.d f18, f7, f2, f9, dyn # perform operation
fmadd.d f18, f7, f2, f9, rdn # perform operation
fmadd.d f18, f7, f2, f9, rmm # perform operation
fmadd.d f18, f7, f2, f9, rne # perform operation
fmadd.d f18, f7, f2, f9, rtz # perform operation
fmadd.d f18, f7, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f7, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x12, 0x236d66cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0xbbee66e5 # load x3 with 32 MSBs 0x00000000bbee66e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbee66e5
sw x3, 0(x2) # store x3 (0xbbee66e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000bbee66e5 from memory into f19
fmadd.d f12, f31, f9, f19, dyn # perform operation
fmadd.d f12, f31, f9, f19, rdn # perform operation
fmadd.d f12, f31, f9, f19, rmm # perform operation
fmadd.d f12, f31, f9, f19, rne # perform operation
fmadd.d f12, f31, f9, f19, rtz # perform operation
fmadd.d f12, f31, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f31, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f31, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x15, 0x40a12e7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x3cd8fa27 # load x3 with 32 MSBs 0x000000003cd8fa27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cd8fa27
sw x3, 0(x2) # store x3 (0x3cd8fa27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000003cd8fa27 from memory into f27
fmadd.d f15, f29, f16, f27, dyn # perform operation
fmadd.d f15, f29, f16, f27, rdn # perform operation
fmadd.d f15, f29, f16, f27, rmm # perform operation
fmadd.d f15, f29, f16, f27, rne # perform operation
fmadd.d f15, f29, f16, f27, rtz # perform operation
fmadd.d f15, f29, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f29, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x12, 0x6cd9356d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0xce5fb14a # load x3 with 32 MSBs 0x00000000ce5fb14a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ce5fb14a
sw x3, 0(x2) # store x3 (0xce5fb14a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ce5fb14a from memory into f19
fmadd.d f12, f11, f24, f19, dyn # perform operation
fmadd.d f12, f11, f24, f19, rdn # perform operation
fmadd.d f12, f11, f24, f19, rmm # perform operation
fmadd.d f12, f11, f24, f19, rne # perform operation
fmadd.d f12, f11, f24, f19, rtz # perform operation
fmadd.d f12, f11, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f11, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f11, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f11, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f11, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f11, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x20, 0xb582fe05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0xc6736e1c # load x3 with 32 MSBs 0x00000000c6736e1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6736e1c
sw x3, 0(x2) # store x3 (0xc6736e1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c6736e1c from memory into f4
fmadd.d f20, f7, f1, f4, dyn # perform operation
fmadd.d f20, f7, f1, f4, rdn # perform operation
fmadd.d f20, f7, f1, f4, rmm # perform operation
fmadd.d f20, f7, f1, f4, rne # perform operation
fmadd.d f20, f7, f1, f4, rtz # perform operation
fmadd.d f20, f7, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f7, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f7, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f7, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f7, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f7, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x23, 0x8bce320d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x8e31f3f7 # load x3 with 32 MSBs 0x000000008e31f3f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e31f3f7
sw x3, 0(x2) # store x3 (0x8e31f3f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000008e31f3f7 from memory into f14
fmadd.d f23, f16, f29, f14, dyn # perform operation
fmadd.d f23, f16, f29, f14, rdn # perform operation
fmadd.d f23, f16, f29, f14, rmm # perform operation
fmadd.d f23, f16, f29, f14, rne # perform operation
fmadd.d f23, f16, f29, f14, rtz # perform operation
fmadd.d f23, f16, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f16, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f16, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f16, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f16, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f16, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x17, 0x86d8ce29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x17377219 # load x3 with 32 MSBs 0x0000000017377219
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017377219
sw x3, 0(x2) # store x3 (0x17377219) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000017377219 from memory into f12
fmadd.d f17, f4, f14, f12, dyn # perform operation
fmadd.d f17, f4, f14, f12, rdn # perform operation
fmadd.d f17, f4, f14, f12, rmm # perform operation
fmadd.d f17, f4, f14, f12, rne # perform operation
fmadd.d f17, f4, f14, f12, rtz # perform operation
fmadd.d f17, f4, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f4, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f4, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f4, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f4, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f4, f14, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x18, 0x5b201cba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x5bfcbc4d # load x3 with 32 MSBs 0x000000005bfcbc4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005bfcbc4d
sw x3, 0(x2) # store x3 (0x5bfcbc4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005bfcbc4d from memory into f29
fmadd.d f18, f27, f11, f29, dyn # perform operation
fmadd.d f18, f27, f11, f29, rdn # perform operation
fmadd.d f18, f27, f11, f29, rmm # perform operation
fmadd.d f18, f27, f11, f29, rne # perform operation
fmadd.d f18, f27, f11, f29, rtz # perform operation
fmadd.d f18, f27, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f27, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f27, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f27, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f27, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f27, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x14, 0x081bd492 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0xbb808c8c # load x3 with 32 MSBs 0x00000000bb808c8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb808c8c
sw x3, 0(x2) # store x3 (0xbb808c8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000bb808c8c from memory into f25
fmadd.d f14, f8, f30, f25, dyn # perform operation
fmadd.d f14, f8, f30, f25, rdn # perform operation
fmadd.d f14, f8, f30, f25, rmm # perform operation
fmadd.d f14, f8, f30, f25, rne # perform operation
fmadd.d f14, f8, f30, f25, rtz # perform operation
fmadd.d f14, f8, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f8, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f8, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f8, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f8, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f8, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x28, 0xbb67e15b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0xa42cd19c # load x3 with 32 MSBs 0x00000000a42cd19c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a42cd19c
sw x3, 0(x2) # store x3 (0xa42cd19c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a42cd19c from memory into f2
fmadd.d f28, f23, f20, f2, dyn # perform operation
fmadd.d f28, f23, f20, f2, rdn # perform operation
fmadd.d f28, f23, f20, f2, rmm # perform operation
fmadd.d f28, f23, f20, f2, rne # perform operation
fmadd.d f28, f23, f20, f2, rtz # perform operation
fmadd.d f28, f23, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f23, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x17, 0x469b22d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x3de346e5 # load x3 with 32 MSBs 0x000000003de346e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003de346e5
sw x3, 0(x2) # store x3 (0x3de346e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003de346e5 from memory into f5
fmadd.d f17, f16, f30, f5, dyn # perform operation
fmadd.d f17, f16, f30, f5, rdn # perform operation
fmadd.d f17, f16, f30, f5, rmm # perform operation
fmadd.d f17, f16, f30, f5, rne # perform operation
fmadd.d f17, f16, f30, f5, rtz # perform operation
fmadd.d f17, f16, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f16, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f16, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f16, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f16, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f16, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x25, 0xa1a39c25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0xf02bafde # load x3 with 32 MSBs 0x00000000f02bafde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f02bafde
sw x3, 0(x2) # store x3 (0xf02bafde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000f02bafde from memory into f13
fmadd.d f25, f15, f1, f13, dyn # perform operation
fmadd.d f25, f15, f1, f13, rdn # perform operation
fmadd.d f25, f15, f1, f13, rmm # perform operation
fmadd.d f25, f15, f1, f13, rne # perform operation
fmadd.d f25, f15, f1, f13, rtz # perform operation
fmadd.d f25, f15, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f15, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f15, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x14, 0xc65b0f03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0xfc998c32 # load x3 with 32 MSBs 0x00000000fc998c32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc998c32
sw x3, 0(x2) # store x3 (0xfc998c32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000fc998c32 from memory into f12
fmadd.d f14, f21, f31, f12, dyn # perform operation
fmadd.d f14, f21, f31, f12, rdn # perform operation
fmadd.d f14, f21, f31, f12, rmm # perform operation
fmadd.d f14, f21, f31, f12, rne # perform operation
fmadd.d f14, f21, f31, f12, rtz # perform operation
fmadd.d f14, f21, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f21, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f21, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x14, 0x11162fa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0xda1a48cb # load x3 with 32 MSBs 0x00000000da1a48cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da1a48cb
sw x3, 0(x2) # store x3 (0xda1a48cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000da1a48cb from memory into f4
fmadd.d f14, f11, f13, f4, dyn # perform operation
fmadd.d f14, f11, f13, f4, rdn # perform operation
fmadd.d f14, f11, f13, f4, rmm # perform operation
fmadd.d f14, f11, f13, f4, rne # perform operation
fmadd.d f14, f11, f13, f4, rtz # perform operation
fmadd.d f14, f11, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f11, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f11, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f11, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f11, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f11, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x10, 0x900e0471 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0xa4cdbde8 # load x3 with 32 MSBs 0x00000000a4cdbde8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4cdbde8
sw x3, 0(x2) # store x3 (0xa4cdbde8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a4cdbde8 from memory into f28
fmadd.d f10, f5, f26, f28, dyn # perform operation
fmadd.d f10, f5, f26, f28, rdn # perform operation
fmadd.d f10, f5, f26, f28, rmm # perform operation
fmadd.d f10, f5, f26, f28, rne # perform operation
fmadd.d f10, f5, f26, f28, rtz # perform operation
fmadd.d f10, f5, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f5, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x15, 0xdc16a34c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x3b75804f # load x3 with 32 MSBs 0x000000003b75804f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b75804f
sw x3, 0(x2) # store x3 (0x3b75804f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000003b75804f from memory into f1
fmadd.d f15, f3, f26, f1, dyn # perform operation
fmadd.d f15, f3, f26, f1, rdn # perform operation
fmadd.d f15, f3, f26, f1, rmm # perform operation
fmadd.d f15, f3, f26, f1, rne # perform operation
fmadd.d f15, f3, f26, f1, rtz # perform operation
fmadd.d f15, f3, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f3, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f3, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x30, 0xd9d4cc65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x1c42c4eb # load x3 with 32 MSBs 0x000000001c42c4eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c42c4eb
sw x3, 0(x2) # store x3 (0x1c42c4eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001c42c4eb from memory into f28
fmadd.d f30, f6, f23, f28, dyn # perform operation
fmadd.d f30, f6, f23, f28, rdn # perform operation
fmadd.d f30, f6, f23, f28, rmm # perform operation
fmadd.d f30, f6, f23, f28, rne # perform operation
fmadd.d f30, f6, f23, f28, rtz # perform operation
fmadd.d f30, f6, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f6, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x24, 0xefaa138b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x59e15a4d # load x3 with 32 MSBs 0x0000000059e15a4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059e15a4d
sw x3, 0(x2) # store x3 (0x59e15a4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000059e15a4d from memory into f28
fmadd.d f24, f6, f20, f28, dyn # perform operation
fmadd.d f24, f6, f20, f28, rdn # perform operation
fmadd.d f24, f6, f20, f28, rmm # perform operation
fmadd.d f24, f6, f20, f28, rne # perform operation
fmadd.d f24, f6, f20, f28, rtz # perform operation
fmadd.d f24, f6, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f6, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f6, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x1, 0x1c693b45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0x126b8678 # load x3 with 32 MSBs 0x00000000126b8678
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000126b8678
sw x3, 0(x2) # store x3 (0x126b8678) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000126b8678 from memory into f24
fmadd.d f1, f21, f23, f24, dyn # perform operation
fmadd.d f1, f21, f23, f24, rdn # perform operation
fmadd.d f1, f21, f23, f24, rmm # perform operation
fmadd.d f1, f21, f23, f24, rne # perform operation
fmadd.d f1, f21, f23, f24, rtz # perform operation
fmadd.d f1, f21, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f21, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f21, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f21, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f21, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f21, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x21, 0xf702112d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x140ee83e # load x3 with 32 MSBs 0x00000000140ee83e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000140ee83e
sw x3, 0(x2) # store x3 (0x140ee83e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000140ee83e from memory into f25
fmadd.d f21, f23, f27, f25, dyn # perform operation
fmadd.d f21, f23, f27, f25, rdn # perform operation
fmadd.d f21, f23, f27, f25, rmm # perform operation
fmadd.d f21, f23, f27, f25, rne # perform operation
fmadd.d f21, f23, f27, f25, rtz # perform operation
fmadd.d f21, f23, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f23, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x12, 0xcea4a519 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x26afe31f # load x3 with 32 MSBs 0x0000000026afe31f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026afe31f
sw x3, 0(x2) # store x3 (0x26afe31f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000026afe31f from memory into f16
fmadd.d f12, f7, f23, f16, dyn # perform operation
fmadd.d f12, f7, f23, f16, rdn # perform operation
fmadd.d f12, f7, f23, f16, rmm # perform operation
fmadd.d f12, f7, f23, f16, rne # perform operation
fmadd.d f12, f7, f23, f16, rtz # perform operation
fmadd.d f12, f7, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f7, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x27, 0xaf0736ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x3c5f2b5a # load x3 with 32 MSBs 0x000000003c5f2b5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c5f2b5a
sw x3, 0(x2) # store x3 (0x3c5f2b5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003c5f2b5a from memory into f8
fmadd.d f27, f17, f13, f8, dyn # perform operation
fmadd.d f27, f17, f13, f8, rdn # perform operation
fmadd.d f27, f17, f13, f8, rmm # perform operation
fmadd.d f27, f17, f13, f8, rne # perform operation
fmadd.d f27, f17, f13, f8, rtz # perform operation
fmadd.d f27, f17, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f17, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x16, 0x3cac21cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0xe8c72047 # load x3 with 32 MSBs 0x00000000e8c72047
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8c72047
sw x3, 0(x2) # store x3 (0xe8c72047) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e8c72047 from memory into f6
fmadd.d f16, f22, f30, f6, dyn # perform operation
fmadd.d f16, f22, f30, f6, rdn # perform operation
fmadd.d f16, f22, f30, f6, rmm # perform operation
fmadd.d f16, f22, f30, f6, rne # perform operation
fmadd.d f16, f22, f30, f6, rtz # perform operation
fmadd.d f16, f22, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f22, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f22, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x28, 0x25690a56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0xfe9603ee # load x3 with 32 MSBs 0x00000000fe9603ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe9603ee
sw x3, 0(x2) # store x3 (0xfe9603ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000fe9603ee from memory into f9
fmadd.d f28, f15, f20, f9, dyn # perform operation
fmadd.d f28, f15, f20, f9, rdn # perform operation
fmadd.d f28, f15, f20, f9, rmm # perform operation
fmadd.d f28, f15, f20, f9, rne # perform operation
fmadd.d f28, f15, f20, f9, rtz # perform operation
fmadd.d f28, f15, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f15, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x11, 0xad7042a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0xe9ffbee8 # load x3 with 32 MSBs 0x00000000e9ffbee8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9ffbee8
sw x3, 0(x2) # store x3 (0xe9ffbee8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e9ffbee8 from memory into f4
fmadd.d f11, f5, f29, f4, dyn # perform operation
fmadd.d f11, f5, f29, f4, rdn # perform operation
fmadd.d f11, f5, f29, f4, rmm # perform operation
fmadd.d f11, f5, f29, f4, rne # perform operation
fmadd.d f11, f5, f29, f4, rtz # perform operation
fmadd.d f11, f5, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f5, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f5, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f5, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f5, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f5, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x15, 0x9bb9c3a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x48f48ad8 # load x3 with 32 MSBs 0x0000000048f48ad8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048f48ad8
sw x3, 0(x2) # store x3 (0x48f48ad8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000048f48ad8 from memory into f10
fmadd.d f15, f25, f31, f10, dyn # perform operation
fmadd.d f15, f25, f31, f10, rdn # perform operation
fmadd.d f15, f25, f31, f10, rmm # perform operation
fmadd.d f15, f25, f31, f10, rne # perform operation
fmadd.d f15, f25, f31, f10, rtz # perform operation
fmadd.d f15, f25, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f25, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x28, 0x35592304 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x4e98f3df # load x3 with 32 MSBs 0x000000004e98f3df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e98f3df
sw x3, 0(x2) # store x3 (0x4e98f3df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004e98f3df from memory into f2
fmadd.d f28, f1, f23, f2, dyn # perform operation
fmadd.d f28, f1, f23, f2, rdn # perform operation
fmadd.d f28, f1, f23, f2, rmm # perform operation
fmadd.d f28, f1, f23, f2, rne # perform operation
fmadd.d f28, f1, f23, f2, rtz # perform operation
fmadd.d f28, f1, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f1, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f1, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f1, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f1, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f1, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x21, 0x1e72ea08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0xe1beace5 # load x3 with 32 MSBs 0x00000000e1beace5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1beace5
sw x3, 0(x2) # store x3 (0xe1beace5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e1beace5 from memory into f12
fmadd.d f21, f2, f31, f12, dyn # perform operation
fmadd.d f21, f2, f31, f12, rdn # perform operation
fmadd.d f21, f2, f31, f12, rmm # perform operation
fmadd.d f21, f2, f31, f12, rne # perform operation
fmadd.d f21, f2, f31, f12, rtz # perform operation
fmadd.d f21, f2, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f2, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f2, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f2, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f2, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f2, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x18, 0x0fb0b43c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x7057fda3 # load x3 with 32 MSBs 0x000000007057fda3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007057fda3
sw x3, 0(x2) # store x3 (0x7057fda3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000007057fda3 from memory into f23
fmadd.d f18, f24, f5, f23, dyn # perform operation
fmadd.d f18, f24, f5, f23, rdn # perform operation
fmadd.d f18, f24, f5, f23, rmm # perform operation
fmadd.d f18, f24, f5, f23, rne # perform operation
fmadd.d f18, f24, f5, f23, rtz # perform operation
fmadd.d f18, f24, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f24, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f24, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f24, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f24, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f24, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x14, 0x3713a8b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x612edc5c # load x3 with 32 MSBs 0x00000000612edc5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000612edc5c
sw x3, 0(x2) # store x3 (0x612edc5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000612edc5c from memory into f19
fmadd.d f14, f7, f11, f19, dyn # perform operation
fmadd.d f14, f7, f11, f19, rdn # perform operation
fmadd.d f14, f7, f11, f19, rmm # perform operation
fmadd.d f14, f7, f11, f19, rne # perform operation
fmadd.d f14, f7, f11, f19, rtz # perform operation
fmadd.d f14, f7, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f7, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f7, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x26, 0x41df0aca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x9cdec7bf # load x3 with 32 MSBs 0x000000009cdec7bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cdec7bf
sw x3, 0(x2) # store x3 (0x9cdec7bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009cdec7bf from memory into f13
fmadd.d f26, f24, f22, f13, dyn # perform operation
fmadd.d f26, f24, f22, f13, rdn # perform operation
fmadd.d f26, f24, f22, f13, rmm # perform operation
fmadd.d f26, f24, f22, f13, rne # perform operation
fmadd.d f26, f24, f22, f13, rtz # perform operation
fmadd.d f26, f24, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f24, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x22, 0xbaad4a22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x11f9c2ac # load x3 with 32 MSBs 0x0000000011f9c2ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011f9c2ac
sw x3, 0(x2) # store x3 (0x11f9c2ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000011f9c2ac from memory into f20
fmadd.d f22, f13, f9, f20, dyn # perform operation
fmadd.d f22, f13, f9, f20, rdn # perform operation
fmadd.d f22, f13, f9, f20, rmm # perform operation
fmadd.d f22, f13, f9, f20, rne # perform operation
fmadd.d f22, f13, f9, f20, rtz # perform operation
fmadd.d f22, f13, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f13, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x7, 0xffc2f165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x8ba326cd # load x3 with 32 MSBs 0x000000008ba326cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ba326cd
sw x3, 0(x2) # store x3 (0x8ba326cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000008ba326cd from memory into f1
fmadd.d f7, f22, f8, f1, dyn # perform operation
fmadd.d f7, f22, f8, f1, rdn # perform operation
fmadd.d f7, f22, f8, f1, rmm # perform operation
fmadd.d f7, f22, f8, f1, rne # perform operation
fmadd.d f7, f22, f8, f1, rtz # perform operation
fmadd.d f7, f22, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f22, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f22, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x27, 0x382ac5ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x7e2f88b7 # load x3 with 32 MSBs 0x000000007e2f88b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e2f88b7
sw x3, 0(x2) # store x3 (0x7e2f88b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000007e2f88b7 from memory into f15
fmadd.d f27, f11, f4, f15, dyn # perform operation
fmadd.d f27, f11, f4, f15, rdn # perform operation
fmadd.d f27, f11, f4, f15, rmm # perform operation
fmadd.d f27, f11, f4, f15, rne # perform operation
fmadd.d f27, f11, f4, f15, rtz # perform operation
fmadd.d f27, f11, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f11, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f11, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f11, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f11, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f11, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x10, 0x2da03c20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x2061870e # load x3 with 32 MSBs 0x000000002061870e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002061870e
sw x3, 0(x2) # store x3 (0x2061870e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002061870e from memory into f3
fmadd.d f10, f8, f4, f3, dyn # perform operation
fmadd.d f10, f8, f4, f3, rdn # perform operation
fmadd.d f10, f8, f4, f3, rmm # perform operation
fmadd.d f10, f8, f4, f3, rne # perform operation
fmadd.d f10, f8, f4, f3, rtz # perform operation
fmadd.d f10, f8, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f8, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f8, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f8, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f8, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f8, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x6, 0xb006d700 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x510e07dd # load x3 with 32 MSBs 0x00000000510e07dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000510e07dd
sw x3, 0(x2) # store x3 (0x510e07dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000510e07dd from memory into f23
fmadd.d f6, f15, f16, f23, dyn # perform operation
fmadd.d f6, f15, f16, f23, rdn # perform operation
fmadd.d f6, f15, f16, f23, rmm # perform operation
fmadd.d f6, f15, f16, f23, rne # perform operation
fmadd.d f6, f15, f16, f23, rtz # perform operation
fmadd.d f6, f15, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f15, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x9, 0xa9828d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0xc203bda9 # load x3 with 32 MSBs 0x00000000c203bda9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c203bda9
sw x3, 0(x2) # store x3 (0xc203bda9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000c203bda9 from memory into f12
fmadd.d f9, f15, f30, f12, dyn # perform operation
fmadd.d f9, f15, f30, f12, rdn # perform operation
fmadd.d f9, f15, f30, f12, rmm # perform operation
fmadd.d f9, f15, f30, f12, rne # perform operation
fmadd.d f9, f15, f30, f12, rtz # perform operation
fmadd.d f9, f15, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f15, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x27, 0x5b0339b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0xeb6847c1 # load x3 with 32 MSBs 0x00000000eb6847c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb6847c1
sw x3, 0(x2) # store x3 (0xeb6847c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000eb6847c1 from memory into f30
fmadd.d f27, f16, f7, f30, dyn # perform operation
fmadd.d f27, f16, f7, f30, rdn # perform operation
fmadd.d f27, f16, f7, f30, rmm # perform operation
fmadd.d f27, f16, f7, f30, rne # perform operation
fmadd.d f27, f16, f7, f30, rtz # perform operation
fmadd.d f27, f16, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f16, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x19, 0xbecd59fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x885de490 # load x3 with 32 MSBs 0x00000000885de490
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000885de490
sw x3, 0(x2) # store x3 (0x885de490) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000885de490 from memory into f1
fmadd.d f19, f10, f24, f1, dyn # perform operation
fmadd.d f19, f10, f24, f1, rdn # perform operation
fmadd.d f19, f10, f24, f1, rmm # perform operation
fmadd.d f19, f10, f24, f1, rne # perform operation
fmadd.d f19, f10, f24, f1, rtz # perform operation
fmadd.d f19, f10, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f10, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f10, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f10, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f10, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f10, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x22, 0xc9e9f473 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x8227722c # load x3 with 32 MSBs 0x000000008227722c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008227722c
sw x3, 0(x2) # store x3 (0x8227722c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008227722c from memory into f5
fmadd.d f22, f17, f2, f5, dyn # perform operation
fmadd.d f22, f17, f2, f5, rdn # perform operation
fmadd.d f22, f17, f2, f5, rmm # perform operation
fmadd.d f22, f17, f2, f5, rne # perform operation
fmadd.d f22, f17, f2, f5, rtz # perform operation
fmadd.d f22, f17, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f17, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x12, 0xd6707a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0xd184cea2 # load x3 with 32 MSBs 0x00000000d184cea2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d184cea2
sw x3, 0(x2) # store x3 (0xd184cea2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d184cea2 from memory into f23
fmadd.d f12, f15, f8, f23, dyn # perform operation
fmadd.d f12, f15, f8, f23, rdn # perform operation
fmadd.d f12, f15, f8, f23, rmm # perform operation
fmadd.d f12, f15, f8, f23, rne # perform operation
fmadd.d f12, f15, f8, f23, rtz # perform operation
fmadd.d f12, f15, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f15, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f15, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x1, 0x73810354 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x6fe327bf # load x3 with 32 MSBs 0x000000006fe327bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fe327bf
sw x3, 0(x2) # store x3 (0x6fe327bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000006fe327bf from memory into f20
fmadd.d f1, f8, f18, f20, dyn # perform operation
fmadd.d f1, f8, f18, f20, rdn # perform operation
fmadd.d f1, f8, f18, f20, rmm # perform operation
fmadd.d f1, f8, f18, f20, rne # perform operation
fmadd.d f1, f8, f18, f20, rtz # perform operation
fmadd.d f1, f8, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f8, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x7, 0x4a0c69fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0xe4ce2481 # load x3 with 32 MSBs 0x00000000e4ce2481
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4ce2481
sw x3, 0(x2) # store x3 (0xe4ce2481) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000e4ce2481 from memory into f14
fmadd.d f7, f26, f8, f14, dyn # perform operation
fmadd.d f7, f26, f8, f14, rdn # perform operation
fmadd.d f7, f26, f8, f14, rmm # perform operation
fmadd.d f7, f26, f8, f14, rne # perform operation
fmadd.d f7, f26, f8, f14, rtz # perform operation
fmadd.d f7, f26, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f26, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x12, 0xa09b9990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x600acc95 # load x3 with 32 MSBs 0x00000000600acc95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000600acc95
sw x3, 0(x2) # store x3 (0x600acc95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000600acc95 from memory into f5
fmadd.d f12, f1, f4, f5, dyn # perform operation
fmadd.d f12, f1, f4, f5, rdn # perform operation
fmadd.d f12, f1, f4, f5, rmm # perform operation
fmadd.d f12, f1, f4, f5, rne # perform operation
fmadd.d f12, f1, f4, f5, rtz # perform operation
fmadd.d f12, f1, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f1, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f1, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f1, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f1, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f1, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x13, 0x8d340cd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x617a6be1 # load x3 with 32 MSBs 0x00000000617a6be1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000617a6be1
sw x3, 0(x2) # store x3 (0x617a6be1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000617a6be1 from memory into f10
fmadd.d f13, f8, f2, f10, dyn # perform operation
fmadd.d f13, f8, f2, f10, rdn # perform operation
fmadd.d f13, f8, f2, f10, rmm # perform operation
fmadd.d f13, f8, f2, f10, rne # perform operation
fmadd.d f13, f8, f2, f10, rtz # perform operation
fmadd.d f13, f8, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f8, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x4, 0x3eb3e556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0xa83b9cfc # load x3 with 32 MSBs 0x00000000a83b9cfc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a83b9cfc
sw x3, 0(x2) # store x3 (0xa83b9cfc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a83b9cfc from memory into f10
fmadd.d f4, f1, f5, f10, dyn # perform operation
fmadd.d f4, f1, f5, f10, rdn # perform operation
fmadd.d f4, f1, f5, f10, rmm # perform operation
fmadd.d f4, f1, f5, f10, rne # perform operation
fmadd.d f4, f1, f5, f10, rtz # perform operation
fmadd.d f4, f1, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f1, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f1, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f1, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f1, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f1, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x18, 0x1ce80b7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x92cbca3e # load x3 with 32 MSBs 0x0000000092cbca3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092cbca3e
sw x3, 0(x2) # store x3 (0x92cbca3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000092cbca3e from memory into f29
fmadd.d f18, f19, f21, f29, dyn # perform operation
fmadd.d f18, f19, f21, f29, rdn # perform operation
fmadd.d f18, f19, f21, f29, rmm # perform operation
fmadd.d f18, f19, f21, f29, rne # perform operation
fmadd.d f18, f19, f21, f29, rtz # perform operation
fmadd.d f18, f19, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f19, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x11, 0xb304235b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x820e69e3 # load x3 with 32 MSBs 0x00000000820e69e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000820e69e3
sw x3, 0(x2) # store x3 (0x820e69e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000820e69e3 from memory into f2
fmadd.d f11, f1, f31, f2, dyn # perform operation
fmadd.d f11, f1, f31, f2, rdn # perform operation
fmadd.d f11, f1, f31, f2, rmm # perform operation
fmadd.d f11, f1, f31, f2, rne # perform operation
fmadd.d f11, f1, f31, f2, rtz # perform operation
fmadd.d f11, f1, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f1, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x4, 0xfa81b3b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x2f332c8f # load x3 with 32 MSBs 0x000000002f332c8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f332c8f
sw x3, 0(x2) # store x3 (0x2f332c8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002f332c8f from memory into f25
fmadd.d f4, f7, f20, f25, dyn # perform operation
fmadd.d f4, f7, f20, f25, rdn # perform operation
fmadd.d f4, f7, f20, f25, rmm # perform operation
fmadd.d f4, f7, f20, f25, rne # perform operation
fmadd.d f4, f7, f20, f25, rtz # perform operation
fmadd.d f4, f7, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f7, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f7, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f7, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f7, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f7, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x4, 0xcf35a612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x6946dc02 # load x3 with 32 MSBs 0x000000006946dc02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006946dc02
sw x3, 0(x2) # store x3 (0x6946dc02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006946dc02 from memory into f24
fmadd.d f4, f8, f20, f24, dyn # perform operation
fmadd.d f4, f8, f20, f24, rdn # perform operation
fmadd.d f4, f8, f20, f24, rmm # perform operation
fmadd.d f4, f8, f20, f24, rne # perform operation
fmadd.d f4, f8, f20, f24, rtz # perform operation
fmadd.d f4, f8, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f8, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f8, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x11, 0xbb8ad6b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0xcaf0d670 # load x3 with 32 MSBs 0x00000000caf0d670
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000caf0d670
sw x3, 0(x2) # store x3 (0xcaf0d670) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000caf0d670 from memory into f3
fmadd.d f11, f31, f14, f3, dyn # perform operation
fmadd.d f11, f31, f14, f3, rdn # perform operation
fmadd.d f11, f31, f14, f3, rmm # perform operation
fmadd.d f11, f31, f14, f3, rne # perform operation
fmadd.d f11, f31, f14, f3, rtz # perform operation
fmadd.d f11, f31, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f31, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x2, 0xe6514f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x04277414 # load x3 with 32 MSBs 0x0000000004277414
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004277414
sw x3, 0(x2) # store x3 (0x04277414) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000004277414 from memory into f4
fmadd.d f2, f17, f19, f4, dyn # perform operation
fmadd.d f2, f17, f19, f4, rdn # perform operation
fmadd.d f2, f17, f19, f4, rmm # perform operation
fmadd.d f2, f17, f19, f4, rne # perform operation
fmadd.d f2, f17, f19, f4, rtz # perform operation
fmadd.d f2, f17, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f17, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f17, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f17, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f17, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f17, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x16, 0x4754612f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0xa4cb2074 # load x3 with 32 MSBs 0x00000000a4cb2074
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4cb2074
sw x3, 0(x2) # store x3 (0xa4cb2074) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a4cb2074 from memory into f20
fmadd.d f16, f18, f13, f20, dyn # perform operation
fmadd.d f16, f18, f13, f20, rdn # perform operation
fmadd.d f16, f18, f13, f20, rmm # perform operation
fmadd.d f16, f18, f13, f20, rne # perform operation
fmadd.d f16, f18, f13, f20, rtz # perform operation
fmadd.d f16, f18, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f18, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x5, 0x96f8540e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x73e2087f # load x3 with 32 MSBs 0x0000000073e2087f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073e2087f
sw x3, 0(x2) # store x3 (0x73e2087f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000073e2087f from memory into f21
fmadd.d f5, f1, f6, f21, dyn # perform operation
fmadd.d f5, f1, f6, f21, rdn # perform operation
fmadd.d f5, f1, f6, f21, rmm # perform operation
fmadd.d f5, f1, f6, f21, rne # perform operation
fmadd.d f5, f1, f6, f21, rtz # perform operation
fmadd.d f5, f1, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f1, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x10, 0x80140a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0xa2772e2a # load x3 with 32 MSBs 0x00000000a2772e2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2772e2a
sw x3, 0(x2) # store x3 (0xa2772e2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a2772e2a from memory into f29
fmadd.d f10, f8, f2, f29, dyn # perform operation
fmadd.d f10, f8, f2, f29, rdn # perform operation
fmadd.d f10, f8, f2, f29, rmm # perform operation
fmadd.d f10, f8, f2, f29, rne # perform operation
fmadd.d f10, f8, f2, f29, rtz # perform operation
fmadd.d f10, f8, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f8, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f8, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x10, 0xb3cea9e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0x744cd1af # load x3 with 32 MSBs 0x00000000744cd1af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000744cd1af
sw x3, 0(x2) # store x3 (0x744cd1af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000744cd1af from memory into f1
fmadd.d f10, f17, f26, f1, dyn # perform operation
fmadd.d f10, f17, f26, f1, rdn # perform operation
fmadd.d f10, f17, f26, f1, rmm # perform operation
fmadd.d f10, f17, f26, f1, rne # perform operation
fmadd.d f10, f17, f26, f1, rtz # perform operation
fmadd.d f10, f17, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f17, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x25, 0x27009937 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
li x3, 0x3409d0ad # load x3 with 32 MSBs 0x000000003409d0ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003409d0ad
sw x3, 0(x2) # store x3 (0x3409d0ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003409d0ad from memory into f2
fmadd.d f25, f29, f28, f2, dyn # perform operation
fmadd.d f25, f29, f28, f2, rdn # perform operation
fmadd.d f25, f29, f28, f2, rmm # perform operation
fmadd.d f25, f29, f28, f2, rne # perform operation
fmadd.d f25, f29, f28, f2, rtz # perform operation
fmadd.d f25, f29, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f29, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x21, 0x5cdbf79f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xbc655bc9 # load x3 with 32 MSBs 0x00000000bc655bc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc655bc9
sw x3, 0(x2) # store x3 (0xbc655bc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000bc655bc9 from memory into f26
fmadd.d f21, f22, f8, f26, dyn # perform operation
fmadd.d f21, f22, f8, f26, rdn # perform operation
fmadd.d f21, f22, f8, f26, rmm # perform operation
fmadd.d f21, f22, f8, f26, rne # perform operation
fmadd.d f21, f22, f8, f26, rtz # perform operation
fmadd.d f21, f22, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f22, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x27, 0xd2c5c68a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x83714d1e # load x3 with 32 MSBs 0x0000000083714d1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083714d1e
sw x3, 0(x2) # store x3 (0x83714d1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000083714d1e from memory into f17
fmadd.d f27, f20, f9, f17, dyn # perform operation
fmadd.d f27, f20, f9, f17, rdn # perform operation
fmadd.d f27, f20, f9, f17, rmm # perform operation
fmadd.d f27, f20, f9, f17, rne # perform operation
fmadd.d f27, f20, f9, f17, rtz # perform operation
fmadd.d f27, f20, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f20, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x15, 0x34946f15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0xed1e7e8e # load x3 with 32 MSBs 0x00000000ed1e7e8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed1e7e8e
sw x3, 0(x2) # store x3 (0xed1e7e8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ed1e7e8e from memory into f9
fmadd.d f15, f17, f4, f9, dyn # perform operation
fmadd.d f15, f17, f4, f9, rdn # perform operation
fmadd.d f15, f17, f4, f9, rmm # perform operation
fmadd.d f15, f17, f4, f9, rne # perform operation
fmadd.d f15, f17, f4, f9, rtz # perform operation
fmadd.d f15, f17, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f17, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f17, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f17, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f17, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f17, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x17, 0x55ab848c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x7a97d208 # load x3 with 32 MSBs 0x000000007a97d208
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a97d208
sw x3, 0(x2) # store x3 (0x7a97d208) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007a97d208 from memory into f12
fmadd.d f17, f5, f16, f12, dyn # perform operation
fmadd.d f17, f5, f16, f12, rdn # perform operation
fmadd.d f17, f5, f16, f12, rmm # perform operation
fmadd.d f17, f5, f16, f12, rne # perform operation
fmadd.d f17, f5, f16, f12, rtz # perform operation
fmadd.d f17, f5, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f5, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x16, 0x1b3af4f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x55767b84 # load x3 with 32 MSBs 0x0000000055767b84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055767b84
sw x3, 0(x2) # store x3 (0x55767b84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000055767b84 from memory into f22
fmadd.d f16, f27, f6, f22, dyn # perform operation
fmadd.d f16, f27, f6, f22, rdn # perform operation
fmadd.d f16, f27, f6, f22, rmm # perform operation
fmadd.d f16, f27, f6, f22, rne # perform operation
fmadd.d f16, f27, f6, f22, rtz # perform operation
fmadd.d f16, f27, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f27, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f27, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f27, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f27, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f27, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x31, 0x36e0dab6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0x95a184d6 # load x3 with 32 MSBs 0x0000000095a184d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095a184d6
sw x3, 0(x2) # store x3 (0x95a184d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000095a184d6 from memory into f20
fmadd.d f31, f4, f7, f20, dyn # perform operation
fmadd.d f31, f4, f7, f20, rdn # perform operation
fmadd.d f31, f4, f7, f20, rmm # perform operation
fmadd.d f31, f4, f7, f20, rne # perform operation
fmadd.d f31, f4, f7, f20, rtz # perform operation
fmadd.d f31, f4, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f4, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x20, 0x3139e699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0xc5ed541d # load x3 with 32 MSBs 0x00000000c5ed541d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5ed541d
sw x3, 0(x2) # store x3 (0xc5ed541d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c5ed541d from memory into f19
fmadd.d f20, f25, f10, f19, dyn # perform operation
fmadd.d f20, f25, f10, f19, rdn # perform operation
fmadd.d f20, f25, f10, f19, rmm # perform operation
fmadd.d f20, f25, f10, f19, rne # perform operation
fmadd.d f20, f25, f10, f19, rtz # perform operation
fmadd.d f20, f25, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f25, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x11, 0x70c66a06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x1124a511 # load x3 with 32 MSBs 0x000000001124a511
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001124a511
sw x3, 0(x2) # store x3 (0x1124a511) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001124a511 from memory into f22
fmadd.d f11, f18, f14, f22, dyn # perform operation
fmadd.d f11, f18, f14, f22, rdn # perform operation
fmadd.d f11, f18, f14, f22, rmm # perform operation
fmadd.d f11, f18, f14, f22, rne # perform operation
fmadd.d f11, f18, f14, f22, rtz # perform operation
fmadd.d f11, f18, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f18, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f18, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f18, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f18, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f18, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x26, 0x253725d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x6af7326b # load x3 with 32 MSBs 0x000000006af7326b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006af7326b
sw x3, 0(x2) # store x3 (0x6af7326b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006af7326b from memory into f15
fmadd.d f26, f22, f27, f15, dyn # perform operation
fmadd.d f26, f22, f27, f15, rdn # perform operation
fmadd.d f26, f22, f27, f15, rmm # perform operation
fmadd.d f26, f22, f27, f15, rne # perform operation
fmadd.d f26, f22, f27, f15, rtz # perform operation
fmadd.d f26, f22, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f22, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x1, 0x10b16fc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x93e05518 # load x3 with 32 MSBs 0x0000000093e05518
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093e05518
sw x3, 0(x2) # store x3 (0x93e05518) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000093e05518 from memory into f10
fmadd.d f1, f30, f18, f10, dyn # perform operation
fmadd.d f1, f30, f18, f10, rdn # perform operation
fmadd.d f1, f30, f18, f10, rmm # perform operation
fmadd.d f1, f30, f18, f10, rne # perform operation
fmadd.d f1, f30, f18, f10, rtz # perform operation
fmadd.d f1, f30, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f30, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f30, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f30, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f30, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f30, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x19, 0xe974afa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0xcc42043f # load x3 with 32 MSBs 0x00000000cc42043f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc42043f
sw x3, 0(x2) # store x3 (0xcc42043f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000cc42043f from memory into f23
fmadd.d f19, f25, f30, f23, dyn # perform operation
fmadd.d f19, f25, f30, f23, rdn # perform operation
fmadd.d f19, f25, f30, f23, rmm # perform operation
fmadd.d f19, f25, f30, f23, rne # perform operation
fmadd.d f19, f25, f30, f23, rtz # perform operation
fmadd.d f19, f25, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f25, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x23, 0x2e1988c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0xaa5d3908 # load x3 with 32 MSBs 0x00000000aa5d3908
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa5d3908
sw x3, 0(x2) # store x3 (0xaa5d3908) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000aa5d3908 from memory into f2
fmadd.d f23, f11, f17, f2, dyn # perform operation
fmadd.d f23, f11, f17, f2, rdn # perform operation
fmadd.d f23, f11, f17, f2, rmm # perform operation
fmadd.d f23, f11, f17, f2, rne # perform operation
fmadd.d f23, f11, f17, f2, rtz # perform operation
fmadd.d f23, f11, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f11, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x30, 0x32ac5376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0xcad6128e # load x3 with 32 MSBs 0x00000000cad6128e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cad6128e
sw x3, 0(x2) # store x3 (0xcad6128e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000cad6128e from memory into f28
fmadd.d f30, f3, f24, f28, dyn # perform operation
fmadd.d f30, f3, f24, f28, rdn # perform operation
fmadd.d f30, f3, f24, f28, rmm # perform operation
fmadd.d f30, f3, f24, f28, rne # perform operation
fmadd.d f30, f3, f24, f28, rtz # perform operation
fmadd.d f30, f3, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f3, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x4, 0x3764a85a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x26412b2d # load x3 with 32 MSBs 0x0000000026412b2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026412b2d
sw x3, 0(x2) # store x3 (0x26412b2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000026412b2d from memory into f15
fmadd.d f4, f20, f19, f15, dyn # perform operation
fmadd.d f4, f20, f19, f15, rdn # perform operation
fmadd.d f4, f20, f19, f15, rmm # perform operation
fmadd.d f4, f20, f19, f15, rne # perform operation
fmadd.d f4, f20, f19, f15, rtz # perform operation
fmadd.d f4, f20, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f20, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f20, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f20, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f20, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f20, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x23, 0xd8264711 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0xefc770ac # load x3 with 32 MSBs 0x00000000efc770ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efc770ac
sw x3, 0(x2) # store x3 (0xefc770ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000efc770ac from memory into f12
fmadd.d f23, f30, f19, f12, dyn # perform operation
fmadd.d f23, f30, f19, f12, rdn # perform operation
fmadd.d f23, f30, f19, f12, rmm # perform operation
fmadd.d f23, f30, f19, f12, rne # perform operation
fmadd.d f23, f30, f19, f12, rtz # perform operation
fmadd.d f23, f30, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f30, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f30, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f30, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f30, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f30, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x3, 0xff1eeba7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0xfb91b7e5 # load x3 with 32 MSBs 0x00000000fb91b7e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb91b7e5
sw x3, 0(x2) # store x3 (0xfb91b7e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000fb91b7e5 from memory into f4
fmadd.d f3, f8, f27, f4, dyn # perform operation
fmadd.d f3, f8, f27, f4, rdn # perform operation
fmadd.d f3, f8, f27, f4, rmm # perform operation
fmadd.d f3, f8, f27, f4, rne # perform operation
fmadd.d f3, f8, f27, f4, rtz # perform operation
fmadd.d f3, f8, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f8, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f8, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f8, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f8, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f8, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x27, 0x57a92573 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x9e06beda # load x3 with 32 MSBs 0x000000009e06beda
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e06beda
sw x3, 0(x2) # store x3 (0x9e06beda) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009e06beda from memory into f9
fmadd.d f27, f22, f7, f9, dyn # perform operation
fmadd.d f27, f22, f7, f9, rdn # perform operation
fmadd.d f27, f22, f7, f9, rmm # perform operation
fmadd.d f27, f22, f7, f9, rne # perform operation
fmadd.d f27, f22, f7, f9, rtz # perform operation
fmadd.d f27, f22, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f22, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x30, 0xa9549116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xc6171eb4 # load x3 with 32 MSBs 0x00000000c6171eb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6171eb4
sw x3, 0(x2) # store x3 (0xc6171eb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c6171eb4 from memory into f20
fmadd.d f30, f6, f26, f20, dyn # perform operation
fmadd.d f30, f6, f26, f20, rdn # perform operation
fmadd.d f30, f6, f26, f20, rmm # perform operation
fmadd.d f30, f6, f26, f20, rne # perform operation
fmadd.d f30, f6, f26, f20, rtz # perform operation
fmadd.d f30, f6, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f6, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x3, 0x45e595a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0xea7b14b1 # load x3 with 32 MSBs 0x00000000ea7b14b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea7b14b1
sw x3, 0(x2) # store x3 (0xea7b14b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ea7b14b1 from memory into f29
fmadd.d f3, f17, f24, f29, dyn # perform operation
fmadd.d f3, f17, f24, f29, rdn # perform operation
fmadd.d f3, f17, f24, f29, rmm # perform operation
fmadd.d f3, f17, f24, f29, rne # perform operation
fmadd.d f3, f17, f24, f29, rtz # perform operation
fmadd.d f3, f17, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f17, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f17, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x11, 0xea77cfb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x1718c5cd # load x3 with 32 MSBs 0x000000001718c5cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001718c5cd
sw x3, 0(x2) # store x3 (0x1718c5cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000001718c5cd from memory into f7
fmadd.d f11, f19, f1, f7, dyn # perform operation
fmadd.d f11, f19, f1, f7, rdn # perform operation
fmadd.d f11, f19, f1, f7, rmm # perform operation
fmadd.d f11, f19, f1, f7, rne # perform operation
fmadd.d f11, f19, f1, f7, rtz # perform operation
fmadd.d f11, f19, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f19, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f19, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f19, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f19, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f19, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x5, 0x9560610b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x49f93c4e # load x3 with 32 MSBs 0x0000000049f93c4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049f93c4e
sw x3, 0(x2) # store x3 (0x49f93c4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000049f93c4e from memory into f7
fmadd.d f5, f2, f31, f7, dyn # perform operation
fmadd.d f5, f2, f31, f7, rdn # perform operation
fmadd.d f5, f2, f31, f7, rmm # perform operation
fmadd.d f5, f2, f31, f7, rne # perform operation
fmadd.d f5, f2, f31, f7, rtz # perform operation
fmadd.d f5, f2, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f2, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x17, 0xf30a17ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xa2dbeff1 # load x3 with 32 MSBs 0x00000000a2dbeff1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2dbeff1
sw x3, 0(x2) # store x3 (0xa2dbeff1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a2dbeff1 from memory into f15
fmadd.d f17, f31, f3, f15, dyn # perform operation
fmadd.d f17, f31, f3, f15, rdn # perform operation
fmadd.d f17, f31, f3, f15, rmm # perform operation
fmadd.d f17, f31, f3, f15, rne # perform operation
fmadd.d f17, f31, f3, f15, rtz # perform operation
fmadd.d f17, f31, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f31, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f31, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f31, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f31, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f31, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x26, 0x7309626f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0xcd32deb4 # load x3 with 32 MSBs 0x00000000cd32deb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd32deb4
sw x3, 0(x2) # store x3 (0xcd32deb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000cd32deb4 from memory into f2
fmadd.d f26, f7, f27, f2, dyn # perform operation
fmadd.d f26, f7, f27, f2, rdn # perform operation
fmadd.d f26, f7, f27, f2, rmm # perform operation
fmadd.d f26, f7, f27, f2, rne # perform operation
fmadd.d f26, f7, f27, f2, rtz # perform operation
fmadd.d f26, f7, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f7, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x30, 0x9a46e12f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x4154a798 # load x3 with 32 MSBs 0x000000004154a798
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004154a798
sw x3, 0(x2) # store x3 (0x4154a798) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004154a798 from memory into f3
fmadd.d f30, f25, f6, f3, dyn # perform operation
fmadd.d f30, f25, f6, f3, rdn # perform operation
fmadd.d f30, f25, f6, f3, rmm # perform operation
fmadd.d f30, f25, f6, f3, rne # perform operation
fmadd.d f30, f25, f6, f3, rtz # perform operation
fmadd.d f30, f25, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f25, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f25, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x27, 0x9cbba35f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x99a05ca4 # load x3 with 32 MSBs 0x0000000099a05ca4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099a05ca4
sw x3, 0(x2) # store x3 (0x99a05ca4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000099a05ca4 from memory into f19
fmadd.d f27, f23, f31, f19, dyn # perform operation
fmadd.d f27, f23, f31, f19, rdn # perform operation
fmadd.d f27, f23, f31, f19, rmm # perform operation
fmadd.d f27, f23, f31, f19, rne # perform operation
fmadd.d f27, f23, f31, f19, rtz # perform operation
fmadd.d f27, f23, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f23, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f23, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f23, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f23, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f23, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x20, 0x273a22c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0xe2d7f406 # load x3 with 32 MSBs 0x00000000e2d7f406
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2d7f406
sw x3, 0(x2) # store x3 (0xe2d7f406) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e2d7f406 from memory into f19
fmadd.d f20, f29, f16, f19, dyn # perform operation
fmadd.d f20, f29, f16, f19, rdn # perform operation
fmadd.d f20, f29, f16, f19, rmm # perform operation
fmadd.d f20, f29, f16, f19, rne # perform operation
fmadd.d f20, f29, f16, f19, rtz # perform operation
fmadd.d f20, f29, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f29, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x22, 0xbef81600 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0xa62f2ebf # load x3 with 32 MSBs 0x00000000a62f2ebf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a62f2ebf
sw x3, 0(x2) # store x3 (0xa62f2ebf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000a62f2ebf from memory into f12
fmadd.d f22, f25, f19, f12, dyn # perform operation
fmadd.d f22, f25, f19, f12, rdn # perform operation
fmadd.d f22, f25, f19, f12, rmm # perform operation
fmadd.d f22, f25, f19, f12, rne # perform operation
fmadd.d f22, f25, f19, f12, rtz # perform operation
fmadd.d f22, f25, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f25, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x9, 0x7b4a19ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x7e8d789b # load x3 with 32 MSBs 0x000000007e8d789b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e8d789b
sw x3, 0(x2) # store x3 (0x7e8d789b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007e8d789b from memory into f13
fmadd.d f9, f4, f12, f13, dyn # perform operation
fmadd.d f9, f4, f12, f13, rdn # perform operation
fmadd.d f9, f4, f12, f13, rmm # perform operation
fmadd.d f9, f4, f12, f13, rne # perform operation
fmadd.d f9, f4, f12, f13, rtz # perform operation
fmadd.d f9, f4, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f4, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f4, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f4, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f4, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f4, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x15, 0xfcf53885 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x8ee29a54 # load x3 with 32 MSBs 0x000000008ee29a54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ee29a54
sw x3, 0(x2) # store x3 (0x8ee29a54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008ee29a54 from memory into f6
fmadd.d f15, f12, f22, f6, dyn # perform operation
fmadd.d f15, f12, f22, f6, rdn # perform operation
fmadd.d f15, f12, f22, f6, rmm # perform operation
fmadd.d f15, f12, f22, f6, rne # perform operation
fmadd.d f15, f12, f22, f6, rtz # perform operation
fmadd.d f15, f12, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f12, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x4, 0x668db7e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x6b261e87 # load x3 with 32 MSBs 0x000000006b261e87
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b261e87
sw x3, 0(x2) # store x3 (0x6b261e87) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006b261e87 from memory into f18
fmadd.d f4, f26, f29, f18, dyn # perform operation
fmadd.d f4, f26, f29, f18, rdn # perform operation
fmadd.d f4, f26, f29, f18, rmm # perform operation
fmadd.d f4, f26, f29, f18, rne # perform operation
fmadd.d f4, f26, f29, f18, rtz # perform operation
fmadd.d f4, f26, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f26, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f26, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x13, 0x2600e047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x93cd6d57 # load x3 with 32 MSBs 0x0000000093cd6d57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093cd6d57
sw x3, 0(x2) # store x3 (0x93cd6d57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000093cd6d57 from memory into f9
fmadd.d f13, f15, f10, f9, dyn # perform operation
fmadd.d f13, f15, f10, f9, rdn # perform operation
fmadd.d f13, f15, f10, f9, rmm # perform operation
fmadd.d f13, f15, f10, f9, rne # perform operation
fmadd.d f13, f15, f10, f9, rtz # perform operation
fmadd.d f13, f15, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f15, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f15, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x28, 0xb901ca1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x601bbba2 # load x3 with 32 MSBs 0x00000000601bbba2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000601bbba2
sw x3, 0(x2) # store x3 (0x601bbba2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000601bbba2 from memory into f25
fmadd.d f28, f30, f27, f25, dyn # perform operation
fmadd.d f28, f30, f27, f25, rdn # perform operation
fmadd.d f28, f30, f27, f25, rmm # perform operation
fmadd.d f28, f30, f27, f25, rne # perform operation
fmadd.d f28, f30, f27, f25, rtz # perform operation
fmadd.d f28, f30, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f30, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f30, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x24, 0x983446c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0xec58d005 # load x3 with 32 MSBs 0x00000000ec58d005
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec58d005
sw x3, 0(x2) # store x3 (0xec58d005) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ec58d005 from memory into f1
fmadd.d f24, f11, f5, f1, dyn # perform operation
fmadd.d f24, f11, f5, f1, rdn # perform operation
fmadd.d f24, f11, f5, f1, rmm # perform operation
fmadd.d f24, f11, f5, f1, rne # perform operation
fmadd.d f24, f11, f5, f1, rtz # perform operation
fmadd.d f24, f11, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f11, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x1, 0x90298cfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x3c25f7d1 # load x3 with 32 MSBs 0x000000003c25f7d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c25f7d1
sw x3, 0(x2) # store x3 (0x3c25f7d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003c25f7d1 from memory into f8
fmadd.d f1, f5, f21, f8, dyn # perform operation
fmadd.d f1, f5, f21, f8, rdn # perform operation
fmadd.d f1, f5, f21, f8, rmm # perform operation
fmadd.d f1, f5, f21, f8, rne # perform operation
fmadd.d f1, f5, f21, f8, rtz # perform operation
fmadd.d f1, f5, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f5, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x20, 0x98da831b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xef3695d2 # load x3 with 32 MSBs 0x00000000ef3695d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef3695d2
sw x3, 0(x2) # store x3 (0xef3695d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ef3695d2 from memory into f18
fmadd.d f20, f13, f28, f18, dyn # perform operation
fmadd.d f20, f13, f28, f18, rdn # perform operation
fmadd.d f20, f13, f28, f18, rmm # perform operation
fmadd.d f20, f13, f28, f18, rne # perform operation
fmadd.d f20, f13, f28, f18, rtz # perform operation
fmadd.d f20, f13, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f13, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x6, 0xf99e760a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0xbc80978c # load x3 with 32 MSBs 0x00000000bc80978c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc80978c
sw x3, 0(x2) # store x3 (0xbc80978c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000bc80978c from memory into f10
fmadd.d f6, f12, f17, f10, dyn # perform operation
fmadd.d f6, f12, f17, f10, rdn # perform operation
fmadd.d f6, f12, f17, f10, rmm # perform operation
fmadd.d f6, f12, f17, f10, rne # perform operation
fmadd.d f6, f12, f17, f10, rtz # perform operation
fmadd.d f6, f12, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f12, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x9, 0x9e0fa6f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x4169a23c # load x3 with 32 MSBs 0x000000004169a23c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004169a23c
sw x3, 0(x2) # store x3 (0x4169a23c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004169a23c from memory into f25
fmadd.d f9, f12, f15, f25, dyn # perform operation
fmadd.d f9, f12, f15, f25, rdn # perform operation
fmadd.d f9, f12, f15, f25, rmm # perform operation
fmadd.d f9, f12, f15, f25, rne # perform operation
fmadd.d f9, f12, f15, f25, rtz # perform operation
fmadd.d f9, f12, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f12, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f12, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f12, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f12, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f12, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x1, 0xcf78ed3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0x0440a2e1 # load x3 with 32 MSBs 0x000000000440a2e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000440a2e1
sw x3, 0(x2) # store x3 (0x0440a2e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000440a2e1 from memory into f3
fmadd.d f1, f25, f29, f3, dyn # perform operation
fmadd.d f1, f25, f29, f3, rdn # perform operation
fmadd.d f1, f25, f29, f3, rmm # perform operation
fmadd.d f1, f25, f29, f3, rne # perform operation
fmadd.d f1, f25, f29, f3, rtz # perform operation
fmadd.d f1, f25, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f25, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x14, 0x7b62d85d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x66caedb0 # load x3 with 32 MSBs 0x0000000066caedb0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066caedb0
sw x3, 0(x2) # store x3 (0x66caedb0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000066caedb0 from memory into f12
fmadd.d f14, f11, f5, f12, dyn # perform operation
fmadd.d f14, f11, f5, f12, rdn # perform operation
fmadd.d f14, f11, f5, f12, rmm # perform operation
fmadd.d f14, f11, f5, f12, rne # perform operation
fmadd.d f14, f11, f5, f12, rtz # perform operation
fmadd.d f14, f11, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f11, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f11, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x27, 0xa46bad36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x24c0db5a # load x3 with 32 MSBs 0x0000000024c0db5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024c0db5a
sw x3, 0(x2) # store x3 (0x24c0db5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000024c0db5a from memory into f8
fmadd.d f27, f13, f30, f8, dyn # perform operation
fmadd.d f27, f13, f30, f8, rdn # perform operation
fmadd.d f27, f13, f30, f8, rmm # perform operation
fmadd.d f27, f13, f30, f8, rne # perform operation
fmadd.d f27, f13, f30, f8, rtz # perform operation
fmadd.d f27, f13, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f13, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x20, 0x48cabb5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x8e442a1f # load x3 with 32 MSBs 0x000000008e442a1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e442a1f
sw x3, 0(x2) # store x3 (0x8e442a1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000008e442a1f from memory into f13
fmadd.d f20, f8, f15, f13, dyn # perform operation
fmadd.d f20, f8, f15, f13, rdn # perform operation
fmadd.d f20, f8, f15, f13, rmm # perform operation
fmadd.d f20, f8, f15, f13, rne # perform operation
fmadd.d f20, f8, f15, f13, rtz # perform operation
fmadd.d f20, f8, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f8, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x9, 0xd4cb471c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0x42002299 # load x3 with 32 MSBs 0x0000000042002299
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042002299
sw x3, 0(x2) # store x3 (0x42002299) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000042002299 from memory into f8
fmadd.d f9, f23, f17, f8, dyn # perform operation
fmadd.d f9, f23, f17, f8, rdn # perform operation
fmadd.d f9, f23, f17, f8, rmm # perform operation
fmadd.d f9, f23, f17, f8, rne # perform operation
fmadd.d f9, f23, f17, f8, rtz # perform operation
fmadd.d f9, f23, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f23, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x16, 0x87db0443 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x8ff977cf # load x3 with 32 MSBs 0x000000008ff977cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ff977cf
sw x3, 0(x2) # store x3 (0x8ff977cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000008ff977cf from memory into f9
fmadd.d f16, f26, f13, f9, dyn # perform operation
fmadd.d f16, f26, f13, f9, rdn # perform operation
fmadd.d f16, f26, f13, f9, rmm # perform operation
fmadd.d f16, f26, f13, f9, rne # perform operation
fmadd.d f16, f26, f13, f9, rtz # perform operation
fmadd.d f16, f26, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f26, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x7, 0x0befb796 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0xd36d34dd # load x3 with 32 MSBs 0x00000000d36d34dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d36d34dd
sw x3, 0(x2) # store x3 (0xd36d34dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d36d34dd from memory into f14
fmadd.d f7, f8, f19, f14, dyn # perform operation
fmadd.d f7, f8, f19, f14, rdn # perform operation
fmadd.d f7, f8, f19, f14, rmm # perform operation
fmadd.d f7, f8, f19, f14, rne # perform operation
fmadd.d f7, f8, f19, f14, rtz # perform operation
fmadd.d f7, f8, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f8, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f8, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f8, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f8, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f8, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x27, 0x2acdf9f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0xe65be02b # load x3 with 32 MSBs 0x00000000e65be02b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e65be02b
sw x3, 0(x2) # store x3 (0xe65be02b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e65be02b from memory into f5
fmadd.d f27, f22, f20, f5, dyn # perform operation
fmadd.d f27, f22, f20, f5, rdn # perform operation
fmadd.d f27, f22, f20, f5, rmm # perform operation
fmadd.d f27, f22, f20, f5, rne # perform operation
fmadd.d f27, f22, f20, f5, rtz # perform operation
fmadd.d f27, f22, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f22, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f22, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x24, 0xfbcb301b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0xc51c1846 # load x3 with 32 MSBs 0x00000000c51c1846
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c51c1846
sw x3, 0(x2) # store x3 (0xc51c1846) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c51c1846 from memory into f20
fmadd.d f24, f31, f28, f20, dyn # perform operation
fmadd.d f24, f31, f28, f20, rdn # perform operation
fmadd.d f24, f31, f28, f20, rmm # perform operation
fmadd.d f24, f31, f28, f20, rne # perform operation
fmadd.d f24, f31, f28, f20, rtz # perform operation
fmadd.d f24, f31, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f31, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x4, 0xb9a06ac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xa715a805 # load x3 with 32 MSBs 0x00000000a715a805
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a715a805
sw x3, 0(x2) # store x3 (0xa715a805) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a715a805 from memory into f6
fmadd.d f4, f24, f20, f6, dyn # perform operation
fmadd.d f4, f24, f20, f6, rdn # perform operation
fmadd.d f4, f24, f20, f6, rmm # perform operation
fmadd.d f4, f24, f20, f6, rne # perform operation
fmadd.d f4, f24, f20, f6, rtz # perform operation
fmadd.d f4, f24, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f24, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f24, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f24, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f24, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f24, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x5, 0xe1ccd191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x0a77248f # load x3 with 32 MSBs 0x000000000a77248f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a77248f
sw x3, 0(x2) # store x3 (0x0a77248f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000000a77248f from memory into f10
fmadd.d f5, f11, f25, f10, dyn # perform operation
fmadd.d f5, f11, f25, f10, rdn # perform operation
fmadd.d f5, f11, f25, f10, rmm # perform operation
fmadd.d f5, f11, f25, f10, rne # perform operation
fmadd.d f5, f11, f25, f10, rtz # perform operation
fmadd.d f5, f11, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f11, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x22, 0xd9352438 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x44c7d68e # load x3 with 32 MSBs 0x0000000044c7d68e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044c7d68e
sw x3, 0(x2) # store x3 (0x44c7d68e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000044c7d68e from memory into f12
fmadd.d f22, f31, f28, f12, dyn # perform operation
fmadd.d f22, f31, f28, f12, rdn # perform operation
fmadd.d f22, f31, f28, f12, rmm # perform operation
fmadd.d f22, f31, f28, f12, rne # perform operation
fmadd.d f22, f31, f28, f12, rtz # perform operation
fmadd.d f22, f31, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f31, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x20, 0xa7afaa9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0xc4395615 # load x3 with 32 MSBs 0x00000000c4395615
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4395615
sw x3, 0(x2) # store x3 (0xc4395615) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c4395615 from memory into f15
fmadd.d f20, f7, f19, f15, dyn # perform operation
fmadd.d f20, f7, f19, f15, rdn # perform operation
fmadd.d f20, f7, f19, f15, rmm # perform operation
fmadd.d f20, f7, f19, f15, rne # perform operation
fmadd.d f20, f7, f19, f15, rtz # perform operation
fmadd.d f20, f7, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f7, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f7, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f7, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f7, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f7, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x22, 0xb803e3ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x89bab85a # load x3 with 32 MSBs 0x0000000089bab85a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089bab85a
sw x3, 0(x2) # store x3 (0x89bab85a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000089bab85a from memory into f31
fmadd.d f22, f10, f15, f31, dyn # perform operation
fmadd.d f22, f10, f15, f31, rdn # perform operation
fmadd.d f22, f10, f15, f31, rmm # perform operation
fmadd.d f22, f10, f15, f31, rne # perform operation
fmadd.d f22, f10, f15, f31, rtz # perform operation
fmadd.d f22, f10, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f10, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x13, 0x2f4c6e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x66dbfc5d # load x3 with 32 MSBs 0x0000000066dbfc5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066dbfc5d
sw x3, 0(x2) # store x3 (0x66dbfc5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000066dbfc5d from memory into f7
fmadd.d f13, f19, f23, f7, dyn # perform operation
fmadd.d f13, f19, f23, f7, rdn # perform operation
fmadd.d f13, f19, f23, f7, rmm # perform operation
fmadd.d f13, f19, f23, f7, rne # perform operation
fmadd.d f13, f19, f23, f7, rtz # perform operation
fmadd.d f13, f19, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f19, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x13, 0xa9973cb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x54d59700 # load x3 with 32 MSBs 0x0000000054d59700
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054d59700
sw x3, 0(x2) # store x3 (0x54d59700) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000054d59700 from memory into f6
fmadd.d f13, f5, f24, f6, dyn # perform operation
fmadd.d f13, f5, f24, f6, rdn # perform operation
fmadd.d f13, f5, f24, f6, rmm # perform operation
fmadd.d f13, f5, f24, f6, rne # perform operation
fmadd.d f13, f5, f24, f6, rtz # perform operation
fmadd.d f13, f5, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f5, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x10, 0xaa026e54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0xfa8908b0 # load x3 with 32 MSBs 0x00000000fa8908b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa8908b0
sw x3, 0(x2) # store x3 (0xfa8908b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fa8908b0 from memory into f1
fmadd.d f10, f13, f15, f1, dyn # perform operation
fmadd.d f10, f13, f15, f1, rdn # perform operation
fmadd.d f10, f13, f15, f1, rmm # perform operation
fmadd.d f10, f13, f15, f1, rne # perform operation
fmadd.d f10, f13, f15, f1, rtz # perform operation
fmadd.d f10, f13, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f13, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f13, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x30, 0x41e0dffc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x24d10964 # load x3 with 32 MSBs 0x0000000024d10964
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024d10964
sw x3, 0(x2) # store x3 (0x24d10964) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000024d10964 from memory into f9
fmadd.d f30, f2, f13, f9, dyn # perform operation
fmadd.d f30, f2, f13, f9, rdn # perform operation
fmadd.d f30, f2, f13, f9, rmm # perform operation
fmadd.d f30, f2, f13, f9, rne # perform operation
fmadd.d f30, f2, f13, f9, rtz # perform operation
fmadd.d f30, f2, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f2, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x15, 0x335d17f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0xeded380e # load x3 with 32 MSBs 0x00000000eded380e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eded380e
sw x3, 0(x2) # store x3 (0xeded380e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000eded380e from memory into f3
fmadd.d f15, f7, f16, f3, dyn # perform operation
fmadd.d f15, f7, f16, f3, rdn # perform operation
fmadd.d f15, f7, f16, f3, rmm # perform operation
fmadd.d f15, f7, f16, f3, rne # perform operation
fmadd.d f15, f7, f16, f3, rtz # perform operation
fmadd.d f15, f7, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f7, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f7, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f7, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f7, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f7, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x11, 0x93b6ca63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x02d9fdd6 # load x3 with 32 MSBs 0x0000000002d9fdd6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002d9fdd6
sw x3, 0(x2) # store x3 (0x02d9fdd6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000002d9fdd6 from memory into f10
fmadd.d f11, f7, f2, f10, dyn # perform operation
fmadd.d f11, f7, f2, f10, rdn # perform operation
fmadd.d f11, f7, f2, f10, rmm # perform operation
fmadd.d f11, f7, f2, f10, rne # perform operation
fmadd.d f11, f7, f2, f10, rtz # perform operation
fmadd.d f11, f7, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f7, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f7, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x16, 0x30e71c46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x5563a344 # load x3 with 32 MSBs 0x000000005563a344
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005563a344
sw x3, 0(x2) # store x3 (0x5563a344) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000005563a344 from memory into f23
fmadd.d f16, f7, f10, f23, dyn # perform operation
fmadd.d f16, f7, f10, f23, rdn # perform operation
fmadd.d f16, f7, f10, f23, rmm # perform operation
fmadd.d f16, f7, f10, f23, rne # perform operation
fmadd.d f16, f7, f10, f23, rtz # perform operation
fmadd.d f16, f7, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f7, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f7, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f7, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f7, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f7, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x13, 0x11eb53d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x2109da84 # load x3 with 32 MSBs 0x000000002109da84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002109da84
sw x3, 0(x2) # store x3 (0x2109da84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002109da84 from memory into f16
fmadd.d f13, f28, f22, f16, dyn # perform operation
fmadd.d f13, f28, f22, f16, rdn # perform operation
fmadd.d f13, f28, f22, f16, rmm # perform operation
fmadd.d f13, f28, f22, f16, rne # perform operation
fmadd.d f13, f28, f22, f16, rtz # perform operation
fmadd.d f13, f28, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f28, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f28, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x11, 0x806a91ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0xeb1805d4 # load x3 with 32 MSBs 0x00000000eb1805d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb1805d4
sw x3, 0(x2) # store x3 (0xeb1805d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000eb1805d4 from memory into f1
fmadd.d f11, f9, f19, f1, dyn # perform operation
fmadd.d f11, f9, f19, f1, rdn # perform operation
fmadd.d f11, f9, f19, f1, rmm # perform operation
fmadd.d f11, f9, f19, f1, rne # perform operation
fmadd.d f11, f9, f19, f1, rtz # perform operation
fmadd.d f11, f9, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f9, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x12, 0xc1a06ed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xb77e45e2 # load x3 with 32 MSBs 0x00000000b77e45e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b77e45e2
sw x3, 0(x2) # store x3 (0xb77e45e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b77e45e2 from memory into f23
fmadd.d f12, f8, f6, f23, dyn # perform operation
fmadd.d f12, f8, f6, f23, rdn # perform operation
fmadd.d f12, f8, f6, f23, rmm # perform operation
fmadd.d f12, f8, f6, f23, rne # perform operation
fmadd.d f12, f8, f6, f23, rtz # perform operation
fmadd.d f12, f8, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f8, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x23, 0xacdedf89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0xc10fb39e # load x3 with 32 MSBs 0x00000000c10fb39e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c10fb39e
sw x3, 0(x2) # store x3 (0xc10fb39e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c10fb39e from memory into f28
fmadd.d f23, f31, f17, f28, dyn # perform operation
fmadd.d f23, f31, f17, f28, rdn # perform operation
fmadd.d f23, f31, f17, f28, rmm # perform operation
fmadd.d f23, f31, f17, f28, rne # perform operation
fmadd.d f23, f31, f17, f28, rtz # perform operation
fmadd.d f23, f31, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f31, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f31, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x24, 0xd18e165d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x31d74985 # load x3 with 32 MSBs 0x0000000031d74985
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031d74985
sw x3, 0(x2) # store x3 (0x31d74985) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000031d74985 from memory into f18
fmadd.d f24, f13, f26, f18, dyn # perform operation
fmadd.d f24, f13, f26, f18, rdn # perform operation
fmadd.d f24, f13, f26, f18, rmm # perform operation
fmadd.d f24, f13, f26, f18, rne # perform operation
fmadd.d f24, f13, f26, f18, rtz # perform operation
fmadd.d f24, f13, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f13, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f13, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f13, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f13, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f13, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x31, 0x337d5566 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0xdcaef54d # load x3 with 32 MSBs 0x00000000dcaef54d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dcaef54d
sw x3, 0(x2) # store x3 (0xdcaef54d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000dcaef54d from memory into f6
fmadd.d f31, f11, f2, f6, dyn # perform operation
fmadd.d f31, f11, f2, f6, rdn # perform operation
fmadd.d f31, f11, f2, f6, rmm # perform operation
fmadd.d f31, f11, f2, f6, rne # perform operation
fmadd.d f31, f11, f2, f6, rtz # perform operation
fmadd.d f31, f11, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f11, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x12, 0x7aeaea5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x68f65a58 # load x3 with 32 MSBs 0x0000000068f65a58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068f65a58
sw x3, 0(x2) # store x3 (0x68f65a58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000068f65a58 from memory into f10
fmadd.d f12, f25, f26, f10, dyn # perform operation
fmadd.d f12, f25, f26, f10, rdn # perform operation
fmadd.d f12, f25, f26, f10, rmm # perform operation
fmadd.d f12, f25, f26, f10, rne # perform operation
fmadd.d f12, f25, f26, f10, rtz # perform operation
fmadd.d f12, f25, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f25, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x11, 0xc46534ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0xeafa10e6 # load x3 with 32 MSBs 0x00000000eafa10e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eafa10e6
sw x3, 0(x2) # store x3 (0xeafa10e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000eafa10e6 from memory into f15
fmadd.d f11, f14, f20, f15, dyn # perform operation
fmadd.d f11, f14, f20, f15, rdn # perform operation
fmadd.d f11, f14, f20, f15, rmm # perform operation
fmadd.d f11, f14, f20, f15, rne # perform operation
fmadd.d f11, f14, f20, f15, rtz # perform operation
fmadd.d f11, f14, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f14, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x17, 0xc992c3cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0xcc9091e4 # load x3 with 32 MSBs 0x00000000cc9091e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc9091e4
sw x3, 0(x2) # store x3 (0xcc9091e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000cc9091e4 from memory into f30
fmadd.d f17, f16, f2, f30, dyn # perform operation
fmadd.d f17, f16, f2, f30, rdn # perform operation
fmadd.d f17, f16, f2, f30, rmm # perform operation
fmadd.d f17, f16, f2, f30, rne # perform operation
fmadd.d f17, f16, f2, f30, rtz # perform operation
fmadd.d f17, f16, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f16, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x16, 0xe098890f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0xf0f8624d # load x3 with 32 MSBs 0x00000000f0f8624d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0f8624d
sw x3, 0(x2) # store x3 (0xf0f8624d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f0f8624d from memory into f21
fmadd.d f16, f31, f4, f21, dyn # perform operation
fmadd.d f16, f31, f4, f21, rdn # perform operation
fmadd.d f16, f31, f4, f21, rmm # perform operation
fmadd.d f16, f31, f4, f21, rne # perform operation
fmadd.d f16, f31, f4, f21, rtz # perform operation
fmadd.d f16, f31, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f31, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x21, 0x8ff5b425 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x5b3f8419 # load x3 with 32 MSBs 0x000000005b3f8419
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b3f8419
sw x3, 0(x2) # store x3 (0x5b3f8419) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005b3f8419 from memory into f8
fmadd.d f21, f1, f18, f8, dyn # perform operation
fmadd.d f21, f1, f18, f8, rdn # perform operation
fmadd.d f21, f1, f18, f8, rmm # perform operation
fmadd.d f21, f1, f18, f8, rne # perform operation
fmadd.d f21, f1, f18, f8, rtz # perform operation
fmadd.d f21, f1, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f1, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f1, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f1, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f1, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f1, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x21, 0x8b4be7ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xcc991794 # load x3 with 32 MSBs 0x00000000cc991794
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc991794
sw x3, 0(x2) # store x3 (0xcc991794) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000cc991794 from memory into f28
fmadd.d f21, f15, f11, f28, dyn # perform operation
fmadd.d f21, f15, f11, f28, rdn # perform operation
fmadd.d f21, f15, f11, f28, rmm # perform operation
fmadd.d f21, f15, f11, f28, rne # perform operation
fmadd.d f21, f15, f11, f28, rtz # perform operation
fmadd.d f21, f15, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f15, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x31, 0xdf6c6376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x293df6e1 # load x3 with 32 MSBs 0x00000000293df6e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000293df6e1
sw x3, 0(x2) # store x3 (0x293df6e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000293df6e1 from memory into f25
fmadd.d f31, f20, f21, f25, dyn # perform operation
fmadd.d f31, f20, f21, f25, rdn # perform operation
fmadd.d f31, f20, f21, f25, rmm # perform operation
fmadd.d f31, f20, f21, f25, rne # perform operation
fmadd.d f31, f20, f21, f25, rtz # perform operation
fmadd.d f31, f20, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f20, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x15, 0x0f507804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x1de9da2f # load x3 with 32 MSBs 0x000000001de9da2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001de9da2f
sw x3, 0(x2) # store x3 (0x1de9da2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001de9da2f from memory into f27
fmadd.d f15, f14, f4, f27, dyn # perform operation
fmadd.d f15, f14, f4, f27, rdn # perform operation
fmadd.d f15, f14, f4, f27, rmm # perform operation
fmadd.d f15, f14, f4, f27, rne # perform operation
fmadd.d f15, f14, f4, f27, rtz # perform operation
fmadd.d f15, f14, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f14, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f14, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f14, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f14, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f14, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x4, 0x3d034116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x4974e362 # load x3 with 32 MSBs 0x000000004974e362
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004974e362
sw x3, 0(x2) # store x3 (0x4974e362) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004974e362 from memory into f7
fmadd.d f4, f5, f12, f7, dyn # perform operation
fmadd.d f4, f5, f12, f7, rdn # perform operation
fmadd.d f4, f5, f12, f7, rmm # perform operation
fmadd.d f4, f5, f12, f7, rne # perform operation
fmadd.d f4, f5, f12, f7, rtz # perform operation
fmadd.d f4, f5, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f5, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f5, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x27, 0xb3af3241 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0xbce1f796 # load x3 with 32 MSBs 0x00000000bce1f796
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bce1f796
sw x3, 0(x2) # store x3 (0xbce1f796) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000bce1f796 from memory into f20
fmadd.d f27, f19, f24, f20, dyn # perform operation
fmadd.d f27, f19, f24, f20, rdn # perform operation
fmadd.d f27, f19, f24, f20, rmm # perform operation
fmadd.d f27, f19, f24, f20, rne # perform operation
fmadd.d f27, f19, f24, f20, rtz # perform operation
fmadd.d f27, f19, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f19, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x16, 0x40dd101f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x1146c003 # load x3 with 32 MSBs 0x000000001146c003
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001146c003
sw x3, 0(x2) # store x3 (0x1146c003) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000001146c003 from memory into f11
fmadd.d f16, f28, f6, f11, dyn # perform operation
fmadd.d f16, f28, f6, f11, rdn # perform operation
fmadd.d f16, f28, f6, f11, rmm # perform operation
fmadd.d f16, f28, f6, f11, rne # perform operation
fmadd.d f16, f28, f6, f11, rtz # perform operation
fmadd.d f16, f28, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f28, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x21, 0x82157574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x46919a0c # load x3 with 32 MSBs 0x0000000046919a0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046919a0c
sw x3, 0(x2) # store x3 (0x46919a0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000046919a0c from memory into f14
fmadd.d f21, f9, f10, f14, dyn # perform operation
fmadd.d f21, f9, f10, f14, rdn # perform operation
fmadd.d f21, f9, f10, f14, rmm # perform operation
fmadd.d f21, f9, f10, f14, rne # perform operation
fmadd.d f21, f9, f10, f14, rtz # perform operation
fmadd.d f21, f9, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f9, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x14, 0x3823b237 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x5e186b0e # load x3 with 32 MSBs 0x000000005e186b0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e186b0e
sw x3, 0(x2) # store x3 (0x5e186b0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005e186b0e from memory into f8
fmadd.d f14, f27, f10, f8, dyn # perform operation
fmadd.d f14, f27, f10, f8, rdn # perform operation
fmadd.d f14, f27, f10, f8, rmm # perform operation
fmadd.d f14, f27, f10, f8, rne # perform operation
fmadd.d f14, f27, f10, f8, rtz # perform operation
fmadd.d f14, f27, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f27, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x27, 0x601234ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x83f8f47a # load x3 with 32 MSBs 0x0000000083f8f47a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083f8f47a
sw x3, 0(x2) # store x3 (0x83f8f47a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000083f8f47a from memory into f8
fmadd.d f27, f22, f13, f8, dyn # perform operation
fmadd.d f27, f22, f13, f8, rdn # perform operation
fmadd.d f27, f22, f13, f8, rmm # perform operation
fmadd.d f27, f22, f13, f8, rne # perform operation
fmadd.d f27, f22, f13, f8, rtz # perform operation
fmadd.d f27, f22, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f22, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x16, 0x91ed47fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0x340581fb # load x3 with 32 MSBs 0x00000000340581fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000340581fb
sw x3, 0(x2) # store x3 (0x340581fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000340581fb from memory into f2
fmadd.d f16, f21, f11, f2, dyn # perform operation
fmadd.d f16, f21, f11, f2, rdn # perform operation
fmadd.d f16, f21, f11, f2, rmm # perform operation
fmadd.d f16, f21, f11, f2, rne # perform operation
fmadd.d f16, f21, f11, f2, rtz # perform operation
fmadd.d f16, f21, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f21, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f21, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f21, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f21, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f21, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x22, 0x0644acc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
li x3, 0x015bfe08 # load x3 with 32 MSBs 0x00000000015bfe08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000015bfe08
sw x3, 0(x2) # store x3 (0x015bfe08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000015bfe08 from memory into f12
fmadd.d f22, f11, f13, f12, dyn # perform operation
fmadd.d f22, f11, f13, f12, rdn # perform operation
fmadd.d f22, f11, f13, f12, rmm # perform operation
fmadd.d f22, f11, f13, f12, rne # perform operation
fmadd.d f22, f11, f13, f12, rtz # perform operation
fmadd.d f22, f11, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f11, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f11, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f11, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f11, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f11, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x6, 0x13414485 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x1c34dc8e # load x3 with 32 MSBs 0x000000001c34dc8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c34dc8e
sw x3, 0(x2) # store x3 (0x1c34dc8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001c34dc8e from memory into f29
fmadd.d f6, f31, f22, f29, dyn # perform operation
fmadd.d f6, f31, f22, f29, rdn # perform operation
fmadd.d f6, f31, f22, f29, rmm # perform operation
fmadd.d f6, f31, f22, f29, rne # perform operation
fmadd.d f6, f31, f22, f29, rtz # perform operation
fmadd.d f6, f31, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f31, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x10, 0x4de01181 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xe737b160 # load x3 with 32 MSBs 0x00000000e737b160
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e737b160
sw x3, 0(x2) # store x3 (0xe737b160) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e737b160 from memory into f17
fmadd.d f10, f31, f11, f17, dyn # perform operation
fmadd.d f10, f31, f11, f17, rdn # perform operation
fmadd.d f10, f31, f11, f17, rmm # perform operation
fmadd.d f10, f31, f11, f17, rne # perform operation
fmadd.d f10, f31, f11, f17, rtz # perform operation
fmadd.d f10, f31, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f31, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x28, 0x1078c7f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x07da4fd6 # load x3 with 32 MSBs 0x0000000007da4fd6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007da4fd6
sw x3, 0(x2) # store x3 (0x07da4fd6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000007da4fd6 from memory into f16
fmadd.d f28, f21, f15, f16, dyn # perform operation
fmadd.d f28, f21, f15, f16, rdn # perform operation
fmadd.d f28, f21, f15, f16, rmm # perform operation
fmadd.d f28, f21, f15, f16, rne # perform operation
fmadd.d f28, f21, f15, f16, rtz # perform operation
fmadd.d f28, f21, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f21, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f21, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f21, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f21, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f21, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x10, 0xd6ddc246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0x7ea3274a # load x3 with 32 MSBs 0x000000007ea3274a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ea3274a
sw x3, 0(x2) # store x3 (0x7ea3274a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007ea3274a from memory into f24
fmadd.d f10, f11, f21, f24, dyn # perform operation
fmadd.d f10, f11, f21, f24, rdn # perform operation
fmadd.d f10, f11, f21, f24, rmm # perform operation
fmadd.d f10, f11, f21, f24, rne # perform operation
fmadd.d f10, f11, f21, f24, rtz # perform operation
fmadd.d f10, f11, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f11, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x13, 0xd1e36cca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
li x3, 0xded5efd0 # load x3 with 32 MSBs 0x00000000ded5efd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ded5efd0
sw x3, 0(x2) # store x3 (0xded5efd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ded5efd0 from memory into f21
fmadd.d f13, f6, f14, f21, dyn # perform operation
fmadd.d f13, f6, f14, f21, rdn # perform operation
fmadd.d f13, f6, f14, f21, rmm # perform operation
fmadd.d f13, f6, f14, f21, rne # perform operation
fmadd.d f13, f6, f14, f21, rtz # perform operation
fmadd.d f13, f6, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f6, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x27, 0x7de3299c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0xab90d12e # load x3 with 32 MSBs 0x00000000ab90d12e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab90d12e
sw x3, 0(x2) # store x3 (0xab90d12e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000ab90d12e from memory into f11
fmadd.d f27, f10, f1, f11, dyn # perform operation
fmadd.d f27, f10, f1, f11, rdn # perform operation
fmadd.d f27, f10, f1, f11, rmm # perform operation
fmadd.d f27, f10, f1, f11, rne # perform operation
fmadd.d f27, f10, f1, f11, rtz # perform operation
fmadd.d f27, f10, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f10, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x11, 0x413114ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x358d8a24 # load x3 with 32 MSBs 0x00000000358d8a24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000358d8a24
sw x3, 0(x2) # store x3 (0x358d8a24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000358d8a24 from memory into f31
fmadd.d f11, f8, f17, f31, dyn # perform operation
fmadd.d f11, f8, f17, f31, rdn # perform operation
fmadd.d f11, f8, f17, f31, rmm # perform operation
fmadd.d f11, f8, f17, f31, rne # perform operation
fmadd.d f11, f8, f17, f31, rtz # perform operation
fmadd.d f11, f8, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f8, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x13, 0xe39d14bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x5d58cba4 # load x3 with 32 MSBs 0x000000005d58cba4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d58cba4
sw x3, 0(x2) # store x3 (0x5d58cba4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005d58cba4 from memory into f6
fmadd.d f13, f19, f12, f6, dyn # perform operation
fmadd.d f13, f19, f12, f6, rdn # perform operation
fmadd.d f13, f19, f12, f6, rmm # perform operation
fmadd.d f13, f19, f12, f6, rne # perform operation
fmadd.d f13, f19, f12, f6, rtz # perform operation
fmadd.d f13, f19, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f19, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f19, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x19, 0xda258d4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0x96e552ec # load x3 with 32 MSBs 0x0000000096e552ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096e552ec
sw x3, 0(x2) # store x3 (0x96e552ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000096e552ec from memory into f15
fmadd.d f19, f10, f11, f15, dyn # perform operation
fmadd.d f19, f10, f11, f15, rdn # perform operation
fmadd.d f19, f10, f11, f15, rmm # perform operation
fmadd.d f19, f10, f11, f15, rne # perform operation
fmadd.d f19, f10, f11, f15, rtz # perform operation
fmadd.d f19, f10, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f10, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x12, 0x28b33b7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0xbe125319 # load x3 with 32 MSBs 0x00000000be125319
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be125319
sw x3, 0(x2) # store x3 (0xbe125319) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000be125319 from memory into f11
fmadd.d f12, f1, f30, f11, dyn # perform operation
fmadd.d f12, f1, f30, f11, rdn # perform operation
fmadd.d f12, f1, f30, f11, rmm # perform operation
fmadd.d f12, f1, f30, f11, rne # perform operation
fmadd.d f12, f1, f30, f11, rtz # perform operation
fmadd.d f12, f1, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f1, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x16, 0xef5577da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x8c97f86e # load x3 with 32 MSBs 0x000000008c97f86e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c97f86e
sw x3, 0(x2) # store x3 (0x8c97f86e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008c97f86e from memory into f17
fmadd.d f16, f24, f19, f17, dyn # perform operation
fmadd.d f16, f24, f19, f17, rdn # perform operation
fmadd.d f16, f24, f19, f17, rmm # perform operation
fmadd.d f16, f24, f19, f17, rne # perform operation
fmadd.d f16, f24, f19, f17, rtz # perform operation
fmadd.d f16, f24, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f24, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x12, 0x6e3e1d73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0xfbf33b44 # load x3 with 32 MSBs 0x00000000fbf33b44
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbf33b44
sw x3, 0(x2) # store x3 (0xfbf33b44) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fbf33b44 from memory into f10
fmadd.d f12, f9, f4, f10, dyn # perform operation
fmadd.d f12, f9, f4, f10, rdn # perform operation
fmadd.d f12, f9, f4, f10, rmm # perform operation
fmadd.d f12, f9, f4, f10, rne # perform operation
fmadd.d f12, f9, f4, f10, rtz # perform operation
fmadd.d f12, f9, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f9, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f9, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f9, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f9, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f9, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x10, 0x669f4518 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0xeda4f24b # load x3 with 32 MSBs 0x00000000eda4f24b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eda4f24b
sw x3, 0(x2) # store x3 (0xeda4f24b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000eda4f24b from memory into f4
fmadd.d f10, f30, f18, f4, dyn # perform operation
fmadd.d f10, f30, f18, f4, rdn # perform operation
fmadd.d f10, f30, f18, f4, rmm # perform operation
fmadd.d f10, f30, f18, f4, rne # perform operation
fmadd.d f10, f30, f18, f4, rtz # perform operation
fmadd.d f10, f30, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f30, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f30, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f30, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f30, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f30, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x30, 0x5c4a9b09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x54e14870 # load x3 with 32 MSBs 0x0000000054e14870
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054e14870
sw x3, 0(x2) # store x3 (0x54e14870) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000054e14870 from memory into f28
fmadd.d f30, f21, f9, f28, dyn # perform operation
fmadd.d f30, f21, f9, f28, rdn # perform operation
fmadd.d f30, f21, f9, f28, rmm # perform operation
fmadd.d f30, f21, f9, f28, rne # perform operation
fmadd.d f30, f21, f9, f28, rtz # perform operation
fmadd.d f30, f21, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f21, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0x136f9e10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x018fe8e6 # load x3 with 32 MSBs 0x00000000018fe8e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000018fe8e6
sw x3, 0(x2) # store x3 (0x018fe8e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000018fe8e6 from memory into f10
fmadd.d f15, f9, f2, f10, dyn # perform operation
fmadd.d f15, f9, f2, f10, rdn # perform operation
fmadd.d f15, f9, f2, f10, rmm # perform operation
fmadd.d f15, f9, f2, f10, rne # perform operation
fmadd.d f15, f9, f2, f10, rtz # perform operation
fmadd.d f15, f9, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f9, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x1, 0x87db39d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xb7bcf8db # load x3 with 32 MSBs 0x00000000b7bcf8db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7bcf8db
sw x3, 0(x2) # store x3 (0xb7bcf8db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b7bcf8db from memory into f2
fmadd.d f1, f14, f25, f2, dyn # perform operation
fmadd.d f1, f14, f25, f2, rdn # perform operation
fmadd.d f1, f14, f25, f2, rmm # perform operation
fmadd.d f1, f14, f25, f2, rne # perform operation
fmadd.d f1, f14, f25, f2, rtz # perform operation
fmadd.d f1, f14, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f14, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f14, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f14, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f14, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f14, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x7, 0xfbb789d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x28692a72 # load x3 with 32 MSBs 0x0000000028692a72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028692a72
sw x3, 0(x2) # store x3 (0x28692a72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000028692a72 from memory into f25
fmadd.d f7, f15, f5, f25, dyn # perform operation
fmadd.d f7, f15, f5, f25, rdn # perform operation
fmadd.d f7, f15, f5, f25, rmm # perform operation
fmadd.d f7, f15, f5, f25, rne # perform operation
fmadd.d f7, f15, f5, f25, rtz # perform operation
fmadd.d f7, f15, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f15, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f15, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f15, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f15, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f15, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x12, 0x13e8c4bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0xe19d8f86 # load x3 with 32 MSBs 0x00000000e19d8f86
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e19d8f86
sw x3, 0(x2) # store x3 (0xe19d8f86) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e19d8f86 from memory into f20
fmadd.d f12, f7, f14, f20, dyn # perform operation
fmadd.d f12, f7, f14, f20, rdn # perform operation
fmadd.d f12, f7, f14, f20, rmm # perform operation
fmadd.d f12, f7, f14, f20, rne # perform operation
fmadd.d f12, f7, f14, f20, rtz # perform operation
fmadd.d f12, f7, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f7, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f7, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f7, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f7, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f7, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x2, 0xdd530fd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0xf019ac9c # load x3 with 32 MSBs 0x00000000f019ac9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f019ac9c
sw x3, 0(x2) # store x3 (0xf019ac9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f019ac9c from memory into f6
fmadd.d f2, f23, f25, f6, dyn # perform operation
fmadd.d f2, f23, f25, f6, rdn # perform operation
fmadd.d f2, f23, f25, f6, rmm # perform operation
fmadd.d f2, f23, f25, f6, rne # perform operation
fmadd.d f2, f23, f25, f6, rtz # perform operation
fmadd.d f2, f23, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f23, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f23, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f23, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f23, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f23, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x20, 0x3cfd2188 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x004f4724 # load x3 with 32 MSBs 0x00000000004f4724
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000004f4724
sw x3, 0(x2) # store x3 (0x004f4724) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000004f4724 from memory into f30
fmadd.d f20, f27, f21, f30, dyn # perform operation
fmadd.d f20, f27, f21, f30, rdn # perform operation
fmadd.d f20, f27, f21, f30, rmm # perform operation
fmadd.d f20, f27, f21, f30, rne # perform operation
fmadd.d f20, f27, f21, f30, rtz # perform operation
fmadd.d f20, f27, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f27, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x7, 0x55fd5dc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0xa7a96c60 # load x3 with 32 MSBs 0x00000000a7a96c60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7a96c60
sw x3, 0(x2) # store x3 (0xa7a96c60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a7a96c60 from memory into f5
fmadd.d f7, f22, f6, f5, dyn # perform operation
fmadd.d f7, f22, f6, f5, rdn # perform operation
fmadd.d f7, f22, f6, f5, rmm # perform operation
fmadd.d f7, f22, f6, f5, rne # perform operation
fmadd.d f7, f22, f6, f5, rtz # perform operation
fmadd.d f7, f22, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f22, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x20, 0x892badf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x7ac1b46c # load x3 with 32 MSBs 0x000000007ac1b46c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ac1b46c
sw x3, 0(x2) # store x3 (0x7ac1b46c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007ac1b46c from memory into f11
fmadd.d f20, f15, f7, f11, dyn # perform operation
fmadd.d f20, f15, f7, f11, rdn # perform operation
fmadd.d f20, f15, f7, f11, rmm # perform operation
fmadd.d f20, f15, f7, f11, rne # perform operation
fmadd.d f20, f15, f7, f11, rtz # perform operation
fmadd.d f20, f15, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f15, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f15, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f15, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f15, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f15, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x17, 0xb56da51a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x8bd0da1a # load x3 with 32 MSBs 0x000000008bd0da1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bd0da1a
sw x3, 0(x2) # store x3 (0x8bd0da1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008bd0da1a from memory into f5
fmadd.d f17, f10, f15, f5, dyn # perform operation
fmadd.d f17, f10, f15, f5, rdn # perform operation
fmadd.d f17, f10, f15, f5, rmm # perform operation
fmadd.d f17, f10, f15, f5, rne # perform operation
fmadd.d f17, f10, f15, f5, rtz # perform operation
fmadd.d f17, f10, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f10, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x22, 0x77014304 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x9cb07e1b # load x3 with 32 MSBs 0x000000009cb07e1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cb07e1b
sw x3, 0(x2) # store x3 (0x9cb07e1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009cb07e1b from memory into f2
fmadd.d f22, f10, f16, f2, dyn # perform operation
fmadd.d f22, f10, f16, f2, rdn # perform operation
fmadd.d f22, f10, f16, f2, rmm # perform operation
fmadd.d f22, f10, f16, f2, rne # perform operation
fmadd.d f22, f10, f16, f2, rtz # perform operation
fmadd.d f22, f10, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f10, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x29, 0x35412fd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0xd04d2398 # load x3 with 32 MSBs 0x00000000d04d2398
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d04d2398
sw x3, 0(x2) # store x3 (0xd04d2398) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d04d2398 from memory into f26
fmadd.d f29, f20, f30, f26, dyn # perform operation
fmadd.d f29, f20, f30, f26, rdn # perform operation
fmadd.d f29, f20, f30, f26, rmm # perform operation
fmadd.d f29, f20, f30, f26, rne # perform operation
fmadd.d f29, f20, f30, f26, rtz # perform operation
fmadd.d f29, f20, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f20, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0xd7b88f92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0xeefab1d7 # load x3 with 32 MSBs 0x00000000eefab1d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eefab1d7
sw x3, 0(x2) # store x3 (0xeefab1d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000eefab1d7 from memory into f11
fmadd.d f12, f6, f20, f11, dyn # perform operation
fmadd.d f12, f6, f20, f11, rdn # perform operation
fmadd.d f12, f6, f20, f11, rmm # perform operation
fmadd.d f12, f6, f20, f11, rne # perform operation
fmadd.d f12, f6, f20, f11, rtz # perform operation
fmadd.d f12, f6, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f6, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x20, 0x0075c556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x40ee196b # load x3 with 32 MSBs 0x0000000040ee196b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040ee196b
sw x3, 0(x2) # store x3 (0x40ee196b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000040ee196b from memory into f5
fmadd.d f20, f27, f17, f5, dyn # perform operation
fmadd.d f20, f27, f17, f5, rdn # perform operation
fmadd.d f20, f27, f17, f5, rmm # perform operation
fmadd.d f20, f27, f17, f5, rne # perform operation
fmadd.d f20, f27, f17, f5, rtz # perform operation
fmadd.d f20, f27, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f27, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x31, 0xcaa01f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x28b42669 # load x3 with 32 MSBs 0x0000000028b42669
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028b42669
sw x3, 0(x2) # store x3 (0x28b42669) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000028b42669 from memory into f25
fmadd.d f31, f20, f4, f25, dyn # perform operation
fmadd.d f31, f20, f4, f25, rdn # perform operation
fmadd.d f31, f20, f4, f25, rmm # perform operation
fmadd.d f31, f20, f4, f25, rne # perform operation
fmadd.d f31, f20, f4, f25, rtz # perform operation
fmadd.d f31, f20, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f20, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f20, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f20, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f20, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f20, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x13, 0xce7943a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xf33a6ce3 # load x3 with 32 MSBs 0x00000000f33a6ce3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f33a6ce3
sw x3, 0(x2) # store x3 (0xf33a6ce3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f33a6ce3 from memory into f11
fmadd.d f13, f18, f9, f11, dyn # perform operation
fmadd.d f13, f18, f9, f11, rdn # perform operation
fmadd.d f13, f18, f9, f11, rmm # perform operation
fmadd.d f13, f18, f9, f11, rne # perform operation
fmadd.d f13, f18, f9, f11, rtz # perform operation
fmadd.d f13, f18, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f18, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f18, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x24, 0x8d041668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x30cbe093 # load x3 with 32 MSBs 0x0000000030cbe093
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030cbe093
sw x3, 0(x2) # store x3 (0x30cbe093) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000030cbe093 from memory into f21
fmadd.d f24, f7, f22, f21, dyn # perform operation
fmadd.d f24, f7, f22, f21, rdn # perform operation
fmadd.d f24, f7, f22, f21, rmm # perform operation
fmadd.d f24, f7, f22, f21, rne # perform operation
fmadd.d f24, f7, f22, f21, rtz # perform operation
fmadd.d f24, f7, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f7, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f7, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f7, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f7, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f7, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x22, 0x81af251d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
li x3, 0xe2c83a43 # load x3 with 32 MSBs 0x00000000e2c83a43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2c83a43
sw x3, 0(x2) # store x3 (0xe2c83a43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e2c83a43 from memory into f11
fmadd.d f22, f13, f14, f11, dyn # perform operation
fmadd.d f22, f13, f14, f11, rdn # perform operation
fmadd.d f22, f13, f14, f11, rmm # perform operation
fmadd.d f22, f13, f14, f11, rne # perform operation
fmadd.d f22, f13, f14, f11, rtz # perform operation
fmadd.d f22, f13, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f13, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x13, 0x46ddd5c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x819ce569 # load x3 with 32 MSBs 0x00000000819ce569
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000819ce569
sw x3, 0(x2) # store x3 (0x819ce569) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000819ce569 from memory into f24
fmadd.d f13, f16, f27, f24, dyn # perform operation
fmadd.d f13, f16, f27, f24, rdn # perform operation
fmadd.d f13, f16, f27, f24, rmm # perform operation
fmadd.d f13, f16, f27, f24, rne # perform operation
fmadd.d f13, f16, f27, f24, rtz # perform operation
fmadd.d f13, f16, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f16, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f16, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f16, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f16, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f16, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x24, 0x1cb223eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x8988e664 # load x3 with 32 MSBs 0x000000008988e664
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008988e664
sw x3, 0(x2) # store x3 (0x8988e664) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008988e664 from memory into f18
fmadd.d f24, f25, f28, f18, dyn # perform operation
fmadd.d f24, f25, f28, f18, rdn # perform operation
fmadd.d f24, f25, f28, f18, rmm # perform operation
fmadd.d f24, f25, f28, f18, rne # perform operation
fmadd.d f24, f25, f28, f18, rtz # perform operation
fmadd.d f24, f25, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f25, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x1, 0xa1c972df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x9be0948b # load x3 with 32 MSBs 0x000000009be0948b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009be0948b
sw x3, 0(x2) # store x3 (0x9be0948b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009be0948b from memory into f4
fmadd.d f1, f18, f29, f4, dyn # perform operation
fmadd.d f1, f18, f29, f4, rdn # perform operation
fmadd.d f1, f18, f29, f4, rmm # perform operation
fmadd.d f1, f18, f29, f4, rne # perform operation
fmadd.d f1, f18, f29, f4, rtz # perform operation
fmadd.d f1, f18, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f18, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x2, 0x757a015d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0xe5fb5def # load x3 with 32 MSBs 0x00000000e5fb5def
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5fb5def
sw x3, 0(x2) # store x3 (0xe5fb5def) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e5fb5def from memory into f19
fmadd.d f2, f21, f20, f19, dyn # perform operation
fmadd.d f2, f21, f20, f19, rdn # perform operation
fmadd.d f2, f21, f20, f19, rmm # perform operation
fmadd.d f2, f21, f20, f19, rne # perform operation
fmadd.d f2, f21, f20, f19, rtz # perform operation
fmadd.d f2, f21, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f21, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x13, 0xa070575b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0xff2bc375 # load x3 with 32 MSBs 0x00000000ff2bc375
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff2bc375
sw x3, 0(x2) # store x3 (0xff2bc375) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ff2bc375 from memory into f7
fmadd.d f13, f8, f24, f7, dyn # perform operation
fmadd.d f13, f8, f24, f7, rdn # perform operation
fmadd.d f13, f8, f24, f7, rmm # perform operation
fmadd.d f13, f8, f24, f7, rne # perform operation
fmadd.d f13, f8, f24, f7, rtz # perform operation
fmadd.d f13, f8, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f8, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x4, 0xe423e6d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xbc4cc680 # load x3 with 32 MSBs 0x00000000bc4cc680
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc4cc680
sw x3, 0(x2) # store x3 (0xbc4cc680) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bc4cc680 from memory into f24
fmadd.d f4, f17, f16, f24, dyn # perform operation
fmadd.d f4, f17, f16, f24, rdn # perform operation
fmadd.d f4, f17, f16, f24, rmm # perform operation
fmadd.d f4, f17, f16, f24, rne # perform operation
fmadd.d f4, f17, f16, f24, rtz # perform operation
fmadd.d f4, f17, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f17, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x17, 0x6397a5f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x8eb3917b # load x3 with 32 MSBs 0x000000008eb3917b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008eb3917b
sw x3, 0(x2) # store x3 (0x8eb3917b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008eb3917b from memory into f5
fmadd.d f17, f2, f1, f5, dyn # perform operation
fmadd.d f17, f2, f1, f5, rdn # perform operation
fmadd.d f17, f2, f1, f5, rmm # perform operation
fmadd.d f17, f2, f1, f5, rne # perform operation
fmadd.d f17, f2, f1, f5, rtz # perform operation
fmadd.d f17, f2, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f2, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f2, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f2, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f2, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f2, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x31, 0xc69a87a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0xa3a8b550 # load x3 with 32 MSBs 0x00000000a3a8b550
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3a8b550
sw x3, 0(x2) # store x3 (0xa3a8b550) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a3a8b550 from memory into f29
fmadd.d f31, f23, f5, f29, dyn # perform operation
fmadd.d f31, f23, f5, f29, rdn # perform operation
fmadd.d f31, f23, f5, f29, rmm # perform operation
fmadd.d f31, f23, f5, f29, rne # perform operation
fmadd.d f31, f23, f5, f29, rtz # perform operation
fmadd.d f31, f23, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f23, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x5, 0xa8e26ead # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0xc2b2a9e1 # load x3 with 32 MSBs 0x00000000c2b2a9e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2b2a9e1
sw x3, 0(x2) # store x3 (0xc2b2a9e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c2b2a9e1 from memory into f11
fmadd.d f5, f21, f9, f11, dyn # perform operation
fmadd.d f5, f21, f9, f11, rdn # perform operation
fmadd.d f5, f21, f9, f11, rmm # perform operation
fmadd.d f5, f21, f9, f11, rne # perform operation
fmadd.d f5, f21, f9, f11, rtz # perform operation
fmadd.d f5, f21, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f21, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x21, 0x67e229e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0xbd7fc980 # load x3 with 32 MSBs 0x00000000bd7fc980
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd7fc980
sw x3, 0(x2) # store x3 (0xbd7fc980) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bd7fc980 from memory into f31
fmadd.d f21, f4, f15, f31, dyn # perform operation
fmadd.d f21, f4, f15, f31, rdn # perform operation
fmadd.d f21, f4, f15, f31, rmm # perform operation
fmadd.d f21, f4, f15, f31, rne # perform operation
fmadd.d f21, f4, f15, f31, rtz # perform operation
fmadd.d f21, f4, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f4, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f4, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f4, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f4, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f4, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x1, 0x823cf575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0xcda8e14c # load x3 with 32 MSBs 0x00000000cda8e14c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cda8e14c
sw x3, 0(x2) # store x3 (0xcda8e14c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000cda8e14c from memory into f9
fmadd.d f1, f10, f5, f9, dyn # perform operation
fmadd.d f1, f10, f5, f9, rdn # perform operation
fmadd.d f1, f10, f5, f9, rmm # perform operation
fmadd.d f1, f10, f5, f9, rne # perform operation
fmadd.d f1, f10, f5, f9, rtz # perform operation
fmadd.d f1, f10, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f10, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x13, 0xb6512ec9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0x964c2c1c # load x3 with 32 MSBs 0x00000000964c2c1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000964c2c1c
sw x3, 0(x2) # store x3 (0x964c2c1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000964c2c1c from memory into f27
fmadd.d f13, f3, f17, f27, dyn # perform operation
fmadd.d f13, f3, f17, f27, rdn # perform operation
fmadd.d f13, f3, f17, f27, rmm # perform operation
fmadd.d f13, f3, f17, f27, rne # perform operation
fmadd.d f13, f3, f17, f27, rtz # perform operation
fmadd.d f13, f3, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f3, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x29, 0x9656733a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x67549e3d # load x3 with 32 MSBs 0x0000000067549e3d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067549e3d
sw x3, 0(x2) # store x3 (0x67549e3d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000067549e3d from memory into f30
fmadd.d f29, f4, f22, f30, dyn # perform operation
fmadd.d f29, f4, f22, f30, rdn # perform operation
fmadd.d f29, f4, f22, f30, rmm # perform operation
fmadd.d f29, f4, f22, f30, rne # perform operation
fmadd.d f29, f4, f22, f30, rtz # perform operation
fmadd.d f29, f4, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f4, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f4, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f4, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f4, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f4, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x24, 0xefbf1f93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xb94f8914 # load x3 with 32 MSBs 0x00000000b94f8914
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b94f8914
sw x3, 0(x2) # store x3 (0xb94f8914) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b94f8914 from memory into f9
fmadd.d f24, f22, f20, f9, dyn # perform operation
fmadd.d f24, f22, f20, f9, rdn # perform operation
fmadd.d f24, f22, f20, f9, rmm # perform operation
fmadd.d f24, f22, f20, f9, rne # perform operation
fmadd.d f24, f22, f20, f9, rtz # perform operation
fmadd.d f24, f22, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f22, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f22, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f22, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f22, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f22, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x18, 0xabf105a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x2692b191 # load x3 with 32 MSBs 0x000000002692b191
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002692b191
sw x3, 0(x2) # store x3 (0x2692b191) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000002692b191 from memory into f20
fmadd.d f18, f1, f7, f20, dyn # perform operation
fmadd.d f18, f1, f7, f20, rdn # perform operation
fmadd.d f18, f1, f7, f20, rmm # perform operation
fmadd.d f18, f1, f7, f20, rne # perform operation
fmadd.d f18, f1, f7, f20, rtz # perform operation
fmadd.d f18, f1, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f1, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f1, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x30, 0x88a764bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0xbd965e62 # load x3 with 32 MSBs 0x00000000bd965e62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd965e62
sw x3, 0(x2) # store x3 (0xbd965e62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000bd965e62 from memory into f13
fmadd.d f30, f15, f22, f13, dyn # perform operation
fmadd.d f30, f15, f22, f13, rdn # perform operation
fmadd.d f30, f15, f22, f13, rmm # perform operation
fmadd.d f30, f15, f22, f13, rne # perform operation
fmadd.d f30, f15, f22, f13, rtz # perform operation
fmadd.d f30, f15, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f15, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x25, 0x782b167e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x0269ba14 # load x3 with 32 MSBs 0x000000000269ba14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000269ba14
sw x3, 0(x2) # store x3 (0x0269ba14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000269ba14 from memory into f19
fmadd.d f25, f11, f5, f19, dyn # perform operation
fmadd.d f25, f11, f5, f19, rdn # perform operation
fmadd.d f25, f11, f5, f19, rmm # perform operation
fmadd.d f25, f11, f5, f19, rne # perform operation
fmadd.d f25, f11, f5, f19, rtz # perform operation
fmadd.d f25, f11, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f11, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f11, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x5, 0x86acb38f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x643e82c2 # load x3 with 32 MSBs 0x00000000643e82c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000643e82c2
sw x3, 0(x2) # store x3 (0x643e82c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000643e82c2 from memory into f22
fmadd.d f5, f27, f3, f22, dyn # perform operation
fmadd.d f5, f27, f3, f22, rdn # perform operation
fmadd.d f5, f27, f3, f22, rmm # perform operation
fmadd.d f5, f27, f3, f22, rne # perform operation
fmadd.d f5, f27, f3, f22, rtz # perform operation
fmadd.d f5, f27, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f27, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f27, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x29, 0x73fd6684 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x3d7fc26e # load x3 with 32 MSBs 0x000000003d7fc26e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d7fc26e
sw x3, 0(x2) # store x3 (0x3d7fc26e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000003d7fc26e from memory into f1
fmadd.d f29, f15, f9, f1, dyn # perform operation
fmadd.d f29, f15, f9, f1, rdn # perform operation
fmadd.d f29, f15, f9, f1, rmm # perform operation
fmadd.d f29, f15, f9, f1, rne # perform operation
fmadd.d f29, f15, f9, f1, rtz # perform operation
fmadd.d f29, f15, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f15, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f15, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x7, 0x1f5c027d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x9cab3744 # load x3 with 32 MSBs 0x000000009cab3744
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cab3744
sw x3, 0(x2) # store x3 (0x9cab3744) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009cab3744 from memory into f21
fmadd.d f7, f12, f17, f21, dyn # perform operation
fmadd.d f7, f12, f17, f21, rdn # perform operation
fmadd.d f7, f12, f17, f21, rmm # perform operation
fmadd.d f7, f12, f17, f21, rne # perform operation
fmadd.d f7, f12, f17, f21, rtz # perform operation
fmadd.d f7, f12, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f12, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f12, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x6, 0xd6767fd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x6b26362b # load x3 with 32 MSBs 0x000000006b26362b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b26362b
sw x3, 0(x2) # store x3 (0x6b26362b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000006b26362b from memory into f19
fmadd.d f6, f2, f8, f19, dyn # perform operation
fmadd.d f6, f2, f8, f19, rdn # perform operation
fmadd.d f6, f2, f8, f19, rmm # perform operation
fmadd.d f6, f2, f8, f19, rne # perform operation
fmadd.d f6, f2, f8, f19, rtz # perform operation
fmadd.d f6, f2, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f2, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f2, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x19, 0x84b844ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0xe0576d5e # load x3 with 32 MSBs 0x00000000e0576d5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0576d5e
sw x3, 0(x2) # store x3 (0xe0576d5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e0576d5e from memory into f28
fmadd.d f19, f25, f22, f28, dyn # perform operation
fmadd.d f19, f25, f22, f28, rdn # perform operation
fmadd.d f19, f25, f22, f28, rmm # perform operation
fmadd.d f19, f25, f22, f28, rne # perform operation
fmadd.d f19, f25, f22, f28, rtz # perform operation
fmadd.d f19, f25, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f25, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x20, 0xce3d7e2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0xb6cf8447 # load x3 with 32 MSBs 0x00000000b6cf8447
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6cf8447
sw x3, 0(x2) # store x3 (0xb6cf8447) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b6cf8447 from memory into f24
fmadd.d f20, f16, f15, f24, dyn # perform operation
fmadd.d f20, f16, f15, f24, rdn # perform operation
fmadd.d f20, f16, f15, f24, rmm # perform operation
fmadd.d f20, f16, f15, f24, rne # perform operation
fmadd.d f20, f16, f15, f24, rtz # perform operation
fmadd.d f20, f16, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f16, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x4, 0x6c6629f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x1d376bca # load x3 with 32 MSBs 0x000000001d376bca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d376bca
sw x3, 0(x2) # store x3 (0x1d376bca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000001d376bca from memory into f9
fmadd.d f4, f28, f8, f9, dyn # perform operation
fmadd.d f4, f28, f8, f9, rdn # perform operation
fmadd.d f4, f28, f8, f9, rmm # perform operation
fmadd.d f4, f28, f8, f9, rne # perform operation
fmadd.d f4, f28, f8, f9, rtz # perform operation
fmadd.d f4, f28, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f28, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x1, 0x4d6923c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x928dab4f # load x3 with 32 MSBs 0x00000000928dab4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000928dab4f
sw x3, 0(x2) # store x3 (0x928dab4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000928dab4f from memory into f23
fmadd.d f1, f25, f6, f23, dyn # perform operation
fmadd.d f1, f25, f6, f23, rdn # perform operation
fmadd.d f1, f25, f6, f23, rmm # perform operation
fmadd.d f1, f25, f6, f23, rne # perform operation
fmadd.d f1, f25, f6, f23, rtz # perform operation
fmadd.d f1, f25, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f25, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f25, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f25, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f25, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f25, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x16, 0xff49f61a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xc88f314d # load x3 with 32 MSBs 0x00000000c88f314d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c88f314d
sw x3, 0(x2) # store x3 (0xc88f314d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c88f314d from memory into f4
fmadd.d f16, f3, f2, f4, dyn # perform operation
fmadd.d f16, f3, f2, f4, rdn # perform operation
fmadd.d f16, f3, f2, f4, rmm # perform operation
fmadd.d f16, f3, f2, f4, rne # perform operation
fmadd.d f16, f3, f2, f4, rtz # perform operation
fmadd.d f16, f3, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f3, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f3, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f3, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f3, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f3, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x4, 0xbc1d82b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x58f277dc # load x3 with 32 MSBs 0x0000000058f277dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058f277dc
sw x3, 0(x2) # store x3 (0x58f277dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000058f277dc from memory into f23
fmadd.d f4, f21, f19, f23, dyn # perform operation
fmadd.d f4, f21, f19, f23, rdn # perform operation
fmadd.d f4, f21, f19, f23, rmm # perform operation
fmadd.d f4, f21, f19, f23, rne # perform operation
fmadd.d f4, f21, f19, f23, rtz # perform operation
fmadd.d f4, f21, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f21, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f21, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x21, 0xbc90534b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
li x3, 0xc28cb1bd # load x3 with 32 MSBs 0x00000000c28cb1bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c28cb1bd
sw x3, 0(x2) # store x3 (0xc28cb1bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c28cb1bd from memory into f29
fmadd.d f21, f15, f24, f29, dyn # perform operation
fmadd.d f21, f15, f24, f29, rdn # perform operation
fmadd.d f21, f15, f24, f29, rmm # perform operation
fmadd.d f21, f15, f24, f29, rne # perform operation
fmadd.d f21, f15, f24, f29, rtz # perform operation
fmadd.d f21, f15, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f15, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x27, 0x94d92b12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x46b5bdb1 # load x3 with 32 MSBs 0x0000000046b5bdb1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046b5bdb1
sw x3, 0(x2) # store x3 (0x46b5bdb1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000046b5bdb1 from memory into f14
fmadd.d f27, f24, f16, f14, dyn # perform operation
fmadd.d f27, f24, f16, f14, rdn # perform operation
fmadd.d f27, f24, f16, f14, rmm # perform operation
fmadd.d f27, f24, f16, f14, rne # perform operation
fmadd.d f27, f24, f16, f14, rtz # perform operation
fmadd.d f27, f24, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f24, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x8, 0xa8067269 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x638aaa08 # load x3 with 32 MSBs 0x00000000638aaa08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000638aaa08
sw x3, 0(x2) # store x3 (0x638aaa08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000638aaa08 from memory into f19
fmadd.d f8, f7, f21, f19, dyn # perform operation
fmadd.d f8, f7, f21, f19, rdn # perform operation
fmadd.d f8, f7, f21, f19, rmm # perform operation
fmadd.d f8, f7, f21, f19, rne # perform operation
fmadd.d f8, f7, f21, f19, rtz # perform operation
fmadd.d f8, f7, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f7, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f7, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x24, 0x1f408fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xb6337aa3 # load x3 with 32 MSBs 0x00000000b6337aa3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6337aa3
sw x3, 0(x2) # store x3 (0xb6337aa3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b6337aa3 from memory into f30
fmadd.d f24, f4, f15, f30, dyn # perform operation
fmadd.d f24, f4, f15, f30, rdn # perform operation
fmadd.d f24, f4, f15, f30, rmm # perform operation
fmadd.d f24, f4, f15, f30, rne # perform operation
fmadd.d f24, f4, f15, f30, rtz # perform operation
fmadd.d f24, f4, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f4, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f4, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f4, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f4, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f4, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x2, 0x1caf1322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x5dff593f # load x3 with 32 MSBs 0x000000005dff593f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005dff593f
sw x3, 0(x2) # store x3 (0x5dff593f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005dff593f from memory into f30
fmadd.d f2, f23, f28, f30, dyn # perform operation
fmadd.d f2, f23, f28, f30, rdn # perform operation
fmadd.d f2, f23, f28, f30, rmm # perform operation
fmadd.d f2, f23, f28, f30, rne # perform operation
fmadd.d f2, f23, f28, f30, rtz # perform operation
fmadd.d f2, f23, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f23, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f23, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f23, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f23, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f23, f28, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x25, 0xfb51fd6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0x513a991a # load x3 with 32 MSBs 0x00000000513a991a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000513a991a
sw x3, 0(x2) # store x3 (0x513a991a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000513a991a from memory into f18
fmadd.d f25, f2, f3, f18, dyn # perform operation
fmadd.d f25, f2, f3, f18, rdn # perform operation
fmadd.d f25, f2, f3, f18, rmm # perform operation
fmadd.d f25, f2, f3, f18, rne # perform operation
fmadd.d f25, f2, f3, f18, rtz # perform operation
fmadd.d f25, f2, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f2, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f2, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f2, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f2, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f2, f3, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x16, 0xcc5a4c2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x0d1ce0ad # load x3 with 32 MSBs 0x000000000d1ce0ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d1ce0ad
sw x3, 0(x2) # store x3 (0x0d1ce0ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000d1ce0ad from memory into f1
fmadd.d f16, f12, f9, f1, dyn # perform operation
fmadd.d f16, f12, f9, f1, rdn # perform operation
fmadd.d f16, f12, f9, f1, rmm # perform operation
fmadd.d f16, f12, f9, f1, rne # perform operation
fmadd.d f16, f12, f9, f1, rtz # perform operation
fmadd.d f16, f12, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f12, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f12, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f12, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f12, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f12, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x23, 0x04738052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x87bd25bb # load x3 with 32 MSBs 0x0000000087bd25bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087bd25bb
sw x3, 0(x2) # store x3 (0x87bd25bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000087bd25bb from memory into f6
fmadd.d f23, f29, f28, f6, dyn # perform operation
fmadd.d f23, f29, f28, f6, rdn # perform operation
fmadd.d f23, f29, f28, f6, rmm # perform operation
fmadd.d f23, f29, f28, f6, rne # perform operation
fmadd.d f23, f29, f28, f6, rtz # perform operation
fmadd.d f23, f29, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f29, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x23, 0xd3311f88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x6fcd5bf0 # load x3 with 32 MSBs 0x000000006fcd5bf0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fcd5bf0
sw x3, 0(x2) # store x3 (0x6fcd5bf0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006fcd5bf0 from memory into f18
fmadd.d f23, f19, f6, f18, dyn # perform operation
fmadd.d f23, f19, f6, f18, rdn # perform operation
fmadd.d f23, f19, f6, f18, rmm # perform operation
fmadd.d f23, f19, f6, f18, rne # perform operation
fmadd.d f23, f19, f6, f18, rtz # perform operation
fmadd.d f23, f19, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f19, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f19, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f19, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f19, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f19, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x9, 0x00ff84d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0xdda70899 # load x3 with 32 MSBs 0x00000000dda70899
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dda70899
sw x3, 0(x2) # store x3 (0xdda70899) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000dda70899 from memory into f28
fmadd.d f9, f22, f23, f28, dyn # perform operation
fmadd.d f9, f22, f23, f28, rdn # perform operation
fmadd.d f9, f22, f23, f28, rmm # perform operation
fmadd.d f9, f22, f23, f28, rne # perform operation
fmadd.d f9, f22, f23, f28, rtz # perform operation
fmadd.d f9, f22, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f22, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x18, 0x128a6a18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x3e442ff2 # load x3 with 32 MSBs 0x000000003e442ff2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e442ff2
sw x3, 0(x2) # store x3 (0x3e442ff2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003e442ff2 from memory into f6
fmadd.d f18, f19, f11, f6, dyn # perform operation
fmadd.d f18, f19, f11, f6, rdn # perform operation
fmadd.d f18, f19, f11, f6, rmm # perform operation
fmadd.d f18, f19, f11, f6, rne # perform operation
fmadd.d f18, f19, f11, f6, rtz # perform operation
fmadd.d f18, f19, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f19, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f19, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x7, 0xb7d22406 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x9a3cbebe # load x3 with 32 MSBs 0x000000009a3cbebe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a3cbebe
sw x3, 0(x2) # store x3 (0x9a3cbebe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009a3cbebe from memory into f24
fmadd.d f7, f4, f5, f24, dyn # perform operation
fmadd.d f7, f4, f5, f24, rdn # perform operation
fmadd.d f7, f4, f5, f24, rmm # perform operation
fmadd.d f7, f4, f5, f24, rne # perform operation
fmadd.d f7, f4, f5, f24, rtz # perform operation
fmadd.d f7, f4, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f4, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f4, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x28, 0x4ec9ad70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0xcf77348a # load x3 with 32 MSBs 0x00000000cf77348a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf77348a
sw x3, 0(x2) # store x3 (0xcf77348a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000cf77348a from memory into f18
fmadd.d f28, f4, f29, f18, dyn # perform operation
fmadd.d f28, f4, f29, f18, rdn # perform operation
fmadd.d f28, f4, f29, f18, rmm # perform operation
fmadd.d f28, f4, f29, f18, rne # perform operation
fmadd.d f28, f4, f29, f18, rtz # perform operation
fmadd.d f28, f4, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f4, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x20, 0xad4b5227 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0xb33dc02e # load x3 with 32 MSBs 0x00000000b33dc02e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b33dc02e
sw x3, 0(x2) # store x3 (0xb33dc02e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b33dc02e from memory into f30
fmadd.d f20, f2, f8, f30, dyn # perform operation
fmadd.d f20, f2, f8, f30, rdn # perform operation
fmadd.d f20, f2, f8, f30, rmm # perform operation
fmadd.d f20, f2, f8, f30, rne # perform operation
fmadd.d f20, f2, f8, f30, rtz # perform operation
fmadd.d f20, f2, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f2, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f2, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f2, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f2, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f2, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x18, 0x1d62b441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x9b694a1a # load x3 with 32 MSBs 0x000000009b694a1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b694a1a
sw x3, 0(x2) # store x3 (0x9b694a1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000009b694a1a from memory into f31
fmadd.d f18, f19, f21, f31, dyn # perform operation
fmadd.d f18, f19, f21, f31, rdn # perform operation
fmadd.d f18, f19, f21, f31, rmm # perform operation
fmadd.d f18, f19, f21, f31, rne # perform operation
fmadd.d f18, f19, f21, f31, rtz # perform operation
fmadd.d f18, f19, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f19, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x1, 0x939093d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x9396f3f0 # load x3 with 32 MSBs 0x000000009396f3f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009396f3f0
sw x3, 0(x2) # store x3 (0x9396f3f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009396f3f0 from memory into f21
fmadd.d f1, f3, f23, f21, dyn # perform operation
fmadd.d f1, f3, f23, f21, rdn # perform operation
fmadd.d f1, f3, f23, f21, rmm # perform operation
fmadd.d f1, f3, f23, f21, rne # perform operation
fmadd.d f1, f3, f23, f21, rtz # perform operation
fmadd.d f1, f3, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f3, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f3, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f3, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f3, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f3, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x26, 0xf0d7e773 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0x9add412d # load x3 with 32 MSBs 0x000000009add412d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009add412d
sw x3, 0(x2) # store x3 (0x9add412d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000009add412d from memory into f31
fmadd.d f26, f30, f28, f31, dyn # perform operation
fmadd.d f26, f30, f28, f31, rdn # perform operation
fmadd.d f26, f30, f28, f31, rmm # perform operation
fmadd.d f26, f30, f28, f31, rne # perform operation
fmadd.d f26, f30, f28, f31, rtz # perform operation
fmadd.d f26, f30, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f30, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x1, 0x782347cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x2ebedd2f # load x3 with 32 MSBs 0x000000002ebedd2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ebedd2f
sw x3, 0(x2) # store x3 (0x2ebedd2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000002ebedd2f from memory into f6
fmadd.d f1, f16, f22, f6, dyn # perform operation
fmadd.d f1, f16, f22, f6, rdn # perform operation
fmadd.d f1, f16, f22, f6, rmm # perform operation
fmadd.d f1, f16, f22, f6, rne # perform operation
fmadd.d f1, f16, f22, f6, rtz # perform operation
fmadd.d f1, f16, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f16, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x11, 0x77ccd877 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0xb1aca08e # load x3 with 32 MSBs 0x00000000b1aca08e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1aca08e
sw x3, 0(x2) # store x3 (0xb1aca08e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b1aca08e from memory into f30
fmadd.d f11, f23, f2, f30, dyn # perform operation
fmadd.d f11, f23, f2, f30, rdn # perform operation
fmadd.d f11, f23, f2, f30, rmm # perform operation
fmadd.d f11, f23, f2, f30, rne # perform operation
fmadd.d f11, f23, f2, f30, rtz # perform operation
fmadd.d f11, f23, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f23, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x22, 0x3f886575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x71c99e29 # load x3 with 32 MSBs 0x0000000071c99e29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071c99e29
sw x3, 0(x2) # store x3 (0x71c99e29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000071c99e29 from memory into f1
fmadd.d f22, f6, f20, f1, dyn # perform operation
fmadd.d f22, f6, f20, f1, rdn # perform operation
fmadd.d f22, f6, f20, f1, rmm # perform operation
fmadd.d f22, f6, f20, f1, rne # perform operation
fmadd.d f22, f6, f20, f1, rtz # perform operation
fmadd.d f22, f6, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f6, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x30, 0x6d30a7a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x546b36fd # load x3 with 32 MSBs 0x00000000546b36fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000546b36fd
sw x3, 0(x2) # store x3 (0x546b36fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000546b36fd from memory into f8
fmadd.d f30, f15, f23, f8, dyn # perform operation
fmadd.d f30, f15, f23, f8, rdn # perform operation
fmadd.d f30, f15, f23, f8, rmm # perform operation
fmadd.d f30, f15, f23, f8, rne # perform operation
fmadd.d f30, f15, f23, f8, rtz # perform operation
fmadd.d f30, f15, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f15, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x25, 0xf2c81205 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x4b31b88c # load x3 with 32 MSBs 0x000000004b31b88c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b31b88c
sw x3, 0(x2) # store x3 (0x4b31b88c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004b31b88c from memory into f9
fmadd.d f25, f3, f12, f9, dyn # perform operation
fmadd.d f25, f3, f12, f9, rdn # perform operation
fmadd.d f25, f3, f12, f9, rmm # perform operation
fmadd.d f25, f3, f12, f9, rne # perform operation
fmadd.d f25, f3, f12, f9, rtz # perform operation
fmadd.d f25, f3, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f3, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f3, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x10, 0x0b649025 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x288c8830 # load x3 with 32 MSBs 0x00000000288c8830
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000288c8830
sw x3, 0(x2) # store x3 (0x288c8830) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000288c8830 from memory into f2
fmadd.d f10, f8, f24, f2, dyn # perform operation
fmadd.d f10, f8, f24, f2, rdn # perform operation
fmadd.d f10, f8, f24, f2, rmm # perform operation
fmadd.d f10, f8, f24, f2, rne # perform operation
fmadd.d f10, f8, f24, f2, rtz # perform operation
fmadd.d f10, f8, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f8, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f8, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f8, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f8, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f8, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x27, 0x7cbf6ece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x9d1ad46e # load x3 with 32 MSBs 0x000000009d1ad46e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d1ad46e
sw x3, 0(x2) # store x3 (0x9d1ad46e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009d1ad46e from memory into f1
fmadd.d f27, f15, f31, f1, dyn # perform operation
fmadd.d f27, f15, f31, f1, rdn # perform operation
fmadd.d f27, f15, f31, f1, rmm # perform operation
fmadd.d f27, f15, f31, f1, rne # perform operation
fmadd.d f27, f15, f31, f1, rtz # perform operation
fmadd.d f27, f15, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f15, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x20, 0xa4b1439a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x7fe6d006 # load x3 with 32 MSBs 0x000000007fe6d006
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fe6d006
sw x3, 0(x2) # store x3 (0x7fe6d006) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007fe6d006 from memory into f24
fmadd.d f20, f2, f27, f24, dyn # perform operation
fmadd.d f20, f2, f27, f24, rdn # perform operation
fmadd.d f20, f2, f27, f24, rmm # perform operation
fmadd.d f20, f2, f27, f24, rne # perform operation
fmadd.d f20, f2, f27, f24, rtz # perform operation
fmadd.d f20, f2, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f2, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x5, 0x7acf1862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0xdcab029c # load x3 with 32 MSBs 0x00000000dcab029c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dcab029c
sw x3, 0(x2) # store x3 (0xdcab029c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000dcab029c from memory into f23
fmadd.d f5, f15, f9, f23, dyn # perform operation
fmadd.d f5, f15, f9, f23, rdn # perform operation
fmadd.d f5, f15, f9, f23, rmm # perform operation
fmadd.d f5, f15, f9, f23, rne # perform operation
fmadd.d f5, f15, f9, f23, rtz # perform operation
fmadd.d f5, f15, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f15, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f15, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f15, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f15, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f15, f9, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x27, 0xe3d86601 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0xd229dc7e # load x3 with 32 MSBs 0x00000000d229dc7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d229dc7e
sw x3, 0(x2) # store x3 (0xd229dc7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d229dc7e from memory into f24
fmadd.d f27, f13, f31, f24, dyn # perform operation
fmadd.d f27, f13, f31, f24, rdn # perform operation
fmadd.d f27, f13, f31, f24, rmm # perform operation
fmadd.d f27, f13, f31, f24, rne # perform operation
fmadd.d f27, f13, f31, f24, rtz # perform operation
fmadd.d f27, f13, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f13, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f13, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f13, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f13, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f13, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x17, 0xd35f8b81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x4ce289ef # load x3 with 32 MSBs 0x000000004ce289ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ce289ef
sw x3, 0(x2) # store x3 (0x4ce289ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000004ce289ef from memory into f27
fmadd.d f17, f2, f11, f27, dyn # perform operation
fmadd.d f17, f2, f11, f27, rdn # perform operation
fmadd.d f17, f2, f11, f27, rmm # perform operation
fmadd.d f17, f2, f11, f27, rne # perform operation
fmadd.d f17, f2, f11, f27, rtz # perform operation
fmadd.d f17, f2, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f2, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f2, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x31, 0x04442a7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x2322f714 # load x3 with 32 MSBs 0x000000002322f714
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002322f714
sw x3, 0(x2) # store x3 (0x2322f714) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002322f714 from memory into f4
fmadd.d f31, f16, f5, f4, dyn # perform operation
fmadd.d f31, f16, f5, f4, rdn # perform operation
fmadd.d f31, f16, f5, f4, rmm # perform operation
fmadd.d f31, f16, f5, f4, rne # perform operation
fmadd.d f31, f16, f5, f4, rtz # perform operation
fmadd.d f31, f16, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f16, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f16, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x30, 0x55c20128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x453793da # load x3 with 32 MSBs 0x00000000453793da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000453793da
sw x3, 0(x2) # store x3 (0x453793da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000453793da from memory into f22
fmadd.d f30, f6, f28, f22, dyn # perform operation
fmadd.d f30, f6, f28, f22, rdn # perform operation
fmadd.d f30, f6, f28, f22, rmm # perform operation
fmadd.d f30, f6, f28, f22, rne # perform operation
fmadd.d f30, f6, f28, f22, rtz # perform operation
fmadd.d f30, f6, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f6, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x11, 0x2397fa21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x662c158d # load x3 with 32 MSBs 0x00000000662c158d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000662c158d
sw x3, 0(x2) # store x3 (0x662c158d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000662c158d from memory into f13
fmadd.d f11, f3, f23, f13, dyn # perform operation
fmadd.d f11, f3, f23, f13, rdn # perform operation
fmadd.d f11, f3, f23, f13, rmm # perform operation
fmadd.d f11, f3, f23, f13, rne # perform operation
fmadd.d f11, f3, f23, f13, rtz # perform operation
fmadd.d f11, f3, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f3, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x1, 0x51f9cfaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x5323dadb # load x3 with 32 MSBs 0x000000005323dadb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005323dadb
sw x3, 0(x2) # store x3 (0x5323dadb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005323dadb from memory into f24
fmadd.d f1, f5, f16, f24, dyn # perform operation
fmadd.d f1, f5, f16, f24, rdn # perform operation
fmadd.d f1, f5, f16, f24, rmm # perform operation
fmadd.d f1, f5, f16, f24, rne # perform operation
fmadd.d f1, f5, f16, f24, rtz # perform operation
fmadd.d f1, f5, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f5, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f5, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x11, 0xeed55097 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x7ea5d969 # load x3 with 32 MSBs 0x000000007ea5d969
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ea5d969
sw x3, 0(x2) # store x3 (0x7ea5d969) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007ea5d969 from memory into f10
fmadd.d f11, f22, f14, f10, dyn # perform operation
fmadd.d f11, f22, f14, f10, rdn # perform operation
fmadd.d f11, f22, f14, f10, rmm # perform operation
fmadd.d f11, f22, f14, f10, rne # perform operation
fmadd.d f11, f22, f14, f10, rtz # perform operation
fmadd.d f11, f22, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f22, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x28, 0x431a1ac0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x6d21978a # load x3 with 32 MSBs 0x000000006d21978a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d21978a
sw x3, 0(x2) # store x3 (0x6d21978a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006d21978a from memory into f18
fmadd.d f28, f2, f8, f18, dyn # perform operation
fmadd.d f28, f2, f8, f18, rdn # perform operation
fmadd.d f28, f2, f8, f18, rmm # perform operation
fmadd.d f28, f2, f8, f18, rne # perform operation
fmadd.d f28, f2, f8, f18, rtz # perform operation
fmadd.d f28, f2, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f2, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f2, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f2, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f2, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f2, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x18, 0xaf529c70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x95d56632 # load x3 with 32 MSBs 0x0000000095d56632
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095d56632
sw x3, 0(x2) # store x3 (0x95d56632) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000095d56632 from memory into f10
fmadd.d f18, f23, f13, f10, dyn # perform operation
fmadd.d f18, f23, f13, f10, rdn # perform operation
fmadd.d f18, f23, f13, f10, rmm # perform operation
fmadd.d f18, f23, f13, f10, rne # perform operation
fmadd.d f18, f23, f13, f10, rtz # perform operation
fmadd.d f18, f23, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f23, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x19, 0x6438dac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x4d0b71ca # load x3 with 32 MSBs 0x000000004d0b71ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d0b71ca
sw x3, 0(x2) # store x3 (0x4d0b71ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004d0b71ca from memory into f21
fmadd.d f19, f7, f8, f21, dyn # perform operation
fmadd.d f19, f7, f8, f21, rdn # perform operation
fmadd.d f19, f7, f8, f21, rmm # perform operation
fmadd.d f19, f7, f8, f21, rne # perform operation
fmadd.d f19, f7, f8, f21, rtz # perform operation
fmadd.d f19, f7, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f7, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f7, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f7, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f7, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f7, f8, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x26, 0x573b5319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0xaec81698 # load x3 with 32 MSBs 0x00000000aec81698
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aec81698
sw x3, 0(x2) # store x3 (0xaec81698) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000aec81698 from memory into f5
fmadd.d f26, f18, f4, f5, dyn # perform operation
fmadd.d f26, f18, f4, f5, rdn # perform operation
fmadd.d f26, f18, f4, f5, rmm # perform operation
fmadd.d f26, f18, f4, f5, rne # perform operation
fmadd.d f26, f18, f4, f5, rtz # perform operation
fmadd.d f26, f18, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f18, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x18, 0xc6e7ec9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0xef015a02 # load x3 with 32 MSBs 0x00000000ef015a02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef015a02
sw x3, 0(x2) # store x3 (0xef015a02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ef015a02 from memory into f5
fmadd.d f18, f4, f9, f5, dyn # perform operation
fmadd.d f18, f4, f9, f5, rdn # perform operation
fmadd.d f18, f4, f9, f5, rmm # perform operation
fmadd.d f18, f4, f9, f5, rne # perform operation
fmadd.d f18, f4, f9, f5, rtz # perform operation
fmadd.d f18, f4, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f4, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x21, 0x3dfaa887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0x8490a8ec # load x3 with 32 MSBs 0x000000008490a8ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008490a8ec
sw x3, 0(x2) # store x3 (0x8490a8ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008490a8ec from memory into f28
fmadd.d f21, f19, f1, f28, dyn # perform operation
fmadd.d f21, f19, f1, f28, rdn # perform operation
fmadd.d f21, f19, f1, f28, rmm # perform operation
fmadd.d f21, f19, f1, f28, rne # perform operation
fmadd.d f21, f19, f1, f28, rtz # perform operation
fmadd.d f21, f19, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f19, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f19, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f19, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f19, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f19, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x8, 0x903bdc2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x31a33ce5 # load x3 with 32 MSBs 0x0000000031a33ce5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031a33ce5
sw x3, 0(x2) # store x3 (0x31a33ce5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000031a33ce5 from memory into f25
fmadd.d f8, f22, f5, f25, dyn # perform operation
fmadd.d f8, f22, f5, f25, rdn # perform operation
fmadd.d f8, f22, f5, f25, rmm # perform operation
fmadd.d f8, f22, f5, f25, rne # perform operation
fmadd.d f8, f22, f5, f25, rtz # perform operation
fmadd.d f8, f22, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f22, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f22, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f22, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f22, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f22, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x25, 0x6c88d5d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0xbfe94de4 # load x3 with 32 MSBs 0x00000000bfe94de4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfe94de4
sw x3, 0(x2) # store x3 (0xbfe94de4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000bfe94de4 from memory into f30
fmadd.d f25, f12, f9, f30, dyn # perform operation
fmadd.d f25, f12, f9, f30, rdn # perform operation
fmadd.d f25, f12, f9, f30, rmm # perform operation
fmadd.d f25, f12, f9, f30, rne # perform operation
fmadd.d f25, f12, f9, f30, rtz # perform operation
fmadd.d f25, f12, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f12, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f12, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f12, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f12, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f12, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x1, 0x4ba70364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x3e326806 # load x3 with 32 MSBs 0x000000003e326806
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e326806
sw x3, 0(x2) # store x3 (0x3e326806) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003e326806 from memory into f10
fmadd.d f1, f21, f11, f10, dyn # perform operation
fmadd.d f1, f21, f11, f10, rdn # perform operation
fmadd.d f1, f21, f11, f10, rmm # perform operation
fmadd.d f1, f21, f11, f10, rne # perform operation
fmadd.d f1, f21, f11, f10, rtz # perform operation
fmadd.d f1, f21, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f21, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x8, 0x51aa7acd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x6008e825 # load x3 with 32 MSBs 0x000000006008e825
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006008e825
sw x3, 0(x2) # store x3 (0x6008e825) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000006008e825 from memory into f13
fmadd.d f8, f28, f21, f13, dyn # perform operation
fmadd.d f8, f28, f21, f13, rdn # perform operation
fmadd.d f8, f28, f21, f13, rmm # perform operation
fmadd.d f8, f28, f21, f13, rne # perform operation
fmadd.d f8, f28, f21, f13, rtz # perform operation
fmadd.d f8, f28, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f28, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x31, 0x904f3277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xa6e86844 # load x3 with 32 MSBs 0x00000000a6e86844
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6e86844
sw x3, 0(x2) # store x3 (0xa6e86844) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a6e86844 from memory into f7
fmadd.d f31, f22, f5, f7, dyn # perform operation
fmadd.d f31, f22, f5, f7, rdn # perform operation
fmadd.d f31, f22, f5, f7, rmm # perform operation
fmadd.d f31, f22, f5, f7, rne # perform operation
fmadd.d f31, f22, f5, f7, rtz # perform operation
fmadd.d f31, f22, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f22, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x15, 0x633c4d1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0xe112c886 # load x3 with 32 MSBs 0x00000000e112c886
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e112c886
sw x3, 0(x2) # store x3 (0xe112c886) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e112c886 from memory into f16
fmadd.d f15, f7, f23, f16, dyn # perform operation
fmadd.d f15, f7, f23, f16, rdn # perform operation
fmadd.d f15, f7, f23, f16, rmm # perform operation
fmadd.d f15, f7, f23, f16, rne # perform operation
fmadd.d f15, f7, f23, f16, rtz # perform operation
fmadd.d f15, f7, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f7, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f7, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x26, 0xc5f9c216 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0xa079cd84 # load x3 with 32 MSBs 0x00000000a079cd84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a079cd84
sw x3, 0(x2) # store x3 (0xa079cd84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a079cd84 from memory into f18
fmadd.d f26, f20, f17, f18, dyn # perform operation
fmadd.d f26, f20, f17, f18, rdn # perform operation
fmadd.d f26, f20, f17, f18, rmm # perform operation
fmadd.d f26, f20, f17, f18, rne # perform operation
fmadd.d f26, f20, f17, f18, rtz # perform operation
fmadd.d f26, f20, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f20, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f20, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x6, 0x8e32c370 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x370f1f8a # load x3 with 32 MSBs 0x00000000370f1f8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000370f1f8a
sw x3, 0(x2) # store x3 (0x370f1f8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000370f1f8a from memory into f10
fmadd.d f6, f23, f3, f10, dyn # perform operation
fmadd.d f6, f23, f3, f10, rdn # perform operation
fmadd.d f6, f23, f3, f10, rmm # perform operation
fmadd.d f6, f23, f3, f10, rne # perform operation
fmadd.d f6, f23, f3, f10, rtz # perform operation
fmadd.d f6, f23, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f23, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x17, 0xaca2dfe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x9cc07e09 # load x3 with 32 MSBs 0x000000009cc07e09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cc07e09
sw x3, 0(x2) # store x3 (0x9cc07e09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000009cc07e09 from memory into f25
fmadd.d f17, f23, f14, f25, dyn # perform operation
fmadd.d f17, f23, f14, f25, rdn # perform operation
fmadd.d f17, f23, f14, f25, rmm # perform operation
fmadd.d f17, f23, f14, f25, rne # perform operation
fmadd.d f17, f23, f14, f25, rtz # perform operation
fmadd.d f17, f23, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f23, f14, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x19, 0x7eadf145 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x4f3c3a1d # load x3 with 32 MSBs 0x000000004f3c3a1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f3c3a1d
sw x3, 0(x2) # store x3 (0x4f3c3a1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004f3c3a1d from memory into f29
fmadd.d f19, f7, f21, f29, dyn # perform operation
fmadd.d f19, f7, f21, f29, rdn # perform operation
fmadd.d f19, f7, f21, f29, rmm # perform operation
fmadd.d f19, f7, f21, f29, rne # perform operation
fmadd.d f19, f7, f21, f29, rtz # perform operation
fmadd.d f19, f7, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f7, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f7, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f7, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f7, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f7, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x29, 0xf622044f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0xefc95999 # load x3 with 32 MSBs 0x00000000efc95999
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efc95999
sw x3, 0(x2) # store x3 (0xefc95999) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000efc95999 from memory into f8
fmadd.d f29, f14, f19, f8, dyn # perform operation
fmadd.d f29, f14, f19, f8, rdn # perform operation
fmadd.d f29, f14, f19, f8, rmm # perform operation
fmadd.d f29, f14, f19, f8, rne # perform operation
fmadd.d f29, f14, f19, f8, rtz # perform operation
fmadd.d f29, f14, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f14, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x14, 0x51cb64f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0xd3ab25c8 # load x3 with 32 MSBs 0x00000000d3ab25c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3ab25c8
sw x3, 0(x2) # store x3 (0xd3ab25c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d3ab25c8 from memory into f8
fmadd.d f14, f12, f28, f8, dyn # perform operation
fmadd.d f14, f12, f28, f8, rdn # perform operation
fmadd.d f14, f12, f28, f8, rmm # perform operation
fmadd.d f14, f12, f28, f8, rne # perform operation
fmadd.d f14, f12, f28, f8, rtz # perform operation
fmadd.d f14, f12, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f12, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x16, 0xa896ab66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0xe2189748 # load x3 with 32 MSBs 0x00000000e2189748
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2189748
sw x3, 0(x2) # store x3 (0xe2189748) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e2189748 from memory into f22
fmadd.d f16, f5, f11, f22, dyn # perform operation
fmadd.d f16, f5, f11, f22, rdn # perform operation
fmadd.d f16, f5, f11, f22, rmm # perform operation
fmadd.d f16, f5, f11, f22, rne # perform operation
fmadd.d f16, f5, f11, f22, rtz # perform operation
fmadd.d f16, f5, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f5, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f5, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x25, 0x6d28a22d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xb6ce3724 # load x3 with 32 MSBs 0x00000000b6ce3724
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6ce3724
sw x3, 0(x2) # store x3 (0xb6ce3724) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b6ce3724 from memory into f10
fmadd.d f25, f15, f21, f10, dyn # perform operation
fmadd.d f25, f15, f21, f10, rdn # perform operation
fmadd.d f25, f15, f21, f10, rmm # perform operation
fmadd.d f25, f15, f21, f10, rne # perform operation
fmadd.d f25, f15, f21, f10, rtz # perform operation
fmadd.d f25, f15, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f15, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x8, 0xd9203dea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x92941441 # load x3 with 32 MSBs 0x0000000092941441
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092941441
sw x3, 0(x2) # store x3 (0x92941441) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000092941441 from memory into f14
fmadd.d f8, f4, f12, f14, dyn # perform operation
fmadd.d f8, f4, f12, f14, rdn # perform operation
fmadd.d f8, f4, f12, f14, rmm # perform operation
fmadd.d f8, f4, f12, f14, rne # perform operation
fmadd.d f8, f4, f12, f14, rtz # perform operation
fmadd.d f8, f4, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f4, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f4, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f4, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f4, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f4, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x30, 0x6c95108b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x45099243 # load x3 with 32 MSBs 0x0000000045099243
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045099243
sw x3, 0(x2) # store x3 (0x45099243) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000045099243 from memory into f24
fmadd.d f30, f6, f7, f24, dyn # perform operation
fmadd.d f30, f6, f7, f24, rdn # perform operation
fmadd.d f30, f6, f7, f24, rmm # perform operation
fmadd.d f30, f6, f7, f24, rne # perform operation
fmadd.d f30, f6, f7, f24, rtz # perform operation
fmadd.d f30, f6, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f6, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f6, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f6, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f6, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f6, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x14, 0x67e3f2bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x81778a54 # load x3 with 32 MSBs 0x0000000081778a54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081778a54
sw x3, 0(x2) # store x3 (0x81778a54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000081778a54 from memory into f5
fmadd.d f14, f3, f22, f5, dyn # perform operation
fmadd.d f14, f3, f22, f5, rdn # perform operation
fmadd.d f14, f3, f22, f5, rmm # perform operation
fmadd.d f14, f3, f22, f5, rne # perform operation
fmadd.d f14, f3, f22, f5, rtz # perform operation
fmadd.d f14, f3, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f3, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x12, 0x773b20cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0xd82f0d85 # load x3 with 32 MSBs 0x00000000d82f0d85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d82f0d85
sw x3, 0(x2) # store x3 (0xd82f0d85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d82f0d85 from memory into f18
fmadd.d f12, f1, f29, f18, dyn # perform operation
fmadd.d f12, f1, f29, f18, rdn # perform operation
fmadd.d f12, f1, f29, f18, rmm # perform operation
fmadd.d f12, f1, f29, f18, rne # perform operation
fmadd.d f12, f1, f29, f18, rtz # perform operation
fmadd.d f12, f1, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f1, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x1, 0xd924b8b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0xb5586ed8 # load x3 with 32 MSBs 0x00000000b5586ed8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5586ed8
sw x3, 0(x2) # store x3 (0xb5586ed8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b5586ed8 from memory into f27
fmadd.d f1, f11, f31, f27, dyn # perform operation
fmadd.d f1, f11, f31, f27, rdn # perform operation
fmadd.d f1, f11, f31, f27, rmm # perform operation
fmadd.d f1, f11, f31, f27, rne # perform operation
fmadd.d f1, f11, f31, f27, rtz # perform operation
fmadd.d f1, f11, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f11, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f11, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x28, 0x2b1e3fc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x108cce70 # load x3 with 32 MSBs 0x00000000108cce70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000108cce70
sw x3, 0(x2) # store x3 (0x108cce70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000108cce70 from memory into f29
fmadd.d f28, f16, f21, f29, dyn # perform operation
fmadd.d f28, f16, f21, f29, rdn # perform operation
fmadd.d f28, f16, f21, f29, rmm # perform operation
fmadd.d f28, f16, f21, f29, rne # perform operation
fmadd.d f28, f16, f21, f29, rtz # perform operation
fmadd.d f28, f16, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f16, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x11, 0xab5653da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x5e9f532d # load x3 with 32 MSBs 0x000000005e9f532d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e9f532d
sw x3, 0(x2) # store x3 (0x5e9f532d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005e9f532d from memory into f8
fmadd.d f11, f3, f14, f8, dyn # perform operation
fmadd.d f11, f3, f14, f8, rdn # perform operation
fmadd.d f11, f3, f14, f8, rmm # perform operation
fmadd.d f11, f3, f14, f8, rne # perform operation
fmadd.d f11, f3, f14, f8, rtz # perform operation
fmadd.d f11, f3, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f3, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f3, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f3, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f3, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f3, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x9, 0x3a17896d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0xae6ecd38 # load x3 with 32 MSBs 0x00000000ae6ecd38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae6ecd38
sw x3, 0(x2) # store x3 (0xae6ecd38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ae6ecd38 from memory into f4
fmadd.d f9, f18, f27, f4, dyn # perform operation
fmadd.d f9, f18, f27, f4, rdn # perform operation
fmadd.d f9, f18, f27, f4, rmm # perform operation
fmadd.d f9, f18, f27, f4, rne # perform operation
fmadd.d f9, f18, f27, f4, rtz # perform operation
fmadd.d f9, f18, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f18, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x3441e1e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0x1c2b09a3 # load x3 with 32 MSBs 0x000000001c2b09a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c2b09a3
sw x3, 0(x2) # store x3 (0x1c2b09a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000001c2b09a3 from memory into f6
fmadd.d f29, f30, f17, f6, dyn # perform operation
fmadd.d f29, f30, f17, f6, rdn # perform operation
fmadd.d f29, f30, f17, f6, rmm # perform operation
fmadd.d f29, f30, f17, f6, rne # perform operation
fmadd.d f29, f30, f17, f6, rtz # perform operation
fmadd.d f29, f30, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f30, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x27, 0x8b4bf255 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x96b7ea83 # load x3 with 32 MSBs 0x0000000096b7ea83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096b7ea83
sw x3, 0(x2) # store x3 (0x96b7ea83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000096b7ea83 from memory into f20
fmadd.d f27, f10, f18, f20, dyn # perform operation
fmadd.d f27, f10, f18, f20, rdn # perform operation
fmadd.d f27, f10, f18, f20, rmm # perform operation
fmadd.d f27, f10, f18, f20, rne # perform operation
fmadd.d f27, f10, f18, f20, rtz # perform operation
fmadd.d f27, f10, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f10, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f10, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x25, 0x42ad3cf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x8665885b # load x3 with 32 MSBs 0x000000008665885b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008665885b
sw x3, 0(x2) # store x3 (0x8665885b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008665885b from memory into f2
fmadd.d f25, f4, f10, f2, dyn # perform operation
fmadd.d f25, f4, f10, f2, rdn # perform operation
fmadd.d f25, f4, f10, f2, rmm # perform operation
fmadd.d f25, f4, f10, f2, rne # perform operation
fmadd.d f25, f4, f10, f2, rtz # perform operation
fmadd.d f25, f4, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f4, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x4, 0x75ef3b7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x3bb63c3c # load x3 with 32 MSBs 0x000000003bb63c3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bb63c3c
sw x3, 0(x2) # store x3 (0x3bb63c3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003bb63c3c from memory into f9
fmadd.d f4, f8, f22, f9, dyn # perform operation
fmadd.d f4, f8, f22, f9, rdn # perform operation
fmadd.d f4, f8, f22, f9, rmm # perform operation
fmadd.d f4, f8, f22, f9, rne # perform operation
fmadd.d f4, f8, f22, f9, rtz # perform operation
fmadd.d f4, f8, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f8, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f8, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f8, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f8, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f8, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x5, 0x809a4e90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0xc35ce7b5 # load x3 with 32 MSBs 0x00000000c35ce7b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c35ce7b5
sw x3, 0(x2) # store x3 (0xc35ce7b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c35ce7b5 from memory into f28
fmadd.d f5, f18, f12, f28, dyn # perform operation
fmadd.d f5, f18, f12, f28, rdn # perform operation
fmadd.d f5, f18, f12, f28, rmm # perform operation
fmadd.d f5, f18, f12, f28, rne # perform operation
fmadd.d f5, f18, f12, f28, rtz # perform operation
fmadd.d f5, f18, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f18, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x17, 0x7f03b1ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0xd42a3fb4 # load x3 with 32 MSBs 0x00000000d42a3fb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d42a3fb4
sw x3, 0(x2) # store x3 (0xd42a3fb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000d42a3fb4 from memory into f6
fmadd.d f17, f14, f12, f6, dyn # perform operation
fmadd.d f17, f14, f12, f6, rdn # perform operation
fmadd.d f17, f14, f12, f6, rmm # perform operation
fmadd.d f17, f14, f12, f6, rne # perform operation
fmadd.d f17, f14, f12, f6, rtz # perform operation
fmadd.d f17, f14, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f14, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x2, 0x9e9ebc69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x3d3744ed # load x3 with 32 MSBs 0x000000003d3744ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d3744ed
sw x3, 0(x2) # store x3 (0x3d3744ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003d3744ed from memory into f18
fmadd.d f2, f31, f20, f18, dyn # perform operation
fmadd.d f2, f31, f20, f18, rdn # perform operation
fmadd.d f2, f31, f20, f18, rmm # perform operation
fmadd.d f2, f31, f20, f18, rne # perform operation
fmadd.d f2, f31, f20, f18, rtz # perform operation
fmadd.d f2, f31, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f31, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f31, f20, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x31, 0x88529427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x6fab2ed9 # load x3 with 32 MSBs 0x000000006fab2ed9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fab2ed9
sw x3, 0(x2) # store x3 (0x6fab2ed9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000006fab2ed9 from memory into f6
fmadd.d f31, f10, f11, f6, dyn # perform operation
fmadd.d f31, f10, f11, f6, rdn # perform operation
fmadd.d f31, f10, f11, f6, rmm # perform operation
fmadd.d f31, f10, f11, f6, rne # perform operation
fmadd.d f31, f10, f11, f6, rtz # perform operation
fmadd.d f31, f10, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f10, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x27, 0x1fc465c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x22700aed # load x3 with 32 MSBs 0x0000000022700aed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022700aed
sw x3, 0(x2) # store x3 (0x22700aed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000022700aed from memory into f7
fmadd.d f27, f18, f17, f7, dyn # perform operation
fmadd.d f27, f18, f17, f7, rdn # perform operation
fmadd.d f27, f18, f17, f7, rmm # perform operation
fmadd.d f27, f18, f17, f7, rne # perform operation
fmadd.d f27, f18, f17, f7, rtz # perform operation
fmadd.d f27, f18, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f18, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x23, 0xdda7bda2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0xd9df6a93 # load x3 with 32 MSBs 0x00000000d9df6a93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d9df6a93
sw x3, 0(x2) # store x3 (0xd9df6a93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d9df6a93 from memory into f22
fmadd.d f23, f27, f19, f22, dyn # perform operation
fmadd.d f23, f27, f19, f22, rdn # perform operation
fmadd.d f23, f27, f19, f22, rmm # perform operation
fmadd.d f23, f27, f19, f22, rne # perform operation
fmadd.d f23, f27, f19, f22, rtz # perform operation
fmadd.d f23, f27, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f27, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0x2a23e744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x3d8aeb50 # load x3 with 32 MSBs 0x000000003d8aeb50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d8aeb50
sw x3, 0(x2) # store x3 (0x3d8aeb50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003d8aeb50 from memory into f5
fmadd.d f12, f15, f18, f5, dyn # perform operation
fmadd.d f12, f15, f18, f5, rdn # perform operation
fmadd.d f12, f15, f18, f5, rmm # perform operation
fmadd.d f12, f15, f18, f5, rne # perform operation
fmadd.d f12, f15, f18, f5, rtz # perform operation
fmadd.d f12, f15, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f15, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f15, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f15, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f15, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f15, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x6, 0x974e628e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xb16eef61 # load x3 with 32 MSBs 0x00000000b16eef61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b16eef61
sw x3, 0(x2) # store x3 (0xb16eef61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b16eef61 from memory into f11
fmadd.d f6, f31, f17, f11, dyn # perform operation
fmadd.d f6, f31, f17, f11, rdn # perform operation
fmadd.d f6, f31, f17, f11, rmm # perform operation
fmadd.d f6, f31, f17, f11, rne # perform operation
fmadd.d f6, f31, f17, f11, rtz # perform operation
fmadd.d f6, f31, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f31, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f31, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x2, 0x20df4af1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0xd600b56b # load x3 with 32 MSBs 0x00000000d600b56b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d600b56b
sw x3, 0(x2) # store x3 (0xd600b56b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d600b56b from memory into f25
fmadd.d f2, f10, f15, f25, dyn # perform operation
fmadd.d f2, f10, f15, f25, rdn # perform operation
fmadd.d f2, f10, f15, f25, rmm # perform operation
fmadd.d f2, f10, f15, f25, rne # perform operation
fmadd.d f2, f10, f15, f25, rtz # perform operation
fmadd.d f2, f10, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f10, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f10, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f10, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f10, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f10, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x31, 0xf277692f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x7f4f53f1 # load x3 with 32 MSBs 0x000000007f4f53f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f4f53f1
sw x3, 0(x2) # store x3 (0x7f4f53f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007f4f53f1 from memory into f28
fmadd.d f31, f23, f20, f28, dyn # perform operation
fmadd.d f31, f23, f20, f28, rdn # perform operation
fmadd.d f31, f23, f20, f28, rmm # perform operation
fmadd.d f31, f23, f20, f28, rne # perform operation
fmadd.d f31, f23, f20, f28, rtz # perform operation
fmadd.d f31, f23, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f23, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f23, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x8, 0xe1cc5904 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0xf92685ca # load x3 with 32 MSBs 0x00000000f92685ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f92685ca
sw x3, 0(x2) # store x3 (0xf92685ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f92685ca from memory into f6
fmadd.d f8, f4, f18, f6, dyn # perform operation
fmadd.d f8, f4, f18, f6, rdn # perform operation
fmadd.d f8, f4, f18, f6, rmm # perform operation
fmadd.d f8, f4, f18, f6, rne # perform operation
fmadd.d f8, f4, f18, f6, rtz # perform operation
fmadd.d f8, f4, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f4, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f4, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f4, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f4, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f4, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x1, 0x1e4a0392 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x5ef02b22 # load x3 with 32 MSBs 0x000000005ef02b22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ef02b22
sw x3, 0(x2) # store x3 (0x5ef02b22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005ef02b22 from memory into f16
fmadd.d f1, f12, f26, f16, dyn # perform operation
fmadd.d f1, f12, f26, f16, rdn # perform operation
fmadd.d f1, f12, f26, f16, rmm # perform operation
fmadd.d f1, f12, f26, f16, rne # perform operation
fmadd.d f1, f12, f26, f16, rtz # perform operation
fmadd.d f1, f12, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f12, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f12, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f12, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f12, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f12, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x20, 0x37684769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x9b779ce6 # load x3 with 32 MSBs 0x000000009b779ce6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b779ce6
sw x3, 0(x2) # store x3 (0x9b779ce6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000009b779ce6 from memory into f31
fmadd.d f20, f1, f24, f31, dyn # perform operation
fmadd.d f20, f1, f24, f31, rdn # perform operation
fmadd.d f20, f1, f24, f31, rmm # perform operation
fmadd.d f20, f1, f24, f31, rne # perform operation
fmadd.d f20, f1, f24, f31, rtz # perform operation
fmadd.d f20, f1, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f1, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x15, 0xc4e9f036 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x7488be35 # load x3 with 32 MSBs 0x000000007488be35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007488be35
sw x3, 0(x2) # store x3 (0x7488be35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007488be35 from memory into f6
fmadd.d f15, f31, f17, f6, dyn # perform operation
fmadd.d f15, f31, f17, f6, rdn # perform operation
fmadd.d f15, f31, f17, f6, rmm # perform operation
fmadd.d f15, f31, f17, f6, rne # perform operation
fmadd.d f15, f31, f17, f6, rtz # perform operation
fmadd.d f15, f31, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f31, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f31, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f31, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f31, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f31, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x31, 0xa2d10180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x0945c0b1 # load x3 with 32 MSBs 0x000000000945c0b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000945c0b1
sw x3, 0(x2) # store x3 (0x0945c0b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000945c0b1 from memory into f22
fmadd.d f31, f4, f27, f22, dyn # perform operation
fmadd.d f31, f4, f27, f22, rdn # perform operation
fmadd.d f31, f4, f27, f22, rmm # perform operation
fmadd.d f31, f4, f27, f22, rne # perform operation
fmadd.d f31, f4, f27, f22, rtz # perform operation
fmadd.d f31, f4, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f4, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f4, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x25, 0x46ced97d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0x5bd882b2 # load x3 with 32 MSBs 0x000000005bd882b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005bd882b2
sw x3, 0(x2) # store x3 (0x5bd882b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005bd882b2 from memory into f8
fmadd.d f25, f22, f29, f8, dyn # perform operation
fmadd.d f25, f22, f29, f8, rdn # perform operation
fmadd.d f25, f22, f29, f8, rmm # perform operation
fmadd.d f25, f22, f29, f8, rne # perform operation
fmadd.d f25, f22, f29, f8, rtz # perform operation
fmadd.d f25, f22, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f22, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x10, 0xddb0185d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0xc32fcbe1 # load x3 with 32 MSBs 0x00000000c32fcbe1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c32fcbe1
sw x3, 0(x2) # store x3 (0xc32fcbe1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c32fcbe1 from memory into f30
fmadd.d f10, f27, f19, f30, dyn # perform operation
fmadd.d f10, f27, f19, f30, rdn # perform operation
fmadd.d f10, f27, f19, f30, rmm # perform operation
fmadd.d f10, f27, f19, f30, rne # perform operation
fmadd.d f10, f27, f19, f30, rtz # perform operation
fmadd.d f10, f27, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f27, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f27, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x27, 0x3dd2215b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x079a6514 # load x3 with 32 MSBs 0x00000000079a6514
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000079a6514
sw x3, 0(x2) # store x3 (0x079a6514) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000079a6514 from memory into f3
fmadd.d f27, f21, f6, f3, dyn # perform operation
fmadd.d f27, f21, f6, f3, rdn # perform operation
fmadd.d f27, f21, f6, f3, rmm # perform operation
fmadd.d f27, f21, f6, f3, rne # perform operation
fmadd.d f27, f21, f6, f3, rtz # perform operation
fmadd.d f27, f21, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f21, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f21, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x17, 0x9eed4409 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x9a8d36a4 # load x3 with 32 MSBs 0x000000009a8d36a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a8d36a4
sw x3, 0(x2) # store x3 (0x9a8d36a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009a8d36a4 from memory into f1
fmadd.d f17, f7, f16, f1, dyn # perform operation
fmadd.d f17, f7, f16, f1, rdn # perform operation
fmadd.d f17, f7, f16, f1, rmm # perform operation
fmadd.d f17, f7, f16, f1, rne # perform operation
fmadd.d f17, f7, f16, f1, rtz # perform operation
fmadd.d f17, f7, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f7, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x12, 0xbf1adefe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0x2c331578 # load x3 with 32 MSBs 0x000000002c331578
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c331578
sw x3, 0(x2) # store x3 (0x2c331578) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002c331578 from memory into f22
fmadd.d f12, f4, f28, f22, dyn # perform operation
fmadd.d f12, f4, f28, f22, rdn # perform operation
fmadd.d f12, f4, f28, f22, rmm # perform operation
fmadd.d f12, f4, f28, f22, rne # perform operation
fmadd.d f12, f4, f28, f22, rtz # perform operation
fmadd.d f12, f4, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f4, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f4, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f4, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f4, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f4, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x11, 0xdbafb3a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0xc36b497b # load x3 with 32 MSBs 0x00000000c36b497b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c36b497b
sw x3, 0(x2) # store x3 (0xc36b497b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c36b497b from memory into f3
fmadd.d f11, f17, f28, f3, dyn # perform operation
fmadd.d f11, f17, f28, f3, rdn # perform operation
fmadd.d f11, f17, f28, f3, rmm # perform operation
fmadd.d f11, f17, f28, f3, rne # perform operation
fmadd.d f11, f17, f28, f3, rtz # perform operation
fmadd.d f11, f17, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f17, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f17, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f17, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f17, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f17, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x23, 0x24b4ce90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x36810828 # load x3 with 32 MSBs 0x0000000036810828
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000036810828
sw x3, 0(x2) # store x3 (0x36810828) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000036810828 from memory into f20
fmadd.d f23, f17, f16, f20, dyn # perform operation
fmadd.d f23, f17, f16, f20, rdn # perform operation
fmadd.d f23, f17, f16, f20, rmm # perform operation
fmadd.d f23, f17, f16, f20, rne # perform operation
fmadd.d f23, f17, f16, f20, rtz # perform operation
fmadd.d f23, f17, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f17, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x1, 0xde528a30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0x0ac1a838 # load x3 with 32 MSBs 0x000000000ac1a838
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ac1a838
sw x3, 0(x2) # store x3 (0x0ac1a838) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000ac1a838 from memory into f5
fmadd.d f1, f15, f13, f5, dyn # perform operation
fmadd.d f1, f15, f13, f5, rdn # perform operation
fmadd.d f1, f15, f13, f5, rmm # perform operation
fmadd.d f1, f15, f13, f5, rne # perform operation
fmadd.d f1, f15, f13, f5, rtz # perform operation
fmadd.d f1, f15, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f15, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x22, 0x2941469e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0xc23754a3 # load x3 with 32 MSBs 0x00000000c23754a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c23754a3
sw x3, 0(x2) # store x3 (0xc23754a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c23754a3 from memory into f28
fmadd.d f22, f7, f12, f28, dyn # perform operation
fmadd.d f22, f7, f12, f28, rdn # perform operation
fmadd.d f22, f7, f12, f28, rmm # perform operation
fmadd.d f22, f7, f12, f28, rne # perform operation
fmadd.d f22, f7, f12, f28, rtz # perform operation
fmadd.d f22, f7, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f7, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f7, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x9, 0x8e0d9a45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0xa110f7f3 # load x3 with 32 MSBs 0x00000000a110f7f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a110f7f3
sw x3, 0(x2) # store x3 (0xa110f7f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a110f7f3 from memory into f5
fmadd.d f9, f20, f3, f5, dyn # perform operation
fmadd.d f9, f20, f3, f5, rdn # perform operation
fmadd.d f9, f20, f3, f5, rmm # perform operation
fmadd.d f9, f20, f3, f5, rne # perform operation
fmadd.d f9, f20, f3, f5, rtz # perform operation
fmadd.d f9, f20, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f20, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f20, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x15, 0x78dee37d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0xe8a1c29e # load x3 with 32 MSBs 0x00000000e8a1c29e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8a1c29e
sw x3, 0(x2) # store x3 (0xe8a1c29e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e8a1c29e from memory into f7
fmadd.d f15, f30, f2, f7, dyn # perform operation
fmadd.d f15, f30, f2, f7, rdn # perform operation
fmadd.d f15, f30, f2, f7, rmm # perform operation
fmadd.d f15, f30, f2, f7, rne # perform operation
fmadd.d f15, f30, f2, f7, rtz # perform operation
fmadd.d f15, f30, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f30, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f30, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f30, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f30, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f30, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x27, 0x1d8871c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0x71d8896f # load x3 with 32 MSBs 0x0000000071d8896f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071d8896f
sw x3, 0(x2) # store x3 (0x71d8896f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000071d8896f from memory into f17
fmadd.d f27, f18, f1, f17, dyn # perform operation
fmadd.d f27, f18, f1, f17, rdn # perform operation
fmadd.d f27, f18, f1, f17, rmm # perform operation
fmadd.d f27, f18, f1, f17, rne # perform operation
fmadd.d f27, f18, f1, f17, rtz # perform operation
fmadd.d f27, f18, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f18, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f18, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x12, 0xff5a166e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x18dee99d # load x3 with 32 MSBs 0x0000000018dee99d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018dee99d
sw x3, 0(x2) # store x3 (0x18dee99d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000018dee99d from memory into f13
fmadd.d f12, f8, f24, f13, dyn # perform operation
fmadd.d f12, f8, f24, f13, rdn # perform operation
fmadd.d f12, f8, f24, f13, rmm # perform operation
fmadd.d f12, f8, f24, f13, rne # perform operation
fmadd.d f12, f8, f24, f13, rtz # perform operation
fmadd.d f12, f8, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f8, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x20, 0x381fd9e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x48944b24 # load x3 with 32 MSBs 0x0000000048944b24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048944b24
sw x3, 0(x2) # store x3 (0x48944b24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000048944b24 from memory into f10
fmadd.d f20, f5, f18, f10, dyn # perform operation
fmadd.d f20, f5, f18, f10, rdn # perform operation
fmadd.d f20, f5, f18, f10, rmm # perform operation
fmadd.d f20, f5, f18, f10, rne # perform operation
fmadd.d f20, f5, f18, f10, rtz # perform operation
fmadd.d f20, f5, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f5, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x17, 0xf153de4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x1c6d6f2d # load x3 with 32 MSBs 0x000000001c6d6f2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c6d6f2d
sw x3, 0(x2) # store x3 (0x1c6d6f2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001c6d6f2d from memory into f8
fmadd.d f17, f21, f11, f8, dyn # perform operation
fmadd.d f17, f21, f11, f8, rdn # perform operation
fmadd.d f17, f21, f11, f8, rmm # perform operation
fmadd.d f17, f21, f11, f8, rne # perform operation
fmadd.d f17, f21, f11, f8, rtz # perform operation
fmadd.d f17, f21, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f21, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x2, 0xbabbbdcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0x98dea613 # load x3 with 32 MSBs 0x0000000098dea613
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098dea613
sw x3, 0(x2) # store x3 (0x98dea613) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000098dea613 from memory into f26
fmadd.d f2, f16, f20, f26, dyn # perform operation
fmadd.d f2, f16, f20, f26, rdn # perform operation
fmadd.d f2, f16, f20, f26, rmm # perform operation
fmadd.d f2, f16, f20, f26, rne # perform operation
fmadd.d f2, f16, f20, f26, rtz # perform operation
fmadd.d f2, f16, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f16, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x10, 0x2f15e1b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x53843956 # load x3 with 32 MSBs 0x0000000053843956
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053843956
sw x3, 0(x2) # store x3 (0x53843956) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000053843956 from memory into f3
fmadd.d f10, f4, f15, f3, dyn # perform operation
fmadd.d f10, f4, f15, f3, rdn # perform operation
fmadd.d f10, f4, f15, f3, rmm # perform operation
fmadd.d f10, f4, f15, f3, rne # perform operation
fmadd.d f10, f4, f15, f3, rtz # perform operation
fmadd.d f10, f4, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f4, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f4, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x8, 0x75a8107f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x763c0c62 # load x3 with 32 MSBs 0x00000000763c0c62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000763c0c62
sw x3, 0(x2) # store x3 (0x763c0c62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000763c0c62 from memory into f28
fmadd.d f8, f19, f7, f28, dyn # perform operation
fmadd.d f8, f19, f7, f28, rdn # perform operation
fmadd.d f8, f19, f7, f28, rmm # perform operation
fmadd.d f8, f19, f7, f28, rne # perform operation
fmadd.d f8, f19, f7, f28, rtz # perform operation
fmadd.d f8, f19, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f19, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f19, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f19, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f19, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f19, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x6, 0xba5b957b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0xa8720bea # load x3 with 32 MSBs 0x00000000a8720bea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8720bea
sw x3, 0(x2) # store x3 (0xa8720bea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000a8720bea from memory into f12
fmadd.d f6, f29, f24, f12, dyn # perform operation
fmadd.d f6, f29, f24, f12, rdn # perform operation
fmadd.d f6, f29, f24, f12, rmm # perform operation
fmadd.d f6, f29, f24, f12, rne # perform operation
fmadd.d f6, f29, f24, f12, rtz # perform operation
fmadd.d f6, f29, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f29, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x3, 0x5dccadd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0xa19f8619 # load x3 with 32 MSBs 0x00000000a19f8619
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a19f8619
sw x3, 0(x2) # store x3 (0xa19f8619) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a19f8619 from memory into f31
fmadd.d f3, f5, f17, f31, dyn # perform operation
fmadd.d f3, f5, f17, f31, rdn # perform operation
fmadd.d f3, f5, f17, f31, rmm # perform operation
fmadd.d f3, f5, f17, f31, rne # perform operation
fmadd.d f3, f5, f17, f31, rtz # perform operation
fmadd.d f3, f5, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f5, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f5, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f5, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f5, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f5, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x3, 0x50932121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xd173fa25 # load x3 with 32 MSBs 0x00000000d173fa25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d173fa25
sw x3, 0(x2) # store x3 (0xd173fa25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d173fa25 from memory into f4
fmadd.d f3, f18, f1, f4, dyn # perform operation
fmadd.d f3, f18, f1, f4, rdn # perform operation
fmadd.d f3, f18, f1, f4, rmm # perform operation
fmadd.d f3, f18, f1, f4, rne # perform operation
fmadd.d f3, f18, f1, f4, rtz # perform operation
fmadd.d f3, f18, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f18, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f18, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f18, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f18, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f18, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x31, 0x1e60f543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x968e140f # load x3 with 32 MSBs 0x00000000968e140f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000968e140f
sw x3, 0(x2) # store x3 (0x968e140f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000968e140f from memory into f10
fmadd.d f31, f11, f14, f10, dyn # perform operation
fmadd.d f31, f11, f14, f10, rdn # perform operation
fmadd.d f31, f11, f14, f10, rmm # perform operation
fmadd.d f31, f11, f14, f10, rne # perform operation
fmadd.d f31, f11, f14, f10, rtz # perform operation
fmadd.d f31, f11, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f11, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x29, 0xbd694a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xc65f7622 # load x3 with 32 MSBs 0x00000000c65f7622
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c65f7622
sw x3, 0(x2) # store x3 (0xc65f7622) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c65f7622 from memory into f31
fmadd.d f29, f24, f30, f31, dyn # perform operation
fmadd.d f29, f24, f30, f31, rdn # perform operation
fmadd.d f29, f24, f30, f31, rmm # perform operation
fmadd.d f29, f24, f30, f31, rne # perform operation
fmadd.d f29, f24, f30, f31, rtz # perform operation
fmadd.d f29, f24, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f24, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x18, 0x4766bd1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x2d8e50d0 # load x3 with 32 MSBs 0x000000002d8e50d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d8e50d0
sw x3, 0(x2) # store x3 (0x2d8e50d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002d8e50d0 from memory into f26
fmadd.d f18, f17, f29, f26, dyn # perform operation
fmadd.d f18, f17, f29, f26, rdn # perform operation
fmadd.d f18, f17, f29, f26, rmm # perform operation
fmadd.d f18, f17, f29, f26, rne # perform operation
fmadd.d f18, f17, f29, f26, rtz # perform operation
fmadd.d f18, f17, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f17, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f17, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f17, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f17, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f17, f29, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x4, 0x5874c4ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0xff7ec043 # load x3 with 32 MSBs 0x00000000ff7ec043
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff7ec043
sw x3, 0(x2) # store x3 (0xff7ec043) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ff7ec043 from memory into f24
fmadd.d f4, f19, f12, f24, dyn # perform operation
fmadd.d f4, f19, f12, f24, rdn # perform operation
fmadd.d f4, f19, f12, f24, rmm # perform operation
fmadd.d f4, f19, f12, f24, rne # perform operation
fmadd.d f4, f19, f12, f24, rtz # perform operation
fmadd.d f4, f19, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f19, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f19, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f19, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f19, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f19, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x7, 0x4c6fed25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0x68ea7ca8 # load x3 with 32 MSBs 0x0000000068ea7ca8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068ea7ca8
sw x3, 0(x2) # store x3 (0x68ea7ca8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000068ea7ca8 from memory into f20
fmadd.d f7, f1, f15, f20, dyn # perform operation
fmadd.d f7, f1, f15, f20, rdn # perform operation
fmadd.d f7, f1, f15, f20, rmm # perform operation
fmadd.d f7, f1, f15, f20, rne # perform operation
fmadd.d f7, f1, f15, f20, rtz # perform operation
fmadd.d f7, f1, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f1, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f1, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f1, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f1, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f1, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x17, 0x46c92dbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0xee53eb7d # load x3 with 32 MSBs 0x00000000ee53eb7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee53eb7d
sw x3, 0(x2) # store x3 (0xee53eb7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ee53eb7d from memory into f13
fmadd.d f17, f31, f26, f13, dyn # perform operation
fmadd.d f17, f31, f26, f13, rdn # perform operation
fmadd.d f17, f31, f26, f13, rmm # perform operation
fmadd.d f17, f31, f26, f13, rne # perform operation
fmadd.d f17, f31, f26, f13, rtz # perform operation
fmadd.d f17, f31, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f31, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x14, 0x94e4edd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0xbb594ae5 # load x3 with 32 MSBs 0x00000000bb594ae5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb594ae5
sw x3, 0(x2) # store x3 (0xbb594ae5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000bb594ae5 from memory into f20
fmadd.d f14, f8, f23, f20, dyn # perform operation
fmadd.d f14, f8, f23, f20, rdn # perform operation
fmadd.d f14, f8, f23, f20, rmm # perform operation
fmadd.d f14, f8, f23, f20, rne # perform operation
fmadd.d f14, f8, f23, f20, rtz # perform operation
fmadd.d f14, f8, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f8, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x6, 0xd24b7609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x3ecdf266 # load x3 with 32 MSBs 0x000000003ecdf266
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ecdf266
sw x3, 0(x2) # store x3 (0x3ecdf266) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003ecdf266 from memory into f31
fmadd.d f6, f26, f15, f31, dyn # perform operation
fmadd.d f6, f26, f15, f31, rdn # perform operation
fmadd.d f6, f26, f15, f31, rmm # perform operation
fmadd.d f6, f26, f15, f31, rne # perform operation
fmadd.d f6, f26, f15, f31, rtz # perform operation
fmadd.d f6, f26, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f26, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x22, 0x373f6c25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x4401dfc8 # load x3 with 32 MSBs 0x000000004401dfc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004401dfc8
sw x3, 0(x2) # store x3 (0x4401dfc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004401dfc8 from memory into f25
fmadd.d f22, f10, f16, f25, dyn # perform operation
fmadd.d f22, f10, f16, f25, rdn # perform operation
fmadd.d f22, f10, f16, f25, rmm # perform operation
fmadd.d f22, f10, f16, f25, rne # perform operation
fmadd.d f22, f10, f16, f25, rtz # perform operation
fmadd.d f22, f10, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f10, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f10, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x18, 0x5122e813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0xeb9079c2 # load x3 with 32 MSBs 0x00000000eb9079c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb9079c2
sw x3, 0(x2) # store x3 (0xeb9079c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000eb9079c2 from memory into f6
fmadd.d f18, f26, f14, f6, dyn # perform operation
fmadd.d f18, f26, f14, f6, rdn # perform operation
fmadd.d f18, f26, f14, f6, rmm # perform operation
fmadd.d f18, f26, f14, f6, rne # perform operation
fmadd.d f18, f26, f14, f6, rtz # perform operation
fmadd.d f18, f26, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f26, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f26, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f26, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f26, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f26, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x17, 0x068d7192 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0xcd86ccb6 # load x3 with 32 MSBs 0x00000000cd86ccb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd86ccb6
sw x3, 0(x2) # store x3 (0xcd86ccb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000cd86ccb6 from memory into f26
fmadd.d f17, f1, f24, f26, dyn # perform operation
fmadd.d f17, f1, f24, f26, rdn # perform operation
fmadd.d f17, f1, f24, f26, rmm # perform operation
fmadd.d f17, f1, f24, f26, rne # perform operation
fmadd.d f17, f1, f24, f26, rtz # perform operation
fmadd.d f17, f1, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f1, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x24, 0xb044804e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x4ab33b63 # load x3 with 32 MSBs 0x000000004ab33b63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ab33b63
sw x3, 0(x2) # store x3 (0x4ab33b63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004ab33b63 from memory into f20
fmadd.d f24, f16, f8, f20, dyn # perform operation
fmadd.d f24, f16, f8, f20, rdn # perform operation
fmadd.d f24, f16, f8, f20, rmm # perform operation
fmadd.d f24, f16, f8, f20, rne # perform operation
fmadd.d f24, f16, f8, f20, rtz # perform operation
fmadd.d f24, f16, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f16, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x12, 0x38a96476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0xa249bd4c # load x3 with 32 MSBs 0x00000000a249bd4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a249bd4c
sw x3, 0(x2) # store x3 (0xa249bd4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a249bd4c from memory into f31
fmadd.d f12, f22, f3, f31, dyn # perform operation
fmadd.d f12, f22, f3, f31, rdn # perform operation
fmadd.d f12, f22, f3, f31, rmm # perform operation
fmadd.d f12, f22, f3, f31, rne # perform operation
fmadd.d f12, f22, f3, f31, rtz # perform operation
fmadd.d f12, f22, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f22, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f22, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f22, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f22, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f22, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x16, 0x3e1cacdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0x64decf47 # load x3 with 32 MSBs 0x0000000064decf47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064decf47
sw x3, 0(x2) # store x3 (0x64decf47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000064decf47 from memory into f29
fmadd.d f16, f24, f13, f29, dyn # perform operation
fmadd.d f16, f24, f13, f29, rdn # perform operation
fmadd.d f16, f24, f13, f29, rmm # perform operation
fmadd.d f16, f24, f13, f29, rne # perform operation
fmadd.d f16, f24, f13, f29, rtz # perform operation
fmadd.d f16, f24, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f24, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x25, 0x4b1ed1ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x4623a621 # load x3 with 32 MSBs 0x000000004623a621
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004623a621
sw x3, 0(x2) # store x3 (0x4623a621) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004623a621 from memory into f11
fmadd.d f25, f10, f31, f11, dyn # perform operation
fmadd.d f25, f10, f31, f11, rdn # perform operation
fmadd.d f25, f10, f31, f11, rmm # perform operation
fmadd.d f25, f10, f31, f11, rne # perform operation
fmadd.d f25, f10, f31, f11, rtz # perform operation
fmadd.d f25, f10, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f10, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x15, 0x19d93b52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0xbecbc4ec # load x3 with 32 MSBs 0x00000000becbc4ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000becbc4ec
sw x3, 0(x2) # store x3 (0xbecbc4ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000becbc4ec from memory into f11
fmadd.d f15, f21, f8, f11, dyn # perform operation
fmadd.d f15, f21, f8, f11, rdn # perform operation
fmadd.d f15, f21, f8, f11, rmm # perform operation
fmadd.d f15, f21, f8, f11, rne # perform operation
fmadd.d f15, f21, f8, f11, rtz # perform operation
fmadd.d f15, f21, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f21, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x28, 0xc0cf6228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0xc208f007 # load x3 with 32 MSBs 0x00000000c208f007
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c208f007
sw x3, 0(x2) # store x3 (0xc208f007) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c208f007 from memory into f21
fmadd.d f28, f3, f18, f21, dyn # perform operation
fmadd.d f28, f3, f18, f21, rdn # perform operation
fmadd.d f28, f3, f18, f21, rmm # perform operation
fmadd.d f28, f3, f18, f21, rne # perform operation
fmadd.d f28, f3, f18, f21, rtz # perform operation
fmadd.d f28, f3, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f3, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x26, 0xc94e6901 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x4f8423dd # load x3 with 32 MSBs 0x000000004f8423dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f8423dd
sw x3, 0(x2) # store x3 (0x4f8423dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004f8423dd from memory into f2
fmadd.d f26, f7, f3, f2, dyn # perform operation
fmadd.d f26, f7, f3, f2, rdn # perform operation
fmadd.d f26, f7, f3, f2, rmm # perform operation
fmadd.d f26, f7, f3, f2, rne # perform operation
fmadd.d f26, f7, f3, f2, rtz # perform operation
fmadd.d f26, f7, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f7, f3, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x30, 0xec9e654d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0xa5f58a15 # load x3 with 32 MSBs 0x00000000a5f58a15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5f58a15
sw x3, 0(x2) # store x3 (0xa5f58a15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a5f58a15 from memory into f21
fmadd.d f30, f25, f15, f21, dyn # perform operation
fmadd.d f30, f25, f15, f21, rdn # perform operation
fmadd.d f30, f25, f15, f21, rmm # perform operation
fmadd.d f30, f25, f15, f21, rne # perform operation
fmadd.d f30, f25, f15, f21, rtz # perform operation
fmadd.d f30, f25, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f25, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f25, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f25, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f25, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f25, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x15, 0x92ce5a13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x88494cb9 # load x3 with 32 MSBs 0x0000000088494cb9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088494cb9
sw x3, 0(x2) # store x3 (0x88494cb9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000088494cb9 from memory into f19
fmadd.d f15, f29, f18, f19, dyn # perform operation
fmadd.d f15, f29, f18, f19, rdn # perform operation
fmadd.d f15, f29, f18, f19, rmm # perform operation
fmadd.d f15, f29, f18, f19, rne # perform operation
fmadd.d f15, f29, f18, f19, rtz # perform operation
fmadd.d f15, f29, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f29, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x2, 0xcc09568c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0x1afd9ef5 # load x3 with 32 MSBs 0x000000001afd9ef5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001afd9ef5
sw x3, 0(x2) # store x3 (0x1afd9ef5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001afd9ef5 from memory into f8
fmadd.d f2, f16, f10, f8, dyn # perform operation
fmadd.d f2, f16, f10, f8, rdn # perform operation
fmadd.d f2, f16, f10, f8, rmm # perform operation
fmadd.d f2, f16, f10, f8, rne # perform operation
fmadd.d f2, f16, f10, f8, rtz # perform operation
fmadd.d f2, f16, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f16, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f16, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f16, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f16, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f16, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x10, 0x879f6e65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x2cbcd27f # load x3 with 32 MSBs 0x000000002cbcd27f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002cbcd27f
sw x3, 0(x2) # store x3 (0x2cbcd27f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002cbcd27f from memory into f12
fmadd.d f10, f11, f6, f12, dyn # perform operation
fmadd.d f10, f11, f6, f12, rdn # perform operation
fmadd.d f10, f11, f6, f12, rmm # perform operation
fmadd.d f10, f11, f6, f12, rne # perform operation
fmadd.d f10, f11, f6, f12, rtz # perform operation
fmadd.d f10, f11, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f11, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x6, 0x24e509db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x07f8d991 # load x3 with 32 MSBs 0x0000000007f8d991
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007f8d991
sw x3, 0(x2) # store x3 (0x07f8d991) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000007f8d991 from memory into f5
fmadd.d f6, f11, f12, f5, dyn # perform operation
fmadd.d f6, f11, f12, f5, rdn # perform operation
fmadd.d f6, f11, f12, f5, rmm # perform operation
fmadd.d f6, f11, f12, f5, rne # perform operation
fmadd.d f6, f11, f12, f5, rtz # perform operation
fmadd.d f6, f11, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f11, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f11, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f11, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f11, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f11, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x4, 0xc8c356c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0xae77d9da # load x3 with 32 MSBs 0x00000000ae77d9da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae77d9da
sw x3, 0(x2) # store x3 (0xae77d9da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ae77d9da from memory into f27
fmadd.d f4, f7, f26, f27, dyn # perform operation
fmadd.d f4, f7, f26, f27, rdn # perform operation
fmadd.d f4, f7, f26, f27, rmm # perform operation
fmadd.d f4, f7, f26, f27, rne # perform operation
fmadd.d f4, f7, f26, f27, rtz # perform operation
fmadd.d f4, f7, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f7, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f7, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x20, 0x893eb9b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x0f442c24 # load x3 with 32 MSBs 0x000000000f442c24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f442c24
sw x3, 0(x2) # store x3 (0x0f442c24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000f442c24 from memory into f6
fmadd.d f20, f11, f12, f6, dyn # perform operation
fmadd.d f20, f11, f12, f6, rdn # perform operation
fmadd.d f20, f11, f12, f6, rmm # perform operation
fmadd.d f20, f11, f12, f6, rne # perform operation
fmadd.d f20, f11, f12, f6, rtz # perform operation
fmadd.d f20, f11, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f11, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x29, 0x6be76edf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0xbc0e909d # load x3 with 32 MSBs 0x00000000bc0e909d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc0e909d
sw x3, 0(x2) # store x3 (0xbc0e909d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000bc0e909d from memory into f20
fmadd.d f29, f4, f31, f20, dyn # perform operation
fmadd.d f29, f4, f31, f20, rdn # perform operation
fmadd.d f29, f4, f31, f20, rmm # perform operation
fmadd.d f29, f4, f31, f20, rne # perform operation
fmadd.d f29, f4, f31, f20, rtz # perform operation
fmadd.d f29, f4, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f4, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f4, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f4, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f4, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f4, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x14, 0xa9cf07b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x2423b360 # load x3 with 32 MSBs 0x000000002423b360
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002423b360
sw x3, 0(x2) # store x3 (0x2423b360) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002423b360 from memory into f12
fmadd.d f14, f10, f24, f12, dyn # perform operation
fmadd.d f14, f10, f24, f12, rdn # perform operation
fmadd.d f14, f10, f24, f12, rmm # perform operation
fmadd.d f14, f10, f24, f12, rne # perform operation
fmadd.d f14, f10, f24, f12, rtz # perform operation
fmadd.d f14, f10, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f10, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f10, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f10, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f10, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f10, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x29, 0x95f71898 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x45db8bbd # load x3 with 32 MSBs 0x0000000045db8bbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045db8bbd
sw x3, 0(x2) # store x3 (0x45db8bbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000045db8bbd from memory into f12
fmadd.d f29, f4, f24, f12, dyn # perform operation
fmadd.d f29, f4, f24, f12, rdn # perform operation
fmadd.d f29, f4, f24, f12, rmm # perform operation
fmadd.d f29, f4, f24, f12, rne # perform operation
fmadd.d f29, f4, f24, f12, rtz # perform operation
fmadd.d f29, f4, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f4, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f4, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f4, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f4, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f4, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x10, 0xbabb85a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0xa92a220f # load x3 with 32 MSBs 0x00000000a92a220f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a92a220f
sw x3, 0(x2) # store x3 (0xa92a220f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a92a220f from memory into f27
fmadd.d f10, f1, f4, f27, dyn # perform operation
fmadd.d f10, f1, f4, f27, rdn # perform operation
fmadd.d f10, f1, f4, f27, rmm # perform operation
fmadd.d f10, f1, f4, f27, rne # perform operation
fmadd.d f10, f1, f4, f27, rtz # perform operation
fmadd.d f10, f1, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f1, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f1, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f1, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f1, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f1, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x6, 0x16649e24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xcf4fe7c6 # load x3 with 32 MSBs 0x00000000cf4fe7c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf4fe7c6
sw x3, 0(x2) # store x3 (0xcf4fe7c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000cf4fe7c6 from memory into f10
fmadd.d f6, f14, f1, f10, dyn # perform operation
fmadd.d f6, f14, f1, f10, rdn # perform operation
fmadd.d f6, f14, f1, f10, rmm # perform operation
fmadd.d f6, f14, f1, f10, rne # perform operation
fmadd.d f6, f14, f1, f10, rtz # perform operation
fmadd.d f6, f14, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f14, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f14, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f14, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f14, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f14, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x3, 0x33c6b318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x523ff4e8 # load x3 with 32 MSBs 0x00000000523ff4e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000523ff4e8
sw x3, 0(x2) # store x3 (0x523ff4e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000523ff4e8 from memory into f30
fmadd.d f3, f21, f2, f30, dyn # perform operation
fmadd.d f3, f21, f2, f30, rdn # perform operation
fmadd.d f3, f21, f2, f30, rmm # perform operation
fmadd.d f3, f21, f2, f30, rne # perform operation
fmadd.d f3, f21, f2, f30, rtz # perform operation
fmadd.d f3, f21, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f21, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x5, 0x6249b473 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0xbdbda9bb # load x3 with 32 MSBs 0x00000000bdbda9bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdbda9bb
sw x3, 0(x2) # store x3 (0xbdbda9bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000bdbda9bb from memory into f26
fmadd.d f5, f22, f10, f26, dyn # perform operation
fmadd.d f5, f22, f10, f26, rdn # perform operation
fmadd.d f5, f22, f10, f26, rmm # perform operation
fmadd.d f5, f22, f10, f26, rne # perform operation
fmadd.d f5, f22, f10, f26, rtz # perform operation
fmadd.d f5, f22, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f22, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x18, 0xd1719884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x257eb094 # load x3 with 32 MSBs 0x00000000257eb094
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000257eb094
sw x3, 0(x2) # store x3 (0x257eb094) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000257eb094 from memory into f2
fmadd.d f18, f24, f26, f2, dyn # perform operation
fmadd.d f18, f24, f26, f2, rdn # perform operation
fmadd.d f18, f24, f26, f2, rmm # perform operation
fmadd.d f18, f24, f26, f2, rne # perform operation
fmadd.d f18, f24, f26, f2, rtz # perform operation
fmadd.d f18, f24, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f24, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x17, 0x11f5b31a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0xda92f29e # load x3 with 32 MSBs 0x00000000da92f29e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da92f29e
sw x3, 0(x2) # store x3 (0xda92f29e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000da92f29e from memory into f26
fmadd.d f17, f27, f13, f26, dyn # perform operation
fmadd.d f17, f27, f13, f26, rdn # perform operation
fmadd.d f17, f27, f13, f26, rmm # perform operation
fmadd.d f17, f27, f13, f26, rne # perform operation
fmadd.d f17, f27, f13, f26, rtz # perform operation
fmadd.d f17, f27, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f27, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f27, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f27, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f27, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f27, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x5, 0xe040d1b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x8eeb4751 # load x3 with 32 MSBs 0x000000008eeb4751
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008eeb4751
sw x3, 0(x2) # store x3 (0x8eeb4751) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008eeb4751 from memory into f18
fmadd.d f5, f21, f29, f18, dyn # perform operation
fmadd.d f5, f21, f29, f18, rdn # perform operation
fmadd.d f5, f21, f29, f18, rmm # perform operation
fmadd.d f5, f21, f29, f18, rne # perform operation
fmadd.d f5, f21, f29, f18, rtz # perform operation
fmadd.d f5, f21, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f21, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f21, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x17, 0xe947f255 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0x5379200b # load x3 with 32 MSBs 0x000000005379200b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005379200b
sw x3, 0(x2) # store x3 (0x5379200b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005379200b from memory into f26
fmadd.d f17, f5, f31, f26, dyn # perform operation
fmadd.d f17, f5, f31, f26, rdn # perform operation
fmadd.d f17, f5, f31, f26, rmm # perform operation
fmadd.d f17, f5, f31, f26, rne # perform operation
fmadd.d f17, f5, f31, f26, rtz # perform operation
fmadd.d f17, f5, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f5, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f5, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f5, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f5, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f5, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x16, 0x1965ae63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0xe5a47f37 # load x3 with 32 MSBs 0x00000000e5a47f37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5a47f37
sw x3, 0(x2) # store x3 (0xe5a47f37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e5a47f37 from memory into f2
fmadd.d f16, f4, f3, f2, dyn # perform operation
fmadd.d f16, f4, f3, f2, rdn # perform operation
fmadd.d f16, f4, f3, f2, rmm # perform operation
fmadd.d f16, f4, f3, f2, rne # perform operation
fmadd.d f16, f4, f3, f2, rtz # perform operation
fmadd.d f16, f4, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f4, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f4, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f4, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f4, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f4, f3, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x3, 0x9b099cb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x7b525b49 # load x3 with 32 MSBs 0x000000007b525b49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b525b49
sw x3, 0(x2) # store x3 (0x7b525b49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000007b525b49 from memory into f4
fmadd.d f3, f26, f17, f4, dyn # perform operation
fmadd.d f3, f26, f17, f4, rdn # perform operation
fmadd.d f3, f26, f17, f4, rmm # perform operation
fmadd.d f3, f26, f17, f4, rne # perform operation
fmadd.d f3, f26, f17, f4, rtz # perform operation
fmadd.d f3, f26, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f26, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x23, 0x859b5dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0xad799e7d # load x3 with 32 MSBs 0x00000000ad799e7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad799e7d
sw x3, 0(x2) # store x3 (0xad799e7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ad799e7d from memory into f14
fmadd.d f23, f18, f3, f14, dyn # perform operation
fmadd.d f23, f18, f3, f14, rdn # perform operation
fmadd.d f23, f18, f3, f14, rmm # perform operation
fmadd.d f23, f18, f3, f14, rne # perform operation
fmadd.d f23, f18, f3, f14, rtz # perform operation
fmadd.d f23, f18, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f18, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x24, 0xa6146a9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x7b9973fb # load x3 with 32 MSBs 0x000000007b9973fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b9973fb
sw x3, 0(x2) # store x3 (0x7b9973fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000007b9973fb from memory into f30
fmadd.d f24, f27, f10, f30, dyn # perform operation
fmadd.d f24, f27, f10, f30, rdn # perform operation
fmadd.d f24, f27, f10, f30, rmm # perform operation
fmadd.d f24, f27, f10, f30, rne # perform operation
fmadd.d f24, f27, f10, f30, rtz # perform operation
fmadd.d f24, f27, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f27, f10, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x21, 0xe2f1b527 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x349a158f # load x3 with 32 MSBs 0x00000000349a158f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000349a158f
sw x3, 0(x2) # store x3 (0x349a158f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000349a158f from memory into f5
fmadd.d f21, f16, f22, f5, dyn # perform operation
fmadd.d f21, f16, f22, f5, rdn # perform operation
fmadd.d f21, f16, f22, f5, rmm # perform operation
fmadd.d f21, f16, f22, f5, rne # perform operation
fmadd.d f21, f16, f22, f5, rtz # perform operation
fmadd.d f21, f16, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f16, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f16, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f16, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f16, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f16, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x16, 0xc41e75eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0x7fe103cd # load x3 with 32 MSBs 0x000000007fe103cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fe103cd
sw x3, 0(x2) # store x3 (0x7fe103cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007fe103cd from memory into f11
fmadd.d f16, f17, f14, f11, dyn # perform operation
fmadd.d f16, f17, f14, f11, rdn # perform operation
fmadd.d f16, f17, f14, f11, rmm # perform operation
fmadd.d f16, f17, f14, f11, rne # perform operation
fmadd.d f16, f17, f14, f11, rtz # perform operation
fmadd.d f16, f17, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f17, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f17, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x15, 0xb44e5373 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xcabfca1e # load x3 with 32 MSBs 0x00000000cabfca1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cabfca1e
sw x3, 0(x2) # store x3 (0xcabfca1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cabfca1e from memory into f24
fmadd.d f15, f14, f19, f24, dyn # perform operation
fmadd.d f15, f14, f19, f24, rdn # perform operation
fmadd.d f15, f14, f19, f24, rmm # perform operation
fmadd.d f15, f14, f19, f24, rne # perform operation
fmadd.d f15, f14, f19, f24, rtz # perform operation
fmadd.d f15, f14, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f14, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f14, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f14, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f14, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f14, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x21, 0xcba6bbdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x16eb075e # load x3 with 32 MSBs 0x0000000016eb075e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016eb075e
sw x3, 0(x2) # store x3 (0x16eb075e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000016eb075e from memory into f10
fmadd.d f21, f26, f4, f10, dyn # perform operation
fmadd.d f21, f26, f4, f10, rdn # perform operation
fmadd.d f21, f26, f4, f10, rmm # perform operation
fmadd.d f21, f26, f4, f10, rne # perform operation
fmadd.d f21, f26, f4, f10, rtz # perform operation
fmadd.d f21, f26, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f26, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f26, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x15, 0x930c7a8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x989fb967 # load x3 with 32 MSBs 0x00000000989fb967
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000989fb967
sw x3, 0(x2) # store x3 (0x989fb967) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000989fb967 from memory into f11
fmadd.d f15, f20, f3, f11, dyn # perform operation
fmadd.d f15, f20, f3, f11, rdn # perform operation
fmadd.d f15, f20, f3, f11, rmm # perform operation
fmadd.d f15, f20, f3, f11, rne # perform operation
fmadd.d f15, f20, f3, f11, rtz # perform operation
fmadd.d f15, f20, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f20, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x1, 0xa97e9a91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xf4fbeaca # load x3 with 32 MSBs 0x00000000f4fbeaca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4fbeaca
sw x3, 0(x2) # store x3 (0xf4fbeaca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f4fbeaca from memory into f27
fmadd.d f1, f7, f30, f27, dyn # perform operation
fmadd.d f1, f7, f30, f27, rdn # perform operation
fmadd.d f1, f7, f30, f27, rmm # perform operation
fmadd.d f1, f7, f30, f27, rne # perform operation
fmadd.d f1, f7, f30, f27, rtz # perform operation
fmadd.d f1, f7, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f7, f30, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x28, 0x7d6edfd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x8beedce1 # load x3 with 32 MSBs 0x000000008beedce1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008beedce1
sw x3, 0(x2) # store x3 (0x8beedce1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000008beedce1 from memory into f3
fmadd.d f28, f12, f14, f3, dyn # perform operation
fmadd.d f28, f12, f14, f3, rdn # perform operation
fmadd.d f28, f12, f14, f3, rmm # perform operation
fmadd.d f28, f12, f14, f3, rne # perform operation
fmadd.d f28, f12, f14, f3, rtz # perform operation
fmadd.d f28, f12, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f12, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x26, 0xfcaef46e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x5de89daf # load x3 with 32 MSBs 0x000000005de89daf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005de89daf
sw x3, 0(x2) # store x3 (0x5de89daf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000005de89daf from memory into f23
fmadd.d f26, f10, f17, f23, dyn # perform operation
fmadd.d f26, f10, f17, f23, rdn # perform operation
fmadd.d f26, f10, f17, f23, rmm # perform operation
fmadd.d f26, f10, f17, f23, rne # perform operation
fmadd.d f26, f10, f17, f23, rtz # perform operation
fmadd.d f26, f10, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f10, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f10, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f10, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f10, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f10, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x2, 0x8a1e11e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x6a0c0dda # load x3 with 32 MSBs 0x000000006a0c0dda
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a0c0dda
sw x3, 0(x2) # store x3 (0x6a0c0dda) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006a0c0dda from memory into f1
fmadd.d f2, f23, f22, f1, dyn # perform operation
fmadd.d f2, f23, f22, f1, rdn # perform operation
fmadd.d f2, f23, f22, f1, rmm # perform operation
fmadd.d f2, f23, f22, f1, rne # perform operation
fmadd.d f2, f23, f22, f1, rtz # perform operation
fmadd.d f2, f23, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f23, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f23, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f23, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f23, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f23, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x8, 0xb2a4dd9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x9f7e4d62 # load x3 with 32 MSBs 0x000000009f7e4d62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f7e4d62
sw x3, 0(x2) # store x3 (0x9f7e4d62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009f7e4d62 from memory into f22
fmadd.d f8, f19, f14, f22, dyn # perform operation
fmadd.d f8, f19, f14, f22, rdn # perform operation
fmadd.d f8, f19, f14, f22, rmm # perform operation
fmadd.d f8, f19, f14, f22, rne # perform operation
fmadd.d f8, f19, f14, f22, rtz # perform operation
fmadd.d f8, f19, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f19, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f19, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x5, 0x0104ccbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x25641cd1 # load x3 with 32 MSBs 0x0000000025641cd1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025641cd1
sw x3, 0(x2) # store x3 (0x25641cd1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000025641cd1 from memory into f2
fmadd.d f5, f15, f17, f2, dyn # perform operation
fmadd.d f5, f15, f17, f2, rdn # perform operation
fmadd.d f5, f15, f17, f2, rmm # perform operation
fmadd.d f5, f15, f17, f2, rne # perform operation
fmadd.d f5, f15, f17, f2, rtz # perform operation
fmadd.d f5, f15, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f15, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f15, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f15, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f15, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f15, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x15, 0x559e5148 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0xa1df1488 # load x3 with 32 MSBs 0x00000000a1df1488
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1df1488
sw x3, 0(x2) # store x3 (0xa1df1488) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a1df1488 from memory into f10
fmadd.d f15, f5, f28, f10, dyn # perform operation
fmadd.d f15, f5, f28, f10, rdn # perform operation
fmadd.d f15, f5, f28, f10, rmm # perform operation
fmadd.d f15, f5, f28, f10, rne # perform operation
fmadd.d f15, f5, f28, f10, rtz # perform operation
fmadd.d f15, f5, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f5, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x17, 0xbf772e7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0xfb9756cc # load x3 with 32 MSBs 0x00000000fb9756cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb9756cc
sw x3, 0(x2) # store x3 (0xfb9756cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000fb9756cc from memory into f3
fmadd.d f17, f16, f19, f3, dyn # perform operation
fmadd.d f17, f16, f19, f3, rdn # perform operation
fmadd.d f17, f16, f19, f3, rmm # perform operation
fmadd.d f17, f16, f19, f3, rne # perform operation
fmadd.d f17, f16, f19, f3, rtz # perform operation
fmadd.d f17, f16, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f16, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x6, 0xef0fe083 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0xee6850f0 # load x3 with 32 MSBs 0x00000000ee6850f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee6850f0
sw x3, 0(x2) # store x3 (0xee6850f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ee6850f0 from memory into f5
fmadd.d f6, f23, f24, f5, dyn # perform operation
fmadd.d f6, f23, f24, f5, rdn # perform operation
fmadd.d f6, f23, f24, f5, rmm # perform operation
fmadd.d f6, f23, f24, f5, rne # perform operation
fmadd.d f6, f23, f24, f5, rtz # perform operation
fmadd.d f6, f23, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f23, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f23, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x20, 0x0808ff54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0x14362e5f # load x3 with 32 MSBs 0x0000000014362e5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014362e5f
sw x3, 0(x2) # store x3 (0x14362e5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000014362e5f from memory into f11
fmadd.d f20, f28, f15, f11, dyn # perform operation
fmadd.d f20, f28, f15, f11, rdn # perform operation
fmadd.d f20, f28, f15, f11, rmm # perform operation
fmadd.d f20, f28, f15, f11, rne # perform operation
fmadd.d f20, f28, f15, f11, rtz # perform operation
fmadd.d f20, f28, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f28, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x15, 0x3aed00c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x578063da # load x3 with 32 MSBs 0x00000000578063da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000578063da
sw x3, 0(x2) # store x3 (0x578063da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000578063da from memory into f8
fmadd.d f15, f3, f28, f8, dyn # perform operation
fmadd.d f15, f3, f28, f8, rdn # perform operation
fmadd.d f15, f3, f28, f8, rmm # perform operation
fmadd.d f15, f3, f28, f8, rne # perform operation
fmadd.d f15, f3, f28, f8, rtz # perform operation
fmadd.d f15, f3, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f3, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x8, 0x54733703 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x8268121c # load x3 with 32 MSBs 0x000000008268121c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008268121c
sw x3, 0(x2) # store x3 (0x8268121c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008268121c from memory into f23
fmadd.d f8, f18, f9, f23, dyn # perform operation
fmadd.d f8, f18, f9, f23, rdn # perform operation
fmadd.d f8, f18, f9, f23, rmm # perform operation
fmadd.d f8, f18, f9, f23, rne # perform operation
fmadd.d f8, f18, f9, f23, rtz # perform operation
fmadd.d f8, f18, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f18, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f18, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f18, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f18, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f18, f9, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x30, 0x51eec97c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x0ece1805 # load x3 with 32 MSBs 0x000000000ece1805
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ece1805
sw x3, 0(x2) # store x3 (0x0ece1805) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000ece1805 from memory into f6
fmadd.d f30, f4, f19, f6, dyn # perform operation
fmadd.d f30, f4, f19, f6, rdn # perform operation
fmadd.d f30, f4, f19, f6, rmm # perform operation
fmadd.d f30, f4, f19, f6, rne # perform operation
fmadd.d f30, f4, f19, f6, rtz # perform operation
fmadd.d f30, f4, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f4, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x17, 0x505594fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x0dc9ccd1 # load x3 with 32 MSBs 0x000000000dc9ccd1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000dc9ccd1
sw x3, 0(x2) # store x3 (0x0dc9ccd1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000dc9ccd1 from memory into f19
fmadd.d f17, f27, f26, f19, dyn # perform operation
fmadd.d f17, f27, f26, f19, rdn # perform operation
fmadd.d f17, f27, f26, f19, rmm # perform operation
fmadd.d f17, f27, f26, f19, rne # perform operation
fmadd.d f17, f27, f26, f19, rtz # perform operation
fmadd.d f17, f27, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f27, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f27, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x16, 0xbddbd1d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0xe51d9633 # load x3 with 32 MSBs 0x00000000e51d9633
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e51d9633
sw x3, 0(x2) # store x3 (0xe51d9633) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e51d9633 from memory into f19
fmadd.d f16, f13, f8, f19, dyn # perform operation
fmadd.d f16, f13, f8, f19, rdn # perform operation
fmadd.d f16, f13, f8, f19, rmm # perform operation
fmadd.d f16, f13, f8, f19, rne # perform operation
fmadd.d f16, f13, f8, f19, rtz # perform operation
fmadd.d f16, f13, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f13, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f13, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x7, 0x09f4b4bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0xf7239464 # load x3 with 32 MSBs 0x00000000f7239464
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7239464
sw x3, 0(x2) # store x3 (0xf7239464) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f7239464 from memory into f15
fmadd.d f7, f30, f4, f15, dyn # perform operation
fmadd.d f7, f30, f4, f15, rdn # perform operation
fmadd.d f7, f30, f4, f15, rmm # perform operation
fmadd.d f7, f30, f4, f15, rne # perform operation
fmadd.d f7, f30, f4, f15, rtz # perform operation
fmadd.d f7, f30, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f30, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f30, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x8, 0x22f7e7f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x4d948415 # load x3 with 32 MSBs 0x000000004d948415
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d948415
sw x3, 0(x2) # store x3 (0x4d948415) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000004d948415 from memory into f12
fmadd.d f8, f21, f17, f12, dyn # perform operation
fmadd.d f8, f21, f17, f12, rdn # perform operation
fmadd.d f8, f21, f17, f12, rmm # perform operation
fmadd.d f8, f21, f17, f12, rne # perform operation
fmadd.d f8, f21, f17, f12, rtz # perform operation
fmadd.d f8, f21, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f21, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f21, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f21, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f21, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f21, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x28, 0x25178bce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x6e865a6b # load x3 with 32 MSBs 0x000000006e865a6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e865a6b
sw x3, 0(x2) # store x3 (0x6e865a6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006e865a6b from memory into f27
fmadd.d f28, f6, f14, f27, dyn # perform operation
fmadd.d f28, f6, f14, f27, rdn # perform operation
fmadd.d f28, f6, f14, f27, rmm # perform operation
fmadd.d f28, f6, f14, f27, rne # perform operation
fmadd.d f28, f6, f14, f27, rtz # perform operation
fmadd.d f28, f6, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f6, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f6, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x19, 0x04fbcbf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x74d80fbd # load x3 with 32 MSBs 0x0000000074d80fbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074d80fbd
sw x3, 0(x2) # store x3 (0x74d80fbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000074d80fbd from memory into f16
fmadd.d f19, f15, f10, f16, dyn # perform operation
fmadd.d f19, f15, f10, f16, rdn # perform operation
fmadd.d f19, f15, f10, f16, rmm # perform operation
fmadd.d f19, f15, f10, f16, rne # perform operation
fmadd.d f19, f15, f10, f16, rtz # perform operation
fmadd.d f19, f15, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f15, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f15, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x7, 0xf6189764 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0x7c99e4e5 # load x3 with 32 MSBs 0x000000007c99e4e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c99e4e5
sw x3, 0(x2) # store x3 (0x7c99e4e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007c99e4e5 from memory into f28
fmadd.d f7, f29, f21, f28, dyn # perform operation
fmadd.d f7, f29, f21, f28, rdn # perform operation
fmadd.d f7, f29, f21, f28, rmm # perform operation
fmadd.d f7, f29, f21, f28, rne # perform operation
fmadd.d f7, f29, f21, f28, rtz # perform operation
fmadd.d f7, f29, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f29, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x21, 0x0b1a2878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xf81d1984 # load x3 with 32 MSBs 0x00000000f81d1984
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f81d1984
sw x3, 0(x2) # store x3 (0xf81d1984) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f81d1984 from memory into f15
fmadd.d f21, f5, f6, f15, dyn # perform operation
fmadd.d f21, f5, f6, f15, rdn # perform operation
fmadd.d f21, f5, f6, f15, rmm # perform operation
fmadd.d f21, f5, f6, f15, rne # perform operation
fmadd.d f21, f5, f6, f15, rtz # perform operation
fmadd.d f21, f5, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f5, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f5, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f5, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f5, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f5, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x30, 0xabe30d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x7a79584c # load x3 with 32 MSBs 0x000000007a79584c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a79584c
sw x3, 0(x2) # store x3 (0x7a79584c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007a79584c from memory into f28
fmadd.d f30, f13, f19, f28, dyn # perform operation
fmadd.d f30, f13, f19, f28, rdn # perform operation
fmadd.d f30, f13, f19, f28, rmm # perform operation
fmadd.d f30, f13, f19, f28, rne # perform operation
fmadd.d f30, f13, f19, f28, rtz # perform operation
fmadd.d f30, f13, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f13, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f13, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f13, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f13, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f13, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x7, 0x18eaef9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0xeb51660b # load x3 with 32 MSBs 0x00000000eb51660b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb51660b
sw x3, 0(x2) # store x3 (0xeb51660b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000eb51660b from memory into f15
fmadd.d f7, f9, f10, f15, dyn # perform operation
fmadd.d f7, f9, f10, f15, rdn # perform operation
fmadd.d f7, f9, f10, f15, rmm # perform operation
fmadd.d f7, f9, f10, f15, rne # perform operation
fmadd.d f7, f9, f10, f15, rtz # perform operation
fmadd.d f7, f9, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f9, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f9, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x3, 0x3d0b919b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0xc9318563 # load x3 with 32 MSBs 0x00000000c9318563
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9318563
sw x3, 0(x2) # store x3 (0xc9318563) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c9318563 from memory into f29
fmadd.d f3, f8, f16, f29, dyn # perform operation
fmadd.d f3, f8, f16, f29, rdn # perform operation
fmadd.d f3, f8, f16, f29, rmm # perform operation
fmadd.d f3, f8, f16, f29, rne # perform operation
fmadd.d f3, f8, f16, f29, rtz # perform operation
fmadd.d f3, f8, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f8, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x24, 0x9735c8c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0xc3944723 # load x3 with 32 MSBs 0x00000000c3944723
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3944723
sw x3, 0(x2) # store x3 (0xc3944723) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c3944723 from memory into f14
fmadd.d f24, f22, f19, f14, dyn # perform operation
fmadd.d f24, f22, f19, f14, rdn # perform operation
fmadd.d f24, f22, f19, f14, rmm # perform operation
fmadd.d f24, f22, f19, f14, rne # perform operation
fmadd.d f24, f22, f19, f14, rtz # perform operation
fmadd.d f24, f22, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f22, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f22, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f22, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f22, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f22, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x9, 0x974eb8f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0xdbcd4def # load x3 with 32 MSBs 0x00000000dbcd4def
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbcd4def
sw x3, 0(x2) # store x3 (0xdbcd4def) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000dbcd4def from memory into f28
fmadd.d f9, f8, f30, f28, dyn # perform operation
fmadd.d f9, f8, f30, f28, rdn # perform operation
fmadd.d f9, f8, f30, f28, rmm # perform operation
fmadd.d f9, f8, f30, f28, rne # perform operation
fmadd.d f9, f8, f30, f28, rtz # perform operation
fmadd.d f9, f8, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f8, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x12, 0x66842f20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0xfe507ec4 # load x3 with 32 MSBs 0x00000000fe507ec4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe507ec4
sw x3, 0(x2) # store x3 (0xfe507ec4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000fe507ec4 from memory into f21
fmadd.d f12, f1, f28, f21, dyn # perform operation
fmadd.d f12, f1, f28, f21, rdn # perform operation
fmadd.d f12, f1, f28, f21, rmm # perform operation
fmadd.d f12, f1, f28, f21, rne # perform operation
fmadd.d f12, f1, f28, f21, rtz # perform operation
fmadd.d f12, f1, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f1, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x17, 0x6f7b4e7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0xf7b38660 # load x3 with 32 MSBs 0x00000000f7b38660
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7b38660
sw x3, 0(x2) # store x3 (0xf7b38660) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f7b38660 from memory into f27
fmadd.d f17, f16, f26, f27, dyn # perform operation
fmadd.d f17, f16, f26, f27, rdn # perform operation
fmadd.d f17, f16, f26, f27, rmm # perform operation
fmadd.d f17, f16, f26, f27, rne # perform operation
fmadd.d f17, f16, f26, f27, rtz # perform operation
fmadd.d f17, f16, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f16, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f16, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f16, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f16, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f16, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x7, 0x92313a7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x0646e996 # load x3 with 32 MSBs 0x000000000646e996
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000646e996
sw x3, 0(x2) # store x3 (0x0646e996) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000000646e996 from memory into f2
fmadd.d f7, f18, f23, f2, dyn # perform operation
fmadd.d f7, f18, f23, f2, rdn # perform operation
fmadd.d f7, f18, f23, f2, rmm # perform operation
fmadd.d f7, f18, f23, f2, rne # perform operation
fmadd.d f7, f18, f23, f2, rtz # perform operation
fmadd.d f7, f18, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f18, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f18, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x27, 0x04fd142e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x4fc21aec # load x3 with 32 MSBs 0x000000004fc21aec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fc21aec
sw x3, 0(x2) # store x3 (0x4fc21aec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004fc21aec from memory into f17
fmadd.d f27, f12, f19, f17, dyn # perform operation
fmadd.d f27, f12, f19, f17, rdn # perform operation
fmadd.d f27, f12, f19, f17, rmm # perform operation
fmadd.d f27, f12, f19, f17, rne # perform operation
fmadd.d f27, f12, f19, f17, rtz # perform operation
fmadd.d f27, f12, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f12, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f12, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f12, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f12, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f12, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x8, 0xe21bd66d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0xd1bf9d32 # load x3 with 32 MSBs 0x00000000d1bf9d32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1bf9d32
sw x3, 0(x2) # store x3 (0xd1bf9d32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d1bf9d32 from memory into f27
fmadd.d f8, f14, f28, f27, dyn # perform operation
fmadd.d f8, f14, f28, f27, rdn # perform operation
fmadd.d f8, f14, f28, f27, rmm # perform operation
fmadd.d f8, f14, f28, f27, rne # perform operation
fmadd.d f8, f14, f28, f27, rtz # perform operation
fmadd.d f8, f14, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f14, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x5, 0xdb44d999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0x347885e6 # load x3 with 32 MSBs 0x00000000347885e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000347885e6
sw x3, 0(x2) # store x3 (0x347885e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000347885e6 from memory into f27
fmadd.d f5, f11, f18, f27, dyn # perform operation
fmadd.d f5, f11, f18, f27, rdn # perform operation
fmadd.d f5, f11, f18, f27, rmm # perform operation
fmadd.d f5, f11, f18, f27, rne # perform operation
fmadd.d f5, f11, f18, f27, rtz # perform operation
fmadd.d f5, f11, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f11, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f11, f18, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x12, 0x2ba6ba87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0x30bd30a3 # load x3 with 32 MSBs 0x0000000030bd30a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030bd30a3
sw x3, 0(x2) # store x3 (0x30bd30a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000030bd30a3 from memory into f13
fmadd.d f12, f29, f26, f13, dyn # perform operation
fmadd.d f12, f29, f26, f13, rdn # perform operation
fmadd.d f12, f29, f26, f13, rmm # perform operation
fmadd.d f12, f29, f26, f13, rne # perform operation
fmadd.d f12, f29, f26, f13, rtz # perform operation
fmadd.d f12, f29, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f29, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x29, 0x6c7e9a76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x9ef7e3a8 # load x3 with 32 MSBs 0x000000009ef7e3a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ef7e3a8
sw x3, 0(x2) # store x3 (0x9ef7e3a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009ef7e3a8 from memory into f23
fmadd.d f29, f11, f13, f23, dyn # perform operation
fmadd.d f29, f11, f13, f23, rdn # perform operation
fmadd.d f29, f11, f13, f23, rmm # perform operation
fmadd.d f29, f11, f13, f23, rne # perform operation
fmadd.d f29, f11, f13, f23, rtz # perform operation
fmadd.d f29, f11, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f11, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x17, 0xdee6aec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0xe2c39f77 # load x3 with 32 MSBs 0x00000000e2c39f77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2c39f77
sw x3, 0(x2) # store x3 (0xe2c39f77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e2c39f77 from memory into f23
fmadd.d f17, f1, f10, f23, dyn # perform operation
fmadd.d f17, f1, f10, f23, rdn # perform operation
fmadd.d f17, f1, f10, f23, rmm # perform operation
fmadd.d f17, f1, f10, f23, rne # perform operation
fmadd.d f17, f1, f10, f23, rtz # perform operation
fmadd.d f17, f1, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f1, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f1, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x28, 0xb5816bea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x7a69902f # load x3 with 32 MSBs 0x000000007a69902f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a69902f
sw x3, 0(x2) # store x3 (0x7a69902f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007a69902f from memory into f5
fmadd.d f28, f29, f24, f5, dyn # perform operation
fmadd.d f28, f29, f24, f5, rdn # perform operation
fmadd.d f28, f29, f24, f5, rmm # perform operation
fmadd.d f28, f29, f24, f5, rne # perform operation
fmadd.d f28, f29, f24, f5, rtz # perform operation
fmadd.d f28, f29, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f29, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x9, 0x09afb047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x93db9c25 # load x3 with 32 MSBs 0x0000000093db9c25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093db9c25
sw x3, 0(x2) # store x3 (0x93db9c25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000093db9c25 from memory into f19
fmadd.d f9, f1, f6, f19, dyn # perform operation
fmadd.d f9, f1, f6, f19, rdn # perform operation
fmadd.d f9, f1, f6, f19, rmm # perform operation
fmadd.d f9, f1, f6, f19, rne # perform operation
fmadd.d f9, f1, f6, f19, rtz # perform operation
fmadd.d f9, f1, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f1, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x26, 0xca96d5ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x04631fb6 # load x3 with 32 MSBs 0x0000000004631fb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004631fb6
sw x3, 0(x2) # store x3 (0x04631fb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000004631fb6 from memory into f24
fmadd.d f26, f11, f5, f24, dyn # perform operation
fmadd.d f26, f11, f5, f24, rdn # perform operation
fmadd.d f26, f11, f5, f24, rmm # perform operation
fmadd.d f26, f11, f5, f24, rne # perform operation
fmadd.d f26, f11, f5, f24, rtz # perform operation
fmadd.d f26, f11, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f11, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x30, 0x470a0c8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0xf9039647 # load x3 with 32 MSBs 0x00000000f9039647
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9039647
sw x3, 0(x2) # store x3 (0xf9039647) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f9039647 from memory into f23
fmadd.d f30, f13, f22, f23, dyn # perform operation
fmadd.d f30, f13, f22, f23, rdn # perform operation
fmadd.d f30, f13, f22, f23, rmm # perform operation
fmadd.d f30, f13, f22, f23, rne # perform operation
fmadd.d f30, f13, f22, f23, rtz # perform operation
fmadd.d f30, f13, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f13, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x7, 0x982cddcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0xbd088605 # load x3 with 32 MSBs 0x00000000bd088605
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd088605
sw x3, 0(x2) # store x3 (0xbd088605) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000bd088605 from memory into f8
fmadd.d f7, f28, f19, f8, dyn # perform operation
fmadd.d f7, f28, f19, f8, rdn # perform operation
fmadd.d f7, f28, f19, f8, rmm # perform operation
fmadd.d f7, f28, f19, f8, rne # perform operation
fmadd.d f7, f28, f19, f8, rtz # perform operation
fmadd.d f7, f28, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f28, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x28, 0x04764322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0xd8d9e6ca # load x3 with 32 MSBs 0x00000000d8d9e6ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8d9e6ca
sw x3, 0(x2) # store x3 (0xd8d9e6ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d8d9e6ca from memory into f21
fmadd.d f28, f15, f2, f21, dyn # perform operation
fmadd.d f28, f15, f2, f21, rdn # perform operation
fmadd.d f28, f15, f2, f21, rmm # perform operation
fmadd.d f28, f15, f2, f21, rne # perform operation
fmadd.d f28, f15, f2, f21, rtz # perform operation
fmadd.d f28, f15, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f15, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f15, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f15, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f15, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f15, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x19, 0x9aa1b957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x51f9e3e1 # load x3 with 32 MSBs 0x0000000051f9e3e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051f9e3e1
sw x3, 0(x2) # store x3 (0x51f9e3e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000051f9e3e1 from memory into f5
fmadd.d f19, f29, f11, f5, dyn # perform operation
fmadd.d f19, f29, f11, f5, rdn # perform operation
fmadd.d f19, f29, f11, f5, rmm # perform operation
fmadd.d f19, f29, f11, f5, rne # perform operation
fmadd.d f19, f29, f11, f5, rtz # perform operation
fmadd.d f19, f29, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f29, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f29, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x30, 0x58c22477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xc810f94c # load x3 with 32 MSBs 0x00000000c810f94c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c810f94c
sw x3, 0(x2) # store x3 (0xc810f94c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000c810f94c from memory into f16
fmadd.d f30, f4, f24, f16, dyn # perform operation
fmadd.d f30, f4, f24, f16, rdn # perform operation
fmadd.d f30, f4, f24, f16, rmm # perform operation
fmadd.d f30, f4, f24, f16, rne # perform operation
fmadd.d f30, f4, f24, f16, rtz # perform operation
fmadd.d f30, f4, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f4, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x15, 0x616678ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0xd7c34eac # load x3 with 32 MSBs 0x00000000d7c34eac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7c34eac
sw x3, 0(x2) # store x3 (0xd7c34eac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d7c34eac from memory into f24
fmadd.d f15, f8, f13, f24, dyn # perform operation
fmadd.d f15, f8, f13, f24, rdn # perform operation
fmadd.d f15, f8, f13, f24, rmm # perform operation
fmadd.d f15, f8, f13, f24, rne # perform operation
fmadd.d f15, f8, f13, f24, rtz # perform operation
fmadd.d f15, f8, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f8, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f8, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f8, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f8, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f8, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x17, 0xcedaa6e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0xe89c0eaf # load x3 with 32 MSBs 0x00000000e89c0eaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e89c0eaf
sw x3, 0(x2) # store x3 (0xe89c0eaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e89c0eaf from memory into f5
fmadd.d f17, f26, f14, f5, dyn # perform operation
fmadd.d f17, f26, f14, f5, rdn # perform operation
fmadd.d f17, f26, f14, f5, rmm # perform operation
fmadd.d f17, f26, f14, f5, rne # perform operation
fmadd.d f17, f26, f14, f5, rtz # perform operation
fmadd.d f17, f26, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f26, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x22, 0xbfe86674 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xb62f93c5 # load x3 with 32 MSBs 0x00000000b62f93c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b62f93c5
sw x3, 0(x2) # store x3 (0xb62f93c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b62f93c5 from memory into f16
fmadd.d f22, f12, f31, f16, dyn # perform operation
fmadd.d f22, f12, f31, f16, rdn # perform operation
fmadd.d f22, f12, f31, f16, rmm # perform operation
fmadd.d f22, f12, f31, f16, rne # perform operation
fmadd.d f22, f12, f31, f16, rtz # perform operation
fmadd.d f22, f12, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f12, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f12, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x20, 0xf4db98b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x5498a906 # load x3 with 32 MSBs 0x000000005498a906
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005498a906
sw x3, 0(x2) # store x3 (0x5498a906) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000005498a906 from memory into f14
fmadd.d f20, f7, f31, f14, dyn # perform operation
fmadd.d f20, f7, f31, f14, rdn # perform operation
fmadd.d f20, f7, f31, f14, rmm # perform operation
fmadd.d f20, f7, f31, f14, rne # perform operation
fmadd.d f20, f7, f31, f14, rtz # perform operation
fmadd.d f20, f7, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f7, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f7, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f7, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f7, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f7, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x3, 0x4232ea38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0xe2cb01f9 # load x3 with 32 MSBs 0x00000000e2cb01f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2cb01f9
sw x3, 0(x2) # store x3 (0xe2cb01f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e2cb01f9 from memory into f8
fmadd.d f3, f17, f13, f8, dyn # perform operation
fmadd.d f3, f17, f13, f8, rdn # perform operation
fmadd.d f3, f17, f13, f8, rmm # perform operation
fmadd.d f3, f17, f13, f8, rne # perform operation
fmadd.d f3, f17, f13, f8, rtz # perform operation
fmadd.d f3, f17, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f17, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x24, 0x88d4d90a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x1da537ea # load x3 with 32 MSBs 0x000000001da537ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001da537ea
sw x3, 0(x2) # store x3 (0x1da537ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001da537ea from memory into f13
fmadd.d f24, f31, f21, f13, dyn # perform operation
fmadd.d f24, f31, f21, f13, rdn # perform operation
fmadd.d f24, f31, f21, f13, rmm # perform operation
fmadd.d f24, f31, f21, f13, rne # perform operation
fmadd.d f24, f31, f21, f13, rtz # perform operation
fmadd.d f24, f31, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f31, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f31, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f31, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f31, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f31, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x7, 0x100abc48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x31b82e92 # load x3 with 32 MSBs 0x0000000031b82e92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031b82e92
sw x3, 0(x2) # store x3 (0x31b82e92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000031b82e92 from memory into f13
fmadd.d f7, f9, f17, f13, dyn # perform operation
fmadd.d f7, f9, f17, f13, rdn # perform operation
fmadd.d f7, f9, f17, f13, rmm # perform operation
fmadd.d f7, f9, f17, f13, rne # perform operation
fmadd.d f7, f9, f17, f13, rtz # perform operation
fmadd.d f7, f9, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f9, f17, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x30, 0x2df21649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xd2db3267 # load x3 with 32 MSBs 0x00000000d2db3267
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2db3267
sw x3, 0(x2) # store x3 (0xd2db3267) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d2db3267 from memory into f23
fmadd.d f30, f21, f4, f23, dyn # perform operation
fmadd.d f30, f21, f4, f23, rdn # perform operation
fmadd.d f30, f21, f4, f23, rmm # perform operation
fmadd.d f30, f21, f4, f23, rne # perform operation
fmadd.d f30, f21, f4, f23, rtz # perform operation
fmadd.d f30, f21, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f21, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x31, 0x1df0fc3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x012ff85c # load x3 with 32 MSBs 0x00000000012ff85c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000012ff85c
sw x3, 0(x2) # store x3 (0x012ff85c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000012ff85c from memory into f7
fmadd.d f31, f25, f15, f7, dyn # perform operation
fmadd.d f31, f25, f15, f7, rdn # perform operation
fmadd.d f31, f25, f15, f7, rmm # perform operation
fmadd.d f31, f25, f15, f7, rne # perform operation
fmadd.d f31, f25, f15, f7, rtz # perform operation
fmadd.d f31, f25, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f25, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f25, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x29, 0xa1f1539d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xbf038f41 # load x3 with 32 MSBs 0x00000000bf038f41
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf038f41
sw x3, 0(x2) # store x3 (0xbf038f41) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000bf038f41 from memory into f17
fmadd.d f29, f10, f3, f17, dyn # perform operation
fmadd.d f29, f10, f3, f17, rdn # perform operation
fmadd.d f29, f10, f3, f17, rmm # perform operation
fmadd.d f29, f10, f3, f17, rne # perform operation
fmadd.d f29, f10, f3, f17, rtz # perform operation
fmadd.d f29, f10, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f10, f3, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x6, 0x7d74bc58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x48675cb1 # load x3 with 32 MSBs 0x0000000048675cb1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048675cb1
sw x3, 0(x2) # store x3 (0x48675cb1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000048675cb1 from memory into f16
fmadd.d f6, f29, f26, f16, dyn # perform operation
fmadd.d f6, f29, f26, f16, rdn # perform operation
fmadd.d f6, f29, f26, f16, rmm # perform operation
fmadd.d f6, f29, f26, f16, rne # perform operation
fmadd.d f6, f29, f26, f16, rtz # perform operation
fmadd.d f6, f29, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f29, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x8, 0x8bee3b20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x4764233e # load x3 with 32 MSBs 0x000000004764233e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004764233e
sw x3, 0(x2) # store x3 (0x4764233e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000004764233e from memory into f5
fmadd.d f8, f21, f25, f5, dyn # perform operation
fmadd.d f8, f21, f25, f5, rdn # perform operation
fmadd.d f8, f21, f25, f5, rmm # perform operation
fmadd.d f8, f21, f25, f5, rne # perform operation
fmadd.d f8, f21, f25, f5, rtz # perform operation
fmadd.d f8, f21, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f21, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f21, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x6, 0xf865a47d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0xada8d300 # load x3 with 32 MSBs 0x00000000ada8d300
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ada8d300
sw x3, 0(x2) # store x3 (0xada8d300) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ada8d300 from memory into f3
fmadd.d f6, f24, f31, f3, dyn # perform operation
fmadd.d f6, f24, f31, f3, rdn # perform operation
fmadd.d f6, f24, f31, f3, rmm # perform operation
fmadd.d f6, f24, f31, f3, rne # perform operation
fmadd.d f6, f24, f31, f3, rtz # perform operation
fmadd.d f6, f24, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f24, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x22, 0x68fd9fb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0xa47298b5 # load x3 with 32 MSBs 0x00000000a47298b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a47298b5
sw x3, 0(x2) # store x3 (0xa47298b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a47298b5 from memory into f7
fmadd.d f22, f19, f29, f7, dyn # perform operation
fmadd.d f22, f19, f29, f7, rdn # perform operation
fmadd.d f22, f19, f29, f7, rmm # perform operation
fmadd.d f22, f19, f29, f7, rne # perform operation
fmadd.d f22, f19, f29, f7, rtz # perform operation
fmadd.d f22, f19, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f19, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x30, 0xb19a5f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0xb8eeb6b0 # load x3 with 32 MSBs 0x00000000b8eeb6b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8eeb6b0
sw x3, 0(x2) # store x3 (0xb8eeb6b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000b8eeb6b0 from memory into f29
fmadd.d f30, f2, f5, f29, dyn # perform operation
fmadd.d f30, f2, f5, f29, rdn # perform operation
fmadd.d f30, f2, f5, f29, rmm # perform operation
fmadd.d f30, f2, f5, f29, rne # perform operation
fmadd.d f30, f2, f5, f29, rtz # perform operation
fmadd.d f30, f2, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f2, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f2, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f2, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f2, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f2, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x22, 0x33e42b5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xe4d0c61b # load x3 with 32 MSBs 0x00000000e4d0c61b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4d0c61b
sw x3, 0(x2) # store x3 (0xe4d0c61b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e4d0c61b from memory into f30
fmadd.d f22, f8, f1, f30, dyn # perform operation
fmadd.d f22, f8, f1, f30, rdn # perform operation
fmadd.d f22, f8, f1, f30, rmm # perform operation
fmadd.d f22, f8, f1, f30, rne # perform operation
fmadd.d f22, f8, f1, f30, rtz # perform operation
fmadd.d f22, f8, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f8, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x10, 0x3a5cc6a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x1bf15349 # load x3 with 32 MSBs 0x000000001bf15349
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bf15349
sw x3, 0(x2) # store x3 (0x1bf15349) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000001bf15349 from memory into f6
fmadd.d f10, f26, f1, f6, dyn # perform operation
fmadd.d f10, f26, f1, f6, rdn # perform operation
fmadd.d f10, f26, f1, f6, rmm # perform operation
fmadd.d f10, f26, f1, f6, rne # perform operation
fmadd.d f10, f26, f1, f6, rtz # perform operation
fmadd.d f10, f26, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f26, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f26, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x20, 0x1f5984e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x288b0777 # load x3 with 32 MSBs 0x00000000288b0777
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000288b0777
sw x3, 0(x2) # store x3 (0x288b0777) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000288b0777 from memory into f1
fmadd.d f20, f7, f19, f1, dyn # perform operation
fmadd.d f20, f7, f19, f1, rdn # perform operation
fmadd.d f20, f7, f19, f1, rmm # perform operation
fmadd.d f20, f7, f19, f1, rne # perform operation
fmadd.d f20, f7, f19, f1, rtz # perform operation
fmadd.d f20, f7, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f7, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f7, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x22, 0xae7214e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x6c39bc2d # load x3 with 32 MSBs 0x000000006c39bc2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c39bc2d
sw x3, 0(x2) # store x3 (0x6c39bc2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000006c39bc2d from memory into f6
fmadd.d f22, f8, f3, f6, dyn # perform operation
fmadd.d f22, f8, f3, f6, rdn # perform operation
fmadd.d f22, f8, f3, f6, rmm # perform operation
fmadd.d f22, f8, f3, f6, rne # perform operation
fmadd.d f22, f8, f3, f6, rtz # perform operation
fmadd.d f22, f8, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f8, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x8, 0xa2d3ccf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x10a4a422 # load x3 with 32 MSBs 0x0000000010a4a422
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010a4a422
sw x3, 0(x2) # store x3 (0x10a4a422) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000010a4a422 from memory into f22
fmadd.d f8, f2, f25, f22, dyn # perform operation
fmadd.d f8, f2, f25, f22, rdn # perform operation
fmadd.d f8, f2, f25, f22, rmm # perform operation
fmadd.d f8, f2, f25, f22, rne # perform operation
fmadd.d f8, f2, f25, f22, rtz # perform operation
fmadd.d f8, f2, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f2, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f2, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x22, 0x025fa771 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x5df2bae0 # load x3 with 32 MSBs 0x000000005df2bae0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005df2bae0
sw x3, 0(x2) # store x3 (0x5df2bae0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005df2bae0 from memory into f9
fmadd.d f22, f7, f2, f9, dyn # perform operation
fmadd.d f22, f7, f2, f9, rdn # perform operation
fmadd.d f22, f7, f2, f9, rmm # perform operation
fmadd.d f22, f7, f2, f9, rne # perform operation
fmadd.d f22, f7, f2, f9, rtz # perform operation
fmadd.d f22, f7, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f7, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x24, 0x0f809459 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x423948ef # load x3 with 32 MSBs 0x00000000423948ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000423948ef
sw x3, 0(x2) # store x3 (0x423948ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000423948ef from memory into f20
fmadd.d f24, f3, f4, f20, dyn # perform operation
fmadd.d f24, f3, f4, f20, rdn # perform operation
fmadd.d f24, f3, f4, f20, rmm # perform operation
fmadd.d f24, f3, f4, f20, rne # perform operation
fmadd.d f24, f3, f4, f20, rtz # perform operation
fmadd.d f24, f3, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f3, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x1, 0x6e5639f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0x680dfcfa # load x3 with 32 MSBs 0x00000000680dfcfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000680dfcfa
sw x3, 0(x2) # store x3 (0x680dfcfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000680dfcfa from memory into f4
fmadd.d f1, f10, f2, f4, dyn # perform operation
fmadd.d f1, f10, f2, f4, rdn # perform operation
fmadd.d f1, f10, f2, f4, rmm # perform operation
fmadd.d f1, f10, f2, f4, rne # perform operation
fmadd.d f1, f10, f2, f4, rtz # perform operation
fmadd.d f1, f10, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f10, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f10, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x27, 0xcb7f0145 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x207e529b # load x3 with 32 MSBs 0x00000000207e529b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000207e529b
sw x3, 0(x2) # store x3 (0x207e529b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000207e529b from memory into f11
fmadd.d f27, f16, f28, f11, dyn # perform operation
fmadd.d f27, f16, f28, f11, rdn # perform operation
fmadd.d f27, f16, f28, f11, rmm # perform operation
fmadd.d f27, f16, f28, f11, rne # perform operation
fmadd.d f27, f16, f28, f11, rtz # perform operation
fmadd.d f27, f16, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f16, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x17, 0x8eb21156 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x7718ae92 # load x3 with 32 MSBs 0x000000007718ae92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007718ae92
sw x3, 0(x2) # store x3 (0x7718ae92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000007718ae92 from memory into f15
fmadd.d f17, f3, f8, f15, dyn # perform operation
fmadd.d f17, f3, f8, f15, rdn # perform operation
fmadd.d f17, f3, f8, f15, rmm # perform operation
fmadd.d f17, f3, f8, f15, rne # perform operation
fmadd.d f17, f3, f8, f15, rtz # perform operation
fmadd.d f17, f3, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f3, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x23, 0xd27d4c61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xca35aef8 # load x3 with 32 MSBs 0x00000000ca35aef8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca35aef8
sw x3, 0(x2) # store x3 (0xca35aef8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ca35aef8 from memory into f2
fmadd.d f23, f10, f24, f2, dyn # perform operation
fmadd.d f23, f10, f24, f2, rdn # perform operation
fmadd.d f23, f10, f24, f2, rmm # perform operation
fmadd.d f23, f10, f24, f2, rne # perform operation
fmadd.d f23, f10, f24, f2, rtz # perform operation
fmadd.d f23, f10, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f10, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f10, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f10, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f10, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f10, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x8, 0x2907a570 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x8697e713 # load x3 with 32 MSBs 0x000000008697e713
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008697e713
sw x3, 0(x2) # store x3 (0x8697e713) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008697e713 from memory into f30
fmadd.d f8, f1, f31, f30, dyn # perform operation
fmadd.d f8, f1, f31, f30, rdn # perform operation
fmadd.d f8, f1, f31, f30, rmm # perform operation
fmadd.d f8, f1, f31, f30, rne # perform operation
fmadd.d f8, f1, f31, f30, rtz # perform operation
fmadd.d f8, f1, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f1, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f1, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x10, 0xb0a8ad9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x2e4e2a91 # load x3 with 32 MSBs 0x000000002e4e2a91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e4e2a91
sw x3, 0(x2) # store x3 (0x2e4e2a91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002e4e2a91 from memory into f29
fmadd.d f10, f18, f8, f29, dyn # perform operation
fmadd.d f10, f18, f8, f29, rdn # perform operation
fmadd.d f10, f18, f8, f29, rmm # perform operation
fmadd.d f10, f18, f8, f29, rne # perform operation
fmadd.d f10, f18, f8, f29, rtz # perform operation
fmadd.d f10, f18, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f18, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f18, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x1, 0x0f9778cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x0f6e5c9d # load x3 with 32 MSBs 0x000000000f6e5c9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f6e5c9d
sw x3, 0(x2) # store x3 (0x0f6e5c9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000000f6e5c9d from memory into f26
fmadd.d f1, f21, f18, f26, dyn # perform operation
fmadd.d f1, f21, f18, f26, rdn # perform operation
fmadd.d f1, f21, f18, f26, rmm # perform operation
fmadd.d f1, f21, f18, f26, rne # perform operation
fmadd.d f1, f21, f18, f26, rtz # perform operation
fmadd.d f1, f21, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f21, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f21, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f21, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f21, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f21, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x27, 0x04601e5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0xfe1ea6bd # load x3 with 32 MSBs 0x00000000fe1ea6bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe1ea6bd
sw x3, 0(x2) # store x3 (0xfe1ea6bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fe1ea6bd from memory into f17
fmadd.d f27, f19, f12, f17, dyn # perform operation
fmadd.d f27, f19, f12, f17, rdn # perform operation
fmadd.d f27, f19, f12, f17, rmm # perform operation
fmadd.d f27, f19, f12, f17, rne # perform operation
fmadd.d f27, f19, f12, f17, rtz # perform operation
fmadd.d f27, f19, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f19, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x27, 0x78c7391f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0xe576e9f7 # load x3 with 32 MSBs 0x00000000e576e9f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e576e9f7
sw x3, 0(x2) # store x3 (0xe576e9f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000e576e9f7 from memory into f14
fmadd.d f27, f17, f2, f14, dyn # perform operation
fmadd.d f27, f17, f2, f14, rdn # perform operation
fmadd.d f27, f17, f2, f14, rmm # perform operation
fmadd.d f27, f17, f2, f14, rne # perform operation
fmadd.d f27, f17, f2, f14, rtz # perform operation
fmadd.d f27, f17, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f17, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x12, 0xf9e48017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x5e2301ce # load x3 with 32 MSBs 0x000000005e2301ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e2301ce
sw x3, 0(x2) # store x3 (0x5e2301ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000005e2301ce from memory into f27
fmadd.d f12, f14, f29, f27, dyn # perform operation
fmadd.d f12, f14, f29, f27, rdn # perform operation
fmadd.d f12, f14, f29, f27, rmm # perform operation
fmadd.d f12, f14, f29, f27, rne # perform operation
fmadd.d f12, f14, f29, f27, rtz # perform operation
fmadd.d f12, f14, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f14, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f14, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x5, 0x62f8bdcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x2b386f71 # load x3 with 32 MSBs 0x000000002b386f71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b386f71
sw x3, 0(x2) # store x3 (0x2b386f71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002b386f71 from memory into f12
fmadd.d f5, f29, f23, f12, dyn # perform operation
fmadd.d f5, f29, f23, f12, rdn # perform operation
fmadd.d f5, f29, f23, f12, rmm # perform operation
fmadd.d f5, f29, f23, f12, rne # perform operation
fmadd.d f5, f29, f23, f12, rtz # perform operation
fmadd.d f5, f29, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f29, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x18, 0x89a383c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0xfb445bc2 # load x3 with 32 MSBs 0x00000000fb445bc2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb445bc2
sw x3, 0(x2) # store x3 (0xfb445bc2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000fb445bc2 from memory into f27
fmadd.d f18, f22, f10, f27, dyn # perform operation
fmadd.d f18, f22, f10, f27, rdn # perform operation
fmadd.d f18, f22, f10, f27, rmm # perform operation
fmadd.d f18, f22, f10, f27, rne # perform operation
fmadd.d f18, f22, f10, f27, rtz # perform operation
fmadd.d f18, f22, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f22, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x5, 0x0ec066b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0xca79e956 # load x3 with 32 MSBs 0x00000000ca79e956
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca79e956
sw x3, 0(x2) # store x3 (0xca79e956) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ca79e956 from memory into f15
fmadd.d f5, f27, f19, f15, dyn # perform operation
fmadd.d f5, f27, f19, f15, rdn # perform operation
fmadd.d f5, f27, f19, f15, rmm # perform operation
fmadd.d f5, f27, f19, f15, rne # perform operation
fmadd.d f5, f27, f19, f15, rtz # perform operation
fmadd.d f5, f27, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f27, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x7, 0x5fd75e77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xec418071 # load x3 with 32 MSBs 0x00000000ec418071
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec418071
sw x3, 0(x2) # store x3 (0xec418071) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ec418071 from memory into f26
fmadd.d f7, f6, f3, f26, dyn # perform operation
fmadd.d f7, f6, f3, f26, rdn # perform operation
fmadd.d f7, f6, f3, f26, rmm # perform operation
fmadd.d f7, f6, f3, f26, rne # perform operation
fmadd.d f7, f6, f3, f26, rtz # perform operation
fmadd.d f7, f6, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f6, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f6, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x13, 0x36dda85b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x51473324 # load x3 with 32 MSBs 0x0000000051473324
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051473324
sw x3, 0(x2) # store x3 (0x51473324) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000051473324 from memory into f15
fmadd.d f13, f8, f16, f15, dyn # perform operation
fmadd.d f13, f8, f16, f15, rdn # perform operation
fmadd.d f13, f8, f16, f15, rmm # perform operation
fmadd.d f13, f8, f16, f15, rne # perform operation
fmadd.d f13, f8, f16, f15, rtz # perform operation
fmadd.d f13, f8, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f8, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f8, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f8, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f8, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f8, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x26, 0x46fc87f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x5864bf3e # load x3 with 32 MSBs 0x000000005864bf3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005864bf3e
sw x3, 0(x2) # store x3 (0x5864bf3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005864bf3e from memory into f16
fmadd.d f26, f18, f20, f16, dyn # perform operation
fmadd.d f26, f18, f20, f16, rdn # perform operation
fmadd.d f26, f18, f20, f16, rmm # perform operation
fmadd.d f26, f18, f20, f16, rne # perform operation
fmadd.d f26, f18, f20, f16, rtz # perform operation
fmadd.d f26, f18, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f18, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f18, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f18, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f18, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f18, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x11, 0x56caaec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0xed0e910a # load x3 with 32 MSBs 0x00000000ed0e910a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed0e910a
sw x3, 0(x2) # store x3 (0xed0e910a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ed0e910a from memory into f21
fmadd.d f11, f31, f23, f21, dyn # perform operation
fmadd.d f11, f31, f23, f21, rdn # perform operation
fmadd.d f11, f31, f23, f21, rmm # perform operation
fmadd.d f11, f31, f23, f21, rne # perform operation
fmadd.d f11, f31, f23, f21, rtz # perform operation
fmadd.d f11, f31, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f31, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x2, 0xbd398a2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0xe471f26a # load x3 with 32 MSBs 0x00000000e471f26a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e471f26a
sw x3, 0(x2) # store x3 (0xe471f26a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e471f26a from memory into f19
fmadd.d f2, f15, f18, f19, dyn # perform operation
fmadd.d f2, f15, f18, f19, rdn # perform operation
fmadd.d f2, f15, f18, f19, rmm # perform operation
fmadd.d f2, f15, f18, f19, rne # perform operation
fmadd.d f2, f15, f18, f19, rtz # perform operation
fmadd.d f2, f15, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f15, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x14, 0xe9875965 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x91196ae7 # load x3 with 32 MSBs 0x0000000091196ae7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091196ae7
sw x3, 0(x2) # store x3 (0x91196ae7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000091196ae7 from memory into f22
fmadd.d f14, f15, f9, f22, dyn # perform operation
fmadd.d f14, f15, f9, f22, rdn # perform operation
fmadd.d f14, f15, f9, f22, rmm # perform operation
fmadd.d f14, f15, f9, f22, rne # perform operation
fmadd.d f14, f15, f9, f22, rtz # perform operation
fmadd.d f14, f15, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f15, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f15, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x30, 0xd3740a5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0xc46061fa # load x3 with 32 MSBs 0x00000000c46061fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c46061fa
sw x3, 0(x2) # store x3 (0xc46061fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c46061fa from memory into f23
fmadd.d f30, f28, f7, f23, dyn # perform operation
fmadd.d f30, f28, f7, f23, rdn # perform operation
fmadd.d f30, f28, f7, f23, rmm # perform operation
fmadd.d f30, f28, f7, f23, rne # perform operation
fmadd.d f30, f28, f7, f23, rtz # perform operation
fmadd.d f30, f28, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f28, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f28, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x18, 0x06ecf202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0xba31941b # load x3 with 32 MSBs 0x00000000ba31941b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba31941b
sw x3, 0(x2) # store x3 (0xba31941b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ba31941b from memory into f21
fmadd.d f18, f20, f15, f21, dyn # perform operation
fmadd.d f18, f20, f15, f21, rdn # perform operation
fmadd.d f18, f20, f15, f21, rmm # perform operation
fmadd.d f18, f20, f15, f21, rne # perform operation
fmadd.d f18, f20, f15, f21, rtz # perform operation
fmadd.d f18, f20, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f20, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f20, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f20, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f20, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f20, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x6, 0x18b30e8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x5b1ac1bf # load x3 with 32 MSBs 0x000000005b1ac1bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b1ac1bf
sw x3, 0(x2) # store x3 (0x5b1ac1bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005b1ac1bf from memory into f17
fmadd.d f6, f11, f28, f17, dyn # perform operation
fmadd.d f6, f11, f28, f17, rdn # perform operation
fmadd.d f6, f11, f28, f17, rmm # perform operation
fmadd.d f6, f11, f28, f17, rne # perform operation
fmadd.d f6, f11, f28, f17, rtz # perform operation
fmadd.d f6, f11, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f11, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f11, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f11, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f11, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f11, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x9, 0x9220cf99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
li x3, 0xa35993dc # load x3 with 32 MSBs 0x00000000a35993dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a35993dc
sw x3, 0(x2) # store x3 (0xa35993dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a35993dc from memory into f13
fmadd.d f9, f14, f2, f13, dyn # perform operation
fmadd.d f9, f14, f2, f13, rdn # perform operation
fmadd.d f9, f14, f2, f13, rmm # perform operation
fmadd.d f9, f14, f2, f13, rne # perform operation
fmadd.d f9, f14, f2, f13, rtz # perform operation
fmadd.d f9, f14, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f14, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f14, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f14, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f14, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f14, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x29, 0x03a6331c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x4b6efa77 # load x3 with 32 MSBs 0x000000004b6efa77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b6efa77
sw x3, 0(x2) # store x3 (0x4b6efa77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004b6efa77 from memory into f4
fmadd.d f29, f30, f11, f4, dyn # perform operation
fmadd.d f29, f30, f11, f4, rdn # perform operation
fmadd.d f29, f30, f11, f4, rmm # perform operation
fmadd.d f29, f30, f11, f4, rne # perform operation
fmadd.d f29, f30, f11, f4, rtz # perform operation
fmadd.d f29, f30, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f30, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f30, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f30, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f30, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f30, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x3, 0x848b5b6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0xa24aedd2 # load x3 with 32 MSBs 0x00000000a24aedd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a24aedd2
sw x3, 0(x2) # store x3 (0xa24aedd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a24aedd2 from memory into f21
fmadd.d f3, f2, f22, f21, dyn # perform operation
fmadd.d f3, f2, f22, f21, rdn # perform operation
fmadd.d f3, f2, f22, f21, rmm # perform operation
fmadd.d f3, f2, f22, f21, rne # perform operation
fmadd.d f3, f2, f22, f21, rtz # perform operation
fmadd.d f3, f2, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f2, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x31, 0x38e5bcba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
li x3, 0xd42cedfa # load x3 with 32 MSBs 0x00000000d42cedfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d42cedfa
sw x3, 0(x2) # store x3 (0xd42cedfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d42cedfa from memory into f20
fmadd.d f31, f12, f1, f20, dyn # perform operation
fmadd.d f31, f12, f1, f20, rdn # perform operation
fmadd.d f31, f12, f1, f20, rmm # perform operation
fmadd.d f31, f12, f1, f20, rne # perform operation
fmadd.d f31, f12, f1, f20, rtz # perform operation
fmadd.d f31, f12, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f12, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x19, 0x021b887b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x3137cd2b # load x3 with 32 MSBs 0x000000003137cd2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003137cd2b
sw x3, 0(x2) # store x3 (0x3137cd2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003137cd2b from memory into f12
fmadd.d f19, f24, f7, f12, dyn # perform operation
fmadd.d f19, f24, f7, f12, rdn # perform operation
fmadd.d f19, f24, f7, f12, rmm # perform operation
fmadd.d f19, f24, f7, f12, rne # perform operation
fmadd.d f19, f24, f7, f12, rtz # perform operation
fmadd.d f19, f24, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f24, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x15, 0x8ead1a63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x015135e4 # load x3 with 32 MSBs 0x00000000015135e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000015135e4
sw x3, 0(x2) # store x3 (0x015135e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000015135e4 from memory into f30
fmadd.d f15, f28, f7, f30, dyn # perform operation
fmadd.d f15, f28, f7, f30, rdn # perform operation
fmadd.d f15, f28, f7, f30, rmm # perform operation
fmadd.d f15, f28, f7, f30, rne # perform operation
fmadd.d f15, f28, f7, f30, rtz # perform operation
fmadd.d f15, f28, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f28, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x4, 0xd277bb1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x76b559d3 # load x3 with 32 MSBs 0x0000000076b559d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076b559d3
sw x3, 0(x2) # store x3 (0x76b559d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000076b559d3 from memory into f18
fmadd.d f4, f20, f16, f18, dyn # perform operation
fmadd.d f4, f20, f16, f18, rdn # perform operation
fmadd.d f4, f20, f16, f18, rmm # perform operation
fmadd.d f4, f20, f16, f18, rne # perform operation
fmadd.d f4, f20, f16, f18, rtz # perform operation
fmadd.d f4, f20, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f20, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x24, 0xf6eff439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xfeed7ce4 # load x3 with 32 MSBs 0x00000000feed7ce4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000feed7ce4
sw x3, 0(x2) # store x3 (0xfeed7ce4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000feed7ce4 from memory into f28
fmadd.d f24, f12, f15, f28, dyn # perform operation
fmadd.d f24, f12, f15, f28, rdn # perform operation
fmadd.d f24, f12, f15, f28, rmm # perform operation
fmadd.d f24, f12, f15, f28, rne # perform operation
fmadd.d f24, f12, f15, f28, rtz # perform operation
fmadd.d f24, f12, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f12, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f12, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x14, 0xfe3afc0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x559ec0e0 # load x3 with 32 MSBs 0x00000000559ec0e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000559ec0e0
sw x3, 0(x2) # store x3 (0x559ec0e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000559ec0e0 from memory into f4
fmadd.d f14, f22, f24, f4, dyn # perform operation
fmadd.d f14, f22, f24, f4, rdn # perform operation
fmadd.d f14, f22, f24, f4, rmm # perform operation
fmadd.d f14, f22, f24, f4, rne # perform operation
fmadd.d f14, f22, f24, f4, rtz # perform operation
fmadd.d f14, f22, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f22, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x27, 0x032a6f70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x98dbd474 # load x3 with 32 MSBs 0x0000000098dbd474
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098dbd474
sw x3, 0(x2) # store x3 (0x98dbd474) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000098dbd474 from memory into f20
fmadd.d f27, f23, f6, f20, dyn # perform operation
fmadd.d f27, f23, f6, f20, rdn # perform operation
fmadd.d f27, f23, f6, f20, rmm # perform operation
fmadd.d f27, f23, f6, f20, rne # perform operation
fmadd.d f27, f23, f6, f20, rtz # perform operation
fmadd.d f27, f23, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f23, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x14, 0xf33a1898 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0xcf338593 # load x3 with 32 MSBs 0x00000000cf338593
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf338593
sw x3, 0(x2) # store x3 (0xcf338593) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000cf338593 from memory into f2
fmadd.d f14, f17, f22, f2, dyn # perform operation
fmadd.d f14, f17, f22, f2, rdn # perform operation
fmadd.d f14, f17, f22, f2, rmm # perform operation
fmadd.d f14, f17, f22, f2, rne # perform operation
fmadd.d f14, f17, f22, f2, rtz # perform operation
fmadd.d f14, f17, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f17, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f17, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x3, 0xf8c4a3b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x7f439e59 # load x3 with 32 MSBs 0x000000007f439e59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f439e59
sw x3, 0(x2) # store x3 (0x7f439e59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000007f439e59 from memory into f14
fmadd.d f3, f7, f26, f14, dyn # perform operation
fmadd.d f3, f7, f26, f14, rdn # perform operation
fmadd.d f3, f7, f26, f14, rmm # perform operation
fmadd.d f3, f7, f26, f14, rne # perform operation
fmadd.d f3, f7, f26, f14, rtz # perform operation
fmadd.d f3, f7, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f7, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f7, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x24, 0x1f79eb11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x3dc5e245 # load x3 with 32 MSBs 0x000000003dc5e245
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003dc5e245
sw x3, 0(x2) # store x3 (0x3dc5e245) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003dc5e245 from memory into f22
fmadd.d f24, f28, f10, f22, dyn # perform operation
fmadd.d f24, f28, f10, f22, rdn # perform operation
fmadd.d f24, f28, f10, f22, rmm # perform operation
fmadd.d f24, f28, f10, f22, rne # perform operation
fmadd.d f24, f28, f10, f22, rtz # perform operation
fmadd.d f24, f28, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f28, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f28, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x21, 0xf90b3823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x40e82846 # load x3 with 32 MSBs 0x0000000040e82846
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040e82846
sw x3, 0(x2) # store x3 (0x40e82846) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000040e82846 from memory into f26
fmadd.d f21, f24, f7, f26, dyn # perform operation
fmadd.d f21, f24, f7, f26, rdn # perform operation
fmadd.d f21, f24, f7, f26, rmm # perform operation
fmadd.d f21, f24, f7, f26, rne # perform operation
fmadd.d f21, f24, f7, f26, rtz # perform operation
fmadd.d f21, f24, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f24, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f24, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f24, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f24, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f24, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x3, 0x54735535 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0xe09e3d3e # load x3 with 32 MSBs 0x00000000e09e3d3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e09e3d3e
sw x3, 0(x2) # store x3 (0xe09e3d3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e09e3d3e from memory into f28
fmadd.d f3, f24, f10, f28, dyn # perform operation
fmadd.d f3, f24, f10, f28, rdn # perform operation
fmadd.d f3, f24, f10, f28, rmm # perform operation
fmadd.d f3, f24, f10, f28, rne # perform operation
fmadd.d f3, f24, f10, f28, rtz # perform operation
fmadd.d f3, f24, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f24, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f24, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f24, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f24, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f24, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x7, 0x9d9c097a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x61b87765 # load x3 with 32 MSBs 0x0000000061b87765
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061b87765
sw x3, 0(x2) # store x3 (0x61b87765) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000061b87765 from memory into f3
fmadd.d f7, f12, f4, f3, dyn # perform operation
fmadd.d f7, f12, f4, f3, rdn # perform operation
fmadd.d f7, f12, f4, f3, rmm # perform operation
fmadd.d f7, f12, f4, f3, rne # perform operation
fmadd.d f7, f12, f4, f3, rtz # perform operation
fmadd.d f7, f12, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f12, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f12, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f12, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f12, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f12, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x22, 0x9cd53c92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xf4b6949d # load x3 with 32 MSBs 0x00000000f4b6949d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4b6949d
sw x3, 0(x2) # store x3 (0xf4b6949d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f4b6949d from memory into f21
fmadd.d f22, f14, f18, f21, dyn # perform operation
fmadd.d f22, f14, f18, f21, rdn # perform operation
fmadd.d f22, f14, f18, f21, rmm # perform operation
fmadd.d f22, f14, f18, f21, rne # perform operation
fmadd.d f22, f14, f18, f21, rtz # perform operation
fmadd.d f22, f14, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f14, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f14, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f14, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f14, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f14, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x19, 0x531ee2d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0xda374d59 # load x3 with 32 MSBs 0x00000000da374d59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da374d59
sw x3, 0(x2) # store x3 (0xda374d59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000da374d59 from memory into f27
fmadd.d f19, f1, f24, f27, dyn # perform operation
fmadd.d f19, f1, f24, f27, rdn # perform operation
fmadd.d f19, f1, f24, f27, rmm # perform operation
fmadd.d f19, f1, f24, f27, rne # perform operation
fmadd.d f19, f1, f24, f27, rtz # perform operation
fmadd.d f19, f1, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f1, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f1, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f1, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f1, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f1, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x7, 0x162bad53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x24d367c4 # load x3 with 32 MSBs 0x0000000024d367c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024d367c4
sw x3, 0(x2) # store x3 (0x24d367c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000024d367c4 from memory into f31
fmadd.d f7, f10, f22, f31, dyn # perform operation
fmadd.d f7, f10, f22, f31, rdn # perform operation
fmadd.d f7, f10, f22, f31, rmm # perform operation
fmadd.d f7, f10, f22, f31, rne # perform operation
fmadd.d f7, f10, f22, f31, rtz # perform operation
fmadd.d f7, f10, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f10, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x30, 0x2334eb4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0xc7bab443 # load x3 with 32 MSBs 0x00000000c7bab443
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7bab443
sw x3, 0(x2) # store x3 (0xc7bab443) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c7bab443 from memory into f8
fmadd.d f30, f17, f5, f8, dyn # perform operation
fmadd.d f30, f17, f5, f8, rdn # perform operation
fmadd.d f30, f17, f5, f8, rmm # perform operation
fmadd.d f30, f17, f5, f8, rne # perform operation
fmadd.d f30, f17, f5, f8, rtz # perform operation
fmadd.d f30, f17, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f17, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x28, 0xe10207b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x60592a89 # load x3 with 32 MSBs 0x0000000060592a89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060592a89
sw x3, 0(x2) # store x3 (0x60592a89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000060592a89 from memory into f30
fmadd.d f28, f23, f29, f30, dyn # perform operation
fmadd.d f28, f23, f29, f30, rdn # perform operation
fmadd.d f28, f23, f29, f30, rmm # perform operation
fmadd.d f28, f23, f29, f30, rne # perform operation
fmadd.d f28, f23, f29, f30, rtz # perform operation
fmadd.d f28, f23, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f23, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f23, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f23, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f23, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f23, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x8, 0xb8a9ef56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x97161e3d # load x3 with 32 MSBs 0x0000000097161e3d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097161e3d
sw x3, 0(x2) # store x3 (0x97161e3d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000097161e3d from memory into f24
fmadd.d f8, f9, f27, f24, dyn # perform operation
fmadd.d f8, f9, f27, f24, rdn # perform operation
fmadd.d f8, f9, f27, f24, rmm # perform operation
fmadd.d f8, f9, f27, f24, rne # perform operation
fmadd.d f8, f9, f27, f24, rtz # perform operation
fmadd.d f8, f9, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f9, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f9, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x12, 0x2779ac3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x18296ae0 # load x3 with 32 MSBs 0x0000000018296ae0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018296ae0
sw x3, 0(x2) # store x3 (0x18296ae0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000018296ae0 from memory into f2
fmadd.d f12, f30, f11, f2, dyn # perform operation
fmadd.d f12, f30, f11, f2, rdn # perform operation
fmadd.d f12, f30, f11, f2, rmm # perform operation
fmadd.d f12, f30, f11, f2, rne # perform operation
fmadd.d f12, f30, f11, f2, rtz # perform operation
fmadd.d f12, f30, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f30, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f30, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x12, 0x8b8f7868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0xdd9aa036 # load x3 with 32 MSBs 0x00000000dd9aa036
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd9aa036
sw x3, 0(x2) # store x3 (0xdd9aa036) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000dd9aa036 from memory into f10
fmadd.d f12, f15, f18, f10, dyn # perform operation
fmadd.d f12, f15, f18, f10, rdn # perform operation
fmadd.d f12, f15, f18, f10, rmm # perform operation
fmadd.d f12, f15, f18, f10, rne # perform operation
fmadd.d f12, f15, f18, f10, rtz # perform operation
fmadd.d f12, f15, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f15, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f15, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f15, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f15, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f15, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x18, 0x5d31bf76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x3cac98d5 # load x3 with 32 MSBs 0x000000003cac98d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cac98d5
sw x3, 0(x2) # store x3 (0x3cac98d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003cac98d5 from memory into f8
fmadd.d f18, f5, f2, f8, dyn # perform operation
fmadd.d f18, f5, f2, f8, rdn # perform operation
fmadd.d f18, f5, f2, f8, rmm # perform operation
fmadd.d f18, f5, f2, f8, rne # perform operation
fmadd.d f18, f5, f2, f8, rtz # perform operation
fmadd.d f18, f5, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f5, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f5, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f5, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f5, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f5, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x16, 0xbcdc8666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x0ee00073 # load x3 with 32 MSBs 0x000000000ee00073
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ee00073
sw x3, 0(x2) # store x3 (0x0ee00073) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000ee00073 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
fmadd.d f16, f15, f1, f17, dyn # perform operation
fmadd.d f16, f15, f1, f17, rdn # perform operation
fmadd.d f16, f15, f1, f17, rmm # perform operation
fmadd.d f16, f15, f1, f17, rne # perform operation
fmadd.d f16, f15, f1, f17, rtz # perform operation
fmadd.d f16, f15, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f15, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f15, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f15, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f15, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f15, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000000)
li x28, 0x585df662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x01b009c3 # load x3 with 32 MSBs 0x0000000001b009c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000001b009c3
sw x3, 0(x2) # store x3 (0x01b009c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000001b009c3 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fmadd.d f28, f7, f9, f10, dyn # perform operation
fmadd.d f28, f7, f9, f10, rdn # perform operation
fmadd.d f28, f7, f9, f10, rmm # perform operation
fmadd.d f28, f7, f9, f10, rne # perform operation
fmadd.d f28, f7, f9, f10, rtz # perform operation
fmadd.d f28, f7, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f7, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f7, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f7, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f7, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f7, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff0000000000000)
li x16, 0x1b3e746b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x0728d75c # load x3 with 32 MSBs 0x000000000728d75c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000728d75c
sw x3, 0(x2) # store x3 (0x0728d75c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000728d75c from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
fmadd.d f16, f12, f3, f22, dyn # perform operation
fmadd.d f16, f12, f3, f22, rdn # perform operation
fmadd.d f16, f12, f3, f22, rmm # perform operation
fmadd.d f16, f12, f3, f22, rne # perform operation
fmadd.d f16, f12, f3, f22, rtz # perform operation
fmadd.d f16, f12, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f12, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f12, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f12, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f12, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f12, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff0000000000000)
li x24, 0x1fe503ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x5cdcbc08 # load x3 with 32 MSBs 0x000000005cdcbc08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005cdcbc08
sw x3, 0(x2) # store x3 (0x5cdcbc08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005cdcbc08 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fmadd.d f24, f25, f6, f16, dyn # perform operation
fmadd.d f24, f25, f6, f16, rdn # perform operation
fmadd.d f24, f25, f6, f16, rmm # perform operation
fmadd.d f24, f25, f6, f16, rne # perform operation
fmadd.d f24, f25, f6, f16, rtz # perform operation
fmadd.d f24, f25, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f25, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f25, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f25, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f25, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f25, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff8000000000000)
li x17, 0x97feea54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0x5be8cf24 # load x3 with 32 MSBs 0x000000005be8cf24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005be8cf24
sw x3, 0(x2) # store x3 (0x5be8cf24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005be8cf24 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fmadd.d f17, f31, f18, f21, dyn # perform operation
fmadd.d f17, f31, f18, f21, rdn # perform operation
fmadd.d f17, f31, f18, f21, rmm # perform operation
fmadd.d f17, f31, f18, f21, rne # perform operation
fmadd.d f17, f31, f18, f21, rtz # perform operation
fmadd.d f17, f31, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f31, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff8000000000000)
li x28, 0xccfff757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0x10b1c1fa # load x3 with 32 MSBs 0x0000000010b1c1fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010b1c1fa
sw x3, 0(x2) # store x3 (0x10b1c1fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000010b1c1fa from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
fmadd.d f28, f5, f24, f2, dyn # perform operation
fmadd.d f28, f5, f24, f2, rdn # perform operation
fmadd.d f28, f5, f24, f2, rmm # perform operation
fmadd.d f28, f5, f24, f2, rne # perform operation
fmadd.d f28, f5, f24, f2, rtz # perform operation
fmadd.d f28, f5, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f5, f24, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000000000000000)
li x7, 0xbb4ddc7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0xd5d18492 # load x3 with 32 MSBs 0x00000000d5d18492
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5d18492
sw x3, 0(x2) # store x3 (0xd5d18492) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d5d18492 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fmadd.d f7, f16, f27, f3, dyn # perform operation
fmadd.d f7, f16, f27, f3, rdn # perform operation
fmadd.d f7, f16, f27, f3, rmm # perform operation
fmadd.d f7, f16, f27, f3, rne # perform operation
fmadd.d f7, f16, f27, f3, rtz # perform operation
fmadd.d f7, f16, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f16, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f16, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f16, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f16, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f16, f27, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000000000000000)
li x7, 0xca64c16a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0xea96e35a # load x3 with 32 MSBs 0x00000000ea96e35a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea96e35a
sw x3, 0(x2) # store x3 (0xea96e35a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000ea96e35a from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fmadd.d f7, f26, f30, f6, dyn # perform operation
fmadd.d f7, f26, f30, f6, rdn # perform operation
fmadd.d f7, f26, f30, f6, rmm # perform operation
fmadd.d f7, f26, f30, f6, rne # perform operation
fmadd.d f7, f26, f30, f6, rtz # perform operation
fmadd.d f7, f26, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f26, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f26, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x10000000000000)
li x20, 0x7455b8c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x377b2a71 # load x3 with 32 MSBs 0x00000000377b2a71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000377b2a71
sw x3, 0(x2) # store x3 (0x377b2a71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000377b2a71 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fmadd.d f20, f11, f6, f21, dyn # perform operation
fmadd.d f20, f11, f6, f21, rdn # perform operation
fmadd.d f20, f11, f6, f21, rmm # perform operation
fmadd.d f20, f11, f6, f21, rne # perform operation
fmadd.d f20, f11, f6, f21, rtz # perform operation
fmadd.d f20, f11, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f11, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f11, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8010000000000000)
li x7, 0x32027670 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x51a65c39 # load x3 with 32 MSBs 0x0000000051a65c39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051a65c39
sw x3, 0(x2) # store x3 (0x51a65c39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000051a65c39 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
fmadd.d f7, f8, f25, f12, dyn # perform operation
fmadd.d f7, f8, f25, f12, rdn # perform operation
fmadd.d f7, f8, f25, f12, rmm # perform operation
fmadd.d f7, f8, f25, f12, rne # perform operation
fmadd.d f7, f8, f25, f12, rtz # perform operation
fmadd.d f7, f8, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f8, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fefffffffffffff)
li x3, 0xa684af1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0xa59838a0 # load x3 with 32 MSBs 0x00000000a59838a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a59838a0
sw x3, 0(x2) # store x3 (0xa59838a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a59838a0 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fmadd.d f3, f31, f27, f7, dyn # perform operation
fmadd.d f3, f31, f27, f7, rdn # perform operation
fmadd.d f3, f31, f27, f7, rmm # perform operation
fmadd.d f3, f31, f27, f7, rne # perform operation
fmadd.d f3, f31, f27, f7, rtz # perform operation
fmadd.d f3, f31, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f31, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f31, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f31, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f31, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f31, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffefffffffffffff)
li x5, 0x01a758e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0xab5ad9f8 # load x3 with 32 MSBs 0x00000000ab5ad9f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab5ad9f8
sw x3, 0(x2) # store x3 (0xab5ad9f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ab5ad9f8 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
fmadd.d f5, f9, f13, f21, dyn # perform operation
fmadd.d f5, f9, f13, f21, rdn # perform operation
fmadd.d f5, f9, f13, f21, rmm # perform operation
fmadd.d f5, f9, f13, f21, rne # perform operation
fmadd.d f5, f9, f13, f21, rtz # perform operation
fmadd.d f5, f9, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f9, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f9, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f9, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f9, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f9, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfffffffffffff)
li x11, 0xab44de66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x20fbfed7 # load x3 with 32 MSBs 0x0000000020fbfed7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020fbfed7
sw x3, 0(x2) # store x3 (0x20fbfed7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000020fbfed7 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
fmadd.d f11, f22, f9, f4, dyn # perform operation
fmadd.d f11, f22, f9, f4, rdn # perform operation
fmadd.d f11, f22, f9, f4, rmm # perform operation
fmadd.d f11, f22, f9, f4, rne # perform operation
fmadd.d f11, f22, f9, f4, rtz # perform operation
fmadd.d f11, f22, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f22, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f22, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800fffffffffffff)
li x9, 0x02367493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0xe71c7235 # load x3 with 32 MSBs 0x00000000e71c7235
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e71c7235
sw x3, 0(x2) # store x3 (0xe71c7235) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e71c7235 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
fmadd.d f9, f27, f17, f28, dyn # perform operation
fmadd.d f9, f27, f17, f28, rdn # perform operation
fmadd.d f9, f27, f17, f28, rmm # perform operation
fmadd.d f9, f27, f17, f28, rne # perform operation
fmadd.d f9, f27, f17, f28, rtz # perform operation
fmadd.d f9, f27, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f27, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000)
li x13, 0x1888b5d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0xd97aa875 # load x3 with 32 MSBs 0x00000000d97aa875
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d97aa875
sw x3, 0(x2) # store x3 (0xd97aa875) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d97aa875 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fmadd.d f13, f22, f30, f4, dyn # perform operation
fmadd.d f13, f22, f30, f4, rdn # perform operation
fmadd.d f13, f22, f30, f4, rmm # perform operation
fmadd.d f13, f22, f30, f4, rne # perform operation
fmadd.d f13, f22, f30, f4, rtz # perform operation
fmadd.d f13, f22, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f22, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f22, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f22, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f22, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f22, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8008000000000000)
li x16, 0x0515ddd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0xe471d128 # load x3 with 32 MSBs 0x00000000e471d128
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e471d128
sw x3, 0(x2) # store x3 (0xe471d128) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e471d128 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
fmadd.d f16, f23, f8, f20, dyn # perform operation
fmadd.d f16, f23, f8, f20, rdn # perform operation
fmadd.d f16, f23, f8, f20, rmm # perform operation
fmadd.d f16, f23, f8, f20, rne # perform operation
fmadd.d f16, f23, f8, f20, rtz # perform operation
fmadd.d f16, f23, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f23, f8, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x10, 0xd497a887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0xdfe3aac9 # load x3 with 32 MSBs 0x00000000dfe3aac9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dfe3aac9
sw x3, 0(x2) # store x3 (0xdfe3aac9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000dfe3aac9 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fmadd.d f10, f11, f7, f23, dyn # perform operation
fmadd.d f10, f11, f7, f23, rdn # perform operation
fmadd.d f10, f11, f7, f23, rmm # perform operation
fmadd.d f10, f11, f7, f23, rne # perform operation
fmadd.d f10, f11, f7, f23, rtz # perform operation
fmadd.d f10, f11, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f11, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f11, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f11, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f11, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f11, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000001)
li x5, 0x18492c91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x79c5ea43 # load x3 with 32 MSBs 0x0000000079c5ea43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079c5ea43
sw x3, 0(x2) # store x3 (0x79c5ea43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000079c5ea43 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
fmadd.d f5, f8, f27, f15, dyn # perform operation
fmadd.d f5, f8, f27, f15, rdn # perform operation
fmadd.d f5, f8, f27, f15, rmm # perform operation
fmadd.d f5, f8, f27, f15, rne # perform operation
fmadd.d f5, f8, f27, f15, rtz # perform operation
fmadd.d f5, f8, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f8, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000000)
li x7, 0x10f8808b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x87faf181 # load x3 with 32 MSBs 0x0000000087faf181
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087faf181
sw x3, 0(x2) # store x3 (0x87faf181) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000087faf181 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fmadd.d f7, f11, f10, f5, dyn # perform operation
fmadd.d f7, f11, f10, f5, rdn # perform operation
fmadd.d f7, f11, f10, f5, rmm # perform operation
fmadd.d f7, f11, f10, f5, rne # perform operation
fmadd.d f7, f11, f10, f5, rtz # perform operation
fmadd.d f7, f11, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f11, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfff0000000000000)
li x12, 0xea006b43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x7226cb64 # load x3 with 32 MSBs 0x000000007226cb64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007226cb64
sw x3, 0(x2) # store x3 (0x7226cb64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007226cb64 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fmadd.d f12, f25, f21, f26, dyn # perform operation
fmadd.d f12, f25, f21, f26, rdn # perform operation
fmadd.d f12, f25, f21, f26, rmm # perform operation
fmadd.d f12, f25, f21, f26, rne # perform operation
fmadd.d f12, f25, f21, f26, rtz # perform operation
fmadd.d f12, f25, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f25, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff8000000000000)
li x5, 0x27a42210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0xb4360261 # load x3 with 32 MSBs 0x00000000b4360261
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4360261
sw x3, 0(x2) # store x3 (0xb4360261) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000b4360261 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fmadd.d f5, f27, f14, f8, dyn # perform operation
fmadd.d f5, f27, f14, f8, rdn # perform operation
fmadd.d f5, f27, f14, f8, rmm # perform operation
fmadd.d f5, f27, f14, f8, rne # perform operation
fmadd.d f5, f27, f14, f8, rtz # perform operation
fmadd.d f5, f27, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f27, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffffffffffff)
li x25, 0x4bd379a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x73219421 # load x3 with 32 MSBs 0x0000000073219421
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073219421
sw x3, 0(x2) # store x3 (0x73219421) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000073219421 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fmadd.d f25, f15, f7, f27, dyn # perform operation
fmadd.d f25, f15, f7, f27, rdn # perform operation
fmadd.d f25, f15, f7, f27, rmm # perform operation
fmadd.d f25, f15, f7, f27, rne # perform operation
fmadd.d f25, f15, f7, f27, rtz # perform operation
fmadd.d f25, f15, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f15, f7, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000001)
li x28, 0xc94f81ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x22cb39de # load x3 with 32 MSBs 0x0000000022cb39de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022cb39de
sw x3, 0(x2) # store x3 (0x22cb39de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000022cb39de from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fmadd.d f28, f16, f24, f19, dyn # perform operation
fmadd.d f28, f16, f24, f19, rdn # perform operation
fmadd.d f28, f16, f24, f19, rmm # perform operation
fmadd.d f28, f16, f24, f19, rne # perform operation
fmadd.d f28, f16, f24, f19, rtz # perform operation
fmadd.d f28, f16, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f16, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f16, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff7ffffffffffff)
li x31, 0x558720fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x58cf66f0 # load x3 with 32 MSBs 0x0000000058cf66f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058cf66f0
sw x3, 0(x2) # store x3 (0x58cf66f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000058cf66f0 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fmadd.d f31, f9, f25, f23, dyn # perform operation
fmadd.d f31, f9, f25, f23, rdn # perform operation
fmadd.d f31, f9, f25, f23, rmm # perform operation
fmadd.d f31, f9, f25, f23, rne # perform operation
fmadd.d f31, f9, f25, f23, rtz # perform operation
fmadd.d f31, f9, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f9, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f9, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x5a392534a57711ad)
li x27, 0x1f76c0c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0x65605ef0 # load x3 with 32 MSBs 0x0000000065605ef0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065605ef0
sw x3, 0(x2) # store x3 (0x65605ef0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000065605ef0 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fmadd.d f27, f17, f23, f10, dyn # perform operation
fmadd.d f27, f17, f23, f10, rdn # perform operation
fmadd.d f27, f17, f23, f10, rmm # perform operation
fmadd.d f27, f17, f23, f10, rne # perform operation
fmadd.d f27, f17, f23, f10, rtz # perform operation
fmadd.d f27, f17, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f17, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xa6e895993737426c)
li x26, 0x002487c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0xf38de67e # load x3 with 32 MSBs 0x00000000f38de67e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f38de67e
sw x3, 0(x2) # store x3 (0xf38de67e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f38de67e from memory into f28
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fmadd.d f26, f19, f28, f31, dyn # perform operation
fmadd.d f26, f19, f28, f31, rdn # perform operation
fmadd.d f26, f19, f28, f31, rmm # perform operation
fmadd.d f26, f19, f28, f31, rne # perform operation
fmadd.d f26, f19, f28, f31, rtz # perform operation
fmadd.d f26, f19, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f19, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x0)
li x6, 0x75e56ac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x37e65047 # load x3 with 32 MSBs 0x0000000037e65047
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037e65047
sw x3, 0(x2) # store x3 (0x37e65047) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000037e65047 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
fmadd.d f6, f18, f31, f9, dyn # perform operation
fmadd.d f6, f18, f31, f9, rdn # perform operation
fmadd.d f6, f18, f31, f9, rmm # perform operation
fmadd.d f6, f18, f31, f9, rne # perform operation
fmadd.d f6, f18, f31, f9, rtz # perform operation
fmadd.d f6, f18, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f18, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000000)
li x15, 0x7cf5a7f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0xed92470f # load x3 with 32 MSBs 0x00000000ed92470f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed92470f
sw x3, 0(x2) # store x3 (0xed92470f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ed92470f from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fmadd.d f15, f8, f28, f10, dyn # perform operation
fmadd.d f15, f8, f28, f10, rdn # perform operation
fmadd.d f15, f8, f28, f10, rmm # perform operation
fmadd.d f15, f8, f28, f10, rne # perform operation
fmadd.d f15, f8, f28, f10, rtz # perform operation
fmadd.d f15, f8, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f8, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f8, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff0000000000000)
li x16, 0x2966e6e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0xd29212cc # load x3 with 32 MSBs 0x00000000d29212cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d29212cc
sw x3, 0(x2) # store x3 (0xd29212cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d29212cc from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fmadd.d f16, f3, f20, f28, dyn # perform operation
fmadd.d f16, f3, f20, f28, rdn # perform operation
fmadd.d f16, f3, f20, f28, rmm # perform operation
fmadd.d f16, f3, f20, f28, rne # perform operation
fmadd.d f16, f3, f20, f28, rtz # perform operation
fmadd.d f16, f3, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f3, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff0000000000000)
li x19, 0xec7abe7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x46d98722 # load x3 with 32 MSBs 0x0000000046d98722
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046d98722
sw x3, 0(x2) # store x3 (0x46d98722) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000046d98722 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fmadd.d f19, f17, f5, f24, dyn # perform operation
fmadd.d f19, f17, f5, f24, rdn # perform operation
fmadd.d f19, f17, f5, f24, rmm # perform operation
fmadd.d f19, f17, f5, f24, rne # perform operation
fmadd.d f19, f17, f5, f24, rtz # perform operation
fmadd.d f19, f17, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f17, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f17, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff8000000000000)
li x19, 0x3f648228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0xfa6e5f33 # load x3 with 32 MSBs 0x00000000fa6e5f33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa6e5f33
sw x3, 0(x2) # store x3 (0xfa6e5f33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000fa6e5f33 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fmadd.d f19, f3, f4, f7, dyn # perform operation
fmadd.d f19, f3, f4, f7, rdn # perform operation
fmadd.d f19, f3, f4, f7, rmm # perform operation
fmadd.d f19, f3, f4, f7, rne # perform operation
fmadd.d f19, f3, f4, f7, rtz # perform operation
fmadd.d f19, f3, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f3, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f3, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff8000000000000)
li x30, 0xe0d586b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x9cba3896 # load x3 with 32 MSBs 0x000000009cba3896
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cba3896
sw x3, 0(x2) # store x3 (0x9cba3896) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009cba3896 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fmadd.d f30, f20, f5, f31, dyn # perform operation
fmadd.d f30, f20, f5, f31, rdn # perform operation
fmadd.d f30, f20, f5, f31, rmm # perform operation
fmadd.d f30, f20, f5, f31, rne # perform operation
fmadd.d f30, f20, f5, f31, rtz # perform operation
fmadd.d f30, f20, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f20, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x4000000000000000)
li x13, 0xabfa47af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0xdda9fc5b # load x3 with 32 MSBs 0x00000000dda9fc5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dda9fc5b
sw x3, 0(x2) # store x3 (0xdda9fc5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000dda9fc5b from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fmadd.d f13, f1, f12, f5, dyn # perform operation
fmadd.d f13, f1, f12, f5, rdn # perform operation
fmadd.d f13, f1, f12, f5, rmm # perform operation
fmadd.d f13, f1, f12, f5, rne # perform operation
fmadd.d f13, f1, f12, f5, rtz # perform operation
fmadd.d f13, f1, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f1, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xc000000000000000)
li x27, 0xac7324f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x1884db54 # load x3 with 32 MSBs 0x000000001884db54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001884db54
sw x3, 0(x2) # store x3 (0x1884db54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001884db54 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fmadd.d f27, f23, f13, f30, dyn # perform operation
fmadd.d f27, f23, f13, f30, rdn # perform operation
fmadd.d f27, f23, f13, f30, rmm # perform operation
fmadd.d f27, f23, f13, f30, rne # perform operation
fmadd.d f27, f23, f13, f30, rtz # perform operation
fmadd.d f27, f23, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f23, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f23, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x10000000000000)
li x6, 0xdebb5a5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x6b2bc3f0 # load x3 with 32 MSBs 0x000000006b2bc3f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b2bc3f0
sw x3, 0(x2) # store x3 (0x6b2bc3f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006b2bc3f0 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fmadd.d f6, f17, f27, f9, dyn # perform operation
fmadd.d f6, f17, f27, f9, rdn # perform operation
fmadd.d f6, f17, f27, f9, rmm # perform operation
fmadd.d f6, f17, f27, f9, rne # perform operation
fmadd.d f6, f17, f27, f9, rtz # perform operation
fmadd.d f6, f17, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f17, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8010000000000000)
li x24, 0xee6f3359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0xa36358eb # load x3 with 32 MSBs 0x00000000a36358eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a36358eb
sw x3, 0(x2) # store x3 (0xa36358eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a36358eb from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
fmadd.d f24, f10, f26, f11, dyn # perform operation
fmadd.d f24, f10, f26, f11, rdn # perform operation
fmadd.d f24, f10, f26, f11, rmm # perform operation
fmadd.d f24, f10, f26, f11, rne # perform operation
fmadd.d f24, f10, f26, f11, rtz # perform operation
fmadd.d f24, f10, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f10, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fefffffffffffff)
li x15, 0x75cd26bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x76c1e275 # load x3 with 32 MSBs 0x0000000076c1e275
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076c1e275
sw x3, 0(x2) # store x3 (0x76c1e275) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000076c1e275 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fmadd.d f15, f4, f7, f29, dyn # perform operation
fmadd.d f15, f4, f7, f29, rdn # perform operation
fmadd.d f15, f4, f7, f29, rmm # perform operation
fmadd.d f15, f4, f7, f29, rne # perform operation
fmadd.d f15, f4, f7, f29, rtz # perform operation
fmadd.d f15, f4, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f4, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f4, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f4, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f4, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f4, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xffefffffffffffff)
li x14, 0x11ff6d8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x1dfaa102 # load x3 with 32 MSBs 0x000000001dfaa102
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001dfaa102
sw x3, 0(x2) # store x3 (0x1dfaa102) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000001dfaa102 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fmadd.d f14, f31, f9, f7, dyn # perform operation
fmadd.d f14, f31, f9, f7, rdn # perform operation
fmadd.d f14, f31, f9, f7, rmm # perform operation
fmadd.d f14, f31, f9, f7, rne # perform operation
fmadd.d f14, f31, f9, f7, rtz # perform operation
fmadd.d f14, f31, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f31, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f31, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f31, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f31, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f31, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfffffffffffff)
li x16, 0x45ed0b70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x38b767e9 # load x3 with 32 MSBs 0x0000000038b767e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038b767e9
sw x3, 0(x2) # store x3 (0x38b767e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000038b767e9 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fmadd.d f16, f20, f2, f18, dyn # perform operation
fmadd.d f16, f20, f2, f18, rdn # perform operation
fmadd.d f16, f20, f2, f18, rmm # perform operation
fmadd.d f16, f20, f2, f18, rne # perform operation
fmadd.d f16, f20, f2, f18, rtz # perform operation
fmadd.d f16, f20, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f20, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f20, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f20, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f20, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f20, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x800fffffffffffff)
li x9, 0x6662d7ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x2644d3be # load x3 with 32 MSBs 0x000000002644d3be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002644d3be
sw x3, 0(x2) # store x3 (0x2644d3be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002644d3be from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fmadd.d f9, f19, f25, f21, dyn # perform operation
fmadd.d f9, f19, f25, f21, rdn # perform operation
fmadd.d f9, f19, f25, f21, rmm # perform operation
fmadd.d f9, f19, f25, f21, rne # perform operation
fmadd.d f9, f19, f25, f21, rtz # perform operation
fmadd.d f9, f19, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f19, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000)
li x11, 0xabcec495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x578ccf0d # load x3 with 32 MSBs 0x00000000578ccf0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000578ccf0d
sw x3, 0(x2) # store x3 (0x578ccf0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000578ccf0d from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fmadd.d f11, f17, f30, f14, dyn # perform operation
fmadd.d f11, f17, f30, f14, rdn # perform operation
fmadd.d f11, f17, f30, f14, rmm # perform operation
fmadd.d f11, f17, f30, f14, rne # perform operation
fmadd.d f11, f17, f30, f14, rtz # perform operation
fmadd.d f11, f17, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f17, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8008000000000000)
li x6, 0x23325e6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x0281a499 # load x3 with 32 MSBs 0x000000000281a499
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000281a499
sw x3, 0(x2) # store x3 (0x0281a499) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000281a499 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fmadd.d f6, f1, f7, f30, dyn # perform operation
fmadd.d f6, f1, f7, f30, rdn # perform operation
fmadd.d f6, f1, f7, f30, rmm # perform operation
fmadd.d f6, f1, f7, f30, rne # perform operation
fmadd.d f6, f1, f7, f30, rtz # perform operation
fmadd.d f6, f1, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f1, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f1, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f1, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f1, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f1, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x1)
li x11, 0xbfa532c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x7f535519 # load x3 with 32 MSBs 0x000000007f535519
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f535519
sw x3, 0(x2) # store x3 (0x7f535519) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000007f535519 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fmadd.d f11, f23, f14, f28, dyn # perform operation
fmadd.d f11, f23, f14, f28, rdn # perform operation
fmadd.d f11, f23, f14, f28, rmm # perform operation
fmadd.d f11, f23, f14, f28, rne # perform operation
fmadd.d f11, f23, f14, f28, rtz # perform operation
fmadd.d f11, f23, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f23, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f23, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f23, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f23, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f23, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000001)
li x14, 0x03e7c474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x508e937c # load x3 with 32 MSBs 0x00000000508e937c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000508e937c
sw x3, 0(x2) # store x3 (0x508e937c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000508e937c from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fmadd.d f14, f1, f11, f23, dyn # perform operation
fmadd.d f14, f1, f11, f23, rdn # perform operation
fmadd.d f14, f1, f11, f23, rmm # perform operation
fmadd.d f14, f1, f11, f23, rne # perform operation
fmadd.d f14, f1, f11, f23, rtz # perform operation
fmadd.d f14, f1, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f1, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000000)
li x9, 0x8a057a70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0xcaaafcb8 # load x3 with 32 MSBs 0x00000000caaafcb8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000caaafcb8
sw x3, 0(x2) # store x3 (0xcaaafcb8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000caaafcb8 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fmadd.d f9, f28, f7, f14, dyn # perform operation
fmadd.d f9, f28, f7, f14, rdn # perform operation
fmadd.d f9, f28, f7, f14, rmm # perform operation
fmadd.d f9, f28, f7, f14, rne # perform operation
fmadd.d f9, f28, f7, f14, rtz # perform operation
fmadd.d f9, f28, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f28, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f28, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfff0000000000000)
li x9, 0x86ca5c36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
li x3, 0x7cee657e # load x3 with 32 MSBs 0x000000007cee657e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cee657e
sw x3, 0(x2) # store x3 (0x7cee657e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007cee657e from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fmadd.d f9, f2, f5, f30, dyn # perform operation
fmadd.d f9, f2, f5, f30, rdn # perform operation
fmadd.d f9, f2, f5, f30, rmm # perform operation
fmadd.d f9, f2, f5, f30, rne # perform operation
fmadd.d f9, f2, f5, f30, rtz # perform operation
fmadd.d f9, f2, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f2, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f2, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f2, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f2, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f2, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff8000000000000)
li x26, 0x73829a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xb3535b43 # load x3 with 32 MSBs 0x00000000b3535b43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3535b43
sw x3, 0(x2) # store x3 (0xb3535b43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b3535b43 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fmadd.d f26, f16, f9, f24, dyn # perform operation
fmadd.d f26, f16, f9, f24, rdn # perform operation
fmadd.d f26, f16, f9, f24, rmm # perform operation
fmadd.d f26, f16, f9, f24, rne # perform operation
fmadd.d f26, f16, f9, f24, rtz # perform operation
fmadd.d f26, f16, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f16, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f16, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fffffffffffffff)
li x22, 0xc8af3745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0xda236605 # load x3 with 32 MSBs 0x00000000da236605
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da236605
sw x3, 0(x2) # store x3 (0xda236605) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000da236605 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fmadd.d f22, f29, f3, f16, dyn # perform operation
fmadd.d f22, f29, f3, f16, rdn # perform operation
fmadd.d f22, f29, f3, f16, rmm # perform operation
fmadd.d f22, f29, f3, f16, rne # perform operation
fmadd.d f22, f29, f3, f16, rtz # perform operation
fmadd.d f22, f29, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f29, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000001)
li x22, 0x3f4a3dd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x589602c0 # load x3 with 32 MSBs 0x00000000589602c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000589602c0
sw x3, 0(x2) # store x3 (0x589602c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000589602c0 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fmadd.d f22, f18, f28, f7, dyn # perform operation
fmadd.d f22, f18, f28, f7, rdn # perform operation
fmadd.d f22, f18, f28, f7, rmm # perform operation
fmadd.d f22, f18, f28, f7, rne # perform operation
fmadd.d f22, f18, f28, f7, rtz # perform operation
fmadd.d f22, f18, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f18, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff7ffffffffffff)
li x23, 0xfceb03e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0xa5e2a91b # load x3 with 32 MSBs 0x00000000a5e2a91b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5e2a91b
sw x3, 0(x2) # store x3 (0xa5e2a91b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a5e2a91b from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
fmadd.d f23, f12, f30, f1, dyn # perform operation
fmadd.d f23, f12, f30, f1, rdn # perform operation
fmadd.d f23, f12, f30, f1, rmm # perform operation
fmadd.d f23, f12, f30, f1, rne # perform operation
fmadd.d f23, f12, f30, f1, rtz # perform operation
fmadd.d f23, f12, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f12, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x5a392534a57711ad)
li x15, 0x2fd71890 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0x7040acbb # load x3 with 32 MSBs 0x000000007040acbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007040acbb
sw x3, 0(x2) # store x3 (0x7040acbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000007040acbb from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fmadd.d f15, f11, f29, f22, dyn # perform operation
fmadd.d f15, f11, f29, f22, rdn # perform operation
fmadd.d f15, f11, f29, f22, rmm # perform operation
fmadd.d f15, f11, f29, f22, rne # perform operation
fmadd.d f15, f11, f29, f22, rtz # perform operation
fmadd.d f15, f11, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f11, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xa6e895993737426c)
li x12, 0xf735697f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x1cfc56fc # load x3 with 32 MSBs 0x000000001cfc56fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cfc56fc
sw x3, 0(x2) # store x3 (0x1cfc56fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001cfc56fc from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fmadd.d f12, f27, f31, f9, dyn # perform operation
fmadd.d f12, f27, f31, f9, rdn # perform operation
fmadd.d f12, f27, f31, f9, rmm # perform operation
fmadd.d f12, f27, f31, f9, rne # perform operation
fmadd.d f12, f27, f31, f9, rtz # perform operation
fmadd.d f12, f27, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f27, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f27, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x0)
li x5, 0xb73f8e8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x7dd8c87f # load x3 with 32 MSBs 0x000000007dd8c87f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007dd8c87f
sw x3, 0(x2) # store x3 (0x7dd8c87f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000007dd8c87f from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fmadd.d f5, f17, f29, f18, dyn # perform operation
fmadd.d f5, f17, f29, f18, rdn # perform operation
fmadd.d f5, f17, f29, f18, rmm # perform operation
fmadd.d f5, f17, f29, f18, rne # perform operation
fmadd.d f5, f17, f29, f18, rtz # perform operation
fmadd.d f5, f17, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f17, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000000)
li x17, 0x274a0d01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x444c033c # load x3 with 32 MSBs 0x00000000444c033c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000444c033c
sw x3, 0(x2) # store x3 (0x444c033c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000444c033c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fmadd.d f17, f28, f18, f21, dyn # perform operation
fmadd.d f17, f28, f18, f21, rdn # perform operation
fmadd.d f17, f28, f18, f21, rmm # perform operation
fmadd.d f17, f28, f18, f21, rne # perform operation
fmadd.d f17, f28, f18, f21, rtz # perform operation
fmadd.d f17, f28, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f28, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f28, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff0000000000000)
li x24, 0xab54e38b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0x79a23c92 # load x3 with 32 MSBs 0x0000000079a23c92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079a23c92
sw x3, 0(x2) # store x3 (0x79a23c92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000079a23c92 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fmadd.d f24, f20, f31, f21, dyn # perform operation
fmadd.d f24, f20, f31, f21, rdn # perform operation
fmadd.d f24, f20, f31, f21, rmm # perform operation
fmadd.d f24, f20, f31, f21, rne # perform operation
fmadd.d f24, f20, f31, f21, rtz # perform operation
fmadd.d f24, f20, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f20, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff0000000000000)
li x27, 0xbc77256e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0xeee50e62 # load x3 with 32 MSBs 0x00000000eee50e62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eee50e62
sw x3, 0(x2) # store x3 (0xeee50e62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000eee50e62 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fmadd.d f27, f31, f14, f12, dyn # perform operation
fmadd.d f27, f31, f14, f12, rdn # perform operation
fmadd.d f27, f31, f14, f12, rmm # perform operation
fmadd.d f27, f31, f14, f12, rne # perform operation
fmadd.d f27, f31, f14, f12, rtz # perform operation
fmadd.d f27, f31, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f31, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f31, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f31, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f31, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f31, f14, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff8000000000000)
li x13, 0xa4575084 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x6c149c7a # load x3 with 32 MSBs 0x000000006c149c7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c149c7a
sw x3, 0(x2) # store x3 (0x6c149c7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006c149c7a from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
fmadd.d f13, f2, f9, f10, dyn # perform operation
fmadd.d f13, f2, f9, f10, rdn # perform operation
fmadd.d f13, f2, f9, f10, rmm # perform operation
fmadd.d f13, f2, f9, f10, rne # perform operation
fmadd.d f13, f2, f9, f10, rtz # perform operation
fmadd.d f13, f2, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f2, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff8000000000000)
li x9, 0xd6891755 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x5816dadb # load x3 with 32 MSBs 0x000000005816dadb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005816dadb
sw x3, 0(x2) # store x3 (0x5816dadb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005816dadb from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
fmadd.d f9, f15, f25, f18, dyn # perform operation
fmadd.d f9, f15, f25, f18, rdn # perform operation
fmadd.d f9, f15, f25, f18, rmm # perform operation
fmadd.d f9, f15, f25, f18, rne # perform operation
fmadd.d f9, f15, f25, f18, rtz # perform operation
fmadd.d f9, f15, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f15, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x4000000000000000)
li x15, 0x8a0f04f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x975bed9a # load x3 with 32 MSBs 0x00000000975bed9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000975bed9a
sw x3, 0(x2) # store x3 (0x975bed9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000975bed9a from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fmadd.d f15, f17, f16, f4, dyn # perform operation
fmadd.d f15, f17, f16, f4, rdn # perform operation
fmadd.d f15, f17, f16, f4, rmm # perform operation
fmadd.d f15, f17, f16, f4, rne # perform operation
fmadd.d f15, f17, f16, f4, rtz # perform operation
fmadd.d f15, f17, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f17, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f17, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xc000000000000000)
li x6, 0x67f6b323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x23be6f72 # load x3 with 32 MSBs 0x0000000023be6f72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023be6f72
sw x3, 0(x2) # store x3 (0x23be6f72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000023be6f72 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fmadd.d f6, f22, f25, f13, dyn # perform operation
fmadd.d f6, f22, f25, f13, rdn # perform operation
fmadd.d f6, f22, f25, f13, rmm # perform operation
fmadd.d f6, f22, f25, f13, rne # perform operation
fmadd.d f6, f22, f25, f13, rtz # perform operation
fmadd.d f6, f22, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f22, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x10000000000000)
li x28, 0x507a720b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0xdf0fd8da # load x3 with 32 MSBs 0x00000000df0fd8da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df0fd8da
sw x3, 0(x2) # store x3 (0xdf0fd8da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000df0fd8da from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fmadd.d f28, f20, f11, f4, dyn # perform operation
fmadd.d f28, f20, f11, f4, rdn # perform operation
fmadd.d f28, f20, f11, f4, rmm # perform operation
fmadd.d f28, f20, f11, f4, rne # perform operation
fmadd.d f28, f20, f11, f4, rtz # perform operation
fmadd.d f28, f20, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f20, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8010000000000000)
li x13, 0x203163f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
li x3, 0x6d46e0f8 # load x3 with 32 MSBs 0x000000006d46e0f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d46e0f8
sw x3, 0(x2) # store x3 (0x6d46e0f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006d46e0f8 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fmadd.d f13, f9, f14, f28, dyn # perform operation
fmadd.d f13, f9, f14, f28, rdn # perform operation
fmadd.d f13, f9, f14, f28, rmm # perform operation
fmadd.d f13, f9, f14, f28, rne # perform operation
fmadd.d f13, f9, f14, f28, rtz # perform operation
fmadd.d f13, f9, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f9, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f9, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fefffffffffffff)
li x30, 0x86a43108 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x4a2cf047 # load x3 with 32 MSBs 0x000000004a2cf047
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a2cf047
sw x3, 0(x2) # store x3 (0x4a2cf047) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000004a2cf047 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fmadd.d f30, f28, f12, f13, dyn # perform operation
fmadd.d f30, f28, f12, f13, rdn # perform operation
fmadd.d f30, f28, f12, f13, rmm # perform operation
fmadd.d f30, f28, f12, f13, rne # perform operation
fmadd.d f30, f28, f12, f13, rtz # perform operation
fmadd.d f30, f28, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f28, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f28, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xffefffffffffffff)
li x11, 0xe736df0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x59cc6d90 # load x3 with 32 MSBs 0x0000000059cc6d90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059cc6d90
sw x3, 0(x2) # store x3 (0x59cc6d90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000059cc6d90 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fmadd.d f11, f15, f23, f5, dyn # perform operation
fmadd.d f11, f15, f23, f5, rdn # perform operation
fmadd.d f11, f15, f23, f5, rmm # perform operation
fmadd.d f11, f15, f23, f5, rne # perform operation
fmadd.d f11, f15, f23, f5, rtz # perform operation
fmadd.d f11, f15, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f15, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f15, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f15, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f15, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f15, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfffffffffffff)
li x29, 0xea089517 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xfce290e8 # load x3 with 32 MSBs 0x00000000fce290e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fce290e8
sw x3, 0(x2) # store x3 (0xfce290e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000fce290e8 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fmadd.d f29, f1, f11, f23, dyn # perform operation
fmadd.d f29, f1, f11, f23, rdn # perform operation
fmadd.d f29, f1, f11, f23, rmm # perform operation
fmadd.d f29, f1, f11, f23, rne # perform operation
fmadd.d f29, f1, f11, f23, rtz # perform operation
fmadd.d f29, f1, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f1, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x800fffffffffffff)
li x15, 0xa36b2a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0x5080641c # load x3 with 32 MSBs 0x000000005080641c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005080641c
sw x3, 0(x2) # store x3 (0x5080641c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005080641c from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fmadd.d f15, f20, f29, f18, dyn # perform operation
fmadd.d f15, f20, f29, f18, rdn # perform operation
fmadd.d f15, f20, f29, f18, rmm # perform operation
fmadd.d f15, f20, f29, f18, rne # perform operation
fmadd.d f15, f20, f29, f18, rtz # perform operation
fmadd.d f15, f20, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f20, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f20, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000)
li x7, 0x2e0e23a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0xf3cb91ac # load x3 with 32 MSBs 0x00000000f3cb91ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3cb91ac
sw x3, 0(x2) # store x3 (0xf3cb91ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f3cb91ac from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fmadd.d f7, f14, f4, f24, dyn # perform operation
fmadd.d f7, f14, f4, f24, rdn # perform operation
fmadd.d f7, f14, f4, f24, rmm # perform operation
fmadd.d f7, f14, f4, f24, rne # perform operation
fmadd.d f7, f14, f4, f24, rtz # perform operation
fmadd.d f7, f14, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f14, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8008000000000000)
li x20, 0x99f38e8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0xcfd4a9e8 # load x3 with 32 MSBs 0x00000000cfd4a9e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfd4a9e8
sw x3, 0(x2) # store x3 (0xcfd4a9e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000cfd4a9e8 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fmadd.d f20, f27, f18, f29, dyn # perform operation
fmadd.d f20, f27, f18, f29, rdn # perform operation
fmadd.d f20, f27, f18, f29, rmm # perform operation
fmadd.d f20, f27, f18, f29, rne # perform operation
fmadd.d f20, f27, f18, f29, rtz # perform operation
fmadd.d f20, f27, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f27, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x1)
li x31, 0xc8bfa08e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xc9117b8f # load x3 with 32 MSBs 0x00000000c9117b8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9117b8f
sw x3, 0(x2) # store x3 (0xc9117b8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c9117b8f from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fmadd.d f31, f21, f25, f23, dyn # perform operation
fmadd.d f31, f21, f25, f23, rdn # perform operation
fmadd.d f31, f21, f25, f23, rmm # perform operation
fmadd.d f31, f21, f25, f23, rne # perform operation
fmadd.d f31, f21, f25, f23, rtz # perform operation
fmadd.d f31, f21, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f21, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f21, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f21, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f21, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f21, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000001)
li x4, 0xcbf72a3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0xdc7ff0d6 # load x3 with 32 MSBs 0x00000000dc7ff0d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc7ff0d6
sw x3, 0(x2) # store x3 (0xdc7ff0d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000dc7ff0d6 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fmadd.d f4, f29, f25, f23, dyn # perform operation
fmadd.d f4, f29, f25, f23, rdn # perform operation
fmadd.d f4, f29, f25, f23, rmm # perform operation
fmadd.d f4, f29, f25, f23, rne # perform operation
fmadd.d f4, f29, f25, f23, rtz # perform operation
fmadd.d f4, f29, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f29, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f29, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f29, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f29, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f29, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000000)
li x22, 0x67aca7d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x5514830f # load x3 with 32 MSBs 0x000000005514830f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005514830f
sw x3, 0(x2) # store x3 (0x5514830f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000005514830f from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fmadd.d f22, f17, f23, f1, dyn # perform operation
fmadd.d f22, f17, f23, f1, rdn # perform operation
fmadd.d f22, f17, f23, f1, rmm # perform operation
fmadd.d f22, f17, f23, f1, rne # perform operation
fmadd.d f22, f17, f23, f1, rtz # perform operation
fmadd.d f22, f17, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f17, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f17, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfff0000000000000)
li x27, 0x29f7e5a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xa2297f5f # load x3 with 32 MSBs 0x00000000a2297f5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2297f5f
sw x3, 0(x2) # store x3 (0xa2297f5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a2297f5f from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
fmadd.d f27, f21, f13, f22, dyn # perform operation
fmadd.d f27, f21, f13, f22, rdn # perform operation
fmadd.d f27, f21, f13, f22, rmm # perform operation
fmadd.d f27, f21, f13, f22, rne # perform operation
fmadd.d f27, f21, f13, f22, rtz # perform operation
fmadd.d f27, f21, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f21, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff8000000000000)
li x24, 0xb4f1709b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0x18660218 # load x3 with 32 MSBs 0x0000000018660218
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018660218
sw x3, 0(x2) # store x3 (0x18660218) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000018660218 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
fmadd.d f24, f26, f27, f25, dyn # perform operation
fmadd.d f24, f26, f27, f25, rdn # perform operation
fmadd.d f24, f26, f27, f25, rmm # perform operation
fmadd.d f24, f26, f27, f25, rne # perform operation
fmadd.d f24, f26, f27, f25, rtz # perform operation
fmadd.d f24, f26, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f26, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f26, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fffffffffffffff)
li x12, 0x49aba388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0xbbdf7ab6 # load x3 with 32 MSBs 0x00000000bbdf7ab6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbdf7ab6
sw x3, 0(x2) # store x3 (0xbbdf7ab6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000bbdf7ab6 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fmadd.d f12, f8, f5, f28, dyn # perform operation
fmadd.d f12, f8, f5, f28, rdn # perform operation
fmadd.d f12, f8, f5, f28, rmm # perform operation
fmadd.d f12, f8, f5, f28, rne # perform operation
fmadd.d f12, f8, f5, f28, rtz # perform operation
fmadd.d f12, f8, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f8, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f8, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f8, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f8, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f8, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000001)
li x11, 0x0cbba4ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0x803b4bf7 # load x3 with 32 MSBs 0x00000000803b4bf7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000803b4bf7
sw x3, 0(x2) # store x3 (0x803b4bf7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000803b4bf7 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fmadd.d f11, f3, f24, f7, dyn # perform operation
fmadd.d f11, f3, f24, f7, rdn # perform operation
fmadd.d f11, f3, f24, f7, rmm # perform operation
fmadd.d f11, f3, f24, f7, rne # perform operation
fmadd.d f11, f3, f24, f7, rtz # perform operation
fmadd.d f11, f3, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f3, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f3, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x13, 0x6fd0d369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xd1102f45 # load x3 with 32 MSBs 0x00000000d1102f45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1102f45
sw x3, 0(x2) # store x3 (0xd1102f45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d1102f45 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fmadd.d f13, f21, f27, f29, dyn # perform operation
fmadd.d f13, f21, f27, f29, rdn # perform operation
fmadd.d f13, f21, f27, f29, rmm # perform operation
fmadd.d f13, f21, f27, f29, rne # perform operation
fmadd.d f13, f21, f27, f29, rtz # perform operation
fmadd.d f13, f21, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f21, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f21, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f21, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f21, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f21, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x5a392534a57711ad)
li x17, 0xd204e980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x8f66ca17 # load x3 with 32 MSBs 0x000000008f66ca17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f66ca17
sw x3, 0(x2) # store x3 (0x8f66ca17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000008f66ca17 from memory into f24
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fmadd.d f17, f1, f24, f25, dyn # perform operation
fmadd.d f17, f1, f24, f25, rdn # perform operation
fmadd.d f17, f1, f24, f25, rmm # perform operation
fmadd.d f17, f1, f24, f25, rne # perform operation
fmadd.d f17, f1, f24, f25, rtz # perform operation
fmadd.d f17, f1, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f1, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xa6e895993737426c)
li x15, 0x29ac9a74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x18532d62 # load x3 with 32 MSBs 0x0000000018532d62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018532d62
sw x3, 0(x2) # store x3 (0x18532d62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000018532d62 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fmadd.d f15, f14, f25, f8, dyn # perform operation
fmadd.d f15, f14, f25, f8, rdn # perform operation
fmadd.d f15, f14, f25, f8, rmm # perform operation
fmadd.d f15, f14, f25, f8, rne # perform operation
fmadd.d f15, f14, f25, f8, rtz # perform operation
fmadd.d f15, f14, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f14, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x0)
li x15, 0xfdfad857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x219a2ea8 # load x3 with 32 MSBs 0x00000000219a2ea8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000219a2ea8
sw x3, 0(x2) # store x3 (0x219a2ea8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000219a2ea8 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
fmadd.d f15, f5, f17, f21, dyn # perform operation
fmadd.d f15, f5, f17, f21, rdn # perform operation
fmadd.d f15, f5, f17, f21, rmm # perform operation
fmadd.d f15, f5, f17, f21, rne # perform operation
fmadd.d f15, f5, f17, f21, rtz # perform operation
fmadd.d f15, f5, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f5, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f5, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f5, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f5, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f5, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000000)
li x11, 0x3b8fb015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x9fbc3988 # load x3 with 32 MSBs 0x000000009fbc3988
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fbc3988
sw x3, 0(x2) # store x3 (0x9fbc3988) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009fbc3988 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fmadd.d f11, f5, f12, f13, dyn # perform operation
fmadd.d f11, f5, f12, f13, rdn # perform operation
fmadd.d f11, f5, f12, f13, rmm # perform operation
fmadd.d f11, f5, f12, f13, rne # perform operation
fmadd.d f11, f5, f12, f13, rtz # perform operation
fmadd.d f11, f5, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f5, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff0000000000000)
li x27, 0xeb5e66f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0x945a164c # load x3 with 32 MSBs 0x00000000945a164c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000945a164c
sw x3, 0(x2) # store x3 (0x945a164c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000945a164c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fmadd.d f27, f25, f18, f29, dyn # perform operation
fmadd.d f27, f25, f18, f29, rdn # perform operation
fmadd.d f27, f25, f18, f29, rmm # perform operation
fmadd.d f27, f25, f18, f29, rne # perform operation
fmadd.d f27, f25, f18, f29, rtz # perform operation
fmadd.d f27, f25, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f25, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f25, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f25, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f25, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f25, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff0000000000000)
li x5, 0x41d89caa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0xf0b9b0a7 # load x3 with 32 MSBs 0x00000000f0b9b0a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0b9b0a7
sw x3, 0(x2) # store x3 (0xf0b9b0a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f0b9b0a7 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
fmadd.d f5, f30, f6, f1, dyn # perform operation
fmadd.d f5, f30, f6, f1, rdn # perform operation
fmadd.d f5, f30, f6, f1, rmm # perform operation
fmadd.d f5, f30, f6, f1, rne # perform operation
fmadd.d f5, f30, f6, f1, rtz # perform operation
fmadd.d f5, f30, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f30, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff8000000000000)
li x18, 0x1a0be997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0x5820437c # load x3 with 32 MSBs 0x000000005820437c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005820437c
sw x3, 0(x2) # store x3 (0x5820437c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000005820437c from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fmadd.d f18, f19, f1, f2, dyn # perform operation
fmadd.d f18, f19, f1, f2, rdn # perform operation
fmadd.d f18, f19, f1, f2, rmm # perform operation
fmadd.d f18, f19, f1, f2, rne # perform operation
fmadd.d f18, f19, f1, f2, rtz # perform operation
fmadd.d f18, f19, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f19, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f19, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f19, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f19, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f19, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff8000000000000)
li x19, 0x4b0462e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x779282cf # load x3 with 32 MSBs 0x00000000779282cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000779282cf
sw x3, 0(x2) # store x3 (0x779282cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000779282cf from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fmadd.d f19, f21, f11, f8, dyn # perform operation
fmadd.d f19, f21, f11, f8, rdn # perform operation
fmadd.d f19, f21, f11, f8, rmm # perform operation
fmadd.d f19, f21, f11, f8, rne # perform operation
fmadd.d f19, f21, f11, f8, rtz # perform operation
fmadd.d f19, f21, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f21, f11, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x4000000000000000)
li x31, 0x5348d88d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0x44113bca # load x3 with 32 MSBs 0x0000000044113bca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044113bca
sw x3, 0(x2) # store x3 (0x44113bca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000044113bca from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fmadd.d f31, f26, f17, f30, dyn # perform operation
fmadd.d f31, f26, f17, f30, rdn # perform operation
fmadd.d f31, f26, f17, f30, rmm # perform operation
fmadd.d f31, f26, f17, f30, rne # perform operation
fmadd.d f31, f26, f17, f30, rtz # perform operation
fmadd.d f31, f26, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f26, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f26, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f26, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f26, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f26, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xc000000000000000)
li x27, 0x52a8258a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x96de50a8 # load x3 with 32 MSBs 0x0000000096de50a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096de50a8
sw x3, 0(x2) # store x3 (0x96de50a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000096de50a8 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fmadd.d f27, f31, f10, f9, dyn # perform operation
fmadd.d f27, f31, f10, f9, rdn # perform operation
fmadd.d f27, f31, f10, f9, rmm # perform operation
fmadd.d f27, f31, f10, f9, rne # perform operation
fmadd.d f27, f31, f10, f9, rtz # perform operation
fmadd.d f27, f31, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f31, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x10000000000000)
li x2, 0x17f7f8c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0xe3c6f8fa # load x3 with 32 MSBs 0x00000000e3c6f8fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3c6f8fa
sw x3, 0(x2) # store x3 (0xe3c6f8fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e3c6f8fa from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fmadd.d f2, f4, f13, f10, dyn # perform operation
fmadd.d f2, f4, f13, f10, rdn # perform operation
fmadd.d f2, f4, f13, f10, rmm # perform operation
fmadd.d f2, f4, f13, f10, rne # perform operation
fmadd.d f2, f4, f13, f10, rtz # perform operation
fmadd.d f2, f4, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f4, f13, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8010000000000000)
li x4, 0x304e3e71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0xf9e4678f # load x3 with 32 MSBs 0x00000000f9e4678f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9e4678f
sw x3, 0(x2) # store x3 (0xf9e4678f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f9e4678f from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fmadd.d f4, f21, f9, f24, dyn # perform operation
fmadd.d f4, f21, f9, f24, rdn # perform operation
fmadd.d f4, f21, f9, f24, rmm # perform operation
fmadd.d f4, f21, f9, f24, rne # perform operation
fmadd.d f4, f21, f9, f24, rtz # perform operation
fmadd.d f4, f21, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f21, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fefffffffffffff)
li x15, 0x5d52e1f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0xbcad85be # load x3 with 32 MSBs 0x00000000bcad85be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcad85be
sw x3, 0(x2) # store x3 (0xbcad85be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000bcad85be from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fmadd.d f15, f6, f2, f31, dyn # perform operation
fmadd.d f15, f6, f2, f31, rdn # perform operation
fmadd.d f15, f6, f2, f31, rmm # perform operation
fmadd.d f15, f6, f2, f31, rne # perform operation
fmadd.d f15, f6, f2, f31, rtz # perform operation
fmadd.d f15, f6, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f6, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f6, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f6, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f6, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f6, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xffefffffffffffff)
li x8, 0x9af8a818 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0xbdd1cb9a # load x3 with 32 MSBs 0x00000000bdd1cb9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdd1cb9a
sw x3, 0(x2) # store x3 (0xbdd1cb9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bdd1cb9a from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fmadd.d f8, f1, f11, f7, dyn # perform operation
fmadd.d f8, f1, f11, f7, rdn # perform operation
fmadd.d f8, f1, f11, f7, rmm # perform operation
fmadd.d f8, f1, f11, f7, rne # perform operation
fmadd.d f8, f1, f11, f7, rtz # perform operation
fmadd.d f8, f1, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f1, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfffffffffffff)
li x23, 0xbda149fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x7f651af5 # load x3 with 32 MSBs 0x000000007f651af5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f651af5
sw x3, 0(x2) # store x3 (0x7f651af5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000007f651af5 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fmadd.d f23, f27, f9, f31, dyn # perform operation
fmadd.d f23, f27, f9, f31, rdn # perform operation
fmadd.d f23, f27, f9, f31, rmm # perform operation
fmadd.d f23, f27, f9, f31, rne # perform operation
fmadd.d f23, f27, f9, f31, rtz # perform operation
fmadd.d f23, f27, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f27, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f27, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f27, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f27, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f27, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x800fffffffffffff)
li x25, 0x8fdf0569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x326c755d # load x3 with 32 MSBs 0x00000000326c755d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000326c755d
sw x3, 0(x2) # store x3 (0x326c755d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000326c755d from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fmadd.d f25, f22, f23, f31, dyn # perform operation
fmadd.d f25, f22, f23, f31, rdn # perform operation
fmadd.d f25, f22, f23, f31, rmm # perform operation
fmadd.d f25, f22, f23, f31, rne # perform operation
fmadd.d f25, f22, f23, f31, rtz # perform operation
fmadd.d f25, f22, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f22, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000)
li x13, 0x834eedf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0x700f3057 # load x3 with 32 MSBs 0x00000000700f3057
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000700f3057
sw x3, 0(x2) # store x3 (0x700f3057) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000700f3057 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fmadd.d f13, f17, f8, f25, dyn # perform operation
fmadd.d f13, f17, f8, f25, rdn # perform operation
fmadd.d f13, f17, f8, f25, rmm # perform operation
fmadd.d f13, f17, f8, f25, rne # perform operation
fmadd.d f13, f17, f8, f25, rtz # perform operation
fmadd.d f13, f17, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f17, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f17, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8008000000000000)
li x18, 0x515902ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0xa9367dbf # load x3 with 32 MSBs 0x00000000a9367dbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9367dbf
sw x3, 0(x2) # store x3 (0xa9367dbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a9367dbf from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
fmadd.d f18, f24, f13, f20, dyn # perform operation
fmadd.d f18, f24, f13, f20, rdn # perform operation
fmadd.d f18, f24, f13, f20, rmm # perform operation
fmadd.d f18, f24, f13, f20, rne # perform operation
fmadd.d f18, f24, f13, f20, rtz # perform operation
fmadd.d f18, f24, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f24, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x1)
li x31, 0x4962c8f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x2dc54c48 # load x3 with 32 MSBs 0x000000002dc54c48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002dc54c48
sw x3, 0(x2) # store x3 (0x2dc54c48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002dc54c48 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fmadd.d f31, f23, f16, f20, dyn # perform operation
fmadd.d f31, f23, f16, f20, rdn # perform operation
fmadd.d f31, f23, f16, f20, rmm # perform operation
fmadd.d f31, f23, f16, f20, rne # perform operation
fmadd.d f31, f23, f16, f20, rtz # perform operation
fmadd.d f31, f23, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f23, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000001)
li x19, 0x288bb7c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x028f7e1d # load x3 with 32 MSBs 0x00000000028f7e1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000028f7e1d
sw x3, 0(x2) # store x3 (0x028f7e1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000028f7e1d from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fmadd.d f19, f11, f7, f12, dyn # perform operation
fmadd.d f19, f11, f7, f12, rdn # perform operation
fmadd.d f19, f11, f7, f12, rmm # perform operation
fmadd.d f19, f11, f7, f12, rne # perform operation
fmadd.d f19, f11, f7, f12, rtz # perform operation
fmadd.d f19, f11, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f11, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f11, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f11, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f11, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f11, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000000)
li x14, 0x1d9dad6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x6ec5e94c # load x3 with 32 MSBs 0x000000006ec5e94c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ec5e94c
sw x3, 0(x2) # store x3 (0x6ec5e94c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006ec5e94c from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fmadd.d f14, f4, f31, f10, dyn # perform operation
fmadd.d f14, f4, f31, f10, rdn # perform operation
fmadd.d f14, f4, f31, f10, rmm # perform operation
fmadd.d f14, f4, f31, f10, rne # perform operation
fmadd.d f14, f4, f31, f10, rtz # perform operation
fmadd.d f14, f4, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f4, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f4, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f4, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f4, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f4, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfff0000000000000)
li x28, 0x8d84a9e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0xed1cde7a # load x3 with 32 MSBs 0x00000000ed1cde7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed1cde7a
sw x3, 0(x2) # store x3 (0xed1cde7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ed1cde7a from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fmadd.d f28, f31, f29, f14, dyn # perform operation
fmadd.d f28, f31, f29, f14, rdn # perform operation
fmadd.d f28, f31, f29, f14, rmm # perform operation
fmadd.d f28, f31, f29, f14, rne # perform operation
fmadd.d f28, f31, f29, f14, rtz # perform operation
fmadd.d f28, f31, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f31, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff8000000000000)
li x1, 0xc14ca422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x355fd7dd # load x3 with 32 MSBs 0x00000000355fd7dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000355fd7dd
sw x3, 0(x2) # store x3 (0x355fd7dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000355fd7dd from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fmadd.d f1, f16, f29, f2, dyn # perform operation
fmadd.d f1, f16, f29, f2, rdn # perform operation
fmadd.d f1, f16, f29, f2, rmm # perform operation
fmadd.d f1, f16, f29, f2, rne # perform operation
fmadd.d f1, f16, f29, f2, rtz # perform operation
fmadd.d f1, f16, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f16, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f16, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f16, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f16, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f16, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fffffffffffffff)
li x21, 0x610c4caa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x98382bb3 # load x3 with 32 MSBs 0x0000000098382bb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098382bb3
sw x3, 0(x2) # store x3 (0x98382bb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000098382bb3 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fmadd.d f21, f11, f30, f7, dyn # perform operation
fmadd.d f21, f11, f30, f7, rdn # perform operation
fmadd.d f21, f11, f30, f7, rmm # perform operation
fmadd.d f21, f11, f30, f7, rne # perform operation
fmadd.d f21, f11, f30, f7, rtz # perform operation
fmadd.d f21, f11, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f11, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000001)
li x18, 0x274dc105 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x304f1295 # load x3 with 32 MSBs 0x00000000304f1295
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000304f1295
sw x3, 0(x2) # store x3 (0x304f1295) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000304f1295 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
fmadd.d f18, f12, f30, f26, dyn # perform operation
fmadd.d f18, f12, f30, f26, rdn # perform operation
fmadd.d f18, f12, f30, f26, rmm # perform operation
fmadd.d f18, f12, f30, f26, rne # perform operation
fmadd.d f18, f12, f30, f26, rtz # perform operation
fmadd.d f18, f12, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f12, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f12, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f12, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f12, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f12, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x19, 0x56de5bba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x804e5dd3 # load x3 with 32 MSBs 0x00000000804e5dd3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000804e5dd3
sw x3, 0(x2) # store x3 (0x804e5dd3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000804e5dd3 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
fmadd.d f19, f3, f30, f14, dyn # perform operation
fmadd.d f19, f3, f30, f14, rdn # perform operation
fmadd.d f19, f3, f30, f14, rmm # perform operation
fmadd.d f19, f3, f30, f14, rne # perform operation
fmadd.d f19, f3, f30, f14, rtz # perform operation
fmadd.d f19, f3, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f3, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x5a392534a57711ad)
li x16, 0xe6ca38d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x7564cece # load x3 with 32 MSBs 0x000000007564cece
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007564cece
sw x3, 0(x2) # store x3 (0x7564cece) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000007564cece from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fmadd.d f16, f8, f29, f20, dyn # perform operation
fmadd.d f16, f8, f29, f20, rdn # perform operation
fmadd.d f16, f8, f29, f20, rmm # perform operation
fmadd.d f16, f8, f29, f20, rne # perform operation
fmadd.d f16, f8, f29, f20, rtz # perform operation
fmadd.d f16, f8, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f8, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f8, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xa6e895993737426c)
li x25, 0x6ddc304b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x4206cd29 # load x3 with 32 MSBs 0x000000004206cd29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004206cd29
sw x3, 0(x2) # store x3 (0x4206cd29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004206cd29 from memory into f23
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fmadd.d f25, f16, f23, f21, dyn # perform operation
fmadd.d f25, f16, f23, f21, rdn # perform operation
fmadd.d f25, f16, f23, f21, rmm # perform operation
fmadd.d f25, f16, f23, f21, rne # perform operation
fmadd.d f25, f16, f23, f21, rtz # perform operation
fmadd.d f25, f16, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f16, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f16, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f16, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f16, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f16, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x0)
li x13, 0x4082f0a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0xe6f73839 # load x3 with 32 MSBs 0x00000000e6f73839
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6f73839
sw x3, 0(x2) # store x3 (0xe6f73839) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e6f73839 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fmadd.d f13, f19, f12, f7, dyn # perform operation
fmadd.d f13, f19, f12, f7, rdn # perform operation
fmadd.d f13, f19, f12, f7, rmm # perform operation
fmadd.d f13, f19, f12, f7, rne # perform operation
fmadd.d f13, f19, f12, f7, rtz # perform operation
fmadd.d f13, f19, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f19, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f19, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f19, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f19, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f19, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000000)
li x8, 0x4f33e0b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x806dad4c # load x3 with 32 MSBs 0x00000000806dad4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000806dad4c
sw x3, 0(x2) # store x3 (0x806dad4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000806dad4c from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fmadd.d f8, f3, f16, f4, dyn # perform operation
fmadd.d f8, f3, f16, f4, rdn # perform operation
fmadd.d f8, f3, f16, f4, rmm # perform operation
fmadd.d f8, f3, f16, f4, rne # perform operation
fmadd.d f8, f3, f16, f4, rtz # perform operation
fmadd.d f8, f3, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f3, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff0000000000000)
li x16, 0xce8485cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x83c6d034 # load x3 with 32 MSBs 0x0000000083c6d034
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083c6d034
sw x3, 0(x2) # store x3 (0x83c6d034) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000083c6d034 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fmadd.d f16, f19, f11, f17, dyn # perform operation
fmadd.d f16, f19, f11, f17, rdn # perform operation
fmadd.d f16, f19, f11, f17, rmm # perform operation
fmadd.d f16, f19, f11, f17, rne # perform operation
fmadd.d f16, f19, f11, f17, rtz # perform operation
fmadd.d f16, f19, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f19, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f19, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff0000000000000)
li x5, 0x73235f20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x32678c00 # load x3 with 32 MSBs 0x0000000032678c00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032678c00
sw x3, 0(x2) # store x3 (0x32678c00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000032678c00 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fmadd.d f5, f22, f24, f18, dyn # perform operation
fmadd.d f5, f22, f24, f18, rdn # perform operation
fmadd.d f5, f22, f24, f18, rmm # perform operation
fmadd.d f5, f22, f24, f18, rne # perform operation
fmadd.d f5, f22, f24, f18, rtz # perform operation
fmadd.d f5, f22, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f22, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f22, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f22, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f22, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f22, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff8000000000000)
li x19, 0xa61b2e40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x42b81d1f # load x3 with 32 MSBs 0x0000000042b81d1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042b81d1f
sw x3, 0(x2) # store x3 (0x42b81d1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000042b81d1f from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fmadd.d f19, f21, f16, f25, dyn # perform operation
fmadd.d f19, f21, f16, f25, rdn # perform operation
fmadd.d f19, f21, f16, f25, rmm # perform operation
fmadd.d f19, f21, f16, f25, rne # perform operation
fmadd.d f19, f21, f16, f25, rtz # perform operation
fmadd.d f19, f21, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f21, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f21, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff8000000000000)
li x3, 0xd15ac9b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xe68e36f3 # load x3 with 32 MSBs 0x00000000e68e36f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e68e36f3
sw x3, 0(x2) # store x3 (0xe68e36f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e68e36f3 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fmadd.d f3, f18, f4, f17, dyn # perform operation
fmadd.d f3, f18, f4, f17, rdn # perform operation
fmadd.d f3, f18, f4, f17, rmm # perform operation
fmadd.d f3, f18, f4, f17, rne # perform operation
fmadd.d f3, f18, f4, f17, rtz # perform operation
fmadd.d f3, f18, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f18, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x4000000000000000)
li x19, 0xb553a818 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xf6a2414b # load x3 with 32 MSBs 0x00000000f6a2414b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6a2414b
sw x3, 0(x2) # store x3 (0xf6a2414b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f6a2414b from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fmadd.d f19, f18, f27, f31, dyn # perform operation
fmadd.d f19, f18, f27, f31, rdn # perform operation
fmadd.d f19, f18, f27, f31, rmm # perform operation
fmadd.d f19, f18, f27, f31, rne # perform operation
fmadd.d f19, f18, f27, f31, rtz # perform operation
fmadd.d f19, f18, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f18, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xc000000000000000)
li x20, 0xa1d1615a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0xf2c30d6d # load x3 with 32 MSBs 0x00000000f2c30d6d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2c30d6d
sw x3, 0(x2) # store x3 (0xf2c30d6d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f2c30d6d from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fmadd.d f20, f13, f29, f28, dyn # perform operation
fmadd.d f20, f13, f29, f28, rdn # perform operation
fmadd.d f20, f13, f29, f28, rmm # perform operation
fmadd.d f20, f13, f29, f28, rne # perform operation
fmadd.d f20, f13, f29, f28, rtz # perform operation
fmadd.d f20, f13, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f13, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f13, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f13, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f13, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f13, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x10000000000000)
li x28, 0x9c489656 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0xa1e34f7d # load x3 with 32 MSBs 0x00000000a1e34f7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1e34f7d
sw x3, 0(x2) # store x3 (0xa1e34f7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a1e34f7d from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fmadd.d f28, f23, f8, f1, dyn # perform operation
fmadd.d f28, f23, f8, f1, rdn # perform operation
fmadd.d f28, f23, f8, f1, rmm # perform operation
fmadd.d f28, f23, f8, f1, rne # perform operation
fmadd.d f28, f23, f8, f1, rtz # perform operation
fmadd.d f28, f23, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f23, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8010000000000000)
li x19, 0x8ede7ca5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x0867d36f # load x3 with 32 MSBs 0x000000000867d36f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000867d36f
sw x3, 0(x2) # store x3 (0x0867d36f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000867d36f from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fmadd.d f19, f20, f29, f25, dyn # perform operation
fmadd.d f19, f20, f29, f25, rdn # perform operation
fmadd.d f19, f20, f29, f25, rmm # perform operation
fmadd.d f19, f20, f29, f25, rne # perform operation
fmadd.d f19, f20, f29, f25, rtz # perform operation
fmadd.d f19, f20, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f20, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fefffffffffffff)
li x5, 0x014da002 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xf237567f # load x3 with 32 MSBs 0x00000000f237567f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f237567f
sw x3, 0(x2) # store x3 (0xf237567f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f237567f from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fmadd.d f5, f9, f18, f19, dyn # perform operation
fmadd.d f5, f9, f18, f19, rdn # perform operation
fmadd.d f5, f9, f18, f19, rmm # perform operation
fmadd.d f5, f9, f18, f19, rne # perform operation
fmadd.d f5, f9, f18, f19, rtz # perform operation
fmadd.d f5, f9, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f9, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xffefffffffffffff)
li x4, 0x2528f2a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x4c3b4948 # load x3 with 32 MSBs 0x000000004c3b4948
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c3b4948
sw x3, 0(x2) # store x3 (0x4c3b4948) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000004c3b4948 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fmadd.d f4, f30, f6, f14, dyn # perform operation
fmadd.d f4, f30, f6, f14, rdn # perform operation
fmadd.d f4, f30, f6, f14, rmm # perform operation
fmadd.d f4, f30, f6, f14, rne # perform operation
fmadd.d f4, f30, f6, f14, rtz # perform operation
fmadd.d f4, f30, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f30, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfffffffffffff)
li x21, 0x57a46323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0xcc2d6b8c # load x3 with 32 MSBs 0x00000000cc2d6b8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc2d6b8c
sw x3, 0(x2) # store x3 (0xcc2d6b8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000cc2d6b8c from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fmadd.d f21, f5, f4, f17, dyn # perform operation
fmadd.d f21, f5, f4, f17, rdn # perform operation
fmadd.d f21, f5, f4, f17, rmm # perform operation
fmadd.d f21, f5, f4, f17, rne # perform operation
fmadd.d f21, f5, f4, f17, rtz # perform operation
fmadd.d f21, f5, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f5, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x800fffffffffffff)
li x17, 0xf97ecb49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x6538f985 # load x3 with 32 MSBs 0x000000006538f985
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006538f985
sw x3, 0(x2) # store x3 (0x6538f985) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006538f985 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fmadd.d f17, f22, f24, f31, dyn # perform operation
fmadd.d f17, f22, f24, f31, rdn # perform operation
fmadd.d f17, f22, f24, f31, rmm # perform operation
fmadd.d f17, f22, f24, f31, rne # perform operation
fmadd.d f17, f22, f24, f31, rtz # perform operation
fmadd.d f17, f22, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f22, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000)
li x8, 0x5ab9972f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0xebaaa34b # load x3 with 32 MSBs 0x00000000ebaaa34b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebaaa34b
sw x3, 0(x2) # store x3 (0xebaaa34b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ebaaa34b from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fmadd.d f8, f4, f29, f7, dyn # perform operation
fmadd.d f8, f4, f29, f7, rdn # perform operation
fmadd.d f8, f4, f29, f7, rmm # perform operation
fmadd.d f8, f4, f29, f7, rne # perform operation
fmadd.d f8, f4, f29, f7, rtz # perform operation
fmadd.d f8, f4, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f4, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f4, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8008000000000000)
li x8, 0x49abcc15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xc55409ee # load x3 with 32 MSBs 0x00000000c55409ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c55409ee
sw x3, 0(x2) # store x3 (0xc55409ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c55409ee from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fmadd.d f8, f9, f18, f12, dyn # perform operation
fmadd.d f8, f9, f18, f12, rdn # perform operation
fmadd.d f8, f9, f18, f12, rmm # perform operation
fmadd.d f8, f9, f18, f12, rne # perform operation
fmadd.d f8, f9, f18, f12, rtz # perform operation
fmadd.d f8, f9, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f9, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f9, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f9, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f9, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f9, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x1)
li x16, 0x515d691f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x6e5df977 # load x3 with 32 MSBs 0x000000006e5df977
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e5df977
sw x3, 0(x2) # store x3 (0x6e5df977) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000006e5df977 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fmadd.d f16, f19, f26, f20, dyn # perform operation
fmadd.d f16, f19, f26, f20, rdn # perform operation
fmadd.d f16, f19, f26, f20, rmm # perform operation
fmadd.d f16, f19, f26, f20, rne # perform operation
fmadd.d f16, f19, f26, f20, rtz # perform operation
fmadd.d f16, f19, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f19, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000001)
li x13, 0xe7a71ca9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0x7e9a861c # load x3 with 32 MSBs 0x000000007e9a861c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e9a861c
sw x3, 0(x2) # store x3 (0x7e9a861c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000007e9a861c from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fmadd.d f13, f29, f16, f1, dyn # perform operation
fmadd.d f13, f29, f16, f1, rdn # perform operation
fmadd.d f13, f29, f16, f1, rmm # perform operation
fmadd.d f13, f29, f16, f1, rne # perform operation
fmadd.d f13, f29, f16, f1, rtz # perform operation
fmadd.d f13, f29, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f29, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f29, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000000)
li x21, 0x3568f476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x08b45afa # load x3 with 32 MSBs 0x0000000008b45afa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008b45afa
sw x3, 0(x2) # store x3 (0x08b45afa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000008b45afa from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
fmadd.d f21, f31, f20, f23, dyn # perform operation
fmadd.d f21, f31, f20, f23, rdn # perform operation
fmadd.d f21, f31, f20, f23, rmm # perform operation
fmadd.d f21, f31, f20, f23, rne # perform operation
fmadd.d f21, f31, f20, f23, rtz # perform operation
fmadd.d f21, f31, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f31, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f31, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfff0000000000000)
li x29, 0x7212209d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0xec3aa3de # load x3 with 32 MSBs 0x00000000ec3aa3de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec3aa3de
sw x3, 0(x2) # store x3 (0xec3aa3de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000ec3aa3de from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fmadd.d f29, f27, f16, f26, dyn # perform operation
fmadd.d f29, f27, f16, f26, rdn # perform operation
fmadd.d f29, f27, f16, f26, rmm # perform operation
fmadd.d f29, f27, f16, f26, rne # perform operation
fmadd.d f29, f27, f16, f26, rtz # perform operation
fmadd.d f29, f27, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f27, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff8000000000000)
li x11, 0x06b636f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x3d38c6c2 # load x3 with 32 MSBs 0x000000003d38c6c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d38c6c2
sw x3, 0(x2) # store x3 (0x3d38c6c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003d38c6c2 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fmadd.d f11, f8, f25, f5, dyn # perform operation
fmadd.d f11, f8, f25, f5, rdn # perform operation
fmadd.d f11, f8, f25, f5, rmm # perform operation
fmadd.d f11, f8, f25, f5, rne # perform operation
fmadd.d f11, f8, f25, f5, rtz # perform operation
fmadd.d f11, f8, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f8, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fffffffffffffff)
li x21, 0x8e8b3fab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x847b19fc # load x3 with 32 MSBs 0x00000000847b19fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000847b19fc
sw x3, 0(x2) # store x3 (0x847b19fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000847b19fc from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
fmadd.d f21, f10, f2, f3, dyn # perform operation
fmadd.d f21, f10, f2, f3, rdn # perform operation
fmadd.d f21, f10, f2, f3, rmm # perform operation
fmadd.d f21, f10, f2, f3, rne # perform operation
fmadd.d f21, f10, f2, f3, rtz # perform operation
fmadd.d f21, f10, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f10, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000001)
li x30, 0x0ab209d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0xe6073505 # load x3 with 32 MSBs 0x00000000e6073505
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6073505
sw x3, 0(x2) # store x3 (0xe6073505) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e6073505 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fmadd.d f30, f31, f5, f9, dyn # perform operation
fmadd.d f30, f31, f5, f9, rdn # perform operation
fmadd.d f30, f31, f5, f9, rmm # perform operation
fmadd.d f30, f31, f5, f9, rne # perform operation
fmadd.d f30, f31, f5, f9, rtz # perform operation
fmadd.d f30, f31, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f31, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x6, 0x38415f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x6f1684a4 # load x3 with 32 MSBs 0x000000006f1684a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f1684a4
sw x3, 0(x2) # store x3 (0x6f1684a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006f1684a4 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fmadd.d f6, f22, f12, f4, dyn # perform operation
fmadd.d f6, f22, f12, f4, rdn # perform operation
fmadd.d f6, f22, f12, f4, rmm # perform operation
fmadd.d f6, f22, f12, f4, rne # perform operation
fmadd.d f6, f22, f12, f4, rtz # perform operation
fmadd.d f6, f22, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f22, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f22, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f22, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f22, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f22, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x5a392534a57711ad)
li x28, 0x507ceec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0xe094121a # load x3 with 32 MSBs 0x00000000e094121a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e094121a
sw x3, 0(x2) # store x3 (0xe094121a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e094121a from memory into f5
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fmadd.d f28, f26, f5, f3, dyn # perform operation
fmadd.d f28, f26, f5, f3, rdn # perform operation
fmadd.d f28, f26, f5, f3, rmm # perform operation
fmadd.d f28, f26, f5, f3, rne # perform operation
fmadd.d f28, f26, f5, f3, rtz # perform operation
fmadd.d f28, f26, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f26, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xa6e895993737426c)
li x18, 0x594cf91f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x78e75a09 # load x3 with 32 MSBs 0x0000000078e75a09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078e75a09
sw x3, 0(x2) # store x3 (0x78e75a09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000078e75a09 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fmadd.d f18, f24, f1, f29, dyn # perform operation
fmadd.d f18, f24, f1, f29, rdn # perform operation
fmadd.d f18, f24, f1, f29, rmm # perform operation
fmadd.d f18, f24, f1, f29, rne # perform operation
fmadd.d f18, f24, f1, f29, rtz # perform operation
fmadd.d f18, f24, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f24, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x0)
li x30, 0x7710ccab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0xbdb6efbd # load x3 with 32 MSBs 0x00000000bdb6efbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdb6efbd
sw x3, 0(x2) # store x3 (0xbdb6efbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000bdb6efbd from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fmadd.d f30, f13, f5, f20, dyn # perform operation
fmadd.d f30, f13, f5, f20, rdn # perform operation
fmadd.d f30, f13, f5, f20, rmm # perform operation
fmadd.d f30, f13, f5, f20, rne # perform operation
fmadd.d f30, f13, f5, f20, rtz # perform operation
fmadd.d f30, f13, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f13, f5, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000000)
li x20, 0xd0f1baa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0xdc5c82b3 # load x3 with 32 MSBs 0x00000000dc5c82b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc5c82b3
sw x3, 0(x2) # store x3 (0xdc5c82b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000dc5c82b3 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fmadd.d f20, f9, f22, f12, dyn # perform operation
fmadd.d f20, f9, f22, f12, rdn # perform operation
fmadd.d f20, f9, f22, f12, rmm # perform operation
fmadd.d f20, f9, f22, f12, rne # perform operation
fmadd.d f20, f9, f22, f12, rtz # perform operation
fmadd.d f20, f9, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f9, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f9, f22, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff0000000000000)
li x10, 0xadaf278d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x92451dc2 # load x3 with 32 MSBs 0x0000000092451dc2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092451dc2
sw x3, 0(x2) # store x3 (0x92451dc2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000092451dc2 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fmadd.d f10, f19, f22, f18, dyn # perform operation
fmadd.d f10, f19, f22, f18, rdn # perform operation
fmadd.d f10, f19, f22, f18, rmm # perform operation
fmadd.d f10, f19, f22, f18, rne # perform operation
fmadd.d f10, f19, f22, f18, rtz # perform operation
fmadd.d f10, f19, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f19, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f19, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff0000000000000)
li x12, 0x28fa1625 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0xc8bcab19 # load x3 with 32 MSBs 0x00000000c8bcab19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8bcab19
sw x3, 0(x2) # store x3 (0xc8bcab19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c8bcab19 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fmadd.d f12, f23, f5, f6, dyn # perform operation
fmadd.d f12, f23, f5, f6, rdn # perform operation
fmadd.d f12, f23, f5, f6, rmm # perform operation
fmadd.d f12, f23, f5, f6, rne # perform operation
fmadd.d f12, f23, f5, f6, rtz # perform operation
fmadd.d f12, f23, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f23, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f23, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff8000000000000)
li x13, 0xcecd3758 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x3e2ccf34 # load x3 with 32 MSBs 0x000000003e2ccf34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e2ccf34
sw x3, 0(x2) # store x3 (0x3e2ccf34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003e2ccf34 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fmadd.d f13, f21, f6, f19, dyn # perform operation
fmadd.d f13, f21, f6, f19, rdn # perform operation
fmadd.d f13, f21, f6, f19, rmm # perform operation
fmadd.d f13, f21, f6, f19, rne # perform operation
fmadd.d f13, f21, f6, f19, rtz # perform operation
fmadd.d f13, f21, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f21, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f21, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f21, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f21, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f21, f6, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff8000000000000)
li x15, 0xdb69d212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x048bb727 # load x3 with 32 MSBs 0x00000000048bb727
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000048bb727
sw x3, 0(x2) # store x3 (0x048bb727) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000048bb727 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fmadd.d f15, f6, f16, f12, dyn # perform operation
fmadd.d f15, f6, f16, f12, rdn # perform operation
fmadd.d f15, f6, f16, f12, rmm # perform operation
fmadd.d f15, f6, f16, f12, rne # perform operation
fmadd.d f15, f6, f16, f12, rtz # perform operation
fmadd.d f15, f6, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f6, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x4000000000000000)
li x30, 0x5ff3fd0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x0ff43cc0 # load x3 with 32 MSBs 0x000000000ff43cc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ff43cc0
sw x3, 0(x2) # store x3 (0x0ff43cc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000ff43cc0 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fmadd.d f30, f20, f16, f5, dyn # perform operation
fmadd.d f30, f20, f16, f5, rdn # perform operation
fmadd.d f30, f20, f16, f5, rmm # perform operation
fmadd.d f30, f20, f16, f5, rne # perform operation
fmadd.d f30, f20, f16, f5, rtz # perform operation
fmadd.d f30, f20, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f20, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xc000000000000000)
li x8, 0xc21de569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x44bc1977 # load x3 with 32 MSBs 0x0000000044bc1977
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044bc1977
sw x3, 0(x2) # store x3 (0x44bc1977) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000044bc1977 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fmadd.d f8, f5, f23, f28, dyn # perform operation
fmadd.d f8, f5, f23, f28, rdn # perform operation
fmadd.d f8, f5, f23, f28, rmm # perform operation
fmadd.d f8, f5, f23, f28, rne # perform operation
fmadd.d f8, f5, f23, f28, rtz # perform operation
fmadd.d f8, f5, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f5, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f5, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f5, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f5, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f5, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x10000000000000)
li x27, 0x9350a481 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0x131c7746 # load x3 with 32 MSBs 0x00000000131c7746
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000131c7746
sw x3, 0(x2) # store x3 (0x131c7746) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000131c7746 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fmadd.d f27, f2, f26, f29, dyn # perform operation
fmadd.d f27, f2, f26, f29, rdn # perform operation
fmadd.d f27, f2, f26, f29, rmm # perform operation
fmadd.d f27, f2, f26, f29, rne # perform operation
fmadd.d f27, f2, f26, f29, rtz # perform operation
fmadd.d f27, f2, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f2, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8010000000000000)
li x1, 0x8a2275a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0xee15c2ec # load x3 with 32 MSBs 0x00000000ee15c2ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee15c2ec
sw x3, 0(x2) # store x3 (0xee15c2ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ee15c2ec from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fmadd.d f1, f23, f29, f8, dyn # perform operation
fmadd.d f1, f23, f29, f8, rdn # perform operation
fmadd.d f1, f23, f29, f8, rmm # perform operation
fmadd.d f1, f23, f29, f8, rne # perform operation
fmadd.d f1, f23, f29, f8, rtz # perform operation
fmadd.d f1, f23, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f23, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f23, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fefffffffffffff)
li x7, 0xe21ae6d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0xaa961e36 # load x3 with 32 MSBs 0x00000000aa961e36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa961e36
sw x3, 0(x2) # store x3 (0xaa961e36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000aa961e36 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fmadd.d f7, f3, f31, f25, dyn # perform operation
fmadd.d f7, f3, f31, f25, rdn # perform operation
fmadd.d f7, f3, f31, f25, rmm # perform operation
fmadd.d f7, f3, f31, f25, rne # perform operation
fmadd.d f7, f3, f31, f25, rtz # perform operation
fmadd.d f7, f3, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f3, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xffefffffffffffff)
li x24, 0xbf44b4d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0xc51e72dd # load x3 with 32 MSBs 0x00000000c51e72dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c51e72dd
sw x3, 0(x2) # store x3 (0xc51e72dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c51e72dd from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fmadd.d f24, f23, f5, f3, dyn # perform operation
fmadd.d f24, f23, f5, f3, rdn # perform operation
fmadd.d f24, f23, f5, f3, rmm # perform operation
fmadd.d f24, f23, f5, f3, rne # perform operation
fmadd.d f24, f23, f5, f3, rtz # perform operation
fmadd.d f24, f23, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f23, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f23, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfffffffffffff)
li x14, 0x9e610478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x8bbf1538 # load x3 with 32 MSBs 0x000000008bbf1538
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bbf1538
sw x3, 0(x2) # store x3 (0x8bbf1538) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000008bbf1538 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fmadd.d f14, f7, f21, f12, dyn # perform operation
fmadd.d f14, f7, f21, f12, rdn # perform operation
fmadd.d f14, f7, f21, f12, rmm # perform operation
fmadd.d f14, f7, f21, f12, rne # perform operation
fmadd.d f14, f7, f21, f12, rtz # perform operation
fmadd.d f14, f7, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f7, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f7, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x800fffffffffffff)
li x1, 0x20969864 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0xe118492e # load x3 with 32 MSBs 0x00000000e118492e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e118492e
sw x3, 0(x2) # store x3 (0xe118492e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e118492e from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fmadd.d f1, f4, f11, f19, dyn # perform operation
fmadd.d f1, f4, f11, f19, rdn # perform operation
fmadd.d f1, f4, f11, f19, rmm # perform operation
fmadd.d f1, f4, f11, f19, rne # perform operation
fmadd.d f1, f4, f11, f19, rtz # perform operation
fmadd.d f1, f4, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f4, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000)
li x27, 0x432c0c09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x584688bb # load x3 with 32 MSBs 0x00000000584688bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000584688bb
sw x3, 0(x2) # store x3 (0x584688bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000584688bb from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fmadd.d f27, f20, f4, f13, dyn # perform operation
fmadd.d f27, f20, f4, f13, rdn # perform operation
fmadd.d f27, f20, f4, f13, rmm # perform operation
fmadd.d f27, f20, f4, f13, rne # perform operation
fmadd.d f27, f20, f4, f13, rtz # perform operation
fmadd.d f27, f20, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f20, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f20, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f20, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f20, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f20, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8008000000000000)
li x31, 0x3f2a4efa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x0b307853 # load x3 with 32 MSBs 0x000000000b307853
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b307853
sw x3, 0(x2) # store x3 (0x0b307853) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000000b307853 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fmadd.d f31, f10, f2, f15, dyn # perform operation
fmadd.d f31, f10, f2, f15, rdn # perform operation
fmadd.d f31, f10, f2, f15, rmm # perform operation
fmadd.d f31, f10, f2, f15, rne # perform operation
fmadd.d f31, f10, f2, f15, rtz # perform operation
fmadd.d f31, f10, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f10, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f10, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f10, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f10, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f10, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x1)
li x8, 0x26596121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x9fdb3b07 # load x3 with 32 MSBs 0x000000009fdb3b07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fdb3b07
sw x3, 0(x2) # store x3 (0x9fdb3b07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009fdb3b07 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fmadd.d f8, f22, f24, f17, dyn # perform operation
fmadd.d f8, f22, f24, f17, rdn # perform operation
fmadd.d f8, f22, f24, f17, rmm # perform operation
fmadd.d f8, f22, f24, f17, rne # perform operation
fmadd.d f8, f22, f24, f17, rtz # perform operation
fmadd.d f8, f22, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f22, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f22, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000001)
li x3, 0xcabcd54d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x083485bd # load x3 with 32 MSBs 0x00000000083485bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000083485bd
sw x3, 0(x2) # store x3 (0x083485bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000083485bd from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fmadd.d f3, f17, f18, f28, dyn # perform operation
fmadd.d f3, f17, f18, f28, rdn # perform operation
fmadd.d f3, f17, f18, f28, rmm # perform operation
fmadd.d f3, f17, f18, f28, rne # perform operation
fmadd.d f3, f17, f18, f28, rtz # perform operation
fmadd.d f3, f17, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f17, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000000)
li x15, 0x0cdf943e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0xfcc86161 # load x3 with 32 MSBs 0x00000000fcc86161
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcc86161
sw x3, 0(x2) # store x3 (0xfcc86161) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000fcc86161 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
fmadd.d f15, f27, f8, f23, dyn # perform operation
fmadd.d f15, f27, f8, f23, rdn # perform operation
fmadd.d f15, f27, f8, f23, rmm # perform operation
fmadd.d f15, f27, f8, f23, rne # perform operation
fmadd.d f15, f27, f8, f23, rtz # perform operation
fmadd.d f15, f27, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f27, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfff0000000000000)
li x27, 0x68194e1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0xaee16e3e # load x3 with 32 MSBs 0x00000000aee16e3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aee16e3e
sw x3, 0(x2) # store x3 (0xaee16e3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000aee16e3e from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fmadd.d f27, f19, f10, f15, dyn # perform operation
fmadd.d f27, f19, f10, f15, rdn # perform operation
fmadd.d f27, f19, f10, f15, rmm # perform operation
fmadd.d f27, f19, f10, f15, rne # perform operation
fmadd.d f27, f19, f10, f15, rtz # perform operation
fmadd.d f27, f19, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f19, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f19, f10, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff8000000000000)
li x18, 0x7751c626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0xe8ef6a51 # load x3 with 32 MSBs 0x00000000e8ef6a51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8ef6a51
sw x3, 0(x2) # store x3 (0xe8ef6a51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e8ef6a51 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fmadd.d f18, f20, f25, f10, dyn # perform operation
fmadd.d f18, f20, f25, f10, rdn # perform operation
fmadd.d f18, f20, f25, f10, rmm # perform operation
fmadd.d f18, f20, f25, f10, rne # perform operation
fmadd.d f18, f20, f25, f10, rtz # perform operation
fmadd.d f18, f20, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f20, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f20, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fffffffffffffff)
li x21, 0x3c59bb2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0x63d944bf # load x3 with 32 MSBs 0x0000000063d944bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063d944bf
sw x3, 0(x2) # store x3 (0x63d944bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000063d944bf from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fmadd.d f21, f13, f29, f24, dyn # perform operation
fmadd.d f21, f13, f29, f24, rdn # perform operation
fmadd.d f21, f13, f29, f24, rmm # perform operation
fmadd.d f21, f13, f29, f24, rne # perform operation
fmadd.d f21, f13, f29, f24, rtz # perform operation
fmadd.d f21, f13, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f13, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000001)
li x22, 0xa38f47e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x1192af6f # load x3 with 32 MSBs 0x000000001192af6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001192af6f
sw x3, 0(x2) # store x3 (0x1192af6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001192af6f from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
fmadd.d f22, f24, f29, f10, dyn # perform operation
fmadd.d f22, f24, f29, f10, rdn # perform operation
fmadd.d f22, f24, f29, f10, rmm # perform operation
fmadd.d f22, f24, f29, f10, rne # perform operation
fmadd.d f22, f24, f29, f10, rtz # perform operation
fmadd.d f22, f24, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f24, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x25, 0xd9d705b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x8a4eeece # load x3 with 32 MSBs 0x000000008a4eeece
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a4eeece
sw x3, 0(x2) # store x3 (0x8a4eeece) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008a4eeece from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fmadd.d f25, f28, f4, f20, dyn # perform operation
fmadd.d f25, f28, f4, f20, rdn # perform operation
fmadd.d f25, f28, f4, f20, rmm # perform operation
fmadd.d f25, f28, f4, f20, rne # perform operation
fmadd.d f25, f28, f4, f20, rtz # perform operation
fmadd.d f25, f28, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f28, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f28, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f28, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f28, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f28, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x5a392534a57711ad)
li x10, 0x490f3adb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x4d6625b5 # load x3 with 32 MSBs 0x000000004d6625b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d6625b5
sw x3, 0(x2) # store x3 (0x4d6625b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004d6625b5 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fmadd.d f10, f25, f3, f1, dyn # perform operation
fmadd.d f10, f25, f3, f1, rdn # perform operation
fmadd.d f10, f25, f3, f1, rmm # perform operation
fmadd.d f10, f25, f3, f1, rne # perform operation
fmadd.d f10, f25, f3, f1, rtz # perform operation
fmadd.d f10, f25, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f25, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f25, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f25, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f25, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f25, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xa6e895993737426c)
li x2, 0x8406266c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xc728c40e # load x3 with 32 MSBs 0x00000000c728c40e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c728c40e
sw x3, 0(x2) # store x3 (0xc728c40e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c728c40e from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fmadd.d f2, f15, f31, f22, dyn # perform operation
fmadd.d f2, f15, f31, f22, rdn # perform operation
fmadd.d f2, f15, f31, f22, rmm # perform operation
fmadd.d f2, f15, f31, f22, rne # perform operation
fmadd.d f2, f15, f31, f22, rtz # perform operation
fmadd.d f2, f15, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f15, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f15, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f15, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f15, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f15, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x0)
li x14, 0x92df8efe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xa415f6b4 # load x3 with 32 MSBs 0x00000000a415f6b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a415f6b4
sw x3, 0(x2) # store x3 (0xa415f6b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a415f6b4 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fmadd.d f14, f7, f17, f8, dyn # perform operation
fmadd.d f14, f7, f17, f8, rdn # perform operation
fmadd.d f14, f7, f17, f8, rmm # perform operation
fmadd.d f14, f7, f17, f8, rne # perform operation
fmadd.d f14, f7, f17, f8, rtz # perform operation
fmadd.d f14, f7, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f7, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f7, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f7, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f7, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f7, f17, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000000)
li x6, 0x0f07faf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xbf12990f # load x3 with 32 MSBs 0x00000000bf12990f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf12990f
sw x3, 0(x2) # store x3 (0xbf12990f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000bf12990f from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fmadd.d f6, f16, f4, f8, dyn # perform operation
fmadd.d f6, f16, f4, f8, rdn # perform operation
fmadd.d f6, f16, f4, f8, rmm # perform operation
fmadd.d f6, f16, f4, f8, rne # perform operation
fmadd.d f6, f16, f4, f8, rtz # perform operation
fmadd.d f6, f16, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f16, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f16, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f16, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f16, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f16, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff0000000000000)
li x28, 0x8d2245ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0xb646917a # load x3 with 32 MSBs 0x00000000b646917a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b646917a
sw x3, 0(x2) # store x3 (0xb646917a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b646917a from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fmadd.d f28, f17, f25, f30, dyn # perform operation
fmadd.d f28, f17, f25, f30, rdn # perform operation
fmadd.d f28, f17, f25, f30, rmm # perform operation
fmadd.d f28, f17, f25, f30, rne # perform operation
fmadd.d f28, f17, f25, f30, rtz # perform operation
fmadd.d f28, f17, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f17, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f17, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f17, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f17, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f17, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff0000000000000)
li x8, 0x8ad48344 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0xb767e9de # load x3 with 32 MSBs 0x00000000b767e9de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b767e9de
sw x3, 0(x2) # store x3 (0xb767e9de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b767e9de from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fmadd.d f8, f12, f27, f31, dyn # perform operation
fmadd.d f8, f12, f27, f31, rdn # perform operation
fmadd.d f8, f12, f27, f31, rmm # perform operation
fmadd.d f8, f12, f27, f31, rne # perform operation
fmadd.d f8, f12, f27, f31, rtz # perform operation
fmadd.d f8, f12, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f12, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff8000000000000)
li x14, 0xdb2de983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x84492329 # load x3 with 32 MSBs 0x0000000084492329
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084492329
sw x3, 0(x2) # store x3 (0x84492329) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000084492329 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fmadd.d f14, f20, f23, f6, dyn # perform operation
fmadd.d f14, f20, f23, f6, rdn # perform operation
fmadd.d f14, f20, f23, f6, rmm # perform operation
fmadd.d f14, f20, f23, f6, rne # perform operation
fmadd.d f14, f20, f23, f6, rtz # perform operation
fmadd.d f14, f20, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f20, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff8000000000000)
li x17, 0xf39984b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x6cd069cc # load x3 with 32 MSBs 0x000000006cd069cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006cd069cc
sw x3, 0(x2) # store x3 (0x6cd069cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006cd069cc from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
fmadd.d f17, f19, f5, f2, dyn # perform operation
fmadd.d f17, f19, f5, f2, rdn # perform operation
fmadd.d f17, f19, f5, f2, rmm # perform operation
fmadd.d f17, f19, f5, f2, rne # perform operation
fmadd.d f17, f19, f5, f2, rtz # perform operation
fmadd.d f17, f19, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f19, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f19, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f19, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f19, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f19, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x4000000000000000)
li x16, 0x15337f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xe37fec9d # load x3 with 32 MSBs 0x00000000e37fec9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e37fec9d
sw x3, 0(x2) # store x3 (0xe37fec9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e37fec9d from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fmadd.d f16, f26, f25, f14, dyn # perform operation
fmadd.d f16, f26, f25, f14, rdn # perform operation
fmadd.d f16, f26, f25, f14, rmm # perform operation
fmadd.d f16, f26, f25, f14, rne # perform operation
fmadd.d f16, f26, f25, f14, rtz # perform operation
fmadd.d f16, f26, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f26, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xc000000000000000)
li x13, 0xcea453c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0x59965b1a # load x3 with 32 MSBs 0x0000000059965b1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059965b1a
sw x3, 0(x2) # store x3 (0x59965b1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000059965b1a from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fmadd.d f13, f17, f16, f27, dyn # perform operation
fmadd.d f13, f17, f16, f27, rdn # perform operation
fmadd.d f13, f17, f16, f27, rmm # perform operation
fmadd.d f13, f17, f16, f27, rne # perform operation
fmadd.d f13, f17, f16, f27, rtz # perform operation
fmadd.d f13, f17, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f17, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f17, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x10000000000000)
li x27, 0x5378d638 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x061612c3 # load x3 with 32 MSBs 0x00000000061612c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000061612c3
sw x3, 0(x2) # store x3 (0x061612c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000061612c3 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
fmadd.d f27, f28, f9, f14, dyn # perform operation
fmadd.d f27, f28, f9, f14, rdn # perform operation
fmadd.d f27, f28, f9, f14, rmm # perform operation
fmadd.d f27, f28, f9, f14, rne # perform operation
fmadd.d f27, f28, f9, f14, rtz # perform operation
fmadd.d f27, f28, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f28, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8010000000000000)
li x21, 0x1ad091c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x1df70e0b # load x3 with 32 MSBs 0x000000001df70e0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001df70e0b
sw x3, 0(x2) # store x3 (0x1df70e0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001df70e0b from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fmadd.d f21, f25, f17, f2, dyn # perform operation
fmadd.d f21, f25, f17, f2, rdn # perform operation
fmadd.d f21, f25, f17, f2, rmm # perform operation
fmadd.d f21, f25, f17, f2, rne # perform operation
fmadd.d f21, f25, f17, f2, rtz # perform operation
fmadd.d f21, f25, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f25, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fefffffffffffff)
li x24, 0xdb942104 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0xf392a53d # load x3 with 32 MSBs 0x00000000f392a53d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f392a53d
sw x3, 0(x2) # store x3 (0xf392a53d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f392a53d from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fmadd.d f24, f15, f5, f11, dyn # perform operation
fmadd.d f24, f15, f5, f11, rdn # perform operation
fmadd.d f24, f15, f5, f11, rmm # perform operation
fmadd.d f24, f15, f5, f11, rne # perform operation
fmadd.d f24, f15, f5, f11, rtz # perform operation
fmadd.d f24, f15, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f15, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xffefffffffffffff)
li x12, 0xd46a2125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0x203517b1 # load x3 with 32 MSBs 0x00000000203517b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000203517b1
sw x3, 0(x2) # store x3 (0x203517b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000203517b1 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fmadd.d f12, f27, f6, f15, dyn # perform operation
fmadd.d f12, f27, f6, f15, rdn # perform operation
fmadd.d f12, f27, f6, f15, rmm # perform operation
fmadd.d f12, f27, f6, f15, rne # perform operation
fmadd.d f12, f27, f6, f15, rtz # perform operation
fmadd.d f12, f27, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f27, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfffffffffffff)
li x12, 0x93512e61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0xe9efb5f2 # load x3 with 32 MSBs 0x00000000e9efb5f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9efb5f2
sw x3, 0(x2) # store x3 (0xe9efb5f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e9efb5f2 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fmadd.d f12, f13, f15, f25, dyn # perform operation
fmadd.d f12, f13, f15, f25, rdn # perform operation
fmadd.d f12, f13, f15, f25, rmm # perform operation
fmadd.d f12, f13, f15, f25, rne # perform operation
fmadd.d f12, f13, f15, f25, rtz # perform operation
fmadd.d f12, f13, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f13, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f13, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x800fffffffffffff)
li x5, 0xbb436121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x2d44aa34 # load x3 with 32 MSBs 0x000000002d44aa34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d44aa34
sw x3, 0(x2) # store x3 (0x2d44aa34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000002d44aa34 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fmadd.d f5, f23, f9, f12, dyn # perform operation
fmadd.d f5, f23, f9, f12, rdn # perform operation
fmadd.d f5, f23, f9, f12, rmm # perform operation
fmadd.d f5, f23, f9, f12, rne # perform operation
fmadd.d f5, f23, f9, f12, rtz # perform operation
fmadd.d f5, f23, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f23, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000)
li x15, 0xfdfc5309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0xfc537e60 # load x3 with 32 MSBs 0x00000000fc537e60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc537e60
sw x3, 0(x2) # store x3 (0xfc537e60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000fc537e60 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fmadd.d f15, f28, f16, f11, dyn # perform operation
fmadd.d f15, f28, f16, f11, rdn # perform operation
fmadd.d f15, f28, f16, f11, rmm # perform operation
fmadd.d f15, f28, f16, f11, rne # perform operation
fmadd.d f15, f28, f16, f11, rtz # perform operation
fmadd.d f15, f28, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f28, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f28, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f28, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f28, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f28, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8008000000000000)
li x9, 0x4427030b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x29a3b0c5 # load x3 with 32 MSBs 0x0000000029a3b0c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029a3b0c5
sw x3, 0(x2) # store x3 (0x29a3b0c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000029a3b0c5 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fmadd.d f9, f29, f15, f22, dyn # perform operation
fmadd.d f9, f29, f15, f22, rdn # perform operation
fmadd.d f9, f29, f15, f22, rmm # perform operation
fmadd.d f9, f29, f15, f22, rne # perform operation
fmadd.d f9, f29, f15, f22, rtz # perform operation
fmadd.d f9, f29, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f29, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f29, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x1)
li x9, 0x29c1fb21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0xf05a0cca # load x3 with 32 MSBs 0x00000000f05a0cca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f05a0cca
sw x3, 0(x2) # store x3 (0xf05a0cca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f05a0cca from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fmadd.d f9, f30, f23, f17, dyn # perform operation
fmadd.d f9, f30, f23, f17, rdn # perform operation
fmadd.d f9, f30, f23, f17, rmm # perform operation
fmadd.d f9, f30, f23, f17, rne # perform operation
fmadd.d f9, f30, f23, f17, rtz # perform operation
fmadd.d f9, f30, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f30, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f30, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000001)
li x28, 0x0a36271c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x83512dff # load x3 with 32 MSBs 0x0000000083512dff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083512dff
sw x3, 0(x2) # store x3 (0x83512dff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000083512dff from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fmadd.d f28, f7, f22, f4, dyn # perform operation
fmadd.d f28, f7, f22, f4, rdn # perform operation
fmadd.d f28, f7, f22, f4, rmm # perform operation
fmadd.d f28, f7, f22, f4, rne # perform operation
fmadd.d f28, f7, f22, f4, rtz # perform operation
fmadd.d f28, f7, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f7, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f7, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f7, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f7, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f7, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000000)
li x23, 0x2bfff81d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x5b3ad3c5 # load x3 with 32 MSBs 0x000000005b3ad3c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b3ad3c5
sw x3, 0(x2) # store x3 (0x5b3ad3c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005b3ad3c5 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fmadd.d f23, f12, f16, f30, dyn # perform operation
fmadd.d f23, f12, f16, f30, rdn # perform operation
fmadd.d f23, f12, f16, f30, rmm # perform operation
fmadd.d f23, f12, f16, f30, rne # perform operation
fmadd.d f23, f12, f16, f30, rtz # perform operation
fmadd.d f23, f12, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f12, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f12, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f12, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f12, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f12, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfff0000000000000)
li x8, 0xd907c704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x40803268 # load x3 with 32 MSBs 0x0000000040803268
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040803268
sw x3, 0(x2) # store x3 (0x40803268) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000040803268 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fmadd.d f8, f1, f19, f6, dyn # perform operation
fmadd.d f8, f1, f19, f6, rdn # perform operation
fmadd.d f8, f1, f19, f6, rmm # perform operation
fmadd.d f8, f1, f19, f6, rne # perform operation
fmadd.d f8, f1, f19, f6, rtz # perform operation
fmadd.d f8, f1, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f1, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff8000000000000)
li x15, 0x4dc47fe9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0x2eb53030 # load x3 with 32 MSBs 0x000000002eb53030
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002eb53030
sw x3, 0(x2) # store x3 (0x2eb53030) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002eb53030 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fmadd.d f15, f2, f31, f21, dyn # perform operation
fmadd.d f15, f2, f31, f21, rdn # perform operation
fmadd.d f15, f2, f31, f21, rmm # perform operation
fmadd.d f15, f2, f31, f21, rne # perform operation
fmadd.d f15, f2, f31, f21, rtz # perform operation
fmadd.d f15, f2, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f2, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f2, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f2, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f2, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f2, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fffffffffffffff)
li x27, 0x7320f8e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0x90142a71 # load x3 with 32 MSBs 0x0000000090142a71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090142a71
sw x3, 0(x2) # store x3 (0x90142a71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000090142a71 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fmadd.d f27, f30, f21, f19, dyn # perform operation
fmadd.d f27, f30, f21, f19, rdn # perform operation
fmadd.d f27, f30, f21, f19, rmm # perform operation
fmadd.d f27, f30, f21, f19, rne # perform operation
fmadd.d f27, f30, f21, f19, rtz # perform operation
fmadd.d f27, f30, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f30, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f30, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000001)
li x8, 0xa5f79a46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x1340afed # load x3 with 32 MSBs 0x000000001340afed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001340afed
sw x3, 0(x2) # store x3 (0x1340afed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000001340afed from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
fmadd.d f8, f7, f10, f15, dyn # perform operation
fmadd.d f8, f7, f10, f15, rdn # perform operation
fmadd.d f8, f7, f10, f15, rmm # perform operation
fmadd.d f8, f7, f10, f15, rne # perform operation
fmadd.d f8, f7, f10, f15, rtz # perform operation
fmadd.d f8, f7, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f7, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f7, f10, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff7ffffffffffff)
li x31, 0x40668181 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x284db137 # load x3 with 32 MSBs 0x00000000284db137
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000284db137
sw x3, 0(x2) # store x3 (0x284db137) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000284db137 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmadd.d f31, f5, f23, f11, dyn # perform operation
fmadd.d f31, f5, f23, f11, rdn # perform operation
fmadd.d f31, f5, f23, f11, rmm # perform operation
fmadd.d f31, f5, f23, f11, rne # perform operation
fmadd.d f31, f5, f23, f11, rtz # perform operation
fmadd.d f31, f5, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f5, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x5a392534a57711ad)
li x15, 0x04dd315b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x2b67569c # load x3 with 32 MSBs 0x000000002b67569c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b67569c
sw x3, 0(x2) # store x3 (0x2b67569c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000002b67569c from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fmadd.d f15, f16, f6, f12, dyn # perform operation
fmadd.d f15, f16, f6, f12, rdn # perform operation
fmadd.d f15, f16, f6, f12, rmm # perform operation
fmadd.d f15, f16, f6, f12, rne # perform operation
fmadd.d f15, f16, f6, f12, rtz # perform operation
fmadd.d f15, f16, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f16, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xa6e895993737426c)
li x16, 0xdaec0962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x0aedbdaa # load x3 with 32 MSBs 0x000000000aedbdaa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000aedbdaa
sw x3, 0(x2) # store x3 (0x0aedbdaa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000aedbdaa from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fmadd.d f16, f24, f4, f22, dyn # perform operation
fmadd.d f16, f24, f4, f22, rdn # perform operation
fmadd.d f16, f24, f4, f22, rmm # perform operation
fmadd.d f16, f24, f4, f22, rne # perform operation
fmadd.d f16, f24, f4, f22, rtz # perform operation
fmadd.d f16, f24, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f24, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f24, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f24, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f24, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f24, f4, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x0)
li x21, 0xe999b715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x23b3a2d2 # load x3 with 32 MSBs 0x0000000023b3a2d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023b3a2d2
sw x3, 0(x2) # store x3 (0x23b3a2d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000023b3a2d2 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fmadd.d f21, f6, f17, f7, dyn # perform operation
fmadd.d f21, f6, f17, f7, rdn # perform operation
fmadd.d f21, f6, f17, f7, rmm # perform operation
fmadd.d f21, f6, f17, f7, rne # perform operation
fmadd.d f21, f6, f17, f7, rtz # perform operation
fmadd.d f21, f6, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f6, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f6, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f6, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f6, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f6, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000000)
li x1, 0x6820675e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x5854d7a0 # load x3 with 32 MSBs 0x000000005854d7a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005854d7a0
sw x3, 0(x2) # store x3 (0x5854d7a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005854d7a0 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fmadd.d f1, f19, f26, f16, dyn # perform operation
fmadd.d f1, f19, f26, f16, rdn # perform operation
fmadd.d f1, f19, f26, f16, rmm # perform operation
fmadd.d f1, f19, f26, f16, rne # perform operation
fmadd.d f1, f19, f26, f16, rtz # perform operation
fmadd.d f1, f19, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f19, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f19, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff0000000000000)
li x9, 0xdc59c94d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x27610ec9 # load x3 with 32 MSBs 0x0000000027610ec9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027610ec9
sw x3, 0(x2) # store x3 (0x27610ec9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000027610ec9 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fmadd.d f9, f5, f3, f28, dyn # perform operation
fmadd.d f9, f5, f3, f28, rdn # perform operation
fmadd.d f9, f5, f3, f28, rmm # perform operation
fmadd.d f9, f5, f3, f28, rne # perform operation
fmadd.d f9, f5, f3, f28, rtz # perform operation
fmadd.d f9, f5, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f5, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff0000000000000)
li x30, 0x87d665fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0x0443ca35 # load x3 with 32 MSBs 0x000000000443ca35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000443ca35
sw x3, 0(x2) # store x3 (0x0443ca35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000443ca35 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fmadd.d f30, f9, f25, f18, dyn # perform operation
fmadd.d f30, f9, f25, f18, rdn # perform operation
fmadd.d f30, f9, f25, f18, rmm # perform operation
fmadd.d f30, f9, f25, f18, rne # perform operation
fmadd.d f30, f9, f25, f18, rtz # perform operation
fmadd.d f30, f9, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f9, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f9, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f9, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f9, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f9, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff8000000000000)
li x15, 0x846c7ce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0x007209bd # load x3 with 32 MSBs 0x00000000007209bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000007209bd
sw x3, 0(x2) # store x3 (0x007209bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000007209bd from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
fmadd.d f15, f20, f1, f27, dyn # perform operation
fmadd.d f15, f20, f1, f27, rdn # perform operation
fmadd.d f15, f20, f1, f27, rmm # perform operation
fmadd.d f15, f20, f1, f27, rne # perform operation
fmadd.d f15, f20, f1, f27, rtz # perform operation
fmadd.d f15, f20, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f20, f1, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff8000000000000)
li x5, 0x4089b3e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0xd398ee81 # load x3 with 32 MSBs 0x00000000d398ee81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d398ee81
sw x3, 0(x2) # store x3 (0xd398ee81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d398ee81 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fmadd.d f5, f10, f16, f15, dyn # perform operation
fmadd.d f5, f10, f16, f15, rdn # perform operation
fmadd.d f5, f10, f16, f15, rmm # perform operation
fmadd.d f5, f10, f16, f15, rne # perform operation
fmadd.d f5, f10, f16, f15, rtz # perform operation
fmadd.d f5, f10, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f10, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x4000000000000000)
li x13, 0x030bb381 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0x5ea359b9 # load x3 with 32 MSBs 0x000000005ea359b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ea359b9
sw x3, 0(x2) # store x3 (0x5ea359b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005ea359b9 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
fmadd.d f13, f26, f22, f29, dyn # perform operation
fmadd.d f13, f26, f22, f29, rdn # perform operation
fmadd.d f13, f26, f22, f29, rmm # perform operation
fmadd.d f13, f26, f22, f29, rne # perform operation
fmadd.d f13, f26, f22, f29, rtz # perform operation
fmadd.d f13, f26, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f26, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f26, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f26, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f26, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f26, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xc000000000000000)
li x29, 0xaedbcf1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x30539eba # load x3 with 32 MSBs 0x0000000030539eba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030539eba
sw x3, 0(x2) # store x3 (0x30539eba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000030539eba from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fmadd.d f29, f5, f12, f20, dyn # perform operation
fmadd.d f29, f5, f12, f20, rdn # perform operation
fmadd.d f29, f5, f12, f20, rmm # perform operation
fmadd.d f29, f5, f12, f20, rne # perform operation
fmadd.d f29, f5, f12, f20, rtz # perform operation
fmadd.d f29, f5, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f5, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f5, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f5, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f5, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f5, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x10000000000000)
li x2, 0x8a1d576f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x8304e678 # load x3 with 32 MSBs 0x000000008304e678
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008304e678
sw x3, 0(x2) # store x3 (0x8304e678) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008304e678 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fmadd.d f2, f11, f12, f7, dyn # perform operation
fmadd.d f2, f11, f12, f7, rdn # perform operation
fmadd.d f2, f11, f12, f7, rmm # perform operation
fmadd.d f2, f11, f12, f7, rne # perform operation
fmadd.d f2, f11, f12, f7, rtz # perform operation
fmadd.d f2, f11, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f11, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8010000000000000)
li x22, 0x93b3f269 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0xd99abc91 # load x3 with 32 MSBs 0x00000000d99abc91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d99abc91
sw x3, 0(x2) # store x3 (0xd99abc91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d99abc91 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fmadd.d f22, f23, f27, f4, dyn # perform operation
fmadd.d f22, f23, f27, f4, rdn # perform operation
fmadd.d f22, f23, f27, f4, rmm # perform operation
fmadd.d f22, f23, f27, f4, rne # perform operation
fmadd.d f22, f23, f27, f4, rtz # perform operation
fmadd.d f22, f23, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f23, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f23, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f23, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f23, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f23, f27, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fefffffffffffff)
li x1, 0x26155806 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0xa687bf2f # load x3 with 32 MSBs 0x00000000a687bf2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a687bf2f
sw x3, 0(x2) # store x3 (0xa687bf2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a687bf2f from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
fmadd.d f1, f5, f3, f27, dyn # perform operation
fmadd.d f1, f5, f3, f27, rdn # perform operation
fmadd.d f1, f5, f3, f27, rmm # perform operation
fmadd.d f1, f5, f3, f27, rne # perform operation
fmadd.d f1, f5, f3, f27, rtz # perform operation
fmadd.d f1, f5, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f5, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xffefffffffffffff)
li x17, 0xf8bb2623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x5fa12891 # load x3 with 32 MSBs 0x000000005fa12891
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fa12891
sw x3, 0(x2) # store x3 (0x5fa12891) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000005fa12891 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fmadd.d f17, f30, f2, f20, dyn # perform operation
fmadd.d f17, f30, f2, f20, rdn # perform operation
fmadd.d f17, f30, f2, f20, rmm # perform operation
fmadd.d f17, f30, f2, f20, rne # perform operation
fmadd.d f17, f30, f2, f20, rtz # perform operation
fmadd.d f17, f30, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f30, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f30, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f30, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f30, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f30, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfffffffffffff)
li x25, 0x3803f488 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x957b776a # load x3 with 32 MSBs 0x00000000957b776a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000957b776a
sw x3, 0(x2) # store x3 (0x957b776a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000957b776a from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fmadd.d f25, f24, f20, f9, dyn # perform operation
fmadd.d f25, f24, f20, f9, rdn # perform operation
fmadd.d f25, f24, f20, f9, rmm # perform operation
fmadd.d f25, f24, f20, f9, rne # perform operation
fmadd.d f25, f24, f20, f9, rtz # perform operation
fmadd.d f25, f24, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f24, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x800fffffffffffff)
li x24, 0x63f1ea86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x11431ceb # load x3 with 32 MSBs 0x0000000011431ceb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011431ceb
sw x3, 0(x2) # store x3 (0x11431ceb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000011431ceb from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fmadd.d f24, f28, f21, f4, dyn # perform operation
fmadd.d f24, f28, f21, f4, rdn # perform operation
fmadd.d f24, f28, f21, f4, rmm # perform operation
fmadd.d f24, f28, f21, f4, rne # perform operation
fmadd.d f24, f28, f21, f4, rtz # perform operation
fmadd.d f24, f28, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f28, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f28, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f28, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f28, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f28, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000)
li x22, 0x0e97ed58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0xfda9f87f # load x3 with 32 MSBs 0x00000000fda9f87f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fda9f87f
sw x3, 0(x2) # store x3 (0xfda9f87f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000fda9f87f from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fmadd.d f22, f1, f24, f21, dyn # perform operation
fmadd.d f22, f1, f24, f21, rdn # perform operation
fmadd.d f22, f1, f24, f21, rmm # perform operation
fmadd.d f22, f1, f24, f21, rne # perform operation
fmadd.d f22, f1, f24, f21, rtz # perform operation
fmadd.d f22, f1, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f1, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8008000000000000)
li x20, 0x3b9d2f30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0x93c9c74c # load x3 with 32 MSBs 0x0000000093c9c74c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093c9c74c
sw x3, 0(x2) # store x3 (0x93c9c74c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000093c9c74c from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fmadd.d f20, f22, f25, f2, dyn # perform operation
fmadd.d f20, f22, f25, f2, rdn # perform operation
fmadd.d f20, f22, f25, f2, rmm # perform operation
fmadd.d f20, f22, f25, f2, rne # perform operation
fmadd.d f20, f22, f25, f2, rtz # perform operation
fmadd.d f20, f22, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f22, f25, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x1)
li x25, 0x6a3c7668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x28a85fb3 # load x3 with 32 MSBs 0x0000000028a85fb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028a85fb3
sw x3, 0(x2) # store x3 (0x28a85fb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000028a85fb3 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fmadd.d f25, f28, f22, f24, dyn # perform operation
fmadd.d f25, f28, f22, f24, rdn # perform operation
fmadd.d f25, f28, f22, f24, rmm # perform operation
fmadd.d f25, f28, f22, f24, rne # perform operation
fmadd.d f25, f28, f22, f24, rtz # perform operation
fmadd.d f25, f28, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f28, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f28, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000001)
li x26, 0x72e1844d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0xcd9986dd # load x3 with 32 MSBs 0x00000000cd9986dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd9986dd
sw x3, 0(x2) # store x3 (0xcd9986dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000cd9986dd from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fmadd.d f26, f7, f14, f6, dyn # perform operation
fmadd.d f26, f7, f14, f6, rdn # perform operation
fmadd.d f26, f7, f14, f6, rmm # perform operation
fmadd.d f26, f7, f14, f6, rne # perform operation
fmadd.d f26, f7, f14, f6, rtz # perform operation
fmadd.d f26, f7, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f7, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000000)
li x20, 0x77dca6e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0xaa2a5f56 # load x3 with 32 MSBs 0x00000000aa2a5f56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa2a5f56
sw x3, 0(x2) # store x3 (0xaa2a5f56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000aa2a5f56 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fmadd.d f20, f3, f26, f9, dyn # perform operation
fmadd.d f20, f3, f26, f9, rdn # perform operation
fmadd.d f20, f3, f26, f9, rmm # perform operation
fmadd.d f20, f3, f26, f9, rne # perform operation
fmadd.d f20, f3, f26, f9, rtz # perform operation
fmadd.d f20, f3, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f3, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfff0000000000000)
li x22, 0xf09df46b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x4ca622cc # load x3 with 32 MSBs 0x000000004ca622cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ca622cc
sw x3, 0(x2) # store x3 (0x4ca622cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004ca622cc from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fmadd.d f22, f27, f18, f17, dyn # perform operation
fmadd.d f22, f27, f18, f17, rdn # perform operation
fmadd.d f22, f27, f18, f17, rmm # perform operation
fmadd.d f22, f27, f18, f17, rne # perform operation
fmadd.d f22, f27, f18, f17, rtz # perform operation
fmadd.d f22, f27, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f27, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff8000000000000)
li x7, 0xe32fc42d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x6673ad72 # load x3 with 32 MSBs 0x000000006673ad72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006673ad72
sw x3, 0(x2) # store x3 (0x6673ad72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000006673ad72 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
fmadd.d f7, f19, f30, f25, dyn # perform operation
fmadd.d f7, f19, f30, f25, rdn # perform operation
fmadd.d f7, f19, f30, f25, rmm # perform operation
fmadd.d f7, f19, f30, f25, rne # perform operation
fmadd.d f7, f19, f30, f25, rtz # perform operation
fmadd.d f7, f19, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f19, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f19, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fffffffffffffff)
li x23, 0x24650f83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0xd20be061 # load x3 with 32 MSBs 0x00000000d20be061
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d20be061
sw x3, 0(x2) # store x3 (0xd20be061) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d20be061 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fmadd.d f23, f17, f16, f2, dyn # perform operation
fmadd.d f23, f17, f16, f2, rdn # perform operation
fmadd.d f23, f17, f16, f2, rmm # perform operation
fmadd.d f23, f17, f16, f2, rne # perform operation
fmadd.d f23, f17, f16, f2, rtz # perform operation
fmadd.d f23, f17, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f17, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000001)
li x13, 0x532d5caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x497bfee6 # load x3 with 32 MSBs 0x00000000497bfee6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000497bfee6
sw x3, 0(x2) # store x3 (0x497bfee6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000497bfee6 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fmadd.d f13, f17, f5, f8, dyn # perform operation
fmadd.d f13, f17, f5, f8, rdn # perform operation
fmadd.d f13, f17, f5, f8, rmm # perform operation
fmadd.d f13, f17, f5, f8, rne # perform operation
fmadd.d f13, f17, f5, f8, rtz # perform operation
fmadd.d f13, f17, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f17, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff7ffffffffffff)
li x15, 0xa075dd44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x56798a8d # load x3 with 32 MSBs 0x0000000056798a8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056798a8d
sw x3, 0(x2) # store x3 (0x56798a8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000056798a8d from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fmadd.d f15, f11, f2, f26, dyn # perform operation
fmadd.d f15, f11, f2, f26, rdn # perform operation
fmadd.d f15, f11, f2, f26, rmm # perform operation
fmadd.d f15, f11, f2, f26, rne # perform operation
fmadd.d f15, f11, f2, f26, rtz # perform operation
fmadd.d f15, f11, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f11, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f11, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x5a392534a57711ad)
li x28, 0xc1eb8e05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x17567fa6 # load x3 with 32 MSBs 0x0000000017567fa6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017567fa6
sw x3, 0(x2) # store x3 (0x17567fa6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000017567fa6 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fmadd.d f28, f4, f11, f3, dyn # perform operation
fmadd.d f28, f4, f11, f3, rdn # perform operation
fmadd.d f28, f4, f11, f3, rmm # perform operation
fmadd.d f28, f4, f11, f3, rne # perform operation
fmadd.d f28, f4, f11, f3, rtz # perform operation
fmadd.d f28, f4, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f4, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f4, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f4, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f4, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f4, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xa6e895993737426c)
li x11, 0x4bc4e6bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0x39d42e79 # load x3 with 32 MSBs 0x0000000039d42e79
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039d42e79
sw x3, 0(x2) # store x3 (0x39d42e79) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000039d42e79 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fmadd.d f11, f3, f24, f19, dyn # perform operation
fmadd.d f11, f3, f24, f19, rdn # perform operation
fmadd.d f11, f3, f24, f19, rmm # perform operation
fmadd.d f11, f3, f24, f19, rne # perform operation
fmadd.d f11, f3, f24, f19, rtz # perform operation
fmadd.d f11, f3, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f3, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x0)
li x29, 0xdfb68383 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xf8cb106e # load x3 with 32 MSBs 0x00000000f8cb106e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8cb106e
sw x3, 0(x2) # store x3 (0xf8cb106e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f8cb106e from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
fmadd.d f29, f27, f14, f6, dyn # perform operation
fmadd.d f29, f27, f14, f6, rdn # perform operation
fmadd.d f29, f27, f14, f6, rmm # perform operation
fmadd.d f29, f27, f14, f6, rne # perform operation
fmadd.d f29, f27, f14, f6, rtz # perform operation
fmadd.d f29, f27, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f27, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000000)
li x16, 0x75e43a37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0xbcb346f1 # load x3 with 32 MSBs 0x00000000bcb346f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcb346f1
sw x3, 0(x2) # store x3 (0xbcb346f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000bcb346f1 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
fmadd.d f16, f29, f10, f15, dyn # perform operation
fmadd.d f16, f29, f10, f15, rdn # perform operation
fmadd.d f16, f29, f10, f15, rmm # perform operation
fmadd.d f16, f29, f10, f15, rne # perform operation
fmadd.d f16, f29, f10, f15, rtz # perform operation
fmadd.d f16, f29, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f29, f10, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff0000000000000)
li x30, 0x38bf0867 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0xf27db1e2 # load x3 with 32 MSBs 0x00000000f27db1e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f27db1e2
sw x3, 0(x2) # store x3 (0xf27db1e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f27db1e2 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fmadd.d f30, f19, f4, f3, dyn # perform operation
fmadd.d f30, f19, f4, f3, rdn # perform operation
fmadd.d f30, f19, f4, f3, rmm # perform operation
fmadd.d f30, f19, f4, f3, rne # perform operation
fmadd.d f30, f19, f4, f3, rtz # perform operation
fmadd.d f30, f19, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f19, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f19, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f19, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f19, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f19, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff0000000000000)
li x14, 0x83f87001 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0xaf578df6 # load x3 with 32 MSBs 0x00000000af578df6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af578df6
sw x3, 0(x2) # store x3 (0xaf578df6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000af578df6 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fmadd.d f14, f18, f5, f29, dyn # perform operation
fmadd.d f14, f18, f5, f29, rdn # perform operation
fmadd.d f14, f18, f5, f29, rmm # perform operation
fmadd.d f14, f18, f5, f29, rne # perform operation
fmadd.d f14, f18, f5, f29, rtz # perform operation
fmadd.d f14, f18, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f18, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f18, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f18, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f18, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f18, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff8000000000000)
li x30, 0x41cc2d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0x026d0df1 # load x3 with 32 MSBs 0x00000000026d0df1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000026d0df1
sw x3, 0(x2) # store x3 (0x026d0df1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000026d0df1 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fmadd.d f30, f23, f18, f7, dyn # perform operation
fmadd.d f30, f23, f18, f7, rdn # perform operation
fmadd.d f30, f23, f18, f7, rmm # perform operation
fmadd.d f30, f23, f18, f7, rne # perform operation
fmadd.d f30, f23, f18, f7, rtz # perform operation
fmadd.d f30, f23, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f23, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f23, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff8000000000000)
li x20, 0x0515e898 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x21830346 # load x3 with 32 MSBs 0x0000000021830346
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021830346
sw x3, 0(x2) # store x3 (0x21830346) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000021830346 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fmadd.d f20, f26, f18, f14, dyn # perform operation
fmadd.d f20, f26, f18, f14, rdn # perform operation
fmadd.d f20, f26, f18, f14, rmm # perform operation
fmadd.d f20, f26, f18, f14, rne # perform operation
fmadd.d f20, f26, f18, f14, rtz # perform operation
fmadd.d f20, f26, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f26, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f26, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f26, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f26, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f26, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x4000000000000000)
li x9, 0xfe3902fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0xdb3c721a # load x3 with 32 MSBs 0x00000000db3c721a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db3c721a
sw x3, 0(x2) # store x3 (0xdb3c721a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000db3c721a from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fmadd.d f9, f8, f15, f21, dyn # perform operation
fmadd.d f9, f8, f15, f21, rdn # perform operation
fmadd.d f9, f8, f15, f21, rmm # perform operation
fmadd.d f9, f8, f15, f21, rne # perform operation
fmadd.d f9, f8, f15, f21, rtz # perform operation
fmadd.d f9, f8, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f8, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f8, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f8, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f8, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f8, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xc000000000000000)
li x14, 0x10e3ad4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0x7f989ba9 # load x3 with 32 MSBs 0x000000007f989ba9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f989ba9
sw x3, 0(x2) # store x3 (0x7f989ba9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007f989ba9 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fmadd.d f14, f28, f20, f13, dyn # perform operation
fmadd.d f14, f28, f20, f13, rdn # perform operation
fmadd.d f14, f28, f20, f13, rmm # perform operation
fmadd.d f14, f28, f20, f13, rne # perform operation
fmadd.d f14, f28, f20, f13, rtz # perform operation
fmadd.d f14, f28, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f28, f20, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x10000000000000)
li x17, 0x68fb6622 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x0d49ae2a # load x3 with 32 MSBs 0x000000000d49ae2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d49ae2a
sw x3, 0(x2) # store x3 (0x0d49ae2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000000d49ae2a from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fmadd.d f17, f15, f23, f20, dyn # perform operation
fmadd.d f17, f15, f23, f20, rdn # perform operation
fmadd.d f17, f15, f23, f20, rmm # perform operation
fmadd.d f17, f15, f23, f20, rne # perform operation
fmadd.d f17, f15, f23, f20, rtz # perform operation
fmadd.d f17, f15, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f15, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8010000000000000)
li x22, 0x2cd2a86e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x4321b6fd # load x3 with 32 MSBs 0x000000004321b6fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004321b6fd
sw x3, 0(x2) # store x3 (0x4321b6fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004321b6fd from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fmadd.d f22, f29, f28, f5, dyn # perform operation
fmadd.d f22, f29, f28, f5, rdn # perform operation
fmadd.d f22, f29, f28, f5, rmm # perform operation
fmadd.d f22, f29, f28, f5, rne # perform operation
fmadd.d f22, f29, f28, f5, rtz # perform operation
fmadd.d f22, f29, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f29, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f29, f28, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fefffffffffffff)
li x27, 0xd17baa14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x03f3ea0a # load x3 with 32 MSBs 0x0000000003f3ea0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003f3ea0a
sw x3, 0(x2) # store x3 (0x03f3ea0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000003f3ea0a from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fmadd.d f27, f24, f29, f12, dyn # perform operation
fmadd.d f27, f24, f29, f12, rdn # perform operation
fmadd.d f27, f24, f29, f12, rmm # perform operation
fmadd.d f27, f24, f29, f12, rne # perform operation
fmadd.d f27, f24, f29, f12, rtz # perform operation
fmadd.d f27, f24, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f24, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xffefffffffffffff)
li x3, 0x86ed2490 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0xcaafbbad # load x3 with 32 MSBs 0x00000000caafbbad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000caafbbad
sw x3, 0(x2) # store x3 (0xcaafbbad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000caafbbad from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fmadd.d f3, f26, f20, f19, dyn # perform operation
fmadd.d f3, f26, f20, f19, rdn # perform operation
fmadd.d f3, f26, f20, f19, rmm # perform operation
fmadd.d f3, f26, f20, f19, rne # perform operation
fmadd.d f3, f26, f20, f19, rtz # perform operation
fmadd.d f3, f26, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f26, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f26, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f26, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f26, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f26, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfffffffffffff)
li x25, 0x4923bb58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x02c3b61c # load x3 with 32 MSBs 0x0000000002c3b61c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002c3b61c
sw x3, 0(x2) # store x3 (0x02c3b61c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000002c3b61c from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fmadd.d f25, f2, f29, f13, dyn # perform operation
fmadd.d f25, f2, f29, f13, rdn # perform operation
fmadd.d f25, f2, f29, f13, rmm # perform operation
fmadd.d f25, f2, f29, f13, rne # perform operation
fmadd.d f25, f2, f29, f13, rtz # perform operation
fmadd.d f25, f2, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f2, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x800fffffffffffff)
li x30, 0x152d76b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0xef1f2dec # load x3 with 32 MSBs 0x00000000ef1f2dec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef1f2dec
sw x3, 0(x2) # store x3 (0xef1f2dec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ef1f2dec from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fmadd.d f30, f28, f6, f23, dyn # perform operation
fmadd.d f30, f28, f6, f23, rdn # perform operation
fmadd.d f30, f28, f6, f23, rmm # perform operation
fmadd.d f30, f28, f6, f23, rne # perform operation
fmadd.d f30, f28, f6, f23, rtz # perform operation
fmadd.d f30, f28, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f28, f6, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000)
li x30, 0x86942568 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0xd7d9706c # load x3 with 32 MSBs 0x00000000d7d9706c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7d9706c
sw x3, 0(x2) # store x3 (0xd7d9706c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d7d9706c from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fmadd.d f30, f3, f23, f14, dyn # perform operation
fmadd.d f30, f3, f23, f14, rdn # perform operation
fmadd.d f30, f3, f23, f14, rmm # perform operation
fmadd.d f30, f3, f23, f14, rne # perform operation
fmadd.d f30, f3, f23, f14, rtz # perform operation
fmadd.d f30, f3, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f3, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8008000000000000)
li x10, 0x5c73b8fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x199b2744 # load x3 with 32 MSBs 0x00000000199b2744
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000199b2744
sw x3, 0(x2) # store x3 (0x199b2744) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000199b2744 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fmadd.d f10, f4, f16, f7, dyn # perform operation
fmadd.d f10, f4, f16, f7, rdn # perform operation
fmadd.d f10, f4, f16, f7, rmm # perform operation
fmadd.d f10, f4, f16, f7, rne # perform operation
fmadd.d f10, f4, f16, f7, rtz # perform operation
fmadd.d f10, f4, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f4, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f4, f16, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x1)
li x1, 0x1afa438b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x53acd9b6 # load x3 with 32 MSBs 0x0000000053acd9b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053acd9b6
sw x3, 0(x2) # store x3 (0x53acd9b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000053acd9b6 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fmadd.d f1, f27, f30, f16, dyn # perform operation
fmadd.d f1, f27, f30, f16, rdn # perform operation
fmadd.d f1, f27, f30, f16, rmm # perform operation
fmadd.d f1, f27, f30, f16, rne # perform operation
fmadd.d f1, f27, f30, f16, rtz # perform operation
fmadd.d f1, f27, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f27, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f27, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f27, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f27, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f27, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000001)
li x26, 0x0b4628ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0x1ae0ec98 # load x3 with 32 MSBs 0x000000001ae0ec98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ae0ec98
sw x3, 0(x2) # store x3 (0x1ae0ec98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000001ae0ec98 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmadd.d f26, f31, f7, f18, dyn # perform operation
fmadd.d f26, f31, f7, f18, rdn # perform operation
fmadd.d f26, f31, f7, f18, rmm # perform operation
fmadd.d f26, f31, f7, f18, rne # perform operation
fmadd.d f26, f31, f7, f18, rtz # perform operation
fmadd.d f26, f31, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f31, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000000)
li x25, 0x4a2f55ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x333124f5 # load x3 with 32 MSBs 0x00000000333124f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000333124f5
sw x3, 0(x2) # store x3 (0x333124f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000333124f5 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fmadd.d f25, f10, f15, f16, dyn # perform operation
fmadd.d f25, f10, f15, f16, rdn # perform operation
fmadd.d f25, f10, f15, f16, rmm # perform operation
fmadd.d f25, f10, f15, f16, rne # perform operation
fmadd.d f25, f10, f15, f16, rtz # perform operation
fmadd.d f25, f10, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f10, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfff0000000000000)
li x26, 0x77b00556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x844731aa # load x3 with 32 MSBs 0x00000000844731aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000844731aa
sw x3, 0(x2) # store x3 (0x844731aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000844731aa from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fmadd.d f26, f15, f23, f6, dyn # perform operation
fmadd.d f26, f15, f23, f6, rdn # perform operation
fmadd.d f26, f15, f23, f6, rmm # perform operation
fmadd.d f26, f15, f23, f6, rne # perform operation
fmadd.d f26, f15, f23, f6, rtz # perform operation
fmadd.d f26, f15, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f15, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff8000000000000)
li x23, 0x94bb0cd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0xe9ffee08 # load x3 with 32 MSBs 0x00000000e9ffee08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9ffee08
sw x3, 0(x2) # store x3 (0xe9ffee08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e9ffee08 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fmadd.d f23, f6, f13, f24, dyn # perform operation
fmadd.d f23, f6, f13, f24, rdn # perform operation
fmadd.d f23, f6, f13, f24, rmm # perform operation
fmadd.d f23, f6, f13, f24, rne # perform operation
fmadd.d f23, f6, f13, f24, rtz # perform operation
fmadd.d f23, f6, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f6, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f6, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f6, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f6, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f6, f13, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fffffffffffffff)
li x11, 0x6801d696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0xb0fb98e6 # load x3 with 32 MSBs 0x00000000b0fb98e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0fb98e6
sw x3, 0(x2) # store x3 (0xb0fb98e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b0fb98e6 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fmadd.d f11, f16, f26, f24, dyn # perform operation
fmadd.d f11, f16, f26, f24, rdn # perform operation
fmadd.d f11, f16, f26, f24, rmm # perform operation
fmadd.d f11, f16, f26, f24, rne # perform operation
fmadd.d f11, f16, f26, f24, rtz # perform operation
fmadd.d f11, f16, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f16, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000001)
li x24, 0xa5abd6d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x02815f0e # load x3 with 32 MSBs 0x0000000002815f0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002815f0e
sw x3, 0(x2) # store x3 (0x02815f0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000002815f0e from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fmadd.d f24, f18, f21, f5, dyn # perform operation
fmadd.d f24, f18, f21, f5, rdn # perform operation
fmadd.d f24, f18, f21, f5, rmm # perform operation
fmadd.d f24, f18, f21, f5, rne # perform operation
fmadd.d f24, f18, f21, f5, rtz # perform operation
fmadd.d f24, f18, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f18, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff7ffffffffffff)
li x27, 0x31d98506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0xf9747db7 # load x3 with 32 MSBs 0x00000000f9747db7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9747db7
sw x3, 0(x2) # store x3 (0xf9747db7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f9747db7 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fmadd.d f27, f26, f19, f28, dyn # perform operation
fmadd.d f27, f26, f19, f28, rdn # perform operation
fmadd.d f27, f26, f19, f28, rmm # perform operation
fmadd.d f27, f26, f19, f28, rne # perform operation
fmadd.d f27, f26, f19, f28, rtz # perform operation
fmadd.d f27, f26, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f26, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x5a392534a57711ad)
li x15, 0xf2a6e489 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x763f57b2 # load x3 with 32 MSBs 0x00000000763f57b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000763f57b2
sw x3, 0(x2) # store x3 (0x763f57b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000763f57b2 from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fmadd.d f15, f29, f9, f16, dyn # perform operation
fmadd.d f15, f29, f9, f16, rdn # perform operation
fmadd.d f15, f29, f9, f16, rmm # perform operation
fmadd.d f15, f29, f9, f16, rne # perform operation
fmadd.d f15, f29, f9, f16, rtz # perform operation
fmadd.d f15, f29, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f29, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f29, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f29, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f29, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f29, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xa6e895993737426c)
li x17, 0x7fce5c14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0x9f946c7d # load x3 with 32 MSBs 0x000000009f946c7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f946c7d
sw x3, 0(x2) # store x3 (0x9f946c7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009f946c7d from memory into f23
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fmadd.d f17, f8, f23, f5, dyn # perform operation
fmadd.d f17, f8, f23, f5, rdn # perform operation
fmadd.d f17, f8, f23, f5, rmm # perform operation
fmadd.d f17, f8, f23, f5, rne # perform operation
fmadd.d f17, f8, f23, f5, rtz # perform operation
fmadd.d f17, f8, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f8, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f8, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x0)
li x6, 0x7fe1c66f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x32e3d005 # load x3 with 32 MSBs 0x0000000032e3d005
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032e3d005
sw x3, 0(x2) # store x3 (0x32e3d005) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000032e3d005 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fmadd.d f6, f7, f8, f2, dyn # perform operation
fmadd.d f6, f7, f8, f2, rdn # perform operation
fmadd.d f6, f7, f8, f2, rmm # perform operation
fmadd.d f6, f7, f8, f2, rne # perform operation
fmadd.d f6, f7, f8, f2, rtz # perform operation
fmadd.d f6, f7, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f7, f8, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000000)
li x21, 0x645b933f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0xb3f39d6e # load x3 with 32 MSBs 0x00000000b3f39d6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3f39d6e
sw x3, 0(x2) # store x3 (0xb3f39d6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000b3f39d6e from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fmadd.d f21, f7, f17, f20, dyn # perform operation
fmadd.d f21, f7, f17, f20, rdn # perform operation
fmadd.d f21, f7, f17, f20, rmm # perform operation
fmadd.d f21, f7, f17, f20, rne # perform operation
fmadd.d f21, f7, f17, f20, rtz # perform operation
fmadd.d f21, f7, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f7, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff0000000000000)
li x17, 0x6be246a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x446e2796 # load x3 with 32 MSBs 0x00000000446e2796
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000446e2796
sw x3, 0(x2) # store x3 (0x446e2796) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000446e2796 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
fmadd.d f17, f23, f14, f19, dyn # perform operation
fmadd.d f17, f23, f14, f19, rdn # perform operation
fmadd.d f17, f23, f14, f19, rmm # perform operation
fmadd.d f17, f23, f14, f19, rne # perform operation
fmadd.d f17, f23, f14, f19, rtz # perform operation
fmadd.d f17, f23, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f23, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff0000000000000)
li x29, 0x9e937691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x7cace19f # load x3 with 32 MSBs 0x000000007cace19f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cace19f
sw x3, 0(x2) # store x3 (0x7cace19f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000007cace19f from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fmadd.d f29, f8, f16, f24, dyn # perform operation
fmadd.d f29, f8, f16, f24, rdn # perform operation
fmadd.d f29, f8, f16, f24, rmm # perform operation
fmadd.d f29, f8, f16, f24, rne # perform operation
fmadd.d f29, f8, f16, f24, rtz # perform operation
fmadd.d f29, f8, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f8, f16, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff8000000000000)
li x1, 0xc82d8e74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x0fe9377b # load x3 with 32 MSBs 0x000000000fe9377b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fe9377b
sw x3, 0(x2) # store x3 (0x0fe9377b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000fe9377b from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fmadd.d f1, f23, f3, f29, dyn # perform operation
fmadd.d f1, f23, f3, f29, rdn # perform operation
fmadd.d f1, f23, f3, f29, rmm # perform operation
fmadd.d f1, f23, f3, f29, rne # perform operation
fmadd.d f1, f23, f3, f29, rtz # perform operation
fmadd.d f1, f23, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f23, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f23, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f23, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f23, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f23, f3, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff8000000000000)
li x20, 0x4f86b0a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x05ddd202 # load x3 with 32 MSBs 0x0000000005ddd202
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005ddd202
sw x3, 0(x2) # store x3 (0x05ddd202) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000005ddd202 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fmadd.d f20, f7, f8, f24, dyn # perform operation
fmadd.d f20, f7, f8, f24, rdn # perform operation
fmadd.d f20, f7, f8, f24, rmm # perform operation
fmadd.d f20, f7, f8, f24, rne # perform operation
fmadd.d f20, f7, f8, f24, rtz # perform operation
fmadd.d f20, f7, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f7, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f7, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f7, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f7, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f7, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x4000000000000000)
li x4, 0xff8fd5ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x62daeb63 # load x3 with 32 MSBs 0x0000000062daeb63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062daeb63
sw x3, 0(x2) # store x3 (0x62daeb63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000062daeb63 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fmadd.d f4, f16, f3, f14, dyn # perform operation
fmadd.d f4, f16, f3, f14, rdn # perform operation
fmadd.d f4, f16, f3, f14, rmm # perform operation
fmadd.d f4, f16, f3, f14, rne # perform operation
fmadd.d f4, f16, f3, f14, rtz # perform operation
fmadd.d f4, f16, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f16, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xc000000000000000)
li x7, 0x400d4a14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0xda11cc90 # load x3 with 32 MSBs 0x00000000da11cc90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da11cc90
sw x3, 0(x2) # store x3 (0xda11cc90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000da11cc90 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fmadd.d f7, f19, f9, f30, dyn # perform operation
fmadd.d f7, f19, f9, f30, rdn # perform operation
fmadd.d f7, f19, f9, f30, rmm # perform operation
fmadd.d f7, f19, f9, f30, rne # perform operation
fmadd.d f7, f19, f9, f30, rtz # perform operation
fmadd.d f7, f19, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f19, f9, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x10000000000000)
li x22, 0x47cc440f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0xebfcf1bd # load x3 with 32 MSBs 0x00000000ebfcf1bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebfcf1bd
sw x3, 0(x2) # store x3 (0xebfcf1bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ebfcf1bd from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
fmadd.d f22, f11, f2, f25, dyn # perform operation
fmadd.d f22, f11, f2, f25, rdn # perform operation
fmadd.d f22, f11, f2, f25, rmm # perform operation
fmadd.d f22, f11, f2, f25, rne # perform operation
fmadd.d f22, f11, f2, f25, rtz # perform operation
fmadd.d f22, f11, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f11, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f11, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f11, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f11, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f11, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8010000000000000)
li x29, 0x6853f753 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x884fdc95 # load x3 with 32 MSBs 0x00000000884fdc95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000884fdc95
sw x3, 0(x2) # store x3 (0x884fdc95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000884fdc95 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fmadd.d f29, f3, f1, f16, dyn # perform operation
fmadd.d f29, f3, f1, f16, rdn # perform operation
fmadd.d f29, f3, f1, f16, rmm # perform operation
fmadd.d f29, f3, f1, f16, rne # perform operation
fmadd.d f29, f3, f1, f16, rtz # perform operation
fmadd.d f29, f3, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f3, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fefffffffffffff)
li x2, 0xf00677a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0xf052735c # load x3 with 32 MSBs 0x00000000f052735c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f052735c
sw x3, 0(x2) # store x3 (0xf052735c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f052735c from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fmadd.d f2, f20, f11, f14, dyn # perform operation
fmadd.d f2, f20, f11, f14, rdn # perform operation
fmadd.d f2, f20, f11, f14, rmm # perform operation
fmadd.d f2, f20, f11, f14, rne # perform operation
fmadd.d f2, f20, f11, f14, rtz # perform operation
fmadd.d f2, f20, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f20, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f20, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xffefffffffffffff)
li x10, 0x9fe86cb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0xb3dbab14 # load x3 with 32 MSBs 0x00000000b3dbab14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3dbab14
sw x3, 0(x2) # store x3 (0xb3dbab14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b3dbab14 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
fmadd.d f10, f25, f30, f21, dyn # perform operation
fmadd.d f10, f25, f30, f21, rdn # perform operation
fmadd.d f10, f25, f30, f21, rmm # perform operation
fmadd.d f10, f25, f30, f21, rne # perform operation
fmadd.d f10, f25, f30, f21, rtz # perform operation
fmadd.d f10, f25, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f25, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfffffffffffff)
li x10, 0x40f7913b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x90df2cb0 # load x3 with 32 MSBs 0x0000000090df2cb0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090df2cb0
sw x3, 0(x2) # store x3 (0x90df2cb0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000090df2cb0 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fmadd.d f10, f28, f15, f29, dyn # perform operation
fmadd.d f10, f28, f15, f29, rdn # perform operation
fmadd.d f10, f28, f15, f29, rmm # perform operation
fmadd.d f10, f28, f15, f29, rne # perform operation
fmadd.d f10, f28, f15, f29, rtz # perform operation
fmadd.d f10, f28, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f28, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f28, f15, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x800fffffffffffff)
li x15, 0x1538043a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x72544db9 # load x3 with 32 MSBs 0x0000000072544db9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072544db9
sw x3, 0(x2) # store x3 (0x72544db9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000072544db9 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fmadd.d f15, f16, f31, f13, dyn # perform operation
fmadd.d f15, f16, f31, f13, rdn # perform operation
fmadd.d f15, f16, f31, f13, rmm # perform operation
fmadd.d f15, f16, f31, f13, rne # perform operation
fmadd.d f15, f16, f31, f13, rtz # perform operation
fmadd.d f15, f16, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f16, f31, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000)
li x17, 0xe8d955e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x1fa86ca9 # load x3 with 32 MSBs 0x000000001fa86ca9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001fa86ca9
sw x3, 0(x2) # store x3 (0x1fa86ca9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001fa86ca9 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fmadd.d f17, f22, f2, f4, dyn # perform operation
fmadd.d f17, f22, f2, f4, rdn # perform operation
fmadd.d f17, f22, f2, f4, rmm # perform operation
fmadd.d f17, f22, f2, f4, rne # perform operation
fmadd.d f17, f22, f2, f4, rtz # perform operation
fmadd.d f17, f22, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f22, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f22, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8008000000000000)
li x6, 0x4861c3bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x2197ae37 # load x3 with 32 MSBs 0x000000002197ae37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002197ae37
sw x3, 0(x2) # store x3 (0x2197ae37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002197ae37 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
fmadd.d f6, f26, f14, f24, dyn # perform operation
fmadd.d f6, f26, f14, f24, rdn # perform operation
fmadd.d f6, f26, f14, f24, rmm # perform operation
fmadd.d f6, f26, f14, f24, rne # perform operation
fmadd.d f6, f26, f14, f24, rtz # perform operation
fmadd.d f6, f26, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f26, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x1)
li x13, 0x4b95ca14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x6ba20d03 # load x3 with 32 MSBs 0x000000006ba20d03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ba20d03
sw x3, 0(x2) # store x3 (0x6ba20d03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006ba20d03 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fmadd.d f13, f19, f22, f24, dyn # perform operation
fmadd.d f13, f19, f22, f24, rdn # perform operation
fmadd.d f13, f19, f22, f24, rmm # perform operation
fmadd.d f13, f19, f22, f24, rne # perform operation
fmadd.d f13, f19, f22, f24, rtz # perform operation
fmadd.d f13, f19, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f19, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000001)
li x17, 0x7503c224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x74b7f152 # load x3 with 32 MSBs 0x0000000074b7f152
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074b7f152
sw x3, 0(x2) # store x3 (0x74b7f152) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000074b7f152 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fmadd.d f17, f19, f18, f23, dyn # perform operation
fmadd.d f17, f19, f18, f23, rdn # perform operation
fmadd.d f17, f19, f18, f23, rmm # perform operation
fmadd.d f17, f19, f18, f23, rne # perform operation
fmadd.d f17, f19, f18, f23, rtz # perform operation
fmadd.d f17, f19, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f19, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f19, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000000)
li x25, 0x9a173208 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x1d96fd03 # load x3 with 32 MSBs 0x000000001d96fd03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d96fd03
sw x3, 0(x2) # store x3 (0x1d96fd03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001d96fd03 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fmadd.d f25, f14, f13, f4, dyn # perform operation
fmadd.d f25, f14, f13, f4, rdn # perform operation
fmadd.d f25, f14, f13, f4, rmm # perform operation
fmadd.d f25, f14, f13, f4, rne # perform operation
fmadd.d f25, f14, f13, f4, rtz # perform operation
fmadd.d f25, f14, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f14, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfff0000000000000)
li x8, 0x36d7f458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0xc21bc0ae # load x3 with 32 MSBs 0x00000000c21bc0ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c21bc0ae
sw x3, 0(x2) # store x3 (0xc21bc0ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c21bc0ae from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fmadd.d f8, f31, f9, f15, dyn # perform operation
fmadd.d f8, f31, f9, f15, rdn # perform operation
fmadd.d f8, f31, f9, f15, rmm # perform operation
fmadd.d f8, f31, f9, f15, rne # perform operation
fmadd.d f8, f31, f9, f15, rtz # perform operation
fmadd.d f8, f31, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f31, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f31, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f31, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f31, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f31, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff8000000000000)
li x22, 0x2dd11e43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x96709019 # load x3 with 32 MSBs 0x0000000096709019
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096709019
sw x3, 0(x2) # store x3 (0x96709019) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000096709019 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
fmadd.d f22, f9, f7, f11, dyn # perform operation
fmadd.d f22, f9, f7, f11, rdn # perform operation
fmadd.d f22, f9, f7, f11, rmm # perform operation
fmadd.d f22, f9, f7, f11, rne # perform operation
fmadd.d f22, f9, f7, f11, rtz # perform operation
fmadd.d f22, f9, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f9, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f9, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f9, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f9, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f9, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fffffffffffffff)
li x28, 0x134fea19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x2410830a # load x3 with 32 MSBs 0x000000002410830a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002410830a
sw x3, 0(x2) # store x3 (0x2410830a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002410830a from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fmadd.d f28, f29, f17, f2, dyn # perform operation
fmadd.d f28, f29, f17, f2, rdn # perform operation
fmadd.d f28, f29, f17, f2, rmm # perform operation
fmadd.d f28, f29, f17, f2, rne # perform operation
fmadd.d f28, f29, f17, f2, rtz # perform operation
fmadd.d f28, f29, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f29, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000001)
li x8, 0x8cedeb86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0xb26dc636 # load x3 with 32 MSBs 0x00000000b26dc636
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b26dc636
sw x3, 0(x2) # store x3 (0xb26dc636) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b26dc636 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fmadd.d f8, f23, f1, f14, dyn # perform operation
fmadd.d f8, f23, f1, f14, rdn # perform operation
fmadd.d f8, f23, f1, f14, rmm # perform operation
fmadd.d f8, f23, f1, f14, rne # perform operation
fmadd.d f8, f23, f1, f14, rtz # perform operation
fmadd.d f8, f23, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f23, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff7ffffffffffff)
li x13, 0xf69a74bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x60798f29 # load x3 with 32 MSBs 0x0000000060798f29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060798f29
sw x3, 0(x2) # store x3 (0x60798f29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000060798f29 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fmadd.d f13, f16, f14, f29, dyn # perform operation
fmadd.d f13, f16, f14, f29, rdn # perform operation
fmadd.d f13, f16, f14, f29, rmm # perform operation
fmadd.d f13, f16, f14, f29, rne # perform operation
fmadd.d f13, f16, f14, f29, rtz # perform operation
fmadd.d f13, f16, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f16, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x5a392534a57711ad)
li x24, 0x3e209ee3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x7ad819b6 # load x3 with 32 MSBs 0x000000007ad819b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ad819b6
sw x3, 0(x2) # store x3 (0x7ad819b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000007ad819b6 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fmadd.d f24, f25, f15, f31, dyn # perform operation
fmadd.d f24, f25, f15, f31, rdn # perform operation
fmadd.d f24, f25, f15, f31, rmm # perform operation
fmadd.d f24, f25, f15, f31, rne # perform operation
fmadd.d f24, f25, f15, f31, rtz # perform operation
fmadd.d f24, f25, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f25, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f25, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xa6e895993737426c)
li x1, 0x5fc71b1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x500e7996 # load x3 with 32 MSBs 0x00000000500e7996
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000500e7996
sw x3, 0(x2) # store x3 (0x500e7996) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000500e7996 from memory into f13
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fmadd.d f1, f5, f13, f8, dyn # perform operation
fmadd.d f1, f5, f13, f8, rdn # perform operation
fmadd.d f1, f5, f13, f8, rmm # perform operation
fmadd.d f1, f5, f13, f8, rne # perform operation
fmadd.d f1, f5, f13, f8, rtz # perform operation
fmadd.d f1, f5, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f5, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f5, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f5, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f5, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f5, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x0)
li x11, 0xef914252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x3e9c968f # load x3 with 32 MSBs 0x000000003e9c968f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e9c968f
sw x3, 0(x2) # store x3 (0x3e9c968f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003e9c968f from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fmadd.d f11, f5, f15, f19, dyn # perform operation
fmadd.d f11, f5, f15, f19, rdn # perform operation
fmadd.d f11, f5, f15, f19, rmm # perform operation
fmadd.d f11, f5, f15, f19, rne # perform operation
fmadd.d f11, f5, f15, f19, rtz # perform operation
fmadd.d f11, f5, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f5, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000000)
li x23, 0xcf82a5e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0xd531f0e2 # load x3 with 32 MSBs 0x00000000d531f0e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d531f0e2
sw x3, 0(x2) # store x3 (0xd531f0e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d531f0e2 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fmadd.d f23, f26, f25, f13, dyn # perform operation
fmadd.d f23, f26, f25, f13, rdn # perform operation
fmadd.d f23, f26, f25, f13, rmm # perform operation
fmadd.d f23, f26, f25, f13, rne # perform operation
fmadd.d f23, f26, f25, f13, rtz # perform operation
fmadd.d f23, f26, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f26, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff0000000000000)
li x24, 0xf7b1c2ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x3bd453f9 # load x3 with 32 MSBs 0x000000003bd453f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bd453f9
sw x3, 0(x2) # store x3 (0x3bd453f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003bd453f9 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fmadd.d f24, f26, f22, f15, dyn # perform operation
fmadd.d f24, f26, f22, f15, rdn # perform operation
fmadd.d f24, f26, f22, f15, rmm # perform operation
fmadd.d f24, f26, f22, f15, rne # perform operation
fmadd.d f24, f26, f22, f15, rtz # perform operation
fmadd.d f24, f26, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f26, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f26, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f26, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f26, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f26, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff0000000000000)
li x21, 0x1b0ad2e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0x001e7e2a # load x3 with 32 MSBs 0x00000000001e7e2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000001e7e2a
sw x3, 0(x2) # store x3 (0x001e7e2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000001e7e2a from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fmadd.d f21, f20, f18, f30, dyn # perform operation
fmadd.d f21, f20, f18, f30, rdn # perform operation
fmadd.d f21, f20, f18, f30, rmm # perform operation
fmadd.d f21, f20, f18, f30, rne # perform operation
fmadd.d f21, f20, f18, f30, rtz # perform operation
fmadd.d f21, f20, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f20, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f20, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f20, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f20, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f20, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff8000000000000)
li x23, 0x25903075 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x141b244c # load x3 with 32 MSBs 0x00000000141b244c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000141b244c
sw x3, 0(x2) # store x3 (0x141b244c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000141b244c from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fmadd.d f23, f26, f3, f5, dyn # perform operation
fmadd.d f23, f26, f3, f5, rdn # perform operation
fmadd.d f23, f26, f3, f5, rmm # perform operation
fmadd.d f23, f26, f3, f5, rne # perform operation
fmadd.d f23, f26, f3, f5, rtz # perform operation
fmadd.d f23, f26, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f26, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f26, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff8000000000000)
li x12, 0x6968ca9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
li x3, 0xe023b17b # load x3 with 32 MSBs 0x00000000e023b17b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e023b17b
sw x3, 0(x2) # store x3 (0xe023b17b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e023b17b from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fmadd.d f12, f21, f5, f8, dyn # perform operation
fmadd.d f12, f21, f5, f8, rdn # perform operation
fmadd.d f12, f21, f5, f8, rmm # perform operation
fmadd.d f12, f21, f5, f8, rne # perform operation
fmadd.d f12, f21, f5, f8, rtz # perform operation
fmadd.d f12, f21, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f21, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f21, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f21, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f21, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f21, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x4000000000000000)
li x28, 0xce5c208c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0x699dc1bb # load x3 with 32 MSBs 0x00000000699dc1bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000699dc1bb
sw x3, 0(x2) # store x3 (0x699dc1bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000699dc1bb from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
fmadd.d f28, f27, f10, f17, dyn # perform operation
fmadd.d f28, f27, f10, f17, rdn # perform operation
fmadd.d f28, f27, f10, f17, rmm # perform operation
fmadd.d f28, f27, f10, f17, rne # perform operation
fmadd.d f28, f27, f10, f17, rtz # perform operation
fmadd.d f28, f27, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f27, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f27, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xc000000000000000)
li x25, 0x2ca7b717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0x35fdd2bd # load x3 with 32 MSBs 0x0000000035fdd2bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035fdd2bd
sw x3, 0(x2) # store x3 (0x35fdd2bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000035fdd2bd from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fmadd.d f25, f27, f8, f30, dyn # perform operation
fmadd.d f25, f27, f8, f30, rdn # perform operation
fmadd.d f25, f27, f8, f30, rmm # perform operation
fmadd.d f25, f27, f8, f30, rne # perform operation
fmadd.d f25, f27, f8, f30, rtz # perform operation
fmadd.d f25, f27, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f27, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x10000000000000)
li x3, 0xbf2b5832 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x021d1399 # load x3 with 32 MSBs 0x00000000021d1399
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000021d1399
sw x3, 0(x2) # store x3 (0x021d1399) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000021d1399 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fmadd.d f3, f16, f20, f5, dyn # perform operation
fmadd.d f3, f16, f20, f5, rdn # perform operation
fmadd.d f3, f16, f20, f5, rmm # perform operation
fmadd.d f3, f16, f20, f5, rne # perform operation
fmadd.d f3, f16, f20, f5, rtz # perform operation
fmadd.d f3, f16, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f16, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8010000000000000)
li x9, 0xbf753add # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0xcdb35291 # load x3 with 32 MSBs 0x00000000cdb35291
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cdb35291
sw x3, 0(x2) # store x3 (0xcdb35291) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000cdb35291 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fmadd.d f9, f10, f18, f6, dyn # perform operation
fmadd.d f9, f10, f18, f6, rdn # perform operation
fmadd.d f9, f10, f18, f6, rmm # perform operation
fmadd.d f9, f10, f18, f6, rne # perform operation
fmadd.d f9, f10, f18, f6, rtz # perform operation
fmadd.d f9, f10, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f10, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fefffffffffffff)
li x23, 0x03dd84ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0xf687dc66 # load x3 with 32 MSBs 0x00000000f687dc66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f687dc66
sw x3, 0(x2) # store x3 (0xf687dc66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f687dc66 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fmadd.d f23, f11, f31, f25, dyn # perform operation
fmadd.d f23, f11, f31, f25, rdn # perform operation
fmadd.d f23, f11, f31, f25, rmm # perform operation
fmadd.d f23, f11, f31, f25, rne # perform operation
fmadd.d f23, f11, f31, f25, rtz # perform operation
fmadd.d f23, f11, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f11, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f11, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xffefffffffffffff)
li x22, 0x559b686f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
li x3, 0xeeed9ebb # load x3 with 32 MSBs 0x00000000eeed9ebb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eeed9ebb
sw x3, 0(x2) # store x3 (0xeeed9ebb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000eeed9ebb from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fmadd.d f22, f21, f15, f5, dyn # perform operation
fmadd.d f22, f21, f15, f5, rdn # perform operation
fmadd.d f22, f21, f15, f5, rmm # perform operation
fmadd.d f22, f21, f15, f5, rne # perform operation
fmadd.d f22, f21, f15, f5, rtz # perform operation
fmadd.d f22, f21, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f21, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfffffffffffff)
li x5, 0x9847f6c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0xf73b9a02 # load x3 with 32 MSBs 0x00000000f73b9a02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f73b9a02
sw x3, 0(x2) # store x3 (0xf73b9a02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f73b9a02 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fmadd.d f5, f31, f1, f15, dyn # perform operation
fmadd.d f5, f31, f1, f15, rdn # perform operation
fmadd.d f5, f31, f1, f15, rmm # perform operation
fmadd.d f5, f31, f1, f15, rne # perform operation
fmadd.d f5, f31, f1, f15, rtz # perform operation
fmadd.d f5, f31, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f31, f1, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x800fffffffffffff)
li x8, 0xe9dfd0e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0xfb97d142 # load x3 with 32 MSBs 0x00000000fb97d142
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb97d142
sw x3, 0(x2) # store x3 (0xfb97d142) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fb97d142 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fmadd.d f8, f20, f18, f31, dyn # perform operation
fmadd.d f8, f20, f18, f31, rdn # perform operation
fmadd.d f8, f20, f18, f31, rmm # perform operation
fmadd.d f8, f20, f18, f31, rne # perform operation
fmadd.d f8, f20, f18, f31, rtz # perform operation
fmadd.d f8, f20, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f20, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f20, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f20, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f20, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f20, f18, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000)
li x7, 0xd3f91c89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0xb05aee0b # load x3 with 32 MSBs 0x00000000b05aee0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b05aee0b
sw x3, 0(x2) # store x3 (0xb05aee0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b05aee0b from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fmadd.d f7, f16, f22, f20, dyn # perform operation
fmadd.d f7, f16, f22, f20, rdn # perform operation
fmadd.d f7, f16, f22, f20, rmm # perform operation
fmadd.d f7, f16, f22, f20, rne # perform operation
fmadd.d f7, f16, f22, f20, rtz # perform operation
fmadd.d f7, f16, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f16, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f16, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8008000000000000)
li x7, 0x23f695cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x31e57fd2 # load x3 with 32 MSBs 0x0000000031e57fd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031e57fd2
sw x3, 0(x2) # store x3 (0x31e57fd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000031e57fd2 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fmadd.d f7, f10, f15, f14, dyn # perform operation
fmadd.d f7, f10, f15, f14, rdn # perform operation
fmadd.d f7, f10, f15, f14, rmm # perform operation
fmadd.d f7, f10, f15, f14, rne # perform operation
fmadd.d f7, f10, f15, f14, rtz # perform operation
fmadd.d f7, f10, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f10, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f10, f15, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x1)
li x1, 0xd1173eed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x4795a3b8 # load x3 with 32 MSBs 0x000000004795a3b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004795a3b8
sw x3, 0(x2) # store x3 (0x4795a3b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004795a3b8 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fmadd.d f1, f18, f11, f16, dyn # perform operation
fmadd.d f1, f18, f11, f16, rdn # perform operation
fmadd.d f1, f18, f11, f16, rmm # perform operation
fmadd.d f1, f18, f11, f16, rne # perform operation
fmadd.d f1, f18, f11, f16, rtz # perform operation
fmadd.d f1, f18, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f18, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f18, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f18, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f18, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f18, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000001)
li x31, 0x54098fa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0x6fa746e0 # load x3 with 32 MSBs 0x000000006fa746e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fa746e0
sw x3, 0(x2) # store x3 (0x6fa746e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006fa746e0 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fmadd.d f31, f25, f5, f4, dyn # perform operation
fmadd.d f31, f25, f5, f4, rdn # perform operation
fmadd.d f31, f25, f5, f4, rmm # perform operation
fmadd.d f31, f25, f5, f4, rne # perform operation
fmadd.d f31, f25, f5, f4, rtz # perform operation
fmadd.d f31, f25, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f25, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f25, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f25, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f25, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f25, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000000)
li x12, 0xda8966e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0xf719839f # load x3 with 32 MSBs 0x00000000f719839f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f719839f
sw x3, 0(x2) # store x3 (0xf719839f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f719839f from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fmadd.d f12, f15, f14, f3, dyn # perform operation
fmadd.d f12, f15, f14, f3, rdn # perform operation
fmadd.d f12, f15, f14, f3, rmm # perform operation
fmadd.d f12, f15, f14, f3, rne # perform operation
fmadd.d f12, f15, f14, f3, rtz # perform operation
fmadd.d f12, f15, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f15, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfff0000000000000)
li x27, 0x9c3b4c79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x43f23fc7 # load x3 with 32 MSBs 0x0000000043f23fc7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043f23fc7
sw x3, 0(x2) # store x3 (0x43f23fc7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000043f23fc7 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fmadd.d f27, f31, f21, f12, dyn # perform operation
fmadd.d f27, f31, f21, f12, rdn # perform operation
fmadd.d f27, f31, f21, f12, rmm # perform operation
fmadd.d f27, f31, f21, f12, rne # perform operation
fmadd.d f27, f31, f21, f12, rtz # perform operation
fmadd.d f27, f31, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f31, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff8000000000000)
li x3, 0x704468ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0xe6f896e2 # load x3 with 32 MSBs 0x00000000e6f896e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6f896e2
sw x3, 0(x2) # store x3 (0xe6f896e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e6f896e2 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fmadd.d f3, f12, f19, f22, dyn # perform operation
fmadd.d f3, f12, f19, f22, rdn # perform operation
fmadd.d f3, f12, f19, f22, rmm # perform operation
fmadd.d f3, f12, f19, f22, rne # perform operation
fmadd.d f3, f12, f19, f22, rtz # perform operation
fmadd.d f3, f12, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f12, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fffffffffffffff)
li x20, 0x7b5626b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0xe6a26577 # load x3 with 32 MSBs 0x00000000e6a26577
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6a26577
sw x3, 0(x2) # store x3 (0xe6a26577) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e6a26577 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fmadd.d f20, f7, f19, f22, dyn # perform operation
fmadd.d f20, f7, f19, f22, rdn # perform operation
fmadd.d f20, f7, f19, f22, rmm # perform operation
fmadd.d f20, f7, f19, f22, rne # perform operation
fmadd.d f20, f7, f19, f22, rtz # perform operation
fmadd.d f20, f7, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f7, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000001)
li x2, 0xa26f04c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0x1dd43ba6 # load x3 with 32 MSBs 0x000000001dd43ba6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001dd43ba6
sw x3, 0(x2) # store x3 (0x1dd43ba6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001dd43ba6 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
fmadd.d f2, f25, f15, f4, dyn # perform operation
fmadd.d f2, f25, f15, f4, rdn # perform operation
fmadd.d f2, f25, f15, f4, rmm # perform operation
fmadd.d f2, f25, f15, f4, rne # perform operation
fmadd.d f2, f25, f15, f4, rtz # perform operation
fmadd.d f2, f25, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f25, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f25, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f25, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f25, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f25, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x31, 0xa78f6980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
li x3, 0x26f82fbf # load x3 with 32 MSBs 0x0000000026f82fbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026f82fbf
sw x3, 0(x2) # store x3 (0x26f82fbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000026f82fbf from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fmadd.d f31, f21, f17, f2, dyn # perform operation
fmadd.d f31, f21, f17, f2, rdn # perform operation
fmadd.d f31, f21, f17, f2, rmm # perform operation
fmadd.d f31, f21, f17, f2, rne # perform operation
fmadd.d f31, f21, f17, f2, rtz # perform operation
fmadd.d f31, f21, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f21, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x5a392534a57711ad)
li x26, 0x7a4772a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x7d9f9b60 # load x3 with 32 MSBs 0x000000007d9f9b60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d9f9b60
sw x3, 0(x2) # store x3 (0x7d9f9b60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007d9f9b60 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fmadd.d f26, f7, f3, f14, dyn # perform operation
fmadd.d f26, f7, f3, f14, rdn # perform operation
fmadd.d f26, f7, f3, f14, rmm # perform operation
fmadd.d f26, f7, f3, f14, rne # perform operation
fmadd.d f26, f7, f3, f14, rtz # perform operation
fmadd.d f26, f7, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f7, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xa6e895993737426c)
li x20, 0xa29f6fab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0xae6e75c8 # load x3 with 32 MSBs 0x00000000ae6e75c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae6e75c8
sw x3, 0(x2) # store x3 (0xae6e75c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ae6e75c8 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fmadd.d f20, f28, f7, f27, dyn # perform operation
fmadd.d f20, f28, f7, f27, rdn # perform operation
fmadd.d f20, f28, f7, f27, rmm # perform operation
fmadd.d f20, f28, f7, f27, rne # perform operation
fmadd.d f20, f28, f7, f27, rtz # perform operation
fmadd.d f20, f28, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f28, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f28, f7, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x0)
li x2, 0x67f410a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x16bba8cd # load x3 with 32 MSBs 0x0000000016bba8cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016bba8cd
sw x3, 0(x2) # store x3 (0x16bba8cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000016bba8cd from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
fmadd.d f2, f6, f18, f9, dyn # perform operation
fmadd.d f2, f6, f18, f9, rdn # perform operation
fmadd.d f2, f6, f18, f9, rmm # perform operation
fmadd.d f2, f6, f18, f9, rne # perform operation
fmadd.d f2, f6, f18, f9, rtz # perform operation
fmadd.d f2, f6, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f6, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000000)
li x2, 0x0c3dd50b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xcc6a22a8 # load x3 with 32 MSBs 0x00000000cc6a22a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc6a22a8
sw x3, 0(x2) # store x3 (0xcc6a22a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cc6a22a8 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fmadd.d f2, f25, f29, f21, dyn # perform operation
fmadd.d f2, f25, f29, f21, rdn # perform operation
fmadd.d f2, f25, f29, f21, rmm # perform operation
fmadd.d f2, f25, f29, f21, rne # perform operation
fmadd.d f2, f25, f29, f21, rtz # perform operation
fmadd.d f2, f25, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f25, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f25, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff0000000000000)
li x7, 0x5350c893 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x9f9dc22a # load x3 with 32 MSBs 0x000000009f9dc22a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f9dc22a
sw x3, 0(x2) # store x3 (0x9f9dc22a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009f9dc22a from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fmadd.d f7, f1, f28, f21, dyn # perform operation
fmadd.d f7, f1, f28, f21, rdn # perform operation
fmadd.d f7, f1, f28, f21, rmm # perform operation
fmadd.d f7, f1, f28, f21, rne # perform operation
fmadd.d f7, f1, f28, f21, rtz # perform operation
fmadd.d f7, f1, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f1, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff0000000000000)
li x15, 0xc43e52b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x7cea76c5 # load x3 with 32 MSBs 0x000000007cea76c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cea76c5
sw x3, 0(x2) # store x3 (0x7cea76c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007cea76c5 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fmadd.d f15, f7, f21, f31, dyn # perform operation
fmadd.d f15, f7, f21, f31, rdn # perform operation
fmadd.d f15, f7, f21, f31, rmm # perform operation
fmadd.d f15, f7, f21, f31, rne # perform operation
fmadd.d f15, f7, f21, f31, rtz # perform operation
fmadd.d f15, f7, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f7, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff8000000000000)
li x26, 0x81f16dbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x963d2381 # load x3 with 32 MSBs 0x00000000963d2381
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000963d2381
sw x3, 0(x2) # store x3 (0x963d2381) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000963d2381 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fmadd.d f26, f5, f29, f23, dyn # perform operation
fmadd.d f26, f5, f29, f23, rdn # perform operation
fmadd.d f26, f5, f29, f23, rmm # perform operation
fmadd.d f26, f5, f29, f23, rne # perform operation
fmadd.d f26, f5, f29, f23, rtz # perform operation
fmadd.d f26, f5, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f5, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f5, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff8000000000000)
li x27, 0x70f8e630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0xddd2f923 # load x3 with 32 MSBs 0x00000000ddd2f923
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddd2f923
sw x3, 0(x2) # store x3 (0xddd2f923) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ddd2f923 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fmadd.d f27, f28, f26, f5, dyn # perform operation
fmadd.d f27, f28, f26, f5, rdn # perform operation
fmadd.d f27, f28, f26, f5, rmm # perform operation
fmadd.d f27, f28, f26, f5, rne # perform operation
fmadd.d f27, f28, f26, f5, rtz # perform operation
fmadd.d f27, f28, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f28, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f28, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f28, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f28, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f28, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x4000000000000000)
li x23, 0xed6f55cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0xf883cbbb # load x3 with 32 MSBs 0x00000000f883cbbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f883cbbb
sw x3, 0(x2) # store x3 (0xf883cbbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f883cbbb from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fmadd.d f23, f6, f4, f5, dyn # perform operation
fmadd.d f23, f6, f4, f5, rdn # perform operation
fmadd.d f23, f6, f4, f5, rmm # perform operation
fmadd.d f23, f6, f4, f5, rne # perform operation
fmadd.d f23, f6, f4, f5, rtz # perform operation
fmadd.d f23, f6, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f6, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f6, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f6, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f6, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f6, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xc000000000000000)
li x4, 0x102af35c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x744caa83 # load x3 with 32 MSBs 0x00000000744caa83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000744caa83
sw x3, 0(x2) # store x3 (0x744caa83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000744caa83 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fmadd.d f4, f10, f11, f20, dyn # perform operation
fmadd.d f4, f10, f11, f20, rdn # perform operation
fmadd.d f4, f10, f11, f20, rmm # perform operation
fmadd.d f4, f10, f11, f20, rne # perform operation
fmadd.d f4, f10, f11, f20, rtz # perform operation
fmadd.d f4, f10, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f10, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x10000000000000)
li x27, 0xbf023095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x76fd3091 # load x3 with 32 MSBs 0x0000000076fd3091
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076fd3091
sw x3, 0(x2) # store x3 (0x76fd3091) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000076fd3091 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fmadd.d f27, f28, f4, f12, dyn # perform operation
fmadd.d f27, f28, f4, f12, rdn # perform operation
fmadd.d f27, f28, f4, f12, rmm # perform operation
fmadd.d f27, f28, f4, f12, rne # perform operation
fmadd.d f27, f28, f4, f12, rtz # perform operation
fmadd.d f27, f28, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f28, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8010000000000000)
li x8, 0xf644938e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0x9af5f9f7 # load x3 with 32 MSBs 0x000000009af5f9f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009af5f9f7
sw x3, 0(x2) # store x3 (0x9af5f9f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009af5f9f7 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fmadd.d f8, f31, f14, f25, dyn # perform operation
fmadd.d f8, f31, f14, f25, rdn # perform operation
fmadd.d f8, f31, f14, f25, rmm # perform operation
fmadd.d f8, f31, f14, f25, rne # perform operation
fmadd.d f8, f31, f14, f25, rtz # perform operation
fmadd.d f8, f31, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f31, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fefffffffffffff)
li x5, 0x2cb790f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x4da5c6ca # load x3 with 32 MSBs 0x000000004da5c6ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004da5c6ca
sw x3, 0(x2) # store x3 (0x4da5c6ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004da5c6ca from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fmadd.d f5, f29, f31, f13, dyn # perform operation
fmadd.d f5, f29, f31, f13, rdn # perform operation
fmadd.d f5, f29, f31, f13, rmm # perform operation
fmadd.d f5, f29, f31, f13, rne # perform operation
fmadd.d f5, f29, f31, f13, rtz # perform operation
fmadd.d f5, f29, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f29, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f29, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f29, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f29, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f29, f31, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xffefffffffffffff)
li x31, 0xd43a8385 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x370117c9 # load x3 with 32 MSBs 0x00000000370117c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000370117c9
sw x3, 0(x2) # store x3 (0x370117c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000370117c9 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fmadd.d f31, f3, f7, f17, dyn # perform operation
fmadd.d f31, f3, f7, f17, rdn # perform operation
fmadd.d f31, f3, f7, f17, rmm # perform operation
fmadd.d f31, f3, f7, f17, rne # perform operation
fmadd.d f31, f3, f7, f17, rtz # perform operation
fmadd.d f31, f3, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f3, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f3, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f3, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f3, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f3, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfffffffffffff)
li x12, 0xa7138318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0xafa92e45 # load x3 with 32 MSBs 0x00000000afa92e45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afa92e45
sw x3, 0(x2) # store x3 (0xafa92e45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000afa92e45 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fmadd.d f12, f4, f23, f29, dyn # perform operation
fmadd.d f12, f4, f23, f29, rdn # perform operation
fmadd.d f12, f4, f23, f29, rmm # perform operation
fmadd.d f12, f4, f23, f29, rne # perform operation
fmadd.d f12, f4, f23, f29, rtz # perform operation
fmadd.d f12, f4, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f4, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f4, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f4, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f4, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f4, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x800fffffffffffff)
li x13, 0x7e15e64d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0xb944a80f # load x3 with 32 MSBs 0x00000000b944a80f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b944a80f
sw x3, 0(x2) # store x3 (0xb944a80f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000b944a80f from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
fmadd.d f13, f10, f14, f8, dyn # perform operation
fmadd.d f13, f10, f14, f8, rdn # perform operation
fmadd.d f13, f10, f14, f8, rmm # perform operation
fmadd.d f13, f10, f14, f8, rne # perform operation
fmadd.d f13, f10, f14, f8, rtz # perform operation
fmadd.d f13, f10, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f10, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f10, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000)
li x26, 0xf0384dab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x978f9b1e # load x3 with 32 MSBs 0x00000000978f9b1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000978f9b1e
sw x3, 0(x2) # store x3 (0x978f9b1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000978f9b1e from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fmadd.d f26, f30, f21, f1, dyn # perform operation
fmadd.d f26, f30, f21, f1, rdn # perform operation
fmadd.d f26, f30, f21, f1, rmm # perform operation
fmadd.d f26, f30, f21, f1, rne # perform operation
fmadd.d f26, f30, f21, f1, rtz # perform operation
fmadd.d f26, f30, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f30, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8008000000000000)
li x29, 0xbebe88f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x41307f52 # load x3 with 32 MSBs 0x0000000041307f52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041307f52
sw x3, 0(x2) # store x3 (0x41307f52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000041307f52 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fmadd.d f29, f10, f11, f2, dyn # perform operation
fmadd.d f29, f10, f11, f2, rdn # perform operation
fmadd.d f29, f10, f11, f2, rmm # perform operation
fmadd.d f29, f10, f11, f2, rne # perform operation
fmadd.d f29, f10, f11, f2, rtz # perform operation
fmadd.d f29, f10, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f10, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f10, f11, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x1)
li x24, 0x8bdef83e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x495a2236 # load x3 with 32 MSBs 0x00000000495a2236
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000495a2236
sw x3, 0(x2) # store x3 (0x495a2236) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000495a2236 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
fmadd.d f24, f1, f18, f15, dyn # perform operation
fmadd.d f24, f1, f18, f15, rdn # perform operation
fmadd.d f24, f1, f18, f15, rmm # perform operation
fmadd.d f24, f1, f18, f15, rne # perform operation
fmadd.d f24, f1, f18, f15, rtz # perform operation
fmadd.d f24, f1, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f1, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f1, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000001)
li x4, 0x2ef5fcfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x1f55596d # load x3 with 32 MSBs 0x000000001f55596d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f55596d
sw x3, 0(x2) # store x3 (0x1f55596d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001f55596d from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fmadd.d f4, f10, f19, f13, dyn # perform operation
fmadd.d f4, f10, f19, f13, rdn # perform operation
fmadd.d f4, f10, f19, f13, rmm # perform operation
fmadd.d f4, f10, f19, f13, rne # perform operation
fmadd.d f4, f10, f19, f13, rtz # perform operation
fmadd.d f4, f10, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f10, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f10, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000000)
li x28, 0x6cc1280a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x494169aa # load x3 with 32 MSBs 0x00000000494169aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000494169aa
sw x3, 0(x2) # store x3 (0x494169aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000494169aa from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fmadd.d f28, f7, f17, f18, dyn # perform operation
fmadd.d f28, f7, f17, f18, rdn # perform operation
fmadd.d f28, f7, f17, f18, rmm # perform operation
fmadd.d f28, f7, f17, f18, rne # perform operation
fmadd.d f28, f7, f17, f18, rtz # perform operation
fmadd.d f28, f7, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f7, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfff0000000000000)
li x18, 0x00288556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xe7533b84 # load x3 with 32 MSBs 0x00000000e7533b84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7533b84
sw x3, 0(x2) # store x3 (0xe7533b84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e7533b84 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fmadd.d f18, f11, f2, f6, dyn # perform operation
fmadd.d f18, f11, f2, f6, rdn # perform operation
fmadd.d f18, f11, f2, f6, rmm # perform operation
fmadd.d f18, f11, f2, f6, rne # perform operation
fmadd.d f18, f11, f2, f6, rtz # perform operation
fmadd.d f18, f11, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f11, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff8000000000000)
li x7, 0x5d235ebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x09922cc9 # load x3 with 32 MSBs 0x0000000009922cc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009922cc9
sw x3, 0(x2) # store x3 (0x09922cc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000009922cc9 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fmadd.d f7, f27, f8, f10, dyn # perform operation
fmadd.d f7, f27, f8, f10, rdn # perform operation
fmadd.d f7, f27, f8, f10, rmm # perform operation
fmadd.d f7, f27, f8, f10, rne # perform operation
fmadd.d f7, f27, f8, f10, rtz # perform operation
fmadd.d f7, f27, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f27, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f27, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f27, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f27, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f27, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fffffffffffffff)
li x19, 0xef4610be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0x3ea40464 # load x3 with 32 MSBs 0x000000003ea40464
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ea40464
sw x3, 0(x2) # store x3 (0x3ea40464) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000003ea40464 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fmadd.d f19, f21, f14, f4, dyn # perform operation
fmadd.d f19, f21, f14, f4, rdn # perform operation
fmadd.d f19, f21, f14, f4, rmm # perform operation
fmadd.d f19, f21, f14, f4, rne # perform operation
fmadd.d f19, f21, f14, f4, rtz # perform operation
fmadd.d f19, f21, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f21, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f21, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000001)
li x21, 0x1bb478fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0xb95ef90c # load x3 with 32 MSBs 0x00000000b95ef90c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b95ef90c
sw x3, 0(x2) # store x3 (0xb95ef90c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b95ef90c from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fmadd.d f21, f13, f26, f9, dyn # perform operation
fmadd.d f21, f13, f26, f9, rdn # perform operation
fmadd.d f21, f13, f26, f9, rmm # perform operation
fmadd.d f21, f13, f26, f9, rne # perform operation
fmadd.d f21, f13, f26, f9, rtz # perform operation
fmadd.d f21, f13, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f13, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f13, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x27, 0x723318f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x6d2fb93c # load x3 with 32 MSBs 0x000000006d2fb93c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d2fb93c
sw x3, 0(x2) # store x3 (0x6d2fb93c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006d2fb93c from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
fmadd.d f27, f5, f8, f14, dyn # perform operation
fmadd.d f27, f5, f8, f14, rdn # perform operation
fmadd.d f27, f5, f8, f14, rmm # perform operation
fmadd.d f27, f5, f8, f14, rne # perform operation
fmadd.d f27, f5, f8, f14, rtz # perform operation
fmadd.d f27, f5, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f5, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f5, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x5a392534a57711ad)
li x3, 0x5ddc6c5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x7ebdcfa7 # load x3 with 32 MSBs 0x000000007ebdcfa7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ebdcfa7
sw x3, 0(x2) # store x3 (0x7ebdcfa7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007ebdcfa7 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
fmadd.d f3, f26, f18, f5, dyn # perform operation
fmadd.d f3, f26, f18, f5, rdn # perform operation
fmadd.d f3, f26, f18, f5, rmm # perform operation
fmadd.d f3, f26, f18, f5, rne # perform operation
fmadd.d f3, f26, f18, f5, rtz # perform operation
fmadd.d f3, f26, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f26, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xa6e895993737426c)
li x12, 0x1c441c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0x9e225e6d # load x3 with 32 MSBs 0x000000009e225e6d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e225e6d
sw x3, 0(x2) # store x3 (0x9e225e6d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009e225e6d from memory into f28
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fmadd.d f12, f31, f28, f8, dyn # perform operation
fmadd.d f12, f31, f28, f8, rdn # perform operation
fmadd.d f12, f31, f28, f8, rmm # perform operation
fmadd.d f12, f31, f28, f8, rne # perform operation
fmadd.d f12, f31, f28, f8, rtz # perform operation
fmadd.d f12, f31, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f31, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x0)
li x3, 0xe9f1a1a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x46dedde2 # load x3 with 32 MSBs 0x0000000046dedde2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046dedde2
sw x3, 0(x2) # store x3 (0x46dedde2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000046dedde2 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fmadd.d f3, f26, f7, f12, dyn # perform operation
fmadd.d f3, f26, f7, f12, rdn # perform operation
fmadd.d f3, f26, f7, f12, rmm # perform operation
fmadd.d f3, f26, f7, f12, rne # perform operation
fmadd.d f3, f26, f7, f12, rtz # perform operation
fmadd.d f3, f26, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f26, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f26, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f26, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f26, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f26, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000000)
li x3, 0xce451faa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x93356c60 # load x3 with 32 MSBs 0x0000000093356c60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093356c60
sw x3, 0(x2) # store x3 (0x93356c60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000093356c60 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fmadd.d f3, f23, f16, f20, dyn # perform operation
fmadd.d f3, f23, f16, f20, rdn # perform operation
fmadd.d f3, f23, f16, f20, rmm # perform operation
fmadd.d f3, f23, f16, f20, rne # perform operation
fmadd.d f3, f23, f16, f20, rtz # perform operation
fmadd.d f3, f23, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f23, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f23, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff0000000000000)
li x12, 0xd531a2a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0xb97988ec # load x3 with 32 MSBs 0x00000000b97988ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b97988ec
sw x3, 0(x2) # store x3 (0xb97988ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b97988ec from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fmadd.d f12, f24, f4, f11, dyn # perform operation
fmadd.d f12, f24, f4, f11, rdn # perform operation
fmadd.d f12, f24, f4, f11, rmm # perform operation
fmadd.d f12, f24, f4, f11, rne # perform operation
fmadd.d f12, f24, f4, f11, rtz # perform operation
fmadd.d f12, f24, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f24, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f24, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f24, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f24, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f24, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff0000000000000)
li x14, 0x8aef0883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0xfd69fd44 # load x3 with 32 MSBs 0x00000000fd69fd44
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd69fd44
sw x3, 0(x2) # store x3 (0xfd69fd44) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000fd69fd44 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fmadd.d f14, f22, f4, f27, dyn # perform operation
fmadd.d f14, f22, f4, f27, rdn # perform operation
fmadd.d f14, f22, f4, f27, rmm # perform operation
fmadd.d f14, f22, f4, f27, rne # perform operation
fmadd.d f14, f22, f4, f27, rtz # perform operation
fmadd.d f14, f22, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f22, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff8000000000000)
li x25, 0x9b77d911 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0xe1d0b895 # load x3 with 32 MSBs 0x00000000e1d0b895
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1d0b895
sw x3, 0(x2) # store x3 (0xe1d0b895) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e1d0b895 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fmadd.d f25, f16, f7, f12, dyn # perform operation
fmadd.d f25, f16, f7, f12, rdn # perform operation
fmadd.d f25, f16, f7, f12, rmm # perform operation
fmadd.d f25, f16, f7, f12, rne # perform operation
fmadd.d f25, f16, f7, f12, rtz # perform operation
fmadd.d f25, f16, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f16, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f16, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f16, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f16, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f16, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff8000000000000)
li x31, 0x8eb59f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0x42532c4a # load x3 with 32 MSBs 0x0000000042532c4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042532c4a
sw x3, 0(x2) # store x3 (0x42532c4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000042532c4a from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fmadd.d f31, f6, f27, f10, dyn # perform operation
fmadd.d f31, f6, f27, f10, rdn # perform operation
fmadd.d f31, f6, f27, f10, rmm # perform operation
fmadd.d f31, f6, f27, f10, rne # perform operation
fmadd.d f31, f6, f27, f10, rtz # perform operation
fmadd.d f31, f6, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f6, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f6, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f6, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f6, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f6, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x4000000000000000)
li x31, 0x4ca3b9ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x0d3460b7 # load x3 with 32 MSBs 0x000000000d3460b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d3460b7
sw x3, 0(x2) # store x3 (0x0d3460b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000000d3460b7 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
fmadd.d f31, f16, f18, f10, dyn # perform operation
fmadd.d f31, f16, f18, f10, rdn # perform operation
fmadd.d f31, f16, f18, f10, rmm # perform operation
fmadd.d f31, f16, f18, f10, rne # perform operation
fmadd.d f31, f16, f18, f10, rtz # perform operation
fmadd.d f31, f16, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f16, f18, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xc000000000000000)
li x24, 0x54a38529 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0x41fba5a1 # load x3 with 32 MSBs 0x0000000041fba5a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041fba5a1
sw x3, 0(x2) # store x3 (0x41fba5a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000041fba5a1 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
fmadd.d f24, f1, f14, f3, dyn # perform operation
fmadd.d f24, f1, f14, f3, rdn # perform operation
fmadd.d f24, f1, f14, f3, rmm # perform operation
fmadd.d f24, f1, f14, f3, rne # perform operation
fmadd.d f24, f1, f14, f3, rtz # perform operation
fmadd.d f24, f1, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f1, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x10000000000000)
li x9, 0x84949ca8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x0de1b322 # load x3 with 32 MSBs 0x000000000de1b322
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000de1b322
sw x3, 0(x2) # store x3 (0x0de1b322) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000de1b322 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fmadd.d f9, f10, f11, f6, dyn # perform operation
fmadd.d f9, f10, f11, f6, rdn # perform operation
fmadd.d f9, f10, f11, f6, rmm # perform operation
fmadd.d f9, f10, f11, f6, rne # perform operation
fmadd.d f9, f10, f11, f6, rtz # perform operation
fmadd.d f9, f10, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f10, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8010000000000000)
li x19, 0xd949cc56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x9f40e7e9 # load x3 with 32 MSBs 0x000000009f40e7e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f40e7e9
sw x3, 0(x2) # store x3 (0x9f40e7e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009f40e7e9 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fmadd.d f19, f8, f3, f15, dyn # perform operation
fmadd.d f19, f8, f3, f15, rdn # perform operation
fmadd.d f19, f8, f3, f15, rmm # perform operation
fmadd.d f19, f8, f3, f15, rne # perform operation
fmadd.d f19, f8, f3, f15, rtz # perform operation
fmadd.d f19, f8, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f8, f3, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fefffffffffffff)
li x25, 0x5a059084 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x0cc459c4 # load x3 with 32 MSBs 0x000000000cc459c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000cc459c4
sw x3, 0(x2) # store x3 (0x0cc459c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000cc459c4 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fmadd.d f25, f16, f20, f9, dyn # perform operation
fmadd.d f25, f16, f20, f9, rdn # perform operation
fmadd.d f25, f16, f20, f9, rmm # perform operation
fmadd.d f25, f16, f20, f9, rne # perform operation
fmadd.d f25, f16, f20, f9, rtz # perform operation
fmadd.d f25, f16, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f16, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xffefffffffffffff)
li x11, 0x83f4d017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xe33295f3 # load x3 with 32 MSBs 0x00000000e33295f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e33295f3
sw x3, 0(x2) # store x3 (0xe33295f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e33295f3 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fmadd.d f11, f8, f17, f7, dyn # perform operation
fmadd.d f11, f8, f17, f7, rdn # perform operation
fmadd.d f11, f8, f17, f7, rmm # perform operation
fmadd.d f11, f8, f17, f7, rne # perform operation
fmadd.d f11, f8, f17, f7, rtz # perform operation
fmadd.d f11, f8, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f8, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfffffffffffff)
li x12, 0xae7b9e0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0x5d045cdf # load x3 with 32 MSBs 0x000000005d045cdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d045cdf
sw x3, 0(x2) # store x3 (0x5d045cdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000005d045cdf from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fmadd.d f12, f4, f2, f13, dyn # perform operation
fmadd.d f12, f4, f2, f13, rdn # perform operation
fmadd.d f12, f4, f2, f13, rmm # perform operation
fmadd.d f12, f4, f2, f13, rne # perform operation
fmadd.d f12, f4, f2, f13, rtz # perform operation
fmadd.d f12, f4, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f4, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f4, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x800fffffffffffff)
li x26, 0x8bea1860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x084ebf77 # load x3 with 32 MSBs 0x00000000084ebf77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000084ebf77
sw x3, 0(x2) # store x3 (0x084ebf77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000084ebf77 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fmadd.d f26, f18, f28, f21, dyn # perform operation
fmadd.d f26, f18, f28, f21, rdn # perform operation
fmadd.d f26, f18, f28, f21, rmm # perform operation
fmadd.d f26, f18, f28, f21, rne # perform operation
fmadd.d f26, f18, f28, f21, rtz # perform operation
fmadd.d f26, f18, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f18, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f18, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f18, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f18, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f18, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000)
li x31, 0x024982ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xd73d43ca # load x3 with 32 MSBs 0x00000000d73d43ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d73d43ca
sw x3, 0(x2) # store x3 (0xd73d43ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d73d43ca from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fmadd.d f31, f8, f10, f20, dyn # perform operation
fmadd.d f31, f8, f10, f20, rdn # perform operation
fmadd.d f31, f8, f10, f20, rmm # perform operation
fmadd.d f31, f8, f10, f20, rne # perform operation
fmadd.d f31, f8, f10, f20, rtz # perform operation
fmadd.d f31, f8, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f8, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f8, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f8, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f8, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f8, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8008000000000000)
li x20, 0xce09b949 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x3a7d5423 # load x3 with 32 MSBs 0x000000003a7d5423
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a7d5423
sw x3, 0(x2) # store x3 (0x3a7d5423) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003a7d5423 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fmadd.d f20, f30, f19, f21, dyn # perform operation
fmadd.d f20, f30, f19, f21, rdn # perform operation
fmadd.d f20, f30, f19, f21, rmm # perform operation
fmadd.d f20, f30, f19, f21, rne # perform operation
fmadd.d f20, f30, f19, f21, rtz # perform operation
fmadd.d f20, f30, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f30, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x1)
li x16, 0x38b72538 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0x225f3879 # load x3 with 32 MSBs 0x00000000225f3879
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000225f3879
sw x3, 0(x2) # store x3 (0x225f3879) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000225f3879 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fmadd.d f16, f17, f7, f9, dyn # perform operation
fmadd.d f16, f17, f7, f9, rdn # perform operation
fmadd.d f16, f17, f7, f9, rmm # perform operation
fmadd.d f16, f17, f7, f9, rne # perform operation
fmadd.d f16, f17, f7, f9, rtz # perform operation
fmadd.d f16, f17, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f17, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000001)
li x16, 0x2b2fd40f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x4e2dc61b # load x3 with 32 MSBs 0x000000004e2dc61b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e2dc61b
sw x3, 0(x2) # store x3 (0x4e2dc61b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000004e2dc61b from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fmadd.d f16, f9, f5, f31, dyn # perform operation
fmadd.d f16, f9, f5, f31, rdn # perform operation
fmadd.d f16, f9, f5, f31, rmm # perform operation
fmadd.d f16, f9, f5, f31, rne # perform operation
fmadd.d f16, f9, f5, f31, rtz # perform operation
fmadd.d f16, f9, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f9, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f9, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000000)
li x26, 0xbcc2cb7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0xdb80df81 # load x3 with 32 MSBs 0x00000000db80df81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db80df81
sw x3, 0(x2) # store x3 (0xdb80df81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000db80df81 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fmadd.d f26, f12, f24, f19, dyn # perform operation
fmadd.d f26, f12, f24, f19, rdn # perform operation
fmadd.d f26, f12, f24, f19, rmm # perform operation
fmadd.d f26, f12, f24, f19, rne # perform operation
fmadd.d f26, f12, f24, f19, rtz # perform operation
fmadd.d f26, f12, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f12, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f12, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f12, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f12, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f12, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfff0000000000000)
li x3, 0x47a9d4e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0xb6e6d8f8 # load x3 with 32 MSBs 0x00000000b6e6d8f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6e6d8f8
sw x3, 0(x2) # store x3 (0xb6e6d8f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b6e6d8f8 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fmadd.d f3, f19, f22, f7, dyn # perform operation
fmadd.d f3, f19, f22, f7, rdn # perform operation
fmadd.d f3, f19, f22, f7, rmm # perform operation
fmadd.d f3, f19, f22, f7, rne # perform operation
fmadd.d f3, f19, f22, f7, rtz # perform operation
fmadd.d f3, f19, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f19, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff8000000000000)
li x8, 0x08a8df8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x2144d238 # load x3 with 32 MSBs 0x000000002144d238
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002144d238
sw x3, 0(x2) # store x3 (0x2144d238) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002144d238 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fmadd.d f8, f20, f16, f30, dyn # perform operation
fmadd.d f8, f20, f16, f30, rdn # perform operation
fmadd.d f8, f20, f16, f30, rmm # perform operation
fmadd.d f8, f20, f16, f30, rne # perform operation
fmadd.d f8, f20, f16, f30, rtz # perform operation
fmadd.d f8, f20, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f20, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f20, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f20, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f20, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f20, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fffffffffffffff)
li x21, 0x3a6c2ade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0xe20b34f7 # load x3 with 32 MSBs 0x00000000e20b34f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e20b34f7
sw x3, 0(x2) # store x3 (0xe20b34f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e20b34f7 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fmadd.d f21, f1, f9, f19, dyn # perform operation
fmadd.d f21, f1, f9, f19, rdn # perform operation
fmadd.d f21, f1, f9, f19, rmm # perform operation
fmadd.d f21, f1, f9, f19, rne # perform operation
fmadd.d f21, f1, f9, f19, rtz # perform operation
fmadd.d f21, f1, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f1, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f1, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f1, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f1, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f1, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000001)
li x27, 0xb61f120e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x760e3734 # load x3 with 32 MSBs 0x00000000760e3734
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000760e3734
sw x3, 0(x2) # store x3 (0x760e3734) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000760e3734 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fmadd.d f27, f16, f14, f29, dyn # perform operation
fmadd.d f27, f16, f14, f29, rdn # perform operation
fmadd.d f27, f16, f14, f29, rmm # perform operation
fmadd.d f27, f16, f14, f29, rne # perform operation
fmadd.d f27, f16, f14, f29, rtz # perform operation
fmadd.d f27, f16, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f16, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff7ffffffffffff)
li x13, 0xf2a0a61a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x0704ba11 # load x3 with 32 MSBs 0x000000000704ba11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000704ba11
sw x3, 0(x2) # store x3 (0x0704ba11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000704ba11 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fmadd.d f13, f24, f7, f15, dyn # perform operation
fmadd.d f13, f24, f7, f15, rdn # perform operation
fmadd.d f13, f24, f7, f15, rmm # perform operation
fmadd.d f13, f24, f7, f15, rne # perform operation
fmadd.d f13, f24, f7, f15, rtz # perform operation
fmadd.d f13, f24, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f24, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f24, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x5a392534a57711ad)
li x6, 0xef751295 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x075fd297 # load x3 with 32 MSBs 0x00000000075fd297
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000075fd297
sw x3, 0(x2) # store x3 (0x075fd297) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000075fd297 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fmadd.d f6, f2, f26, f12, dyn # perform operation
fmadd.d f6, f2, f26, f12, rdn # perform operation
fmadd.d f6, f2, f26, f12, rmm # perform operation
fmadd.d f6, f2, f26, f12, rne # perform operation
fmadd.d f6, f2, f26, f12, rtz # perform operation
fmadd.d f6, f2, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f2, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f2, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xa6e895993737426c)
li x26, 0xab9bff79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x57fe61e6 # load x3 with 32 MSBs 0x0000000057fe61e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057fe61e6
sw x3, 0(x2) # store x3 (0x57fe61e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000057fe61e6 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
fmadd.d f26, f16, f17, f4, dyn # perform operation
fmadd.d f26, f16, f17, f4, rdn # perform operation
fmadd.d f26, f16, f17, f4, rmm # perform operation
fmadd.d f26, f16, f17, f4, rne # perform operation
fmadd.d f26, f16, f17, f4, rtz # perform operation
fmadd.d f26, f16, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f16, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x0)
li x10, 0x45a81f21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0xae29f9e3 # load x3 with 32 MSBs 0x00000000ae29f9e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae29f9e3
sw x3, 0(x2) # store x3 (0xae29f9e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ae29f9e3 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fmadd.d f10, f30, f19, f18, dyn # perform operation
fmadd.d f10, f30, f19, f18, rdn # perform operation
fmadd.d f10, f30, f19, f18, rmm # perform operation
fmadd.d f10, f30, f19, f18, rne # perform operation
fmadd.d f10, f30, f19, f18, rtz # perform operation
fmadd.d f10, f30, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f30, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f30, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f30, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f30, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f30, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000000)
li x17, 0x041664ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x78e9762a # load x3 with 32 MSBs 0x0000000078e9762a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078e9762a
sw x3, 0(x2) # store x3 (0x78e9762a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000078e9762a from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fmadd.d f17, f31, f7, f13, dyn # perform operation
fmadd.d f17, f31, f7, f13, rdn # perform operation
fmadd.d f17, f31, f7, f13, rmm # perform operation
fmadd.d f17, f31, f7, f13, rne # perform operation
fmadd.d f17, f31, f7, f13, rtz # perform operation
fmadd.d f17, f31, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f31, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff0000000000000)
li x5, 0x64e2c67a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0xbe99f615 # load x3 with 32 MSBs 0x00000000be99f615
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be99f615
sw x3, 0(x2) # store x3 (0xbe99f615) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000be99f615 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fmadd.d f5, f13, f4, f20, dyn # perform operation
fmadd.d f5, f13, f4, f20, rdn # perform operation
fmadd.d f5, f13, f4, f20, rmm # perform operation
fmadd.d f5, f13, f4, f20, rne # perform operation
fmadd.d f5, f13, f4, f20, rtz # perform operation
fmadd.d f5, f13, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f13, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f13, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff0000000000000)
li x10, 0x022a5a13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xc0202eac # load x3 with 32 MSBs 0x00000000c0202eac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0202eac
sw x3, 0(x2) # store x3 (0xc0202eac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c0202eac from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fmadd.d f10, f7, f18, f5, dyn # perform operation
fmadd.d f10, f7, f18, f5, rdn # perform operation
fmadd.d f10, f7, f18, f5, rmm # perform operation
fmadd.d f10, f7, f18, f5, rne # perform operation
fmadd.d f10, f7, f18, f5, rtz # perform operation
fmadd.d f10, f7, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f7, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f7, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f7, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f7, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f7, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff8000000000000)
li x28, 0x85c01b35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x7acb6543 # load x3 with 32 MSBs 0x000000007acb6543
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007acb6543
sw x3, 0(x2) # store x3 (0x7acb6543) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000007acb6543 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fmadd.d f28, f14, f17, f16, dyn # perform operation
fmadd.d f28, f14, f17, f16, rdn # perform operation
fmadd.d f28, f14, f17, f16, rmm # perform operation
fmadd.d f28, f14, f17, f16, rne # perform operation
fmadd.d f28, f14, f17, f16, rtz # perform operation
fmadd.d f28, f14, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f14, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f14, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f14, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f14, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f14, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff8000000000000)
li x23, 0x8a8c1bfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x1ef1b264 # load x3 with 32 MSBs 0x000000001ef1b264
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ef1b264
sw x3, 0(x2) # store x3 (0x1ef1b264) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001ef1b264 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fmadd.d f23, f28, f26, f14, dyn # perform operation
fmadd.d f23, f28, f26, f14, rdn # perform operation
fmadd.d f23, f28, f26, f14, rmm # perform operation
fmadd.d f23, f28, f26, f14, rne # perform operation
fmadd.d f23, f28, f26, f14, rtz # perform operation
fmadd.d f23, f28, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f28, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f28, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f28, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f28, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f28, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x4000000000000000)
li x11, 0x24f0eb0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x2f5ba821 # load x3 with 32 MSBs 0x000000002f5ba821
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f5ba821
sw x3, 0(x2) # store x3 (0x2f5ba821) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002f5ba821 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fmadd.d f11, f19, f17, f15, dyn # perform operation
fmadd.d f11, f19, f17, f15, rdn # perform operation
fmadd.d f11, f19, f17, f15, rmm # perform operation
fmadd.d f11, f19, f17, f15, rne # perform operation
fmadd.d f11, f19, f17, f15, rtz # perform operation
fmadd.d f11, f19, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f19, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f19, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f19, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f19, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f19, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xc000000000000000)
li x12, 0x54501af4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xde845a54 # load x3 with 32 MSBs 0x00000000de845a54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de845a54
sw x3, 0(x2) # store x3 (0xde845a54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000de845a54 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fmadd.d f12, f5, f13, f19, dyn # perform operation
fmadd.d f12, f5, f13, f19, rdn # perform operation
fmadd.d f12, f5, f13, f19, rmm # perform operation
fmadd.d f12, f5, f13, f19, rne # perform operation
fmadd.d f12, f5, f13, f19, rtz # perform operation
fmadd.d f12, f5, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f5, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x10000000000000)
li x3, 0x20991f08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x9efd0c7d # load x3 with 32 MSBs 0x000000009efd0c7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009efd0c7d
sw x3, 0(x2) # store x3 (0x9efd0c7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009efd0c7d from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fmadd.d f3, f4, f29, f19, dyn # perform operation
fmadd.d f3, f4, f29, f19, rdn # perform operation
fmadd.d f3, f4, f29, f19, rmm # perform operation
fmadd.d f3, f4, f29, f19, rne # perform operation
fmadd.d f3, f4, f29, f19, rtz # perform operation
fmadd.d f3, f4, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f4, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f4, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f4, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f4, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f4, f29, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8010000000000000)
li x12, 0x54d073ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x390f4c0e # load x3 with 32 MSBs 0x00000000390f4c0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000390f4c0e
sw x3, 0(x2) # store x3 (0x390f4c0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000390f4c0e from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fmadd.d f12, f16, f20, f3, dyn # perform operation
fmadd.d f12, f16, f20, f3, rdn # perform operation
fmadd.d f12, f16, f20, f3, rmm # perform operation
fmadd.d f12, f16, f20, f3, rne # perform operation
fmadd.d f12, f16, f20, f3, rtz # perform operation
fmadd.d f12, f16, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f16, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f16, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fefffffffffffff)
li x10, 0x69d06bc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x8039c5e8 # load x3 with 32 MSBs 0x000000008039c5e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008039c5e8
sw x3, 0(x2) # store x3 (0x8039c5e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008039c5e8 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fmadd.d f10, f2, f16, f28, dyn # perform operation
fmadd.d f10, f2, f16, f28, rdn # perform operation
fmadd.d f10, f2, f16, f28, rmm # perform operation
fmadd.d f10, f2, f16, f28, rne # perform operation
fmadd.d f10, f2, f16, f28, rtz # perform operation
fmadd.d f10, f2, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f2, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f2, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xffefffffffffffff)
li x4, 0x2b46c1a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
li x3, 0x7b0681ae # load x3 with 32 MSBs 0x000000007b0681ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b0681ae
sw x3, 0(x2) # store x3 (0x7b0681ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000007b0681ae from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fmadd.d f4, f27, f30, f17, dyn # perform operation
fmadd.d f4, f27, f30, f17, rdn # perform operation
fmadd.d f4, f27, f30, f17, rmm # perform operation
fmadd.d f4, f27, f30, f17, rne # perform operation
fmadd.d f4, f27, f30, f17, rtz # perform operation
fmadd.d f4, f27, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f27, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f27, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfffffffffffff)
li x24, 0xed32c4c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0x0ad845a7 # load x3 with 32 MSBs 0x000000000ad845a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ad845a7
sw x3, 0(x2) # store x3 (0x0ad845a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000ad845a7 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fmadd.d f24, f7, f22, f13, dyn # perform operation
fmadd.d f24, f7, f22, f13, rdn # perform operation
fmadd.d f24, f7, f22, f13, rmm # perform operation
fmadd.d f24, f7, f22, f13, rne # perform operation
fmadd.d f24, f7, f22, f13, rtz # perform operation
fmadd.d f24, f7, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f7, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x800fffffffffffff)
li x17, 0x9d64ce15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0xa0c3985c # load x3 with 32 MSBs 0x00000000a0c3985c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0c3985c
sw x3, 0(x2) # store x3 (0xa0c3985c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a0c3985c from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fmadd.d f17, f3, f10, f18, dyn # perform operation
fmadd.d f17, f3, f10, f18, rdn # perform operation
fmadd.d f17, f3, f10, f18, rmm # perform operation
fmadd.d f17, f3, f10, f18, rne # perform operation
fmadd.d f17, f3, f10, f18, rtz # perform operation
fmadd.d f17, f3, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f3, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000)
li x29, 0xcac240a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x9b0796f7 # load x3 with 32 MSBs 0x000000009b0796f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b0796f7
sw x3, 0(x2) # store x3 (0x9b0796f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009b0796f7 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fmadd.d f29, f26, f22, f23, dyn # perform operation
fmadd.d f29, f26, f22, f23, rdn # perform operation
fmadd.d f29, f26, f22, f23, rmm # perform operation
fmadd.d f29, f26, f22, f23, rne # perform operation
fmadd.d f29, f26, f22, f23, rtz # perform operation
fmadd.d f29, f26, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f26, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8008000000000000)
li x9, 0xcd241971 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x93636627 # load x3 with 32 MSBs 0x0000000093636627
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093636627
sw x3, 0(x2) # store x3 (0x93636627) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000093636627 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fmadd.d f9, f21, f6, f10, dyn # perform operation
fmadd.d f9, f21, f6, f10, rdn # perform operation
fmadd.d f9, f21, f6, f10, rmm # perform operation
fmadd.d f9, f21, f6, f10, rne # perform operation
fmadd.d f9, f21, f6, f10, rtz # perform operation
fmadd.d f9, f21, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f21, f6, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x1)
li x11, 0x5db642ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0x4e10c254 # load x3 with 32 MSBs 0x000000004e10c254
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e10c254
sw x3, 0(x2) # store x3 (0x4e10c254) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004e10c254 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fmadd.d f11, f30, f23, f1, dyn # perform operation
fmadd.d f11, f30, f23, f1, rdn # perform operation
fmadd.d f11, f30, f23, f1, rmm # perform operation
fmadd.d f11, f30, f23, f1, rne # perform operation
fmadd.d f11, f30, f23, f1, rtz # perform operation
fmadd.d f11, f30, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f30, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f30, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000001)
li x27, 0xdc1227e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x58d0b67a # load x3 with 32 MSBs 0x0000000058d0b67a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058d0b67a
sw x3, 0(x2) # store x3 (0x58d0b67a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000058d0b67a from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmadd.d f27, f5, f8, f18, dyn # perform operation
fmadd.d f27, f5, f8, f18, rdn # perform operation
fmadd.d f27, f5, f8, f18, rmm # perform operation
fmadd.d f27, f5, f8, f18, rne # perform operation
fmadd.d f27, f5, f8, f18, rtz # perform operation
fmadd.d f27, f5, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f5, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000000)
li x15, 0x8ff934e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x7a871d35 # load x3 with 32 MSBs 0x000000007a871d35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a871d35
sw x3, 0(x2) # store x3 (0x7a871d35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007a871d35 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
fmadd.d f15, f22, f1, f8, dyn # perform operation
fmadd.d f15, f22, f1, f8, rdn # perform operation
fmadd.d f15, f22, f1, f8, rmm # perform operation
fmadd.d f15, f22, f1, f8, rne # perform operation
fmadd.d f15, f22, f1, f8, rtz # perform operation
fmadd.d f15, f22, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f22, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f22, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f22, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f22, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f22, f1, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfff0000000000000)
li x4, 0x47b307ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xc80750bc # load x3 with 32 MSBs 0x00000000c80750bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c80750bc
sw x3, 0(x2) # store x3 (0xc80750bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c80750bc from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
fmadd.d f4, f7, f2, f8, dyn # perform operation
fmadd.d f4, f7, f2, f8, rdn # perform operation
fmadd.d f4, f7, f2, f8, rmm # perform operation
fmadd.d f4, f7, f2, f8, rne # perform operation
fmadd.d f4, f7, f2, f8, rtz # perform operation
fmadd.d f4, f7, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f7, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f7, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff8000000000000)
li x16, 0x8232bbf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x6fd7ef33 # load x3 with 32 MSBs 0x000000006fd7ef33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fd7ef33
sw x3, 0(x2) # store x3 (0x6fd7ef33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000006fd7ef33 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fmadd.d f16, f6, f21, f22, dyn # perform operation
fmadd.d f16, f6, f21, f22, rdn # perform operation
fmadd.d f16, f6, f21, f22, rmm # perform operation
fmadd.d f16, f6, f21, f22, rne # perform operation
fmadd.d f16, f6, f21, f22, rtz # perform operation
fmadd.d f16, f6, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f6, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f6, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f6, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f6, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f6, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fffffffffffffff)
li x12, 0x74be445d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x876349d8 # load x3 with 32 MSBs 0x00000000876349d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000876349d8
sw x3, 0(x2) # store x3 (0x876349d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000876349d8 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
fmadd.d f12, f2, f29, f5, dyn # perform operation
fmadd.d f12, f2, f29, f5, rdn # perform operation
fmadd.d f12, f2, f29, f5, rmm # perform operation
fmadd.d f12, f2, f29, f5, rne # perform operation
fmadd.d f12, f2, f29, f5, rtz # perform operation
fmadd.d f12, f2, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f2, f29, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000001)
li x5, 0xd9497cae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0x7335b282 # load x3 with 32 MSBs 0x000000007335b282
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007335b282
sw x3, 0(x2) # store x3 (0x7335b282) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007335b282 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fmadd.d f5, f11, f25, f29, dyn # perform operation
fmadd.d f5, f11, f25, f29, rdn # perform operation
fmadd.d f5, f11, f25, f29, rmm # perform operation
fmadd.d f5, f11, f25, f29, rne # perform operation
fmadd.d f5, f11, f25, f29, rtz # perform operation
fmadd.d f5, f11, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f11, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f11, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff7ffffffffffff)
li x13, 0xef3d0c98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x46c25375 # load x3 with 32 MSBs 0x0000000046c25375
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046c25375
sw x3, 0(x2) # store x3 (0x46c25375) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000046c25375 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fmadd.d f13, f5, f10, f24, dyn # perform operation
fmadd.d f13, f5, f10, f24, rdn # perform operation
fmadd.d f13, f5, f10, f24, rmm # perform operation
fmadd.d f13, f5, f10, f24, rne # perform operation
fmadd.d f13, f5, f10, f24, rtz # perform operation
fmadd.d f13, f5, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f5, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x5a392534a57711ad)
li x25, 0xb013f06e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x206acc46 # load x3 with 32 MSBs 0x00000000206acc46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000206acc46
sw x3, 0(x2) # store x3 (0x206acc46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000206acc46 from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
fmadd.d f25, f14, f22, f24, dyn # perform operation
fmadd.d f25, f14, f22, f24, rdn # perform operation
fmadd.d f25, f14, f22, f24, rmm # perform operation
fmadd.d f25, f14, f22, f24, rne # perform operation
fmadd.d f25, f14, f22, f24, rtz # perform operation
fmadd.d f25, f14, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f14, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f14, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f14, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f14, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f14, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xa6e895993737426c)
li x28, 0x2f6df248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x09eec817 # load x3 with 32 MSBs 0x0000000009eec817
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009eec817
sw x3, 0(x2) # store x3 (0x09eec817) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000009eec817 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
fmadd.d f28, f6, f30, f24, dyn # perform operation
fmadd.d f28, f6, f30, f24, rdn # perform operation
fmadd.d f28, f6, f30, f24, rmm # perform operation
fmadd.d f28, f6, f30, f24, rne # perform operation
fmadd.d f28, f6, f30, f24, rtz # perform operation
fmadd.d f28, f6, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f6, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x0)
li x30, 0x492d3353 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0xa14d521c # load x3 with 32 MSBs 0x00000000a14d521c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a14d521c
sw x3, 0(x2) # store x3 (0xa14d521c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a14d521c from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fmadd.d f30, f31, f9, f5, dyn # perform operation
fmadd.d f30, f31, f9, f5, rdn # perform operation
fmadd.d f30, f31, f9, f5, rmm # perform operation
fmadd.d f30, f31, f9, f5, rne # perform operation
fmadd.d f30, f31, f9, f5, rtz # perform operation
fmadd.d f30, f31, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f31, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f31, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f31, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f31, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f31, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000000)
li x14, 0xa390a8a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0xe4808211 # load x3 with 32 MSBs 0x00000000e4808211
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4808211
sw x3, 0(x2) # store x3 (0xe4808211) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e4808211 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fmadd.d f14, f28, f16, f24, dyn # perform operation
fmadd.d f14, f28, f16, f24, rdn # perform operation
fmadd.d f14, f28, f16, f24, rmm # perform operation
fmadd.d f14, f28, f16, f24, rne # perform operation
fmadd.d f14, f28, f16, f24, rtz # perform operation
fmadd.d f14, f28, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f28, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f28, f16, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff0000000000000)
li x9, 0x8557f77d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0xa023da42 # load x3 with 32 MSBs 0x00000000a023da42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a023da42
sw x3, 0(x2) # store x3 (0xa023da42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a023da42 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fmadd.d f9, f3, f30, f4, dyn # perform operation
fmadd.d f9, f3, f30, f4, rdn # perform operation
fmadd.d f9, f3, f30, f4, rmm # perform operation
fmadd.d f9, f3, f30, f4, rne # perform operation
fmadd.d f9, f3, f30, f4, rtz # perform operation
fmadd.d f9, f3, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f3, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff0000000000000)
li x15, 0x0430d033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0xb025bd18 # load x3 with 32 MSBs 0x00000000b025bd18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b025bd18
sw x3, 0(x2) # store x3 (0xb025bd18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b025bd18 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fmadd.d f15, f19, f12, f31, dyn # perform operation
fmadd.d f15, f19, f12, f31, rdn # perform operation
fmadd.d f15, f19, f12, f31, rmm # perform operation
fmadd.d f15, f19, f12, f31, rne # perform operation
fmadd.d f15, f19, f12, f31, rtz # perform operation
fmadd.d f15, f19, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f19, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff8000000000000)
li x22, 0xba1cde5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x44670f3a # load x3 with 32 MSBs 0x0000000044670f3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044670f3a
sw x3, 0(x2) # store x3 (0x44670f3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000044670f3a from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fmadd.d f22, f20, f26, f24, dyn # perform operation
fmadd.d f22, f20, f26, f24, rdn # perform operation
fmadd.d f22, f20, f26, f24, rmm # perform operation
fmadd.d f22, f20, f26, f24, rne # perform operation
fmadd.d f22, f20, f26, f24, rtz # perform operation
fmadd.d f22, f20, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f20, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff8000000000000)
li x21, 0x9eeff7f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x0c57a69f # load x3 with 32 MSBs 0x000000000c57a69f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c57a69f
sw x3, 0(x2) # store x3 (0x0c57a69f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000c57a69f from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fmadd.d f21, f10, f5, f14, dyn # perform operation
fmadd.d f21, f10, f5, f14, rdn # perform operation
fmadd.d f21, f10, f5, f14, rmm # perform operation
fmadd.d f21, f10, f5, f14, rne # perform operation
fmadd.d f21, f10, f5, f14, rtz # perform operation
fmadd.d f21, f10, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f10, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x4000000000000000)
li x6, 0x7e64e691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xf82276d4 # load x3 with 32 MSBs 0x00000000f82276d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f82276d4
sw x3, 0(x2) # store x3 (0xf82276d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f82276d4 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fmadd.d f6, f9, f15, f19, dyn # perform operation
fmadd.d f6, f9, f15, f19, rdn # perform operation
fmadd.d f6, f9, f15, f19, rmm # perform operation
fmadd.d f6, f9, f15, f19, rne # perform operation
fmadd.d f6, f9, f15, f19, rtz # perform operation
fmadd.d f6, f9, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f9, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f9, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f9, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f9, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f9, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xc000000000000000)
li x26, 0xde8766e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0xc4bb00f1 # load x3 with 32 MSBs 0x00000000c4bb00f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4bb00f1
sw x3, 0(x2) # store x3 (0xc4bb00f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c4bb00f1 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fmadd.d f26, f24, f31, f15, dyn # perform operation
fmadd.d f26, f24, f31, f15, rdn # perform operation
fmadd.d f26, f24, f31, f15, rmm # perform operation
fmadd.d f26, f24, f31, f15, rne # perform operation
fmadd.d f26, f24, f31, f15, rtz # perform operation
fmadd.d f26, f24, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f24, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f24, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x10000000000000)
li x16, 0x92720b3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0x4bde6a84 # load x3 with 32 MSBs 0x000000004bde6a84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bde6a84
sw x3, 0(x2) # store x3 (0x4bde6a84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004bde6a84 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fmadd.d f16, f4, f1, f2, dyn # perform operation
fmadd.d f16, f4, f1, f2, rdn # perform operation
fmadd.d f16, f4, f1, f2, rmm # perform operation
fmadd.d f16, f4, f1, f2, rne # perform operation
fmadd.d f16, f4, f1, f2, rtz # perform operation
fmadd.d f16, f4, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f4, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f4, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f4, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f4, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f4, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8010000000000000)
li x27, 0xe01b19fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x534fd852 # load x3 with 32 MSBs 0x00000000534fd852
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000534fd852
sw x3, 0(x2) # store x3 (0x534fd852) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000534fd852 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fmadd.d f27, f29, f17, f18, dyn # perform operation
fmadd.d f27, f29, f17, f18, rdn # perform operation
fmadd.d f27, f29, f17, f18, rmm # perform operation
fmadd.d f27, f29, f17, f18, rne # perform operation
fmadd.d f27, f29, f17, f18, rtz # perform operation
fmadd.d f27, f29, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f29, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fefffffffffffff)
li x23, 0x10cecc82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x0ee61676 # load x3 with 32 MSBs 0x000000000ee61676
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ee61676
sw x3, 0(x2) # store x3 (0x0ee61676) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000ee61676 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fmadd.d f23, f10, f9, f11, dyn # perform operation
fmadd.d f23, f10, f9, f11, rdn # perform operation
fmadd.d f23, f10, f9, f11, rmm # perform operation
fmadd.d f23, f10, f9, f11, rne # perform operation
fmadd.d f23, f10, f9, f11, rtz # perform operation
fmadd.d f23, f10, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f10, f9, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xffefffffffffffff)
li x26, 0xf5359df0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x1a9f958b # load x3 with 32 MSBs 0x000000001a9f958b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a9f958b
sw x3, 0(x2) # store x3 (0x1a9f958b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001a9f958b from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fmadd.d f26, f24, f22, f11, dyn # perform operation
fmadd.d f26, f24, f22, f11, rdn # perform operation
fmadd.d f26, f24, f22, f11, rmm # perform operation
fmadd.d f26, f24, f22, f11, rne # perform operation
fmadd.d f26, f24, f22, f11, rtz # perform operation
fmadd.d f26, f24, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f24, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfffffffffffff)
li x11, 0xd09de2cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x3e3f1215 # load x3 with 32 MSBs 0x000000003e3f1215
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e3f1215
sw x3, 0(x2) # store x3 (0x3e3f1215) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003e3f1215 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fmadd.d f11, f22, f25, f23, dyn # perform operation
fmadd.d f11, f22, f25, f23, rdn # perform operation
fmadd.d f11, f22, f25, f23, rmm # perform operation
fmadd.d f11, f22, f25, f23, rne # perform operation
fmadd.d f11, f22, f25, f23, rtz # perform operation
fmadd.d f11, f22, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f22, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x800fffffffffffff)
li x27, 0x45334467 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x13a6144d # load x3 with 32 MSBs 0x0000000013a6144d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013a6144d
sw x3, 0(x2) # store x3 (0x13a6144d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000013a6144d from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fmadd.d f27, f7, f8, f9, dyn # perform operation
fmadd.d f27, f7, f8, f9, rdn # perform operation
fmadd.d f27, f7, f8, f9, rmm # perform operation
fmadd.d f27, f7, f8, f9, rne # perform operation
fmadd.d f27, f7, f8, f9, rtz # perform operation
fmadd.d f27, f7, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f7, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f7, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f7, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f7, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f7, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000)
li x15, 0x0143e4f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xc6b742b3 # load x3 with 32 MSBs 0x00000000c6b742b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6b742b3
sw x3, 0(x2) # store x3 (0xc6b742b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c6b742b3 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fmadd.d f15, f9, f28, f29, dyn # perform operation
fmadd.d f15, f9, f28, f29, rdn # perform operation
fmadd.d f15, f9, f28, f29, rmm # perform operation
fmadd.d f15, f9, f28, f29, rne # perform operation
fmadd.d f15, f9, f28, f29, rtz # perform operation
fmadd.d f15, f9, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f9, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8008000000000000)
li x23, 0x66c66ed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x236c4b75 # load x3 with 32 MSBs 0x00000000236c4b75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000236c4b75
sw x3, 0(x2) # store x3 (0x236c4b75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000236c4b75 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fmadd.d f23, f6, f1, f17, dyn # perform operation
fmadd.d f23, f6, f1, f17, rdn # perform operation
fmadd.d f23, f6, f1, f17, rmm # perform operation
fmadd.d f23, f6, f1, f17, rne # perform operation
fmadd.d f23, f6, f1, f17, rtz # perform operation
fmadd.d f23, f6, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f6, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f6, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x1)
li x22, 0xcdf3dc54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x480124e4 # load x3 with 32 MSBs 0x00000000480124e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000480124e4
sw x3, 0(x2) # store x3 (0x480124e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000480124e4 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fmadd.d f22, f21, f7, f3, dyn # perform operation
fmadd.d f22, f21, f7, f3, rdn # perform operation
fmadd.d f22, f21, f7, f3, rmm # perform operation
fmadd.d f22, f21, f7, f3, rne # perform operation
fmadd.d f22, f21, f7, f3, rtz # perform operation
fmadd.d f22, f21, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f21, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000001)
li x22, 0x574eeec8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0xb8beb2c3 # load x3 with 32 MSBs 0x00000000b8beb2c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8beb2c3
sw x3, 0(x2) # store x3 (0xb8beb2c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b8beb2c3 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
fmadd.d f22, f2, f30, f27, dyn # perform operation
fmadd.d f22, f2, f30, f27, rdn # perform operation
fmadd.d f22, f2, f30, f27, rmm # perform operation
fmadd.d f22, f2, f30, f27, rne # perform operation
fmadd.d f22, f2, f30, f27, rtz # perform operation
fmadd.d f22, f2, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f2, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f2, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000000)
li x4, 0xc0f3875b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xdb1ef78e # load x3 with 32 MSBs 0x00000000db1ef78e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db1ef78e
sw x3, 0(x2) # store x3 (0xdb1ef78e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000db1ef78e from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fmadd.d f4, f20, f14, f13, dyn # perform operation
fmadd.d f4, f20, f14, f13, rdn # perform operation
fmadd.d f4, f20, f14, f13, rmm # perform operation
fmadd.d f4, f20, f14, f13, rne # perform operation
fmadd.d f4, f20, f14, f13, rtz # perform operation
fmadd.d f4, f20, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f20, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfff0000000000000)
li x31, 0x1e1cd65a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0xc387df44 # load x3 with 32 MSBs 0x00000000c387df44
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c387df44
sw x3, 0(x2) # store x3 (0xc387df44) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c387df44 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fmadd.d f31, f26, f30, f16, dyn # perform operation
fmadd.d f31, f26, f30, f16, rdn # perform operation
fmadd.d f31, f26, f30, f16, rmm # perform operation
fmadd.d f31, f26, f30, f16, rne # perform operation
fmadd.d f31, f26, f30, f16, rtz # perform operation
fmadd.d f31, f26, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f26, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff8000000000000)
li x6, 0x11a1fd32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0x6d1d7af0 # load x3 with 32 MSBs 0x000000006d1d7af0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d1d7af0
sw x3, 0(x2) # store x3 (0x6d1d7af0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006d1d7af0 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fmadd.d f6, f4, f12, f20, dyn # perform operation
fmadd.d f6, f4, f12, f20, rdn # perform operation
fmadd.d f6, f4, f12, f20, rmm # perform operation
fmadd.d f6, f4, f12, f20, rne # perform operation
fmadd.d f6, f4, f12, f20, rtz # perform operation
fmadd.d f6, f4, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f4, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f4, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f4, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f4, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f4, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fffffffffffffff)
li x20, 0xef673175 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x18cb206d # load x3 with 32 MSBs 0x0000000018cb206d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018cb206d
sw x3, 0(x2) # store x3 (0x18cb206d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000018cb206d from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fmadd.d f20, f27, f10, f8, dyn # perform operation
fmadd.d f20, f27, f10, f8, rdn # perform operation
fmadd.d f20, f27, f10, f8, rmm # perform operation
fmadd.d f20, f27, f10, f8, rne # perform operation
fmadd.d f20, f27, f10, f8, rtz # perform operation
fmadd.d f20, f27, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f27, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f27, f10, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000001)
li x2, 0x4b69cb59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0xe468a701 # load x3 with 32 MSBs 0x00000000e468a701
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e468a701
sw x3, 0(x2) # store x3 (0xe468a701) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e468a701 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fmadd.d f2, f14, f4, f6, dyn # perform operation
fmadd.d f2, f14, f4, f6, rdn # perform operation
fmadd.d f2, f14, f4, f6, rmm # perform operation
fmadd.d f2, f14, f4, f6, rne # perform operation
fmadd.d f2, f14, f4, f6, rtz # perform operation
fmadd.d f2, f14, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f14, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f14, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff7ffffffffffff)
li x19, 0x1bde375a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0xe3947c94 # load x3 with 32 MSBs 0x00000000e3947c94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3947c94
sw x3, 0(x2) # store x3 (0xe3947c94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e3947c94 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
fmadd.d f19, f8, f28, f27, dyn # perform operation
fmadd.d f19, f8, f28, f27, rdn # perform operation
fmadd.d f19, f8, f28, f27, rmm # perform operation
fmadd.d f19, f8, f28, f27, rne # perform operation
fmadd.d f19, f8, f28, f27, rtz # perform operation
fmadd.d f19, f8, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f8, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f8, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x5a392534a57711ad)
li x10, 0xb22452ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0x2a14b844 # load x3 with 32 MSBs 0x000000002a14b844
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a14b844
sw x3, 0(x2) # store x3 (0x2a14b844) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000002a14b844 from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fmadd.d f10, f16, f27, f14, dyn # perform operation
fmadd.d f10, f16, f27, f14, rdn # perform operation
fmadd.d f10, f16, f27, f14, rmm # perform operation
fmadd.d f10, f16, f27, f14, rne # perform operation
fmadd.d f10, f16, f27, f14, rtz # perform operation
fmadd.d f10, f16, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f16, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f16, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xa6e895993737426c)
li x20, 0x2eda0b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0xffb9bf07 # load x3 with 32 MSBs 0x00000000ffb9bf07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffb9bf07
sw x3, 0(x2) # store x3 (0xffb9bf07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000ffb9bf07 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fmadd.d f20, f25, f30, f9, dyn # perform operation
fmadd.d f20, f25, f30, f9, rdn # perform operation
fmadd.d f20, f25, f30, f9, rmm # perform operation
fmadd.d f20, f25, f30, f9, rne # perform operation
fmadd.d f20, f25, f30, f9, rtz # perform operation
fmadd.d f20, f25, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f25, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x0)
li x8, 0x2772280f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x3b9ff4e9 # load x3 with 32 MSBs 0x000000003b9ff4e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b9ff4e9
sw x3, 0(x2) # store x3 (0x3b9ff4e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003b9ff4e9 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
fmadd.d f8, f17, f7, f10, dyn # perform operation
fmadd.d f8, f17, f7, f10, rdn # perform operation
fmadd.d f8, f17, f7, f10, rmm # perform operation
fmadd.d f8, f17, f7, f10, rne # perform operation
fmadd.d f8, f17, f7, f10, rtz # perform operation
fmadd.d f8, f17, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f17, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000000)
li x21, 0x32cf9027 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x5df1b707 # load x3 with 32 MSBs 0x000000005df1b707
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005df1b707
sw x3, 0(x2) # store x3 (0x5df1b707) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005df1b707 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fmadd.d f21, f19, f8, f1, dyn # perform operation
fmadd.d f21, f19, f8, f1, rdn # perform operation
fmadd.d f21, f19, f8, f1, rmm # perform operation
fmadd.d f21, f19, f8, f1, rne # perform operation
fmadd.d f21, f19, f8, f1, rtz # perform operation
fmadd.d f21, f19, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f19, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff0000000000000)
li x14, 0x5b93363e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x8dcc653a # load x3 with 32 MSBs 0x000000008dcc653a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008dcc653a
sw x3, 0(x2) # store x3 (0x8dcc653a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008dcc653a from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fmadd.d f14, f19, f12, f23, dyn # perform operation
fmadd.d f14, f19, f12, f23, rdn # perform operation
fmadd.d f14, f19, f12, f23, rmm # perform operation
fmadd.d f14, f19, f12, f23, rne # perform operation
fmadd.d f14, f19, f12, f23, rtz # perform operation
fmadd.d f14, f19, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f19, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff0000000000000)
li x13, 0x47ae8897 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x4ed8fc59 # load x3 with 32 MSBs 0x000000004ed8fc59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ed8fc59
sw x3, 0(x2) # store x3 (0x4ed8fc59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004ed8fc59 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fmadd.d f13, f17, f10, f5, dyn # perform operation
fmadd.d f13, f17, f10, f5, rdn # perform operation
fmadd.d f13, f17, f10, f5, rmm # perform operation
fmadd.d f13, f17, f10, f5, rne # perform operation
fmadd.d f13, f17, f10, f5, rtz # perform operation
fmadd.d f13, f17, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f17, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f17, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff8000000000000)
li x7, 0x449524ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0xda0cbf12 # load x3 with 32 MSBs 0x00000000da0cbf12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da0cbf12
sw x3, 0(x2) # store x3 (0xda0cbf12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000da0cbf12 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
fmadd.d f7, f20, f5, f31, dyn # perform operation
fmadd.d f7, f20, f5, f31, rdn # perform operation
fmadd.d f7, f20, f5, f31, rmm # perform operation
fmadd.d f7, f20, f5, f31, rne # perform operation
fmadd.d f7, f20, f5, f31, rtz # perform operation
fmadd.d f7, f20, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f20, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff8000000000000)
li x5, 0x0b94de89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x2c516a51 # load x3 with 32 MSBs 0x000000002c516a51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c516a51
sw x3, 0(x2) # store x3 (0x2c516a51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000002c516a51 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fmadd.d f5, f26, f15, f10, dyn # perform operation
fmadd.d f5, f26, f15, f10, rdn # perform operation
fmadd.d f5, f26, f15, f10, rmm # perform operation
fmadd.d f5, f26, f15, f10, rne # perform operation
fmadd.d f5, f26, f15, f10, rtz # perform operation
fmadd.d f5, f26, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f26, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f26, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f26, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f26, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f26, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x4000000000000000)
li x8, 0x8b5e6734 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0xe3b9f465 # load x3 with 32 MSBs 0x00000000e3b9f465
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3b9f465
sw x3, 0(x2) # store x3 (0xe3b9f465) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e3b9f465 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fmadd.d f8, f31, f21, f19, dyn # perform operation
fmadd.d f8, f31, f21, f19, rdn # perform operation
fmadd.d f8, f31, f21, f19, rmm # perform operation
fmadd.d f8, f31, f21, f19, rne # perform operation
fmadd.d f8, f31, f21, f19, rtz # perform operation
fmadd.d f8, f31, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f31, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xc000000000000000)
li x9, 0x87ce4def # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0x7cf77e5e # load x3 with 32 MSBs 0x000000007cf77e5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cf77e5e
sw x3, 0(x2) # store x3 (0x7cf77e5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007cf77e5e from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fmadd.d f9, f16, f3, f6, dyn # perform operation
fmadd.d f9, f16, f3, f6, rdn # perform operation
fmadd.d f9, f16, f3, f6, rmm # perform operation
fmadd.d f9, f16, f3, f6, rne # perform operation
fmadd.d f9, f16, f3, f6, rtz # perform operation
fmadd.d f9, f16, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f16, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x10000000000000)
li x29, 0xf6da981c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x142d3ad9 # load x3 with 32 MSBs 0x00000000142d3ad9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000142d3ad9
sw x3, 0(x2) # store x3 (0x142d3ad9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000142d3ad9 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fmadd.d f29, f23, f8, f26, dyn # perform operation
fmadd.d f29, f23, f8, f26, rdn # perform operation
fmadd.d f29, f23, f8, f26, rmm # perform operation
fmadd.d f29, f23, f8, f26, rne # perform operation
fmadd.d f29, f23, f8, f26, rtz # perform operation
fmadd.d f29, f23, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f23, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8010000000000000)
li x18, 0x0d38b22b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0xd3195850 # load x3 with 32 MSBs 0x00000000d3195850
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3195850
sw x3, 0(x2) # store x3 (0xd3195850) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d3195850 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fmadd.d f18, f9, f22, f16, dyn # perform operation
fmadd.d f18, f9, f22, f16, rdn # perform operation
fmadd.d f18, f9, f22, f16, rmm # perform operation
fmadd.d f18, f9, f22, f16, rne # perform operation
fmadd.d f18, f9, f22, f16, rtz # perform operation
fmadd.d f18, f9, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f9, f22, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fefffffffffffff)
li x25, 0x389a4d28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0x6e0a7769 # load x3 with 32 MSBs 0x000000006e0a7769
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e0a7769
sw x3, 0(x2) # store x3 (0x6e0a7769) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006e0a7769 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fmadd.d f25, f22, f16, f11, dyn # perform operation
fmadd.d f25, f22, f16, f11, rdn # perform operation
fmadd.d f25, f22, f16, f11, rmm # perform operation
fmadd.d f25, f22, f16, f11, rne # perform operation
fmadd.d f25, f22, f16, f11, rtz # perform operation
fmadd.d f25, f22, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f22, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xffefffffffffffff)
li x25, 0xb0327d64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0xe4b7f3b6 # load x3 with 32 MSBs 0x00000000e4b7f3b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4b7f3b6
sw x3, 0(x2) # store x3 (0xe4b7f3b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000e4b7f3b6 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fmadd.d f25, f15, f14, f30, dyn # perform operation
fmadd.d f25, f15, f14, f30, rdn # perform operation
fmadd.d f25, f15, f14, f30, rmm # perform operation
fmadd.d f25, f15, f14, f30, rne # perform operation
fmadd.d f25, f15, f14, f30, rtz # perform operation
fmadd.d f25, f15, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f15, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfffffffffffff)
li x14, 0xf4f581d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0xa733e6a6 # load x3 with 32 MSBs 0x00000000a733e6a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a733e6a6
sw x3, 0(x2) # store x3 (0xa733e6a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a733e6a6 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fmadd.d f14, f11, f30, f7, dyn # perform operation
fmadd.d f14, f11, f30, f7, rdn # perform operation
fmadd.d f14, f11, f30, f7, rmm # perform operation
fmadd.d f14, f11, f30, f7, rne # perform operation
fmadd.d f14, f11, f30, f7, rtz # perform operation
fmadd.d f14, f11, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f11, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x800fffffffffffff)
li x10, 0x69764178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x93443b4a # load x3 with 32 MSBs 0x0000000093443b4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093443b4a
sw x3, 0(x2) # store x3 (0x93443b4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000093443b4a from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fmadd.d f10, f24, f16, f18, dyn # perform operation
fmadd.d f10, f24, f16, f18, rdn # perform operation
fmadd.d f10, f24, f16, f18, rmm # perform operation
fmadd.d f10, f24, f16, f18, rne # perform operation
fmadd.d f10, f24, f16, f18, rtz # perform operation
fmadd.d f10, f24, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f24, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000)
li x24, 0x757338b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x5cbdb7a3 # load x3 with 32 MSBs 0x000000005cbdb7a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005cbdb7a3
sw x3, 0(x2) # store x3 (0x5cbdb7a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005cbdb7a3 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fmadd.d f24, f14, f9, f5, dyn # perform operation
fmadd.d f24, f14, f9, f5, rdn # perform operation
fmadd.d f24, f14, f9, f5, rmm # perform operation
fmadd.d f24, f14, f9, f5, rne # perform operation
fmadd.d f24, f14, f9, f5, rtz # perform operation
fmadd.d f24, f14, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f14, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8008000000000000)
li x17, 0xfb4b15f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
li x3, 0xaecafd4c # load x3 with 32 MSBs 0x00000000aecafd4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aecafd4c
sw x3, 0(x2) # store x3 (0xaecafd4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000aecafd4c from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fmadd.d f17, f30, f3, f10, dyn # perform operation
fmadd.d f17, f30, f3, f10, rdn # perform operation
fmadd.d f17, f30, f3, f10, rmm # perform operation
fmadd.d f17, f30, f3, f10, rne # perform operation
fmadd.d f17, f30, f3, f10, rtz # perform operation
fmadd.d f17, f30, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f30, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f30, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f30, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f30, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f30, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x1)
li x31, 0xf68e68f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x6d2bd2ce # load x3 with 32 MSBs 0x000000006d2bd2ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d2bd2ce
sw x3, 0(x2) # store x3 (0x6d2bd2ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006d2bd2ce from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fmadd.d f31, f26, f15, f23, dyn # perform operation
fmadd.d f31, f26, f15, f23, rdn # perform operation
fmadd.d f31, f26, f15, f23, rmm # perform operation
fmadd.d f31, f26, f15, f23, rne # perform operation
fmadd.d f31, f26, f15, f23, rtz # perform operation
fmadd.d f31, f26, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f26, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000001)
li x9, 0x33731097 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x2ef83d57 # load x3 with 32 MSBs 0x000000002ef83d57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ef83d57
sw x3, 0(x2) # store x3 (0x2ef83d57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000002ef83d57 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fmadd.d f9, f26, f24, f12, dyn # perform operation
fmadd.d f9, f26, f24, f12, rdn # perform operation
fmadd.d f9, f26, f24, f12, rmm # perform operation
fmadd.d f9, f26, f24, f12, rne # perform operation
fmadd.d f9, f26, f24, f12, rtz # perform operation
fmadd.d f9, f26, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f26, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000000)
li x6, 0x277e92e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0x3f097d89 # load x3 with 32 MSBs 0x000000003f097d89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f097d89
sw x3, 0(x2) # store x3 (0x3f097d89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000003f097d89 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fmadd.d f6, f28, f11, f19, dyn # perform operation
fmadd.d f6, f28, f11, f19, rdn # perform operation
fmadd.d f6, f28, f11, f19, rmm # perform operation
fmadd.d f6, f28, f11, f19, rne # perform operation
fmadd.d f6, f28, f11, f19, rtz # perform operation
fmadd.d f6, f28, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f28, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f28, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfff0000000000000)
li x28, 0xffb34566 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0xf9b063d4 # load x3 with 32 MSBs 0x00000000f9b063d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9b063d4
sw x3, 0(x2) # store x3 (0xf9b063d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f9b063d4 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fmadd.d f28, f17, f21, f6, dyn # perform operation
fmadd.d f28, f17, f21, f6, rdn # perform operation
fmadd.d f28, f17, f21, f6, rmm # perform operation
fmadd.d f28, f17, f21, f6, rne # perform operation
fmadd.d f28, f17, f21, f6, rtz # perform operation
fmadd.d f28, f17, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f17, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f17, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff8000000000000)
li x25, 0xe805c3e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0x799a3852 # load x3 with 32 MSBs 0x00000000799a3852
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000799a3852
sw x3, 0(x2) # store x3 (0x799a3852) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000799a3852 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fmadd.d f25, f2, f4, f13, dyn # perform operation
fmadd.d f25, f2, f4, f13, rdn # perform operation
fmadd.d f25, f2, f4, f13, rmm # perform operation
fmadd.d f25, f2, f4, f13, rne # perform operation
fmadd.d f25, f2, f4, f13, rtz # perform operation
fmadd.d f25, f2, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f2, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f2, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f2, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f2, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f2, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fffffffffffffff)
li x9, 0xa072a24f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x08d952e5 # load x3 with 32 MSBs 0x0000000008d952e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008d952e5
sw x3, 0(x2) # store x3 (0x08d952e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000008d952e5 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fmadd.d f9, f29, f24, f22, dyn # perform operation
fmadd.d f9, f29, f24, f22, rdn # perform operation
fmadd.d f9, f29, f24, f22, rmm # perform operation
fmadd.d f9, f29, f24, f22, rne # perform operation
fmadd.d f9, f29, f24, f22, rtz # perform operation
fmadd.d f9, f29, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f29, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000001)
li x10, 0x6c25a84b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0x079f4e2b # load x3 with 32 MSBs 0x00000000079f4e2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000079f4e2b
sw x3, 0(x2) # store x3 (0x079f4e2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000079f4e2b from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fmadd.d f10, f20, f31, f25, dyn # perform operation
fmadd.d f10, f20, f31, f25, rdn # perform operation
fmadd.d f10, f20, f31, f25, rmm # perform operation
fmadd.d f10, f20, f31, f25, rne # perform operation
fmadd.d f10, f20, f31, f25, rtz # perform operation
fmadd.d f10, f20, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f20, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff7ffffffffffff)
li x22, 0xacf1cc79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x25085772 # load x3 with 32 MSBs 0x0000000025085772
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025085772
sw x3, 0(x2) # store x3 (0x25085772) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000025085772 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
fmadd.d f22, f8, f12, f6, dyn # perform operation
fmadd.d f22, f8, f12, f6, rdn # perform operation
fmadd.d f22, f8, f12, f6, rmm # perform operation
fmadd.d f22, f8, f12, f6, rne # perform operation
fmadd.d f22, f8, f12, f6, rtz # perform operation
fmadd.d f22, f8, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f8, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f8, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f8, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f8, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f8, f12, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x5a392534a57711ad)
li x9, 0x91f15c3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0x4dd668f8 # load x3 with 32 MSBs 0x000000004dd668f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dd668f8
sw x3, 0(x2) # store x3 (0x4dd668f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004dd668f8 from memory into f13
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fmadd.d f9, f4, f13, f10, dyn # perform operation
fmadd.d f9, f4, f13, f10, rdn # perform operation
fmadd.d f9, f4, f13, f10, rmm # perform operation
fmadd.d f9, f4, f13, f10, rne # perform operation
fmadd.d f9, f4, f13, f10, rtz # perform operation
fmadd.d f9, f4, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f4, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f4, f13, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xa6e895993737426c)
li x17, 0x21c3380f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x2f7f92db # load x3 with 32 MSBs 0x000000002f7f92db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f7f92db
sw x3, 0(x2) # store x3 (0x2f7f92db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002f7f92db from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fmadd.d f17, f18, f12, f15, dyn # perform operation
fmadd.d f17, f18, f12, f15, rdn # perform operation
fmadd.d f17, f18, f12, f15, rmm # perform operation
fmadd.d f17, f18, f12, f15, rne # perform operation
fmadd.d f17, f18, f12, f15, rtz # perform operation
fmadd.d f17, f18, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f18, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f18, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f18, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f18, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f18, f12, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x19, 0x4d950220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x95ef5482 # load x3 with 32 MSBs 0x0000000095ef5482
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095ef5482
sw x3, 0(x2) # store x3 (0x95ef5482) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000095ef5482 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fmadd.d f19, f1, f29, f27, dyn # perform operation
fmadd.d f19, f1, f29, f27, rdn # perform operation
fmadd.d f19, f1, f29, f27, rmm # perform operation
fmadd.d f19, f1, f29, f27, rne # perform operation
fmadd.d f19, f1, f29, f27, rtz # perform operation
fmadd.d f19, f1, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f1, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000000)
li x29, 0x2cd950e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x012c06e5 # load x3 with 32 MSBs 0x00000000012c06e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000012c06e5
sw x3, 0(x2) # store x3 (0x012c06e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000012c06e5 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
fmadd.d f29, f20, f13, f23, dyn # perform operation
fmadd.d f29, f20, f13, f23, rdn # perform operation
fmadd.d f29, f20, f13, f23, rmm # perform operation
fmadd.d f29, f20, f13, f23, rne # perform operation
fmadd.d f29, f20, f13, f23, rtz # perform operation
fmadd.d f29, f20, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f20, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff0000000000000)
li x17, 0xd47ecfaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x4ce66079 # load x3 with 32 MSBs 0x000000004ce66079
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ce66079
sw x3, 0(x2) # store x3 (0x4ce66079) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004ce66079 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fmadd.d f17, f25, f14, f15, dyn # perform operation
fmadd.d f17, f25, f14, f15, rdn # perform operation
fmadd.d f17, f25, f14, f15, rmm # perform operation
fmadd.d f17, f25, f14, f15, rne # perform operation
fmadd.d f17, f25, f14, f15, rtz # perform operation
fmadd.d f17, f25, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f25, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff0000000000000)
li x27, 0x3ab2a2c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x1d73608e # load x3 with 32 MSBs 0x000000001d73608e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d73608e
sw x3, 0(x2) # store x3 (0x1d73608e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001d73608e from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fmadd.d f27, f12, f22, f21, dyn # perform operation
fmadd.d f27, f12, f22, f21, rdn # perform operation
fmadd.d f27, f12, f22, f21, rmm # perform operation
fmadd.d f27, f12, f22, f21, rne # perform operation
fmadd.d f27, f12, f22, f21, rtz # perform operation
fmadd.d f27, f12, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f12, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff8000000000000)
li x6, 0xc56ff4b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0xd199659a # load x3 with 32 MSBs 0x00000000d199659a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d199659a
sw x3, 0(x2) # store x3 (0xd199659a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d199659a from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fmadd.d f6, f16, f24, f3, dyn # perform operation
fmadd.d f6, f16, f24, f3, rdn # perform operation
fmadd.d f6, f16, f24, f3, rmm # perform operation
fmadd.d f6, f16, f24, f3, rne # perform operation
fmadd.d f6, f16, f24, f3, rtz # perform operation
fmadd.d f6, f16, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f16, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f16, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f16, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f16, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f16, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff8000000000000)
li x29, 0x7a5013ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x6894d852 # load x3 with 32 MSBs 0x000000006894d852
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006894d852
sw x3, 0(x2) # store x3 (0x6894d852) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000006894d852 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fmadd.d f29, f10, f30, f8, dyn # perform operation
fmadd.d f29, f10, f30, f8, rdn # perform operation
fmadd.d f29, f10, f30, f8, rmm # perform operation
fmadd.d f29, f10, f30, f8, rne # perform operation
fmadd.d f29, f10, f30, f8, rtz # perform operation
fmadd.d f29, f10, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f10, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000000000000000)
li x3, 0x4e60be10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0x34adf74b # load x3 with 32 MSBs 0x0000000034adf74b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034adf74b
sw x3, 0(x2) # store x3 (0x34adf74b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000034adf74b from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fmadd.d f3, f27, f24, f11, dyn # perform operation
fmadd.d f3, f27, f24, f11, rdn # perform operation
fmadd.d f3, f27, f24, f11, rmm # perform operation
fmadd.d f3, f27, f24, f11, rne # perform operation
fmadd.d f3, f27, f24, f11, rtz # perform operation
fmadd.d f3, f27, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f27, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000000000000000)
li x17, 0x15463657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0xd786a4d4 # load x3 with 32 MSBs 0x00000000d786a4d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d786a4d4
sw x3, 0(x2) # store x3 (0xd786a4d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d786a4d4 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fmadd.d f17, f22, f25, f8, dyn # perform operation
fmadd.d f17, f22, f25, f8, rdn # perform operation
fmadd.d f17, f22, f25, f8, rmm # perform operation
fmadd.d f17, f22, f25, f8, rne # perform operation
fmadd.d f17, f22, f25, f8, rtz # perform operation
fmadd.d f17, f22, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f22, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x10000000000000)
li x24, 0xdfee1cd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x3b2fe847 # load x3 with 32 MSBs 0x000000003b2fe847
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b2fe847
sw x3, 0(x2) # store x3 (0x3b2fe847) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003b2fe847 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fmadd.d f24, f7, f18, f10, dyn # perform operation
fmadd.d f24, f7, f18, f10, rdn # perform operation
fmadd.d f24, f7, f18, f10, rmm # perform operation
fmadd.d f24, f7, f18, f10, rne # perform operation
fmadd.d f24, f7, f18, f10, rtz # perform operation
fmadd.d f24, f7, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f7, f18, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8010000000000000)
li x20, 0xf60de8f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x3d3f4ea8 # load x3 with 32 MSBs 0x000000003d3f4ea8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d3f4ea8
sw x3, 0(x2) # store x3 (0x3d3f4ea8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003d3f4ea8 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fmadd.d f20, f17, f3, f9, dyn # perform operation
fmadd.d f20, f17, f3, f9, rdn # perform operation
fmadd.d f20, f17, f3, f9, rmm # perform operation
fmadd.d f20, f17, f3, f9, rne # perform operation
fmadd.d f20, f17, f3, f9, rtz # perform operation
fmadd.d f20, f17, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f17, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f17, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fefffffffffffff)
li x5, 0x9ee94ec9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x478f463e # load x3 with 32 MSBs 0x00000000478f463e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000478f463e
sw x3, 0(x2) # store x3 (0x478f463e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000478f463e from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fmadd.d f5, f12, f23, f7, dyn # perform operation
fmadd.d f5, f12, f23, f7, rdn # perform operation
fmadd.d f5, f12, f23, f7, rmm # perform operation
fmadd.d f5, f12, f23, f7, rne # perform operation
fmadd.d f5, f12, f23, f7, rtz # perform operation
fmadd.d f5, f12, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f12, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f12, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffefffffffffffff)
li x20, 0x12c5021d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x57be9c66 # load x3 with 32 MSBs 0x0000000057be9c66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057be9c66
sw x3, 0(x2) # store x3 (0x57be9c66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000057be9c66 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fmadd.d f20, f12, f18, f16, dyn # perform operation
fmadd.d f20, f12, f18, f16, rdn # perform operation
fmadd.d f20, f12, f18, f16, rmm # perform operation
fmadd.d f20, f12, f18, f16, rne # perform operation
fmadd.d f20, f12, f18, f16, rtz # perform operation
fmadd.d f20, f12, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f12, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfffffffffffff)
li x7, 0xb47faea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x380e2014 # load x3 with 32 MSBs 0x00000000380e2014
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000380e2014
sw x3, 0(x2) # store x3 (0x380e2014) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000380e2014 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fmadd.d f7, f28, f25, f13, dyn # perform operation
fmadd.d f7, f28, f25, f13, rdn # perform operation
fmadd.d f7, f28, f25, f13, rmm # perform operation
fmadd.d f7, f28, f25, f13, rne # perform operation
fmadd.d f7, f28, f25, f13, rtz # perform operation
fmadd.d f7, f28, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f28, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f28, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f28, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f28, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f28, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800fffffffffffff)
li x11, 0xa4f4169b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0xa85046ea # load x3 with 32 MSBs 0x00000000a85046ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a85046ea
sw x3, 0(x2) # store x3 (0xa85046ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000a85046ea from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fmadd.d f11, f20, f16, f3, dyn # perform operation
fmadd.d f11, f20, f16, f3, rdn # perform operation
fmadd.d f11, f20, f16, f3, rmm # perform operation
fmadd.d f11, f20, f16, f3, rne # perform operation
fmadd.d f11, f20, f16, f3, rtz # perform operation
fmadd.d f11, f20, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f20, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000)
li x16, 0x39a41ec6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0xa84cdf4d # load x3 with 32 MSBs 0x00000000a84cdf4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a84cdf4d
sw x3, 0(x2) # store x3 (0xa84cdf4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a84cdf4d from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
fmadd.d f16, f3, f17, f19, dyn # perform operation
fmadd.d f16, f3, f17, f19, rdn # perform operation
fmadd.d f16, f3, f17, f19, rmm # perform operation
fmadd.d f16, f3, f17, f19, rne # perform operation
fmadd.d f16, f3, f17, f19, rtz # perform operation
fmadd.d f16, f3, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f3, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8008000000000000)
li x14, 0x4c43c89d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0xca72ca21 # load x3 with 32 MSBs 0x00000000ca72ca21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca72ca21
sw x3, 0(x2) # store x3 (0xca72ca21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ca72ca21 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fmadd.d f14, f30, f5, f8, dyn # perform operation
fmadd.d f14, f30, f5, f8, rdn # perform operation
fmadd.d f14, f30, f5, f8, rmm # perform operation
fmadd.d f14, f30, f5, f8, rne # perform operation
fmadd.d f14, f30, f5, f8, rtz # perform operation
fmadd.d f14, f30, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f30, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f30, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x9, 0x29a82aae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x75d322f8 # load x3 with 32 MSBs 0x0000000075d322f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075d322f8
sw x3, 0(x2) # store x3 (0x75d322f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000075d322f8 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fmadd.d f9, f30, f24, f17, dyn # perform operation
fmadd.d f9, f30, f24, f17, rdn # perform operation
fmadd.d f9, f30, f24, f17, rmm # perform operation
fmadd.d f9, f30, f24, f17, rne # perform operation
fmadd.d f9, f30, f24, f17, rtz # perform operation
fmadd.d f9, f30, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f30, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f30, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f30, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f30, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f30, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000001)
li x22, 0xe1374f8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x6a935458 # load x3 with 32 MSBs 0x000000006a935458
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a935458
sw x3, 0(x2) # store x3 (0x6a935458) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000006a935458 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fmadd.d f22, f7, f19, f3, dyn # perform operation
fmadd.d f22, f7, f19, f3, rdn # perform operation
fmadd.d f22, f7, f19, f3, rmm # perform operation
fmadd.d f22, f7, f19, f3, rne # perform operation
fmadd.d f22, f7, f19, f3, rtz # perform operation
fmadd.d f22, f7, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f7, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000000)
li x18, 0xed204f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x2cf05034 # load x3 with 32 MSBs 0x000000002cf05034
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002cf05034
sw x3, 0(x2) # store x3 (0x2cf05034) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002cf05034 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fmadd.d f18, f24, f7, f21, dyn # perform operation
fmadd.d f18, f24, f7, f21, rdn # perform operation
fmadd.d f18, f24, f7, f21, rmm # perform operation
fmadd.d f18, f24, f7, f21, rne # perform operation
fmadd.d f18, f24, f7, f21, rtz # perform operation
fmadd.d f18, f24, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f24, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfff0000000000000)
li x31, 0xfbf1a349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x85d16ab0 # load x3 with 32 MSBs 0x0000000085d16ab0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085d16ab0
sw x3, 0(x2) # store x3 (0x85d16ab0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000085d16ab0 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fmadd.d f31, f25, f16, f5, dyn # perform operation
fmadd.d f31, f25, f16, f5, rdn # perform operation
fmadd.d f31, f25, f16, f5, rmm # perform operation
fmadd.d f31, f25, f16, f5, rne # perform operation
fmadd.d f31, f25, f16, f5, rtz # perform operation
fmadd.d f31, f25, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f25, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff8000000000000)
li x20, 0xd7a3cd26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0xaeae9259 # load x3 with 32 MSBs 0x00000000aeae9259
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aeae9259
sw x3, 0(x2) # store x3 (0xaeae9259) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000aeae9259 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fmadd.d f20, f18, f31, f8, dyn # perform operation
fmadd.d f20, f18, f31, f8, rdn # perform operation
fmadd.d f20, f18, f31, f8, rmm # perform operation
fmadd.d f20, f18, f31, f8, rne # perform operation
fmadd.d f20, f18, f31, f8, rtz # perform operation
fmadd.d f20, f18, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f18, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f18, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f18, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f18, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f18, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffffffffffff)
li x12, 0xd02aedc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0xe8e297fe # load x3 with 32 MSBs 0x00000000e8e297fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8e297fe
sw x3, 0(x2) # store x3 (0xe8e297fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e8e297fe from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fmadd.d f12, f27, f21, f20, dyn # perform operation
fmadd.d f12, f27, f21, f20, rdn # perform operation
fmadd.d f12, f27, f21, f20, rmm # perform operation
fmadd.d f12, f27, f21, f20, rne # perform operation
fmadd.d f12, f27, f21, f20, rtz # perform operation
fmadd.d f12, f27, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f27, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000001)
li x8, 0xdc943dfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x6ff5b7c5 # load x3 with 32 MSBs 0x000000006ff5b7c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ff5b7c5
sw x3, 0(x2) # store x3 (0x6ff5b7c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006ff5b7c5 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fmadd.d f8, f2, f12, f3, dyn # perform operation
fmadd.d f8, f2, f12, f3, rdn # perform operation
fmadd.d f8, f2, f12, f3, rmm # perform operation
fmadd.d f8, f2, f12, f3, rne # perform operation
fmadd.d f8, f2, f12, f3, rtz # perform operation
fmadd.d f8, f2, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f2, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff7ffffffffffff)
li x4, 0xed6d83ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0x51c35c33 # load x3 with 32 MSBs 0x0000000051c35c33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051c35c33
sw x3, 0(x2) # store x3 (0x51c35c33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000051c35c33 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fmadd.d f4, f27, f15, f11, dyn # perform operation
fmadd.d f4, f27, f15, f11, rdn # perform operation
fmadd.d f4, f27, f15, f11, rmm # perform operation
fmadd.d f4, f27, f15, f11, rne # perform operation
fmadd.d f4, f27, f15, f11, rtz # perform operation
fmadd.d f4, f27, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f27, f15, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x5a392534a57711ad)
li x17, 0xf8638364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0xfbf429f1 # load x3 with 32 MSBs 0x00000000fbf429f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbf429f1
sw x3, 0(x2) # store x3 (0xfbf429f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000fbf429f1 from memory into f8
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fmadd.d f17, f27, f8, f14, dyn # perform operation
fmadd.d f17, f27, f8, f14, rdn # perform operation
fmadd.d f17, f27, f8, f14, rmm # perform operation
fmadd.d f17, f27, f8, f14, rne # perform operation
fmadd.d f17, f27, f8, f14, rtz # perform operation
fmadd.d f17, f27, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f27, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xa6e895993737426c)
li x12, 0x57abf080 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x3f0fb91a # load x3 with 32 MSBs 0x000000003f0fb91a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f0fb91a
sw x3, 0(x2) # store x3 (0x3f0fb91a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003f0fb91a from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
fmadd.d f12, f3, f18, f14, dyn # perform operation
fmadd.d f12, f3, f18, f14, rdn # perform operation
fmadd.d f12, f3, f18, f14, rmm # perform operation
fmadd.d f12, f3, f18, f14, rne # perform operation
fmadd.d f12, f3, f18, f14, rtz # perform operation
fmadd.d f12, f3, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f3, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f3, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f3, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f3, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f3, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x0)
li x23, 0x91095612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0xf2e3f739 # load x3 with 32 MSBs 0x00000000f2e3f739
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2e3f739
sw x3, 0(x2) # store x3 (0xf2e3f739) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f2e3f739 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fmadd.d f23, f27, f2, f11, dyn # perform operation
fmadd.d f23, f27, f2, f11, rdn # perform operation
fmadd.d f23, f27, f2, f11, rmm # perform operation
fmadd.d f23, f27, f2, f11, rne # perform operation
fmadd.d f23, f27, f2, f11, rtz # perform operation
fmadd.d f23, f27, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f27, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000000)
li x29, 0x706cad27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x91f9ec6f # load x3 with 32 MSBs 0x0000000091f9ec6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091f9ec6f
sw x3, 0(x2) # store x3 (0x91f9ec6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000091f9ec6f from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fmadd.d f29, f5, f12, f8, dyn # perform operation
fmadd.d f29, f5, f12, f8, rdn # perform operation
fmadd.d f29, f5, f12, f8, rmm # perform operation
fmadd.d f29, f5, f12, f8, rne # perform operation
fmadd.d f29, f5, f12, f8, rtz # perform operation
fmadd.d f29, f5, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f5, f12, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff0000000000000)
li x6, 0x50c695a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x17fa0199 # load x3 with 32 MSBs 0x0000000017fa0199
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017fa0199
sw x3, 0(x2) # store x3 (0x17fa0199) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000017fa0199 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fmadd.d f6, f12, f16, f29, dyn # perform operation
fmadd.d f6, f12, f16, f29, rdn # perform operation
fmadd.d f6, f12, f16, f29, rmm # perform operation
fmadd.d f6, f12, f16, f29, rne # perform operation
fmadd.d f6, f12, f16, f29, rtz # perform operation
fmadd.d f6, f12, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f12, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff0000000000000)
li x2, 0x25b81a62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x79f22fe6 # load x3 with 32 MSBs 0x0000000079f22fe6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079f22fe6
sw x3, 0(x2) # store x3 (0x79f22fe6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000079f22fe6 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fmadd.d f2, f27, f8, f11, dyn # perform operation
fmadd.d f2, f27, f8, f11, rdn # perform operation
fmadd.d f2, f27, f8, f11, rmm # perform operation
fmadd.d f2, f27, f8, f11, rne # perform operation
fmadd.d f2, f27, f8, f11, rtz # perform operation
fmadd.d f2, f27, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f27, f8, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff8000000000000)
li x6, 0x17410fb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x422b227e # load x3 with 32 MSBs 0x00000000422b227e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000422b227e
sw x3, 0(x2) # store x3 (0x422b227e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000422b227e from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fmadd.d f6, f22, f8, f23, dyn # perform operation
fmadd.d f6, f22, f8, f23, rdn # perform operation
fmadd.d f6, f22, f8, f23, rmm # perform operation
fmadd.d f6, f22, f8, f23, rne # perform operation
fmadd.d f6, f22, f8, f23, rtz # perform operation
fmadd.d f6, f22, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f22, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f22, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff8000000000000)
li x19, 0x1d8f686e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x29697937 # load x3 with 32 MSBs 0x0000000029697937
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029697937
sw x3, 0(x2) # store x3 (0x29697937) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000029697937 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fmadd.d f19, f11, f6, f10, dyn # perform operation
fmadd.d f19, f11, f6, f10, rdn # perform operation
fmadd.d f19, f11, f6, f10, rmm # perform operation
fmadd.d f19, f11, f6, f10, rne # perform operation
fmadd.d f19, f11, f6, f10, rtz # perform operation
fmadd.d f19, f11, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f11, f6, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x4000000000000000)
li x22, 0x6ad9f3bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x713cb214 # load x3 with 32 MSBs 0x00000000713cb214
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000713cb214
sw x3, 0(x2) # store x3 (0x713cb214) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000713cb214 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fmadd.d f22, f19, f1, f30, dyn # perform operation
fmadd.d f22, f19, f1, f30, rdn # perform operation
fmadd.d f22, f19, f1, f30, rmm # perform operation
fmadd.d f22, f19, f1, f30, rne # perform operation
fmadd.d f22, f19, f1, f30, rtz # perform operation
fmadd.d f22, f19, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f19, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f19, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xc000000000000000)
li x14, 0x05511668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0xf8daba43 # load x3 with 32 MSBs 0x00000000f8daba43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8daba43
sw x3, 0(x2) # store x3 (0xf8daba43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f8daba43 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fmadd.d f14, f15, f8, f30, dyn # perform operation
fmadd.d f14, f15, f8, f30, rdn # perform operation
fmadd.d f14, f15, f8, f30, rmm # perform operation
fmadd.d f14, f15, f8, f30, rne # perform operation
fmadd.d f14, f15, f8, f30, rtz # perform operation
fmadd.d f14, f15, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f15, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x10000000000000)
li x9, 0xb9176107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x5d8d8a8c # load x3 with 32 MSBs 0x000000005d8d8a8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d8d8a8c
sw x3, 0(x2) # store x3 (0x5d8d8a8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005d8d8a8c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fmadd.d f9, f13, f6, f26, dyn # perform operation
fmadd.d f9, f13, f6, f26, rdn # perform operation
fmadd.d f9, f13, f6, f26, rmm # perform operation
fmadd.d f9, f13, f6, f26, rne # perform operation
fmadd.d f9, f13, f6, f26, rtz # perform operation
fmadd.d f9, f13, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f13, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8010000000000000)
li x2, 0x67ed40ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0xeb406dc6 # load x3 with 32 MSBs 0x00000000eb406dc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb406dc6
sw x3, 0(x2) # store x3 (0xeb406dc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000eb406dc6 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fmadd.d f2, f28, f22, f13, dyn # perform operation
fmadd.d f2, f28, f22, f13, rdn # perform operation
fmadd.d f2, f28, f22, f13, rmm # perform operation
fmadd.d f2, f28, f22, f13, rne # perform operation
fmadd.d f2, f28, f22, f13, rtz # perform operation
fmadd.d f2, f28, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f28, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f28, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f28, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f28, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f28, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fefffffffffffff)
li x30, 0x0129fa90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x393d43a9 # load x3 with 32 MSBs 0x00000000393d43a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000393d43a9
sw x3, 0(x2) # store x3 (0x393d43a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000393d43a9 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fmadd.d f30, f21, f6, f25, dyn # perform operation
fmadd.d f30, f21, f6, f25, rdn # perform operation
fmadd.d f30, f21, f6, f25, rmm # perform operation
fmadd.d f30, f21, f6, f25, rne # perform operation
fmadd.d f30, f21, f6, f25, rtz # perform operation
fmadd.d f30, f21, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f21, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f21, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xffefffffffffffff)
li x19, 0xabf863ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0xec85faf9 # load x3 with 32 MSBs 0x00000000ec85faf9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec85faf9
sw x3, 0(x2) # store x3 (0xec85faf9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ec85faf9 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fmadd.d f19, f30, f24, f27, dyn # perform operation
fmadd.d f19, f30, f24, f27, rdn # perform operation
fmadd.d f19, f30, f24, f27, rmm # perform operation
fmadd.d f19, f30, f24, f27, rne # perform operation
fmadd.d f19, f30, f24, f27, rtz # perform operation
fmadd.d f19, f30, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f30, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f30, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f30, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f30, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f30, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfffffffffffff)
li x1, 0xd746f168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x5dc6c151 # load x3 with 32 MSBs 0x000000005dc6c151
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005dc6c151
sw x3, 0(x2) # store x3 (0x5dc6c151) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005dc6c151 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fmadd.d f1, f15, f9, f21, dyn # perform operation
fmadd.d f1, f15, f9, f21, rdn # perform operation
fmadd.d f1, f15, f9, f21, rmm # perform operation
fmadd.d f1, f15, f9, f21, rne # perform operation
fmadd.d f1, f15, f9, f21, rtz # perform operation
fmadd.d f1, f15, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f15, f9, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x800fffffffffffff)
li x14, 0x68457f19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0xa1e49d83 # load x3 with 32 MSBs 0x00000000a1e49d83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1e49d83
sw x3, 0(x2) # store x3 (0xa1e49d83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a1e49d83 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fmadd.d f14, f29, f3, f21, dyn # perform operation
fmadd.d f14, f29, f3, f21, rdn # perform operation
fmadd.d f14, f29, f3, f21, rmm # perform operation
fmadd.d f14, f29, f3, f21, rne # perform operation
fmadd.d f14, f29, f3, f21, rtz # perform operation
fmadd.d f14, f29, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f29, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000)
li x19, 0xe5305fff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x2b2ff453 # load x3 with 32 MSBs 0x000000002b2ff453
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b2ff453
sw x3, 0(x2) # store x3 (0x2b2ff453) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002b2ff453 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fmadd.d f19, f21, f2, f18, dyn # perform operation
fmadd.d f19, f21, f2, f18, rdn # perform operation
fmadd.d f19, f21, f2, f18, rmm # perform operation
fmadd.d f19, f21, f2, f18, rne # perform operation
fmadd.d f19, f21, f2, f18, rtz # perform operation
fmadd.d f19, f21, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f21, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8008000000000000)
li x14, 0xd555c2c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0xbdf3c446 # load x3 with 32 MSBs 0x00000000bdf3c446
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdf3c446
sw x3, 0(x2) # store x3 (0xbdf3c446) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bdf3c446 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fmadd.d f14, f6, f31, f19, dyn # perform operation
fmadd.d f14, f6, f31, f19, rdn # perform operation
fmadd.d f14, f6, f31, f19, rmm # perform operation
fmadd.d f14, f6, f31, f19, rne # perform operation
fmadd.d f14, f6, f31, f19, rtz # perform operation
fmadd.d f14, f6, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f6, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f6, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x1)
li x22, 0x9a68eaee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x35fa3760 # load x3 with 32 MSBs 0x0000000035fa3760
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035fa3760
sw x3, 0(x2) # store x3 (0x35fa3760) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000035fa3760 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fmadd.d f22, f26, f16, f3, dyn # perform operation
fmadd.d f22, f26, f16, f3, rdn # perform operation
fmadd.d f22, f26, f16, f3, rmm # perform operation
fmadd.d f22, f26, f16, f3, rne # perform operation
fmadd.d f22, f26, f16, f3, rtz # perform operation
fmadd.d f22, f26, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f26, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000001)
li x9, 0x5117677d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x48356a7e # load x3 with 32 MSBs 0x0000000048356a7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048356a7e
sw x3, 0(x2) # store x3 (0x48356a7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000048356a7e from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fmadd.d f9, f20, f28, f17, dyn # perform operation
fmadd.d f9, f20, f28, f17, rdn # perform operation
fmadd.d f9, f20, f28, f17, rmm # perform operation
fmadd.d f9, f20, f28, f17, rne # perform operation
fmadd.d f9, f20, f28, f17, rtz # perform operation
fmadd.d f9, f20, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f20, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f20, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f20, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f20, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f20, f28, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000000)
li x4, 0x8b3373da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x2281ae6f # load x3 with 32 MSBs 0x000000002281ae6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002281ae6f
sw x3, 0(x2) # store x3 (0x2281ae6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002281ae6f from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fmadd.d f4, f29, f8, f18, dyn # perform operation
fmadd.d f4, f29, f8, f18, rdn # perform operation
fmadd.d f4, f29, f8, f18, rmm # perform operation
fmadd.d f4, f29, f8, f18, rne # perform operation
fmadd.d f4, f29, f8, f18, rtz # perform operation
fmadd.d f4, f29, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f29, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfff0000000000000)
li x27, 0xae52e491 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x7fe8e806 # load x3 with 32 MSBs 0x000000007fe8e806
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fe8e806
sw x3, 0(x2) # store x3 (0x7fe8e806) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000007fe8e806 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
fmadd.d f27, f30, f29, f31, dyn # perform operation
fmadd.d f27, f30, f29, f31, rdn # perform operation
fmadd.d f27, f30, f29, f31, rmm # perform operation
fmadd.d f27, f30, f29, f31, rne # perform operation
fmadd.d f27, f30, f29, f31, rtz # perform operation
fmadd.d f27, f30, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f30, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff8000000000000)
li x6, 0xb132b946 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x0786765e # load x3 with 32 MSBs 0x000000000786765e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000786765e
sw x3, 0(x2) # store x3 (0x0786765e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000000786765e from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fmadd.d f6, f20, f15, f13, dyn # perform operation
fmadd.d f6, f20, f15, f13, rdn # perform operation
fmadd.d f6, f20, f15, f13, rmm # perform operation
fmadd.d f6, f20, f15, f13, rne # perform operation
fmadd.d f6, f20, f15, f13, rtz # perform operation
fmadd.d f6, f20, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f20, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f20, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f20, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f20, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f20, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fffffffffffffff)
li x21, 0xc8846585 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x3179bc9e # load x3 with 32 MSBs 0x000000003179bc9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003179bc9e
sw x3, 0(x2) # store x3 (0x3179bc9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003179bc9e from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fmadd.d f21, f8, f28, f29, dyn # perform operation
fmadd.d f21, f8, f28, f29, rdn # perform operation
fmadd.d f21, f8, f28, f29, rmm # perform operation
fmadd.d f21, f8, f28, f29, rne # perform operation
fmadd.d f21, f8, f28, f29, rtz # perform operation
fmadd.d f21, f8, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f8, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f8, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f8, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f8, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f8, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000001)
li x8, 0xdbb63a86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0xfcea3daa # load x3 with 32 MSBs 0x00000000fcea3daa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcea3daa
sw x3, 0(x2) # store x3 (0xfcea3daa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000fcea3daa from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fmadd.d f8, f14, f19, f25, dyn # perform operation
fmadd.d f8, f14, f19, f25, rdn # perform operation
fmadd.d f8, f14, f19, f25, rmm # perform operation
fmadd.d f8, f14, f19, f25, rne # perform operation
fmadd.d f8, f14, f19, f25, rtz # perform operation
fmadd.d f8, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f14, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff7ffffffffffff)
li x11, 0xcee4bc78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0xd88fdcac # load x3 with 32 MSBs 0x00000000d88fdcac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d88fdcac
sw x3, 0(x2) # store x3 (0xd88fdcac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d88fdcac from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
fmadd.d f11, f22, f3, f12, dyn # perform operation
fmadd.d f11, f22, f3, f12, rdn # perform operation
fmadd.d f11, f22, f3, f12, rmm # perform operation
fmadd.d f11, f22, f3, f12, rne # perform operation
fmadd.d f11, f22, f3, f12, rtz # perform operation
fmadd.d f11, f22, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f22, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x5a392534a57711ad)
li x22, 0x21146364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x66603322 # load x3 with 32 MSBs 0x0000000066603322
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066603322
sw x3, 0(x2) # store x3 (0x66603322) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000066603322 from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fmadd.d f22, f16, f30, f11, dyn # perform operation
fmadd.d f22, f16, f30, f11, rdn # perform operation
fmadd.d f22, f16, f30, f11, rmm # perform operation
fmadd.d f22, f16, f30, f11, rne # perform operation
fmadd.d f22, f16, f30, f11, rtz # perform operation
fmadd.d f22, f16, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f16, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f16, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f16, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f16, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f16, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xa6e895993737426c)
li x8, 0x689a0516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x247b90c6 # load x3 with 32 MSBs 0x00000000247b90c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000247b90c6
sw x3, 0(x2) # store x3 (0x247b90c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000247b90c6 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fmadd.d f8, f10, f17, f27, dyn # perform operation
fmadd.d f8, f10, f17, f27, rdn # perform operation
fmadd.d f8, f10, f17, f27, rmm # perform operation
fmadd.d f8, f10, f17, f27, rne # perform operation
fmadd.d f8, f10, f17, f27, rtz # perform operation
fmadd.d f8, f10, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f10, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f10, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f10, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f10, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f10, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x0)
li x2, 0x5b589b4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x98001ab1 # load x3 with 32 MSBs 0x0000000098001ab1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098001ab1
sw x3, 0(x2) # store x3 (0x98001ab1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000098001ab1 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fmadd.d f2, f18, f4, f11, dyn # perform operation
fmadd.d f2, f18, f4, f11, rdn # perform operation
fmadd.d f2, f18, f4, f11, rmm # perform operation
fmadd.d f2, f18, f4, f11, rne # perform operation
fmadd.d f2, f18, f4, f11, rtz # perform operation
fmadd.d f2, f18, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f18, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f18, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000000)
li x8, 0x8212419f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x125098ef # load x3 with 32 MSBs 0x00000000125098ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000125098ef
sw x3, 0(x2) # store x3 (0x125098ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000125098ef from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fmadd.d f8, f6, f14, f10, dyn # perform operation
fmadd.d f8, f6, f14, f10, rdn # perform operation
fmadd.d f8, f6, f14, f10, rmm # perform operation
fmadd.d f8, f6, f14, f10, rne # perform operation
fmadd.d f8, f6, f14, f10, rtz # perform operation
fmadd.d f8, f6, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f6, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff0000000000000)
li x20, 0xd9428c24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0x5a055030 # load x3 with 32 MSBs 0x000000005a055030
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a055030
sw x3, 0(x2) # store x3 (0x5a055030) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005a055030 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fmadd.d f20, f29, f7, f6, dyn # perform operation
fmadd.d f20, f29, f7, f6, rdn # perform operation
fmadd.d f20, f29, f7, f6, rmm # perform operation
fmadd.d f20, f29, f7, f6, rne # perform operation
fmadd.d f20, f29, f7, f6, rtz # perform operation
fmadd.d f20, f29, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f29, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f29, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f29, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f29, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f29, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff0000000000000)
li x12, 0x0bd48d17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0x42661894 # load x3 with 32 MSBs 0x0000000042661894
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042661894
sw x3, 0(x2) # store x3 (0x42661894) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000042661894 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fmadd.d f12, f26, f30, f16, dyn # perform operation
fmadd.d f12, f26, f30, f16, rdn # perform operation
fmadd.d f12, f26, f30, f16, rmm # perform operation
fmadd.d f12, f26, f30, f16, rne # perform operation
fmadd.d f12, f26, f30, f16, rtz # perform operation
fmadd.d f12, f26, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f26, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f26, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff8000000000000)
li x10, 0x61cc295e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0xd6b2ea20 # load x3 with 32 MSBs 0x00000000d6b2ea20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6b2ea20
sw x3, 0(x2) # store x3 (0xd6b2ea20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d6b2ea20 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fmadd.d f10, f17, f18, f16, dyn # perform operation
fmadd.d f10, f17, f18, f16, rdn # perform operation
fmadd.d f10, f17, f18, f16, rmm # perform operation
fmadd.d f10, f17, f18, f16, rne # perform operation
fmadd.d f10, f17, f18, f16, rtz # perform operation
fmadd.d f10, f17, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f17, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff8000000000000)
li x20, 0x4d0b989f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0xd8531068 # load x3 with 32 MSBs 0x00000000d8531068
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8531068
sw x3, 0(x2) # store x3 (0xd8531068) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d8531068 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fmadd.d f20, f21, f5, f22, dyn # perform operation
fmadd.d f20, f21, f5, f22, rdn # perform operation
fmadd.d f20, f21, f5, f22, rmm # perform operation
fmadd.d f20, f21, f5, f22, rne # perform operation
fmadd.d f20, f21, f5, f22, rtz # perform operation
fmadd.d f20, f21, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f21, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f21, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f21, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f21, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f21, f5, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x4000000000000000)
li x4, 0x437a8ea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0xefe69528 # load x3 with 32 MSBs 0x00000000efe69528
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efe69528
sw x3, 0(x2) # store x3 (0xefe69528) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000efe69528 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fmadd.d f4, f28, f13, f31, dyn # perform operation
fmadd.d f4, f28, f13, f31, rdn # perform operation
fmadd.d f4, f28, f13, f31, rmm # perform operation
fmadd.d f4, f28, f13, f31, rne # perform operation
fmadd.d f4, f28, f13, f31, rtz # perform operation
fmadd.d f4, f28, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f28, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xc000000000000000)
li x7, 0x21f6c5c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0xe1d80157 # load x3 with 32 MSBs 0x00000000e1d80157
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1d80157
sw x3, 0(x2) # store x3 (0xe1d80157) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e1d80157 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fmadd.d f7, f12, f13, f22, dyn # perform operation
fmadd.d f7, f12, f13, f22, rdn # perform operation
fmadd.d f7, f12, f13, f22, rmm # perform operation
fmadd.d f7, f12, f13, f22, rne # perform operation
fmadd.d f7, f12, f13, f22, rtz # perform operation
fmadd.d f7, f12, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f12, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f12, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x10000000000000)
li x5, 0xca4412d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x8985dece # load x3 with 32 MSBs 0x000000008985dece
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008985dece
sw x3, 0(x2) # store x3 (0x8985dece) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008985dece from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fmadd.d f5, f23, f8, f10, dyn # perform operation
fmadd.d f5, f23, f8, f10, rdn # perform operation
fmadd.d f5, f23, f8, f10, rmm # perform operation
fmadd.d f5, f23, f8, f10, rne # perform operation
fmadd.d f5, f23, f8, f10, rtz # perform operation
fmadd.d f5, f23, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f23, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8010000000000000)
li x1, 0x4c75510a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x0fbf2792 # load x3 with 32 MSBs 0x000000000fbf2792
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fbf2792
sw x3, 0(x2) # store x3 (0x0fbf2792) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000fbf2792 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fmadd.d f1, f19, f7, f16, dyn # perform operation
fmadd.d f1, f19, f7, f16, rdn # perform operation
fmadd.d f1, f19, f7, f16, rmm # perform operation
fmadd.d f1, f19, f7, f16, rne # perform operation
fmadd.d f1, f19, f7, f16, rtz # perform operation
fmadd.d f1, f19, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f19, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f19, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f19, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f19, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f19, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fefffffffffffff)
li x31, 0xe340315b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x551743bc # load x3 with 32 MSBs 0x00000000551743bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000551743bc
sw x3, 0(x2) # store x3 (0x551743bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000551743bc from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fmadd.d f31, f14, f2, f10, dyn # perform operation
fmadd.d f31, f14, f2, f10, rdn # perform operation
fmadd.d f31, f14, f2, f10, rmm # perform operation
fmadd.d f31, f14, f2, f10, rne # perform operation
fmadd.d f31, f14, f2, f10, rtz # perform operation
fmadd.d f31, f14, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f14, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xffefffffffffffff)
li x28, 0x3cb430d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0xee1f50cb # load x3 with 32 MSBs 0x00000000ee1f50cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee1f50cb
sw x3, 0(x2) # store x3 (0xee1f50cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ee1f50cb from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
fmadd.d f28, f29, f4, f13, dyn # perform operation
fmadd.d f28, f29, f4, f13, rdn # perform operation
fmadd.d f28, f29, f4, f13, rmm # perform operation
fmadd.d f28, f29, f4, f13, rne # perform operation
fmadd.d f28, f29, f4, f13, rtz # perform operation
fmadd.d f28, f29, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f29, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f29, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f29, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f29, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f29, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfffffffffffff)
li x5, 0xbf89f9f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x08fca482 # load x3 with 32 MSBs 0x0000000008fca482
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008fca482
sw x3, 0(x2) # store x3 (0x08fca482) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000008fca482 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fmadd.d f5, f24, f3, f15, dyn # perform operation
fmadd.d f5, f24, f3, f15, rdn # perform operation
fmadd.d f5, f24, f3, f15, rmm # perform operation
fmadd.d f5, f24, f3, f15, rne # perform operation
fmadd.d f5, f24, f3, f15, rtz # perform operation
fmadd.d f5, f24, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f24, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f24, f3, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x800fffffffffffff)
li x22, 0x70fbdbe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0xc9099c2a # load x3 with 32 MSBs 0x00000000c9099c2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9099c2a
sw x3, 0(x2) # store x3 (0xc9099c2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c9099c2a from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fmadd.d f22, f10, f29, f12, dyn # perform operation
fmadd.d f22, f10, f29, f12, rdn # perform operation
fmadd.d f22, f10, f29, f12, rmm # perform operation
fmadd.d f22, f10, f29, f12, rne # perform operation
fmadd.d f22, f10, f29, f12, rtz # perform operation
fmadd.d f22, f10, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f10, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000)
li x15, 0x4391002d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x2fae0fb0 # load x3 with 32 MSBs 0x000000002fae0fb0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fae0fb0
sw x3, 0(x2) # store x3 (0x2fae0fb0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002fae0fb0 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fmadd.d f15, f24, f30, f28, dyn # perform operation
fmadd.d f15, f24, f30, f28, rdn # perform operation
fmadd.d f15, f24, f30, f28, rmm # perform operation
fmadd.d f15, f24, f30, f28, rne # perform operation
fmadd.d f15, f24, f30, f28, rtz # perform operation
fmadd.d f15, f24, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f24, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f24, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8008000000000000)
li x14, 0x492c4ac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xbce48501 # load x3 with 32 MSBs 0x00000000bce48501
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bce48501
sw x3, 0(x2) # store x3 (0xbce48501) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000bce48501 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
fmadd.d f14, f15, f8, f6, dyn # perform operation
fmadd.d f14, f15, f8, f6, rdn # perform operation
fmadd.d f14, f15, f8, f6, rmm # perform operation
fmadd.d f14, f15, f8, f6, rne # perform operation
fmadd.d f14, f15, f8, f6, rtz # perform operation
fmadd.d f14, f15, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f15, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x1)
li x20, 0xcddc3f4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0x4384c043 # load x3 with 32 MSBs 0x000000004384c043
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004384c043
sw x3, 0(x2) # store x3 (0x4384c043) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004384c043 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fmadd.d f20, f28, f2, f1, dyn # perform operation
fmadd.d f20, f28, f2, f1, rdn # perform operation
fmadd.d f20, f28, f2, f1, rmm # perform operation
fmadd.d f20, f28, f2, f1, rne # perform operation
fmadd.d f20, f28, f2, f1, rtz # perform operation
fmadd.d f20, f28, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f28, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f28, f2, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000001)
li x20, 0x4b973549 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x12650da5 # load x3 with 32 MSBs 0x0000000012650da5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012650da5
sw x3, 0(x2) # store x3 (0x12650da5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000012650da5 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fmadd.d f20, f14, f27, f13, dyn # perform operation
fmadd.d f20, f14, f27, f13, rdn # perform operation
fmadd.d f20, f14, f27, f13, rmm # perform operation
fmadd.d f20, f14, f27, f13, rne # perform operation
fmadd.d f20, f14, f27, f13, rtz # perform operation
fmadd.d f20, f14, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f14, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f14, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000000)
li x23, 0x605e4f98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xbbf83f98 # load x3 with 32 MSBs 0x00000000bbf83f98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbf83f98
sw x3, 0(x2) # store x3 (0xbbf83f98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000bbf83f98 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fmadd.d f23, f15, f19, f25, dyn # perform operation
fmadd.d f23, f15, f19, f25, rdn # perform operation
fmadd.d f23, f15, f19, f25, rmm # perform operation
fmadd.d f23, f15, f19, f25, rne # perform operation
fmadd.d f23, f15, f19, f25, rtz # perform operation
fmadd.d f23, f15, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f15, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfff0000000000000)
li x2, 0x21eb8fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x60ce53f2 # load x3 with 32 MSBs 0x0000000060ce53f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060ce53f2
sw x3, 0(x2) # store x3 (0x60ce53f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000060ce53f2 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fmadd.d f2, f31, f22, f5, dyn # perform operation
fmadd.d f2, f31, f22, f5, rdn # perform operation
fmadd.d f2, f31, f22, f5, rmm # perform operation
fmadd.d f2, f31, f22, f5, rne # perform operation
fmadd.d f2, f31, f22, f5, rtz # perform operation
fmadd.d f2, f31, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f31, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff8000000000000)
li x21, 0x151f59a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0xb35c1235 # load x3 with 32 MSBs 0x00000000b35c1235
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b35c1235
sw x3, 0(x2) # store x3 (0xb35c1235) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b35c1235 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fmadd.d f21, f5, f9, f30, dyn # perform operation
fmadd.d f21, f5, f9, f30, rdn # perform operation
fmadd.d f21, f5, f9, f30, rmm # perform operation
fmadd.d f21, f5, f9, f30, rne # perform operation
fmadd.d f21, f5, f9, f30, rtz # perform operation
fmadd.d f21, f5, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f5, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f5, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f5, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f5, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f5, f9, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fffffffffffffff)
li x29, 0xf674fe25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x8e53a366 # load x3 with 32 MSBs 0x000000008e53a366
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e53a366
sw x3, 0(x2) # store x3 (0x8e53a366) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008e53a366 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
fmadd.d f29, f16, f30, f21, dyn # perform operation
fmadd.d f29, f16, f30, f21, rdn # perform operation
fmadd.d f29, f16, f30, f21, rmm # perform operation
fmadd.d f29, f16, f30, f21, rne # perform operation
fmadd.d f29, f16, f30, f21, rtz # perform operation
fmadd.d f29, f16, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f16, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f16, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f16, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f16, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f16, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000001)
li x27, 0x7ebcefda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xc28abfad # load x3 with 32 MSBs 0x00000000c28abfad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c28abfad
sw x3, 0(x2) # store x3 (0xc28abfad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c28abfad from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fmadd.d f27, f30, f11, f8, dyn # perform operation
fmadd.d f27, f30, f11, f8, rdn # perform operation
fmadd.d f27, f30, f11, f8, rmm # perform operation
fmadd.d f27, f30, f11, f8, rne # perform operation
fmadd.d f27, f30, f11, f8, rtz # perform operation
fmadd.d f27, f30, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f30, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f30, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f30, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f30, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f30, f11, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x9, 0x88ac65a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x3d39e463 # load x3 with 32 MSBs 0x000000003d39e463
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d39e463
sw x3, 0(x2) # store x3 (0x3d39e463) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003d39e463 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fmadd.d f9, f7, f12, f24, dyn # perform operation
fmadd.d f9, f7, f12, f24, rdn # perform operation
fmadd.d f9, f7, f12, f24, rmm # perform operation
fmadd.d f9, f7, f12, f24, rne # perform operation
fmadd.d f9, f7, f12, f24, rtz # perform operation
fmadd.d f9, f7, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f7, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f7, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f7, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f7, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f7, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x5a392534a57711ad)
li x13, 0x6b3838f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x8efb9ea4 # load x3 with 32 MSBs 0x000000008efb9ea4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008efb9ea4
sw x3, 0(x2) # store x3 (0x8efb9ea4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000008efb9ea4 from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fmadd.d f13, f16, f27, f30, dyn # perform operation
fmadd.d f13, f16, f27, f30, rdn # perform operation
fmadd.d f13, f16, f27, f30, rmm # perform operation
fmadd.d f13, f16, f27, f30, rne # perform operation
fmadd.d f13, f16, f27, f30, rtz # perform operation
fmadd.d f13, f16, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f16, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xa6e895993737426c)
li x9, 0x57af3da6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x0e0ad186 # load x3 with 32 MSBs 0x000000000e0ad186
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e0ad186
sw x3, 0(x2) # store x3 (0x0e0ad186) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000000e0ad186 from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fmadd.d f9, f5, f26, f30, dyn # perform operation
fmadd.d f9, f5, f26, f30, rdn # perform operation
fmadd.d f9, f5, f26, f30, rmm # perform operation
fmadd.d f9, f5, f26, f30, rne # perform operation
fmadd.d f9, f5, f26, f30, rtz # perform operation
fmadd.d f9, f5, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f5, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f5, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f5, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f5, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f5, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x0)
li x4, 0x2f79de8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x75fbcbb8 # load x3 with 32 MSBs 0x0000000075fbcbb8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075fbcbb8
sw x3, 0(x2) # store x3 (0x75fbcbb8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000075fbcbb8 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
fmadd.d f4, f5, f6, f22, dyn # perform operation
fmadd.d f4, f5, f6, f22, rdn # perform operation
fmadd.d f4, f5, f6, f22, rmm # perform operation
fmadd.d f4, f5, f6, f22, rne # perform operation
fmadd.d f4, f5, f6, f22, rtz # perform operation
fmadd.d f4, f5, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f5, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f5, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f5, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f5, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f5, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000000)
li x13, 0x3298e914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0xb18b8b64 # load x3 with 32 MSBs 0x00000000b18b8b64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b18b8b64
sw x3, 0(x2) # store x3 (0xb18b8b64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b18b8b64 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fmadd.d f13, f11, f2, f20, dyn # perform operation
fmadd.d f13, f11, f2, f20, rdn # perform operation
fmadd.d f13, f11, f2, f20, rmm # perform operation
fmadd.d f13, f11, f2, f20, rne # perform operation
fmadd.d f13, f11, f2, f20, rtz # perform operation
fmadd.d f13, f11, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f11, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f11, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff0000000000000)
li x14, 0xa6983be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x3d6473a5 # load x3 with 32 MSBs 0x000000003d6473a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d6473a5
sw x3, 0(x2) # store x3 (0x3d6473a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003d6473a5 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fmadd.d f14, f22, f26, f21, dyn # perform operation
fmadd.d f14, f22, f26, f21, rdn # perform operation
fmadd.d f14, f22, f26, f21, rmm # perform operation
fmadd.d f14, f22, f26, f21, rne # perform operation
fmadd.d f14, f22, f26, f21, rtz # perform operation
fmadd.d f14, f22, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f22, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff0000000000000)
li x18, 0x903fe271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x60ce9f88 # load x3 with 32 MSBs 0x0000000060ce9f88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060ce9f88
sw x3, 0(x2) # store x3 (0x60ce9f88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000060ce9f88 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fmadd.d f18, f21, f5, f28, dyn # perform operation
fmadd.d f18, f21, f5, f28, rdn # perform operation
fmadd.d f18, f21, f5, f28, rmm # perform operation
fmadd.d f18, f21, f5, f28, rne # perform operation
fmadd.d f18, f21, f5, f28, rtz # perform operation
fmadd.d f18, f21, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f21, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f21, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff8000000000000)
li x19, 0xd1616ff7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x1da2ea2f # load x3 with 32 MSBs 0x000000001da2ea2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001da2ea2f
sw x3, 0(x2) # store x3 (0x1da2ea2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001da2ea2f from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fmadd.d f19, f29, f17, f26, dyn # perform operation
fmadd.d f19, f29, f17, f26, rdn # perform operation
fmadd.d f19, f29, f17, f26, rmm # perform operation
fmadd.d f19, f29, f17, f26, rne # perform operation
fmadd.d f19, f29, f17, f26, rtz # perform operation
fmadd.d f19, f29, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f29, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff8000000000000)
li x5, 0x3e558e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0xe17702f4 # load x3 with 32 MSBs 0x00000000e17702f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e17702f4
sw x3, 0(x2) # store x3 (0xe17702f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e17702f4 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fmadd.d f5, f1, f8, f26, dyn # perform operation
fmadd.d f5, f1, f8, f26, rdn # perform operation
fmadd.d f5, f1, f8, f26, rmm # perform operation
fmadd.d f5, f1, f8, f26, rne # perform operation
fmadd.d f5, f1, f8, f26, rtz # perform operation
fmadd.d f5, f1, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f1, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x4000000000000000)
li x22, 0x90bcbfb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0xe87e2e59 # load x3 with 32 MSBs 0x00000000e87e2e59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e87e2e59
sw x3, 0(x2) # store x3 (0xe87e2e59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e87e2e59 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fmadd.d f22, f10, f20, f31, dyn # perform operation
fmadd.d f22, f10, f20, f31, rdn # perform operation
fmadd.d f22, f10, f20, f31, rmm # perform operation
fmadd.d f22, f10, f20, f31, rne # perform operation
fmadd.d f22, f10, f20, f31, rtz # perform operation
fmadd.d f22, f10, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f10, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f10, f20, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xc000000000000000)
li x10, 0x56d05fc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x2f660c58 # load x3 with 32 MSBs 0x000000002f660c58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f660c58
sw x3, 0(x2) # store x3 (0x2f660c58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002f660c58 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fmadd.d f10, f21, f7, f1, dyn # perform operation
fmadd.d f10, f21, f7, f1, rdn # perform operation
fmadd.d f10, f21, f7, f1, rmm # perform operation
fmadd.d f10, f21, f7, f1, rne # perform operation
fmadd.d f10, f21, f7, f1, rtz # perform operation
fmadd.d f10, f21, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f21, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x10000000000000)
li x23, 0xfb2ac2c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0xa309456f # load x3 with 32 MSBs 0x00000000a309456f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a309456f
sw x3, 0(x2) # store x3 (0xa309456f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a309456f from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fmadd.d f23, f30, f7, f11, dyn # perform operation
fmadd.d f23, f30, f7, f11, rdn # perform operation
fmadd.d f23, f30, f7, f11, rmm # perform operation
fmadd.d f23, f30, f7, f11, rne # perform operation
fmadd.d f23, f30, f7, f11, rtz # perform operation
fmadd.d f23, f30, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f30, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8010000000000000)
li x21, 0x9b3b2456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0xb3622d9d # load x3 with 32 MSBs 0x00000000b3622d9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3622d9d
sw x3, 0(x2) # store x3 (0xb3622d9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b3622d9d from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
fmadd.d f21, f18, f12, f11, dyn # perform operation
fmadd.d f21, f18, f12, f11, rdn # perform operation
fmadd.d f21, f18, f12, f11, rmm # perform operation
fmadd.d f21, f18, f12, f11, rne # perform operation
fmadd.d f21, f18, f12, f11, rtz # perform operation
fmadd.d f21, f18, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f18, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f18, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f18, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f18, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f18, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fefffffffffffff)
li x19, 0x9aeaec58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x09ae4e72 # load x3 with 32 MSBs 0x0000000009ae4e72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009ae4e72
sw x3, 0(x2) # store x3 (0x09ae4e72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000009ae4e72 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fmadd.d f19, f21, f14, f22, dyn # perform operation
fmadd.d f19, f21, f14, f22, rdn # perform operation
fmadd.d f19, f21, f14, f22, rmm # perform operation
fmadd.d f19, f21, f14, f22, rne # perform operation
fmadd.d f19, f21, f14, f22, rtz # perform operation
fmadd.d f19, f21, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f21, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f21, f14, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xffefffffffffffff)
li x17, 0xe71d1ad0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0xaaa8e065 # load x3 with 32 MSBs 0x00000000aaa8e065
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aaa8e065
sw x3, 0(x2) # store x3 (0xaaa8e065) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000aaa8e065 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fmadd.d f17, f14, f26, f15, dyn # perform operation
fmadd.d f17, f14, f26, f15, rdn # perform operation
fmadd.d f17, f14, f26, f15, rmm # perform operation
fmadd.d f17, f14, f26, f15, rne # perform operation
fmadd.d f17, f14, f26, f15, rtz # perform operation
fmadd.d f17, f14, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f14, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f14, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f14, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f14, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f14, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfffffffffffff)
li x22, 0xa2dbee3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0xc6fe4b05 # load x3 with 32 MSBs 0x00000000c6fe4b05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6fe4b05
sw x3, 0(x2) # store x3 (0xc6fe4b05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c6fe4b05 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fmadd.d f22, f26, f21, f20, dyn # perform operation
fmadd.d f22, f26, f21, f20, rdn # perform operation
fmadd.d f22, f26, f21, f20, rmm # perform operation
fmadd.d f22, f26, f21, f20, rne # perform operation
fmadd.d f22, f26, f21, f20, rtz # perform operation
fmadd.d f22, f26, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f26, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x800fffffffffffff)
li x2, 0x9460f81d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x18b42807 # load x3 with 32 MSBs 0x0000000018b42807
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018b42807
sw x3, 0(x2) # store x3 (0x18b42807) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000018b42807 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fmadd.d f2, f9, f16, f14, dyn # perform operation
fmadd.d f2, f9, f16, f14, rdn # perform operation
fmadd.d f2, f9, f16, f14, rmm # perform operation
fmadd.d f2, f9, f16, f14, rne # perform operation
fmadd.d f2, f9, f16, f14, rtz # perform operation
fmadd.d f2, f9, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f9, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f9, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f9, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f9, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f9, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000)
li x8, 0x3c4eb4cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x2a499257 # load x3 with 32 MSBs 0x000000002a499257
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a499257
sw x3, 0(x2) # store x3 (0x2a499257) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000002a499257 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fmadd.d f8, f30, f1, f7, dyn # perform operation
fmadd.d f8, f30, f1, f7, rdn # perform operation
fmadd.d f8, f30, f1, f7, rmm # perform operation
fmadd.d f8, f30, f1, f7, rne # perform operation
fmadd.d f8, f30, f1, f7, rtz # perform operation
fmadd.d f8, f30, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f30, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f30, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8008000000000000)
li x1, 0xdd7f4337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0x5be566dd # load x3 with 32 MSBs 0x000000005be566dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005be566dd
sw x3, 0(x2) # store x3 (0x5be566dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000005be566dd from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fmadd.d f1, f18, f5, f14, dyn # perform operation
fmadd.d f1, f18, f5, f14, rdn # perform operation
fmadd.d f1, f18, f5, f14, rmm # perform operation
fmadd.d f1, f18, f5, f14, rne # perform operation
fmadd.d f1, f18, f5, f14, rtz # perform operation
fmadd.d f1, f18, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f18, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f18, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x1)
li x1, 0x048cae01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0x1b951225 # load x3 with 32 MSBs 0x000000001b951225
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b951225
sw x3, 0(x2) # store x3 (0x1b951225) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000001b951225 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fmadd.d f1, f3, f18, f31, dyn # perform operation
fmadd.d f1, f3, f18, f31, rdn # perform operation
fmadd.d f1, f3, f18, f31, rmm # perform operation
fmadd.d f1, f3, f18, f31, rne # perform operation
fmadd.d f1, f3, f18, f31, rtz # perform operation
fmadd.d f1, f3, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f3, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f3, f18, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000001)
li x17, 0xd09e0fae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x1b605b5f # load x3 with 32 MSBs 0x000000001b605b5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b605b5f
sw x3, 0(x2) # store x3 (0x1b605b5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001b605b5f from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
fmadd.d f17, f9, f12, f7, dyn # perform operation
fmadd.d f17, f9, f12, f7, rdn # perform operation
fmadd.d f17, f9, f12, f7, rmm # perform operation
fmadd.d f17, f9, f12, f7, rne # perform operation
fmadd.d f17, f9, f12, f7, rtz # perform operation
fmadd.d f17, f9, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f9, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f9, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f9, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f9, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f9, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000000)
li x22, 0x6cec99d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x58b0ea88 # load x3 with 32 MSBs 0x0000000058b0ea88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058b0ea88
sw x3, 0(x2) # store x3 (0x58b0ea88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000058b0ea88 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fmadd.d f22, f14, f6, f15, dyn # perform operation
fmadd.d f22, f14, f6, f15, rdn # perform operation
fmadd.d f22, f14, f6, f15, rmm # perform operation
fmadd.d f22, f14, f6, f15, rne # perform operation
fmadd.d f22, f14, f6, f15, rtz # perform operation
fmadd.d f22, f14, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f14, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfff0000000000000)
li x9, 0xda0bb2da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0xf5566c4f # load x3 with 32 MSBs 0x00000000f5566c4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5566c4f
sw x3, 0(x2) # store x3 (0xf5566c4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f5566c4f from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fmadd.d f9, f25, f31, f23, dyn # perform operation
fmadd.d f9, f25, f31, f23, rdn # perform operation
fmadd.d f9, f25, f31, f23, rmm # perform operation
fmadd.d f9, f25, f31, f23, rne # perform operation
fmadd.d f9, f25, f31, f23, rtz # perform operation
fmadd.d f9, f25, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f25, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f25, f31, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff8000000000000)
li x27, 0x2cb8c168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x823ae0e0 # load x3 with 32 MSBs 0x00000000823ae0e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000823ae0e0
sw x3, 0(x2) # store x3 (0x823ae0e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000823ae0e0 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fmadd.d f27, f16, f5, f30, dyn # perform operation
fmadd.d f27, f16, f5, f30, rdn # perform operation
fmadd.d f27, f16, f5, f30, rmm # perform operation
fmadd.d f27, f16, f5, f30, rne # perform operation
fmadd.d f27, f16, f5, f30, rtz # perform operation
fmadd.d f27, f16, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f16, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fffffffffffffff)
li x17, 0x07dde786 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
li x3, 0x95fda9bd # load x3 with 32 MSBs 0x0000000095fda9bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095fda9bd
sw x3, 0(x2) # store x3 (0x95fda9bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000095fda9bd from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fmadd.d f17, f28, f27, f12, dyn # perform operation
fmadd.d f17, f28, f27, f12, rdn # perform operation
fmadd.d f17, f28, f27, f12, rmm # perform operation
fmadd.d f17, f28, f27, f12, rne # perform operation
fmadd.d f17, f28, f27, f12, rtz # perform operation
fmadd.d f17, f28, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f28, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000001)
li x8, 0xb7b97fa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xc99a76d0 # load x3 with 32 MSBs 0x00000000c99a76d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c99a76d0
sw x3, 0(x2) # store x3 (0xc99a76d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c99a76d0 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fmadd.d f8, f5, f19, f6, dyn # perform operation
fmadd.d f8, f5, f19, f6, rdn # perform operation
fmadd.d f8, f5, f19, f6, rmm # perform operation
fmadd.d f8, f5, f19, f6, rne # perform operation
fmadd.d f8, f5, f19, f6, rtz # perform operation
fmadd.d f8, f5, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f5, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f5, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f5, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f5, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f5, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x21, 0xb6e2cb6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x0d57c64a # load x3 with 32 MSBs 0x000000000d57c64a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d57c64a
sw x3, 0(x2) # store x3 (0x0d57c64a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000d57c64a from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fmadd.d f21, f1, f31, f20, dyn # perform operation
fmadd.d f21, f1, f31, f20, rdn # perform operation
fmadd.d f21, f1, f31, f20, rmm # perform operation
fmadd.d f21, f1, f31, f20, rne # perform operation
fmadd.d f21, f1, f31, f20, rtz # perform operation
fmadd.d f21, f1, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f1, f31, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x5a392534a57711ad)
li x23, 0xc6a5da7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x8caccddc # load x3 with 32 MSBs 0x000000008caccddc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008caccddc
sw x3, 0(x2) # store x3 (0x8caccddc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008caccddc from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fmadd.d f23, f12, f4, f2, dyn # perform operation
fmadd.d f23, f12, f4, f2, rdn # perform operation
fmadd.d f23, f12, f4, f2, rmm # perform operation
fmadd.d f23, f12, f4, f2, rne # perform operation
fmadd.d f23, f12, f4, f2, rtz # perform operation
fmadd.d f23, f12, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f12, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f12, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f12, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f12, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f12, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xa6e895993737426c)
li x6, 0x4ddcc717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x327d890e # load x3 with 32 MSBs 0x00000000327d890e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000327d890e
sw x3, 0(x2) # store x3 (0x327d890e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000327d890e from memory into f2
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fmadd.d f6, f9, f2, f22, dyn # perform operation
fmadd.d f6, f9, f2, f22, rdn # perform operation
fmadd.d f6, f9, f2, f22, rmm # perform operation
fmadd.d f6, f9, f2, f22, rne # perform operation
fmadd.d f6, f9, f2, f22, rtz # perform operation
fmadd.d f6, f9, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f9, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f9, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x0)
li x24, 0xd57fdaff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0xb7c606bf # load x3 with 32 MSBs 0x00000000b7c606bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7c606bf
sw x3, 0(x2) # store x3 (0xb7c606bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b7c606bf from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fmadd.d f24, f16, f28, f15, dyn # perform operation
fmadd.d f24, f16, f28, f15, rdn # perform operation
fmadd.d f24, f16, f28, f15, rmm # perform operation
fmadd.d f24, f16, f28, f15, rne # perform operation
fmadd.d f24, f16, f28, f15, rtz # perform operation
fmadd.d f24, f16, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f16, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f16, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000000)
li x31, 0x6e7a43b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x945795f4 # load x3 with 32 MSBs 0x00000000945795f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000945795f4
sw x3, 0(x2) # store x3 (0x945795f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000945795f4 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fmadd.d f31, f7, f16, f12, dyn # perform operation
fmadd.d f31, f7, f16, f12, rdn # perform operation
fmadd.d f31, f7, f16, f12, rmm # perform operation
fmadd.d f31, f7, f16, f12, rne # perform operation
fmadd.d f31, f7, f16, f12, rtz # perform operation
fmadd.d f31, f7, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f7, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f7, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff0000000000000)
li x31, 0xac1c923a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x7e990bf5 # load x3 with 32 MSBs 0x000000007e990bf5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e990bf5
sw x3, 0(x2) # store x3 (0x7e990bf5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000007e990bf5 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fmadd.d f31, f25, f4, f5, dyn # perform operation
fmadd.d f31, f25, f4, f5, rdn # perform operation
fmadd.d f31, f25, f4, f5, rmm # perform operation
fmadd.d f31, f25, f4, f5, rne # perform operation
fmadd.d f31, f25, f4, f5, rtz # perform operation
fmadd.d f31, f25, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f25, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f25, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f25, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f25, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f25, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff0000000000000)
li x13, 0xd2f13ae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x8c914511 # load x3 with 32 MSBs 0x000000008c914511
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c914511
sw x3, 0(x2) # store x3 (0x8c914511) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000008c914511 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fmadd.d f13, f16, f24, f10, dyn # perform operation
fmadd.d f13, f16, f24, f10, rdn # perform operation
fmadd.d f13, f16, f24, f10, rmm # perform operation
fmadd.d f13, f16, f24, f10, rne # perform operation
fmadd.d f13, f16, f24, f10, rtz # perform operation
fmadd.d f13, f16, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f16, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f16, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f16, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f16, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f16, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff8000000000000)
li x1, 0x74c0ea14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x32a3e129 # load x3 with 32 MSBs 0x0000000032a3e129
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032a3e129
sw x3, 0(x2) # store x3 (0x32a3e129) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000032a3e129 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
fmadd.d f1, f6, f24, f4, dyn # perform operation
fmadd.d f1, f6, f24, f4, rdn # perform operation
fmadd.d f1, f6, f24, f4, rmm # perform operation
fmadd.d f1, f6, f24, f4, rne # perform operation
fmadd.d f1, f6, f24, f4, rtz # perform operation
fmadd.d f1, f6, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f6, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f6, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f6, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f6, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f6, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff8000000000000)
li x2, 0x9c21886b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x439390a3 # load x3 with 32 MSBs 0x00000000439390a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000439390a3
sw x3, 0(x2) # store x3 (0x439390a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000439390a3 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
fmadd.d f2, f4, f26, f25, dyn # perform operation
fmadd.d f2, f4, f26, f25, rdn # perform operation
fmadd.d f2, f4, f26, f25, rmm # perform operation
fmadd.d f2, f4, f26, f25, rne # perform operation
fmadd.d f2, f4, f26, f25, rtz # perform operation
fmadd.d f2, f4, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f4, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f4, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x4000000000000000)
li x21, 0x1dcd6351 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x069fe1d3 # load x3 with 32 MSBs 0x00000000069fe1d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000069fe1d3
sw x3, 0(x2) # store x3 (0x069fe1d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000069fe1d3 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fmadd.d f21, f22, f27, f15, dyn # perform operation
fmadd.d f21, f22, f27, f15, rdn # perform operation
fmadd.d f21, f22, f27, f15, rmm # perform operation
fmadd.d f21, f22, f27, f15, rne # perform operation
fmadd.d f21, f22, f27, f15, rtz # perform operation
fmadd.d f21, f22, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f22, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f22, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xc000000000000000)
li x12, 0x51f684ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xb6261e90 # load x3 with 32 MSBs 0x00000000b6261e90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6261e90
sw x3, 0(x2) # store x3 (0xb6261e90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b6261e90 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fmadd.d f12, f21, f26, f31, dyn # perform operation
fmadd.d f12, f21, f26, f31, rdn # perform operation
fmadd.d f12, f21, f26, f31, rmm # perform operation
fmadd.d f12, f21, f26, f31, rne # perform operation
fmadd.d f12, f21, f26, f31, rtz # perform operation
fmadd.d f12, f21, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f21, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f21, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f21, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f21, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f21, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x10000000000000)
li x23, 0x90685425 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0xa65c190f # load x3 with 32 MSBs 0x00000000a65c190f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a65c190f
sw x3, 0(x2) # store x3 (0xa65c190f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a65c190f from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fmadd.d f23, f13, f9, f19, dyn # perform operation
fmadd.d f23, f13, f9, f19, rdn # perform operation
fmadd.d f23, f13, f9, f19, rmm # perform operation
fmadd.d f23, f13, f9, f19, rne # perform operation
fmadd.d f23, f13, f9, f19, rtz # perform operation
fmadd.d f23, f13, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f13, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8010000000000000)
li x11, 0x970665fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x6e1e45ce # load x3 with 32 MSBs 0x000000006e1e45ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e1e45ce
sw x3, 0(x2) # store x3 (0x6e1e45ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006e1e45ce from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fmadd.d f11, f15, f18, f28, dyn # perform operation
fmadd.d f11, f15, f18, f28, rdn # perform operation
fmadd.d f11, f15, f18, f28, rmm # perform operation
fmadd.d f11, f15, f18, f28, rne # perform operation
fmadd.d f11, f15, f18, f28, rtz # perform operation
fmadd.d f11, f15, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f15, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fefffffffffffff)
li x29, 0x3a35000e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0xebec02a4 # load x3 with 32 MSBs 0x00000000ebec02a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebec02a4
sw x3, 0(x2) # store x3 (0xebec02a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ebec02a4 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fmadd.d f29, f7, f12, f5, dyn # perform operation
fmadd.d f29, f7, f12, f5, rdn # perform operation
fmadd.d f29, f7, f12, f5, rmm # perform operation
fmadd.d f29, f7, f12, f5, rne # perform operation
fmadd.d f29, f7, f12, f5, rtz # perform operation
fmadd.d f29, f7, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f7, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f7, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f7, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f7, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f7, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xffefffffffffffff)
li x3, 0xb941744d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x23cc2376 # load x3 with 32 MSBs 0x0000000023cc2376
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023cc2376
sw x3, 0(x2) # store x3 (0x23cc2376) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000023cc2376 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
fmadd.d f3, f20, f18, f12, dyn # perform operation
fmadd.d f3, f20, f18, f12, rdn # perform operation
fmadd.d f3, f20, f18, f12, rmm # perform operation
fmadd.d f3, f20, f18, f12, rne # perform operation
fmadd.d f3, f20, f18, f12, rtz # perform operation
fmadd.d f3, f20, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f20, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfffffffffffff)
li x4, 0x5972a2ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0xa765d2a2 # load x3 with 32 MSBs 0x00000000a765d2a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a765d2a2
sw x3, 0(x2) # store x3 (0xa765d2a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a765d2a2 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fmadd.d f4, f7, f31, f28, dyn # perform operation
fmadd.d f4, f7, f31, f28, rdn # perform operation
fmadd.d f4, f7, f31, f28, rmm # perform operation
fmadd.d f4, f7, f31, f28, rne # perform operation
fmadd.d f4, f7, f31, f28, rtz # perform operation
fmadd.d f4, f7, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f7, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f7, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x800fffffffffffff)
li x20, 0x65bb92a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xdcc00c16 # load x3 with 32 MSBs 0x00000000dcc00c16
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dcc00c16
sw x3, 0(x2) # store x3 (0xdcc00c16) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000dcc00c16 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fmadd.d f20, f8, f10, f9, dyn # perform operation
fmadd.d f20, f8, f10, f9, rdn # perform operation
fmadd.d f20, f8, f10, f9, rmm # perform operation
fmadd.d f20, f8, f10, f9, rne # perform operation
fmadd.d f20, f8, f10, f9, rtz # perform operation
fmadd.d f20, f8, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f8, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f8, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000)
li x15, 0x1a8c3d3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x91e58f56 # load x3 with 32 MSBs 0x0000000091e58f56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091e58f56
sw x3, 0(x2) # store x3 (0x91e58f56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000091e58f56 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fmadd.d f15, f13, f1, f7, dyn # perform operation
fmadd.d f15, f13, f1, f7, rdn # perform operation
fmadd.d f15, f13, f1, f7, rmm # perform operation
fmadd.d f15, f13, f1, f7, rne # perform operation
fmadd.d f15, f13, f1, f7, rtz # perform operation
fmadd.d f15, f13, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f13, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8008000000000000)
li x13, 0xd115d70f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0x3d229c1f # load x3 with 32 MSBs 0x000000003d229c1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d229c1f
sw x3, 0(x2) # store x3 (0x3d229c1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003d229c1f from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fmadd.d f13, f5, f19, f10, dyn # perform operation
fmadd.d f13, f5, f19, f10, rdn # perform operation
fmadd.d f13, f5, f19, f10, rmm # perform operation
fmadd.d f13, f5, f19, f10, rne # perform operation
fmadd.d f13, f5, f19, f10, rtz # perform operation
fmadd.d f13, f5, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f5, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f5, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f5, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f5, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f5, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x1)
li x7, 0xe9c64ed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xc892571f # load x3 with 32 MSBs 0x00000000c892571f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c892571f
sw x3, 0(x2) # store x3 (0xc892571f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c892571f from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fmadd.d f7, f11, f6, f8, dyn # perform operation
fmadd.d f7, f11, f6, f8, rdn # perform operation
fmadd.d f7, f11, f6, f8, rmm # perform operation
fmadd.d f7, f11, f6, f8, rne # perform operation
fmadd.d f7, f11, f6, f8, rtz # perform operation
fmadd.d f7, f11, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f11, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000001)
li x1, 0x9e8357bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x50165438 # load x3 with 32 MSBs 0x0000000050165438
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050165438
sw x3, 0(x2) # store x3 (0x50165438) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000050165438 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fmadd.d f1, f25, f26, f8, dyn # perform operation
fmadd.d f1, f25, f26, f8, rdn # perform operation
fmadd.d f1, f25, f26, f8, rmm # perform operation
fmadd.d f1, f25, f26, f8, rne # perform operation
fmadd.d f1, f25, f26, f8, rtz # perform operation
fmadd.d f1, f25, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f25, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f25, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000000)
li x16, 0x5d02268d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0x8b1d7940 # load x3 with 32 MSBs 0x000000008b1d7940
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b1d7940
sw x3, 0(x2) # store x3 (0x8b1d7940) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008b1d7940 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fmadd.d f16, f11, f4, f18, dyn # perform operation
fmadd.d f16, f11, f4, f18, rdn # perform operation
fmadd.d f16, f11, f4, f18, rmm # perform operation
fmadd.d f16, f11, f4, f18, rne # perform operation
fmadd.d f16, f11, f4, f18, rtz # perform operation
fmadd.d f16, f11, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f11, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f11, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f11, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f11, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f11, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfff0000000000000)
li x25, 0x50330b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x35110963 # load x3 with 32 MSBs 0x0000000035110963
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035110963
sw x3, 0(x2) # store x3 (0x35110963) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000035110963 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fmadd.d f25, f9, f3, f20, dyn # perform operation
fmadd.d f25, f9, f3, f20, rdn # perform operation
fmadd.d f25, f9, f3, f20, rmm # perform operation
fmadd.d f25, f9, f3, f20, rne # perform operation
fmadd.d f25, f9, f3, f20, rtz # perform operation
fmadd.d f25, f9, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f9, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f9, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f9, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f9, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f9, f3, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff8000000000000)
li x14, 0xeabc1302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0xeda4898b # load x3 with 32 MSBs 0x00000000eda4898b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eda4898b
sw x3, 0(x2) # store x3 (0xeda4898b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000eda4898b from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
fmadd.d f14, f5, f10, f29, dyn # perform operation
fmadd.d f14, f5, f10, f29, rdn # perform operation
fmadd.d f14, f5, f10, f29, rmm # perform operation
fmadd.d f14, f5, f10, f29, rne # perform operation
fmadd.d f14, f5, f10, f29, rtz # perform operation
fmadd.d f14, f5, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f5, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f5, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f5, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f5, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f5, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fffffffffffffff)
li x27, 0xd2089400 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x95448772 # load x3 with 32 MSBs 0x0000000095448772
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095448772
sw x3, 0(x2) # store x3 (0x95448772) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000095448772 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fmadd.d f27, f14, f31, f4, dyn # perform operation
fmadd.d f27, f14, f31, f4, rdn # perform operation
fmadd.d f27, f14, f31, f4, rmm # perform operation
fmadd.d f27, f14, f31, f4, rne # perform operation
fmadd.d f27, f14, f31, f4, rtz # perform operation
fmadd.d f27, f14, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f14, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f14, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f14, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f14, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f14, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000001)
li x25, 0x11b9bdb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x0e89be0f # load x3 with 32 MSBs 0x000000000e89be0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e89be0f
sw x3, 0(x2) # store x3 (0x0e89be0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000e89be0f from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fmadd.d f25, f13, f4, f31, dyn # perform operation
fmadd.d f25, f13, f4, f31, rdn # perform operation
fmadd.d f25, f13, f4, f31, rmm # perform operation
fmadd.d f25, f13, f4, f31, rne # perform operation
fmadd.d f25, f13, f4, f31, rtz # perform operation
fmadd.d f25, f13, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f13, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x6, 0x67da0193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x14ac315f # load x3 with 32 MSBs 0x0000000014ac315f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014ac315f
sw x3, 0(x2) # store x3 (0x14ac315f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000014ac315f from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fmadd.d f6, f2, f25, f20, dyn # perform operation
fmadd.d f6, f2, f25, f20, rdn # perform operation
fmadd.d f6, f2, f25, f20, rmm # perform operation
fmadd.d f6, f2, f25, f20, rne # perform operation
fmadd.d f6, f2, f25, f20, rtz # perform operation
fmadd.d f6, f2, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f2, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x5a392534a57711ad)
li x3, 0x99940f2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0xf976ce1b # load x3 with 32 MSBs 0x00000000f976ce1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f976ce1b
sw x3, 0(x2) # store x3 (0xf976ce1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f976ce1b from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fmadd.d f3, f23, f6, f11, dyn # perform operation
fmadd.d f3, f23, f6, f11, rdn # perform operation
fmadd.d f3, f23, f6, f11, rmm # perform operation
fmadd.d f3, f23, f6, f11, rne # perform operation
fmadd.d f3, f23, f6, f11, rtz # perform operation
fmadd.d f3, f23, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f23, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xa6e895993737426c)
li x5, 0x407c1431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x7a7210ac # load x3 with 32 MSBs 0x000000007a7210ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a7210ac
sw x3, 0(x2) # store x3 (0x7a7210ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007a7210ac from memory into f27
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fmadd.d f5, f1, f27, f9, dyn # perform operation
fmadd.d f5, f1, f27, f9, rdn # perform operation
fmadd.d f5, f1, f27, f9, rmm # perform operation
fmadd.d f5, f1, f27, f9, rne # perform operation
fmadd.d f5, f1, f27, f9, rtz # perform operation
fmadd.d f5, f1, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f1, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f1, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f1, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f1, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f1, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x0)
li x4, 0xf0f74ce5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x4d9f9d60 # load x3 with 32 MSBs 0x000000004d9f9d60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d9f9d60
sw x3, 0(x2) # store x3 (0x4d9f9d60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000004d9f9d60 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fmadd.d f4, f1, f12, f18, dyn # perform operation
fmadd.d f4, f1, f12, f18, rdn # perform operation
fmadd.d f4, f1, f12, f18, rmm # perform operation
fmadd.d f4, f1, f12, f18, rne # perform operation
fmadd.d f4, f1, f12, f18, rtz # perform operation
fmadd.d f4, f1, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f1, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f1, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f1, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f1, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f1, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000000)
li x5, 0xe399484a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0xc8b3673c # load x3 with 32 MSBs 0x00000000c8b3673c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8b3673c
sw x3, 0(x2) # store x3 (0xc8b3673c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c8b3673c from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fmadd.d f5, f11, f14, f20, dyn # perform operation
fmadd.d f5, f11, f14, f20, rdn # perform operation
fmadd.d f5, f11, f14, f20, rmm # perform operation
fmadd.d f5, f11, f14, f20, rne # perform operation
fmadd.d f5, f11, f14, f20, rtz # perform operation
fmadd.d f5, f11, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f11, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff0000000000000)
li x27, 0x5212da9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x5b3e2070 # load x3 with 32 MSBs 0x000000005b3e2070
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b3e2070
sw x3, 0(x2) # store x3 (0x5b3e2070) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005b3e2070 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fmadd.d f27, f16, f22, f10, dyn # perform operation
fmadd.d f27, f16, f22, f10, rdn # perform operation
fmadd.d f27, f16, f22, f10, rmm # perform operation
fmadd.d f27, f16, f22, f10, rne # perform operation
fmadd.d f27, f16, f22, f10, rtz # perform operation
fmadd.d f27, f16, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f16, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff0000000000000)
li x13, 0xb41ae2ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0xc98fa42b # load x3 with 32 MSBs 0x00000000c98fa42b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c98fa42b
sw x3, 0(x2) # store x3 (0xc98fa42b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c98fa42b from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fmadd.d f13, f20, f5, f25, dyn # perform operation
fmadd.d f13, f20, f5, f25, rdn # perform operation
fmadd.d f13, f20, f5, f25, rmm # perform operation
fmadd.d f13, f20, f5, f25, rne # perform operation
fmadd.d f13, f20, f5, f25, rtz # perform operation
fmadd.d f13, f20, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f20, f5, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff8000000000000)
li x10, 0x447f4b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x0bd78462 # load x3 with 32 MSBs 0x000000000bd78462
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000bd78462
sw x3, 0(x2) # store x3 (0x0bd78462) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000bd78462 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fmadd.d f10, f19, f16, f5, dyn # perform operation
fmadd.d f10, f19, f16, f5, rdn # perform operation
fmadd.d f10, f19, f16, f5, rmm # perform operation
fmadd.d f10, f19, f16, f5, rne # perform operation
fmadd.d f10, f19, f16, f5, rtz # perform operation
fmadd.d f10, f19, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f19, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff8000000000000)
li x15, 0x12b85511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0xf7a7f494 # load x3 with 32 MSBs 0x00000000f7a7f494
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7a7f494
sw x3, 0(x2) # store x3 (0xf7a7f494) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f7a7f494 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fmadd.d f15, f18, f26, f12, dyn # perform operation
fmadd.d f15, f18, f26, f12, rdn # perform operation
fmadd.d f15, f18, f26, f12, rmm # perform operation
fmadd.d f15, f18, f26, f12, rne # perform operation
fmadd.d f15, f18, f26, f12, rtz # perform operation
fmadd.d f15, f18, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f18, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x4000000000000000)
li x18, 0x46bd2bc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0xaf74e6da # load x3 with 32 MSBs 0x00000000af74e6da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af74e6da
sw x3, 0(x2) # store x3 (0xaf74e6da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000af74e6da from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fmadd.d f18, f21, f10, f3, dyn # perform operation
fmadd.d f18, f21, f10, f3, rdn # perform operation
fmadd.d f18, f21, f10, f3, rmm # perform operation
fmadd.d f18, f21, f10, f3, rne # perform operation
fmadd.d f18, f21, f10, f3, rtz # perform operation
fmadd.d f18, f21, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f21, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xc000000000000000)
li x22, 0x99684788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x279cd6f4 # load x3 with 32 MSBs 0x00000000279cd6f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000279cd6f4
sw x3, 0(x2) # store x3 (0x279cd6f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000279cd6f4 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
fmadd.d f22, f31, f23, f12, dyn # perform operation
fmadd.d f22, f31, f23, f12, rdn # perform operation
fmadd.d f22, f31, f23, f12, rmm # perform operation
fmadd.d f22, f31, f23, f12, rne # perform operation
fmadd.d f22, f31, f23, f12, rtz # perform operation
fmadd.d f22, f31, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f31, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f31, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f31, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f31, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f31, f23, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x10000000000000)
li x16, 0xc9bcf8c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x1ac88d25 # load x3 with 32 MSBs 0x000000001ac88d25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ac88d25
sw x3, 0(x2) # store x3 (0x1ac88d25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000001ac88d25 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fmadd.d f16, f1, f3, f31, dyn # perform operation
fmadd.d f16, f1, f3, f31, rdn # perform operation
fmadd.d f16, f1, f3, f31, rmm # perform operation
fmadd.d f16, f1, f3, f31, rne # perform operation
fmadd.d f16, f1, f3, f31, rtz # perform operation
fmadd.d f16, f1, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f1, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f1, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f1, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f1, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f1, f3, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8010000000000000)
li x14, 0xe2eb17b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x4cbd0938 # load x3 with 32 MSBs 0x000000004cbd0938
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004cbd0938
sw x3, 0(x2) # store x3 (0x4cbd0938) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004cbd0938 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fmadd.d f14, f9, f29, f5, dyn # perform operation
fmadd.d f14, f9, f29, f5, rdn # perform operation
fmadd.d f14, f9, f29, f5, rmm # perform operation
fmadd.d f14, f9, f29, f5, rne # perform operation
fmadd.d f14, f9, f29, f5, rtz # perform operation
fmadd.d f14, f9, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f9, f29, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fefffffffffffff)
li x11, 0xe5a8fd8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0xc9851996 # load x3 with 32 MSBs 0x00000000c9851996
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9851996
sw x3, 0(x2) # store x3 (0xc9851996) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c9851996 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fmadd.d f11, f16, f28, f8, dyn # perform operation
fmadd.d f11, f16, f28, f8, rdn # perform operation
fmadd.d f11, f16, f28, f8, rmm # perform operation
fmadd.d f11, f16, f28, f8, rne # perform operation
fmadd.d f11, f16, f28, f8, rtz # perform operation
fmadd.d f11, f16, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f16, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xffefffffffffffff)
li x14, 0x9c9a0c19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x47eab4e1 # load x3 with 32 MSBs 0x0000000047eab4e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047eab4e1
sw x3, 0(x2) # store x3 (0x47eab4e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000047eab4e1 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fmadd.d f14, f1, f12, f7, dyn # perform operation
fmadd.d f14, f1, f12, f7, rdn # perform operation
fmadd.d f14, f1, f12, f7, rmm # perform operation
fmadd.d f14, f1, f12, f7, rne # perform operation
fmadd.d f14, f1, f12, f7, rtz # perform operation
fmadd.d f14, f1, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f14, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f14, f1, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfffffffffffff)
li x6, 0x603b0b9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x944f1d56 # load x3 with 32 MSBs 0x00000000944f1d56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000944f1d56
sw x3, 0(x2) # store x3 (0x944f1d56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000944f1d56 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fmadd.d f6, f26, f20, f9, dyn # perform operation
fmadd.d f6, f26, f20, f9, rdn # perform operation
fmadd.d f6, f26, f20, f9, rmm # perform operation
fmadd.d f6, f26, f20, f9, rne # perform operation
fmadd.d f6, f26, f20, f9, rtz # perform operation
fmadd.d f6, f26, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f26, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f26, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f26, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f26, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f26, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x800fffffffffffff)
li x4, 0x8462c805 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x8a98682c # load x3 with 32 MSBs 0x000000008a98682c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a98682c
sw x3, 0(x2) # store x3 (0x8a98682c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008a98682c from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fmadd.d f4, f28, f6, f27, dyn # perform operation
fmadd.d f4, f28, f6, f27, rdn # perform operation
fmadd.d f4, f28, f6, f27, rmm # perform operation
fmadd.d f4, f28, f6, f27, rne # perform operation
fmadd.d f4, f28, f6, f27, rtz # perform operation
fmadd.d f4, f28, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f28, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000)
li x13, 0x9ec00354 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x37571a54 # load x3 with 32 MSBs 0x0000000037571a54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037571a54
sw x3, 0(x2) # store x3 (0x37571a54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000037571a54 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fmadd.d f13, f6, f23, f22, dyn # perform operation
fmadd.d f13, f6, f23, f22, rdn # perform operation
fmadd.d f13, f6, f23, f22, rmm # perform operation
fmadd.d f13, f6, f23, f22, rne # perform operation
fmadd.d f13, f6, f23, f22, rtz # perform operation
fmadd.d f13, f6, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f6, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f6, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f6, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f6, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f6, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8008000000000000)
li x10, 0x34a7a8a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x9e22dc07 # load x3 with 32 MSBs 0x000000009e22dc07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e22dc07
sw x3, 0(x2) # store x3 (0x9e22dc07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009e22dc07 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fmadd.d f10, f31, f7, f3, dyn # perform operation
fmadd.d f10, f31, f7, f3, rdn # perform operation
fmadd.d f10, f31, f7, f3, rmm # perform operation
fmadd.d f10, f31, f7, f3, rne # perform operation
fmadd.d f10, f31, f7, f3, rtz # perform operation
fmadd.d f10, f31, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f31, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x1)
li x28, 0x210da54d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0x622e346a # load x3 with 32 MSBs 0x00000000622e346a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000622e346a
sw x3, 0(x2) # store x3 (0x622e346a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000622e346a from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fmadd.d f28, f30, f1, f19, dyn # perform operation
fmadd.d f28, f30, f1, f19, rdn # perform operation
fmadd.d f28, f30, f1, f19, rmm # perform operation
fmadd.d f28, f30, f1, f19, rne # perform operation
fmadd.d f28, f30, f1, f19, rtz # perform operation
fmadd.d f28, f30, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f30, f1, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000001)
li x15, 0xd6213806 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x15c96e93 # load x3 with 32 MSBs 0x0000000015c96e93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015c96e93
sw x3, 0(x2) # store x3 (0x15c96e93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000015c96e93 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fmadd.d f15, f8, f17, f20, dyn # perform operation
fmadd.d f15, f8, f17, f20, rdn # perform operation
fmadd.d f15, f8, f17, f20, rmm # perform operation
fmadd.d f15, f8, f17, f20, rne # perform operation
fmadd.d f15, f8, f17, f20, rtz # perform operation
fmadd.d f15, f8, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f8, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000000)
li x16, 0x5adcd919 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0x2bc4340b # load x3 with 32 MSBs 0x000000002bc4340b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bc4340b
sw x3, 0(x2) # store x3 (0x2bc4340b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002bc4340b from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fmadd.d f16, f11, f4, f19, dyn # perform operation
fmadd.d f16, f11, f4, f19, rdn # perform operation
fmadd.d f16, f11, f4, f19, rmm # perform operation
fmadd.d f16, f11, f4, f19, rne # perform operation
fmadd.d f16, f11, f4, f19, rtz # perform operation
fmadd.d f16, f11, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f11, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f11, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfff0000000000000)
li x10, 0x239130fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0xef2b9494 # load x3 with 32 MSBs 0x00000000ef2b9494
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef2b9494
sw x3, 0(x2) # store x3 (0xef2b9494) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ef2b9494 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fmadd.d f10, f19, f9, f27, dyn # perform operation
fmadd.d f10, f19, f9, f27, rdn # perform operation
fmadd.d f10, f19, f9, f27, rmm # perform operation
fmadd.d f10, f19, f9, f27, rne # perform operation
fmadd.d f10, f19, f9, f27, rtz # perform operation
fmadd.d f10, f19, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f19, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f19, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f19, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f19, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f19, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff8000000000000)
li x30, 0x83955786 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0xd8576433 # load x3 with 32 MSBs 0x00000000d8576433
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8576433
sw x3, 0(x2) # store x3 (0xd8576433) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d8576433 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fmadd.d f30, f17, f31, f10, dyn # perform operation
fmadd.d f30, f17, f31, f10, rdn # perform operation
fmadd.d f30, f17, f31, f10, rmm # perform operation
fmadd.d f30, f17, f31, f10, rne # perform operation
fmadd.d f30, f17, f31, f10, rtz # perform operation
fmadd.d f30, f17, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f17, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f17, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f17, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f17, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f17, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fffffffffffffff)
li x27, 0xaf8b33ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0xcca1cf96 # load x3 with 32 MSBs 0x00000000cca1cf96
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cca1cf96
sw x3, 0(x2) # store x3 (0xcca1cf96) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000cca1cf96 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
fmadd.d f27, f10, f14, f30, dyn # perform operation
fmadd.d f27, f10, f14, f30, rdn # perform operation
fmadd.d f27, f10, f14, f30, rmm # perform operation
fmadd.d f27, f10, f14, f30, rne # perform operation
fmadd.d f27, f10, f14, f30, rtz # perform operation
fmadd.d f27, f10, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f10, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f10, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000001)
li x2, 0x99947a88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0xe1af4ec1 # load x3 with 32 MSBs 0x00000000e1af4ec1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1af4ec1
sw x3, 0(x2) # store x3 (0xe1af4ec1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e1af4ec1 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fmadd.d f2, f5, f11, f18, dyn # perform operation
fmadd.d f2, f5, f11, f18, rdn # perform operation
fmadd.d f2, f5, f11, f18, rmm # perform operation
fmadd.d f2, f5, f11, f18, rne # perform operation
fmadd.d f2, f5, f11, f18, rtz # perform operation
fmadd.d f2, f5, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f5, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff7ffffffffffff)
li x11, 0x1a65385d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0xb9313961 # load x3 with 32 MSBs 0x00000000b9313961
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9313961
sw x3, 0(x2) # store x3 (0xb9313961) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b9313961 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fmadd.d f11, f14, f27, f31, dyn # perform operation
fmadd.d f11, f14, f27, f31, rdn # perform operation
fmadd.d f11, f14, f27, f31, rmm # perform operation
fmadd.d f11, f14, f27, f31, rne # perform operation
fmadd.d f11, f14, f27, f31, rtz # perform operation
fmadd.d f11, f14, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f14, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x5a392534a57711ad)
li x20, 0x07d242cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x560c6d52 # load x3 with 32 MSBs 0x00000000560c6d52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000560c6d52
sw x3, 0(x2) # store x3 (0x560c6d52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000560c6d52 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fmadd.d f20, f14, f18, f12, dyn # perform operation
fmadd.d f20, f14, f18, f12, rdn # perform operation
fmadd.d f20, f14, f18, f12, rmm # perform operation
fmadd.d f20, f14, f18, f12, rne # perform operation
fmadd.d f20, f14, f18, f12, rtz # perform operation
fmadd.d f20, f14, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f14, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xa6e895993737426c)
li x12, 0x2993eb13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x074019e9 # load x3 with 32 MSBs 0x00000000074019e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000074019e9
sw x3, 0(x2) # store x3 (0x074019e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000074019e9 from memory into f13
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
fmadd.d f12, f4, f13, f11, dyn # perform operation
fmadd.d f12, f4, f13, f11, rdn # perform operation
fmadd.d f12, f4, f13, f11, rmm # perform operation
fmadd.d f12, f4, f13, f11, rne # perform operation
fmadd.d f12, f4, f13, f11, rtz # perform operation
fmadd.d f12, f4, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f4, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f4, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f4, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f4, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f4, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x0)
li x19, 0xdc31c44f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0xbc290567 # load x3 with 32 MSBs 0x00000000bc290567
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc290567
sw x3, 0(x2) # store x3 (0xbc290567) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000bc290567 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fmadd.d f19, f29, f20, f12, dyn # perform operation
fmadd.d f19, f29, f20, f12, rdn # perform operation
fmadd.d f19, f29, f20, f12, rmm # perform operation
fmadd.d f19, f29, f20, f12, rne # perform operation
fmadd.d f19, f29, f20, f12, rtz # perform operation
fmadd.d f19, f29, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f29, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000000)
li x31, 0x85685fb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0xd1f2b1bb # load x3 with 32 MSBs 0x00000000d1f2b1bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1f2b1bb
sw x3, 0(x2) # store x3 (0xd1f2b1bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d1f2b1bb from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fmadd.d f31, f7, f18, f29, dyn # perform operation
fmadd.d f31, f7, f18, f29, rdn # perform operation
fmadd.d f31, f7, f18, f29, rmm # perform operation
fmadd.d f31, f7, f18, f29, rne # perform operation
fmadd.d f31, f7, f18, f29, rtz # perform operation
fmadd.d f31, f7, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f7, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f7, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f7, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f7, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f7, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff0000000000000)
li x16, 0x460d0639 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0xc9e68517 # load x3 with 32 MSBs 0x00000000c9e68517
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9e68517
sw x3, 0(x2) # store x3 (0xc9e68517) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c9e68517 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fmadd.d f16, f11, f5, f14, dyn # perform operation
fmadd.d f16, f11, f5, f14, rdn # perform operation
fmadd.d f16, f11, f5, f14, rmm # perform operation
fmadd.d f16, f11, f5, f14, rne # perform operation
fmadd.d f16, f11, f5, f14, rtz # perform operation
fmadd.d f16, f11, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f11, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff0000000000000)
li x31, 0x0ca1a274 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x9626c2b0 # load x3 with 32 MSBs 0x000000009626c2b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009626c2b0
sw x3, 0(x2) # store x3 (0x9626c2b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009626c2b0 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
fmadd.d f31, f29, f1, f26, dyn # perform operation
fmadd.d f31, f29, f1, f26, rdn # perform operation
fmadd.d f31, f29, f1, f26, rmm # perform operation
fmadd.d f31, f29, f1, f26, rne # perform operation
fmadd.d f31, f29, f1, f26, rtz # perform operation
fmadd.d f31, f29, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f29, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f29, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f29, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f29, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f29, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff8000000000000)
li x11, 0x9b151325 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0x5b7ea9d7 # load x3 with 32 MSBs 0x000000005b7ea9d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b7ea9d7
sw x3, 0(x2) # store x3 (0x5b7ea9d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005b7ea9d7 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
fmadd.d f11, f25, f9, f27, dyn # perform operation
fmadd.d f11, f25, f9, f27, rdn # perform operation
fmadd.d f11, f25, f9, f27, rmm # perform operation
fmadd.d f11, f25, f9, f27, rne # perform operation
fmadd.d f11, f25, f9, f27, rtz # perform operation
fmadd.d f11, f25, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f25, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f25, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f25, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f25, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f25, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff8000000000000)
li x16, 0x41d2ad4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x80e0fbf8 # load x3 with 32 MSBs 0x0000000080e0fbf8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080e0fbf8
sw x3, 0(x2) # store x3 (0x80e0fbf8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000080e0fbf8 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
fmadd.d f16, f27, f9, f25, dyn # perform operation
fmadd.d f16, f27, f9, f25, rdn # perform operation
fmadd.d f16, f27, f9, f25, rmm # perform operation
fmadd.d f16, f27, f9, f25, rne # perform operation
fmadd.d f16, f27, f9, f25, rtz # perform operation
fmadd.d f16, f27, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f27, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x4000000000000000)
li x25, 0xb5e0ec68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0xd465da98 # load x3 with 32 MSBs 0x00000000d465da98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d465da98
sw x3, 0(x2) # store x3 (0xd465da98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d465da98 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fmadd.d f25, f13, f30, f15, dyn # perform operation
fmadd.d f25, f13, f30, f15, rdn # perform operation
fmadd.d f25, f13, f30, f15, rmm # perform operation
fmadd.d f25, f13, f30, f15, rne # perform operation
fmadd.d f25, f13, f30, f15, rtz # perform operation
fmadd.d f25, f13, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f13, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xc000000000000000)
li x26, 0x91db8e32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x1821fde8 # load x3 with 32 MSBs 0x000000001821fde8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001821fde8
sw x3, 0(x2) # store x3 (0x1821fde8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001821fde8 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fmadd.d f26, f19, f15, f9, dyn # perform operation
fmadd.d f26, f19, f15, f9, rdn # perform operation
fmadd.d f26, f19, f15, f9, rmm # perform operation
fmadd.d f26, f19, f15, f9, rne # perform operation
fmadd.d f26, f19, f15, f9, rtz # perform operation
fmadd.d f26, f19, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f19, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f19, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x10000000000000)
li x31, 0xd96cbd44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0xbce16693 # load x3 with 32 MSBs 0x00000000bce16693
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bce16693
sw x3, 0(x2) # store x3 (0xbce16693) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000bce16693 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fmadd.d f31, f13, f19, f17, dyn # perform operation
fmadd.d f31, f13, f19, f17, rdn # perform operation
fmadd.d f31, f13, f19, f17, rmm # perform operation
fmadd.d f31, f13, f19, f17, rne # perform operation
fmadd.d f31, f13, f19, f17, rtz # perform operation
fmadd.d f31, f13, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f13, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8010000000000000)
li x26, 0xa17519d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0x67542657 # load x3 with 32 MSBs 0x0000000067542657
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067542657
sw x3, 0(x2) # store x3 (0x67542657) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000067542657 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
fmadd.d f26, f16, f14, f17, dyn # perform operation
fmadd.d f26, f16, f14, f17, rdn # perform operation
fmadd.d f26, f16, f14, f17, rmm # perform operation
fmadd.d f26, f16, f14, f17, rne # perform operation
fmadd.d f26, f16, f14, f17, rtz # perform operation
fmadd.d f26, f16, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f16, f14, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fefffffffffffff)
li x3, 0x817b5242 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0xb01b334b # load x3 with 32 MSBs 0x00000000b01b334b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b01b334b
sw x3, 0(x2) # store x3 (0xb01b334b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b01b334b from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fmadd.d f3, f11, f31, f15, dyn # perform operation
fmadd.d f3, f11, f31, f15, rdn # perform operation
fmadd.d f3, f11, f31, f15, rmm # perform operation
fmadd.d f3, f11, f31, f15, rne # perform operation
fmadd.d f3, f11, f31, f15, rtz # perform operation
fmadd.d f3, f11, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f11, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f11, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f11, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f11, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f11, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xffefffffffffffff)
li x19, 0xa76e7de2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0xa1351191 # load x3 with 32 MSBs 0x00000000a1351191
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1351191
sw x3, 0(x2) # store x3 (0xa1351191) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000a1351191 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fmadd.d f19, f13, f22, f6, dyn # perform operation
fmadd.d f19, f13, f22, f6, rdn # perform operation
fmadd.d f19, f13, f22, f6, rmm # perform operation
fmadd.d f19, f13, f22, f6, rne # perform operation
fmadd.d f19, f13, f22, f6, rtz # perform operation
fmadd.d f19, f13, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f13, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f13, f22, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfffffffffffff)
li x18, 0x9a9dfdfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x011a45e7 # load x3 with 32 MSBs 0x00000000011a45e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000011a45e7
sw x3, 0(x2) # store x3 (0x011a45e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000011a45e7 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
fmadd.d f18, f21, f13, f10, dyn # perform operation
fmadd.d f18, f21, f13, f10, rdn # perform operation
fmadd.d f18, f21, f13, f10, rmm # perform operation
fmadd.d f18, f21, f13, f10, rne # perform operation
fmadd.d f18, f21, f13, f10, rtz # perform operation
fmadd.d f18, f21, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f21, f13, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x800fffffffffffff)
li x16, 0x97fd9cf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0xd0291075 # load x3 with 32 MSBs 0x00000000d0291075
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0291075
sw x3, 0(x2) # store x3 (0xd0291075) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d0291075 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fmadd.d f16, f4, f18, f13, dyn # perform operation
fmadd.d f16, f4, f18, f13, rdn # perform operation
fmadd.d f16, f4, f18, f13, rmm # perform operation
fmadd.d f16, f4, f18, f13, rne # perform operation
fmadd.d f16, f4, f18, f13, rtz # perform operation
fmadd.d f16, f4, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f4, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f4, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f4, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f4, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f4, f18, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000)
li x11, 0x371d47da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x64986a0a # load x3 with 32 MSBs 0x0000000064986a0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064986a0a
sw x3, 0(x2) # store x3 (0x64986a0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000064986a0a from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fmadd.d f11, f29, f31, f3, dyn # perform operation
fmadd.d f11, f29, f31, f3, rdn # perform operation
fmadd.d f11, f29, f31, f3, rmm # perform operation
fmadd.d f11, f29, f31, f3, rne # perform operation
fmadd.d f11, f29, f31, f3, rtz # perform operation
fmadd.d f11, f29, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f11, f29, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f11, f29, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f11, f29, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f11, f29, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f11, f29, f31, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8008000000000000)
li x9, 0x04a44e40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0x51834d30 # load x3 with 32 MSBs 0x0000000051834d30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051834d30
sw x3, 0(x2) # store x3 (0x51834d30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000051834d30 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
fmadd.d f9, f30, f23, f13, dyn # perform operation
fmadd.d f9, f30, f23, f13, rdn # perform operation
fmadd.d f9, f30, f23, f13, rmm # perform operation
fmadd.d f9, f30, f23, f13, rne # perform operation
fmadd.d f9, f30, f23, f13, rtz # perform operation
fmadd.d f9, f30, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f30, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x1)
li x27, 0x4fc719d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x7640ba8e # load x3 with 32 MSBs 0x000000007640ba8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007640ba8e
sw x3, 0(x2) # store x3 (0x7640ba8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007640ba8e from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fmadd.d f27, f23, f18, f20, dyn # perform operation
fmadd.d f27, f23, f18, f20, rdn # perform operation
fmadd.d f27, f23, f18, f20, rmm # perform operation
fmadd.d f27, f23, f18, f20, rne # perform operation
fmadd.d f27, f23, f18, f20, rtz # perform operation
fmadd.d f27, f23, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f23, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f23, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000001)
li x27, 0x9e3a64f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x440e5112 # load x3 with 32 MSBs 0x00000000440e5112
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000440e5112
sw x3, 0(x2) # store x3 (0x440e5112) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000440e5112 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fmadd.d f27, f12, f20, f13, dyn # perform operation
fmadd.d f27, f12, f20, f13, rdn # perform operation
fmadd.d f27, f12, f20, f13, rmm # perform operation
fmadd.d f27, f12, f20, f13, rne # perform operation
fmadd.d f27, f12, f20, f13, rtz # perform operation
fmadd.d f27, f12, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f12, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f12, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f12, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f12, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f12, f20, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000000)
li x30, 0x9a7c70f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x9544ed4f # load x3 with 32 MSBs 0x000000009544ed4f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009544ed4f
sw x3, 0(x2) # store x3 (0x9544ed4f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009544ed4f from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fmadd.d f30, f1, f2, f3, dyn # perform operation
fmadd.d f30, f1, f2, f3, rdn # perform operation
fmadd.d f30, f1, f2, f3, rmm # perform operation
fmadd.d f30, f1, f2, f3, rne # perform operation
fmadd.d f30, f1, f2, f3, rtz # perform operation
fmadd.d f30, f1, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f1, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfff0000000000000)
li x28, 0x1ac9cc42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0xdd83bddf # load x3 with 32 MSBs 0x00000000dd83bddf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd83bddf
sw x3, 0(x2) # store x3 (0xdd83bddf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000dd83bddf from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fmadd.d f28, f20, f26, f15, dyn # perform operation
fmadd.d f28, f20, f26, f15, rdn # perform operation
fmadd.d f28, f20, f26, f15, rmm # perform operation
fmadd.d f28, f20, f26, f15, rne # perform operation
fmadd.d f28, f20, f26, f15, rtz # perform operation
fmadd.d f28, f20, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f20, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff8000000000000)
li x22, 0x0e5d3eb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0xa55bfdad # load x3 with 32 MSBs 0x00000000a55bfdad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a55bfdad
sw x3, 0(x2) # store x3 (0xa55bfdad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a55bfdad from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fmadd.d f22, f3, f13, f2, dyn # perform operation
fmadd.d f22, f3, f13, f2, rdn # perform operation
fmadd.d f22, f3, f13, f2, rmm # perform operation
fmadd.d f22, f3, f13, f2, rne # perform operation
fmadd.d f22, f3, f13, f2, rtz # perform operation
fmadd.d f22, f3, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f3, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f3, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fffffffffffffff)
li x8, 0xbdde079e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0x3c468a75 # load x3 with 32 MSBs 0x000000003c468a75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c468a75
sw x3, 0(x2) # store x3 (0x3c468a75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003c468a75 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fmadd.d f8, f25, f9, f7, dyn # perform operation
fmadd.d f8, f25, f9, f7, rdn # perform operation
fmadd.d f8, f25, f9, f7, rmm # perform operation
fmadd.d f8, f25, f9, f7, rne # perform operation
fmadd.d f8, f25, f9, f7, rtz # perform operation
fmadd.d f8, f25, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f25, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000001)
li x20, 0x2929557f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x20a08264 # load x3 with 32 MSBs 0x0000000020a08264
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020a08264
sw x3, 0(x2) # store x3 (0x20a08264) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000020a08264 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fmadd.d f20, f4, f19, f17, dyn # perform operation
fmadd.d f20, f4, f19, f17, rdn # perform operation
fmadd.d f20, f4, f19, f17, rmm # perform operation
fmadd.d f20, f4, f19, f17, rne # perform operation
fmadd.d f20, f4, f19, f17, rtz # perform operation
fmadd.d f20, f4, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f4, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f4, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f4, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f4, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f4, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff7ffffffffffff)
li x12, 0xa14b140d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0xd4b68db7 # load x3 with 32 MSBs 0x00000000d4b68db7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4b68db7
sw x3, 0(x2) # store x3 (0xd4b68db7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d4b68db7 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fmadd.d f12, f29, f24, f25, dyn # perform operation
fmadd.d f12, f29, f24, f25, rdn # perform operation
fmadd.d f12, f29, f24, f25, rmm # perform operation
fmadd.d f12, f29, f24, f25, rne # perform operation
fmadd.d f12, f29, f24, f25, rtz # perform operation
fmadd.d f12, f29, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f29, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x5a392534a57711ad)
li x16, 0x582dc93d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xcb95c9e2 # load x3 with 32 MSBs 0x00000000cb95c9e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb95c9e2
sw x3, 0(x2) # store x3 (0xcb95c9e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000cb95c9e2 from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fmadd.d f16, f14, f6, f4, dyn # perform operation
fmadd.d f16, f14, f6, f4, rdn # perform operation
fmadd.d f16, f14, f6, f4, rmm # perform operation
fmadd.d f16, f14, f6, f4, rne # perform operation
fmadd.d f16, f14, f6, f4, rtz # perform operation
fmadd.d f16, f14, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f14, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xa6e895993737426c)
li x19, 0xbba43a65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0xf62de174 # load x3 with 32 MSBs 0x00000000f62de174
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f62de174
sw x3, 0(x2) # store x3 (0xf62de174) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f62de174 from memory into f9
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fmadd.d f19, f30, f9, f29, dyn # perform operation
fmadd.d f19, f30, f9, f29, rdn # perform operation
fmadd.d f19, f30, f9, f29, rmm # perform operation
fmadd.d f19, f30, f9, f29, rne # perform operation
fmadd.d f19, f30, f9, f29, rtz # perform operation
fmadd.d f19, f30, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f30, f9, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x0)
li x22, 0x5814d0d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0xa4c2821a # load x3 with 32 MSBs 0x00000000a4c2821a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4c2821a
sw x3, 0(x2) # store x3 (0xa4c2821a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a4c2821a from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
fmadd.d f22, f8, f31, f9, dyn # perform operation
fmadd.d f22, f8, f31, f9, rdn # perform operation
fmadd.d f22, f8, f31, f9, rmm # perform operation
fmadd.d f22, f8, f31, f9, rne # perform operation
fmadd.d f22, f8, f31, f9, rtz # perform operation
fmadd.d f22, f8, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f8, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f8, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000000)
li x9, 0x02dd331e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x4176a082 # load x3 with 32 MSBs 0x000000004176a082
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004176a082
sw x3, 0(x2) # store x3 (0x4176a082) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004176a082 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fmadd.d f9, f15, f11, f20, dyn # perform operation
fmadd.d f9, f15, f11, f20, rdn # perform operation
fmadd.d f9, f15, f11, f20, rmm # perform operation
fmadd.d f9, f15, f11, f20, rne # perform operation
fmadd.d f9, f15, f11, f20, rtz # perform operation
fmadd.d f9, f15, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f15, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f15, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff0000000000000)
li x23, 0x267543c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xdb27505b # load x3 with 32 MSBs 0x00000000db27505b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db27505b
sw x3, 0(x2) # store x3 (0xdb27505b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000db27505b from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fmadd.d f23, f11, f8, f9, dyn # perform operation
fmadd.d f23, f11, f8, f9, rdn # perform operation
fmadd.d f23, f11, f8, f9, rmm # perform operation
fmadd.d f23, f11, f8, f9, rne # perform operation
fmadd.d f23, f11, f8, f9, rtz # perform operation
fmadd.d f23, f11, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f11, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f11, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f11, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f11, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f11, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff0000000000000)
li x20, 0xde35028f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0xd9906447 # load x3 with 32 MSBs 0x00000000d9906447
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d9906447
sw x3, 0(x2) # store x3 (0xd9906447) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d9906447 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fmadd.d f20, f7, f4, f28, dyn # perform operation
fmadd.d f20, f7, f4, f28, rdn # perform operation
fmadd.d f20, f7, f4, f28, rmm # perform operation
fmadd.d f20, f7, f4, f28, rne # perform operation
fmadd.d f20, f7, f4, f28, rtz # perform operation
fmadd.d f20, f7, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f7, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f7, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f7, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f7, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f7, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff8000000000000)
li x8, 0xa7c1114d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0x222f5f20 # load x3 with 32 MSBs 0x00000000222f5f20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000222f5f20
sw x3, 0(x2) # store x3 (0x222f5f20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000222f5f20 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
fmadd.d f8, f5, f2, f31, dyn # perform operation
fmadd.d f8, f5, f2, f31, rdn # perform operation
fmadd.d f8, f5, f2, f31, rmm # perform operation
fmadd.d f8, f5, f2, f31, rne # perform operation
fmadd.d f8, f5, f2, f31, rtz # perform operation
fmadd.d f8, f5, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f5, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f5, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff8000000000000)
li x18, 0x17710767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x7a1f5f2d # load x3 with 32 MSBs 0x000000007a1f5f2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a1f5f2d
sw x3, 0(x2) # store x3 (0x7a1f5f2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007a1f5f2d from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fmadd.d f18, f11, f24, f9, dyn # perform operation
fmadd.d f18, f11, f24, f9, rdn # perform operation
fmadd.d f18, f11, f24, f9, rmm # perform operation
fmadd.d f18, f11, f24, f9, rne # perform operation
fmadd.d f18, f11, f24, f9, rtz # perform operation
fmadd.d f18, f11, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f11, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x4000000000000000)
li x20, 0x8567f0a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x66fe2381 # load x3 with 32 MSBs 0x0000000066fe2381
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066fe2381
sw x3, 0(x2) # store x3 (0x66fe2381) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000066fe2381 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fmadd.d f20, f9, f13, f11, dyn # perform operation
fmadd.d f20, f9, f13, f11, rdn # perform operation
fmadd.d f20, f9, f13, f11, rmm # perform operation
fmadd.d f20, f9, f13, f11, rne # perform operation
fmadd.d f20, f9, f13, f11, rtz # perform operation
fmadd.d f20, f9, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f9, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xc000000000000000)
li x31, 0x5ca8f480 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0x5fe248e3 # load x3 with 32 MSBs 0x000000005fe248e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fe248e3
sw x3, 0(x2) # store x3 (0x5fe248e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000005fe248e3 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fmadd.d f31, f23, f28, f8, dyn # perform operation
fmadd.d f31, f23, f28, f8, rdn # perform operation
fmadd.d f31, f23, f28, f8, rmm # perform operation
fmadd.d f31, f23, f28, f8, rne # perform operation
fmadd.d f31, f23, f28, f8, rtz # perform operation
fmadd.d f31, f23, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f23, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f23, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x10000000000000)
li x30, 0xa7a7dff5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x0eec1dec # load x3 with 32 MSBs 0x000000000eec1dec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000eec1dec
sw x3, 0(x2) # store x3 (0x0eec1dec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000000eec1dec from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fmadd.d f30, f29, f28, f23, dyn # perform operation
fmadd.d f30, f29, f28, f23, rdn # perform operation
fmadd.d f30, f29, f28, f23, rmm # perform operation
fmadd.d f30, f29, f28, f23, rne # perform operation
fmadd.d f30, f29, f28, f23, rtz # perform operation
fmadd.d f30, f29, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f29, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8010000000000000)
li x12, 0x1e3f2142 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x810cdeaf # load x3 with 32 MSBs 0x00000000810cdeaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000810cdeaf
sw x3, 0(x2) # store x3 (0x810cdeaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000810cdeaf from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fmadd.d f12, f26, f27, f10, dyn # perform operation
fmadd.d f12, f26, f27, f10, rdn # perform operation
fmadd.d f12, f26, f27, f10, rmm # perform operation
fmadd.d f12, f26, f27, f10, rne # perform operation
fmadd.d f12, f26, f27, f10, rtz # perform operation
fmadd.d f12, f26, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f26, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fefffffffffffff)
li x23, 0x10f96ddf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x6099d5f7 # load x3 with 32 MSBs 0x000000006099d5f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006099d5f7
sw x3, 0(x2) # store x3 (0x6099d5f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000006099d5f7 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fmadd.d f23, f29, f11, f8, dyn # perform operation
fmadd.d f23, f29, f11, f8, rdn # perform operation
fmadd.d f23, f29, f11, f8, rmm # perform operation
fmadd.d f23, f29, f11, f8, rne # perform operation
fmadd.d f23, f29, f11, f8, rtz # perform operation
fmadd.d f23, f29, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f29, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f29, f11, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xffefffffffffffff)
li x13, 0x93815079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x6e161f23 # load x3 with 32 MSBs 0x000000006e161f23
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e161f23
sw x3, 0(x2) # store x3 (0x6e161f23) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006e161f23 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fmadd.d f13, f14, f24, f25, dyn # perform operation
fmadd.d f13, f14, f24, f25, rdn # perform operation
fmadd.d f13, f14, f24, f25, rmm # perform operation
fmadd.d f13, f14, f24, f25, rne # perform operation
fmadd.d f13, f14, f24, f25, rtz # perform operation
fmadd.d f13, f14, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f14, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfffffffffffff)
li x9, 0xd930ea0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0xa37ce38b # load x3 with 32 MSBs 0x00000000a37ce38b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a37ce38b
sw x3, 0(x2) # store x3 (0xa37ce38b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a37ce38b from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fmadd.d f9, f12, f24, f11, dyn # perform operation
fmadd.d f9, f12, f24, f11, rdn # perform operation
fmadd.d f9, f12, f24, f11, rmm # perform operation
fmadd.d f9, f12, f24, f11, rne # perform operation
fmadd.d f9, f12, f24, f11, rtz # perform operation
fmadd.d f9, f12, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f12, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x800fffffffffffff)
li x28, 0x42fe086c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x77e5ccd8 # load x3 with 32 MSBs 0x0000000077e5ccd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077e5ccd8
sw x3, 0(x2) # store x3 (0x77e5ccd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000077e5ccd8 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fmadd.d f28, f10, f31, f11, dyn # perform operation
fmadd.d f28, f10, f31, f11, rdn # perform operation
fmadd.d f28, f10, f31, f11, rmm # perform operation
fmadd.d f28, f10, f31, f11, rne # perform operation
fmadd.d f28, f10, f31, f11, rtz # perform operation
fmadd.d f28, f10, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f10, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f10, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000)
li x2, 0xf7d7ed08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x8b00ed4a # load x3 with 32 MSBs 0x000000008b00ed4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b00ed4a
sw x3, 0(x2) # store x3 (0x8b00ed4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008b00ed4a from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fmadd.d f2, f4, f22, f15, dyn # perform operation
fmadd.d f2, f4, f22, f15, rdn # perform operation
fmadd.d f2, f4, f22, f15, rmm # perform operation
fmadd.d f2, f4, f22, f15, rne # perform operation
fmadd.d f2, f4, f22, f15, rtz # perform operation
fmadd.d f2, f4, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f2, f4, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f2, f4, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f2, f4, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f2, f4, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f2, f4, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8008000000000000)
li x28, 0x6d3362ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x7f77647d # load x3 with 32 MSBs 0x000000007f77647d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f77647d
sw x3, 0(x2) # store x3 (0x7f77647d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000007f77647d from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fmadd.d f28, f14, f2, f22, dyn # perform operation
fmadd.d f28, f14, f2, f22, rdn # perform operation
fmadd.d f28, f14, f2, f22, rmm # perform operation
fmadd.d f28, f14, f2, f22, rne # perform operation
fmadd.d f28, f14, f2, f22, rtz # perform operation
fmadd.d f28, f14, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f14, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x1)
li x22, 0x67fccac0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xfb05b3c1 # load x3 with 32 MSBs 0x00000000fb05b3c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb05b3c1
sw x3, 0(x2) # store x3 (0xfb05b3c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fb05b3c1 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fmadd.d f22, f19, f10, f14, dyn # perform operation
fmadd.d f22, f19, f10, f14, rdn # perform operation
fmadd.d f22, f19, f10, f14, rmm # perform operation
fmadd.d f22, f19, f10, f14, rne # perform operation
fmadd.d f22, f19, f10, f14, rtz # perform operation
fmadd.d f22, f19, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f19, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f19, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f19, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f19, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f19, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000001)
li x22, 0xc551205f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x11eddbcb # load x3 with 32 MSBs 0x0000000011eddbcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011eddbcb
sw x3, 0(x2) # store x3 (0x11eddbcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000011eddbcb from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fmadd.d f22, f11, f8, f19, dyn # perform operation
fmadd.d f22, f11, f8, f19, rdn # perform operation
fmadd.d f22, f11, f8, f19, rmm # perform operation
fmadd.d f22, f11, f8, f19, rne # perform operation
fmadd.d f22, f11, f8, f19, rtz # perform operation
fmadd.d f22, f11, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f11, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f11, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000000)
li x4, 0xe263fc96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x396ba9ed # load x3 with 32 MSBs 0x00000000396ba9ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000396ba9ed
sw x3, 0(x2) # store x3 (0x396ba9ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000396ba9ed from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fmadd.d f4, f30, f28, f25, dyn # perform operation
fmadd.d f4, f30, f28, f25, rdn # perform operation
fmadd.d f4, f30, f28, f25, rmm # perform operation
fmadd.d f4, f30, f28, f25, rne # perform operation
fmadd.d f4, f30, f28, f25, rtz # perform operation
fmadd.d f4, f30, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f30, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfff0000000000000)
li x24, 0x35c07fd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x9826f657 # load x3 with 32 MSBs 0x000000009826f657
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009826f657
sw x3, 0(x2) # store x3 (0x9826f657) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009826f657 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
fmadd.d f24, f19, f4, f28, dyn # perform operation
fmadd.d f24, f19, f4, f28, rdn # perform operation
fmadd.d f24, f19, f4, f28, rmm # perform operation
fmadd.d f24, f19, f4, f28, rne # perform operation
fmadd.d f24, f19, f4, f28, rtz # perform operation
fmadd.d f24, f19, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f19, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff8000000000000)
li x1, 0x25f33f10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0xcfac45a6 # load x3 with 32 MSBs 0x00000000cfac45a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfac45a6
sw x3, 0(x2) # store x3 (0xcfac45a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000cfac45a6 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fmadd.d f1, f9, f31, f6, dyn # perform operation
fmadd.d f1, f9, f31, f6, rdn # perform operation
fmadd.d f1, f9, f31, f6, rmm # perform operation
fmadd.d f1, f9, f31, f6, rne # perform operation
fmadd.d f1, f9, f31, f6, rtz # perform operation
fmadd.d f1, f9, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f1, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f1, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f1, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f1, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f1, f9, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fffffffffffffff)
li x20, 0x0d66ed5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0x7991136e # load x3 with 32 MSBs 0x000000007991136e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007991136e
sw x3, 0(x2) # store x3 (0x7991136e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007991136e from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fmadd.d f20, f5, f11, f29, dyn # perform operation
fmadd.d f20, f5, f11, f29, rdn # perform operation
fmadd.d f20, f5, f11, f29, rmm # perform operation
fmadd.d f20, f5, f11, f29, rne # perform operation
fmadd.d f20, f5, f11, f29, rtz # perform operation
fmadd.d f20, f5, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f5, f11, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000001)
li x12, 0x4c771a46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0xf6cd4d5d # load x3 with 32 MSBs 0x00000000f6cd4d5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6cd4d5d
sw x3, 0(x2) # store x3 (0xf6cd4d5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f6cd4d5d from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
fmadd.d f12, f3, f26, f15, dyn # perform operation
fmadd.d f12, f3, f26, f15, rdn # perform operation
fmadd.d f12, f3, f26, f15, rmm # perform operation
fmadd.d f12, f3, f26, f15, rne # perform operation
fmadd.d f12, f3, f26, f15, rtz # perform operation
fmadd.d f12, f3, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f3, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff7ffffffffffff)
li x6, 0xa99b4fc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x1e00afaf # load x3 with 32 MSBs 0x000000001e00afaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e00afaf
sw x3, 0(x2) # store x3 (0x1e00afaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001e00afaf from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fmadd.d f6, f25, f27, f5, dyn # perform operation
fmadd.d f6, f25, f27, f5, rdn # perform operation
fmadd.d f6, f25, f27, f5, rmm # perform operation
fmadd.d f6, f25, f27, f5, rne # perform operation
fmadd.d f6, f25, f27, f5, rtz # perform operation
fmadd.d f6, f25, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f25, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x5a392534a57711ad)
li x12, 0x78266cd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x55d8b064 # load x3 with 32 MSBs 0x0000000055d8b064
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055d8b064
sw x3, 0(x2) # store x3 (0x55d8b064) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000055d8b064 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fmadd.d f12, f8, f17, f4, dyn # perform operation
fmadd.d f12, f8, f17, f4, rdn # perform operation
fmadd.d f12, f8, f17, f4, rmm # perform operation
fmadd.d f12, f8, f17, f4, rne # perform operation
fmadd.d f12, f8, f17, f4, rtz # perform operation
fmadd.d f12, f8, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f8, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f8, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xa6e895993737426c)
li x4, 0xbda4809b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
li x3, 0x38204014 # load x3 with 32 MSBs 0x0000000038204014
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038204014
sw x3, 0(x2) # store x3 (0x38204014) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000038204014 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fmadd.d f4, f22, f11, f20, dyn # perform operation
fmadd.d f4, f22, f11, f20, rdn # perform operation
fmadd.d f4, f22, f11, f20, rmm # perform operation
fmadd.d f4, f22, f11, f20, rne # perform operation
fmadd.d f4, f22, f11, f20, rtz # perform operation
fmadd.d f4, f22, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f22, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x0)
li x3, 0x8899d10f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0xcf336ef1 # load x3 with 32 MSBs 0x00000000cf336ef1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf336ef1
sw x3, 0(x2) # store x3 (0xcf336ef1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000cf336ef1 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fmadd.d f3, f5, f18, f7, dyn # perform operation
fmadd.d f3, f5, f18, f7, rdn # perform operation
fmadd.d f3, f5, f18, f7, rmm # perform operation
fmadd.d f3, f5, f18, f7, rne # perform operation
fmadd.d f3, f5, f18, f7, rtz # perform operation
fmadd.d f3, f5, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f5, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000000)
li x27, 0x7e057c43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x6893b903 # load x3 with 32 MSBs 0x000000006893b903
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006893b903
sw x3, 0(x2) # store x3 (0x6893b903) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006893b903 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fmadd.d f27, f15, f22, f4, dyn # perform operation
fmadd.d f27, f15, f22, f4, rdn # perform operation
fmadd.d f27, f15, f22, f4, rmm # perform operation
fmadd.d f27, f15, f22, f4, rne # perform operation
fmadd.d f27, f15, f22, f4, rtz # perform operation
fmadd.d f27, f15, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f15, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f15, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff0000000000000)
li x16, 0x16479a5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0xe04aa446 # load x3 with 32 MSBs 0x00000000e04aa446
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e04aa446
sw x3, 0(x2) # store x3 (0xe04aa446) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e04aa446 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fmadd.d f16, f30, f28, f21, dyn # perform operation
fmadd.d f16, f30, f28, f21, rdn # perform operation
fmadd.d f16, f30, f28, f21, rmm # perform operation
fmadd.d f16, f30, f28, f21, rne # perform operation
fmadd.d f16, f30, f28, f21, rtz # perform operation
fmadd.d f16, f30, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f16, f30, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f16, f30, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f16, f30, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f16, f30, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f16, f30, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff0000000000000)
li x23, 0xff83ab4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x7a0f7468 # load x3 with 32 MSBs 0x000000007a0f7468
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a0f7468
sw x3, 0(x2) # store x3 (0x7a0f7468) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007a0f7468 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fmadd.d f23, f20, f25, f19, dyn # perform operation
fmadd.d f23, f20, f25, f19, rdn # perform operation
fmadd.d f23, f20, f25, f19, rmm # perform operation
fmadd.d f23, f20, f25, f19, rne # perform operation
fmadd.d f23, f20, f25, f19, rtz # perform operation
fmadd.d f23, f20, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f20, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f20, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff8000000000000)
li x5, 0xa9f77c90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x15b1ef81 # load x3 with 32 MSBs 0x0000000015b1ef81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015b1ef81
sw x3, 0(x2) # store x3 (0x15b1ef81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000015b1ef81 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fmadd.d f5, f10, f7, f3, dyn # perform operation
fmadd.d f5, f10, f7, f3, rdn # perform operation
fmadd.d f5, f10, f7, f3, rmm # perform operation
fmadd.d f5, f10, f7, f3, rne # perform operation
fmadd.d f5, f10, f7, f3, rtz # perform operation
fmadd.d f5, f10, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f10, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff8000000000000)
li x25, 0xccdba1e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0xa7a6f488 # load x3 with 32 MSBs 0x00000000a7a6f488
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7a6f488
sw x3, 0(x2) # store x3 (0xa7a6f488) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a7a6f488 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fmadd.d f25, f23, f17, f8, dyn # perform operation
fmadd.d f25, f23, f17, f8, rdn # perform operation
fmadd.d f25, f23, f17, f8, rmm # perform operation
fmadd.d f25, f23, f17, f8, rne # perform operation
fmadd.d f25, f23, f17, f8, rtz # perform operation
fmadd.d f25, f23, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f23, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f23, f17, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x4000000000000000)
li x27, 0xb5266b37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x2e20bcd0 # load x3 with 32 MSBs 0x000000002e20bcd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e20bcd0
sw x3, 0(x2) # store x3 (0x2e20bcd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002e20bcd0 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fmadd.d f27, f24, f30, f25, dyn # perform operation
fmadd.d f27, f24, f30, f25, rdn # perform operation
fmadd.d f27, f24, f30, f25, rmm # perform operation
fmadd.d f27, f24, f30, f25, rne # perform operation
fmadd.d f27, f24, f30, f25, rtz # perform operation
fmadd.d f27, f24, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f24, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f24, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f24, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f24, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f24, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xc000000000000000)
li x12, 0xdbec73a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0x09e6da78 # load x3 with 32 MSBs 0x0000000009e6da78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009e6da78
sw x3, 0(x2) # store x3 (0x09e6da78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000009e6da78 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fmadd.d f12, f5, f27, f16, dyn # perform operation
fmadd.d f12, f5, f27, f16, rdn # perform operation
fmadd.d f12, f5, f27, f16, rmm # perform operation
fmadd.d f12, f5, f27, f16, rne # perform operation
fmadd.d f12, f5, f27, f16, rtz # perform operation
fmadd.d f12, f5, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f5, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f5, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x10000000000000)
li x22, 0x20035935 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0xe0e4b410 # load x3 with 32 MSBs 0x00000000e0e4b410
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0e4b410
sw x3, 0(x2) # store x3 (0xe0e4b410) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e0e4b410 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fmadd.d f22, f2, f6, f9, dyn # perform operation
fmadd.d f22, f2, f6, f9, rdn # perform operation
fmadd.d f22, f2, f6, f9, rmm # perform operation
fmadd.d f22, f2, f6, f9, rne # perform operation
fmadd.d f22, f2, f6, f9, rtz # perform operation
fmadd.d f22, f2, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f22, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f22, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f22, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f22, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f22, f2, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8010000000000000)
li x30, 0xc77a52e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0xa77c596e # load x3 with 32 MSBs 0x00000000a77c596e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a77c596e
sw x3, 0(x2) # store x3 (0xa77c596e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000a77c596e from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fmadd.d f30, f4, f22, f25, dyn # perform operation
fmadd.d f30, f4, f22, f25, rdn # perform operation
fmadd.d f30, f4, f22, f25, rmm # perform operation
fmadd.d f30, f4, f22, f25, rne # perform operation
fmadd.d f30, f4, f22, f25, rtz # perform operation
fmadd.d f30, f4, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f4, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f4, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f4, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f4, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f4, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fefffffffffffff)
li x18, 0x3bdf20bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0xf2aba9bb # load x3 with 32 MSBs 0x00000000f2aba9bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2aba9bb
sw x3, 0(x2) # store x3 (0xf2aba9bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f2aba9bb from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fmadd.d f18, f23, f7, f10, dyn # perform operation
fmadd.d f18, f23, f7, f10, rdn # perform operation
fmadd.d f18, f23, f7, f10, rmm # perform operation
fmadd.d f18, f23, f7, f10, rne # perform operation
fmadd.d f18, f23, f7, f10, rtz # perform operation
fmadd.d f18, f23, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f23, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xffefffffffffffff)
li x18, 0xc2ef2eab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x19cdb9ba # load x3 with 32 MSBs 0x0000000019cdb9ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019cdb9ba
sw x3, 0(x2) # store x3 (0x19cdb9ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000019cdb9ba from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fmadd.d f18, f15, f12, f20, dyn # perform operation
fmadd.d f18, f15, f12, f20, rdn # perform operation
fmadd.d f18, f15, f12, f20, rmm # perform operation
fmadd.d f18, f15, f12, f20, rne # perform operation
fmadd.d f18, f15, f12, f20, rtz # perform operation
fmadd.d f18, f15, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f18, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f18, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f18, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f18, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f18, f15, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfffffffffffff)
li x28, 0xb3f56d67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x7e964f87 # load x3 with 32 MSBs 0x000000007e964f87
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e964f87
sw x3, 0(x2) # store x3 (0x7e964f87) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007e964f87 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fmadd.d f28, f18, f31, f12, dyn # perform operation
fmadd.d f28, f18, f31, f12, rdn # perform operation
fmadd.d f28, f18, f31, f12, rmm # perform operation
fmadd.d f28, f18, f31, f12, rne # perform operation
fmadd.d f28, f18, f31, f12, rtz # perform operation
fmadd.d f28, f18, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f18, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f18, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f18, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f18, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f18, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x800fffffffffffff)
li x10, 0x14b39b57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0xa7dd4e66 # load x3 with 32 MSBs 0x00000000a7dd4e66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7dd4e66
sw x3, 0(x2) # store x3 (0xa7dd4e66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a7dd4e66 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fmadd.d f10, f26, f5, f24, dyn # perform operation
fmadd.d f10, f26, f5, f24, rdn # perform operation
fmadd.d f10, f26, f5, f24, rmm # perform operation
fmadd.d f10, f26, f5, f24, rne # perform operation
fmadd.d f10, f26, f5, f24, rtz # perform operation
fmadd.d f10, f26, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f10, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f10, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f10, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f10, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f10, f26, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000)
li x27, 0x5b95149d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xf594e861 # load x3 with 32 MSBs 0x00000000f594e861
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f594e861
sw x3, 0(x2) # store x3 (0xf594e861) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f594e861 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fmadd.d f27, f19, f6, f3, dyn # perform operation
fmadd.d f27, f19, f6, f3, rdn # perform operation
fmadd.d f27, f19, f6, f3, rmm # perform operation
fmadd.d f27, f19, f6, f3, rne # perform operation
fmadd.d f27, f19, f6, f3, rtz # perform operation
fmadd.d f27, f19, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f27, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f27, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f27, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f27, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f27, f19, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8008000000000000)
li x15, 0x3736e77f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x59e365f1 # load x3 with 32 MSBs 0x0000000059e365f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059e365f1
sw x3, 0(x2) # store x3 (0x59e365f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000059e365f1 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fmadd.d f15, f11, f7, f22, dyn # perform operation
fmadd.d f15, f11, f7, f22, rdn # perform operation
fmadd.d f15, f11, f7, f22, rmm # perform operation
fmadd.d f15, f11, f7, f22, rne # perform operation
fmadd.d f15, f11, f7, f22, rtz # perform operation
fmadd.d f15, f11, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f11, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x1)
li x4, 0x815e73a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0xe6517c25 # load x3 with 32 MSBs 0x00000000e6517c25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6517c25
sw x3, 0(x2) # store x3 (0xe6517c25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e6517c25 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fmadd.d f4, f29, f21, f14, dyn # perform operation
fmadd.d f4, f29, f21, f14, rdn # perform operation
fmadd.d f4, f29, f21, f14, rmm # perform operation
fmadd.d f4, f29, f21, f14, rne # perform operation
fmadd.d f4, f29, f21, f14, rtz # perform operation
fmadd.d f4, f29, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f4, f29, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f4, f29, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f4, f29, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f4, f29, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f4, f29, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000001)
li x3, 0x08acd565 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xc7ccb33e # load x3 with 32 MSBs 0x00000000c7ccb33e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7ccb33e
sw x3, 0(x2) # store x3 (0xc7ccb33e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c7ccb33e from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fmadd.d f3, f9, f20, f18, dyn # perform operation
fmadd.d f3, f9, f20, f18, rdn # perform operation
fmadd.d f3, f9, f20, f18, rmm # perform operation
fmadd.d f3, f9, f20, f18, rne # perform operation
fmadd.d f3, f9, f20, f18, rtz # perform operation
fmadd.d f3, f9, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f3, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f3, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f3, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f3, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f3, f9, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000000)
li x28, 0xcb7c2298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
li x3, 0x6c9fa8d4 # load x3 with 32 MSBs 0x000000006c9fa8d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c9fa8d4
sw x3, 0(x2) # store x3 (0x6c9fa8d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006c9fa8d4 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fmadd.d f28, f12, f18, f19, dyn # perform operation
fmadd.d f28, f12, f18, f19, rdn # perform operation
fmadd.d f28, f12, f18, f19, rmm # perform operation
fmadd.d f28, f12, f18, f19, rne # perform operation
fmadd.d f28, f12, f18, f19, rtz # perform operation
fmadd.d f28, f12, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f28, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f28, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f28, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f28, f12, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f28, f12, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfff0000000000000)
li x30, 0x791ae045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0xb56f4554 # load x3 with 32 MSBs 0x00000000b56f4554
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b56f4554
sw x3, 0(x2) # store x3 (0xb56f4554) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b56f4554 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fmadd.d f30, f5, f3, f7, dyn # perform operation
fmadd.d f30, f5, f3, f7, rdn # perform operation
fmadd.d f30, f5, f3, f7, rmm # perform operation
fmadd.d f30, f5, f3, f7, rne # perform operation
fmadd.d f30, f5, f3, f7, rtz # perform operation
fmadd.d f30, f5, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f5, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff8000000000000)
li x24, 0xa13eea2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
li x3, 0xa209ea64 # load x3 with 32 MSBs 0x00000000a209ea64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a209ea64
sw x3, 0(x2) # store x3 (0xa209ea64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a209ea64 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fmadd.d f24, f25, f1, f20, dyn # perform operation
fmadd.d f24, f25, f1, f20, rdn # perform operation
fmadd.d f24, f25, f1, f20, rmm # perform operation
fmadd.d f24, f25, f1, f20, rne # perform operation
fmadd.d f24, f25, f1, f20, rtz # perform operation
fmadd.d f24, f25, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f24, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f24, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f24, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f24, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f24, f25, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fffffffffffffff)
li x21, 0xdea378b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0x2a4f1302 # load x3 with 32 MSBs 0x000000002a4f1302
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a4f1302
sw x3, 0(x2) # store x3 (0x2a4f1302) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002a4f1302 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fmadd.d f21, f19, f3, f18, dyn # perform operation
fmadd.d f21, f19, f3, f18, rdn # perform operation
fmadd.d f21, f19, f3, f18, rmm # perform operation
fmadd.d f21, f19, f3, f18, rne # perform operation
fmadd.d f21, f19, f3, f18, rtz # perform operation
fmadd.d f21, f19, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f19, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000001)
li x25, 0xbdfb4716 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x968a7f30 # load x3 with 32 MSBs 0x00000000968a7f30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000968a7f30
sw x3, 0(x2) # store x3 (0x968a7f30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000968a7f30 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fmadd.d f25, f16, f11, f23, dyn # perform operation
fmadd.d f25, f16, f11, f23, rdn # perform operation
fmadd.d f25, f16, f11, f23, rmm # perform operation
fmadd.d f25, f16, f11, f23, rne # perform operation
fmadd.d f25, f16, f11, f23, rtz # perform operation
fmadd.d f25, f16, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f16, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f16, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f16, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f16, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f16, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff7ffffffffffff)
li x8, 0xdb9bb431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x6b5122ac # load x3 with 32 MSBs 0x000000006b5122ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b5122ac
sw x3, 0(x2) # store x3 (0x6b5122ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006b5122ac from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fmadd.d f8, f4, f18, f5, dyn # perform operation
fmadd.d f8, f4, f18, f5, rdn # perform operation
fmadd.d f8, f4, f18, f5, rmm # perform operation
fmadd.d f8, f4, f18, f5, rne # perform operation
fmadd.d f8, f4, f18, f5, rtz # perform operation
fmadd.d f8, f4, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f4, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f4, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f4, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f4, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f4, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x5a392534a57711ad)
li x31, 0xdc3869d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0xd418d354 # load x3 with 32 MSBs 0x00000000d418d354
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d418d354
sw x3, 0(x2) # store x3 (0xd418d354) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d418d354 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
fmadd.d f31, f3, f26, f21, dyn # perform operation
fmadd.d f31, f3, f26, f21, rdn # perform operation
fmadd.d f31, f3, f26, f21, rmm # perform operation
fmadd.d f31, f3, f26, f21, rne # perform operation
fmadd.d f31, f3, f26, f21, rtz # perform operation
fmadd.d f31, f3, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f3, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f3, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f3, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f3, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f3, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xa6e895993737426c)
li x13, 0x8f04f0fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0xc1f17689 # load x3 with 32 MSBs 0x00000000c1f17689
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1f17689
sw x3, 0(x2) # store x3 (0xc1f17689) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c1f17689 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fmadd.d f13, f30, f18, f17, dyn # perform operation
fmadd.d f13, f30, f18, f17, rdn # perform operation
fmadd.d f13, f30, f18, f17, rmm # perform operation
fmadd.d f13, f30, f18, f17, rne # perform operation
fmadd.d f13, f30, f18, f17, rtz # perform operation
fmadd.d f13, f30, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f30, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f30, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f30, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f30, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f30, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x0)
li x19, 0xf73f66c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0x1ed61159 # load x3 with 32 MSBs 0x000000001ed61159
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ed61159
sw x3, 0(x2) # store x3 (0x1ed61159) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000001ed61159 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
fmadd.d f19, f28, f7, f16, dyn # perform operation
fmadd.d f19, f28, f7, f16, rdn # perform operation
fmadd.d f19, f28, f7, f16, rmm # perform operation
fmadd.d f19, f28, f7, f16, rne # perform operation
fmadd.d f19, f28, f7, f16, rtz # perform operation
fmadd.d f19, f28, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f28, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000000)
li x7, 0x15da43b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x0c942534 # load x3 with 32 MSBs 0x000000000c942534
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c942534
sw x3, 0(x2) # store x3 (0x0c942534) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000c942534 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fmadd.d f7, f6, f3, f25, dyn # perform operation
fmadd.d f7, f6, f3, f25, rdn # perform operation
fmadd.d f7, f6, f3, f25, rmm # perform operation
fmadd.d f7, f6, f3, f25, rne # perform operation
fmadd.d f7, f6, f3, f25, rtz # perform operation
fmadd.d f7, f6, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f7, f6, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f7, f6, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f7, f6, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f7, f6, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f7, f6, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff0000000000000)
li x30, 0xca9e16ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x3ba33278 # load x3 with 32 MSBs 0x000000003ba33278
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ba33278
sw x3, 0(x2) # store x3 (0x3ba33278) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000003ba33278 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fmadd.d f30, f19, f15, f28, dyn # perform operation
fmadd.d f30, f19, f15, f28, rdn # perform operation
fmadd.d f30, f19, f15, f28, rmm # perform operation
fmadd.d f30, f19, f15, f28, rne # perform operation
fmadd.d f30, f19, f15, f28, rtz # perform operation
fmadd.d f30, f19, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f30, f19, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f30, f19, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f30, f19, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f30, f19, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f30, f19, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff0000000000000)
li x17, 0x3b8d7a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0xddb393b0 # load x3 with 32 MSBs 0x00000000ddb393b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddb393b0
sw x3, 0(x2) # store x3 (0xddb393b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ddb393b0 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fmadd.d f17, f23, f4, f16, dyn # perform operation
fmadd.d f17, f23, f4, f16, rdn # perform operation
fmadd.d f17, f23, f4, f16, rmm # perform operation
fmadd.d f17, f23, f4, f16, rne # perform operation
fmadd.d f17, f23, f4, f16, rtz # perform operation
fmadd.d f17, f23, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f17, f23, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f17, f23, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f17, f23, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f17, f23, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f17, f23, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff8000000000000)
li x8, 0xfe89dd69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0xc0b1f1ff # load x3 with 32 MSBs 0x00000000c0b1f1ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0b1f1ff
sw x3, 0(x2) # store x3 (0xc0b1f1ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c0b1f1ff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fmadd.d f8, f7, f25, f21, dyn # perform operation
fmadd.d f8, f7, f25, f21, rdn # perform operation
fmadd.d f8, f7, f25, f21, rmm # perform operation
fmadd.d f8, f7, f25, f21, rne # perform operation
fmadd.d f8, f7, f25, f21, rtz # perform operation
fmadd.d f8, f7, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f8, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f8, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f8, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f8, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f8, f7, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff8000000000000)
li x5, 0xbf10ea69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x75da449b # load x3 with 32 MSBs 0x0000000075da449b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075da449b
sw x3, 0(x2) # store x3 (0x75da449b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000075da449b from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fmadd.d f5, f6, f28, f16, dyn # perform operation
fmadd.d f5, f6, f28, f16, rdn # perform operation
fmadd.d f5, f6, f28, f16, rmm # perform operation
fmadd.d f5, f6, f28, f16, rne # perform operation
fmadd.d f5, f6, f28, f16, rtz # perform operation
fmadd.d f5, f6, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f6, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f6, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x4000000000000000)
li x6, 0x2226b301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0x05d2a576 # load x3 with 32 MSBs 0x0000000005d2a576
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005d2a576
sw x3, 0(x2) # store x3 (0x05d2a576) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000005d2a576 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fmadd.d f6, f4, f16, f18, dyn # perform operation
fmadd.d f6, f4, f16, f18, rdn # perform operation
fmadd.d f6, f4, f16, f18, rmm # perform operation
fmadd.d f6, f4, f16, f18, rne # perform operation
fmadd.d f6, f4, f16, f18, rtz # perform operation
fmadd.d f6, f4, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f6, f4, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f6, f4, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f6, f4, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f6, f4, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f6, f4, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xc000000000000000)
li x21, 0x4496ea68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0xb339b78a # load x3 with 32 MSBs 0x00000000b339b78a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b339b78a
sw x3, 0(x2) # store x3 (0xb339b78a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000b339b78a from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fmadd.d f21, f19, f14, f7, dyn # perform operation
fmadd.d f21, f19, f14, f7, rdn # perform operation
fmadd.d f21, f19, f14, f7, rmm # perform operation
fmadd.d f21, f19, f14, f7, rne # perform operation
fmadd.d f21, f19, f14, f7, rtz # perform operation
fmadd.d f21, f19, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f19, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f19, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x10000000000000)
li x5, 0x77767871 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x5a3e1f95 # load x3 with 32 MSBs 0x000000005a3e1f95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a3e1f95
sw x3, 0(x2) # store x3 (0x5a3e1f95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000005a3e1f95 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fmadd.d f5, f29, f20, f18, dyn # perform operation
fmadd.d f5, f29, f20, f18, rdn # perform operation
fmadd.d f5, f29, f20, f18, rmm # perform operation
fmadd.d f5, f29, f20, f18, rne # perform operation
fmadd.d f5, f29, f20, f18, rtz # perform operation
fmadd.d f5, f29, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f5, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f5, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f5, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f5, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f5, f29, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8010000000000000)
li x23, 0xc1e219db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x72e35e08 # load x3 with 32 MSBs 0x0000000072e35e08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072e35e08
sw x3, 0(x2) # store x3 (0x72e35e08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000072e35e08 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fmadd.d f23, f26, f27, f6, dyn # perform operation
fmadd.d f23, f26, f27, f6, rdn # perform operation
fmadd.d f23, f26, f27, f6, rmm # perform operation
fmadd.d f23, f26, f27, f6, rne # perform operation
fmadd.d f23, f26, f27, f6, rtz # perform operation
fmadd.d f23, f26, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f26, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fefffffffffffff)
li x20, 0x1c868dd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0xe308ee32 # load x3 with 32 MSBs 0x00000000e308ee32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e308ee32
sw x3, 0(x2) # store x3 (0xe308ee32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e308ee32 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fmadd.d f20, f28, f9, f29, dyn # perform operation
fmadd.d f20, f28, f9, f29, rdn # perform operation
fmadd.d f20, f28, f9, f29, rmm # perform operation
fmadd.d f20, f28, f9, f29, rne # perform operation
fmadd.d f20, f28, f9, f29, rtz # perform operation
fmadd.d f20, f28, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f28, f9, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xffefffffffffffff)
li x21, 0x253d5aa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x2a98c54a # load x3 with 32 MSBs 0x000000002a98c54a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a98c54a
sw x3, 0(x2) # store x3 (0x2a98c54a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002a98c54a from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fmadd.d f21, f31, f30, f23, dyn # perform operation
fmadd.d f21, f31, f30, f23, rdn # perform operation
fmadd.d f21, f31, f30, f23, rmm # perform operation
fmadd.d f21, f31, f30, f23, rne # perform operation
fmadd.d f21, f31, f30, f23, rtz # perform operation
fmadd.d f21, f31, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f31, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfffffffffffff)
li x13, 0x4878176f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0xcacf9f5a # load x3 with 32 MSBs 0x00000000cacf9f5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cacf9f5a
sw x3, 0(x2) # store x3 (0xcacf9f5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000cacf9f5a from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
fmadd.d f13, f22, f14, f16, dyn # perform operation
fmadd.d f13, f22, f14, f16, rdn # perform operation
fmadd.d f13, f22, f14, f16, rmm # perform operation
fmadd.d f13, f22, f14, f16, rne # perform operation
fmadd.d f13, f22, f14, f16, rtz # perform operation
fmadd.d f13, f22, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f13, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f13, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f13, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f13, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f13, f22, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x800fffffffffffff)
li x23, 0xba8526e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x759eae70 # load x3 with 32 MSBs 0x00000000759eae70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000759eae70
sw x3, 0(x2) # store x3 (0x759eae70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000759eae70 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fmadd.d f23, f15, f7, f12, dyn # perform operation
fmadd.d f23, f15, f7, f12, rdn # perform operation
fmadd.d f23, f15, f7, f12, rmm # perform operation
fmadd.d f23, f15, f7, f12, rne # perform operation
fmadd.d f23, f15, f7, f12, rtz # perform operation
fmadd.d f23, f15, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f23, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f23, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f23, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f23, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f23, f15, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000)
li x15, 0xf7b638d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x819683af # load x3 with 32 MSBs 0x00000000819683af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000819683af
sw x3, 0(x2) # store x3 (0x819683af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000819683af from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fmadd.d f15, f5, f20, f4, dyn # perform operation
fmadd.d f15, f5, f20, f4, rdn # perform operation
fmadd.d f15, f5, f20, f4, rmm # perform operation
fmadd.d f15, f5, f20, f4, rne # perform operation
fmadd.d f15, f5, f20, f4, rtz # perform operation
fmadd.d f15, f5, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f15, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f15, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f15, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f15, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f15, f5, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8008000000000000)
li x19, 0x62d3f4ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0x45a7640a # load x3 with 32 MSBs 0x0000000045a7640a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045a7640a
sw x3, 0(x2) # store x3 (0x45a7640a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000045a7640a from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fmadd.d f19, f25, f23, f10, dyn # perform operation
fmadd.d f19, f25, f23, f10, rdn # perform operation
fmadd.d f19, f25, f23, f10, rmm # perform operation
fmadd.d f19, f25, f23, f10, rne # perform operation
fmadd.d f19, f25, f23, f10, rtz # perform operation
fmadd.d f19, f25, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f25, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x1)
li x26, 0xcad72049 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x8b2287ea # load x3 with 32 MSBs 0x000000008b2287ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b2287ea
sw x3, 0(x2) # store x3 (0x8b2287ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008b2287ea from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
fmadd.d f26, f6, f8, f18, dyn # perform operation
fmadd.d f26, f6, f8, f18, rdn # perform operation
fmadd.d f26, f6, f8, f18, rmm # perform operation
fmadd.d f26, f6, f8, f18, rne # perform operation
fmadd.d f26, f6, f8, f18, rtz # perform operation
fmadd.d f26, f6, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f6, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f6, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000001)
li x19, 0x2351d206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x8da4f9c0 # load x3 with 32 MSBs 0x000000008da4f9c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008da4f9c0
sw x3, 0(x2) # store x3 (0x8da4f9c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008da4f9c0 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
fmadd.d f19, f11, f29, f7, dyn # perform operation
fmadd.d f19, f11, f29, f7, rdn # perform operation
fmadd.d f19, f11, f29, f7, rmm # perform operation
fmadd.d f19, f11, f29, f7, rne # perform operation
fmadd.d f19, f11, f29, f7, rtz # perform operation
fmadd.d f19, f11, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f19, f11, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f19, f11, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f19, f11, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f19, f11, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f19, f11, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000000)
li x26, 0x132590d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x276478c8 # load x3 with 32 MSBs 0x00000000276478c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000276478c8
sw x3, 0(x2) # store x3 (0x276478c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000276478c8 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fmadd.d f26, f30, f15, f31, dyn # perform operation
fmadd.d f26, f30, f15, f31, rdn # perform operation
fmadd.d f26, f30, f15, f31, rmm # perform operation
fmadd.d f26, f30, f15, f31, rne # perform operation
fmadd.d f26, f30, f15, f31, rtz # perform operation
fmadd.d f26, f30, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f26, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f26, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f26, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f26, f30, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f26, f30, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfff0000000000000)
li x31, 0xd360c769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0xc03752dd # load x3 with 32 MSBs 0x00000000c03752dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c03752dd
sw x3, 0(x2) # store x3 (0xc03752dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c03752dd from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fmadd.d f31, f8, f13, f25, dyn # perform operation
fmadd.d f31, f8, f13, f25, rdn # perform operation
fmadd.d f31, f8, f13, f25, rmm # perform operation
fmadd.d f31, f8, f13, f25, rne # perform operation
fmadd.d f31, f8, f13, f25, rtz # perform operation
fmadd.d f31, f8, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f31, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f31, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f31, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f31, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f31, f8, f13, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff8000000000000)
li x25, 0x3f495c57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0x80f54394 # load x3 with 32 MSBs 0x0000000080f54394
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080f54394
sw x3, 0(x2) # store x3 (0x80f54394) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000080f54394 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fmadd.d f25, f28, f13, f31, dyn # perform operation
fmadd.d f25, f28, f13, f31, rdn # perform operation
fmadd.d f25, f28, f13, f31, rmm # perform operation
fmadd.d f25, f28, f13, f31, rne # perform operation
fmadd.d f25, f28, f13, f31, rtz # perform operation
fmadd.d f25, f28, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f25, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f25, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f25, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f25, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f25, f28, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fffffffffffffff)
li x9, 0xe09c86b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0xff869448 # load x3 with 32 MSBs 0x00000000ff869448
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff869448
sw x3, 0(x2) # store x3 (0xff869448) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ff869448 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fmadd.d f9, f4, f3, f12, dyn # perform operation
fmadd.d f9, f4, f3, f12, rdn # perform operation
fmadd.d f9, f4, f3, f12, rmm # perform operation
fmadd.d f9, f4, f3, f12, rne # perform operation
fmadd.d f9, f4, f3, f12, rtz # perform operation
fmadd.d f9, f4, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f9, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f9, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f9, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f9, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f9, f4, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000001)
li x12, 0x2e48d65e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x0d7660f3 # load x3 with 32 MSBs 0x000000000d7660f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d7660f3
sw x3, 0(x2) # store x3 (0x0d7660f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000d7660f3 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
fmadd.d f12, f13, f20, f4, dyn # perform operation
fmadd.d f12, f13, f20, f4, rdn # perform operation
fmadd.d f12, f13, f20, f4, rmm # perform operation
fmadd.d f12, f13, f20, f4, rne # perform operation
fmadd.d f12, f13, f20, f4, rtz # perform operation
fmadd.d f12, f13, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f12, f13, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff7ffffffffffff)
li x21, 0xfa9d4625 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x7f8639e9 # load x3 with 32 MSBs 0x000000007f8639e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f8639e9
sw x3, 0(x2) # store x3 (0x7f8639e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007f8639e9 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fmadd.d f21, f2, f10, f30, dyn # perform operation
fmadd.d f21, f2, f10, f30, rdn # perform operation
fmadd.d f21, f2, f10, f30, rmm # perform operation
fmadd.d f21, f2, f10, f30, rne # perform operation
fmadd.d f21, f2, f10, f30, rtz # perform operation
fmadd.d f21, f2, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f21, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f21, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f21, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f21, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f21, f2, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x5a392534a57711ad)
li x29, 0xacab73c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x39f6a9bc # load x3 with 32 MSBs 0x0000000039f6a9bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039f6a9bc
sw x3, 0(x2) # store x3 (0x39f6a9bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000039f6a9bc from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fmadd.d f29, f8, f30, f12, dyn # perform operation
fmadd.d f29, f8, f30, f12, rdn # perform operation
fmadd.d f29, f8, f30, f12, rmm # perform operation
fmadd.d f29, f8, f30, f12, rne # perform operation
fmadd.d f29, f8, f30, f12, rtz # perform operation
fmadd.d f29, f8, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f29, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f29, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f29, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f29, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f29, f8, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xa6e895993737426c)
li x20, 0x2fd68c50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xe69889b4 # load x3 with 32 MSBs 0x00000000e69889b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e69889b4
sw x3, 0(x2) # store x3 (0xe69889b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e69889b4 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fmadd.d f20, f21, f25, f29, dyn # perform operation
fmadd.d f20, f21, f25, f29, rdn # perform operation
fmadd.d f20, f21, f25, f29, rmm # perform operation
fmadd.d f20, f21, f25, f29, rne # perform operation
fmadd.d f20, f21, f25, f29, rtz # perform operation
fmadd.d f20, f21, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.d f20, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.d f20, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.d f20, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.d f20, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.d f20, f21, f25, f29 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xee66665c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd955ee9d # load x3 with 32 MSBs 0x00000000d955ee9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d955ee9d
sw x3, 0(x2) # store x3 (0xd955ee9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d955ee9d from memory into f8
li x3, 0xb0c68783 # load x3 with 32 MSBs 0x00000000b0c68783
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0c68783
sw x3, 0(x2) # store x3 (0xb0c68783) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b0c68783 from memory into f4
li x3, 0x4f2ae2c9 # load x3 with 32 MSBs 0x000000004f2ae2c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f2ae2c9
sw x3, 0(x2) # store x3 (0x4f2ae2c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004f2ae2c9 from memory into f3
fmadd.d f0, f8, f4, f3 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x340fe230 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x36bc7159 # load x3 with 32 MSBs 0x0000000036bc7159
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000036bc7159
sw x3, 0(x2) # store x3 (0x36bc7159) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000036bc7159 from memory into f29
li x3, 0xcb2fdce7 # load x3 with 32 MSBs 0x00000000cb2fdce7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb2fdce7
sw x3, 0(x2) # store x3 (0xcb2fdce7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000cb2fdce7 from memory into f2
li x3, 0x83b94400 # load x3 with 32 MSBs 0x0000000083b94400
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083b94400
sw x3, 0(x2) # store x3 (0x83b94400) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000083b94400 from memory into f4
fmadd.d f1, f29, f2, f4 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x70227c92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2fa3c65 # load x3 with 32 MSBs 0x00000000d2fa3c65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2fa3c65
sw x3, 0(x2) # store x3 (0xd2fa3c65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d2fa3c65 from memory into f26
li x3, 0xba9025ec # load x3 with 32 MSBs 0x00000000ba9025ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba9025ec
sw x3, 0(x2) # store x3 (0xba9025ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ba9025ec from memory into f17
li x3, 0xf479c42a # load x3 with 32 MSBs 0x00000000f479c42a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f479c42a
sw x3, 0(x2) # store x3 (0xf479c42a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000f479c42a from memory into f13
fmadd.d f2, f26, f17, f13 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x64fed8ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x769dd73f # load x3 with 32 MSBs 0x00000000769dd73f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000769dd73f
sw x3, 0(x2) # store x3 (0x769dd73f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000769dd73f from memory into f10
li x3, 0x99c963de # load x3 with 32 MSBs 0x0000000099c963de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099c963de
sw x3, 0(x2) # store x3 (0x99c963de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000099c963de from memory into f14
li x3, 0xe8cdf39f # load x3 with 32 MSBs 0x00000000e8cdf39f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8cdf39f
sw x3, 0(x2) # store x3 (0xe8cdf39f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e8cdf39f from memory into f25
fmadd.d f3, f10, f14, f25 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0xd21d3fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x922a1284 # load x3 with 32 MSBs 0x00000000922a1284
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000922a1284
sw x3, 0(x2) # store x3 (0x922a1284) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000922a1284 from memory into f6
li x3, 0x4dd9cd8d # load x3 with 32 MSBs 0x000000004dd9cd8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dd9cd8d
sw x3, 0(x2) # store x3 (0x4dd9cd8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004dd9cd8d from memory into f25
li x3, 0x359a6d97 # load x3 with 32 MSBs 0x00000000359a6d97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000359a6d97
sw x3, 0(x2) # store x3 (0x359a6d97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000359a6d97 from memory into f23
fmadd.d f4, f6, f25, f23 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x2480a508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7402210 # load x3 with 32 MSBs 0x00000000b7402210
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7402210
sw x3, 0(x2) # store x3 (0xb7402210) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b7402210 from memory into f9
li x3, 0xc5e9c740 # load x3 with 32 MSBs 0x00000000c5e9c740
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5e9c740
sw x3, 0(x2) # store x3 (0xc5e9c740) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c5e9c740 from memory into f17
li x3, 0xbb55a1dd # load x3 with 32 MSBs 0x00000000bb55a1dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb55a1dd
sw x3, 0(x2) # store x3 (0xbb55a1dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000bb55a1dd from memory into f30
fmadd.d f5, f9, f17, f30 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x4d42959f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4bc0b19b # load x3 with 32 MSBs 0x000000004bc0b19b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bc0b19b
sw x3, 0(x2) # store x3 (0x4bc0b19b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000004bc0b19b from memory into f6
li x3, 0x8bbe6d3f # load x3 with 32 MSBs 0x000000008bbe6d3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bbe6d3f
sw x3, 0(x2) # store x3 (0x8bbe6d3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008bbe6d3f from memory into f31
li x3, 0x04481af2 # load x3 with 32 MSBs 0x0000000004481af2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004481af2
sw x3, 0(x2) # store x3 (0x04481af2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000004481af2 from memory into f16
fmadd.d f6, f6, f31, f16 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x0aca07ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a1d9498 # load x3 with 32 MSBs 0x000000008a1d9498
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a1d9498
sw x3, 0(x2) # store x3 (0x8a1d9498) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008a1d9498 from memory into f8
li x3, 0x1379dce4 # load x3 with 32 MSBs 0x000000001379dce4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001379dce4
sw x3, 0(x2) # store x3 (0x1379dce4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001379dce4 from memory into f22
li x3, 0x096cb185 # load x3 with 32 MSBs 0x00000000096cb185
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000096cb185
sw x3, 0(x2) # store x3 (0x096cb185) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000096cb185 from memory into f6
fmadd.d f7, f8, f22, f6 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x5c723d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c8e8674 # load x3 with 32 MSBs 0x000000006c8e8674
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c8e8674
sw x3, 0(x2) # store x3 (0x6c8e8674) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006c8e8674 from memory into f5
li x3, 0x642e0c04 # load x3 with 32 MSBs 0x00000000642e0c04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000642e0c04
sw x3, 0(x2) # store x3 (0x642e0c04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000642e0c04 from memory into f3
li x3, 0xa64c29d7 # load x3 with 32 MSBs 0x00000000a64c29d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a64c29d7
sw x3, 0(x2) # store x3 (0xa64c29d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a64c29d7 from memory into f27
fmadd.d f8, f5, f3, f27 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x30899792 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac7fe076 # load x3 with 32 MSBs 0x00000000ac7fe076
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac7fe076
sw x3, 0(x2) # store x3 (0xac7fe076) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ac7fe076 from memory into f5
li x3, 0x780c8ffe # load x3 with 32 MSBs 0x00000000780c8ffe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000780c8ffe
sw x3, 0(x2) # store x3 (0x780c8ffe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000780c8ffe from memory into f18
li x3, 0xe9574bf6 # load x3 with 32 MSBs 0x00000000e9574bf6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9574bf6
sw x3, 0(x2) # store x3 (0xe9574bf6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e9574bf6 from memory into f1
fmadd.d f9, f5, f18, f1 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x5cf98e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4c582e9 # load x3 with 32 MSBs 0x00000000d4c582e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4c582e9
sw x3, 0(x2) # store x3 (0xd4c582e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d4c582e9 from memory into f7
li x3, 0xd0112d01 # load x3 with 32 MSBs 0x00000000d0112d01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0112d01
sw x3, 0(x2) # store x3 (0xd0112d01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d0112d01 from memory into f1
li x3, 0x1d025cd9 # load x3 with 32 MSBs 0x000000001d025cd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d025cd9
sw x3, 0(x2) # store x3 (0x1d025cd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001d025cd9 from memory into f8
fmadd.d f10, f7, f1, f8 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x4fd97e03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec0747a0 # load x3 with 32 MSBs 0x00000000ec0747a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec0747a0
sw x3, 0(x2) # store x3 (0xec0747a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ec0747a0 from memory into f21
li x3, 0x9e741932 # load x3 with 32 MSBs 0x000000009e741932
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e741932
sw x3, 0(x2) # store x3 (0x9e741932) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009e741932 from memory into f26
li x3, 0x935f714e # load x3 with 32 MSBs 0x00000000935f714e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000935f714e
sw x3, 0(x2) # store x3 (0x935f714e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000935f714e from memory into f19
fmadd.d f11, f21, f26, f19 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x8b4752d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fadb27d # load x3 with 32 MSBs 0x000000003fadb27d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003fadb27d
sw x3, 0(x2) # store x3 (0x3fadb27d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003fadb27d from memory into f2
li x3, 0x16630bd9 # load x3 with 32 MSBs 0x0000000016630bd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016630bd9
sw x3, 0(x2) # store x3 (0x16630bd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000016630bd9 from memory into f15
li x3, 0xcde5e33c # load x3 with 32 MSBs 0x00000000cde5e33c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cde5e33c
sw x3, 0(x2) # store x3 (0xcde5e33c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000cde5e33c from memory into f4
fmadd.d f12, f2, f15, f4 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x8a9f0088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2ab93aa # load x3 with 32 MSBs 0x00000000b2ab93aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2ab93aa
sw x3, 0(x2) # store x3 (0xb2ab93aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000b2ab93aa from memory into f17
li x3, 0x31464fda # load x3 with 32 MSBs 0x0000000031464fda
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031464fda
sw x3, 0(x2) # store x3 (0x31464fda) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000031464fda from memory into f16
li x3, 0xc948f8f1 # load x3 with 32 MSBs 0x00000000c948f8f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c948f8f1
sw x3, 0(x2) # store x3 (0xc948f8f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c948f8f1 from memory into f4
fmadd.d f13, f17, f16, f4 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x798ad0f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0e2269b # load x3 with 32 MSBs 0x00000000d0e2269b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0e2269b
sw x3, 0(x2) # store x3 (0xd0e2269b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d0e2269b from memory into f11
li x3, 0x29380909 # load x3 with 32 MSBs 0x0000000029380909
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029380909
sw x3, 0(x2) # store x3 (0x29380909) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000029380909 from memory into f23
li x3, 0x777a79ca # load x3 with 32 MSBs 0x00000000777a79ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000777a79ca
sw x3, 0(x2) # store x3 (0x777a79ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000777a79ca from memory into f15
fmadd.d f14, f11, f23, f15 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x006e6c49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1cc71a4a # load x3 with 32 MSBs 0x000000001cc71a4a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cc71a4a
sw x3, 0(x2) # store x3 (0x1cc71a4a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001cc71a4a from memory into f22
li x3, 0xb5176e36 # load x3 with 32 MSBs 0x00000000b5176e36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5176e36
sw x3, 0(x2) # store x3 (0xb5176e36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b5176e36 from memory into f30
li x3, 0x66dcdfe9 # load x3 with 32 MSBs 0x0000000066dcdfe9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066dcdfe9
sw x3, 0(x2) # store x3 (0x66dcdfe9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000066dcdfe9 from memory into f19
fmadd.d f15, f22, f30, f19 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x29aed5ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7a722468 # load x3 with 32 MSBs 0x000000007a722468
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a722468
sw x3, 0(x2) # store x3 (0x7a722468) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007a722468 from memory into f12
li x3, 0x8625709e # load x3 with 32 MSBs 0x000000008625709e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008625709e
sw x3, 0(x2) # store x3 (0x8625709e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008625709e from memory into f23
li x3, 0xd5d4d5d9 # load x3 with 32 MSBs 0x00000000d5d4d5d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5d4d5d9
sw x3, 0(x2) # store x3 (0xd5d4d5d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000d5d4d5d9 from memory into f5
fmadd.d f16, f12, f23, f5 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x5744234f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bff5e98 # load x3 with 32 MSBs 0x000000009bff5e98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bff5e98
sw x3, 0(x2) # store x3 (0x9bff5e98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009bff5e98 from memory into f6
li x3, 0x4bee35cb # load x3 with 32 MSBs 0x000000004bee35cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bee35cb
sw x3, 0(x2) # store x3 (0x4bee35cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004bee35cb from memory into f9
li x3, 0xf5647e21 # load x3 with 32 MSBs 0x00000000f5647e21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5647e21
sw x3, 0(x2) # store x3 (0xf5647e21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f5647e21 from memory into f28
fmadd.d f17, f6, f9, f28 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x1b8806e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54792d52 # load x3 with 32 MSBs 0x0000000054792d52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054792d52
sw x3, 0(x2) # store x3 (0x54792d52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000054792d52 from memory into f25
li x3, 0xa826d86a # load x3 with 32 MSBs 0x00000000a826d86a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a826d86a
sw x3, 0(x2) # store x3 (0xa826d86a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a826d86a from memory into f26
li x3, 0x155dc79d # load x3 with 32 MSBs 0x00000000155dc79d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000155dc79d
sw x3, 0(x2) # store x3 (0x155dc79d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000155dc79d from memory into f13
fmadd.d f18, f25, f26, f13 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x7c96ef79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x895adb1d # load x3 with 32 MSBs 0x00000000895adb1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000895adb1d
sw x3, 0(x2) # store x3 (0x895adb1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000895adb1d from memory into f10
li x3, 0x158af9ac # load x3 with 32 MSBs 0x00000000158af9ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000158af9ac
sw x3, 0(x2) # store x3 (0x158af9ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000158af9ac from memory into f3
li x3, 0x55a08cb2 # load x3 with 32 MSBs 0x0000000055a08cb2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055a08cb2
sw x3, 0(x2) # store x3 (0x55a08cb2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000055a08cb2 from memory into f17
fmadd.d f19, f10, f3, f17 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0xa74d5f6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e9e35ce # load x3 with 32 MSBs 0x000000001e9e35ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e9e35ce
sw x3, 0(x2) # store x3 (0x1e9e35ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001e9e35ce from memory into f26
li x3, 0x02cf9a69 # load x3 with 32 MSBs 0x0000000002cf9a69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002cf9a69
sw x3, 0(x2) # store x3 (0x02cf9a69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000002cf9a69 from memory into f20
li x3, 0x416ad877 # load x3 with 32 MSBs 0x00000000416ad877
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000416ad877
sw x3, 0(x2) # store x3 (0x416ad877) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000416ad877 from memory into f1
fmadd.d f20, f26, f20, f1 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0xe844a6e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe2d02fb # load x3 with 32 MSBs 0x00000000be2d02fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be2d02fb
sw x3, 0(x2) # store x3 (0xbe2d02fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000be2d02fb from memory into f9
li x3, 0xf2a74f31 # load x3 with 32 MSBs 0x00000000f2a74f31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2a74f31
sw x3, 0(x2) # store x3 (0xf2a74f31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f2a74f31 from memory into f31
li x3, 0xebeeef73 # load x3 with 32 MSBs 0x00000000ebeeef73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebeeef73
sw x3, 0(x2) # store x3 (0xebeeef73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ebeeef73 from memory into f24
fmadd.d f21, f9, f31, f24 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x6b053cac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x58e6beb4 # load x3 with 32 MSBs 0x0000000058e6beb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058e6beb4
sw x3, 0(x2) # store x3 (0x58e6beb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000058e6beb4 from memory into f20
li x3, 0x45febb3b # load x3 with 32 MSBs 0x0000000045febb3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045febb3b
sw x3, 0(x2) # store x3 (0x45febb3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000045febb3b from memory into f22
li x3, 0xa63737e1 # load x3 with 32 MSBs 0x00000000a63737e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a63737e1
sw x3, 0(x2) # store x3 (0xa63737e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a63737e1 from memory into f27
fmadd.d f22, f20, f22, f27 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x34cec891 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f1957b2 # load x3 with 32 MSBs 0x000000008f1957b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f1957b2
sw x3, 0(x2) # store x3 (0x8f1957b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008f1957b2 from memory into f22
li x3, 0xc41d5747 # load x3 with 32 MSBs 0x00000000c41d5747
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c41d5747
sw x3, 0(x2) # store x3 (0xc41d5747) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c41d5747 from memory into f3
li x3, 0x5a0dbd34 # load x3 with 32 MSBs 0x000000005a0dbd34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a0dbd34
sw x3, 0(x2) # store x3 (0x5a0dbd34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005a0dbd34 from memory into f13
fmadd.d f23, f22, f3, f13 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x0661407f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f927a7a # load x3 with 32 MSBs 0x000000001f927a7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f927a7a
sw x3, 0(x2) # store x3 (0x1f927a7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001f927a7a from memory into f4
li x3, 0x6818aefe # load x3 with 32 MSBs 0x000000006818aefe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006818aefe
sw x3, 0(x2) # store x3 (0x6818aefe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006818aefe from memory into f18
li x3, 0x632743a3 # load x3 with 32 MSBs 0x00000000632743a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000632743a3
sw x3, 0(x2) # store x3 (0x632743a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000632743a3 from memory into f9
fmadd.d f24, f4, f18, f9 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x3ece18c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x483e5774 # load x3 with 32 MSBs 0x00000000483e5774
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000483e5774
sw x3, 0(x2) # store x3 (0x483e5774) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000483e5774 from memory into f3
li x3, 0x53039a9c # load x3 with 32 MSBs 0x0000000053039a9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053039a9c
sw x3, 0(x2) # store x3 (0x53039a9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000053039a9c from memory into f31
li x3, 0xf9ed947f # load x3 with 32 MSBs 0x00000000f9ed947f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9ed947f
sw x3, 0(x2) # store x3 (0xf9ed947f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f9ed947f from memory into f27
fmadd.d f25, f3, f31, f27 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0xe293993e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0c769bb0 # load x3 with 32 MSBs 0x000000000c769bb0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c769bb0
sw x3, 0(x2) # store x3 (0x0c769bb0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000c769bb0 from memory into f9
li x3, 0xf0a29225 # load x3 with 32 MSBs 0x00000000f0a29225
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0a29225
sw x3, 0(x2) # store x3 (0xf0a29225) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f0a29225 from memory into f23
li x3, 0xbe0170f5 # load x3 with 32 MSBs 0x00000000be0170f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be0170f5
sw x3, 0(x2) # store x3 (0xbe0170f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000be0170f5 from memory into f15
fmadd.d f26, f9, f23, f15 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x71d8182d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc92a4b0 # load x3 with 32 MSBs 0x00000000fc92a4b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc92a4b0
sw x3, 0(x2) # store x3 (0xfc92a4b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fc92a4b0 from memory into f10
li x3, 0xfef4919c # load x3 with 32 MSBs 0x00000000fef4919c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fef4919c
sw x3, 0(x2) # store x3 (0xfef4919c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000fef4919c from memory into f6
li x3, 0x243471a0 # load x3 with 32 MSBs 0x00000000243471a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000243471a0
sw x3, 0(x2) # store x3 (0x243471a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000243471a0 from memory into f11
fmadd.d f27, f10, f6, f11 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xc44d8570 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf4e03c28 # load x3 with 32 MSBs 0x00000000f4e03c28
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4e03c28
sw x3, 0(x2) # store x3 (0xf4e03c28) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f4e03c28 from memory into f26
li x3, 0x572442df # load x3 with 32 MSBs 0x00000000572442df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000572442df
sw x3, 0(x2) # store x3 (0x572442df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000572442df from memory into f13
li x3, 0xe3615768 # load x3 with 32 MSBs 0x00000000e3615768
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3615768
sw x3, 0(x2) # store x3 (0xe3615768) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e3615768 from memory into f12
fmadd.d f28, f26, f13, f12 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0xafdca867 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x174ae62d # load x3 with 32 MSBs 0x00000000174ae62d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000174ae62d
sw x3, 0(x2) # store x3 (0x174ae62d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000174ae62d from memory into f26
li x3, 0xd0741d65 # load x3 with 32 MSBs 0x00000000d0741d65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0741d65
sw x3, 0(x2) # store x3 (0xd0741d65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d0741d65 from memory into f23
li x3, 0xdca64932 # load x3 with 32 MSBs 0x00000000dca64932
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dca64932
sw x3, 0(x2) # store x3 (0xdca64932) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000dca64932 from memory into f22
fmadd.d f29, f26, f23, f22 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x48b5c526 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc07892 # load x3 with 32 MSBs 0x000000003fc07892
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003fc07892
sw x3, 0(x2) # store x3 (0x3fc07892) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000003fc07892 from memory into f1
li x3, 0xbacdec48 # load x3 with 32 MSBs 0x00000000bacdec48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bacdec48
sw x3, 0(x2) # store x3 (0xbacdec48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000bacdec48 from memory into f10
li x3, 0x4cfbeea3 # load x3 with 32 MSBs 0x000000004cfbeea3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004cfbeea3
sw x3, 0(x2) # store x3 (0x4cfbeea3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004cfbeea3 from memory into f24
fmadd.d f30, f1, f10, f24 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x55cd84f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfecae853 # load x3 with 32 MSBs 0x00000000fecae853
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fecae853
sw x3, 0(x2) # store x3 (0xfecae853) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000fecae853 from memory into f8
li x3, 0x53993ee6 # load x3 with 32 MSBs 0x0000000053993ee6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053993ee6
sw x3, 0(x2) # store x3 (0x53993ee6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000053993ee6 from memory into f25
li x3, 0x46666a9e # load x3 with 32 MSBs 0x0000000046666a9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046666a9e
sw x3, 0(x2) # store x3 (0x46666a9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000046666a9e from memory into f7
fmadd.d f31, f8, f25, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x13, 0xecda60ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1b9c6917 # load x3 with 32 MSBs 0x000000001b9c6917
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b9c6917
sw x3, 0(x2) # store x3 (0x1b9c6917) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000001b9c6917 from memory into f0
li x3, 0x282c9990 # load x3 with 32 MSBs 0x00000000282c9990
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000282c9990
sw x3, 0(x2) # store x3 (0x282c9990) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000282c9990 from memory into f8
li x3, 0x50d4c105 # load x3 with 32 MSBs 0x0000000050d4c105
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050d4c105
sw x3, 0(x2) # store x3 (0x50d4c105) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000050d4c105 from memory into f1
fmadd.d f13, f0, f8, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x26, 0xd8f8220c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6cd25a5d # load x3 with 32 MSBs 0x000000006cd25a5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006cd25a5d
sw x3, 0(x2) # store x3 (0x6cd25a5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006cd25a5d from memory into f1
li x3, 0xf1ca2c48 # load x3 with 32 MSBs 0x00000000f1ca2c48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1ca2c48
sw x3, 0(x2) # store x3 (0xf1ca2c48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f1ca2c48 from memory into f20
li x3, 0x76db7603 # load x3 with 32 MSBs 0x0000000076db7603
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076db7603
sw x3, 0(x2) # store x3 (0x76db7603) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000076db7603 from memory into f8
fmadd.d f26, f1, f20, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x21, 0xe5668eb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4bd50e9d # load x3 with 32 MSBs 0x000000004bd50e9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bd50e9d
sw x3, 0(x2) # store x3 (0x4bd50e9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004bd50e9d from memory into f2
li x3, 0x1575ad9a # load x3 with 32 MSBs 0x000000001575ad9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001575ad9a
sw x3, 0(x2) # store x3 (0x1575ad9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001575ad9a from memory into f29
li x3, 0xc4ae5cd2 # load x3 with 32 MSBs 0x00000000c4ae5cd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4ae5cd2
sw x3, 0(x2) # store x3 (0xc4ae5cd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000c4ae5cd2 from memory into f12
fmadd.d f21, f2, f29, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x31, 0xafe13cea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x19169c1a # load x3 with 32 MSBs 0x0000000019169c1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019169c1a
sw x3, 0(x2) # store x3 (0x19169c1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000019169c1a from memory into f3
li x3, 0x72e18718 # load x3 with 32 MSBs 0x0000000072e18718
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072e18718
sw x3, 0(x2) # store x3 (0x72e18718) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000072e18718 from memory into f6
li x3, 0x2f9cd79c # load x3 with 32 MSBs 0x000000002f9cd79c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f9cd79c
sw x3, 0(x2) # store x3 (0x2f9cd79c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002f9cd79c from memory into f29
fmadd.d f31, f3, f6, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x18, 0x93842bc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80c70312 # load x3 with 32 MSBs 0x0000000080c70312
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080c70312
sw x3, 0(x2) # store x3 (0x80c70312) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000080c70312 from memory into f4
li x3, 0x91737b59 # load x3 with 32 MSBs 0x0000000091737b59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091737b59
sw x3, 0(x2) # store x3 (0x91737b59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000091737b59 from memory into f2
li x3, 0xe7c4f5a0 # load x3 with 32 MSBs 0x00000000e7c4f5a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7c4f5a0
sw x3, 0(x2) # store x3 (0xe7c4f5a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000e7c4f5a0 from memory into f14
fmadd.d f18, f4, f2, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x11, 0x030348b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd092b39 # load x3 with 32 MSBs 0x00000000fd092b39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd092b39
sw x3, 0(x2) # store x3 (0xfd092b39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000fd092b39 from memory into f5
li x3, 0x65818f6a # load x3 with 32 MSBs 0x0000000065818f6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065818f6a
sw x3, 0(x2) # store x3 (0x65818f6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000065818f6a from memory into f8
li x3, 0x8f47ce1c # load x3 with 32 MSBs 0x000000008f47ce1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f47ce1c
sw x3, 0(x2) # store x3 (0x8f47ce1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008f47ce1c from memory into f19
fmadd.d f11, f5, f8, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x25, 0xfc8c717f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x473bcc59 # load x3 with 32 MSBs 0x00000000473bcc59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000473bcc59
sw x3, 0(x2) # store x3 (0x473bcc59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000473bcc59 from memory into f6
li x3, 0xbf07d7af # load x3 with 32 MSBs 0x00000000bf07d7af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf07d7af
sw x3, 0(x2) # store x3 (0xbf07d7af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000bf07d7af from memory into f5
li x3, 0x1365e607 # load x3 with 32 MSBs 0x000000001365e607
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001365e607
sw x3, 0(x2) # store x3 (0x1365e607) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001365e607 from memory into f2
fmadd.d f25, f6, f5, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x31, 0xe940bb1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23850f11 # load x3 with 32 MSBs 0x0000000023850f11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023850f11
sw x3, 0(x2) # store x3 (0x23850f11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000023850f11 from memory into f7
li x3, 0xa08fcf02 # load x3 with 32 MSBs 0x00000000a08fcf02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a08fcf02
sw x3, 0(x2) # store x3 (0xa08fcf02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a08fcf02 from memory into f6
li x3, 0xf2e2490f # load x3 with 32 MSBs 0x00000000f2e2490f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2e2490f
sw x3, 0(x2) # store x3 (0xf2e2490f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f2e2490f from memory into f15
fmadd.d f31, f7, f6, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x11, 0xdf50613f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf58e5826 # load x3 with 32 MSBs 0x00000000f58e5826
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f58e5826
sw x3, 0(x2) # store x3 (0xf58e5826) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f58e5826 from memory into f8
li x3, 0x78ab6bd3 # load x3 with 32 MSBs 0x0000000078ab6bd3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078ab6bd3
sw x3, 0(x2) # store x3 (0x78ab6bd3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000078ab6bd3 from memory into f23
li x3, 0x7023cb55 # load x3 with 32 MSBs 0x000000007023cb55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007023cb55
sw x3, 0(x2) # store x3 (0x7023cb55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007023cb55 from memory into f13
fmadd.d f11, f8, f23, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x17, 0x779277ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf9657193 # load x3 with 32 MSBs 0x00000000f9657193
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9657193
sw x3, 0(x2) # store x3 (0xf9657193) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f9657193 from memory into f9
li x3, 0xf82f6893 # load x3 with 32 MSBs 0x00000000f82f6893
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f82f6893
sw x3, 0(x2) # store x3 (0xf82f6893) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f82f6893 from memory into f10
li x3, 0x77c8723e # load x3 with 32 MSBs 0x0000000077c8723e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077c8723e
sw x3, 0(x2) # store x3 (0x77c8723e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000077c8723e from memory into f20
fmadd.d f17, f9, f10, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x29, 0x48e25e42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6fe6eb7 # load x3 with 32 MSBs 0x00000000c6fe6eb7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6fe6eb7
sw x3, 0(x2) # store x3 (0xc6fe6eb7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c6fe6eb7 from memory into f10
li x3, 0xddfb4855 # load x3 with 32 MSBs 0x00000000ddfb4855
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddfb4855
sw x3, 0(x2) # store x3 (0xddfb4855) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ddfb4855 from memory into f28
li x3, 0x909fc1c2 # load x3 with 32 MSBs 0x00000000909fc1c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000909fc1c2
sw x3, 0(x2) # store x3 (0x909fc1c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000909fc1c2 from memory into f26
fmadd.d f29, f10, f28, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x1, 0x778464c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x63f86436 # load x3 with 32 MSBs 0x0000000063f86436
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063f86436
sw x3, 0(x2) # store x3 (0x63f86436) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000063f86436 from memory into f11
li x3, 0xaa6e06d4 # load x3 with 32 MSBs 0x00000000aa6e06d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa6e06d4
sw x3, 0(x2) # store x3 (0xaa6e06d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000aa6e06d4 from memory into f17
li x3, 0xf3745b56 # load x3 with 32 MSBs 0x00000000f3745b56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3745b56
sw x3, 0(x2) # store x3 (0xf3745b56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f3745b56 from memory into f27
fmadd.d f1, f11, f17, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x30, 0x0f37b399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x05e951ff # load x3 with 32 MSBs 0x0000000005e951ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005e951ff
sw x3, 0(x2) # store x3 (0x05e951ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000005e951ff from memory into f12
li x3, 0x2a8f87a4 # load x3 with 32 MSBs 0x000000002a8f87a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a8f87a4
sw x3, 0(x2) # store x3 (0x2a8f87a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002a8f87a4 from memory into f21
li x3, 0xdd239b56 # load x3 with 32 MSBs 0x00000000dd239b56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd239b56
sw x3, 0(x2) # store x3 (0xdd239b56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000dd239b56 from memory into f1
fmadd.d f30, f12, f21, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x17, 0x4765b780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x825c7ae4 # load x3 with 32 MSBs 0x00000000825c7ae4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000825c7ae4
sw x3, 0(x2) # store x3 (0x825c7ae4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000825c7ae4 from memory into f13
li x3, 0x379af2e9 # load x3 with 32 MSBs 0x00000000379af2e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000379af2e9
sw x3, 0(x2) # store x3 (0x379af2e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000379af2e9 from memory into f27
li x3, 0xb2b7f404 # load x3 with 32 MSBs 0x00000000b2b7f404
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2b7f404
sw x3, 0(x2) # store x3 (0xb2b7f404) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b2b7f404 from memory into f4
fmadd.d f17, f13, f27, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x16, 0x2a2a3d60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25bd63f9 # load x3 with 32 MSBs 0x0000000025bd63f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025bd63f9
sw x3, 0(x2) # store x3 (0x25bd63f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000025bd63f9 from memory into f14
li x3, 0x52c54e2f # load x3 with 32 MSBs 0x0000000052c54e2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052c54e2f
sw x3, 0(x2) # store x3 (0x52c54e2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000052c54e2f from memory into f3
li x3, 0xd65d82b1 # load x3 with 32 MSBs 0x00000000d65d82b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d65d82b1
sw x3, 0(x2) # store x3 (0xd65d82b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d65d82b1 from memory into f12
fmadd.d f16, f14, f3, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x5, 0xede02f3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x202d389e # load x3 with 32 MSBs 0x00000000202d389e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000202d389e
sw x3, 0(x2) # store x3 (0x202d389e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000202d389e from memory into f15
li x3, 0xf44f54fd # load x3 with 32 MSBs 0x00000000f44f54fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f44f54fd
sw x3, 0(x2) # store x3 (0xf44f54fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000f44f54fd from memory into f25
li x3, 0x8488262e # load x3 with 32 MSBs 0x000000008488262e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008488262e
sw x3, 0(x2) # store x3 (0x8488262e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000008488262e from memory into f1
fmadd.d f5, f15, f25, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x20, 0x4ce80054 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xda9fbcdf # load x3 with 32 MSBs 0x00000000da9fbcdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da9fbcdf
sw x3, 0(x2) # store x3 (0xda9fbcdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000da9fbcdf from memory into f16
li x3, 0xde9bacf0 # load x3 with 32 MSBs 0x00000000de9bacf0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de9bacf0
sw x3, 0(x2) # store x3 (0xde9bacf0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000de9bacf0 from memory into f25
li x3, 0x63a5eb94 # load x3 with 32 MSBs 0x0000000063a5eb94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063a5eb94
sw x3, 0(x2) # store x3 (0x63a5eb94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000063a5eb94 from memory into f24
fmadd.d f20, f16, f25, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x6, 0x7ebfc656 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c29963c # load x3 with 32 MSBs 0x000000007c29963c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c29963c
sw x3, 0(x2) # store x3 (0x7c29963c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000007c29963c from memory into f17
li x3, 0x63a81e1c # load x3 with 32 MSBs 0x0000000063a81e1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063a81e1c
sw x3, 0(x2) # store x3 (0x63a81e1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000063a81e1c from memory into f21
li x3, 0x1419fe5c # load x3 with 32 MSBs 0x000000001419fe5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001419fe5c
sw x3, 0(x2) # store x3 (0x1419fe5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001419fe5c from memory into f20
fmadd.d f6, f17, f21, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x7, 0x9046c9e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd20ff975 # load x3 with 32 MSBs 0x00000000d20ff975
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d20ff975
sw x3, 0(x2) # store x3 (0xd20ff975) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d20ff975 from memory into f18
li x3, 0x379a26ee # load x3 with 32 MSBs 0x00000000379a26ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000379a26ee
sw x3, 0(x2) # store x3 (0x379a26ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000379a26ee from memory into f25
li x3, 0x61104eaf # load x3 with 32 MSBs 0x0000000061104eaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061104eaf
sw x3, 0(x2) # store x3 (0x61104eaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000061104eaf from memory into f27
fmadd.d f7, f18, f25, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x19, 0xc684f8cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa8b1753c # load x3 with 32 MSBs 0x00000000a8b1753c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8b1753c
sw x3, 0(x2) # store x3 (0xa8b1753c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000a8b1753c from memory into f19
li x3, 0xad767f16 # load x3 with 32 MSBs 0x00000000ad767f16
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad767f16
sw x3, 0(x2) # store x3 (0xad767f16) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ad767f16 from memory into f24
li x3, 0x500907ad # load x3 with 32 MSBs 0x00000000500907ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000500907ad
sw x3, 0(x2) # store x3 (0x500907ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000500907ad from memory into f6
fmadd.d f19, f19, f24, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x5, 0x42b5eedb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x672ea458 # load x3 with 32 MSBs 0x00000000672ea458
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000672ea458
sw x3, 0(x2) # store x3 (0x672ea458) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000672ea458 from memory into f20
li x3, 0xb402253f # load x3 with 32 MSBs 0x00000000b402253f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b402253f
sw x3, 0(x2) # store x3 (0xb402253f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b402253f from memory into f8
li x3, 0x779a1381 # load x3 with 32 MSBs 0x00000000779a1381
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000779a1381
sw x3, 0(x2) # store x3 (0x779a1381) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000779a1381 from memory into f3
fmadd.d f5, f20, f8, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x9, 0xf67a0f59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad258cbe # load x3 with 32 MSBs 0x00000000ad258cbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad258cbe
sw x3, 0(x2) # store x3 (0xad258cbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ad258cbe from memory into f21
li x3, 0x25886347 # load x3 with 32 MSBs 0x0000000025886347
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025886347
sw x3, 0(x2) # store x3 (0x25886347) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000025886347 from memory into f7
li x3, 0xa969ae4e # load x3 with 32 MSBs 0x00000000a969ae4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a969ae4e
sw x3, 0(x2) # store x3 (0xa969ae4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a969ae4e from memory into f3
fmadd.d f9, f21, f7, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x12, 0x591e387e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c5fe412 # load x3 with 32 MSBs 0x000000004c5fe412
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c5fe412
sw x3, 0(x2) # store x3 (0x4c5fe412) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004c5fe412 from memory into f22
li x3, 0xf8a12e3f # load x3 with 32 MSBs 0x00000000f8a12e3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8a12e3f
sw x3, 0(x2) # store x3 (0xf8a12e3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f8a12e3f from memory into f19
li x3, 0xc3b45c39 # load x3 with 32 MSBs 0x00000000c3b45c39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3b45c39
sw x3, 0(x2) # store x3 (0xc3b45c39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c3b45c39 from memory into f5
fmadd.d f12, f22, f19, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x28, 0x652bad78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87cfd74a # load x3 with 32 MSBs 0x0000000087cfd74a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087cfd74a
sw x3, 0(x2) # store x3 (0x87cfd74a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000087cfd74a from memory into f23
li x3, 0xea5e6e33 # load x3 with 32 MSBs 0x00000000ea5e6e33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea5e6e33
sw x3, 0(x2) # store x3 (0xea5e6e33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ea5e6e33 from memory into f27
li x3, 0xc0652e36 # load x3 with 32 MSBs 0x00000000c0652e36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0652e36
sw x3, 0(x2) # store x3 (0xc0652e36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c0652e36 from memory into f8
fmadd.d f28, f23, f27, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x5, 0xa481d91b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98f1403d # load x3 with 32 MSBs 0x0000000098f1403d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098f1403d
sw x3, 0(x2) # store x3 (0x98f1403d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000098f1403d from memory into f24
li x3, 0x76359e39 # load x3 with 32 MSBs 0x0000000076359e39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076359e39
sw x3, 0(x2) # store x3 (0x76359e39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000076359e39 from memory into f18
li x3, 0xcbf5f21a # load x3 with 32 MSBs 0x00000000cbf5f21a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbf5f21a
sw x3, 0(x2) # store x3 (0xcbf5f21a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000cbf5f21a from memory into f8
fmadd.d f5, f24, f18, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x28, 0xe72a34c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe4fec8dc # load x3 with 32 MSBs 0x00000000e4fec8dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4fec8dc
sw x3, 0(x2) # store x3 (0xe4fec8dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e4fec8dc from memory into f25
li x3, 0x4c4224e8 # load x3 with 32 MSBs 0x000000004c4224e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c4224e8
sw x3, 0(x2) # store x3 (0x4c4224e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004c4224e8 from memory into f24
li x3, 0x7061ad51 # load x3 with 32 MSBs 0x000000007061ad51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007061ad51
sw x3, 0(x2) # store x3 (0x7061ad51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000007061ad51 from memory into f23
fmadd.d f28, f25, f24, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x8, 0xa7e9cb71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff64e41e # load x3 with 32 MSBs 0x00000000ff64e41e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff64e41e
sw x3, 0(x2) # store x3 (0xff64e41e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ff64e41e from memory into f26
li x3, 0xb488976e # load x3 with 32 MSBs 0x00000000b488976e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b488976e
sw x3, 0(x2) # store x3 (0xb488976e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b488976e from memory into f10
li x3, 0xb32bce7f # load x3 with 32 MSBs 0x00000000b32bce7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b32bce7f
sw x3, 0(x2) # store x3 (0xb32bce7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b32bce7f from memory into f25
fmadd.d f8, f26, f10, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x27, 0x35896235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62968e35 # load x3 with 32 MSBs 0x0000000062968e35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062968e35
sw x3, 0(x2) # store x3 (0x62968e35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000062968e35 from memory into f27
li x3, 0xf325a1ca # load x3 with 32 MSBs 0x00000000f325a1ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f325a1ca
sw x3, 0(x2) # store x3 (0xf325a1ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f325a1ca from memory into f1
li x3, 0xfa7b45b4 # load x3 with 32 MSBs 0x00000000fa7b45b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa7b45b4
sw x3, 0(x2) # store x3 (0xfa7b45b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000fa7b45b4 from memory into f12
fmadd.d f27, f27, f1, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x5, 0xb0220efe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e28678b # load x3 with 32 MSBs 0x000000008e28678b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e28678b
sw x3, 0(x2) # store x3 (0x8e28678b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008e28678b from memory into f28
li x3, 0x00749f71 # load x3 with 32 MSBs 0x0000000000749f71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000749f71
sw x3, 0(x2) # store x3 (0x00749f71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000749f71 from memory into f15
li x3, 0x1e6d48d8 # load x3 with 32 MSBs 0x000000001e6d48d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e6d48d8
sw x3, 0(x2) # store x3 (0x1e6d48d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000001e6d48d8 from memory into f18
fmadd.d f5, f28, f15, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x2, 0xb42c0869 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe530d7a9 # load x3 with 32 MSBs 0x00000000e530d7a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e530d7a9
sw x3, 0(x2) # store x3 (0xe530d7a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e530d7a9 from memory into f29
li x3, 0xd02a8025 # load x3 with 32 MSBs 0x00000000d02a8025
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d02a8025
sw x3, 0(x2) # store x3 (0xd02a8025) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d02a8025 from memory into f30
li x3, 0xedd4aaf3 # load x3 with 32 MSBs 0x00000000edd4aaf3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edd4aaf3
sw x3, 0(x2) # store x3 (0xedd4aaf3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000edd4aaf3 from memory into f27
fmadd.d f2, f29, f30, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x12, 0xc37550c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8de4c3f # load x3 with 32 MSBs 0x00000000b8de4c3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8de4c3f
sw x3, 0(x2) # store x3 (0xb8de4c3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b8de4c3f from memory into f30
li x3, 0x3bff8cca # load x3 with 32 MSBs 0x000000003bff8cca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bff8cca
sw x3, 0(x2) # store x3 (0x3bff8cca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000003bff8cca from memory into f14
li x3, 0x7e95b0fb # load x3 with 32 MSBs 0x000000007e95b0fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e95b0fb
sw x3, 0(x2) # store x3 (0x7e95b0fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007e95b0fb from memory into f18
fmadd.d f12, f30, f14, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x26, 0x05520cf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbe8f930 # load x3 with 32 MSBs 0x00000000dbe8f930
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbe8f930
sw x3, 0(x2) # store x3 (0xdbe8f930) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000dbe8f930 from memory into f31
li x3, 0x069efac0 # load x3 with 32 MSBs 0x00000000069efac0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000069efac0
sw x3, 0(x2) # store x3 (0x069efac0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000069efac0 from memory into f2
li x3, 0x8ec24556 # load x3 with 32 MSBs 0x000000008ec24556
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ec24556
sw x3, 0(x2) # store x3 (0x8ec24556) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008ec24556 from memory into f28
fmadd.d f26, f31, f2, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x10, 0x7ea2a0f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc8031593 # load x3 with 32 MSBs 0x00000000c8031593
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8031593
sw x3, 0(x2) # store x3 (0xc8031593) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c8031593 from memory into f21
li x3, 0xe1a16411 # load x3 with 32 MSBs 0x00000000e1a16411
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1a16411
sw x3, 0(x2) # store x3 (0xe1a16411) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000e1a16411 from memory into f0
li x3, 0x91d68dc4 # load x3 with 32 MSBs 0x0000000091d68dc4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091d68dc4
sw x3, 0(x2) # store x3 (0x91d68dc4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000091d68dc4 from memory into f1
fmadd.d f10, f21, f0, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x24, 0x037a828b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe133d9e0 # load x3 with 32 MSBs 0x00000000e133d9e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e133d9e0
sw x3, 0(x2) # store x3 (0xe133d9e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e133d9e0 from memory into f13
li x3, 0xd8dacec6 # load x3 with 32 MSBs 0x00000000d8dacec6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8dacec6
sw x3, 0(x2) # store x3 (0xd8dacec6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d8dacec6 from memory into f1
li x3, 0x055e5a65 # load x3 with 32 MSBs 0x00000000055e5a65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000055e5a65
sw x3, 0(x2) # store x3 (0x055e5a65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000055e5a65 from memory into f10
fmadd.d f24, f13, f1, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x19, 0xfc59ecf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x117914dc # load x3 with 32 MSBs 0x00000000117914dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000117914dc
sw x3, 0(x2) # store x3 (0x117914dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000117914dc from memory into f18
li x3, 0xcec1162e # load x3 with 32 MSBs 0x00000000cec1162e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cec1162e
sw x3, 0(x2) # store x3 (0xcec1162e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000cec1162e from memory into f2
li x3, 0x55684225 # load x3 with 32 MSBs 0x0000000055684225
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055684225
sw x3, 0(x2) # store x3 (0x55684225) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000055684225 from memory into f8
fmadd.d f19, f18, f2, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x7, 0x6192d7f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd70a432f # load x3 with 32 MSBs 0x00000000d70a432f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d70a432f
sw x3, 0(x2) # store x3 (0xd70a432f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d70a432f from memory into f23
li x3, 0xa60bc5c4 # load x3 with 32 MSBs 0x00000000a60bc5c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a60bc5c4
sw x3, 0(x2) # store x3 (0xa60bc5c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a60bc5c4 from memory into f3
li x3, 0x20603cfe # load x3 with 32 MSBs 0x0000000020603cfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020603cfe
sw x3, 0(x2) # store x3 (0x20603cfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000020603cfe from memory into f23
fmadd.d f7, f23, f3, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x31, 0x9946f90d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe26b9f33 # load x3 with 32 MSBs 0x00000000e26b9f33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e26b9f33
sw x3, 0(x2) # store x3 (0xe26b9f33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e26b9f33 from memory into f25
li x3, 0xcbc20525 # load x3 with 32 MSBs 0x00000000cbc20525
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbc20525
sw x3, 0(x2) # store x3 (0xcbc20525) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000cbc20525 from memory into f4
li x3, 0x3d941f38 # load x3 with 32 MSBs 0x000000003d941f38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d941f38
sw x3, 0(x2) # store x3 (0x3d941f38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003d941f38 from memory into f9
fmadd.d f31, f25, f4, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x16, 0x5238d6f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x127a10a1 # load x3 with 32 MSBs 0x00000000127a10a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000127a10a1
sw x3, 0(x2) # store x3 (0x127a10a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000127a10a1 from memory into f29
li x3, 0x28ed0279 # load x3 with 32 MSBs 0x0000000028ed0279
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028ed0279
sw x3, 0(x2) # store x3 (0x28ed0279) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000028ed0279 from memory into f5
li x3, 0xfcf25483 # load x3 with 32 MSBs 0x00000000fcf25483
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcf25483
sw x3, 0(x2) # store x3 (0xfcf25483) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fcf25483 from memory into f18
fmadd.d f16, f29, f5, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x30, 0x65b2b0c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc998527e # load x3 with 32 MSBs 0x00000000c998527e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c998527e
sw x3, 0(x2) # store x3 (0xc998527e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c998527e from memory into f24
li x3, 0x60c0de8b # load x3 with 32 MSBs 0x0000000060c0de8b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060c0de8b
sw x3, 0(x2) # store x3 (0x60c0de8b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000060c0de8b from memory into f6
li x3, 0x4f1b5bf4 # load x3 with 32 MSBs 0x000000004f1b5bf4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f1b5bf4
sw x3, 0(x2) # store x3 (0x4f1b5bf4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004f1b5bf4 from memory into f2
fmadd.d f30, f24, f6, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x4, 0xca85696c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b8f5296 # load x3 with 32 MSBs 0x000000004b8f5296
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b8f5296
sw x3, 0(x2) # store x3 (0x4b8f5296) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004b8f5296 from memory into f15
li x3, 0x5fa073a1 # load x3 with 32 MSBs 0x000000005fa073a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fa073a1
sw x3, 0(x2) # store x3 (0x5fa073a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005fa073a1 from memory into f7
li x3, 0xac5f1b65 # load x3 with 32 MSBs 0x00000000ac5f1b65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac5f1b65
sw x3, 0(x2) # store x3 (0xac5f1b65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ac5f1b65 from memory into f7
fmadd.d f4, f15, f7, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x3, 0x7de8ce7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77262fbf # load x3 with 32 MSBs 0x0000000077262fbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077262fbf
sw x3, 0(x2) # store x3 (0x77262fbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000077262fbf from memory into f22
li x3, 0x1d2e1cba # load x3 with 32 MSBs 0x000000001d2e1cba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d2e1cba
sw x3, 0(x2) # store x3 (0x1d2e1cba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001d2e1cba from memory into f8
li x3, 0xe4190c79 # load x3 with 32 MSBs 0x00000000e4190c79
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4190c79
sw x3, 0(x2) # store x3 (0xe4190c79) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e4190c79 from memory into f10
fmadd.d f3, f22, f8, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x4, 0x95fe65ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62bd9d99 # load x3 with 32 MSBs 0x0000000062bd9d99
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062bd9d99
sw x3, 0(x2) # store x3 (0x62bd9d99) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000062bd9d99 from memory into f3
li x3, 0x1d507ebc # load x3 with 32 MSBs 0x000000001d507ebc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d507ebc
sw x3, 0(x2) # store x3 (0x1d507ebc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000001d507ebc from memory into f9
li x3, 0x2e0fe408 # load x3 with 32 MSBs 0x000000002e0fe408
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e0fe408
sw x3, 0(x2) # store x3 (0x2e0fe408) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002e0fe408 from memory into f5
fmadd.d f4, f3, f9, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x3, 0xc985d939 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0152da97 # load x3 with 32 MSBs 0x000000000152da97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000152da97
sw x3, 0(x2) # store x3 (0x0152da97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000152da97 from memory into f22
li x3, 0x3260582d # load x3 with 32 MSBs 0x000000003260582d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003260582d
sw x3, 0(x2) # store x3 (0x3260582d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003260582d from memory into f10
li x3, 0x77183a6e # load x3 with 32 MSBs 0x0000000077183a6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077183a6e
sw x3, 0(x2) # store x3 (0x77183a6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000077183a6e from memory into f20
fmadd.d f3, f22, f10, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x16, 0x8b2a88ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf594af35 # load x3 with 32 MSBs 0x00000000f594af35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f594af35
sw x3, 0(x2) # store x3 (0xf594af35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f594af35 from memory into f2
li x3, 0xa7436df9 # load x3 with 32 MSBs 0x00000000a7436df9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7436df9
sw x3, 0(x2) # store x3 (0xa7436df9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000a7436df9 from memory into f11
li x3, 0x9c1f6545 # load x3 with 32 MSBs 0x000000009c1f6545
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c1f6545
sw x3, 0(x2) # store x3 (0x9c1f6545) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000009c1f6545 from memory into f8
fmadd.d f16, f2, f11, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x23, 0xf41a7d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3b467e30 # load x3 with 32 MSBs 0x000000003b467e30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b467e30
sw x3, 0(x2) # store x3 (0x3b467e30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003b467e30 from memory into f13
li x3, 0x7198bb6f # load x3 with 32 MSBs 0x000000007198bb6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007198bb6f
sw x3, 0(x2) # store x3 (0x7198bb6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007198bb6f from memory into f12
li x3, 0xfd806263 # load x3 with 32 MSBs 0x00000000fd806263
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd806263
sw x3, 0(x2) # store x3 (0xfd806263) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000fd806263 from memory into f28
fmadd.d f23, f13, f12, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x24, 0xf6db6574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x963d36ab # load x3 with 32 MSBs 0x00000000963d36ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000963d36ab
sw x3, 0(x2) # store x3 (0x963d36ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000963d36ab from memory into f27
li x3, 0xb2e8a822 # load x3 with 32 MSBs 0x00000000b2e8a822
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2e8a822
sw x3, 0(x2) # store x3 (0xb2e8a822) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b2e8a822 from memory into f13
li x3, 0x9b1c2185 # load x3 with 32 MSBs 0x000000009b1c2185
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b1c2185
sw x3, 0(x2) # store x3 (0x9b1c2185) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009b1c2185 from memory into f12
fmadd.d f24, f27, f13, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x5, 0x1355eefe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbedaa792 # load x3 with 32 MSBs 0x00000000bedaa792
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bedaa792
sw x3, 0(x2) # store x3 (0xbedaa792) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000bedaa792 from memory into f8
li x3, 0x06c38dad # load x3 with 32 MSBs 0x0000000006c38dad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006c38dad
sw x3, 0(x2) # store x3 (0x06c38dad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000006c38dad from memory into f14
li x3, 0xdb0a537c # load x3 with 32 MSBs 0x00000000db0a537c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db0a537c
sw x3, 0(x2) # store x3 (0xdb0a537c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000db0a537c from memory into f9
fmadd.d f5, f8, f14, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x11, 0xbbf50beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40757b2b # load x3 with 32 MSBs 0x0000000040757b2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040757b2b
sw x3, 0(x2) # store x3 (0x40757b2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000040757b2b from memory into f7
li x3, 0xf39eae27 # load x3 with 32 MSBs 0x00000000f39eae27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f39eae27
sw x3, 0(x2) # store x3 (0xf39eae27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f39eae27 from memory into f15
li x3, 0x0d2c559a # load x3 with 32 MSBs 0x000000000d2c559a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d2c559a
sw x3, 0(x2) # store x3 (0x0d2c559a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000d2c559a from memory into f12
fmadd.d f11, f7, f15, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x25, 0xf0e60232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x66aedb3a # load x3 with 32 MSBs 0x0000000066aedb3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066aedb3a
sw x3, 0(x2) # store x3 (0x66aedb3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000066aedb3a from memory into f3
li x3, 0x3fe31dd2 # load x3 with 32 MSBs 0x000000003fe31dd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003fe31dd2
sw x3, 0(x2) # store x3 (0x3fe31dd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003fe31dd2 from memory into f16
li x3, 0xee0f56dc # load x3 with 32 MSBs 0x00000000ee0f56dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee0f56dc
sw x3, 0(x2) # store x3 (0xee0f56dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ee0f56dc from memory into f31
fmadd.d f25, f3, f16, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x8, 0xce46f291 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d53e417 # load x3 with 32 MSBs 0x000000009d53e417
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d53e417
sw x3, 0(x2) # store x3 (0x9d53e417) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009d53e417 from memory into f3
li x3, 0x5ba77d71 # load x3 with 32 MSBs 0x000000005ba77d71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ba77d71
sw x3, 0(x2) # store x3 (0x5ba77d71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005ba77d71 from memory into f17
li x3, 0x396d55ef # load x3 with 32 MSBs 0x00000000396d55ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000396d55ef
sw x3, 0(x2) # store x3 (0x396d55ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000396d55ef from memory into f7
fmadd.d f8, f3, f17, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x27, 0x566783b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x56ff39bb # load x3 with 32 MSBs 0x0000000056ff39bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056ff39bb
sw x3, 0(x2) # store x3 (0x56ff39bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000056ff39bb from memory into f10
li x3, 0x602a8186 # load x3 with 32 MSBs 0x00000000602a8186
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000602a8186
sw x3, 0(x2) # store x3 (0x602a8186) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000602a8186 from memory into f18
li x3, 0xb0591a91 # load x3 with 32 MSBs 0x00000000b0591a91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0591a91
sw x3, 0(x2) # store x3 (0xb0591a91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b0591a91 from memory into f20
fmadd.d f27, f10, f18, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x23, 0x0527a07a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5b394485 # load x3 with 32 MSBs 0x000000005b394485
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b394485
sw x3, 0(x2) # store x3 (0x5b394485) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000005b394485 from memory into f10
li x3, 0xc544f18f # load x3 with 32 MSBs 0x00000000c544f18f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c544f18f
sw x3, 0(x2) # store x3 (0xc544f18f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c544f18f from memory into f19
li x3, 0xd206df5e # load x3 with 32 MSBs 0x00000000d206df5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d206df5e
sw x3, 0(x2) # store x3 (0xd206df5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d206df5e from memory into f27
fmadd.d f23, f10, f19, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x6, 0x7137ba90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0b4f2480 # load x3 with 32 MSBs 0x000000000b4f2480
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b4f2480
sw x3, 0(x2) # store x3 (0x0b4f2480) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000b4f2480 from memory into f22
li x3, 0x5be66e3b # load x3 with 32 MSBs 0x000000005be66e3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005be66e3b
sw x3, 0(x2) # store x3 (0x5be66e3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000005be66e3b from memory into f20
li x3, 0xb804c970 # load x3 with 32 MSBs 0x00000000b804c970
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b804c970
sw x3, 0(x2) # store x3 (0xb804c970) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b804c970 from memory into f2
fmadd.d f6, f22, f20, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x13, 0xad55c90f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x621e5259 # load x3 with 32 MSBs 0x00000000621e5259
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000621e5259
sw x3, 0(x2) # store x3 (0x621e5259) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000621e5259 from memory into f29
li x3, 0x03420f01 # load x3 with 32 MSBs 0x0000000003420f01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003420f01
sw x3, 0(x2) # store x3 (0x03420f01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000003420f01 from memory into f21
li x3, 0x95ee6401 # load x3 with 32 MSBs 0x0000000095ee6401
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095ee6401
sw x3, 0(x2) # store x3 (0x95ee6401) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000095ee6401 from memory into f6
fmadd.d f13, f29, f21, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x28, 0xec754d86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x02f00f33 # load x3 with 32 MSBs 0x0000000002f00f33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002f00f33
sw x3, 0(x2) # store x3 (0x02f00f33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000002f00f33 from memory into f30
li x3, 0x692357bc # load x3 with 32 MSBs 0x00000000692357bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000692357bc
sw x3, 0(x2) # store x3 (0x692357bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000692357bc from memory into f22
li x3, 0x40ab8ed5 # load x3 with 32 MSBs 0x0000000040ab8ed5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040ab8ed5
sw x3, 0(x2) # store x3 (0x40ab8ed5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000040ab8ed5 from memory into f10
fmadd.d f28, f30, f22, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x10, 0x43e2ddaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x936ee965 # load x3 with 32 MSBs 0x00000000936ee965
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000936ee965
sw x3, 0(x2) # store x3 (0x936ee965) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000936ee965 from memory into f6
li x3, 0xbe6f9d77 # load x3 with 32 MSBs 0x00000000be6f9d77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be6f9d77
sw x3, 0(x2) # store x3 (0xbe6f9d77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000be6f9d77 from memory into f23
li x3, 0x1551ff01 # load x3 with 32 MSBs 0x000000001551ff01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001551ff01
sw x3, 0(x2) # store x3 (0x1551ff01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001551ff01 from memory into f22
fmadd.d f10, f6, f23, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x8, 0x96b8aa20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf7f0d72f # load x3 with 32 MSBs 0x00000000f7f0d72f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7f0d72f
sw x3, 0(x2) # store x3 (0xf7f0d72f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f7f0d72f from memory into f9
li x3, 0x5e9516a8 # load x3 with 32 MSBs 0x000000005e9516a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e9516a8
sw x3, 0(x2) # store x3 (0x5e9516a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005e9516a8 from memory into f24
li x3, 0x4c9cf9b7 # load x3 with 32 MSBs 0x000000004c9cf9b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c9cf9b7
sw x3, 0(x2) # store x3 (0x4c9cf9b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004c9cf9b7 from memory into f24
fmadd.d f8, f9, f24, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x7, 0xf030b439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xacb76f28 # load x3 with 32 MSBs 0x00000000acb76f28
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000acb76f28
sw x3, 0(x2) # store x3 (0xacb76f28) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000acb76f28 from memory into f31
li x3, 0x1aa0babd # load x3 with 32 MSBs 0x000000001aa0babd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001aa0babd
sw x3, 0(x2) # store x3 (0x1aa0babd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001aa0babd from memory into f25
li x3, 0xb19e8f56 # load x3 with 32 MSBs 0x00000000b19e8f56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b19e8f56
sw x3, 0(x2) # store x3 (0xb19e8f56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b19e8f56 from memory into f23
fmadd.d f7, f31, f25, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x18, 0xc0d3e639 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x24bd6d22 # load x3 with 32 MSBs 0x0000000024bd6d22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024bd6d22
sw x3, 0(x2) # store x3 (0x24bd6d22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000024bd6d22 from memory into f19
li x3, 0xfc150509 # load x3 with 32 MSBs 0x00000000fc150509
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc150509
sw x3, 0(x2) # store x3 (0xfc150509) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000fc150509 from memory into f26
li x3, 0xf6c02b53 # load x3 with 32 MSBs 0x00000000f6c02b53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6c02b53
sw x3, 0(x2) # store x3 (0xf6c02b53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f6c02b53 from memory into f10
fmadd.d f18, f19, f26, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x31, 0xc99b4ef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb31122b # load x3 with 32 MSBs 0x00000000cb31122b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb31122b
sw x3, 0(x2) # store x3 (0xcb31122b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000cb31122b from memory into f8
li x3, 0x99557f2a # load x3 with 32 MSBs 0x0000000099557f2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099557f2a
sw x3, 0(x2) # store x3 (0x99557f2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000099557f2a from memory into f27
li x3, 0x49a338e4 # load x3 with 32 MSBs 0x0000000049a338e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049a338e4
sw x3, 0(x2) # store x3 (0x49a338e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000049a338e4 from memory into f19
fmadd.d f31, f8, f27, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x20, 0x261919fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3e57a75 # load x3 with 32 MSBs 0x00000000b3e57a75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3e57a75
sw x3, 0(x2) # store x3 (0xb3e57a75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b3e57a75 from memory into f25
li x3, 0x845e6e24 # load x3 with 32 MSBs 0x00000000845e6e24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000845e6e24
sw x3, 0(x2) # store x3 (0x845e6e24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000845e6e24 from memory into f28
li x3, 0x531ac1eb # load x3 with 32 MSBs 0x00000000531ac1eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000531ac1eb
sw x3, 0(x2) # store x3 (0x531ac1eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000531ac1eb from memory into f26
fmadd.d f20, f25, f28, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x14, 0xc1aee4e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x68e53e8e # load x3 with 32 MSBs 0x0000000068e53e8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068e53e8e
sw x3, 0(x2) # store x3 (0x68e53e8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000068e53e8e from memory into f13
li x3, 0x0d6ce23f # load x3 with 32 MSBs 0x000000000d6ce23f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d6ce23f
sw x3, 0(x2) # store x3 (0x0d6ce23f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000d6ce23f from memory into f29
li x3, 0x0b691141 # load x3 with 32 MSBs 0x000000000b691141
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b691141
sw x3, 0(x2) # store x3 (0x0b691141) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000b691141 from memory into f17
fmadd.d f14, f13, f29, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x8, 0x82f906c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ffcbdd2 # load x3 with 32 MSBs 0x000000006ffcbdd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ffcbdd2
sw x3, 0(x2) # store x3 (0x6ffcbdd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006ffcbdd2 from memory into f22
li x3, 0x9237cd46 # load x3 with 32 MSBs 0x000000009237cd46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009237cd46
sw x3, 0(x2) # store x3 (0x9237cd46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009237cd46 from memory into f30
li x3, 0x852d2d11 # load x3 with 32 MSBs 0x00000000852d2d11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000852d2d11
sw x3, 0(x2) # store x3 (0x852d2d11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000852d2d11 from memory into f12
fmadd.d f8, f22, f30, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x7, 0x5b9fbe83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x18d68d65 # load x3 with 32 MSBs 0x0000000018d68d65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018d68d65
sw x3, 0(x2) # store x3 (0x18d68d65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000018d68d65 from memory into f30
li x3, 0x33b88040 # load x3 with 32 MSBs 0x0000000033b88040
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033b88040
sw x3, 0(x2) # store x3 (0x33b88040) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000033b88040 from memory into f31
li x3, 0xda85599e # load x3 with 32 MSBs 0x00000000da85599e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da85599e
sw x3, 0(x2) # store x3 (0xda85599e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000da85599e from memory into f20
fmadd.d f7, f30, f31, f20 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
